{"modules":[{"ast":{"type":"Program","start":0,"end":1753,"body":[{"type":"ImportDeclaration","start":0,"end":41,"specifiers":[{"type":"ImportSpecifier","start":9,"end":17,"imported":{"type":"Identifier","start":9,"end":17,"name":"NgModule"},"local":{"type":"Identifier","start":9,"end":17,"name":"NgModule"}}],"source":{"type":"Literal","start":25,"end":40,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":43,"end":79,"specifiers":[{"type":"ImportNamespaceSpecifier","start":50,"end":57,"local":{"type":"Identifier","start":55,"end":57,"name":"i0"}}],"source":{"type":"Literal","start":63,"end":78,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ExportNamedDeclaration","start":131,"end":165,"declaration":{"type":"ClassDeclaration","start":138,"end":165,"id":{"type":"Identifier","start":144,"end":160,"name":"XliffmergeModule"},"superClass":null,"body":{"type":"ClassBody","start":161,"end":165,"body":[]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":205,"end":308,"expression":{"type":"AssignmentExpression","start":205,"end":307,"operator":"=","left":{"type":"MemberExpression","start":205,"end":226,"object":{"type":"Identifier","start":205,"end":221,"name":"XliffmergeModule"},"property":{"type":"Identifier","start":222,"end":226,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"FunctionExpression","start":229,"end":307,"id":{"type":"Identifier","start":238,"end":262,"name":"XliffmergeModule_Factory"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":263,"end":264,"name":"t"}],"body":{"type":"BlockStatement","start":266,"end":307,"body":[{"type":"ReturnStatement","start":268,"end":305,"argument":{"type":"NewExpression","start":275,"end":304,"callee":{"type":"LogicalExpression","start":280,"end":301,"left":{"type":"Identifier","start":280,"end":281,"name":"t"},"operator":"||","right":{"type":"Identifier","start":285,"end":301,"name":"XliffmergeModule"}},"arguments":[]}}]}}}},{"type":"ExpressionStatement","start":348,"end":446,"expression":{"type":"AssignmentExpression","start":348,"end":445,"operator":"=","left":{"type":"MemberExpression","start":348,"end":369,"object":{"type":"Identifier","start":348,"end":364,"name":"XliffmergeModule"},"property":{"type":"Identifier","start":365,"end":369,"name":"ɵmod"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":398,"end":445,"callee":{"type":"MemberExpression","start":398,"end":417,"object":{"type":"Identifier","start":398,"end":400,"name":"i0"},"property":{"type":"Identifier","start":401,"end":417,"name":"ɵɵdefineNgModule"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":418,"end":444,"properties":[{"type":"Property","start":420,"end":442,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":420,"end":424,"name":"type"},"value":{"type":"Identifier","start":426,"end":442,"name":"XliffmergeModule"},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":486,"end":575,"expression":{"type":"AssignmentExpression","start":486,"end":574,"operator":"=","left":{"type":"MemberExpression","start":486,"end":507,"object":{"type":"Identifier","start":486,"end":502,"name":"XliffmergeModule"},"property":{"type":"Identifier","start":503,"end":507,"name":"ɵinj"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":536,"end":574,"callee":{"type":"MemberExpression","start":536,"end":555,"object":{"type":"Identifier","start":536,"end":538,"name":"i0"},"property":{"type":"Identifier","start":539,"end":555,"name":"ɵɵdefineInjector"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":556,"end":573,"properties":[{"type":"Property","start":558,"end":571,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":558,"end":565,"name":"imports"},"value":{"type":"ArrayExpression","start":567,"end":571,"elements":[{"type":"ArrayExpression","start":568,"end":570,"elements":[]}]},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":577,"end":865,"expression":{"type":"CallExpression","start":577,"end":864,"callee":{"type":"FunctionExpression","start":578,"end":861,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":590,"end":861,"body":[{"type":"ExpressionStatement","start":592,"end":859,"expression":{"type":"LogicalExpression","start":592,"end":858,"left":{"type":"LogicalExpression","start":593,"end":638,"left":{"type":"BinaryExpression","start":593,"end":625,"left":{"type":"UnaryExpression","start":593,"end":609,"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":600,"end":609,"name":"ngDevMode"}},"operator":"===","right":{"type":"Literal","start":614,"end":625,"value":"undefined","raw":"\"undefined\""}},"operator":"||","right":{"type":"Identifier","start":629,"end":638,"name":"ngDevMode"}},"operator":"&&","right":{"type":"CallExpression","start":643,"end":858,"callee":{"type":"MemberExpression","start":643,"end":663,"object":{"type":"Identifier","start":643,"end":645,"name":"i0"},"property":{"type":"Identifier","start":646,"end":663,"name":"ɵsetClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":664,"end":680,"name":"XliffmergeModule"},{"type":"ArrayExpression","start":682,"end":845,"elements":[{"type":"ObjectExpression","start":683,"end":844,"properties":[{"type":"Property","start":694,"end":708,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":694,"end":698,"name":"type"},"value":{"type":"Identifier","start":700,"end":708,"name":"NgModule"},"kind":"init"},{"type":"Property","start":719,"end":837,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":719,"end":723,"name":"args"},"value":{"type":"ArrayExpression","start":725,"end":837,"elements":[{"type":"ObjectExpression","start":726,"end":836,"properties":[{"type":"Property","start":745,"end":756,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":745,"end":752,"name":"imports"},"value":{"type":"ArrayExpression","start":754,"end":756,"elements":[]},"kind":"init"},{"type":"Property","start":775,"end":791,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":775,"end":787,"name":"declarations"},"value":{"type":"ArrayExpression","start":789,"end":791,"elements":[]},"kind":"init"},{"type":"Property","start":810,"end":821,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":810,"end":817,"name":"exports"},"value":{"type":"ArrayExpression","start":819,"end":821,"elements":[]},"kind":"init"}]}]},"kind":"init"}]}]},{"type":"Literal","start":847,"end":851,"value":null,"raw":"null"},{"type":"Literal","start":853,"end":857,"value":null,"raw":"null"}],"optional":false}}}]}},"arguments":[],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieGxpZmZtZXJnZS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy94bGlmZm1lcmdlL3NyYy9saWIveGxpZmZtZXJnZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFekMsZ0RBQWdEO0FBT2hELE1BQU0sT0FBTyxnQkFBZ0I7O3NIQUFoQixnQkFBZ0I7b0hBQWhCLGdCQUFnQjt3SEFMaEIsRUFDUjt1RkFJUSxnQkFBZ0I7Y0FONUIsUUFBUTtlQUFDO2dCQUNOLE9BQU8sRUFBRSxFQUNSO2dCQUNELFlBQVksRUFBRSxFQUFFO2dCQUNoQixPQUFPLEVBQUUsRUFBRTthQUNkIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbi8vIG5vdCB1c2VkLCBvbmx5IHRoZXJlIHRvIG1ha2UgbmctcGFja2FnciBoYXBweVxyXG5ATmdNb2R1bGUoe1xyXG4gICAgaW1wb3J0czogW1xyXG4gICAgXSxcclxuICAgIGRlY2xhcmF0aW9uczogW10sXHJcbiAgICBleHBvcnRzOiBbXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgWGxpZmZtZXJnZU1vZHVsZSB7IH1cclxuIl19","start":867,"end":1753}]},"code":"import { NgModule } from '@angular/core';\r\nimport * as i0 from \"@angular/core\";\r\n// not used, only there to make ng-packagr happy\r\nexport class XliffmergeModule {\r\n}\r\n/** @nocollapse */ /** @nocollapse */ XliffmergeModule.ɵfac = function XliffmergeModule_Factory(t) { return new (t || XliffmergeModule)(); };\r\n/** @nocollapse */ /** @nocollapse */ XliffmergeModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: XliffmergeModule });\r\n/** @nocollapse */ /** @nocollapse */ XliffmergeModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({ imports: [[]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XliffmergeModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [],\r\n                declarations: [],\r\n                exports: []\r\n            }]\r\n    }], null, null); })();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieGxpZmZtZXJnZS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy94bGlmZm1lcmdlL3NyYy9saWIveGxpZmZtZXJnZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFekMsZ0RBQWdEO0FBT2hELE1BQU0sT0FBTyxnQkFBZ0I7O3NIQUFoQixnQkFBZ0I7b0hBQWhCLGdCQUFnQjt3SEFMaEIsRUFDUjt1RkFJUSxnQkFBZ0I7Y0FONUIsUUFBUTtlQUFDO2dCQUNOLE9BQU8sRUFBRSxFQUNSO2dCQUNELFlBQVksRUFBRSxFQUFFO2dCQUNoQixPQUFPLEVBQUUsRUFBRTthQUNkIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbi8vIG5vdCB1c2VkLCBvbmx5IHRoZXJlIHRvIG1ha2UgbmctcGFja2FnciBoYXBweVxyXG5ATmdNb2R1bGUoe1xyXG4gICAgaW1wb3J0czogW1xyXG4gICAgXSxcclxuICAgIGRlY2xhcmF0aW9uczogW10sXHJcbiAgICBleHBvcnRzOiBbXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgWGxpZmZtZXJnZU1vZHVsZSB7IH1cclxuIl19","customTransformCache":false,"dependencies":["@angular/core"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\lib\\xliffmerge.module.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { NgModule } from '@angular/core';\r\nimport * as i0 from \"@angular/core\";\r\n// not used, only there to make ng-packagr happy\r\nexport class XliffmergeModule {\r\n}\r\n/** @nocollapse */ /** @nocollapse */ XliffmergeModule.ɵfac = function XliffmergeModule_Factory(t) { return new (t || XliffmergeModule)(); };\r\n/** @nocollapse */ /** @nocollapse */ XliffmergeModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: XliffmergeModule });\r\n/** @nocollapse */ /** @nocollapse */ XliffmergeModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({ imports: [[]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XliffmergeModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [],\r\n                declarations: [],\r\n                exports: []\r\n            }]\r\n    }], null, null); })();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieGxpZmZtZXJnZS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy94bGlmZm1lcmdlL3NyYy9saWIveGxpZmZtZXJnZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFekMsZ0RBQWdEO0FBT2hELE1BQU0sT0FBTyxnQkFBZ0I7O3NIQUFoQixnQkFBZ0I7b0hBQWhCLGdCQUFnQjt3SEFMaEIsRUFDUjt1RkFJUSxnQkFBZ0I7Y0FONUIsUUFBUTtlQUFDO2dCQUNOLE9BQU8sRUFBRSxFQUNSO2dCQUNELFlBQVksRUFBRSxFQUFFO2dCQUNoQixPQUFPLEVBQUUsRUFBRTthQUNkIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbi8vIG5vdCB1c2VkLCBvbmx5IHRoZXJlIHRvIG1ha2UgbmctcGFja2FnciBoYXBweVxyXG5ATmdNb2R1bGUoe1xyXG4gICAgaW1wb3J0czogW1xyXG4gICAgXSxcclxuICAgIGRlY2xhcmF0aW9uczogW10sXHJcbiAgICBleHBvcnRzOiBbXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgWGxpZmZtZXJnZU1vZHVsZSB7IH1cclxuIl19","originalSourcemap":{"version":3,"file":"xliffmerge.module.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/lib/xliffmerge.module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[17,0,0,17],[19,0,0,19],[25,0,0,25],[40,0,0,40],[41,0,0,41]],[],[[0,0,2,0],[48,0,2,48]],[[0,0,9,0],[6,0,9,6],[13,0,9,13],[29,0,9,29]],[],[[118,0,9,13],[134,0,9,29]],[[116,0,9,13],[132,0,9,29]],[[120,0,4,13],[122,0,5,5]],[[87,0,9,13],[103,0,9,29]],[[14,0,3,1],[22,0,3,9]],[[15,0,3,10]],[[16,0,4,4],[23,0,4,11],[25,0,4,13],[27,0,5,5]],[[16,0,6,4],[28,0,6,16],[30,0,6,18],[32,0,6,20]],[[16,0,7,4],[23,0,7,11],[25,0,7,13],[27,0,7,15]],[[13,0,8,1]]],"sourcesContent":["import { NgModule } from '@angular/core';\r\n\r\n// not used, only there to make ng-packagr happy\r\n@NgModule({\r\n    imports: [\r\n    ],\r\n    declarations: [],\r\n    exports: []\r\n})\r\nexport class XliffmergeModule { }\r\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2636,"body":[{"type":"ExportNamedDeclaration","start":128,"end":224,"declaration":{"type":"FunctionDeclaration","start":135,"end":224,"id":{"type":"Identifier","start":144,"end":161,"name":"isNullOrUndefined"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":162,"end":167,"name":"value"}],"body":{"type":"BlockStatement","start":169,"end":224,"body":[{"type":"ReturnStatement","start":176,"end":221,"argument":{"type":"LogicalExpression","start":183,"end":220,"left":{"type":"BinaryExpression","start":183,"end":202,"left":{"type":"Identifier","start":183,"end":188,"name":"value"},"operator":"===","right":{"type":"Identifier","start":193,"end":202,"name":"undefined"}},"operator":"||","right":{"type":"BinaryExpression","start":206,"end":220,"left":{"type":"Identifier","start":206,"end":211,"name":"value"},"operator":"===","right":{"type":"Literal","start":216,"end":220,"value":null,"raw":"null"}}}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":264,"end":339,"declaration":{"type":"FunctionDeclaration","start":271,"end":339,"id":{"type":"Identifier","start":280,"end":288,"name":"isString"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":289,"end":294,"name":"value"}],"body":{"type":"BlockStatement","start":296,"end":339,"body":[{"type":"ReturnStatement","start":303,"end":336,"argument":{"type":"BinaryExpression","start":310,"end":335,"left":{"type":"UnaryExpression","start":310,"end":322,"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":317,"end":322,"name":"value"}},"operator":"===","right":{"type":"Literal","start":327,"end":335,"value":"string","raw":"'string'"}}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":380,"end":457,"declaration":{"type":"FunctionDeclaration","start":387,"end":457,"id":{"type":"Identifier","start":396,"end":405,"name":"isBoolean"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":406,"end":411,"name":"value"}],"body":{"type":"BlockStatement","start":413,"end":457,"body":[{"type":"ReturnStatement","start":420,"end":454,"argument":{"type":"BinaryExpression","start":427,"end":453,"left":{"type":"UnaryExpression","start":427,"end":439,"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":434,"end":439,"name":"value"}},"operator":"===","right":{"type":"Literal","start":444,"end":453,"value":"boolean","raw":"'boolean'"}}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":497,"end":572,"declaration":{"type":"FunctionDeclaration","start":504,"end":572,"id":{"type":"Identifier","start":513,"end":521,"name":"isNumber"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":522,"end":527,"name":"value"}],"body":{"type":"BlockStatement","start":529,"end":572,"body":[{"type":"ReturnStatement","start":536,"end":569,"argument":{"type":"BinaryExpression","start":543,"end":568,"left":{"type":"UnaryExpression","start":543,"end":555,"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":550,"end":555,"name":"value"}},"operator":"===","right":{"type":"Literal","start":560,"end":568,"value":"number","raw":"'number'"}}}]}},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":611,"end":680,"declaration":{"type":"FunctionDeclaration","start":618,"end":680,"id":{"type":"Identifier","start":627,"end":634,"name":"isArray"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":635,"end":640,"name":"value"}],"body":{"type":"BlockStatement","start":642,"end":680,"body":[{"type":"ReturnStatement","start":649,"end":677,"argument":{"type":"CallExpression","start":656,"end":676,"callee":{"type":"MemberExpression","start":656,"end":669,"object":{"type":"Identifier","start":656,"end":661,"name":"Array"},"property":{"type":"Identifier","start":662,"end":669,"name":"isArray"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":670,"end":675,"name":"value"}],"optional":false}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL2NvbW1vbi91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBRUg7O0dBRUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQUMsS0FBVTtJQUN4QyxPQUFPLEtBQUssS0FBSyxTQUFTLElBQUksS0FBSyxLQUFLLElBQUksQ0FBQztBQUNqRCxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsUUFBUSxDQUFDLEtBQVU7SUFDL0IsT0FBTyxPQUFPLEtBQUssS0FBSyxRQUFRLENBQUM7QUFDckMsQ0FBQztBQUVEOztHQUVHO0FBQ0gsTUFBTSxVQUFVLFNBQVMsQ0FBQyxLQUFVO0lBQ2hDLE9BQU8sT0FBTyxLQUFLLEtBQUssU0FBUyxDQUFDO0FBQ3RDLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxRQUFRLENBQUMsS0FBVTtJQUMvQixPQUFPLE9BQU8sS0FBSyxLQUFLLFFBQVEsQ0FBQztBQUNyQyxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsT0FBTyxDQUFDLEtBQVU7SUFDOUIsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ2hDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29sbGVjdGlvbiBvZiB1dGlsaXR5IGZ1bmN0aW9ucyB0aGF0IGFyZSBkZXByZWNhdGVkIGluIG5vZGVzIHV0aWwuXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIFJlcGxhY2VzIG5vZGUgaXNOdWxsT3JVbmRlZmluZWQuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNOdWxsT3JVbmRlZmluZWQodmFsdWU6IGFueSkge1xyXG4gICAgcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGw7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZXBsYWNlcyBub2RlIGlzU3RyaW5nLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGlzU3RyaW5nKHZhbHVlOiBhbnkpIHtcclxuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnO1xyXG59XHJcblxyXG4vKipcclxuICogUmVwbGFjZXMgbm9kZSBpc0Jvb2xlYW4uXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNCb29sZWFuKHZhbHVlOiBhbnkpIHtcclxuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJztcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlcGxhY2VzIG5vZGUgaXNOdW1iZXIuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNOdW1iZXIodmFsdWU6IGFueSkge1xyXG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcic7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZXBsYWNlcyBub2RlIGlzQXJyYXkuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNBcnJheSh2YWx1ZTogYW55KSB7XHJcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSk7XHJcbn1cclxuIl19","start":682,"end":2636}]},"code":"/**\r\n * Collection of utility functions that are deprecated in nodes util.\r\n */\r\n/**\r\n * Replaces node isNullOrUndefined.\r\n */\r\nexport function isNullOrUndefined(value) {\r\n    return value === undefined || value === null;\r\n}\r\n/**\r\n * Replaces node isString.\r\n */\r\nexport function isString(value) {\r\n    return typeof value === 'string';\r\n}\r\n/**\r\n * Replaces node isBoolean.\r\n */\r\nexport function isBoolean(value) {\r\n    return typeof value === 'boolean';\r\n}\r\n/**\r\n * Replaces node isNumber.\r\n */\r\nexport function isNumber(value) {\r\n    return typeof value === 'number';\r\n}\r\n/**\r\n * Replaces node isArray.\r\n */\r\nexport function isArray(value) {\r\n    return Array.isArray(value);\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL2NvbW1vbi91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBRUg7O0dBRUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQUMsS0FBVTtJQUN4QyxPQUFPLEtBQUssS0FBSyxTQUFTLElBQUksS0FBSyxLQUFLLElBQUksQ0FBQztBQUNqRCxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsUUFBUSxDQUFDLEtBQVU7SUFDL0IsT0FBTyxPQUFPLEtBQUssS0FBSyxRQUFRLENBQUM7QUFDckMsQ0FBQztBQUVEOztHQUVHO0FBQ0gsTUFBTSxVQUFVLFNBQVMsQ0FBQyxLQUFVO0lBQ2hDLE9BQU8sT0FBTyxLQUFLLEtBQUssU0FBUyxDQUFDO0FBQ3RDLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxRQUFRLENBQUMsS0FBVTtJQUMvQixPQUFPLE9BQU8sS0FBSyxLQUFLLFFBQVEsQ0FBQztBQUNyQyxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsT0FBTyxDQUFDLEtBQVU7SUFDOUIsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ2hDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29sbGVjdGlvbiBvZiB1dGlsaXR5IGZ1bmN0aW9ucyB0aGF0IGFyZSBkZXByZWNhdGVkIGluIG5vZGVzIHV0aWwuXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIFJlcGxhY2VzIG5vZGUgaXNOdWxsT3JVbmRlZmluZWQuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNOdWxsT3JVbmRlZmluZWQodmFsdWU6IGFueSkge1xyXG4gICAgcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGw7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZXBsYWNlcyBub2RlIGlzU3RyaW5nLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGlzU3RyaW5nKHZhbHVlOiBhbnkpIHtcclxuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnO1xyXG59XHJcblxyXG4vKipcclxuICogUmVwbGFjZXMgbm9kZSBpc0Jvb2xlYW4uXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNCb29sZWFuKHZhbHVlOiBhbnkpIHtcclxuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJztcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlcGxhY2VzIG5vZGUgaXNOdW1iZXIuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNOdW1iZXIodmFsdWU6IGFueSkge1xyXG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcic7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZXBsYWNlcyBub2RlIGlzQXJyYXkuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNBcnJheSh2YWx1ZTogYW55KSB7XHJcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSk7XHJcbn1cclxuIl19","customTransformCache":false,"dependencies":[],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\util.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Collection of utility functions that are deprecated in nodes util.\r\n */\r\n/**\r\n * Replaces node isNullOrUndefined.\r\n */\r\nexport function isNullOrUndefined(value) {\r\n    return value === undefined || value === null;\r\n}\r\n/**\r\n * Replaces node isString.\r\n */\r\nexport function isString(value) {\r\n    return typeof value === 'string';\r\n}\r\n/**\r\n * Replaces node isBoolean.\r\n */\r\nexport function isBoolean(value) {\r\n    return typeof value === 'boolean';\r\n}\r\n/**\r\n * Replaces node isNumber.\r\n */\r\nexport function isNumber(value) {\r\n    return typeof value === 'number';\r\n}\r\n/**\r\n * Replaces node isArray.\r\n */\r\nexport function isArray(value) {\r\n    return Array.isArray(value);\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL2NvbW1vbi91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBRUg7O0dBRUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQUMsS0FBVTtJQUN4QyxPQUFPLEtBQUssS0FBSyxTQUFTLElBQUksS0FBSyxLQUFLLElBQUksQ0FBQztBQUNqRCxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsUUFBUSxDQUFDLEtBQVU7SUFDL0IsT0FBTyxPQUFPLEtBQUssS0FBSyxRQUFRLENBQUM7QUFDckMsQ0FBQztBQUVEOztHQUVHO0FBQ0gsTUFBTSxVQUFVLFNBQVMsQ0FBQyxLQUFVO0lBQ2hDLE9BQU8sT0FBTyxLQUFLLEtBQUssU0FBUyxDQUFDO0FBQ3RDLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxRQUFRLENBQUMsS0FBVTtJQUMvQixPQUFPLE9BQU8sS0FBSyxLQUFLLFFBQVEsQ0FBQztBQUNyQyxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsT0FBTyxDQUFDLEtBQVU7SUFDOUIsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ2hDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29sbGVjdGlvbiBvZiB1dGlsaXR5IGZ1bmN0aW9ucyB0aGF0IGFyZSBkZXByZWNhdGVkIGluIG5vZGVzIHV0aWwuXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIFJlcGxhY2VzIG5vZGUgaXNOdWxsT3JVbmRlZmluZWQuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNOdWxsT3JVbmRlZmluZWQodmFsdWU6IGFueSkge1xyXG4gICAgcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGw7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZXBsYWNlcyBub2RlIGlzU3RyaW5nLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGlzU3RyaW5nKHZhbHVlOiBhbnkpIHtcclxuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnO1xyXG59XHJcblxyXG4vKipcclxuICogUmVwbGFjZXMgbm9kZSBpc0Jvb2xlYW4uXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNCb29sZWFuKHZhbHVlOiBhbnkpIHtcclxuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJztcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlcGxhY2VzIG5vZGUgaXNOdW1iZXIuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNOdW1iZXIodmFsdWU6IGFueSkge1xyXG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcic7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZXBsYWNlcyBub2RlIGlzQXJyYXkuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNBcnJheSh2YWx1ZTogYW55KSB7XHJcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSk7XHJcbn1cclxuIl19","originalSourcemap":{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/common/util.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0]],[],[[3,0,6,3]],[[0,0,7,0],[6,0,7,6],[16,0,7,16],[33,0,7,33],[34,0,7,34],[39,0,7,44]],[[4,0,8,4],[11,0,8,11],[16,0,8,16],[21,0,8,21],[30,0,8,30],[34,0,8,34],[39,0,8,39],[44,0,8,44],[48,0,8,48],[49,0,8,49]],[[0,0,9,0],[1,0,9,1]],[[0,0,11,0]],[],[[3,0,13,3]],[[0,0,14,0],[6,0,14,6],[16,0,14,16],[24,0,14,24],[25,0,14,25],[30,0,14,35]],[[4,0,15,4],[11,0,15,11],[18,0,15,18],[23,0,15,23],[28,0,15,28],[36,0,15,36],[37,0,15,37]],[[0,0,16,0],[1,0,16,1]],[[0,0,18,0]],[],[[3,0,20,3]],[[0,0,21,0],[6,0,21,6],[16,0,21,16],[25,0,21,25],[26,0,21,26],[31,0,21,36]],[[4,0,22,4],[11,0,22,11],[18,0,22,18],[23,0,22,23],[28,0,22,28],[37,0,22,37],[38,0,22,38]],[[0,0,23,0],[1,0,23,1]],[[0,0,25,0]],[],[[3,0,27,3]],[[0,0,28,0],[6,0,28,6],[16,0,28,16],[24,0,28,24],[25,0,28,25],[30,0,28,35]],[[4,0,29,4],[11,0,29,11],[18,0,29,18],[23,0,29,23],[28,0,29,28],[36,0,29,36],[37,0,29,37]],[[0,0,30,0],[1,0,30,1]],[[0,0,32,0]],[],[[3,0,34,3]],[[0,0,35,0],[6,0,35,6],[16,0,35,16],[23,0,35,23],[24,0,35,24],[29,0,35,34]],[[4,0,36,4],[11,0,36,11],[16,0,36,16],[17,0,36,17],[24,0,36,24],[25,0,36,25],[30,0,36,30],[31,0,36,31],[32,0,36,32]],[[0,0,37,0],[1,0,37,1]]],"sourcesContent":["/**\r\n * Collection of utility functions that are deprecated in nodes util.\r\n */\r\n\r\n/**\r\n * Replaces node isNullOrUndefined.\r\n */\r\nexport function isNullOrUndefined(value: any) {\r\n    return value === undefined || value === null;\r\n}\r\n\r\n/**\r\n * Replaces node isString.\r\n */\r\nexport function isString(value: any) {\r\n    return typeof value === 'string';\r\n}\r\n\r\n/**\r\n * Replaces node isBoolean.\r\n */\r\nexport function isBoolean(value: any) {\r\n    return typeof value === 'boolean';\r\n}\r\n\r\n/**\r\n * Replaces node isNumber.\r\n */\r\nexport function isNumber(value: any) {\r\n    return typeof value === 'number';\r\n}\r\n\r\n/**\r\n * Replaces node isArray.\r\n */\r\nexport function isArray(value: any) {\r\n    return Array.isArray(value);\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":3772,"body":[{"type":"ImportDeclaration","start":0,"end":34,"specifiers":[{"type":"ImportSpecifier","start":9,"end":17,"imported":{"type":"Identifier","start":9,"end":17,"name":"Writable"},"local":{"type":"Identifier","start":9,"end":17,"name":"Writable"}}],"source":{"type":"Literal","start":25,"end":33,"value":"stream","raw":"'stream'"}},{"type":"ImportDeclaration","start":36,"end":70,"specifiers":[{"type":"ImportSpecifier","start":45,"end":53,"imported":{"type":"Identifier","start":45,"end":53,"name":"isString"},"local":{"type":"Identifier","start":45,"end":53,"name":"isString"}}],"source":{"type":"Literal","start":61,"end":69,"value":"./util","raw":"'./util'"}},{"type":"ExportNamedDeclaration","start":282,"end":1028,"declaration":{"type":"ClassDeclaration","start":289,"end":1028,"id":{"type":"Identifier","start":295,"end":309,"name":"WriterToString"},"superClass":{"type":"Identifier","start":318,"end":326,"name":"Writable"},"body":{"type":"ClassBody","start":327,"end":1028,"body":[{"type":"MethodDefinition","start":334,"end":407,"static":false,"computed":false,"key":{"type":"Identifier","start":334,"end":345,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":345,"end":407,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":348,"end":407,"body":[{"type":"ExpressionStatement","start":359,"end":367,"expression":{"type":"CallExpression","start":359,"end":366,"callee":{"type":"Super","start":359,"end":364},"arguments":[],"optional":false}},{"type":"ExpressionStatement","start":377,"end":400,"expression":{"type":"AssignmentExpression","start":377,"end":399,"operator":"=","left":{"type":"MemberExpression","start":377,"end":394,"object":{"type":"ThisExpression","start":377,"end":381},"property":{"type":"Identifier","start":382,"end":394,"name":"resultString"},"computed":false,"optional":false},"right":{"type":"Literal","start":397,"end":399,"value":"","raw":"''"}}}]}}},{"type":"MethodDefinition","start":413,"end":836,"static":false,"computed":false,"key":{"type":"Identifier","start":413,"end":419,"name":"_write"},"kind":"method","value":{"type":"FunctionExpression","start":419,"end":836,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":420,"end":425,"name":"chunk"},{"type":"Identifier","start":427,"end":435,"name":"encoding"},{"type":"Identifier","start":437,"end":445,"name":"callback"}],"body":{"type":"BlockStatement","start":447,"end":836,"body":[{"type":"VariableDeclaration","start":458,"end":474,"declarations":[{"type":"VariableDeclarator","start":462,"end":473,"id":{"type":"Identifier","start":462,"end":473,"name":"chunkString"},"init":null}],"kind":"let"},{"type":"IfStatement","start":484,"end":746,"test":{"type":"CallExpression","start":488,"end":503,"callee":{"type":"Identifier","start":488,"end":496,"name":"isString"},"arguments":[{"type":"Identifier","start":497,"end":502,"name":"chunk"}],"optional":false},"consequent":{"type":"BlockStatement","start":505,"end":551,"body":[{"type":"ExpressionStatement","start":520,"end":540,"expression":{"type":"AssignmentExpression","start":520,"end":539,"operator":"=","left":{"type":"Identifier","start":520,"end":531,"name":"chunkString"},"right":{"type":"Identifier","start":534,"end":539,"name":"chunk"}}}]},"alternate":{"type":"IfStatement","start":566,"end":746,"test":{"type":"BinaryExpression","start":570,"end":593,"left":{"type":"Identifier","start":570,"end":575,"name":"chunk"},"operator":"instanceof","right":{"type":"Identifier","start":587,"end":593,"name":"Buffer"}},"consequent":{"type":"BlockStatement","start":595,"end":652,"body":[{"type":"ExpressionStatement","start":610,"end":641,"expression":{"type":"AssignmentExpression","start":610,"end":640,"operator":"=","left":{"type":"Identifier","start":610,"end":621,"name":"chunkString"},"right":{"type":"CallExpression","start":624,"end":640,"callee":{"type":"MemberExpression","start":624,"end":638,"object":{"type":"Identifier","start":624,"end":629,"name":"chunk"},"property":{"type":"Identifier","start":630,"end":638,"name":"toString"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":667,"end":746,"body":[{"type":"ExpressionStatement","start":682,"end":735,"expression":{"type":"AssignmentExpression","start":682,"end":734,"operator":"=","left":{"type":"Identifier","start":682,"end":693,"name":"chunkString"},"right":{"type":"CallExpression","start":696,"end":734,"callee":{"type":"MemberExpression","start":696,"end":724,"object":{"type":"CallExpression","start":696,"end":715,"callee":{"type":"MemberExpression","start":696,"end":708,"object":{"type":"Identifier","start":696,"end":702,"name":"Buffer"},"property":{"type":"Identifier","start":703,"end":708,"name":"alloc"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":709,"end":714,"name":"chunk"}],"optional":false},"property":{"type":"Identifier","start":716,"end":724,"name":"toString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":725,"end":733,"name":"encoding"}],"optional":false}}}]}}},{"type":"ExpressionStatement","start":756,"end":808,"expression":{"type":"AssignmentExpression","start":756,"end":807,"operator":"=","left":{"type":"MemberExpression","start":756,"end":773,"object":{"type":"ThisExpression","start":756,"end":760},"property":{"type":"Identifier","start":761,"end":773,"name":"resultString"},"computed":false,"optional":false},"right":{"type":"BinaryExpression","start":776,"end":807,"left":{"type":"MemberExpression","start":776,"end":793,"object":{"type":"ThisExpression","start":776,"end":780},"property":{"type":"Identifier","start":781,"end":793,"name":"resultString"},"computed":false,"optional":false},"operator":"+","right":{"type":"Identifier","start":796,"end":807,"name":"chunkString"}}}},{"type":"ExpressionStatement","start":818,"end":829,"expression":{"type":"CallExpression","start":818,"end":828,"callee":{"type":"Identifier","start":818,"end":826,"name":"callback"},"arguments":[],"optional":false}}]}}},{"type":"MethodDefinition","start":968,"end":1025,"static":false,"computed":false,"key":{"type":"Identifier","start":968,"end":979,"name":"writtenData"},"kind":"method","value":{"type":"FunctionExpression","start":979,"end":1025,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":982,"end":1025,"body":[{"type":"ReturnStatement","start":993,"end":1018,"argument":{"type":"MemberExpression","start":1000,"end":1017,"object":{"type":"ThisExpression","start":1000,"end":1004},"property":{"type":"Identifier","start":1005,"end":1017,"name":"resultString"},"computed":false,"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JpdGVyLXRvLXN0cmluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL2NvbW1vbi93cml0ZXItdG8tc3RyaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxRQUFRLENBQUM7QUFDaEMsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLFFBQVEsQ0FBQztBQUNoQzs7Ozs7R0FLRztBQUVILE1BQU0sT0FBTyxjQUFlLFNBQVEsUUFBUTtJQUl4QztRQUNJLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVNLE1BQU0sQ0FBQyxLQUFVLEVBQUUsUUFBd0IsRUFBRSxRQUFrQjtRQUNsRSxJQUFJLFdBQVcsQ0FBQztRQUNoQixJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNqQixXQUFXLEdBQUcsS0FBSyxDQUFDO1NBQ3ZCO2FBQU0sSUFBSSxLQUFLLFlBQVksTUFBTSxFQUFFO1lBQ2hDLFdBQVcsR0FBRyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDbEM7YUFBTTtZQUNILFdBQVcsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUN4RDtRQUNELElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUM7UUFDcEQsUUFBUSxFQUFFLENBQUM7SUFDZixDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksV0FBVztRQUNkLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztJQUM3QixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1dyaXRhYmxlfSBmcm9tICdzdHJlYW0nO1xyXG5pbXBvcnQge2lzU3RyaW5nfSBmcm9tICcuL3V0aWwnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMjAuMDIuMjAxNy5cclxuICogQSBoZWxwZXIgY2xhc3MgZm9yIHRlc3RpbmcuXHJcbiAqIENhbiBiZSB1c2VkIGFzIGEgV3JpdGFibGVTdHJlYW0gYW5kIHdyaXRlcyBldmVyeXRoaW5nIChzeW5jaHJvbm91c2x5KSBpbnRvIGEgc3RyaW5nLFxyXG4gKiB0aGF0IGNhbiBlYXNpbHkgYmUgcmVhZCBieSB0aGUgdGVzdHMuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFdyaXRlclRvU3RyaW5nIGV4dGVuZHMgV3JpdGFibGUge1xyXG5cclxuICAgIHByaXZhdGUgcmVzdWx0U3RyaW5nOiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLnJlc3VsdFN0cmluZyA9ICcnO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBfd3JpdGUoY2h1bms6IGFueSwgZW5jb2Rpbmc6IEJ1ZmZlckVuY29kaW5nLCBjYWxsYmFjazogRnVuY3Rpb24pOiB2b2lkIHtcclxuICAgICAgICBsZXQgY2h1bmtTdHJpbmc7XHJcbiAgICAgICAgaWYgKGlzU3RyaW5nKGNodW5rKSkge1xyXG4gICAgICAgICAgICBjaHVua1N0cmluZyA9IGNodW5rO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoY2h1bmsgaW5zdGFuY2VvZiBCdWZmZXIpIHtcclxuICAgICAgICAgICAgY2h1bmtTdHJpbmcgPSBjaHVuay50b1N0cmluZygpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNodW5rU3RyaW5nID0gQnVmZmVyLmFsbG9jKGNodW5rKS50b1N0cmluZyhlbmNvZGluZyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucmVzdWx0U3RyaW5nID0gdGhpcy5yZXN1bHRTdHJpbmcgKyBjaHVua1N0cmluZztcclxuICAgICAgICBjYWxsYmFjaygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhIHN0cmluZyBvZiBldmVyeXRoaW5nLCB0aGF0IHdhcyB3cml0dGVuIHRvIHRoZSBzdHJlYW0gc28gZmFyLlxyXG4gICAgICogQHJldHVybiB3cml0dGVuIGRhdGFcclxuICAgICAqL1xyXG4gICAgcHVibGljIHdyaXR0ZW5EYXRhKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucmVzdWx0U3RyaW5nO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==","start":1030,"end":3772}]},"code":"import { Writable } from 'stream';\r\nimport { isString } from './util';\r\n/**\r\n * Created by martin on 20.02.2017.\r\n * A helper class for testing.\r\n * Can be used as a WritableStream and writes everything (synchronously) into a string,\r\n * that can easily be read by the tests.\r\n */\r\nexport class WriterToString extends Writable {\r\n    constructor() {\r\n        super();\r\n        this.resultString = '';\r\n    }\r\n    _write(chunk, encoding, callback) {\r\n        let chunkString;\r\n        if (isString(chunk)) {\r\n            chunkString = chunk;\r\n        }\r\n        else if (chunk instanceof Buffer) {\r\n            chunkString = chunk.toString();\r\n        }\r\n        else {\r\n            chunkString = Buffer.alloc(chunk).toString(encoding);\r\n        }\r\n        this.resultString = this.resultString + chunkString;\r\n        callback();\r\n    }\r\n    /**\r\n     * Returns a string of everything, that was written to the stream so far.\r\n     * @return written data\r\n     */\r\n    writtenData() {\r\n        return this.resultString;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JpdGVyLXRvLXN0cmluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL2NvbW1vbi93cml0ZXItdG8tc3RyaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxRQUFRLENBQUM7QUFDaEMsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLFFBQVEsQ0FBQztBQUNoQzs7Ozs7R0FLRztBQUVILE1BQU0sT0FBTyxjQUFlLFNBQVEsUUFBUTtJQUl4QztRQUNJLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVNLE1BQU0sQ0FBQyxLQUFVLEVBQUUsUUFBd0IsRUFBRSxRQUFrQjtRQUNsRSxJQUFJLFdBQVcsQ0FBQztRQUNoQixJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNqQixXQUFXLEdBQUcsS0FBSyxDQUFDO1NBQ3ZCO2FBQU0sSUFBSSxLQUFLLFlBQVksTUFBTSxFQUFFO1lBQ2hDLFdBQVcsR0FBRyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDbEM7YUFBTTtZQUNILFdBQVcsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUN4RDtRQUNELElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUM7UUFDcEQsUUFBUSxFQUFFLENBQUM7SUFDZixDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksV0FBVztRQUNkLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztJQUM3QixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1dyaXRhYmxlfSBmcm9tICdzdHJlYW0nO1xyXG5pbXBvcnQge2lzU3RyaW5nfSBmcm9tICcuL3V0aWwnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMjAuMDIuMjAxNy5cclxuICogQSBoZWxwZXIgY2xhc3MgZm9yIHRlc3RpbmcuXHJcbiAqIENhbiBiZSB1c2VkIGFzIGEgV3JpdGFibGVTdHJlYW0gYW5kIHdyaXRlcyBldmVyeXRoaW5nIChzeW5jaHJvbm91c2x5KSBpbnRvIGEgc3RyaW5nLFxyXG4gKiB0aGF0IGNhbiBlYXNpbHkgYmUgcmVhZCBieSB0aGUgdGVzdHMuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFdyaXRlclRvU3RyaW5nIGV4dGVuZHMgV3JpdGFibGUge1xyXG5cclxuICAgIHByaXZhdGUgcmVzdWx0U3RyaW5nOiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLnJlc3VsdFN0cmluZyA9ICcnO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBfd3JpdGUoY2h1bms6IGFueSwgZW5jb2Rpbmc6IEJ1ZmZlckVuY29kaW5nLCBjYWxsYmFjazogRnVuY3Rpb24pOiB2b2lkIHtcclxuICAgICAgICBsZXQgY2h1bmtTdHJpbmc7XHJcbiAgICAgICAgaWYgKGlzU3RyaW5nKGNodW5rKSkge1xyXG4gICAgICAgICAgICBjaHVua1N0cmluZyA9IGNodW5rO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoY2h1bmsgaW5zdGFuY2VvZiBCdWZmZXIpIHtcclxuICAgICAgICAgICAgY2h1bmtTdHJpbmcgPSBjaHVuay50b1N0cmluZygpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNodW5rU3RyaW5nID0gQnVmZmVyLmFsbG9jKGNodW5rKS50b1N0cmluZyhlbmNvZGluZyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucmVzdWx0U3RyaW5nID0gdGhpcy5yZXN1bHRTdHJpbmcgKyBjaHVua1N0cmluZztcclxuICAgICAgICBjYWxsYmFjaygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhIHN0cmluZyBvZiBldmVyeXRoaW5nLCB0aGF0IHdhcyB3cml0dGVuIHRvIHRoZSBzdHJlYW0gc28gZmFyLlxyXG4gICAgICogQHJldHVybiB3cml0dGVuIGRhdGFcclxuICAgICAqL1xyXG4gICAgcHVibGljIHdyaXR0ZW5EYXRhKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucmVzdWx0U3RyaW5nO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==","customTransformCache":false,"dependencies":["stream","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\util.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\writer-to-string.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { Writable } from 'stream';\r\nimport { isString } from './util';\r\n/**\r\n * Created by martin on 20.02.2017.\r\n * A helper class for testing.\r\n * Can be used as a WritableStream and writes everything (synchronously) into a string,\r\n * that can easily be read by the tests.\r\n */\r\nexport class WriterToString extends Writable {\r\n    constructor() {\r\n        super();\r\n        this.resultString = '';\r\n    }\r\n    _write(chunk, encoding, callback) {\r\n        let chunkString;\r\n        if (isString(chunk)) {\r\n            chunkString = chunk;\r\n        }\r\n        else if (chunk instanceof Buffer) {\r\n            chunkString = chunk.toString();\r\n        }\r\n        else {\r\n            chunkString = Buffer.alloc(chunk).toString(encoding);\r\n        }\r\n        this.resultString = this.resultString + chunkString;\r\n        callback();\r\n    }\r\n    /**\r\n     * Returns a string of everything, that was written to the stream so far.\r\n     * @return written data\r\n     */\r\n    writtenData() {\r\n        return this.resultString;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JpdGVyLXRvLXN0cmluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL2NvbW1vbi93cml0ZXItdG8tc3RyaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxRQUFRLENBQUM7QUFDaEMsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLFFBQVEsQ0FBQztBQUNoQzs7Ozs7R0FLRztBQUVILE1BQU0sT0FBTyxjQUFlLFNBQVEsUUFBUTtJQUl4QztRQUNJLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVNLE1BQU0sQ0FBQyxLQUFVLEVBQUUsUUFBd0IsRUFBRSxRQUFrQjtRQUNsRSxJQUFJLFdBQVcsQ0FBQztRQUNoQixJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNqQixXQUFXLEdBQUcsS0FBSyxDQUFDO1NBQ3ZCO2FBQU0sSUFBSSxLQUFLLFlBQVksTUFBTSxFQUFFO1lBQ2hDLFdBQVcsR0FBRyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDbEM7YUFBTTtZQUNILFdBQVcsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUN4RDtRQUNELElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUM7UUFDcEQsUUFBUSxFQUFFLENBQUM7SUFDZixDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksV0FBVztRQUNkLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztJQUM3QixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1dyaXRhYmxlfSBmcm9tICdzdHJlYW0nO1xyXG5pbXBvcnQge2lzU3RyaW5nfSBmcm9tICcuL3V0aWwnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMjAuMDIuMjAxNy5cclxuICogQSBoZWxwZXIgY2xhc3MgZm9yIHRlc3RpbmcuXHJcbiAqIENhbiBiZSB1c2VkIGFzIGEgV3JpdGFibGVTdHJlYW0gYW5kIHdyaXRlcyBldmVyeXRoaW5nIChzeW5jaHJvbm91c2x5KSBpbnRvIGEgc3RyaW5nLFxyXG4gKiB0aGF0IGNhbiBlYXNpbHkgYmUgcmVhZCBieSB0aGUgdGVzdHMuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFdyaXRlclRvU3RyaW5nIGV4dGVuZHMgV3JpdGFibGUge1xyXG5cclxuICAgIHByaXZhdGUgcmVzdWx0U3RyaW5nOiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLnJlc3VsdFN0cmluZyA9ICcnO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBfd3JpdGUoY2h1bms6IGFueSwgZW5jb2Rpbmc6IEJ1ZmZlckVuY29kaW5nLCBjYWxsYmFjazogRnVuY3Rpb24pOiB2b2lkIHtcclxuICAgICAgICBsZXQgY2h1bmtTdHJpbmc7XHJcbiAgICAgICAgaWYgKGlzU3RyaW5nKGNodW5rKSkge1xyXG4gICAgICAgICAgICBjaHVua1N0cmluZyA9IGNodW5rO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoY2h1bmsgaW5zdGFuY2VvZiBCdWZmZXIpIHtcclxuICAgICAgICAgICAgY2h1bmtTdHJpbmcgPSBjaHVuay50b1N0cmluZygpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNodW5rU3RyaW5nID0gQnVmZmVyLmFsbG9jKGNodW5rKS50b1N0cmluZyhlbmNvZGluZyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucmVzdWx0U3RyaW5nID0gdGhpcy5yZXN1bHRTdHJpbmcgKyBjaHVua1N0cmluZztcclxuICAgICAgICBjYWxsYmFjaygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhIHN0cmluZyBvZiBldmVyeXRoaW5nLCB0aGF0IHdhcyB3cml0dGVuIHRvIHRoZSBzdHJlYW0gc28gZmFyLlxyXG4gICAgICogQHJldHVybiB3cml0dGVuIGRhdGFcclxuICAgICAqL1xyXG4gICAgcHVibGljIHdyaXR0ZW5EYXRhKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucmVzdWx0U3RyaW5nO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==","originalSourcemap":{"version":3,"file":"writer-to-string.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/common/writer-to-string.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[17,0,0,16],[19,0,0,17],[25,0,0,23],[33,0,0,31],[34,0,0,32]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[17,0,1,16],[19,0,1,17],[25,0,1,23],[33,0,1,31],[34,0,1,32]],[[0,0,2,0]],[],[],[],[],[[3,0,7,3]],[[0,0,9,0],[6,0,9,6],[13,0,9,13],[27,0,9,28],[36,0,9,36],[44,0,9,44]],[[4,0,13,4]],[[8,0,14,8],[13,0,14,13],[15,0,14,15],[16,0,14,16]],[[8,0,15,8],[12,0,15,12],[13,0,15,13],[25,0,15,25],[28,0,15,28],[30,0,15,30],[31,0,15,31]],[[4,0,16,4],[5,0,16,5]],[[4,0,18,11],[10,0,18,17],[11,0,18,18],[16,0,18,28],[18,0,18,30],[26,0,18,54],[28,0,18,56],[36,0,18,74]],[[8,0,19,8],[12,0,19,12],[23,0,19,23],[24,0,19,24]],[[8,0,20,8],[12,0,20,12],[20,0,20,20],[21,0,20,21],[26,0,20,26],[27,0,20,27],[29,0,20,29]],[[12,0,21,12],[23,0,21,23],[26,0,21,26],[31,0,21,31],[32,0,21,32]],[[9,0,22,9]],[[13,0,22,15],[17,0,22,19],[22,0,22,24],[34,0,22,36],[40,0,22,42],[42,0,22,44]],[[12,0,23,12],[23,0,23,23],[26,0,23,26],[31,0,23,31],[32,0,23,32],[40,0,23,40],[42,0,23,42],[43,0,23,43]],[[9,0,24,9]],[[13,0,24,15]],[[12,0,25,12],[23,0,25,23],[26,0,25,26],[32,0,25,32],[33,0,25,33],[38,0,25,38],[39,0,25,39],[44,0,25,44],[45,0,25,45],[46,0,25,46],[54,0,25,54],[55,0,25,55],[63,0,25,63],[64,0,25,64],[65,0,25,65]],[[9,0,26,9]],[[8,0,27,8],[12,0,27,12],[13,0,27,13],[25,0,27,25],[28,0,27,28],[32,0,27,32],[33,0,27,33],[45,0,27,45],[48,0,27,48],[59,0,27,59],[60,0,27,60]],[[8,0,28,8],[16,0,28,16],[18,0,28,18],[19,0,28,19]],[[4,0,29,4],[5,0,29,5]],[[4,0,31,4]],[],[],[[7,0,34,7]],[[4,0,35,11],[15,0,35,22]],[[8,0,36,8],[15,0,36,15],[19,0,36,19],[20,0,36,20],[32,0,36,32],[33,0,36,33]],[[4,0,37,4],[5,0,37,5]],[[1,0,38,1]]],"sourcesContent":["import {Writable} from 'stream';\r\nimport {isString} from './util';\r\n/**\r\n * Created by martin on 20.02.2017.\r\n * A helper class for testing.\r\n * Can be used as a WritableStream and writes everything (synchronously) into a string,\r\n * that can easily be read by the tests.\r\n */\r\n\r\nexport class WriterToString extends Writable {\r\n\r\n    private resultString: string;\r\n\r\n    constructor() {\r\n        super();\r\n        this.resultString = '';\r\n    }\r\n\r\n    public _write(chunk: any, encoding: BufferEncoding, callback: Function): void {\r\n        let chunkString;\r\n        if (isString(chunk)) {\r\n            chunkString = chunk;\r\n        } else if (chunk instanceof Buffer) {\r\n            chunkString = chunk.toString();\r\n        } else {\r\n            chunkString = Buffer.alloc(chunk).toString(encoding);\r\n        }\r\n        this.resultString = this.resultString + chunkString;\r\n        callback();\r\n    }\r\n\r\n    /**\r\n     * Returns a string of everything, that was written to the stream so far.\r\n     * @return written data\r\n     */\r\n    public writtenData(): string {\r\n        return this.resultString;\r\n    }\r\n}\r\n"]},"resolvedIds":{"stream":{"external":true,"id":"stream","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./util":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\util.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":11520,"body":[{"type":"ImportDeclaration","start":471,"end":497,"specifiers":[{"type":"ImportDefaultSpecifier","start":478,"end":483,"local":{"type":"Identifier","start":478,"end":483,"name":"chalk"}}],"source":{"type":"Literal","start":489,"end":496,"value":"chalk","raw":"'chalk'"}},{"type":"ImportDeclaration","start":499,"end":529,"specifiers":[{"type":"ImportSpecifier","start":508,"end":514,"imported":{"type":"Identifier","start":508,"end":514,"name":"format"},"local":{"type":"Identifier","start":508,"end":514,"name":"format"}}],"source":{"type":"Literal","start":522,"end":528,"value":"util","raw":"'util'"}},{"type":"VariableDeclaration","start":531,"end":544,"declarations":[{"type":"VariableDeclarator","start":535,"end":543,"id":{"type":"Identifier","start":535,"end":543,"name":"LogLevel"},"init":null}],"kind":"var"},{"type":"ExpressionStatement","start":546,"end":790,"expression":{"type":"CallExpression","start":546,"end":789,"callee":{"type":"FunctionExpression","start":547,"end":759,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":557,"end":565,"name":"LogLevel"}],"body":{"type":"BlockStatement","start":567,"end":759,"body":[{"type":"ExpressionStatement","start":574,"end":616,"expression":{"type":"AssignmentExpression","start":574,"end":615,"operator":"=","left":{"type":"MemberExpression","start":574,"end":605,"object":{"type":"Identifier","start":574,"end":582,"name":"LogLevel"},"property":{"type":"AssignmentExpression","start":583,"end":604,"operator":"=","left":{"type":"MemberExpression","start":583,"end":600,"object":{"type":"Identifier","start":583,"end":591,"name":"LogLevel"},"property":{"type":"Literal","start":592,"end":599,"value":"ERROR","raw":"\"ERROR\""},"computed":true,"optional":false},"right":{"type":"Literal","start":603,"end":604,"value":0,"raw":"0"}},"computed":true,"optional":false},"right":{"type":"Literal","start":608,"end":615,"value":"ERROR","raw":"\"ERROR\""}}},{"type":"ExpressionStatement","start":622,"end":662,"expression":{"type":"AssignmentExpression","start":622,"end":661,"operator":"=","left":{"type":"MemberExpression","start":622,"end":652,"object":{"type":"Identifier","start":622,"end":630,"name":"LogLevel"},"property":{"type":"AssignmentExpression","start":631,"end":651,"operator":"=","left":{"type":"MemberExpression","start":631,"end":647,"object":{"type":"Identifier","start":631,"end":639,"name":"LogLevel"},"property":{"type":"Literal","start":640,"end":646,"value":"WARN","raw":"\"WARN\""},"computed":true,"optional":false},"right":{"type":"Literal","start":650,"end":651,"value":1,"raw":"1"}},"computed":true,"optional":false},"right":{"type":"Literal","start":655,"end":661,"value":"WARN","raw":"\"WARN\""}}},{"type":"ExpressionStatement","start":668,"end":708,"expression":{"type":"AssignmentExpression","start":668,"end":707,"operator":"=","left":{"type":"MemberExpression","start":668,"end":698,"object":{"type":"Identifier","start":668,"end":676,"name":"LogLevel"},"property":{"type":"AssignmentExpression","start":677,"end":697,"operator":"=","left":{"type":"MemberExpression","start":677,"end":693,"object":{"type":"Identifier","start":677,"end":685,"name":"LogLevel"},"property":{"type":"Literal","start":686,"end":692,"value":"INFO","raw":"\"INFO\""},"computed":true,"optional":false},"right":{"type":"Literal","start":696,"end":697,"value":2,"raw":"2"}},"computed":true,"optional":false},"right":{"type":"Literal","start":701,"end":707,"value":"INFO","raw":"\"INFO\""}}},{"type":"ExpressionStatement","start":714,"end":756,"expression":{"type":"AssignmentExpression","start":714,"end":755,"operator":"=","left":{"type":"MemberExpression","start":714,"end":745,"object":{"type":"Identifier","start":714,"end":722,"name":"LogLevel"},"property":{"type":"AssignmentExpression","start":723,"end":744,"operator":"=","left":{"type":"MemberExpression","start":723,"end":740,"object":{"type":"Identifier","start":723,"end":731,"name":"LogLevel"},"property":{"type":"Literal","start":732,"end":739,"value":"DEBUG","raw":"\"DEBUG\""},"computed":true,"optional":false},"right":{"type":"Literal","start":743,"end":744,"value":3,"raw":"3"}},"computed":true,"optional":false},"right":{"type":"Literal","start":748,"end":755,"value":"DEBUG","raw":"\"DEBUG\""}}}]}},"arguments":[{"type":"LogicalExpression","start":761,"end":788,"left":{"type":"Identifier","start":761,"end":769,"name":"LogLevel"},"operator":"||","right":{"type":"AssignmentExpression","start":774,"end":787,"operator":"=","left":{"type":"Identifier","start":774,"end":782,"name":"LogLevel"},"right":{"type":"ObjectExpression","start":785,"end":787,"properties":[]}}}],"optional":false}},{"type":"ExportNamedDeclaration","start":792,"end":3196,"declaration":{"type":"ClassDeclaration","start":799,"end":3196,"id":{"type":"Identifier","start":805,"end":818,"name":"CommandOutput"},"superClass":null,"body":{"type":"ClassBody","start":819,"end":3196,"body":[{"type":"MethodDefinition","start":826,"end":1067,"static":false,"computed":false,"key":{"type":"Identifier","start":826,"end":837,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":837,"end":1067,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":838,"end":844,"name":"stdout"}],"body":{"type":"BlockStatement","start":846,"end":1067,"body":[{"type":"ExpressionStatement","start":857,"end":877,"expression":{"type":"AssignmentExpression","start":857,"end":876,"operator":"=","left":{"type":"MemberExpression","start":857,"end":868,"object":{"type":"ThisExpression","start":857,"end":861},"property":{"type":"Identifier","start":862,"end":868,"name":"_quiet"},"computed":false,"optional":false},"right":{"type":"Literal","start":871,"end":876,"value":false,"raw":"false"}}},{"type":"ExpressionStatement","start":887,"end":909,"expression":{"type":"AssignmentExpression","start":887,"end":908,"operator":"=","left":{"type":"MemberExpression","start":887,"end":900,"object":{"type":"ThisExpression","start":887,"end":891},"property":{"type":"Identifier","start":892,"end":900,"name":"_verbose"},"computed":false,"optional":false},"right":{"type":"Literal","start":903,"end":908,"value":false,"raw":"false"}}},{"type":"IfStatement","start":919,"end":1060,"test":{"type":"Identifier","start":923,"end":929,"name":"stdout"},"consequent":{"type":"BlockStatement","start":931,"end":984,"body":[{"type":"ExpressionStatement","start":946,"end":973,"expression":{"type":"AssignmentExpression","start":946,"end":972,"operator":"=","left":{"type":"MemberExpression","start":946,"end":963,"object":{"type":"ThisExpression","start":946,"end":950},"property":{"type":"Identifier","start":951,"end":963,"name":"outputStream"},"computed":false,"optional":false},"right":{"type":"Identifier","start":966,"end":972,"name":"stdout"}}}]},"alternate":{"type":"BlockStatement","start":999,"end":1060,"body":[{"type":"ExpressionStatement","start":1014,"end":1049,"expression":{"type":"AssignmentExpression","start":1014,"end":1048,"operator":"=","left":{"type":"MemberExpression","start":1014,"end":1031,"object":{"type":"ThisExpression","start":1014,"end":1018},"property":{"type":"Identifier","start":1019,"end":1031,"name":"outputStream"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":1034,"end":1048,"object":{"type":"Identifier","start":1034,"end":1041,"name":"process"},"property":{"type":"Identifier","start":1042,"end":1048,"name":"stdout"},"computed":false,"optional":false}}}]}}]}}},{"type":"MethodDefinition","start":1073,"end":1125,"static":false,"computed":false,"key":{"type":"Identifier","start":1073,"end":1083,"name":"setVerbose"},"kind":"method","value":{"type":"FunctionExpression","start":1083,"end":1125,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1086,"end":1125,"body":[{"type":"ExpressionStatement","start":1097,"end":1118,"expression":{"type":"AssignmentExpression","start":1097,"end":1117,"operator":"=","left":{"type":"MemberExpression","start":1097,"end":1110,"object":{"type":"ThisExpression","start":1097,"end":1101},"property":{"type":"Identifier","start":1102,"end":1110,"name":"_verbose"},"computed":false,"optional":false},"right":{"type":"Literal","start":1113,"end":1117,"value":true,"raw":"true"}}}]}}},{"type":"MethodDefinition","start":1131,"end":1179,"static":false,"computed":false,"key":{"type":"Identifier","start":1131,"end":1139,"name":"setQuiet"},"kind":"method","value":{"type":"FunctionExpression","start":1139,"end":1179,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1142,"end":1179,"body":[{"type":"ExpressionStatement","start":1153,"end":1172,"expression":{"type":"AssignmentExpression","start":1153,"end":1171,"operator":"=","left":{"type":"MemberExpression","start":1153,"end":1164,"object":{"type":"ThisExpression","start":1153,"end":1157},"property":{"type":"Identifier","start":1158,"end":1164,"name":"_quiet"},"computed":false,"optional":false},"right":{"type":"Literal","start":1167,"end":1171,"value":true,"raw":"true"}}}]}}},{"type":"MethodDefinition","start":1287,"end":1336,"static":false,"computed":false,"key":{"type":"Identifier","start":1287,"end":1294,"name":"verbose"},"kind":"method","value":{"type":"FunctionExpression","start":1294,"end":1336,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1297,"end":1336,"body":[{"type":"ReturnStatement","start":1308,"end":1329,"argument":{"type":"MemberExpression","start":1315,"end":1328,"object":{"type":"ThisExpression","start":1315,"end":1319},"property":{"type":"Identifier","start":1320,"end":1328,"name":"_verbose"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":1440,"end":1485,"static":false,"computed":false,"key":{"type":"Identifier","start":1440,"end":1445,"name":"quiet"},"kind":"method","value":{"type":"FunctionExpression","start":1445,"end":1485,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1448,"end":1485,"body":[{"type":"ReturnStatement","start":1459,"end":1478,"argument":{"type":"MemberExpression","start":1466,"end":1477,"object":{"type":"ThisExpression","start":1466,"end":1470},"property":{"type":"Identifier","start":1471,"end":1477,"name":"_quiet"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":1491,"end":1569,"static":false,"computed":false,"key":{"type":"Identifier","start":1491,"end":1496,"name":"error"},"kind":"method","value":{"type":"FunctionExpression","start":1496,"end":1569,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1497,"end":1500,"name":"msg"},{"type":"RestElement","start":1502,"end":1511,"argument":{"type":"Identifier","start":1505,"end":1511,"name":"params"}}],"body":{"type":"BlockStatement","start":1513,"end":1569,"body":[{"type":"ExpressionStatement","start":1524,"end":1562,"expression":{"type":"CallExpression","start":1524,"end":1561,"callee":{"type":"MemberExpression","start":1524,"end":1532,"object":{"type":"ThisExpression","start":1524,"end":1528},"property":{"type":"Identifier","start":1529,"end":1532,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":1533,"end":1547,"object":{"type":"Identifier","start":1533,"end":1541,"name":"LogLevel"},"property":{"type":"Identifier","start":1542,"end":1547,"name":"ERROR"},"computed":false,"optional":false},{"type":"Identifier","start":1549,"end":1552,"name":"msg"},{"type":"Identifier","start":1554,"end":1560,"name":"params"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1575,"end":1651,"static":false,"computed":false,"key":{"type":"Identifier","start":1575,"end":1579,"name":"warn"},"kind":"method","value":{"type":"FunctionExpression","start":1579,"end":1651,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1580,"end":1583,"name":"msg"},{"type":"RestElement","start":1585,"end":1594,"argument":{"type":"Identifier","start":1588,"end":1594,"name":"params"}}],"body":{"type":"BlockStatement","start":1596,"end":1651,"body":[{"type":"ExpressionStatement","start":1607,"end":1644,"expression":{"type":"CallExpression","start":1607,"end":1643,"callee":{"type":"MemberExpression","start":1607,"end":1615,"object":{"type":"ThisExpression","start":1607,"end":1611},"property":{"type":"Identifier","start":1612,"end":1615,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":1616,"end":1629,"object":{"type":"Identifier","start":1616,"end":1624,"name":"LogLevel"},"property":{"type":"Identifier","start":1625,"end":1629,"name":"WARN"},"computed":false,"optional":false},{"type":"Identifier","start":1631,"end":1634,"name":"msg"},{"type":"Identifier","start":1636,"end":1642,"name":"params"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1657,"end":1733,"static":false,"computed":false,"key":{"type":"Identifier","start":1657,"end":1661,"name":"info"},"kind":"method","value":{"type":"FunctionExpression","start":1661,"end":1733,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1662,"end":1665,"name":"msg"},{"type":"RestElement","start":1667,"end":1676,"argument":{"type":"Identifier","start":1670,"end":1676,"name":"params"}}],"body":{"type":"BlockStatement","start":1678,"end":1733,"body":[{"type":"ExpressionStatement","start":1689,"end":1726,"expression":{"type":"CallExpression","start":1689,"end":1725,"callee":{"type":"MemberExpression","start":1689,"end":1697,"object":{"type":"ThisExpression","start":1689,"end":1693},"property":{"type":"Identifier","start":1694,"end":1697,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":1698,"end":1711,"object":{"type":"Identifier","start":1698,"end":1706,"name":"LogLevel"},"property":{"type":"Identifier","start":1707,"end":1711,"name":"INFO"},"computed":false,"optional":false},{"type":"Identifier","start":1713,"end":1716,"name":"msg"},{"type":"Identifier","start":1718,"end":1724,"name":"params"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1739,"end":1817,"static":false,"computed":false,"key":{"type":"Identifier","start":1739,"end":1744,"name":"debug"},"kind":"method","value":{"type":"FunctionExpression","start":1744,"end":1817,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1745,"end":1748,"name":"msg"},{"type":"RestElement","start":1750,"end":1759,"argument":{"type":"Identifier","start":1753,"end":1759,"name":"params"}}],"body":{"type":"BlockStatement","start":1761,"end":1817,"body":[{"type":"ExpressionStatement","start":1772,"end":1810,"expression":{"type":"CallExpression","start":1772,"end":1809,"callee":{"type":"MemberExpression","start":1772,"end":1780,"object":{"type":"ThisExpression","start":1772,"end":1776},"property":{"type":"Identifier","start":1777,"end":1780,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":1781,"end":1795,"object":{"type":"Identifier","start":1781,"end":1789,"name":"LogLevel"},"property":{"type":"Identifier","start":1790,"end":1795,"name":"DEBUG"},"computed":false,"optional":false},{"type":"Identifier","start":1797,"end":1800,"name":"msg"},{"type":"Identifier","start":1802,"end":1808,"name":"params"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1823,"end":2455,"static":false,"computed":false,"key":{"type":"Identifier","start":1823,"end":1826,"name":"log"},"kind":"method","value":{"type":"FunctionExpression","start":1826,"end":2455,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1827,"end":1832,"name":"level"},{"type":"Identifier","start":1834,"end":1837,"name":"msg"},{"type":"Identifier","start":1839,"end":1845,"name":"params"}],"body":{"type":"BlockStatement","start":1847,"end":2455,"body":[{"type":"IfStatement","start":1858,"end":1925,"test":{"type":"UnaryExpression","start":1862,"end":1890,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":1863,"end":1890,"callee":{"type":"MemberExpression","start":1863,"end":1883,"object":{"type":"ThisExpression","start":1863,"end":1867},"property":{"type":"Identifier","start":1868,"end":1883,"name":"isOutputEnabled"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1884,"end":1889,"name":"level"}],"optional":false}},"consequent":{"type":"BlockStatement","start":1892,"end":1925,"body":[{"type":"ReturnStatement","start":1907,"end":1914,"argument":null}]},"alternate":null},{"type":"VariableDeclaration","start":1935,"end":1954,"declarations":[{"type":"VariableDeclarator","start":1939,"end":1953,"id":{"type":"Identifier","start":1939,"end":1953,"name":"coloredMessage"},"init":null}],"kind":"let"},{"type":"SwitchStatement","start":1964,"end":2340,"discriminant":{"type":"Identifier","start":1972,"end":1977,"name":"level"},"cases":[{"type":"SwitchCase","start":1994,"end":2100,"consequent":[{"type":"ExpressionStatement","start":2032,"end":2076,"expression":{"type":"AssignmentExpression","start":2032,"end":2075,"operator":"=","left":{"type":"Identifier","start":2032,"end":2046,"name":"coloredMessage"},"right":{"type":"CallExpression","start":2049,"end":2075,"callee":{"type":"MemberExpression","start":2049,"end":2058,"object":{"type":"Identifier","start":2049,"end":2054,"name":"chalk"},"property":{"type":"Identifier","start":2055,"end":2058,"name":"red"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":2059,"end":2074,"left":{"type":"Literal","start":2059,"end":2068,"value":"ERROR: ","raw":"'ERROR: '"},"operator":"+","right":{"type":"Identifier","start":2071,"end":2074,"name":"msg"}}],"optional":false}}},{"type":"BreakStatement","start":2094,"end":2100,"label":null}],"test":{"type":"MemberExpression","start":1999,"end":2013,"object":{"type":"Identifier","start":1999,"end":2007,"name":"LogLevel"},"property":{"type":"Identifier","start":2008,"end":2013,"name":"ERROR"},"computed":false,"optional":false}},{"type":"SwitchCase","start":2114,"end":2225,"consequent":[{"type":"ExpressionStatement","start":2151,"end":2201,"expression":{"type":"AssignmentExpression","start":2151,"end":2200,"operator":"=","left":{"type":"Identifier","start":2151,"end":2165,"name":"coloredMessage"},"right":{"type":"CallExpression","start":2168,"end":2200,"callee":{"type":"MemberExpression","start":2168,"end":2181,"object":{"type":"Identifier","start":2168,"end":2173,"name":"chalk"},"property":{"type":"Identifier","start":2174,"end":2181,"name":"magenta"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":2182,"end":2199,"left":{"type":"Literal","start":2182,"end":2193,"value":"WARNING: ","raw":"'WARNING: '"},"operator":"+","right":{"type":"Identifier","start":2196,"end":2199,"name":"msg"}}],"optional":false}}},{"type":"BreakStatement","start":2219,"end":2225,"label":null}],"test":{"type":"MemberExpression","start":2119,"end":2132,"object":{"type":"Identifier","start":2119,"end":2127,"name":"LogLevel"},"property":{"type":"Identifier","start":2128,"end":2132,"name":"WARN"},"computed":false,"optional":false}},{"type":"SwitchCase","start":2239,"end":2329,"consequent":[{"type":"ExpressionStatement","start":2265,"end":2305,"expression":{"type":"AssignmentExpression","start":2265,"end":2304,"operator":"=","left":{"type":"Identifier","start":2265,"end":2279,"name":"coloredMessage"},"right":{"type":"CallExpression","start":2282,"end":2304,"callee":{"type":"MemberExpression","start":2282,"end":2292,"object":{"type":"Identifier","start":2282,"end":2287,"name":"chalk"},"property":{"type":"Identifier","start":2288,"end":2292,"name":"gray"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":2293,"end":2303,"left":{"type":"Literal","start":2293,"end":2297,"value":"* ","raw":"'* '"},"operator":"+","right":{"type":"Identifier","start":2300,"end":2303,"name":"msg"}}],"optional":false}}},{"type":"BreakStatement","start":2323,"end":2329,"label":null}],"test":null}]},{"type":"VariableDeclaration","start":2350,"end":2399,"declarations":[{"type":"VariableDeclarator","start":2356,"end":2398,"id":{"type":"Identifier","start":2356,"end":2362,"name":"outMsg"},"init":{"type":"CallExpression","start":2365,"end":2398,"callee":{"type":"Identifier","start":2365,"end":2371,"name":"format"},"arguments":[{"type":"Identifier","start":2372,"end":2386,"name":"coloredMessage"},{"type":"SpreadElement","start":2388,"end":2397,"argument":{"type":"Identifier","start":2391,"end":2397,"name":"params"}}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":2409,"end":2448,"expression":{"type":"CallExpression","start":2409,"end":2447,"callee":{"type":"MemberExpression","start":2409,"end":2432,"object":{"type":"MemberExpression","start":2409,"end":2426,"object":{"type":"ThisExpression","start":2409,"end":2413},"property":{"type":"Identifier","start":2414,"end":2426,"name":"outputStream"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2427,"end":2432,"name":"write"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":2433,"end":2446,"left":{"type":"Identifier","start":2433,"end":2439,"name":"outMsg"},"operator":"+","right":{"type":"Literal","start":2442,"end":2446,"value":"\n","raw":"'\\n'"}}],"optional":false}}]}}},{"type":"MethodDefinition","start":2461,"end":3193,"static":false,"computed":false,"key":{"type":"Identifier","start":2461,"end":2476,"name":"isOutputEnabled"},"kind":"method","value":{"type":"FunctionExpression","start":2476,"end":3193,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2477,"end":2482,"name":"level"}],"body":{"type":"BlockStatement","start":2484,"end":3193,"body":[{"type":"VariableDeclaration","start":2495,"end":2528,"declarations":[{"type":"VariableDeclarator","start":2499,"end":2511,"id":{"type":"Identifier","start":2499,"end":2511,"name":"quietEnabled"},"init":null},{"type":"VariableDeclarator","start":2513,"end":2527,"id":{"type":"Identifier","start":2513,"end":2527,"name":"verboseEnabled"},"init":null}],"kind":"let"},{"type":"IfStatement","start":2538,"end":2769,"test":{"type":"LogicalExpression","start":2542,"end":2570,"left":{"type":"MemberExpression","start":2542,"end":2553,"object":{"type":"ThisExpression","start":2542,"end":2546},"property":{"type":"Identifier","start":2547,"end":2553,"name":"_quiet"},"computed":false,"optional":false},"operator":"&&","right":{"type":"MemberExpression","start":2557,"end":2570,"object":{"type":"ThisExpression","start":2557,"end":2561},"property":{"type":"Identifier","start":2562,"end":2570,"name":"_verbose"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":2572,"end":2656,"body":[{"type":"ExpressionStatement","start":2587,"end":2608,"expression":{"type":"AssignmentExpression","start":2587,"end":2607,"operator":"=","left":{"type":"Identifier","start":2587,"end":2599,"name":"quietEnabled"},"right":{"type":"Literal","start":2602,"end":2607,"value":false,"raw":"false"}}},{"type":"ExpressionStatement","start":2622,"end":2645,"expression":{"type":"AssignmentExpression","start":2622,"end":2644,"operator":"=","left":{"type":"Identifier","start":2622,"end":2636,"name":"verboseEnabled"},"right":{"type":"Literal","start":2639,"end":2644,"value":false,"raw":"false"}}}]},"alternate":{"type":"BlockStatement","start":2671,"end":2769,"body":[{"type":"ExpressionStatement","start":2686,"end":2713,"expression":{"type":"AssignmentExpression","start":2686,"end":2712,"operator":"=","left":{"type":"Identifier","start":2686,"end":2698,"name":"quietEnabled"},"right":{"type":"MemberExpression","start":2701,"end":2712,"object":{"type":"ThisExpression","start":2701,"end":2705},"property":{"type":"Identifier","start":2706,"end":2712,"name":"_quiet"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":2727,"end":2758,"expression":{"type":"AssignmentExpression","start":2727,"end":2757,"operator":"=","left":{"type":"Identifier","start":2727,"end":2741,"name":"verboseEnabled"},"right":{"type":"MemberExpression","start":2744,"end":2757,"object":{"type":"ThisExpression","start":2744,"end":2748},"property":{"type":"Identifier","start":2749,"end":2757,"name":"_verbose"},"computed":false,"optional":false}}}]}},{"type":"SwitchStatement","start":2779,"end":3186,"discriminant":{"type":"Identifier","start":2787,"end":2792,"name":"level"},"cases":[{"type":"SwitchCase","start":2809,"end":2859,"consequent":[{"type":"ReturnStatement","start":2847,"end":2859,"argument":{"type":"Literal","start":2854,"end":2858,"value":true,"raw":"true"}}],"test":{"type":"MemberExpression","start":2814,"end":2828,"object":{"type":"Identifier","start":2814,"end":2822,"name":"LogLevel"},"property":{"type":"Identifier","start":2823,"end":2828,"name":"ERROR"},"computed":false,"optional":false}},{"type":"SwitchCase","start":2897,"end":2957,"consequent":[{"type":"ReturnStatement","start":2934,"end":2957,"argument":{"type":"UnaryExpression","start":2942,"end":2955,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":2943,"end":2955,"name":"quietEnabled"}}}],"test":{"type":"MemberExpression","start":2902,"end":2915,"object":{"type":"Identifier","start":2902,"end":2910,"name":"LogLevel"},"property":{"type":"Identifier","start":2911,"end":2915,"name":"WARN"},"computed":false,"optional":false}},{"type":"SwitchCase","start":2971,"end":3049,"consequent":[{"type":"ReturnStatement","start":3008,"end":3049,"argument":{"type":"LogicalExpression","start":3016,"end":3047,"left":{"type":"Identifier","start":3016,"end":3030,"name":"verboseEnabled"},"operator":"&&","right":{"type":"UnaryExpression","start":3034,"end":3047,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":3035,"end":3047,"name":"quietEnabled"}}}}],"test":{"type":"MemberExpression","start":2976,"end":2989,"object":{"type":"Identifier","start":2976,"end":2984,"name":"LogLevel"},"property":{"type":"Identifier","start":2985,"end":2989,"name":"INFO"},"computed":false,"optional":false}},{"type":"SwitchCase","start":3063,"end":3123,"consequent":[{"type":"ReturnStatement","start":3101,"end":3123,"argument":{"type":"Identifier","start":3108,"end":3122,"name":"verboseEnabled"}}],"test":{"type":"MemberExpression","start":3068,"end":3082,"object":{"type":"Identifier","start":3068,"end":3076,"name":"LogLevel"},"property":{"type":"Identifier","start":3077,"end":3082,"name":"DEBUG"},"computed":false,"optional":false}},{"type":"SwitchCase","start":3137,"end":3175,"consequent":[{"type":"ReturnStatement","start":3163,"end":3175,"argument":{"type":"Literal","start":3170,"end":3174,"value":true,"raw":"true"}}],"test":null}]}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":3198,"end":11520}]},"code":"/**\r\n * Created by martin on 17.02.2017.\r\n * Very simple class to control the output of a command.\r\n * Output can be errors, warnings, infos and debug-Outputs.\r\n * The output can be controlled via 2 flags, quiet and verbose.\r\n * If quit is enabled only error messages are shown.\r\n * If verbose is enabled, everything is shown.\r\n * If both are not enabled (the default) errors, warnings and infos are shown.\r\n * If not are enabled (strange), we assumed the default.\r\n */\r\nimport chalk from 'chalk';\r\nimport { format } from 'util';\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"ERROR\"] = 0] = \"ERROR\";\r\n    LogLevel[LogLevel[\"WARN\"] = 1] = \"WARN\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"DEBUG\"] = 3] = \"DEBUG\";\r\n})(LogLevel || (LogLevel = {}));\r\nexport class CommandOutput {\r\n    constructor(stdout) {\r\n        this._quiet = false;\r\n        this._verbose = false;\r\n        if (stdout) {\r\n            this.outputStream = stdout;\r\n        }\r\n        else {\r\n            this.outputStream = process.stdout;\r\n        }\r\n    }\r\n    setVerbose() {\r\n        this._verbose = true;\r\n    }\r\n    setQuiet() {\r\n        this._quiet = true;\r\n    }\r\n    /**\r\n     * Test, wether verbose is enabled.\r\n     * @return wether verbose is enabled.\r\n     */\r\n    verbose() {\r\n        return this._verbose;\r\n    }\r\n    /**\r\n     * Test, wether quiet is enabled.\r\n     * @return wether quiet is enabled.\r\n     */\r\n    quiet() {\r\n        return this._quiet;\r\n    }\r\n    error(msg, ...params) {\r\n        this.log(LogLevel.ERROR, msg, params);\r\n    }\r\n    warn(msg, ...params) {\r\n        this.log(LogLevel.WARN, msg, params);\r\n    }\r\n    info(msg, ...params) {\r\n        this.log(LogLevel.INFO, msg, params);\r\n    }\r\n    debug(msg, ...params) {\r\n        this.log(LogLevel.DEBUG, msg, params);\r\n    }\r\n    log(level, msg, params) {\r\n        if (!this.isOutputEnabled(level)) {\r\n            return;\r\n        }\r\n        let coloredMessage;\r\n        switch (level) {\r\n            case LogLevel.ERROR:\r\n                coloredMessage = chalk.red('ERROR: ' + msg);\r\n                break;\r\n            case LogLevel.WARN:\r\n                coloredMessage = chalk.magenta('WARNING: ' + msg);\r\n                break;\r\n            default:\r\n                coloredMessage = chalk.gray('* ' + msg);\r\n                break;\r\n        }\r\n        const outMsg = format(coloredMessage, ...params);\r\n        this.outputStream.write(outMsg + '\\n');\r\n    }\r\n    isOutputEnabled(level) {\r\n        let quietEnabled, verboseEnabled;\r\n        if (this._quiet && this._verbose) {\r\n            quietEnabled = false;\r\n            verboseEnabled = false;\r\n        }\r\n        else {\r\n            quietEnabled = this._quiet;\r\n            verboseEnabled = this._verbose;\r\n        }\r\n        switch (level) {\r\n            case LogLevel.ERROR:\r\n                return true; // always output errors\r\n            case LogLevel.WARN:\r\n                return (!quietEnabled);\r\n            case LogLevel.INFO:\r\n                return (verboseEnabled && !quietEnabled);\r\n            case LogLevel.DEBUG:\r\n                return verboseEnabled;\r\n            default:\r\n                return true;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["chalk","util"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\command-output.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Created by martin on 17.02.2017.\r\n * Very simple class to control the output of a command.\r\n * Output can be errors, warnings, infos and debug-Outputs.\r\n * The output can be controlled via 2 flags, quiet and verbose.\r\n * If quit is enabled only error messages are shown.\r\n * If verbose is enabled, everything is shown.\r\n * If both are not enabled (the default) errors, warnings and infos are shown.\r\n * If not are enabled (strange), we assumed the default.\r\n */\r\nimport chalk from 'chalk';\r\nimport { format } from 'util';\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"ERROR\"] = 0] = \"ERROR\";\r\n    LogLevel[LogLevel[\"WARN\"] = 1] = \"WARN\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"DEBUG\"] = 3] = \"DEBUG\";\r\n})(LogLevel || (LogLevel = {}));\r\nexport class CommandOutput {\r\n    constructor(stdout) {\r\n        this._quiet = false;\r\n        this._verbose = false;\r\n        if (stdout) {\r\n            this.outputStream = stdout;\r\n        }\r\n        else {\r\n            this.outputStream = process.stdout;\r\n        }\r\n    }\r\n    setVerbose() {\r\n        this._verbose = true;\r\n    }\r\n    setQuiet() {\r\n        this._quiet = true;\r\n    }\r\n    /**\r\n     * Test, wether verbose is enabled.\r\n     * @return wether verbose is enabled.\r\n     */\r\n    verbose() {\r\n        return this._verbose;\r\n    }\r\n    /**\r\n     * Test, wether quiet is enabled.\r\n     * @return wether quiet is enabled.\r\n     */\r\n    quiet() {\r\n        return this._quiet;\r\n    }\r\n    error(msg, ...params) {\r\n        this.log(LogLevel.ERROR, msg, params);\r\n    }\r\n    warn(msg, ...params) {\r\n        this.log(LogLevel.WARN, msg, params);\r\n    }\r\n    info(msg, ...params) {\r\n        this.log(LogLevel.INFO, msg, params);\r\n    }\r\n    debug(msg, ...params) {\r\n        this.log(LogLevel.DEBUG, msg, params);\r\n    }\r\n    log(level, msg, params) {\r\n        if (!this.isOutputEnabled(level)) {\r\n            return;\r\n        }\r\n        let coloredMessage;\r\n        switch (level) {\r\n            case LogLevel.ERROR:\r\n                coloredMessage = chalk.red('ERROR: ' + msg);\r\n                break;\r\n            case LogLevel.WARN:\r\n                coloredMessage = chalk.magenta('WARNING: ' + msg);\r\n                break;\r\n            default:\r\n                coloredMessage = chalk.gray('* ' + msg);\r\n                break;\r\n        }\r\n        const outMsg = format(coloredMessage, ...params);\r\n        this.outputStream.write(outMsg + '\\n');\r\n    }\r\n    isOutputEnabled(level) {\r\n        let quietEnabled, verboseEnabled;\r\n        if (this._quiet && this._verbose) {\r\n            quietEnabled = false;\r\n            verboseEnabled = false;\r\n        }\r\n        else {\r\n            quietEnabled = this._quiet;\r\n            verboseEnabled = this._verbose;\r\n        }\r\n        switch (level) {\r\n            case LogLevel.ERROR:\r\n                return true; // always output errors\r\n            case LogLevel.WARN:\r\n                return (!quietEnabled);\r\n            case LogLevel.INFO:\r\n                return (verboseEnabled && !quietEnabled);\r\n            case LogLevel.DEBUG:\r\n                return verboseEnabled;\r\n            default:\r\n                return true;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"command-output.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/common/command-output.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[],[],[],[[3,0,9,3]],[[0,0,11,0],[7,0,11,7],[12,0,11,12],[18,0,11,18],[25,0,11,25],[26,0,11,26]],[[0,0,13,0],[7,0,13,7],[9,0,13,8],[15,0,13,14],[17,0,13,15],[23,0,13,21],[29,0,13,27],[30,0,13,28]],[[0,0,15,0],[4,0,15,5],[12,0,20,1]],[[0,0,15,0],[11,0,15,5],[19,0,15,13]],[[4,0,16,4],[45,0,16,11],[46,0,16,11]],[[4,0,17,4],[43,0,17,10],[44,0,17,10]],[[4,0,18,4],[43,0,18,10],[44,0,18,10]],[[4,0,19,4],[45,0,19,11],[46,0,19,11]],[[0,0,20,0],[1,0,20,1],[3,0,15,5],[11,0,15,13],[16,0,15,5],[24,0,15,13],[32,0,20,1]],[[0,0,22,0],[6,0,22,6],[13,0,22,13],[26,0,22,26]],[[4,0,36,4],[16,0,36,16],[22,0,36,39]],[[8,0,37,8],[12,0,37,12],[13,0,37,13],[19,0,37,19],[22,0,37,22],[27,0,37,27],[28,0,37,28]],[[8,0,38,8],[12,0,38,12],[13,0,38,13],[21,0,38,21],[24,0,38,24],[29,0,38,29],[30,0,38,30]],[[8,0,39,8],[12,0,39,12],[18,0,39,18],[20,0,39,20]],[[12,0,40,12],[16,0,40,16],[17,0,40,17],[29,0,40,29],[32,0,40,32],[38,0,40,38],[39,0,40,39]],[[9,0,41,9]],[[13,0,41,15]],[[12,0,42,12],[16,0,42,16],[17,0,42,17],[29,0,42,29],[32,0,42,32],[39,0,42,39],[40,0,42,40],[46,0,42,46],[47,0,42,47]],[[9,0,43,9]],[[4,0,44,4],[5,0,44,5]],[[4,0,46,11],[14,0,46,21]],[[8,0,47,8],[12,0,47,12],[13,0,47,13],[21,0,47,21],[24,0,47,24],[28,0,47,28],[29,0,47,29]],[[4,0,48,4],[5,0,48,5]],[[4,0,50,11],[12,0,50,19]],[[8,0,51,8],[12,0,51,12],[13,0,51,13],[19,0,51,19],[22,0,51,22],[26,0,51,26],[27,0,51,27]],[[4,0,52,4],[5,0,52,5]],[[4,0,54,4]],[],[],[[7,0,57,7]],[[4,0,58,11],[11,0,58,18]],[[8,0,59,8],[15,0,59,15],[19,0,59,19],[20,0,59,20],[28,0,59,28],[29,0,59,29]],[[4,0,60,4],[5,0,60,5]],[[4,0,62,4]],[],[],[[7,0,65,7]],[[4,0,66,11],[9,0,66,16]],[[8,0,67,8],[15,0,67,15],[19,0,67,19],[20,0,67,20],[26,0,67,26],[27,0,67,27]],[[4,0,68,4],[5,0,68,5]],[[4,0,70,11],[9,0,70,16],[10,0,70,17],[13,0,70,20],[15,0,70,22],[18,0,70,25],[24,0,70,38]],[[8,0,71,8],[12,0,71,12],[13,0,71,13],[16,0,71,16],[17,0,71,17],[25,0,71,25],[26,0,71,26],[31,0,71,31],[33,0,71,33],[36,0,71,36],[38,0,71,38],[44,0,71,44],[45,0,71,45],[46,0,71,46]],[[4,0,72,4],[5,0,72,5]],[[4,0,74,11],[8,0,74,15],[9,0,74,16],[12,0,74,19],[14,0,74,21],[17,0,74,24],[23,0,74,37]],[[8,0,75,8],[12,0,75,12],[13,0,75,13],[16,0,75,16],[17,0,75,17],[25,0,75,25],[26,0,75,26],[30,0,75,30],[32,0,75,32],[35,0,75,35],[37,0,75,37],[43,0,75,43],[44,0,75,44],[45,0,75,45]],[[4,0,76,4],[5,0,76,5]],[[4,0,78,11],[8,0,78,15],[9,0,78,16],[12,0,78,19],[14,0,78,21],[17,0,78,24],[23,0,78,37]],[[8,0,79,8],[12,0,79,12],[13,0,79,13],[16,0,79,16],[17,0,79,17],[25,0,79,25],[26,0,79,26],[30,0,79,30],[32,0,79,32],[35,0,79,35],[37,0,79,37],[43,0,79,43],[44,0,79,44],[45,0,79,45]],[[4,0,80,4],[5,0,80,5]],[[4,0,82,11],[9,0,82,16],[10,0,82,17],[13,0,82,20],[15,0,82,22],[18,0,82,25],[24,0,82,38]],[[8,0,83,8],[12,0,83,12],[13,0,83,13],[16,0,83,16],[17,0,83,17],[25,0,83,25],[26,0,83,26],[31,0,83,31],[33,0,83,33],[36,0,83,36],[38,0,83,38],[44,0,83,44],[45,0,83,45],[46,0,83,46]],[[4,0,84,4],[5,0,84,5]],[[4,0,86,12],[7,0,86,15],[8,0,86,16],[13,0,86,31],[15,0,86,33],[18,0,86,36],[20,0,86,38],[26,0,86,51]],[[8,0,87,8],[12,0,87,12],[13,0,87,13],[17,0,87,17],[18,0,87,18],[33,0,87,33],[34,0,87,34],[39,0,87,39],[40,0,87,40],[42,0,87,42]],[[12,0,88,12],[19,0,88,19]],[[9,0,89,9]],[[8,0,90,8],[12,0,90,12],[26,0,90,26],[27,0,90,27]],[[8,0,91,8],[16,0,91,16],[21,0,91,21],[23,0,91,23]],[[12,0,92,12],[17,0,92,17],[25,0,92,25],[26,0,92,26],[31,0,92,31]],[[16,0,93,16],[30,0,93,30],[33,0,93,33],[38,0,93,38],[39,0,93,39],[42,0,93,42],[43,0,93,43],[52,0,93,52],[55,0,93,55],[58,0,93,58],[59,0,93,59],[60,0,93,60]],[[16,0,94,16],[22,0,94,22]],[[12,0,95,12],[17,0,95,17],[25,0,95,25],[26,0,95,26],[30,0,95,30]],[[16,0,96,16],[30,0,96,30],[33,0,96,33],[38,0,96,38],[39,0,96,39],[46,0,96,46],[47,0,96,47],[58,0,96,58],[61,0,96,61],[64,0,96,64],[65,0,96,65],[66,0,96,66]],[[16,0,97,16],[22,0,97,22]],[[12,0,98,12]],[[16,0,99,16],[30,0,99,30],[33,0,99,33],[38,0,99,38],[39,0,99,39],[43,0,99,43],[44,0,99,44],[48,0,99,48],[51,0,99,51],[54,0,99,54],[55,0,99,55],[56,0,99,56]],[[16,0,100,16],[22,0,100,22]],[[9,0,101,9]],[[8,0,102,8],[14,0,102,14],[20,0,102,20],[23,0,102,23],[29,0,102,29],[30,0,102,30],[44,0,102,44],[46,0,102,46],[49,0,102,49],[55,0,102,55],[56,0,102,56],[57,0,102,57]],[[8,0,103,8],[12,0,103,12],[13,0,103,13],[25,0,103,25],[26,0,103,26],[31,0,103,31],[32,0,103,32],[38,0,103,38],[41,0,103,41],[45,0,103,45],[46,0,103,46],[47,0,103,47]],[[4,0,104,4],[5,0,104,5]],[[4,0,106,12],[19,0,106,27],[20,0,106,28],[25,0,106,43]],[[8,0,107,8],[12,0,107,12],[24,0,107,24],[26,0,107,26],[40,0,107,49],[41,0,107,50]],[[8,0,108,8],[12,0,108,12],[16,0,108,16],[17,0,108,17],[23,0,108,23],[27,0,108,27],[31,0,108,31],[32,0,108,32],[40,0,108,40],[42,0,108,42]],[[12,0,109,12],[24,0,109,24],[27,0,109,27],[32,0,109,32],[33,0,109,33]],[[12,0,110,12],[26,0,110,26],[29,0,110,29],[34,0,110,34],[35,0,110,35]],[[9,0,111,9]],[[13,0,111,15]],[[12,0,112,12],[24,0,112,24],[27,0,112,27],[31,0,112,31],[32,0,112,32],[38,0,112,38],[39,0,112,39]],[[12,0,113,12],[26,0,113,26],[29,0,113,29],[33,0,113,33],[34,0,113,34],[42,0,113,42],[43,0,113,43]],[[9,0,114,9]],[[8,0,115,8],[16,0,115,16],[21,0,115,21],[23,0,115,23]],[[12,0,116,12],[17,0,116,17],[25,0,116,25],[26,0,116,26],[31,0,116,31]],[[16,0,117,16],[23,0,117,23],[27,0,117,27],[28,0,117,28],[29,0,117,32],[52,0,117,55]],[[12,0,118,12],[17,0,118,17],[25,0,118,25],[26,0,118,26],[30,0,118,30]],[[16,0,119,16],[23,0,119,23],[24,0,119,24],[25,0,119,25],[37,0,119,37],[38,0,119,38],[39,0,119,39]],[[12,0,120,12],[17,0,120,17],[25,0,120,25],[26,0,120,26],[30,0,120,30]],[[16,0,121,16],[23,0,121,23],[24,0,121,24],[38,0,121,38],[42,0,121,42],[43,0,121,43],[55,0,121,55],[56,0,121,56],[57,0,121,57]],[[12,0,122,12],[17,0,122,17],[25,0,122,25],[26,0,122,26],[31,0,122,31]],[[16,0,123,16],[23,0,123,23],[37,0,123,37],[38,0,123,38]],[[12,0,124,12]],[[16,0,125,16],[23,0,125,23],[27,0,125,27],[28,0,125,28]],[[9,0,126,9]],[[4,0,127,4],[5,0,127,5]],[[1,0,128,1]]],"sourcesContent":["/**\r\n * Created by martin on 17.02.2017.\r\n * Very simple class to control the output of a command.\r\n * Output can be errors, warnings, infos and debug-Outputs.\r\n * The output can be controlled via 2 flags, quiet and verbose.\r\n * If quit is enabled only error messages are shown.\r\n * If verbose is enabled, everything is shown.\r\n * If both are not enabled (the default) errors, warnings and infos are shown.\r\n * If not are enabled (strange), we assumed the default.\r\n */\r\n\r\nimport chalk from 'chalk';\r\nimport WritableStream = NodeJS.WritableStream;\r\nimport {format} from 'util';\r\n\r\nenum LogLevel {\r\n    'ERROR',\r\n    'WARN',\r\n    'INFO',\r\n    'DEBUG'\r\n}\r\n\r\nexport class CommandOutput {\r\n\r\n    /**\r\n     * verbose enables output of everything.\r\n     */\r\n    public _verbose: boolean;\r\n\r\n    /**\r\n     * quiet disables output of everything but errors.\r\n     */\r\n    public _quiet: boolean;\r\n\r\n    private outputStream: WritableStream;\r\n\r\n    constructor(stdout?: WritableStream) {\r\n        this._quiet = false;\r\n        this._verbose = false;\r\n        if (stdout) {\r\n            this.outputStream = stdout;\r\n        } else {\r\n            this.outputStream = process.stdout;\r\n        }\r\n    }\r\n\r\n    public setVerbose() {\r\n        this._verbose = true;\r\n    }\r\n\r\n    public setQuiet() {\r\n        this._quiet = true;\r\n    }\r\n\r\n    /**\r\n     * Test, wether verbose is enabled.\r\n     * @return wether verbose is enabled.\r\n     */\r\n    public verbose(): boolean {\r\n        return this._verbose;\r\n    }\r\n\r\n    /**\r\n     * Test, wether quiet is enabled.\r\n     * @return wether quiet is enabled.\r\n     */\r\n    public quiet(): boolean {\r\n        return this._quiet;\r\n    }\r\n\r\n    public error(msg, ...params: any[]) {\r\n        this.log(LogLevel.ERROR, msg, params);\r\n    }\r\n\r\n    public warn(msg, ...params: any[]) {\r\n        this.log(LogLevel.WARN, msg, params);\r\n    }\r\n\r\n    public info(msg, ...params: any[]) {\r\n        this.log(LogLevel.INFO, msg, params);\r\n    }\r\n\r\n    public debug(msg, ...params: any[]) {\r\n        this.log(LogLevel.DEBUG, msg, params);\r\n    }\r\n\r\n    private log(level: LogLevel, msg, params: any[]) {\r\n        if (!this.isOutputEnabled(level)) {\r\n            return;\r\n        }\r\n        let coloredMessage;\r\n        switch (level) {\r\n            case LogLevel.ERROR:\r\n                coloredMessage = chalk.red('ERROR: ' + msg);\r\n                break;\r\n            case LogLevel.WARN:\r\n                coloredMessage = chalk.magenta('WARNING: ' + msg);\r\n                break;\r\n            default:\r\n                coloredMessage = chalk.gray('* ' + msg);\r\n                break;\r\n        }\r\n        const outMsg = format(coloredMessage, ...params);\r\n        this.outputStream.write(outMsg + '\\n');\r\n    }\r\n\r\n    private isOutputEnabled(level: LogLevel): boolean {\r\n        let quietEnabled, verboseEnabled: boolean;\r\n        if (this._quiet && this._verbose) {\r\n            quietEnabled = false;\r\n            verboseEnabled = false;\r\n        } else {\r\n            quietEnabled = this._quiet;\r\n            verboseEnabled = this._verbose;\r\n        }\r\n        switch (level) {\r\n            case LogLevel.ERROR:\r\n                return true;    // always output errors\r\n            case LogLevel.WARN:\r\n                return (!quietEnabled);\r\n            case LogLevel.INFO:\r\n                return (verboseEnabled && !quietEnabled);\r\n            case LogLevel.DEBUG:\r\n                return verboseEnabled;\r\n            default:\r\n                return true;\r\n        }\r\n    }\r\n}\r\n"]},"resolvedIds":{"chalk":{"external":true,"id":"chalk","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"util":{"external":true,"id":"util","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1185,"body":[{"type":"ExportNamedDeclaration","start":47,"end":253,"declaration":{"type":"ClassDeclaration","start":54,"end":253,"id":{"type":"Identifier","start":60,"end":75,"name":"XliffMergeError"},"superClass":{"type":"Identifier","start":84,"end":89,"name":"Error"},"body":{"type":"ClassBody","start":90,"end":253,"body":[{"type":"MethodDefinition","start":97,"end":250,"static":false,"computed":false,"key":{"type":"Identifier","start":97,"end":108,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":108,"end":250,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":109,"end":112,"name":"msg"}],"body":{"type":"BlockStatement","start":114,"end":250,"body":[{"type":"ExpressionStatement","start":125,"end":136,"expression":{"type":"CallExpression","start":125,"end":135,"callee":{"type":"Super","start":125,"end":130},"arguments":[{"type":"Identifier","start":131,"end":134,"name":"msg"}],"optional":false}},{"type":"ExpressionStatement","start":188,"end":243,"expression":{"type":"CallExpression","start":188,"end":242,"callee":{"type":"MemberExpression","start":188,"end":209,"object":{"type":"Identifier","start":188,"end":194,"name":"Object"},"property":{"type":"Identifier","start":195,"end":209,"name":"setPrototypeOf"},"computed":false,"optional":false},"arguments":[{"type":"ThisExpression","start":210,"end":214},{"type":"MemberExpression","start":216,"end":241,"object":{"type":"Identifier","start":216,"end":231,"name":"XliffMergeError"},"property":{"type":"Identifier","start":232,"end":241,"name":"prototype"},"computed":false,"optional":false}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieGxpZmYtbWVyZ2UtZXJyb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy94bGlmZm1lcmdlL3NyYy94bGlmZm1lcmdlL3hsaWZmLW1lcmdlLWVycm9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBRUgsTUFBTSxPQUFPLGVBQWdCLFNBQVEsS0FBSztJQUV0QyxZQUFZLEdBQVc7UUFDbkIsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRVgsZ0NBQWdDO1FBQ2hDLE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLGVBQWUsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMzRCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMTcuMDIuMjAxNy5cclxuICovXHJcblxyXG5leHBvcnQgY2xhc3MgWGxpZmZNZXJnZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG1zZzogc3RyaW5nKSB7XHJcbiAgICAgICAgc3VwZXIobXNnKTtcclxuXHJcbiAgICAgICAgLy8gU2V0IHRoZSBwcm90b3R5cGUgZXhwbGljaXRseS5cclxuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgWGxpZmZNZXJnZUVycm9yLnByb3RvdHlwZSk7XHJcbiAgICB9XHJcbn1cclxuIl19","start":255,"end":1185}]},"code":"/**\r\n * Created by martin on 17.02.2017.\r\n */\r\nexport class XliffMergeError extends Error {\r\n    constructor(msg) {\r\n        super(msg);\r\n        // Set the prototype explicitly.\r\n        Object.setPrototypeOf(this, XliffMergeError.prototype);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieGxpZmYtbWVyZ2UtZXJyb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy94bGlmZm1lcmdlL3NyYy94bGlmZm1lcmdlL3hsaWZmLW1lcmdlLWVycm9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBRUgsTUFBTSxPQUFPLGVBQWdCLFNBQVEsS0FBSztJQUV0QyxZQUFZLEdBQVc7UUFDbkIsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRVgsZ0NBQWdDO1FBQ2hDLE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLGVBQWUsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMzRCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMTcuMDIuMjAxNy5cclxuICovXHJcblxyXG5leHBvcnQgY2xhc3MgWGxpZmZNZXJnZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG1zZzogc3RyaW5nKSB7XHJcbiAgICAgICAgc3VwZXIobXNnKTtcclxuXHJcbiAgICAgICAgLy8gU2V0IHRoZSBwcm90b3R5cGUgZXhwbGljaXRseS5cclxuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgWGxpZmZNZXJnZUVycm9yLnByb3RvdHlwZSk7XHJcbiAgICB9XHJcbn1cclxuIl19","customTransformCache":false,"dependencies":[],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\xliff-merge-error.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Created by martin on 17.02.2017.\r\n */\r\nexport class XliffMergeError extends Error {\r\n    constructor(msg) {\r\n        super(msg);\r\n        // Set the prototype explicitly.\r\n        Object.setPrototypeOf(this, XliffMergeError.prototype);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieGxpZmYtbWVyZ2UtZXJyb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy94bGlmZm1lcmdlL3NyYy94bGlmZm1lcmdlL3hsaWZmLW1lcmdlLWVycm9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBRUgsTUFBTSxPQUFPLGVBQWdCLFNBQVEsS0FBSztJQUV0QyxZQUFZLEdBQVc7UUFDbkIsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRVgsZ0NBQWdDO1FBQ2hDLE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLGVBQWUsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMzRCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMTcuMDIuMjAxNy5cclxuICovXHJcblxyXG5leHBvcnQgY2xhc3MgWGxpZmZNZXJnZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG1zZzogc3RyaW5nKSB7XHJcbiAgICAgICAgc3VwZXIobXNnKTtcclxuXHJcbiAgICAgICAgLy8gU2V0IHRoZSBwcm90b3R5cGUgZXhwbGljaXRseS5cclxuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgWGxpZmZNZXJnZUVycm9yLnByb3RvdHlwZSk7XHJcbiAgICB9XHJcbn1cclxuIl19","originalSourcemap":{"version":3,"file":"xliff-merge-error.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/xliffmerge/xliff-merge-error.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[6,0,4,6],[13,0,4,13],[28,0,4,29],[37,0,4,37],[42,0,4,42]],[[4,0,6,4],[16,0,6,16],[19,0,6,27]],[[8,0,7,8],[13,0,7,13],[14,0,7,14],[17,0,7,17],[18,0,7,18],[19,0,7,19]],[[8,0,9,8],[40,0,9,40]],[[8,0,10,8],[14,0,10,14],[15,0,10,15],[29,0,10,29],[30,0,10,30],[34,0,10,34],[36,0,10,36],[51,0,10,51],[52,0,10,52],[61,0,10,61],[62,0,10,62],[63,0,10,63]],[[4,0,11,4],[5,0,11,5]],[[1,0,12,1]]],"sourcesContent":["/**\r\n * Created by martin on 17.02.2017.\r\n */\r\n\r\nexport class XliffMergeError extends Error {\r\n\r\n    constructor(msg: string) {\r\n        super(msg);\r\n\r\n        // Set the prototype explicitly.\r\n        Object.setPrototypeOf(this, XliffMergeError.prototype);\r\n    }\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":10529,"body":[{"type":"ImportDeclaration","start":0,"end":25,"specifiers":[{"type":"ImportNamespaceSpecifier","start":7,"end":14,"local":{"type":"Identifier","start":12,"end":14,"name":"fs"}}],"source":{"type":"Literal","start":20,"end":24,"value":"fs","raw":"'fs'"}},{"type":"ExportNamedDeclaration","start":151,"end":2937,"declaration":{"type":"ClassDeclaration","start":158,"end":2937,"id":{"type":"Identifier","start":164,"end":172,"name":"FileUtil"},"superClass":null,"body":{"type":"ClassBody","start":173,"end":2937,"body":[{"type":"MethodDefinition","start":295,"end":368,"static":true,"computed":false,"key":{"type":"Identifier","start":302,"end":308,"name":"exists"},"kind":"method","value":{"type":"FunctionExpression","start":308,"end":368,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":309,"end":317,"name":"filename"}],"body":{"type":"BlockStatement","start":319,"end":368,"body":[{"type":"ReturnStatement","start":330,"end":361,"argument":{"type":"CallExpression","start":337,"end":360,"callee":{"type":"MemberExpression","start":337,"end":350,"object":{"type":"Identifier","start":337,"end":339,"name":"fs"},"property":{"type":"Identifier","start":340,"end":350,"name":"existsSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":351,"end":359,"name":"filename"}],"optional":false}}]}}},{"type":"MethodDefinition","start":511,"end":604,"static":true,"computed":false,"key":{"type":"Identifier","start":518,"end":522,"name":"read"},"kind":"method","value":{"type":"FunctionExpression","start":522,"end":604,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":523,"end":531,"name":"filename"},{"type":"Identifier","start":533,"end":541,"name":"encoding"}],"body":{"type":"BlockStatement","start":543,"end":604,"body":[{"type":"ReturnStatement","start":554,"end":597,"argument":{"type":"CallExpression","start":561,"end":596,"callee":{"type":"MemberExpression","start":561,"end":576,"object":{"type":"Identifier","start":561,"end":563,"name":"fs"},"property":{"type":"Identifier","start":564,"end":576,"name":"readFileSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":577,"end":585,"name":"filename"},{"type":"Identifier","start":587,"end":595,"name":"encoding"}],"optional":false}}]}}},{"type":"MethodDefinition","start":772,"end":907,"static":true,"computed":false,"key":{"type":"Identifier","start":779,"end":793,"name":"replaceContent"},"kind":"method","value":{"type":"FunctionExpression","start":793,"end":907,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":794,"end":802,"name":"filename"},{"type":"Identifier","start":804,"end":814,"name":"newContent"},{"type":"Identifier","start":816,"end":824,"name":"encoding"}],"body":{"type":"BlockStatement","start":826,"end":907,"body":[{"type":"ExpressionStatement","start":837,"end":900,"expression":{"type":"CallExpression","start":837,"end":899,"callee":{"type":"MemberExpression","start":837,"end":853,"object":{"type":"Identifier","start":837,"end":839,"name":"fs"},"property":{"type":"Identifier","start":840,"end":853,"name":"writeFileSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":854,"end":862,"name":"filename"},{"type":"Identifier","start":864,"end":874,"name":"newContent"},{"type":"ObjectExpression","start":876,"end":898,"properties":[{"type":"Property","start":878,"end":896,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":878,"end":886,"name":"encoding"},"value":{"type":"Identifier","start":888,"end":896,"name":"encoding"},"kind":"init"}]}],"optional":false}}]}}},{"type":"MethodDefinition","start":913,"end":1438,"static":true,"computed":false,"key":{"type":"Identifier","start":920,"end":924,"name":"copy"},"kind":"method","value":{"type":"FunctionExpression","start":924,"end":1438,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":925,"end":932,"name":"srcFile"},{"type":"Identifier","start":934,"end":942,"name":"destFile"}],"body":{"type":"BlockStatement","start":944,"end":1438,"body":[{"type":"VariableDeclaration","start":955,"end":984,"declarations":[{"type":"VariableDeclarator","start":961,"end":983,"id":{"type":"Identifier","start":961,"end":971,"name":"BUF_LENGTH"},"init":{"type":"BinaryExpression","start":974,"end":983,"left":{"type":"Literal","start":974,"end":976,"value":64,"raw":"64"},"operator":"*","right":{"type":"Literal","start":979,"end":983,"value":1024,"raw":"1024"}}}],"kind":"const"},{"type":"VariableDeclaration","start":994,"end":1032,"declarations":[{"type":"VariableDeclarator","start":1000,"end":1031,"id":{"type":"Identifier","start":1000,"end":1004,"name":"buff"},"init":{"type":"CallExpression","start":1007,"end":1031,"callee":{"type":"MemberExpression","start":1007,"end":1019,"object":{"type":"Identifier","start":1007,"end":1013,"name":"Buffer"},"property":{"type":"Identifier","start":1014,"end":1019,"name":"alloc"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1020,"end":1030,"name":"BUF_LENGTH"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1042,"end":1080,"declarations":[{"type":"VariableDeclarator","start":1048,"end":1079,"id":{"type":"Identifier","start":1048,"end":1051,"name":"fdr"},"init":{"type":"CallExpression","start":1054,"end":1079,"callee":{"type":"MemberExpression","start":1054,"end":1065,"object":{"type":"Identifier","start":1054,"end":1056,"name":"fs"},"property":{"type":"Identifier","start":1057,"end":1065,"name":"openSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1066,"end":1073,"name":"srcFile"},{"type":"Literal","start":1075,"end":1078,"value":"r","raw":"'r'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1090,"end":1129,"declarations":[{"type":"VariableDeclarator","start":1096,"end":1128,"id":{"type":"Identifier","start":1096,"end":1099,"name":"fdw"},"init":{"type":"CallExpression","start":1102,"end":1128,"callee":{"type":"MemberExpression","start":1102,"end":1113,"object":{"type":"Identifier","start":1102,"end":1104,"name":"fs"},"property":{"type":"Identifier","start":1105,"end":1113,"name":"openSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1114,"end":1122,"name":"destFile"},{"type":"Literal","start":1124,"end":1127,"value":"w","raw":"'w'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1139,"end":1157,"declarations":[{"type":"VariableDeclarator","start":1143,"end":1156,"id":{"type":"Identifier","start":1143,"end":1152,"name":"bytesRead"},"init":{"type":"Literal","start":1155,"end":1156,"value":1,"raw":"1"}}],"kind":"let"},{"type":"VariableDeclaration","start":1167,"end":1179,"declarations":[{"type":"VariableDeclarator","start":1171,"end":1178,"id":{"type":"Identifier","start":1171,"end":1174,"name":"pos"},"init":{"type":"Literal","start":1177,"end":1178,"value":0,"raw":"0"}}],"kind":"let"},{"type":"WhileStatement","start":1189,"end":1375,"test":{"type":"BinaryExpression","start":1196,"end":1209,"left":{"type":"Identifier","start":1196,"end":1205,"name":"bytesRead"},"operator":">","right":{"type":"Literal","start":1208,"end":1209,"value":0,"raw":"0"}},"body":{"type":"BlockStatement","start":1211,"end":1375,"body":[{"type":"ExpressionStatement","start":1226,"end":1281,"expression":{"type":"AssignmentExpression","start":1226,"end":1280,"operator":"=","left":{"type":"Identifier","start":1226,"end":1235,"name":"bytesRead"},"right":{"type":"CallExpression","start":1238,"end":1280,"callee":{"type":"MemberExpression","start":1238,"end":1249,"object":{"type":"Identifier","start":1238,"end":1240,"name":"fs"},"property":{"type":"Identifier","start":1241,"end":1249,"name":"readSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1250,"end":1253,"name":"fdr"},{"type":"Identifier","start":1255,"end":1259,"name":"buff"},{"type":"Literal","start":1261,"end":1262,"value":0,"raw":"0"},{"type":"Identifier","start":1264,"end":1274,"name":"BUF_LENGTH"},{"type":"Identifier","start":1276,"end":1279,"name":"pos"}],"optional":false}}},{"type":"ExpressionStatement","start":1295,"end":1333,"expression":{"type":"CallExpression","start":1295,"end":1332,"callee":{"type":"MemberExpression","start":1295,"end":1307,"object":{"type":"Identifier","start":1295,"end":1297,"name":"fs"},"property":{"type":"Identifier","start":1298,"end":1307,"name":"writeSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1308,"end":1311,"name":"fdw"},{"type":"Identifier","start":1313,"end":1317,"name":"buff"},{"type":"Literal","start":1319,"end":1320,"value":0,"raw":"0"},{"type":"Identifier","start":1322,"end":1331,"name":"bytesRead"}],"optional":false}},{"type":"ExpressionStatement","start":1347,"end":1364,"expression":{"type":"AssignmentExpression","start":1347,"end":1363,"operator":"+=","left":{"type":"Identifier","start":1347,"end":1350,"name":"pos"},"right":{"type":"Identifier","start":1354,"end":1363,"name":"bytesRead"}}}]}},{"type":"ExpressionStatement","start":1385,"end":1403,"expression":{"type":"CallExpression","start":1385,"end":1402,"callee":{"type":"MemberExpression","start":1385,"end":1397,"object":{"type":"Identifier","start":1385,"end":1387,"name":"fs"},"property":{"type":"Identifier","start":1388,"end":1397,"name":"closeSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1398,"end":1401,"name":"fdr"}],"optional":false}},{"type":"ExpressionStatement","start":1413,"end":1431,"expression":{"type":"CallExpression","start":1413,"end":1430,"callee":{"type":"MemberExpression","start":1413,"end":1425,"object":{"type":"Identifier","start":1413,"end":1415,"name":"fs"},"property":{"type":"Identifier","start":1416,"end":1425,"name":"closeSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1426,"end":1429,"name":"fdw"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1546,"end":2106,"static":true,"computed":false,"key":{"type":"Identifier","start":1553,"end":1574,"name":"deleteFolderRecursive"},"kind":"method","value":{"type":"FunctionExpression","start":1574,"end":2106,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1575,"end":1579,"name":"path"}],"body":{"type":"BlockStatement","start":1581,"end":2106,"body":[{"type":"VariableDeclaration","start":1592,"end":1607,"declarations":[{"type":"VariableDeclarator","start":1596,"end":1606,"id":{"type":"Identifier","start":1596,"end":1601,"name":"files"},"init":{"type":"ArrayExpression","start":1604,"end":1606,"elements":[]}}],"kind":"let"},{"type":"IfStatement","start":1617,"end":2099,"test":{"type":"CallExpression","start":1621,"end":1640,"callee":{"type":"MemberExpression","start":1621,"end":1634,"object":{"type":"Identifier","start":1621,"end":1623,"name":"fs"},"property":{"type":"Identifier","start":1624,"end":1634,"name":"existsSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1635,"end":1639,"name":"path"}],"optional":false},"consequent":{"type":"BlockStatement","start":1642,"end":2099,"body":[{"type":"ExpressionStatement","start":1657,"end":1686,"expression":{"type":"AssignmentExpression","start":1657,"end":1685,"operator":"=","left":{"type":"Identifier","start":1657,"end":1662,"name":"files"},"right":{"type":"CallExpression","start":1665,"end":1685,"callee":{"type":"MemberExpression","start":1665,"end":1679,"object":{"type":"Identifier","start":1665,"end":1667,"name":"fs"},"property":{"type":"Identifier","start":1668,"end":1679,"name":"readdirSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1680,"end":1684,"name":"path"}],"optional":false}}},{"type":"ExpressionStatement","start":1700,"end":2055,"expression":{"type":"CallExpression","start":1700,"end":2054,"callee":{"type":"MemberExpression","start":1700,"end":1713,"object":{"type":"Identifier","start":1700,"end":1705,"name":"files"},"property":{"type":"Identifier","start":1706,"end":1713,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"FunctionExpression","start":1714,"end":2053,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1724,"end":1728,"name":"file"}],"body":{"type":"BlockStatement","start":1730,"end":2053,"body":[{"type":"VariableDeclaration","start":1749,"end":1783,"declarations":[{"type":"VariableDeclarator","start":1755,"end":1782,"id":{"type":"Identifier","start":1755,"end":1762,"name":"curPath"},"init":{"type":"BinaryExpression","start":1765,"end":1782,"left":{"type":"BinaryExpression","start":1765,"end":1775,"left":{"type":"Identifier","start":1765,"end":1769,"name":"path"},"operator":"+","right":{"type":"Literal","start":1772,"end":1775,"value":"/","raw":"'/'"}},"operator":"+","right":{"type":"Identifier","start":1778,"end":1782,"name":"file"}}}],"kind":"const"},{"type":"IfStatement","start":1801,"end":2038,"test":{"type":"CallExpression","start":1805,"end":1840,"callee":{"type":"MemberExpression","start":1805,"end":1838,"object":{"type":"CallExpression","start":1805,"end":1826,"callee":{"type":"MemberExpression","start":1805,"end":1817,"object":{"type":"Identifier","start":1805,"end":1807,"name":"fs"},"property":{"type":"Identifier","start":1808,"end":1817,"name":"lstatSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1818,"end":1825,"name":"curPath"}],"optional":false},"property":{"type":"Identifier","start":1827,"end":1838,"name":"isDirectory"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":1842,"end":1935,"body":[{"type":"ExpressionStatement","start":1876,"end":1916,"expression":{"type":"CallExpression","start":1876,"end":1915,"callee":{"type":"MemberExpression","start":1876,"end":1906,"object":{"type":"Identifier","start":1876,"end":1884,"name":"FileUtil"},"property":{"type":"Identifier","start":1885,"end":1906,"name":"deleteFolderRecursive"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1907,"end":1914,"name":"curPath"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":1958,"end":2038,"body":[{"type":"ExpressionStatement","start":1996,"end":2019,"expression":{"type":"CallExpression","start":1996,"end":2018,"callee":{"type":"MemberExpression","start":1996,"end":2009,"object":{"type":"Identifier","start":1996,"end":1998,"name":"fs"},"property":{"type":"Identifier","start":1999,"end":2009,"name":"unlinkSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2010,"end":2017,"name":"curPath"}],"optional":false}}]}}]}}],"optional":false}},{"type":"ExpressionStatement","start":2069,"end":2088,"expression":{"type":"CallExpression","start":2069,"end":2087,"callee":{"type":"MemberExpression","start":2069,"end":2081,"object":{"type":"Identifier","start":2069,"end":2071,"name":"fs"},"property":{"type":"Identifier","start":2072,"end":2081,"name":"rmdirSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2082,"end":2086,"name":"path"}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":2266,"end":2800,"static":true,"computed":false,"key":{"type":"Identifier","start":2273,"end":2301,"name":"deleteFolderContentRecursive"},"kind":"method","value":{"type":"FunctionExpression","start":2301,"end":2800,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2302,"end":2306,"name":"path"}],"body":{"type":"BlockStatement","start":2308,"end":2800,"body":[{"type":"VariableDeclaration","start":2319,"end":2334,"declarations":[{"type":"VariableDeclarator","start":2323,"end":2333,"id":{"type":"Identifier","start":2323,"end":2328,"name":"files"},"init":{"type":"ArrayExpression","start":2331,"end":2333,"elements":[]}}],"kind":"let"},{"type":"IfStatement","start":2344,"end":2793,"test":{"type":"CallExpression","start":2348,"end":2367,"callee":{"type":"MemberExpression","start":2348,"end":2361,"object":{"type":"Identifier","start":2348,"end":2350,"name":"fs"},"property":{"type":"Identifier","start":2351,"end":2361,"name":"existsSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2362,"end":2366,"name":"path"}],"optional":false},"consequent":{"type":"BlockStatement","start":2369,"end":2793,"body":[{"type":"ExpressionStatement","start":2384,"end":2413,"expression":{"type":"AssignmentExpression","start":2384,"end":2412,"operator":"=","left":{"type":"Identifier","start":2384,"end":2389,"name":"files"},"right":{"type":"CallExpression","start":2392,"end":2412,"callee":{"type":"MemberExpression","start":2392,"end":2406,"object":{"type":"Identifier","start":2392,"end":2394,"name":"fs"},"property":{"type":"Identifier","start":2395,"end":2406,"name":"readdirSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2407,"end":2411,"name":"path"}],"optional":false}}},{"type":"ExpressionStatement","start":2427,"end":2782,"expression":{"type":"CallExpression","start":2427,"end":2781,"callee":{"type":"MemberExpression","start":2427,"end":2440,"object":{"type":"Identifier","start":2427,"end":2432,"name":"files"},"property":{"type":"Identifier","start":2433,"end":2440,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"FunctionExpression","start":2441,"end":2780,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2451,"end":2455,"name":"file"}],"body":{"type":"BlockStatement","start":2457,"end":2780,"body":[{"type":"VariableDeclaration","start":2476,"end":2510,"declarations":[{"type":"VariableDeclarator","start":2482,"end":2509,"id":{"type":"Identifier","start":2482,"end":2489,"name":"curPath"},"init":{"type":"BinaryExpression","start":2492,"end":2509,"left":{"type":"BinaryExpression","start":2492,"end":2502,"left":{"type":"Identifier","start":2492,"end":2496,"name":"path"},"operator":"+","right":{"type":"Literal","start":2499,"end":2502,"value":"/","raw":"'/'"}},"operator":"+","right":{"type":"Identifier","start":2505,"end":2509,"name":"file"}}}],"kind":"const"},{"type":"IfStatement","start":2528,"end":2765,"test":{"type":"CallExpression","start":2532,"end":2567,"callee":{"type":"MemberExpression","start":2532,"end":2565,"object":{"type":"CallExpression","start":2532,"end":2553,"callee":{"type":"MemberExpression","start":2532,"end":2544,"object":{"type":"Identifier","start":2532,"end":2534,"name":"fs"},"property":{"type":"Identifier","start":2535,"end":2544,"name":"lstatSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2545,"end":2552,"name":"curPath"}],"optional":false},"property":{"type":"Identifier","start":2554,"end":2565,"name":"isDirectory"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":2569,"end":2662,"body":[{"type":"ExpressionStatement","start":2603,"end":2643,"expression":{"type":"CallExpression","start":2603,"end":2642,"callee":{"type":"MemberExpression","start":2603,"end":2633,"object":{"type":"Identifier","start":2603,"end":2611,"name":"FileUtil"},"property":{"type":"Identifier","start":2612,"end":2633,"name":"deleteFolderRecursive"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2634,"end":2641,"name":"curPath"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":2685,"end":2765,"body":[{"type":"ExpressionStatement","start":2723,"end":2746,"expression":{"type":"CallExpression","start":2723,"end":2745,"callee":{"type":"MemberExpression","start":2723,"end":2736,"object":{"type":"Identifier","start":2723,"end":2725,"name":"fs"},"property":{"type":"Identifier","start":2726,"end":2736,"name":"unlinkSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2737,"end":2744,"name":"curPath"}],"optional":false}}]}}]}}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":2872,"end":2934,"static":true,"computed":false,"key":{"type":"Identifier","start":2879,"end":2889,"name":"deleteFile"},"kind":"method","value":{"type":"FunctionExpression","start":2889,"end":2934,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2890,"end":2894,"name":"path"}],"body":{"type":"BlockStatement","start":2896,"end":2934,"body":[{"type":"ExpressionStatement","start":2907,"end":2927,"expression":{"type":"CallExpression","start":2907,"end":2926,"callee":{"type":"MemberExpression","start":2907,"end":2920,"object":{"type":"Identifier","start":2907,"end":2909,"name":"fs"},"property":{"type":"Identifier","start":2910,"end":2920,"name":"unlinkSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2921,"end":2925,"name":"path"}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS11dGlsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMveGxpZmZtZXJnZS9zcmMvY29tbW9uL2ZpbGUtdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssRUFBRSxNQUFNLElBQUksQ0FBQztBQUV6Qjs7OztHQUlHO0FBRUgsTUFBTSxPQUFPLFFBQVE7SUFFakI7Ozs7T0FJRztJQUNJLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBZ0I7UUFDakMsT0FBTyxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBZ0IsRUFBRSxRQUF3QjtRQUN6RCxPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNJLE1BQU0sQ0FBQyxjQUFjLENBQUMsUUFBZ0IsRUFBRSxVQUFrQixFQUFFLFFBQXdCO1FBQ3ZGLEVBQUUsQ0FBQyxhQUFhLENBQUMsUUFBUSxFQUFFLFVBQVUsRUFBRSxFQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUMsQ0FBQyxDQUFDO0lBQ2pFLENBQUM7SUFFTSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQWUsRUFBRSxRQUFnQjtRQUNoRCxNQUFNLFVBQVUsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQzdCLE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDdEMsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDdEMsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDdkMsSUFBSSxTQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQztRQUNaLE9BQU8sU0FBUyxHQUFHLENBQUMsRUFBRTtZQUNsQixTQUFTLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDdkQsRUFBRSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQztZQUN0QyxHQUFHLElBQUksU0FBUyxDQUFDO1NBQ3BCO1FBQ0QsRUFBRSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNsQixFQUFFLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3RCLENBQUM7SUFFRDs7O09BR0c7SUFDSSxNQUFNLENBQUMscUJBQXFCLENBQUMsSUFBWTtRQUM1QyxJQUFJLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDZixJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDckIsS0FBSyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDN0IsS0FBSyxDQUFDLE9BQU8sQ0FBQyxVQUFVLElBQUk7Z0JBQ3hCLE1BQU0sT0FBTyxHQUFHLElBQUksR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDO2dCQUNsQyxJQUFJLEVBQUUsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUUsRUFBRSxVQUFVO29CQUNqRCxRQUFRLENBQUMscUJBQXFCLENBQUMsT0FBTyxDQUFDLENBQUM7aUJBQzNDO3FCQUFNLEVBQUUsY0FBYztvQkFDbkIsRUFBRSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztpQkFDMUI7WUFDTCxDQUFDLENBQUMsQ0FBQztZQUNILEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDdEI7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLE1BQU0sQ0FBQyw0QkFBNEIsQ0FBQyxJQUFZO1FBQ25ELElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNmLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNyQixLQUFLLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM3QixLQUFLLENBQUMsT0FBTyxDQUFDLFVBQVUsSUFBSTtnQkFDeEIsTUFBTSxPQUFPLEdBQUcsSUFBSSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUM7Z0JBQ2xDLElBQUksRUFBRSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxXQUFXLEVBQUUsRUFBRSxFQUFFLFVBQVU7b0JBQ2pELFFBQVEsQ0FBQyxxQkFBcUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztpQkFDM0M7cUJBQU0sRUFBRSxjQUFjO29CQUNuQixFQUFFLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2lCQUMxQjtZQUNMLENBQUMsQ0FBQyxDQUFDO1NBQ047SUFDTCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFZO1FBQ2pDLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEIsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnO1xyXG5cclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDE3LjAyLjIwMTcuXHJcbiAqIFNvbWUgKGEgZmV3KSBzaW1wbGUgdXRpbHMgZm9yIGZpbGUgb3BlcmF0aW9ucy5cclxuICogSnVzdCBmb3IgY29udmVuaWVuY2UuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIEZpbGVVdGlsIHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENoZWNrIGZvciBleGlzdGVuY2UuXHJcbiAgICAgKiBAcGFyYW0gZmlsZW5hbWUgZmlsZW5hbWVcclxuICAgICAqIEByZXR1cm4gd2V0aGVyIGZpbGUgZXhpc3RzXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZXhpc3RzKGZpbGVuYW1lOiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gZnMuZXhpc3RzU3luYyhmaWxlbmFtZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZWFkIGEgZmlsZS5cclxuICAgICAqIEBwYXJhbSBmaWxlbmFtZSBmaWxlbmFtZVxyXG4gICAgICogQHBhcmFtIGVuY29kaW5nIGVuY29kaW5nXHJcbiAgICAgKiBAcmV0dXJuIGNvbnRlbnQgb2YgZmlsZVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWQoZmlsZW5hbWU6IHN0cmluZywgZW5jb2Rpbmc6IEJ1ZmZlckVuY29kaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIGZzLnJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogV3JpdGUgYSBmaWxlIHdpdGggZ2l2ZW4gY29udGVudC5cclxuICAgICAqIEBwYXJhbSBmaWxlbmFtZSBmaWxlbmFtZVxyXG4gICAgICogQHBhcmFtIG5ld0NvbnRlbnQgbmV3Q29udGVudFxyXG4gICAgICogQHBhcmFtIGVuY29kaW5nIGVuY29kaW5nXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVwbGFjZUNvbnRlbnQoZmlsZW5hbWU6IHN0cmluZywgbmV3Q29udGVudDogc3RyaW5nLCBlbmNvZGluZzogQnVmZmVyRW5jb2RpbmcpIHtcclxuICAgICAgICBmcy53cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBuZXdDb250ZW50LCB7ZW5jb2Rpbmc6IGVuY29kaW5nfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBjb3B5KHNyY0ZpbGU6IHN0cmluZywgZGVzdEZpbGU6IHN0cmluZykge1xyXG4gICAgICAgIGNvbnN0IEJVRl9MRU5HVEggPSA2NCAqIDEwMjQ7XHJcbiAgICAgICAgY29uc3QgYnVmZiA9IEJ1ZmZlci5hbGxvYyhCVUZfTEVOR1RIKTtcclxuICAgICAgICBjb25zdCBmZHIgPSBmcy5vcGVuU3luYyhzcmNGaWxlLCAncicpO1xyXG4gICAgICAgIGNvbnN0IGZkdyA9IGZzLm9wZW5TeW5jKGRlc3RGaWxlLCAndycpO1xyXG4gICAgICAgIGxldCBieXRlc1JlYWQgPSAxO1xyXG4gICAgICAgIGxldCBwb3MgPSAwO1xyXG4gICAgICAgIHdoaWxlIChieXRlc1JlYWQgPiAwKSB7XHJcbiAgICAgICAgICAgIGJ5dGVzUmVhZCA9IGZzLnJlYWRTeW5jKGZkciwgYnVmZiwgMCwgQlVGX0xFTkdUSCwgcG9zKTtcclxuICAgICAgICAgICAgZnMud3JpdGVTeW5jKGZkdywgYnVmZiwgMCwgYnl0ZXNSZWFkKTtcclxuICAgICAgICAgICAgcG9zICs9IGJ5dGVzUmVhZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZnMuY2xvc2VTeW5jKGZkcik7XHJcbiAgICAgICAgZnMuY2xvc2VTeW5jKGZkdyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEZWxldGUgdGhlIGZvbGRlciBhbmQgYWxsIG9mIGl0cyBjb250ZW50IChybSAtcmYpLlxyXG4gICAgICogQHBhcmFtIHBhdGggcGF0aFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGRlbGV0ZUZvbGRlclJlY3Vyc2l2ZShwYXRoOiBzdHJpbmcpIHtcclxuICAgICAgICBsZXQgZmlsZXMgPSBbXTtcclxuICAgICAgICBpZiAoZnMuZXhpc3RzU3luYyhwYXRoKSkge1xyXG4gICAgICAgICAgICBmaWxlcyA9IGZzLnJlYWRkaXJTeW5jKHBhdGgpO1xyXG4gICAgICAgICAgICBmaWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChmaWxlKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjdXJQYXRoID0gcGF0aCArICcvJyArIGZpbGU7XHJcbiAgICAgICAgICAgICAgICBpZiAoZnMubHN0YXRTeW5jKGN1clBhdGgpLmlzRGlyZWN0b3J5KCkpIHsgLy8gcmVjdXJzZVxyXG4gICAgICAgICAgICAgICAgICAgIEZpbGVVdGlsLmRlbGV0ZUZvbGRlclJlY3Vyc2l2ZShjdXJQYXRoKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7IC8vIGRlbGV0ZSBmaWxlXHJcbiAgICAgICAgICAgICAgICAgICAgZnMudW5saW5rU3luYyhjdXJQYXRoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGZzLnJtZGlyU3luYyhwYXRoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEZWxldGUgZm9sZGVycyBjb250ZW50IHJlY3Vyc2l2ZWx5LCBidXQgZG8gbm90IGRlbGV0ZSBmb2xkZXIuXHJcbiAgICAgKiBGb2xkZXIgaXMgbGVmdCBlbXB0eSBhdCB0aGUgZW5kLlxyXG4gICAgICogQHBhcmFtIHBhdGggcGF0aFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGRlbGV0ZUZvbGRlckNvbnRlbnRSZWN1cnNpdmUocGF0aDogc3RyaW5nKSB7XHJcbiAgICAgICAgbGV0IGZpbGVzID0gW107XHJcbiAgICAgICAgaWYgKGZzLmV4aXN0c1N5bmMocGF0aCkpIHtcclxuICAgICAgICAgICAgZmlsZXMgPSBmcy5yZWFkZGlyU3luYyhwYXRoKTtcclxuICAgICAgICAgICAgZmlsZXMuZm9yRWFjaChmdW5jdGlvbiAoZmlsZSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY3VyUGF0aCA9IHBhdGggKyAnLycgKyBmaWxlO1xyXG4gICAgICAgICAgICAgICAgaWYgKGZzLmxzdGF0U3luYyhjdXJQYXRoKS5pc0RpcmVjdG9yeSgpKSB7IC8vIHJlY3Vyc2VcclxuICAgICAgICAgICAgICAgICAgICBGaWxlVXRpbC5kZWxldGVGb2xkZXJSZWN1cnNpdmUoY3VyUGF0aCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgeyAvLyBkZWxldGUgZmlsZVxyXG4gICAgICAgICAgICAgICAgICAgIGZzLnVubGlua1N5bmMoY3VyUGF0aCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIERlbGV0ZSBhIGZpbGUuXHJcbiAgICAgKiBAcGFyYW0gcGF0aCBwYXRoXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZGVsZXRlRmlsZShwYXRoOiBzdHJpbmcpIHtcclxuICAgICAgICBmcy51bmxpbmtTeW5jKHBhdGgpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==","start":2939,"end":10529}]},"code":"import * as fs from 'fs';\r\n/**\r\n * Created by martin on 17.02.2017.\r\n * Some (a few) simple utils for file operations.\r\n * Just for convenience.\r\n */\r\nexport class FileUtil {\r\n    /**\r\n     * Check for existence.\r\n     * @param filename filename\r\n     * @return wether file exists\r\n     */\r\n    static exists(filename) {\r\n        return fs.existsSync(filename);\r\n    }\r\n    /**\r\n     * Read a file.\r\n     * @param filename filename\r\n     * @param encoding encoding\r\n     * @return content of file\r\n     */\r\n    static read(filename, encoding) {\r\n        return fs.readFileSync(filename, encoding);\r\n    }\r\n    /**\r\n     * Write a file with given content.\r\n     * @param filename filename\r\n     * @param newContent newContent\r\n     * @param encoding encoding\r\n     */\r\n    static replaceContent(filename, newContent, encoding) {\r\n        fs.writeFileSync(filename, newContent, { encoding: encoding });\r\n    }\r\n    static copy(srcFile, destFile) {\r\n        const BUF_LENGTH = 64 * 1024;\r\n        const buff = Buffer.alloc(BUF_LENGTH);\r\n        const fdr = fs.openSync(srcFile, 'r');\r\n        const fdw = fs.openSync(destFile, 'w');\r\n        let bytesRead = 1;\r\n        let pos = 0;\r\n        while (bytesRead > 0) {\r\n            bytesRead = fs.readSync(fdr, buff, 0, BUF_LENGTH, pos);\r\n            fs.writeSync(fdw, buff, 0, bytesRead);\r\n            pos += bytesRead;\r\n        }\r\n        fs.closeSync(fdr);\r\n        fs.closeSync(fdw);\r\n    }\r\n    /**\r\n     * Delete the folder and all of its content (rm -rf).\r\n     * @param path path\r\n     */\r\n    static deleteFolderRecursive(path) {\r\n        let files = [];\r\n        if (fs.existsSync(path)) {\r\n            files = fs.readdirSync(path);\r\n            files.forEach(function (file) {\r\n                const curPath = path + '/' + file;\r\n                if (fs.lstatSync(curPath).isDirectory()) { // recurse\r\n                    FileUtil.deleteFolderRecursive(curPath);\r\n                }\r\n                else { // delete file\r\n                    fs.unlinkSync(curPath);\r\n                }\r\n            });\r\n            fs.rmdirSync(path);\r\n        }\r\n    }\r\n    /**\r\n     * Delete folders content recursively, but do not delete folder.\r\n     * Folder is left empty at the end.\r\n     * @param path path\r\n     */\r\n    static deleteFolderContentRecursive(path) {\r\n        let files = [];\r\n        if (fs.existsSync(path)) {\r\n            files = fs.readdirSync(path);\r\n            files.forEach(function (file) {\r\n                const curPath = path + '/' + file;\r\n                if (fs.lstatSync(curPath).isDirectory()) { // recurse\r\n                    FileUtil.deleteFolderRecursive(curPath);\r\n                }\r\n                else { // delete file\r\n                    fs.unlinkSync(curPath);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Delete a file.\r\n     * @param path path\r\n     */\r\n    static deleteFile(path) {\r\n        fs.unlinkSync(path);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS11dGlsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMveGxpZmZtZXJnZS9zcmMvY29tbW9uL2ZpbGUtdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssRUFBRSxNQUFNLElBQUksQ0FBQztBQUV6Qjs7OztHQUlHO0FBRUgsTUFBTSxPQUFPLFFBQVE7SUFFakI7Ozs7T0FJRztJQUNJLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBZ0I7UUFDakMsT0FBTyxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBZ0IsRUFBRSxRQUF3QjtRQUN6RCxPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNJLE1BQU0sQ0FBQyxjQUFjLENBQUMsUUFBZ0IsRUFBRSxVQUFrQixFQUFFLFFBQXdCO1FBQ3ZGLEVBQUUsQ0FBQyxhQUFhLENBQUMsUUFBUSxFQUFFLFVBQVUsRUFBRSxFQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUMsQ0FBQyxDQUFDO0lBQ2pFLENBQUM7SUFFTSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQWUsRUFBRSxRQUFnQjtRQUNoRCxNQUFNLFVBQVUsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQzdCLE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDdEMsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDdEMsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDdkMsSUFBSSxTQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQztRQUNaLE9BQU8sU0FBUyxHQUFHLENBQUMsRUFBRTtZQUNsQixTQUFTLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDdkQsRUFBRSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQztZQUN0QyxHQUFHLElBQUksU0FBUyxDQUFDO1NBQ3BCO1FBQ0QsRUFBRSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNsQixFQUFFLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3RCLENBQUM7SUFFRDs7O09BR0c7SUFDSSxNQUFNLENBQUMscUJBQXFCLENBQUMsSUFBWTtRQUM1QyxJQUFJLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDZixJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDckIsS0FBSyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDN0IsS0FBSyxDQUFDLE9BQU8sQ0FBQyxVQUFVLElBQUk7Z0JBQ3hCLE1BQU0sT0FBTyxHQUFHLElBQUksR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDO2dCQUNsQyxJQUFJLEVBQUUsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUUsRUFBRSxVQUFVO29CQUNqRCxRQUFRLENBQUMscUJBQXFCLENBQUMsT0FBTyxDQUFDLENBQUM7aUJBQzNDO3FCQUFNLEVBQUUsY0FBYztvQkFDbkIsRUFBRSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztpQkFDMUI7WUFDTCxDQUFDLENBQUMsQ0FBQztZQUNILEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDdEI7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLE1BQU0sQ0FBQyw0QkFBNEIsQ0FBQyxJQUFZO1FBQ25ELElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNmLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNyQixLQUFLLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM3QixLQUFLLENBQUMsT0FBTyxDQUFDLFVBQVUsSUFBSTtnQkFDeEIsTUFBTSxPQUFPLEdBQUcsSUFBSSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUM7Z0JBQ2xDLElBQUksRUFBRSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxXQUFXLEVBQUUsRUFBRSxFQUFFLFVBQVU7b0JBQ2pELFFBQVEsQ0FBQyxxQkFBcUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztpQkFDM0M7cUJBQU0sRUFBRSxjQUFjO29CQUNuQixFQUFFLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2lCQUMxQjtZQUNMLENBQUMsQ0FBQyxDQUFDO1NBQ047SUFDTCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFZO1FBQ2pDLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEIsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnO1xyXG5cclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDE3LjAyLjIwMTcuXHJcbiAqIFNvbWUgKGEgZmV3KSBzaW1wbGUgdXRpbHMgZm9yIGZpbGUgb3BlcmF0aW9ucy5cclxuICogSnVzdCBmb3IgY29udmVuaWVuY2UuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIEZpbGVVdGlsIHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENoZWNrIGZvciBleGlzdGVuY2UuXHJcbiAgICAgKiBAcGFyYW0gZmlsZW5hbWUgZmlsZW5hbWVcclxuICAgICAqIEByZXR1cm4gd2V0aGVyIGZpbGUgZXhpc3RzXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZXhpc3RzKGZpbGVuYW1lOiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gZnMuZXhpc3RzU3luYyhmaWxlbmFtZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZWFkIGEgZmlsZS5cclxuICAgICAqIEBwYXJhbSBmaWxlbmFtZSBmaWxlbmFtZVxyXG4gICAgICogQHBhcmFtIGVuY29kaW5nIGVuY29kaW5nXHJcbiAgICAgKiBAcmV0dXJuIGNvbnRlbnQgb2YgZmlsZVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWQoZmlsZW5hbWU6IHN0cmluZywgZW5jb2Rpbmc6IEJ1ZmZlckVuY29kaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIGZzLnJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogV3JpdGUgYSBmaWxlIHdpdGggZ2l2ZW4gY29udGVudC5cclxuICAgICAqIEBwYXJhbSBmaWxlbmFtZSBmaWxlbmFtZVxyXG4gICAgICogQHBhcmFtIG5ld0NvbnRlbnQgbmV3Q29udGVudFxyXG4gICAgICogQHBhcmFtIGVuY29kaW5nIGVuY29kaW5nXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVwbGFjZUNvbnRlbnQoZmlsZW5hbWU6IHN0cmluZywgbmV3Q29udGVudDogc3RyaW5nLCBlbmNvZGluZzogQnVmZmVyRW5jb2RpbmcpIHtcclxuICAgICAgICBmcy53cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBuZXdDb250ZW50LCB7ZW5jb2Rpbmc6IGVuY29kaW5nfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBjb3B5KHNyY0ZpbGU6IHN0cmluZywgZGVzdEZpbGU6IHN0cmluZykge1xyXG4gICAgICAgIGNvbnN0IEJVRl9MRU5HVEggPSA2NCAqIDEwMjQ7XHJcbiAgICAgICAgY29uc3QgYnVmZiA9IEJ1ZmZlci5hbGxvYyhCVUZfTEVOR1RIKTtcclxuICAgICAgICBjb25zdCBmZHIgPSBmcy5vcGVuU3luYyhzcmNGaWxlLCAncicpO1xyXG4gICAgICAgIGNvbnN0IGZkdyA9IGZzLm9wZW5TeW5jKGRlc3RGaWxlLCAndycpO1xyXG4gICAgICAgIGxldCBieXRlc1JlYWQgPSAxO1xyXG4gICAgICAgIGxldCBwb3MgPSAwO1xyXG4gICAgICAgIHdoaWxlIChieXRlc1JlYWQgPiAwKSB7XHJcbiAgICAgICAgICAgIGJ5dGVzUmVhZCA9IGZzLnJlYWRTeW5jKGZkciwgYnVmZiwgMCwgQlVGX0xFTkdUSCwgcG9zKTtcclxuICAgICAgICAgICAgZnMud3JpdGVTeW5jKGZkdywgYnVmZiwgMCwgYnl0ZXNSZWFkKTtcclxuICAgICAgICAgICAgcG9zICs9IGJ5dGVzUmVhZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZnMuY2xvc2VTeW5jKGZkcik7XHJcbiAgICAgICAgZnMuY2xvc2VTeW5jKGZkdyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEZWxldGUgdGhlIGZvbGRlciBhbmQgYWxsIG9mIGl0cyBjb250ZW50IChybSAtcmYpLlxyXG4gICAgICogQHBhcmFtIHBhdGggcGF0aFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGRlbGV0ZUZvbGRlclJlY3Vyc2l2ZShwYXRoOiBzdHJpbmcpIHtcclxuICAgICAgICBsZXQgZmlsZXMgPSBbXTtcclxuICAgICAgICBpZiAoZnMuZXhpc3RzU3luYyhwYXRoKSkge1xyXG4gICAgICAgICAgICBmaWxlcyA9IGZzLnJlYWRkaXJTeW5jKHBhdGgpO1xyXG4gICAgICAgICAgICBmaWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChmaWxlKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjdXJQYXRoID0gcGF0aCArICcvJyArIGZpbGU7XHJcbiAgICAgICAgICAgICAgICBpZiAoZnMubHN0YXRTeW5jKGN1clBhdGgpLmlzRGlyZWN0b3J5KCkpIHsgLy8gcmVjdXJzZVxyXG4gICAgICAgICAgICAgICAgICAgIEZpbGVVdGlsLmRlbGV0ZUZvbGRlclJlY3Vyc2l2ZShjdXJQYXRoKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7IC8vIGRlbGV0ZSBmaWxlXHJcbiAgICAgICAgICAgICAgICAgICAgZnMudW5saW5rU3luYyhjdXJQYXRoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGZzLnJtZGlyU3luYyhwYXRoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEZWxldGUgZm9sZGVycyBjb250ZW50IHJlY3Vyc2l2ZWx5LCBidXQgZG8gbm90IGRlbGV0ZSBmb2xkZXIuXHJcbiAgICAgKiBGb2xkZXIgaXMgbGVmdCBlbXB0eSBhdCB0aGUgZW5kLlxyXG4gICAgICogQHBhcmFtIHBhdGggcGF0aFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGRlbGV0ZUZvbGRlckNvbnRlbnRSZWN1cnNpdmUocGF0aDogc3RyaW5nKSB7XHJcbiAgICAgICAgbGV0IGZpbGVzID0gW107XHJcbiAgICAgICAgaWYgKGZzLmV4aXN0c1N5bmMocGF0aCkpIHtcclxuICAgICAgICAgICAgZmlsZXMgPSBmcy5yZWFkZGlyU3luYyhwYXRoKTtcclxuICAgICAgICAgICAgZmlsZXMuZm9yRWFjaChmdW5jdGlvbiAoZmlsZSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY3VyUGF0aCA9IHBhdGggKyAnLycgKyBmaWxlO1xyXG4gICAgICAgICAgICAgICAgaWYgKGZzLmxzdGF0U3luYyhjdXJQYXRoKS5pc0RpcmVjdG9yeSgpKSB7IC8vIHJlY3Vyc2VcclxuICAgICAgICAgICAgICAgICAgICBGaWxlVXRpbC5kZWxldGVGb2xkZXJSZWN1cnNpdmUoY3VyUGF0aCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgeyAvLyBkZWxldGUgZmlsZVxyXG4gICAgICAgICAgICAgICAgICAgIGZzLnVubGlua1N5bmMoY3VyUGF0aCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIERlbGV0ZSBhIGZpbGUuXHJcbiAgICAgKiBAcGFyYW0gcGF0aCBwYXRoXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZGVsZXRlRmlsZShwYXRoOiBzdHJpbmcpIHtcclxuICAgICAgICBmcy51bmxpbmtTeW5jKHBhdGgpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==","customTransformCache":false,"dependencies":["fs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\file-util.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import * as fs from 'fs';\r\n/**\r\n * Created by martin on 17.02.2017.\r\n * Some (a few) simple utils for file operations.\r\n * Just for convenience.\r\n */\r\nexport class FileUtil {\r\n    /**\r\n     * Check for existence.\r\n     * @param filename filename\r\n     * @return wether file exists\r\n     */\r\n    static exists(filename) {\r\n        return fs.existsSync(filename);\r\n    }\r\n    /**\r\n     * Read a file.\r\n     * @param filename filename\r\n     * @param encoding encoding\r\n     * @return content of file\r\n     */\r\n    static read(filename, encoding) {\r\n        return fs.readFileSync(filename, encoding);\r\n    }\r\n    /**\r\n     * Write a file with given content.\r\n     * @param filename filename\r\n     * @param newContent newContent\r\n     * @param encoding encoding\r\n     */\r\n    static replaceContent(filename, newContent, encoding) {\r\n        fs.writeFileSync(filename, newContent, { encoding: encoding });\r\n    }\r\n    static copy(srcFile, destFile) {\r\n        const BUF_LENGTH = 64 * 1024;\r\n        const buff = Buffer.alloc(BUF_LENGTH);\r\n        const fdr = fs.openSync(srcFile, 'r');\r\n        const fdw = fs.openSync(destFile, 'w');\r\n        let bytesRead = 1;\r\n        let pos = 0;\r\n        while (bytesRead > 0) {\r\n            bytesRead = fs.readSync(fdr, buff, 0, BUF_LENGTH, pos);\r\n            fs.writeSync(fdw, buff, 0, bytesRead);\r\n            pos += bytesRead;\r\n        }\r\n        fs.closeSync(fdr);\r\n        fs.closeSync(fdw);\r\n    }\r\n    /**\r\n     * Delete the folder and all of its content (rm -rf).\r\n     * @param path path\r\n     */\r\n    static deleteFolderRecursive(path) {\r\n        let files = [];\r\n        if (fs.existsSync(path)) {\r\n            files = fs.readdirSync(path);\r\n            files.forEach(function (file) {\r\n                const curPath = path + '/' + file;\r\n                if (fs.lstatSync(curPath).isDirectory()) { // recurse\r\n                    FileUtil.deleteFolderRecursive(curPath);\r\n                }\r\n                else { // delete file\r\n                    fs.unlinkSync(curPath);\r\n                }\r\n            });\r\n            fs.rmdirSync(path);\r\n        }\r\n    }\r\n    /**\r\n     * Delete folders content recursively, but do not delete folder.\r\n     * Folder is left empty at the end.\r\n     * @param path path\r\n     */\r\n    static deleteFolderContentRecursive(path) {\r\n        let files = [];\r\n        if (fs.existsSync(path)) {\r\n            files = fs.readdirSync(path);\r\n            files.forEach(function (file) {\r\n                const curPath = path + '/' + file;\r\n                if (fs.lstatSync(curPath).isDirectory()) { // recurse\r\n                    FileUtil.deleteFolderRecursive(curPath);\r\n                }\r\n                else { // delete file\r\n                    fs.unlinkSync(curPath);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Delete a file.\r\n     * @param path path\r\n     */\r\n    static deleteFile(path) {\r\n        fs.unlinkSync(path);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS11dGlsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMveGxpZmZtZXJnZS9zcmMvY29tbW9uL2ZpbGUtdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssRUFBRSxNQUFNLElBQUksQ0FBQztBQUV6Qjs7OztHQUlHO0FBRUgsTUFBTSxPQUFPLFFBQVE7SUFFakI7Ozs7T0FJRztJQUNJLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBZ0I7UUFDakMsT0FBTyxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBZ0IsRUFBRSxRQUF3QjtRQUN6RCxPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNJLE1BQU0sQ0FBQyxjQUFjLENBQUMsUUFBZ0IsRUFBRSxVQUFrQixFQUFFLFFBQXdCO1FBQ3ZGLEVBQUUsQ0FBQyxhQUFhLENBQUMsUUFBUSxFQUFFLFVBQVUsRUFBRSxFQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUMsQ0FBQyxDQUFDO0lBQ2pFLENBQUM7SUFFTSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQWUsRUFBRSxRQUFnQjtRQUNoRCxNQUFNLFVBQVUsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQzdCLE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDdEMsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDdEMsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDdkMsSUFBSSxTQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQztRQUNaLE9BQU8sU0FBUyxHQUFHLENBQUMsRUFBRTtZQUNsQixTQUFTLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDdkQsRUFBRSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQztZQUN0QyxHQUFHLElBQUksU0FBUyxDQUFDO1NBQ3BCO1FBQ0QsRUFBRSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNsQixFQUFFLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3RCLENBQUM7SUFFRDs7O09BR0c7SUFDSSxNQUFNLENBQUMscUJBQXFCLENBQUMsSUFBWTtRQUM1QyxJQUFJLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDZixJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDckIsS0FBSyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDN0IsS0FBSyxDQUFDLE9BQU8sQ0FBQyxVQUFVLElBQUk7Z0JBQ3hCLE1BQU0sT0FBTyxHQUFHLElBQUksR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDO2dCQUNsQyxJQUFJLEVBQUUsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUUsRUFBRSxVQUFVO29CQUNqRCxRQUFRLENBQUMscUJBQXFCLENBQUMsT0FBTyxDQUFDLENBQUM7aUJBQzNDO3FCQUFNLEVBQUUsY0FBYztvQkFDbkIsRUFBRSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztpQkFDMUI7WUFDTCxDQUFDLENBQUMsQ0FBQztZQUNILEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDdEI7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLE1BQU0sQ0FBQyw0QkFBNEIsQ0FBQyxJQUFZO1FBQ25ELElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNmLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNyQixLQUFLLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM3QixLQUFLLENBQUMsT0FBTyxDQUFDLFVBQVUsSUFBSTtnQkFDeEIsTUFBTSxPQUFPLEdBQUcsSUFBSSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUM7Z0JBQ2xDLElBQUksRUFBRSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxXQUFXLEVBQUUsRUFBRSxFQUFFLFVBQVU7b0JBQ2pELFFBQVEsQ0FBQyxxQkFBcUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztpQkFDM0M7cUJBQU0sRUFBRSxjQUFjO29CQUNuQixFQUFFLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2lCQUMxQjtZQUNMLENBQUMsQ0FBQyxDQUFDO1NBQ047SUFDTCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFZO1FBQ2pDLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEIsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnO1xyXG5cclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDE3LjAyLjIwMTcuXHJcbiAqIFNvbWUgKGEgZmV3KSBzaW1wbGUgdXRpbHMgZm9yIGZpbGUgb3BlcmF0aW9ucy5cclxuICogSnVzdCBmb3IgY29udmVuaWVuY2UuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIEZpbGVVdGlsIHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENoZWNrIGZvciBleGlzdGVuY2UuXHJcbiAgICAgKiBAcGFyYW0gZmlsZW5hbWUgZmlsZW5hbWVcclxuICAgICAqIEByZXR1cm4gd2V0aGVyIGZpbGUgZXhpc3RzXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZXhpc3RzKGZpbGVuYW1lOiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gZnMuZXhpc3RzU3luYyhmaWxlbmFtZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZWFkIGEgZmlsZS5cclxuICAgICAqIEBwYXJhbSBmaWxlbmFtZSBmaWxlbmFtZVxyXG4gICAgICogQHBhcmFtIGVuY29kaW5nIGVuY29kaW5nXHJcbiAgICAgKiBAcmV0dXJuIGNvbnRlbnQgb2YgZmlsZVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWQoZmlsZW5hbWU6IHN0cmluZywgZW5jb2Rpbmc6IEJ1ZmZlckVuY29kaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIGZzLnJlYWRGaWxlU3luYyhmaWxlbmFtZSwgZW5jb2RpbmcpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogV3JpdGUgYSBmaWxlIHdpdGggZ2l2ZW4gY29udGVudC5cclxuICAgICAqIEBwYXJhbSBmaWxlbmFtZSBmaWxlbmFtZVxyXG4gICAgICogQHBhcmFtIG5ld0NvbnRlbnQgbmV3Q29udGVudFxyXG4gICAgICogQHBhcmFtIGVuY29kaW5nIGVuY29kaW5nXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVwbGFjZUNvbnRlbnQoZmlsZW5hbWU6IHN0cmluZywgbmV3Q29udGVudDogc3RyaW5nLCBlbmNvZGluZzogQnVmZmVyRW5jb2RpbmcpIHtcclxuICAgICAgICBmcy53cml0ZUZpbGVTeW5jKGZpbGVuYW1lLCBuZXdDb250ZW50LCB7ZW5jb2Rpbmc6IGVuY29kaW5nfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBjb3B5KHNyY0ZpbGU6IHN0cmluZywgZGVzdEZpbGU6IHN0cmluZykge1xyXG4gICAgICAgIGNvbnN0IEJVRl9MRU5HVEggPSA2NCAqIDEwMjQ7XHJcbiAgICAgICAgY29uc3QgYnVmZiA9IEJ1ZmZlci5hbGxvYyhCVUZfTEVOR1RIKTtcclxuICAgICAgICBjb25zdCBmZHIgPSBmcy5vcGVuU3luYyhzcmNGaWxlLCAncicpO1xyXG4gICAgICAgIGNvbnN0IGZkdyA9IGZzLm9wZW5TeW5jKGRlc3RGaWxlLCAndycpO1xyXG4gICAgICAgIGxldCBieXRlc1JlYWQgPSAxO1xyXG4gICAgICAgIGxldCBwb3MgPSAwO1xyXG4gICAgICAgIHdoaWxlIChieXRlc1JlYWQgPiAwKSB7XHJcbiAgICAgICAgICAgIGJ5dGVzUmVhZCA9IGZzLnJlYWRTeW5jKGZkciwgYnVmZiwgMCwgQlVGX0xFTkdUSCwgcG9zKTtcclxuICAgICAgICAgICAgZnMud3JpdGVTeW5jKGZkdywgYnVmZiwgMCwgYnl0ZXNSZWFkKTtcclxuICAgICAgICAgICAgcG9zICs9IGJ5dGVzUmVhZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZnMuY2xvc2VTeW5jKGZkcik7XHJcbiAgICAgICAgZnMuY2xvc2VTeW5jKGZkdyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEZWxldGUgdGhlIGZvbGRlciBhbmQgYWxsIG9mIGl0cyBjb250ZW50IChybSAtcmYpLlxyXG4gICAgICogQHBhcmFtIHBhdGggcGF0aFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGRlbGV0ZUZvbGRlclJlY3Vyc2l2ZShwYXRoOiBzdHJpbmcpIHtcclxuICAgICAgICBsZXQgZmlsZXMgPSBbXTtcclxuICAgICAgICBpZiAoZnMuZXhpc3RzU3luYyhwYXRoKSkge1xyXG4gICAgICAgICAgICBmaWxlcyA9IGZzLnJlYWRkaXJTeW5jKHBhdGgpO1xyXG4gICAgICAgICAgICBmaWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChmaWxlKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjdXJQYXRoID0gcGF0aCArICcvJyArIGZpbGU7XHJcbiAgICAgICAgICAgICAgICBpZiAoZnMubHN0YXRTeW5jKGN1clBhdGgpLmlzRGlyZWN0b3J5KCkpIHsgLy8gcmVjdXJzZVxyXG4gICAgICAgICAgICAgICAgICAgIEZpbGVVdGlsLmRlbGV0ZUZvbGRlclJlY3Vyc2l2ZShjdXJQYXRoKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7IC8vIGRlbGV0ZSBmaWxlXHJcbiAgICAgICAgICAgICAgICAgICAgZnMudW5saW5rU3luYyhjdXJQYXRoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGZzLnJtZGlyU3luYyhwYXRoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEZWxldGUgZm9sZGVycyBjb250ZW50IHJlY3Vyc2l2ZWx5LCBidXQgZG8gbm90IGRlbGV0ZSBmb2xkZXIuXHJcbiAgICAgKiBGb2xkZXIgaXMgbGVmdCBlbXB0eSBhdCB0aGUgZW5kLlxyXG4gICAgICogQHBhcmFtIHBhdGggcGF0aFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGRlbGV0ZUZvbGRlckNvbnRlbnRSZWN1cnNpdmUocGF0aDogc3RyaW5nKSB7XHJcbiAgICAgICAgbGV0IGZpbGVzID0gW107XHJcbiAgICAgICAgaWYgKGZzLmV4aXN0c1N5bmMocGF0aCkpIHtcclxuICAgICAgICAgICAgZmlsZXMgPSBmcy5yZWFkZGlyU3luYyhwYXRoKTtcclxuICAgICAgICAgICAgZmlsZXMuZm9yRWFjaChmdW5jdGlvbiAoZmlsZSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY3VyUGF0aCA9IHBhdGggKyAnLycgKyBmaWxlO1xyXG4gICAgICAgICAgICAgICAgaWYgKGZzLmxzdGF0U3luYyhjdXJQYXRoKS5pc0RpcmVjdG9yeSgpKSB7IC8vIHJlY3Vyc2VcclxuICAgICAgICAgICAgICAgICAgICBGaWxlVXRpbC5kZWxldGVGb2xkZXJSZWN1cnNpdmUoY3VyUGF0aCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgeyAvLyBkZWxldGUgZmlsZVxyXG4gICAgICAgICAgICAgICAgICAgIGZzLnVubGlua1N5bmMoY3VyUGF0aCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIERlbGV0ZSBhIGZpbGUuXHJcbiAgICAgKiBAcGFyYW0gcGF0aCBwYXRoXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZGVsZXRlRmlsZShwYXRoOiBzdHJpbmcpIHtcclxuICAgICAgICBmcy51bmxpbmtTeW5jKHBhdGgpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==","originalSourcemap":{"version":3,"file":"file-util.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/common/file-util.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[12,0,0,12],[14,0,0,14],[20,0,0,20],[24,0,0,24],[25,0,0,25]],[[0,0,2,0]],[],[],[],[[3,0,6,3]],[[0,0,8,0],[6,0,8,6],[13,0,8,13],[21,0,8,21]],[[4,0,10,4]],[],[],[],[[7,0,14,7]],[[4,0,15,11],[10,0,15,17],[11,0,15,18],[17,0,15,24],[18,0,15,25],[26,0,15,41]],[[8,0,16,8],[15,0,16,15],[17,0,16,17],[18,0,16,18],[28,0,16,28],[29,0,16,29],[37,0,16,37],[38,0,16,38],[39,0,16,39]],[[4,0,17,4],[5,0,17,5]],[[4,0,19,4]],[],[],[],[],[[7,0,24,7]],[[4,0,25,11],[10,0,25,17],[11,0,25,18],[15,0,25,22],[16,0,25,23],[24,0,25,39],[26,0,25,41],[34,0,25,65]],[[8,0,26,8],[15,0,26,15],[17,0,26,17],[18,0,26,18],[30,0,26,30],[31,0,26,31],[39,0,26,39],[41,0,26,41],[49,0,26,49],[50,0,26,50],[51,0,26,51]],[[4,0,27,4],[5,0,27,5]],[[4,0,29,4]],[],[],[],[],[[7,0,34,7]],[[4,0,35,11],[10,0,35,17],[11,0,35,18],[25,0,35,32],[26,0,35,33],[34,0,35,49],[36,0,35,51],[46,0,35,69],[48,0,35,71],[56,0,35,95]],[[8,0,36,8],[10,0,36,10],[11,0,36,11],[24,0,36,24],[25,0,36,25],[33,0,36,33],[35,0,36,35],[45,0,36,45],[47,0,36,47],[49,0,36,48],[57,0,36,56],[59,0,36,58],[67,0,36,66],[69,0,36,67],[70,0,36,68],[71,0,36,69]],[[4,0,37,4],[5,0,37,5]],[[4,0,39,11],[10,0,39,17],[11,0,39,18],[15,0,39,22],[16,0,39,23],[23,0,39,38],[25,0,39,40],[33,0,39,56]],[[8,0,40,8],[14,0,40,14],[24,0,40,24],[27,0,40,27],[29,0,40,29],[32,0,40,32],[36,0,40,36],[37,0,40,37]],[[8,0,41,8],[14,0,41,14],[18,0,41,18],[21,0,41,21],[27,0,41,27],[28,0,41,28],[33,0,41,33],[34,0,41,34],[44,0,41,44],[45,0,41,45],[46,0,41,46]],[[8,0,42,8],[14,0,42,14],[17,0,42,17],[20,0,42,20],[22,0,42,22],[23,0,42,23],[31,0,42,31],[32,0,42,32],[39,0,42,39],[41,0,42,41],[44,0,42,44],[45,0,42,45],[46,0,42,46]],[[8,0,43,8],[14,0,43,14],[17,0,43,17],[20,0,43,20],[22,0,43,22],[23,0,43,23],[31,0,43,31],[32,0,43,32],[40,0,43,40],[42,0,43,42],[45,0,43,45],[46,0,43,46],[47,0,43,47]],[[8,0,44,8],[12,0,44,12],[21,0,44,21],[24,0,44,24],[25,0,44,25],[26,0,44,26]],[[8,0,45,8],[12,0,45,12],[15,0,45,15],[18,0,45,18],[19,0,45,19],[20,0,45,20]],[[8,0,46,8],[15,0,46,15],[24,0,46,24],[27,0,46,27],[28,0,46,28],[30,0,46,30]],[[12,0,47,12],[21,0,47,21],[24,0,47,24],[26,0,47,26],[27,0,47,27],[35,0,47,35],[36,0,47,36],[39,0,47,39],[41,0,47,41],[45,0,47,45],[47,0,47,47],[48,0,47,48],[50,0,47,50],[60,0,47,60],[62,0,47,62],[65,0,47,65],[66,0,47,66],[67,0,47,67]],[[12,0,48,12],[14,0,48,14],[15,0,48,15],[24,0,48,24],[25,0,48,25],[28,0,48,28],[30,0,48,30],[34,0,48,34],[36,0,48,36],[37,0,48,37],[39,0,48,39],[48,0,48,48],[49,0,48,49],[50,0,48,50]],[[12,0,49,12],[15,0,49,15],[19,0,49,19],[28,0,49,28],[29,0,49,29]],[[9,0,50,9]],[[8,0,51,8],[10,0,51,10],[11,0,51,11],[20,0,51,20],[21,0,51,21],[24,0,51,24],[25,0,51,25],[26,0,51,26]],[[8,0,52,8],[10,0,52,10],[11,0,52,11],[20,0,52,20],[21,0,52,21],[24,0,52,24],[25,0,52,25],[26,0,52,26]],[[4,0,53,4],[5,0,53,5]],[[4,0,55,4]],[],[],[[7,0,58,7]],[[4,0,59,11],[10,0,59,17],[11,0,59,18],[32,0,59,39],[33,0,59,40],[37,0,59,52]],[[8,0,60,8],[12,0,60,12],[17,0,60,17],[20,0,60,20],[22,0,60,22],[23,0,60,23]],[[8,0,61,8],[12,0,61,12],[14,0,61,14],[15,0,61,15],[25,0,61,25],[26,0,61,26],[30,0,61,30],[31,0,61,31],[33,0,61,33]],[[12,0,62,12],[17,0,62,17],[20,0,62,20],[22,0,62,22],[23,0,62,23],[34,0,62,34],[35,0,62,35],[39,0,62,39],[40,0,62,40],[41,0,62,41]],[[12,0,63,12],[17,0,63,17],[18,0,63,18],[25,0,63,25],[26,0,63,26],[36,0,63,36],[40,0,63,40]],[[16,0,64,16],[22,0,64,22],[29,0,64,29],[32,0,64,32],[36,0,64,36],[39,0,64,39],[42,0,64,42],[45,0,64,45],[49,0,64,49],[50,0,64,50]],[[16,0,65,16],[20,0,65,20],[22,0,65,22],[23,0,65,23],[32,0,65,32],[33,0,65,33],[40,0,65,40],[41,0,65,41],[42,0,65,42],[53,0,65,53],[55,0,65,55],[57,0,65,57],[59,0,65,59],[69,0,65,69]],[[20,0,66,20],[28,0,66,28],[29,0,66,29],[50,0,66,50],[51,0,66,51],[58,0,66,58],[59,0,66,59],[60,0,66,60]],[[17,0,67,17]],[[21,0,67,23],[23,0,67,25],[37,0,67,39]],[[20,0,68,20],[22,0,68,22],[23,0,68,23],[33,0,68,33],[34,0,68,34],[41,0,68,41],[42,0,68,42],[43,0,68,43]],[[17,0,69,17]],[[12,0,70,12],[13,0,70,13],[14,0,70,14],[15,0,70,15]],[[12,0,71,12],[14,0,71,14],[15,0,71,15],[24,0,71,24],[25,0,71,25],[29,0,71,29],[30,0,71,30],[31,0,71,31]],[[9,0,72,9]],[[4,0,73,4],[5,0,73,5]],[[4,0,75,4]],[],[],[],[[7,0,79,7]],[[4,0,80,11],[10,0,80,17],[11,0,80,18],[39,0,80,46],[40,0,80,47],[44,0,80,59]],[[8,0,81,8],[12,0,81,12],[17,0,81,17],[20,0,81,20],[22,0,81,22],[23,0,81,23]],[[8,0,82,8],[12,0,82,12],[14,0,82,14],[15,0,82,15],[25,0,82,25],[26,0,82,26],[30,0,82,30],[31,0,82,31],[33,0,82,33]],[[12,0,83,12],[17,0,83,17],[20,0,83,20],[22,0,83,22],[23,0,83,23],[34,0,83,34],[35,0,83,35],[39,0,83,39],[40,0,83,40],[41,0,83,41]],[[12,0,84,12],[17,0,84,17],[18,0,84,18],[25,0,84,25],[26,0,84,26],[36,0,84,36],[40,0,84,40]],[[16,0,85,16],[22,0,85,22],[29,0,85,29],[32,0,85,32],[36,0,85,36],[39,0,85,39],[42,0,85,42],[45,0,85,45],[49,0,85,49],[50,0,85,50]],[[16,0,86,16],[20,0,86,20],[22,0,86,22],[23,0,86,23],[32,0,86,32],[33,0,86,33],[40,0,86,40],[41,0,86,41],[42,0,86,42],[53,0,86,53],[55,0,86,55],[57,0,86,57],[59,0,86,59],[69,0,86,69]],[[20,0,87,20],[28,0,87,28],[29,0,87,29],[50,0,87,50],[51,0,87,51],[58,0,87,58],[59,0,87,59],[60,0,87,60]],[[17,0,88,17]],[[21,0,88,23],[23,0,88,25],[37,0,88,39]],[[20,0,89,20],[22,0,89,22],[23,0,89,23],[33,0,89,33],[34,0,89,34],[41,0,89,41],[42,0,89,42],[43,0,89,43]],[[17,0,90,17]],[[12,0,91,12],[13,0,91,13],[14,0,91,14],[15,0,91,15]],[[9,0,92,9]],[[4,0,93,4],[5,0,93,5]],[[4,0,95,4]],[],[],[[7,0,98,7]],[[4,0,99,11],[10,0,99,17],[11,0,99,18],[21,0,99,28],[22,0,99,29],[26,0,99,41]],[[8,0,100,8],[10,0,100,10],[11,0,100,11],[21,0,100,21],[22,0,100,22],[26,0,100,26],[27,0,100,27],[28,0,100,28]],[[4,0,101,4],[5,0,101,5]],[[1,0,102,1]]],"sourcesContent":["import * as fs from 'fs';\r\n\r\n/**\r\n * Created by martin on 17.02.2017.\r\n * Some (a few) simple utils for file operations.\r\n * Just for convenience.\r\n */\r\n\r\nexport class FileUtil {\r\n\r\n    /**\r\n     * Check for existence.\r\n     * @param filename filename\r\n     * @return wether file exists\r\n     */\r\n    public static exists(filename: string) {\r\n        return fs.existsSync(filename);\r\n    }\r\n\r\n    /**\r\n     * Read a file.\r\n     * @param filename filename\r\n     * @param encoding encoding\r\n     * @return content of file\r\n     */\r\n    public static read(filename: string, encoding: BufferEncoding) {\r\n        return fs.readFileSync(filename, encoding);\r\n    }\r\n\r\n    /**\r\n     * Write a file with given content.\r\n     * @param filename filename\r\n     * @param newContent newContent\r\n     * @param encoding encoding\r\n     */\r\n    public static replaceContent(filename: string, newContent: string, encoding: BufferEncoding) {\r\n        fs.writeFileSync(filename, newContent, {encoding: encoding});\r\n    }\r\n\r\n    public static copy(srcFile: string, destFile: string) {\r\n        const BUF_LENGTH = 64 * 1024;\r\n        const buff = Buffer.alloc(BUF_LENGTH);\r\n        const fdr = fs.openSync(srcFile, 'r');\r\n        const fdw = fs.openSync(destFile, 'w');\r\n        let bytesRead = 1;\r\n        let pos = 0;\r\n        while (bytesRead > 0) {\r\n            bytesRead = fs.readSync(fdr, buff, 0, BUF_LENGTH, pos);\r\n            fs.writeSync(fdw, buff, 0, bytesRead);\r\n            pos += bytesRead;\r\n        }\r\n        fs.closeSync(fdr);\r\n        fs.closeSync(fdw);\r\n    }\r\n\r\n    /**\r\n     * Delete the folder and all of its content (rm -rf).\r\n     * @param path path\r\n     */\r\n    public static deleteFolderRecursive(path: string) {\r\n        let files = [];\r\n        if (fs.existsSync(path)) {\r\n            files = fs.readdirSync(path);\r\n            files.forEach(function (file) {\r\n                const curPath = path + '/' + file;\r\n                if (fs.lstatSync(curPath).isDirectory()) { // recurse\r\n                    FileUtil.deleteFolderRecursive(curPath);\r\n                } else { // delete file\r\n                    fs.unlinkSync(curPath);\r\n                }\r\n            });\r\n            fs.rmdirSync(path);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delete folders content recursively, but do not delete folder.\r\n     * Folder is left empty at the end.\r\n     * @param path path\r\n     */\r\n    public static deleteFolderContentRecursive(path: string) {\r\n        let files = [];\r\n        if (fs.existsSync(path)) {\r\n            files = fs.readdirSync(path);\r\n            files.forEach(function (file) {\r\n                const curPath = path + '/' + file;\r\n                if (fs.lstatSync(curPath).isDirectory()) { // recurse\r\n                    FileUtil.deleteFolderRecursive(curPath);\r\n                } else { // delete file\r\n                    fs.unlinkSync(curPath);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delete a file.\r\n     * @param path path\r\n     */\r\n    public static deleteFile(path: string) {\r\n        fs.unlinkSync(path);\r\n    }\r\n}\r\n"]},"resolvedIds":{"fs":{"external":true,"id":"fs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":7306,"body":[{"type":"ExportNamedDeclaration","start":131,"end":2202,"declaration":{"type":"ClassDeclaration","start":138,"end":2202,"id":{"type":"Identifier","start":144,"end":173,"name":"NgxTranslateExtractionPattern"},"superClass":null,"body":{"type":"ClassBody","start":174,"end":2202,"body":[{"type":"MethodDefinition","start":375,"end":1243,"static":false,"computed":false,"key":{"type":"Identifier","start":375,"end":386,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":386,"end":1243,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":387,"end":410,"name":"extractionPatternString"}],"body":{"type":"BlockStatement","start":412,"end":1243,"body":[{"type":"ExpressionStatement","start":423,"end":478,"expression":{"type":"AssignmentExpression","start":423,"end":477,"operator":"=","left":{"type":"MemberExpression","start":423,"end":451,"object":{"type":"ThisExpression","start":423,"end":427},"property":{"type":"Identifier","start":428,"end":451,"name":"extractionPatternString"},"computed":false,"optional":false},"right":{"type":"Identifier","start":454,"end":477,"name":"extractionPatternString"}}},{"type":"VariableDeclaration","start":488,"end":537,"declarations":[{"type":"VariableDeclarator","start":494,"end":536,"id":{"type":"Identifier","start":494,"end":499,"name":"parts"},"init":{"type":"CallExpression","start":502,"end":536,"callee":{"type":"MemberExpression","start":502,"end":531,"object":{"type":"Identifier","start":502,"end":525,"name":"extractionPatternString"},"property":{"type":"Identifier","start":526,"end":531,"name":"split"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":532,"end":535,"value":"|","raw":"'|'"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":547,"end":577,"expression":{"type":"AssignmentExpression","start":547,"end":576,"operator":"=","left":{"type":"MemberExpression","start":547,"end":568,"object":{"type":"ThisExpression","start":547,"end":551},"property":{"type":"Identifier","start":552,"end":568,"name":"_matchExplicitId"},"computed":false,"optional":false},"right":{"type":"Literal","start":571,"end":576,"value":false,"raw":"false"}}},{"type":"ExpressionStatement","start":587,"end":618,"expression":{"type":"AssignmentExpression","start":587,"end":617,"operator":"=","left":{"type":"MemberExpression","start":587,"end":612,"object":{"type":"ThisExpression","start":587,"end":591},"property":{"type":"Identifier","start":592,"end":612,"name":"_descriptionPatterns"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":615,"end":617,"elements":[]}}},{"type":"ForStatement","start":628,"end":1236,"init":{"type":"VariableDeclaration","start":633,"end":642,"declarations":[{"type":"VariableDeclarator","start":637,"end":642,"id":{"type":"Identifier","start":637,"end":638,"name":"i"},"init":{"type":"Literal","start":641,"end":642,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":644,"end":660,"left":{"type":"Identifier","start":644,"end":645,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":648,"end":660,"object":{"type":"Identifier","start":648,"end":653,"name":"parts"},"property":{"type":"Identifier","start":654,"end":660,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":662,"end":665,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":662,"end":663,"name":"i"}},"body":{"type":"BlockStatement","start":667,"end":1236,"body":[{"type":"VariableDeclaration","start":682,"end":704,"declarations":[{"type":"VariableDeclarator","start":688,"end":703,"id":{"type":"Identifier","start":688,"end":692,"name":"part"},"init":{"type":"MemberExpression","start":695,"end":703,"object":{"type":"Identifier","start":695,"end":700,"name":"parts"},"property":{"type":"Identifier","start":701,"end":702,"name":"i"},"computed":true,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":718,"end":1225,"test":{"type":"BinaryExpression","start":722,"end":735,"left":{"type":"Identifier","start":722,"end":726,"name":"part"},"operator":"===","right":{"type":"Literal","start":731,"end":735,"value":"@@","raw":"'@@'"}},"consequent":{"type":"BlockStatement","start":737,"end":951,"body":[{"type":"IfStatement","start":756,"end":889,"test":{"type":"MemberExpression","start":760,"end":781,"object":{"type":"ThisExpression","start":760,"end":764},"property":{"type":"Identifier","start":765,"end":781,"name":"_matchExplicitId"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":783,"end":889,"body":[{"type":"ThrowStatement","start":806,"end":870,"argument":{"type":"NewExpression","start":812,"end":869,"callee":{"type":"Identifier","start":816,"end":821,"name":"Error"},"arguments":[{"type":"Literal","start":822,"end":868,"value":"extraction pattern must not contain @@ twice","raw":"'extraction pattern must not contain @@ twice'"}]}}]},"alternate":null},{"type":"ExpressionStatement","start":907,"end":936,"expression":{"type":"AssignmentExpression","start":907,"end":935,"operator":"=","left":{"type":"MemberExpression","start":907,"end":928,"object":{"type":"ThisExpression","start":907,"end":911},"property":{"type":"Identifier","start":912,"end":928,"name":"_matchExplicitId"},"computed":false,"optional":false},"right":{"type":"Literal","start":931,"end":935,"value":true,"raw":"true"}}}]},"alternate":{"type":"BlockStatement","start":970,"end":1225,"body":[{"type":"VariableDeclaration","start":989,"end":1049,"declarations":[{"type":"VariableDeclarator","start":995,"end":1048,"id":{"type":"Identifier","start":995,"end":1006,"name":"errorString"},"init":{"type":"CallExpression","start":1009,"end":1048,"callee":{"type":"MemberExpression","start":1009,"end":1042,"object":{"type":"ThisExpression","start":1009,"end":1013},"property":{"type":"Identifier","start":1014,"end":1042,"name":"checkValidDescriptionPattern"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1043,"end":1047,"name":"part"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1067,"end":1155,"test":{"type":"Identifier","start":1071,"end":1082,"name":"errorString"},"consequent":{"type":"BlockStatement","start":1084,"end":1155,"body":[{"type":"ThrowStatement","start":1107,"end":1136,"argument":{"type":"NewExpression","start":1113,"end":1135,"callee":{"type":"Identifier","start":1117,"end":1122,"name":"Error"},"arguments":[{"type":"Identifier","start":1123,"end":1134,"name":"errorString"}]}}]},"alternate":null},{"type":"ExpressionStatement","start":1173,"end":1210,"expression":{"type":"CallExpression","start":1173,"end":1209,"callee":{"type":"MemberExpression","start":1173,"end":1203,"object":{"type":"MemberExpression","start":1173,"end":1198,"object":{"type":"ThisExpression","start":1173,"end":1177},"property":{"type":"Identifier","start":1178,"end":1198,"name":"_descriptionPatterns"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1199,"end":1203,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1204,"end":1208,"name":"part"}],"optional":false}}]}}]}}]}}},{"type":"MethodDefinition","start":1417,"end":1494,"static":false,"computed":false,"key":{"type":"Identifier","start":1417,"end":1436,"name":"isExplicitIdMatched"},"kind":"method","value":{"type":"FunctionExpression","start":1436,"end":1494,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1437,"end":1439,"name":"id"}],"body":{"type":"BlockStatement","start":1441,"end":1494,"body":[{"type":"ReturnStatement","start":1452,"end":1487,"argument":{"type":"LogicalExpression","start":1459,"end":1486,"left":{"type":"Identifier","start":1459,"end":1461,"name":"id"},"operator":"&&","right":{"type":"MemberExpression","start":1465,"end":1486,"object":{"type":"ThisExpression","start":1465,"end":1469},"property":{"type":"Identifier","start":1470,"end":1486,"name":"_matchExplicitId"},"computed":false,"optional":false}}}]}}},{"type":"MethodDefinition","start":1684,"end":1795,"static":false,"computed":false,"key":{"type":"Identifier","start":1684,"end":1704,"name":"isDescriptionMatched"},"kind":"method","value":{"type":"FunctionExpression","start":1704,"end":1795,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1705,"end":1716,"name":"description"}],"body":{"type":"BlockStatement","start":1718,"end":1795,"body":[{"type":"ReturnStatement","start":1729,"end":1788,"argument":{"type":"BinaryExpression","start":1736,"end":1787,"left":{"type":"CallExpression","start":1736,"end":1782,"callee":{"type":"MemberExpression","start":1736,"end":1769,"object":{"type":"MemberExpression","start":1736,"end":1761,"object":{"type":"ThisExpression","start":1736,"end":1740},"property":{"type":"Identifier","start":1741,"end":1761,"name":"_descriptionPatterns"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1762,"end":1769,"name":"indexOf"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1770,"end":1781,"name":"description"}],"optional":false},"operator":">=","right":{"type":"Literal","start":1786,"end":1787,"value":0,"raw":"0"}}}]}}},{"type":"MethodDefinition","start":1801,"end":2199,"static":false,"computed":false,"key":{"type":"Identifier","start":1801,"end":1829,"name":"checkValidDescriptionPattern"},"kind":"method","value":{"type":"FunctionExpression","start":1829,"end":2199,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1830,"end":1848,"name":"descriptionPattern"}],"body":{"type":"BlockStatement","start":1850,"end":2199,"body":[{"type":"IfStatement","start":1861,"end":1945,"test":{"type":"UnaryExpression","start":1865,"end":1884,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":1866,"end":1884,"name":"descriptionPattern"}},"consequent":{"type":"BlockStatement","start":1886,"end":1945,"body":[{"type":"ReturnStatement","start":1901,"end":1934,"argument":{"type":"Literal","start":1908,"end":1933,"value":"empty value not allowed","raw":"'empty value not allowed'"}}]},"alternate":null},{"type":"IfStatement","start":1955,"end":2192,"test":{"type":"CallExpression","start":1959,"end":2008,"callee":{"type":"MemberExpression","start":1959,"end":1988,"object":{"type":"Literal","start":1959,"end":1983,"value":{},"raw":"/^[a-zA-Z_][a-zA-Z_-]*$/","regex":{"pattern":"^[a-zA-Z_][a-zA-Z_-]*$","flags":""}},"property":{"type":"Identifier","start":1984,"end":1988,"name":"test"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1989,"end":2007,"name":"descriptionPattern"}],"optional":false},"consequent":{"type":"BlockStatement","start":2010,"end":2060,"body":[{"type":"ReturnStatement","start":2025,"end":2037,"argument":{"type":"Literal","start":2032,"end":2036,"value":null,"raw":"null"}}]},"alternate":{"type":"BlockStatement","start":2075,"end":2192,"body":[{"type":"ReturnStatement","start":2090,"end":2181,"argument":{"type":"Literal","start":2097,"end":2180,"value":"description pattern must be an identifier containing only letters, digits, _ or -","raw":"'description pattern must be an identifier containing only letters, digits, _ or -'"}}]}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRyYW5zbGF0ZS1leHRyYWN0aW9uLXBhdHRlcm4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy94bGlmZm1lcmdlL3NyYy94bGlmZm1lcmdlL25neC10cmFuc2xhdGUtZXh0cmFjdGlvbi1wYXR0ZXJuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUNILE1BQU0sT0FBTyw2QkFBNkI7SUFLdEM7Ozs7T0FJRztJQUNILFlBQW9CLHVCQUErQjtRQUEvQiw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQVE7UUFDL0MsTUFBTSxLQUFLLEdBQUcsdUJBQXVCLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUM7UUFDOUIsSUFBSSxDQUFDLG9CQUFvQixHQUFHLEVBQUUsQ0FBQztRQUMvQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNuQyxNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdEIsSUFBSSxJQUFJLEtBQUssSUFBSSxFQUFFO2dCQUNmLElBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFFO29CQUN2QixNQUFNLElBQUksS0FBSyxDQUFDLDhDQUE4QyxDQUFDLENBQUM7aUJBQ25FO2dCQUNELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7YUFDaEM7aUJBQU07Z0JBQ0gsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLDRCQUE0QixDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUM1RCxJQUFJLFdBQVcsRUFBRTtvQkFDYixNQUFNLElBQUksS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO2lCQUNoQztnQkFDRCxJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3hDO1NBQ0o7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLG1CQUFtQixDQUFDLEVBQVU7UUFDakMsT0FBTyxFQUFFLElBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDO0lBQ3ZDLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksb0JBQW9CLENBQUMsV0FBbUI7UUFDM0MsT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvRCxDQUFDO0lBRU8sNEJBQTRCLENBQUMsa0JBQTBCO1FBQzNELElBQUksQ0FBQyxrQkFBa0IsRUFBRTtZQUNyQixPQUFPLHlCQUF5QixDQUFDO1NBQ3BDO1FBQ0QsSUFBSSx3QkFBd0IsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsRUFBRTtZQUNuRCxPQUFPLElBQUksQ0FBQyxDQUFDLFdBQVc7U0FDM0I7YUFBTTtZQUNILE9BQU8sbUZBQW1GLENBQUM7U0FDOUY7SUFDTCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogSGVscGVyIGNsYXNzIHRvIHBhcnNlIG5neCB0cmFuc2xhdGUgZXh0cmFjdGlvbiBwYXR0ZXJuXHJcbiAqIGFuZCB0byBkZWNpZGUgd2V0aGVyIGEgZ2l2ZW4gbWVzc2FnZSBtYXRjaGVzIHRoZSBwYXR0ZXJuLlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIE5neFRyYW5zbGF0ZUV4dHJhY3Rpb25QYXR0ZXJuIHtcclxuXHJcbiAgICBwcml2YXRlIF9tYXRjaEV4cGxpY2l0SWQ6IGJvb2xlYW47XHJcbiAgICBwcml2YXRlIF9kZXNjcmlwdGlvblBhdHRlcm5zOiBzdHJpbmdbXTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENvbnN0cnVjdCB0aGUgcGF0dGVybiBmcm9tIGdpdmVuIGRlc2NyaXB0aW9uIHN0cmluZ1xyXG4gICAgICogQHBhcmFtIGV4dHJhY3Rpb25QYXR0ZXJuU3RyaW5nIGV4dHJhY3Rpb25QYXR0ZXJuU3RyaW5nXHJcbiAgICAgKiBAdGhyb3dzIGFuIGVycm9yLCBpZiB0aGVyZSBpcyBhIHN5bnRheCBlcnJvclxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGV4dHJhY3Rpb25QYXR0ZXJuU3RyaW5nOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCBwYXJ0cyA9IGV4dHJhY3Rpb25QYXR0ZXJuU3RyaW5nLnNwbGl0KCd8Jyk7XHJcbiAgICAgICAgdGhpcy5fbWF0Y2hFeHBsaWNpdElkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRpb25QYXR0ZXJucyA9IFtdO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFydHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgcGFydCA9IHBhcnRzW2ldO1xyXG4gICAgICAgICAgICBpZiAocGFydCA9PT0gJ0BAJykge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX21hdGNoRXhwbGljaXRJZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignZXh0cmFjdGlvbiBwYXR0ZXJuIG11c3Qgbm90IGNvbnRhaW4gQEAgdHdpY2UnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMuX21hdGNoRXhwbGljaXRJZCA9IHRydWU7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBlcnJvclN0cmluZyA9IHRoaXMuY2hlY2tWYWxpZERlc2NyaXB0aW9uUGF0dGVybihwYXJ0KTtcclxuICAgICAgICAgICAgICAgIGlmIChlcnJvclN0cmluZykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvclN0cmluZyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9kZXNjcmlwdGlvblBhdHRlcm5zLnB1c2gocGFydCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVjaywgd2V0aGVyIGFuIGV4cGxpY2l0bHkgc2V0IGlkIG1hdGNoZXMgdGhlIHBhdHRlcm4uXHJcbiAgICAgKiBAcGFyYW0gaWQgaWRcclxuICAgICAqIEByZXR1cm4gd2V0aGVyIGFuIGV4cGxpY2l0bHkgc2V0IGlkIG1hdGNoZXMgdGhlIHBhdHRlcm4uXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBpc0V4cGxpY2l0SWRNYXRjaGVkKGlkOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gaWQgJiYgdGhpcy5fbWF0Y2hFeHBsaWNpdElkO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2ssIHdldGhlciBhIGdpdmVuIGRlc2NyaXB0aW9uIG1hdGNoZXMgdGhlIHBhdHRlcm4uXHJcbiAgICAgKiBAcGFyYW0gZGVzY3JpcHRpb24gZGVzY3JpcHRpb25cclxuICAgICAqIEByZXR1cm4gd2V0aGVyIGEgZ2l2ZW4gZGVzY3JpcHRpb24gbWF0Y2hlcyB0aGUgcGF0dGVybi5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGlzRGVzY3JpcHRpb25NYXRjaGVkKGRlc2NyaXB0aW9uOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZGVzY3JpcHRpb25QYXR0ZXJucy5pbmRleE9mKGRlc2NyaXB0aW9uKSA+PSAwO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgY2hlY2tWYWxpZERlc2NyaXB0aW9uUGF0dGVybihkZXNjcmlwdGlvblBhdHRlcm46IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgaWYgKCFkZXNjcmlwdGlvblBhdHRlcm4pIHtcclxuICAgICAgICAgICAgcmV0dXJuICdlbXB0eSB2YWx1ZSBub3QgYWxsb3dlZCc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICgvXlthLXpBLVpfXVthLXpBLVpfLV0qJC8udGVzdChkZXNjcmlwdGlvblBhdHRlcm4pKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsOyAvLyBpdCBpcyBva1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnZGVzY3JpcHRpb24gcGF0dGVybiBtdXN0IGJlIGFuIGlkZW50aWZpZXIgY29udGFpbmluZyBvbmx5IGxldHRlcnMsIGRpZ2l0cywgXyBvciAtJztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19","start":2204,"end":7306}]},"code":"/**\r\n * Helper class to parse ngx translate extraction pattern\r\n * and to decide wether a given message matches the pattern.\r\n */\r\nexport class NgxTranslateExtractionPattern {\r\n    /**\r\n     * Construct the pattern from given description string\r\n     * @param extractionPatternString extractionPatternString\r\n     * @throws an error, if there is a syntax error\r\n     */\r\n    constructor(extractionPatternString) {\r\n        this.extractionPatternString = extractionPatternString;\r\n        const parts = extractionPatternString.split('|');\r\n        this._matchExplicitId = false;\r\n        this._descriptionPatterns = [];\r\n        for (let i = 0; i < parts.length; i++) {\r\n            const part = parts[i];\r\n            if (part === '@@') {\r\n                if (this._matchExplicitId) {\r\n                    throw new Error('extraction pattern must not contain @@ twice');\r\n                }\r\n                this._matchExplicitId = true;\r\n            }\r\n            else {\r\n                const errorString = this.checkValidDescriptionPattern(part);\r\n                if (errorString) {\r\n                    throw new Error(errorString);\r\n                }\r\n                this._descriptionPatterns.push(part);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Check, wether an explicitly set id matches the pattern.\r\n     * @param id id\r\n     * @return wether an explicitly set id matches the pattern.\r\n     */\r\n    isExplicitIdMatched(id) {\r\n        return id && this._matchExplicitId;\r\n    }\r\n    /**\r\n     * Check, wether a given description matches the pattern.\r\n     * @param description description\r\n     * @return wether a given description matches the pattern.\r\n     */\r\n    isDescriptionMatched(description) {\r\n        return this._descriptionPatterns.indexOf(description) >= 0;\r\n    }\r\n    checkValidDescriptionPattern(descriptionPattern) {\r\n        if (!descriptionPattern) {\r\n            return 'empty value not allowed';\r\n        }\r\n        if (/^[a-zA-Z_][a-zA-Z_-]*$/.test(descriptionPattern)) {\r\n            return null; // it is ok\r\n        }\r\n        else {\r\n            return 'description pattern must be an identifier containing only letters, digits, _ or -';\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRyYW5zbGF0ZS1leHRyYWN0aW9uLXBhdHRlcm4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy94bGlmZm1lcmdlL3NyYy94bGlmZm1lcmdlL25neC10cmFuc2xhdGUtZXh0cmFjdGlvbi1wYXR0ZXJuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUNILE1BQU0sT0FBTyw2QkFBNkI7SUFLdEM7Ozs7T0FJRztJQUNILFlBQW9CLHVCQUErQjtRQUEvQiw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQVE7UUFDL0MsTUFBTSxLQUFLLEdBQUcsdUJBQXVCLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUM7UUFDOUIsSUFBSSxDQUFDLG9CQUFvQixHQUFHLEVBQUUsQ0FBQztRQUMvQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNuQyxNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdEIsSUFBSSxJQUFJLEtBQUssSUFBSSxFQUFFO2dCQUNmLElBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFFO29CQUN2QixNQUFNLElBQUksS0FBSyxDQUFDLDhDQUE4QyxDQUFDLENBQUM7aUJBQ25FO2dCQUNELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7YUFDaEM7aUJBQU07Z0JBQ0gsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLDRCQUE0QixDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUM1RCxJQUFJLFdBQVcsRUFBRTtvQkFDYixNQUFNLElBQUksS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO2lCQUNoQztnQkFDRCxJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3hDO1NBQ0o7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLG1CQUFtQixDQUFDLEVBQVU7UUFDakMsT0FBTyxFQUFFLElBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDO0lBQ3ZDLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksb0JBQW9CLENBQUMsV0FBbUI7UUFDM0MsT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvRCxDQUFDO0lBRU8sNEJBQTRCLENBQUMsa0JBQTBCO1FBQzNELElBQUksQ0FBQyxrQkFBa0IsRUFBRTtZQUNyQixPQUFPLHlCQUF5QixDQUFDO1NBQ3BDO1FBQ0QsSUFBSSx3QkFBd0IsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsRUFBRTtZQUNuRCxPQUFPLElBQUksQ0FBQyxDQUFDLFdBQVc7U0FDM0I7YUFBTTtZQUNILE9BQU8sbUZBQW1GLENBQUM7U0FDOUY7SUFDTCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogSGVscGVyIGNsYXNzIHRvIHBhcnNlIG5neCB0cmFuc2xhdGUgZXh0cmFjdGlvbiBwYXR0ZXJuXHJcbiAqIGFuZCB0byBkZWNpZGUgd2V0aGVyIGEgZ2l2ZW4gbWVzc2FnZSBtYXRjaGVzIHRoZSBwYXR0ZXJuLlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIE5neFRyYW5zbGF0ZUV4dHJhY3Rpb25QYXR0ZXJuIHtcclxuXHJcbiAgICBwcml2YXRlIF9tYXRjaEV4cGxpY2l0SWQ6IGJvb2xlYW47XHJcbiAgICBwcml2YXRlIF9kZXNjcmlwdGlvblBhdHRlcm5zOiBzdHJpbmdbXTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENvbnN0cnVjdCB0aGUgcGF0dGVybiBmcm9tIGdpdmVuIGRlc2NyaXB0aW9uIHN0cmluZ1xyXG4gICAgICogQHBhcmFtIGV4dHJhY3Rpb25QYXR0ZXJuU3RyaW5nIGV4dHJhY3Rpb25QYXR0ZXJuU3RyaW5nXHJcbiAgICAgKiBAdGhyb3dzIGFuIGVycm9yLCBpZiB0aGVyZSBpcyBhIHN5bnRheCBlcnJvclxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGV4dHJhY3Rpb25QYXR0ZXJuU3RyaW5nOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCBwYXJ0cyA9IGV4dHJhY3Rpb25QYXR0ZXJuU3RyaW5nLnNwbGl0KCd8Jyk7XHJcbiAgICAgICAgdGhpcy5fbWF0Y2hFeHBsaWNpdElkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRpb25QYXR0ZXJucyA9IFtdO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFydHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgcGFydCA9IHBhcnRzW2ldO1xyXG4gICAgICAgICAgICBpZiAocGFydCA9PT0gJ0BAJykge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX21hdGNoRXhwbGljaXRJZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignZXh0cmFjdGlvbiBwYXR0ZXJuIG11c3Qgbm90IGNvbnRhaW4gQEAgdHdpY2UnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMuX21hdGNoRXhwbGljaXRJZCA9IHRydWU7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBlcnJvclN0cmluZyA9IHRoaXMuY2hlY2tWYWxpZERlc2NyaXB0aW9uUGF0dGVybihwYXJ0KTtcclxuICAgICAgICAgICAgICAgIGlmIChlcnJvclN0cmluZykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvclN0cmluZyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9kZXNjcmlwdGlvblBhdHRlcm5zLnB1c2gocGFydCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVjaywgd2V0aGVyIGFuIGV4cGxpY2l0bHkgc2V0IGlkIG1hdGNoZXMgdGhlIHBhdHRlcm4uXHJcbiAgICAgKiBAcGFyYW0gaWQgaWRcclxuICAgICAqIEByZXR1cm4gd2V0aGVyIGFuIGV4cGxpY2l0bHkgc2V0IGlkIG1hdGNoZXMgdGhlIHBhdHRlcm4uXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBpc0V4cGxpY2l0SWRNYXRjaGVkKGlkOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gaWQgJiYgdGhpcy5fbWF0Y2hFeHBsaWNpdElkO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2ssIHdldGhlciBhIGdpdmVuIGRlc2NyaXB0aW9uIG1hdGNoZXMgdGhlIHBhdHRlcm4uXHJcbiAgICAgKiBAcGFyYW0gZGVzY3JpcHRpb24gZGVzY3JpcHRpb25cclxuICAgICAqIEByZXR1cm4gd2V0aGVyIGEgZ2l2ZW4gZGVzY3JpcHRpb24gbWF0Y2hlcyB0aGUgcGF0dGVybi5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGlzRGVzY3JpcHRpb25NYXRjaGVkKGRlc2NyaXB0aW9uOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZGVzY3JpcHRpb25QYXR0ZXJucy5pbmRleE9mKGRlc2NyaXB0aW9uKSA+PSAwO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgY2hlY2tWYWxpZERlc2NyaXB0aW9uUGF0dGVybihkZXNjcmlwdGlvblBhdHRlcm46IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgaWYgKCFkZXNjcmlwdGlvblBhdHRlcm4pIHtcclxuICAgICAgICAgICAgcmV0dXJuICdlbXB0eSB2YWx1ZSBub3QgYWxsb3dlZCc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICgvXlthLXpBLVpfXVthLXpBLVpfLV0qJC8udGVzdChkZXNjcmlwdGlvblBhdHRlcm4pKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsOyAvLyBpdCBpcyBva1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnZGVzY3JpcHRpb24gcGF0dGVybiBtdXN0IGJlIGFuIGlkZW50aWZpZXIgY29udGFpbmluZyBvbmx5IGxldHRlcnMsIGRpZ2l0cywgXyBvciAtJztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19","customTransformCache":false,"dependencies":[],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\ngx-translate-extraction-pattern.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Helper class to parse ngx translate extraction pattern\r\n * and to decide wether a given message matches the pattern.\r\n */\r\nexport class NgxTranslateExtractionPattern {\r\n    /**\r\n     * Construct the pattern from given description string\r\n     * @param extractionPatternString extractionPatternString\r\n     * @throws an error, if there is a syntax error\r\n     */\r\n    constructor(extractionPatternString) {\r\n        this.extractionPatternString = extractionPatternString;\r\n        const parts = extractionPatternString.split('|');\r\n        this._matchExplicitId = false;\r\n        this._descriptionPatterns = [];\r\n        for (let i = 0; i < parts.length; i++) {\r\n            const part = parts[i];\r\n            if (part === '@@') {\r\n                if (this._matchExplicitId) {\r\n                    throw new Error('extraction pattern must not contain @@ twice');\r\n                }\r\n                this._matchExplicitId = true;\r\n            }\r\n            else {\r\n                const errorString = this.checkValidDescriptionPattern(part);\r\n                if (errorString) {\r\n                    throw new Error(errorString);\r\n                }\r\n                this._descriptionPatterns.push(part);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Check, wether an explicitly set id matches the pattern.\r\n     * @param id id\r\n     * @return wether an explicitly set id matches the pattern.\r\n     */\r\n    isExplicitIdMatched(id) {\r\n        return id && this._matchExplicitId;\r\n    }\r\n    /**\r\n     * Check, wether a given description matches the pattern.\r\n     * @param description description\r\n     * @return wether a given description matches the pattern.\r\n     */\r\n    isDescriptionMatched(description) {\r\n        return this._descriptionPatterns.indexOf(description) >= 0;\r\n    }\r\n    checkValidDescriptionPattern(descriptionPattern) {\r\n        if (!descriptionPattern) {\r\n            return 'empty value not allowed';\r\n        }\r\n        if (/^[a-zA-Z_][a-zA-Z_-]*$/.test(descriptionPattern)) {\r\n            return null; // it is ok\r\n        }\r\n        else {\r\n            return 'description pattern must be an identifier containing only letters, digits, _ or -';\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRyYW5zbGF0ZS1leHRyYWN0aW9uLXBhdHRlcm4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy94bGlmZm1lcmdlL3NyYy94bGlmZm1lcmdlL25neC10cmFuc2xhdGUtZXh0cmFjdGlvbi1wYXR0ZXJuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUNILE1BQU0sT0FBTyw2QkFBNkI7SUFLdEM7Ozs7T0FJRztJQUNILFlBQW9CLHVCQUErQjtRQUEvQiw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQVE7UUFDL0MsTUFBTSxLQUFLLEdBQUcsdUJBQXVCLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUM7UUFDOUIsSUFBSSxDQUFDLG9CQUFvQixHQUFHLEVBQUUsQ0FBQztRQUMvQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNuQyxNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdEIsSUFBSSxJQUFJLEtBQUssSUFBSSxFQUFFO2dCQUNmLElBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFFO29CQUN2QixNQUFNLElBQUksS0FBSyxDQUFDLDhDQUE4QyxDQUFDLENBQUM7aUJBQ25FO2dCQUNELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7YUFDaEM7aUJBQU07Z0JBQ0gsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLDRCQUE0QixDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUM1RCxJQUFJLFdBQVcsRUFBRTtvQkFDYixNQUFNLElBQUksS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO2lCQUNoQztnQkFDRCxJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3hDO1NBQ0o7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLG1CQUFtQixDQUFDLEVBQVU7UUFDakMsT0FBTyxFQUFFLElBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDO0lBQ3ZDLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksb0JBQW9CLENBQUMsV0FBbUI7UUFDM0MsT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvRCxDQUFDO0lBRU8sNEJBQTRCLENBQUMsa0JBQTBCO1FBQzNELElBQUksQ0FBQyxrQkFBa0IsRUFBRTtZQUNyQixPQUFPLHlCQUF5QixDQUFDO1NBQ3BDO1FBQ0QsSUFBSSx3QkFBd0IsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsRUFBRTtZQUNuRCxPQUFPLElBQUksQ0FBQyxDQUFDLFdBQVc7U0FDM0I7YUFBTTtZQUNILE9BQU8sbUZBQW1GLENBQUM7U0FDOUY7SUFDTCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogSGVscGVyIGNsYXNzIHRvIHBhcnNlIG5neCB0cmFuc2xhdGUgZXh0cmFjdGlvbiBwYXR0ZXJuXHJcbiAqIGFuZCB0byBkZWNpZGUgd2V0aGVyIGEgZ2l2ZW4gbWVzc2FnZSBtYXRjaGVzIHRoZSBwYXR0ZXJuLlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIE5neFRyYW5zbGF0ZUV4dHJhY3Rpb25QYXR0ZXJuIHtcclxuXHJcbiAgICBwcml2YXRlIF9tYXRjaEV4cGxpY2l0SWQ6IGJvb2xlYW47XHJcbiAgICBwcml2YXRlIF9kZXNjcmlwdGlvblBhdHRlcm5zOiBzdHJpbmdbXTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENvbnN0cnVjdCB0aGUgcGF0dGVybiBmcm9tIGdpdmVuIGRlc2NyaXB0aW9uIHN0cmluZ1xyXG4gICAgICogQHBhcmFtIGV4dHJhY3Rpb25QYXR0ZXJuU3RyaW5nIGV4dHJhY3Rpb25QYXR0ZXJuU3RyaW5nXHJcbiAgICAgKiBAdGhyb3dzIGFuIGVycm9yLCBpZiB0aGVyZSBpcyBhIHN5bnRheCBlcnJvclxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGV4dHJhY3Rpb25QYXR0ZXJuU3RyaW5nOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCBwYXJ0cyA9IGV4dHJhY3Rpb25QYXR0ZXJuU3RyaW5nLnNwbGl0KCd8Jyk7XHJcbiAgICAgICAgdGhpcy5fbWF0Y2hFeHBsaWNpdElkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRpb25QYXR0ZXJucyA9IFtdO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFydHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgcGFydCA9IHBhcnRzW2ldO1xyXG4gICAgICAgICAgICBpZiAocGFydCA9PT0gJ0BAJykge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX21hdGNoRXhwbGljaXRJZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignZXh0cmFjdGlvbiBwYXR0ZXJuIG11c3Qgbm90IGNvbnRhaW4gQEAgdHdpY2UnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMuX21hdGNoRXhwbGljaXRJZCA9IHRydWU7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBlcnJvclN0cmluZyA9IHRoaXMuY2hlY2tWYWxpZERlc2NyaXB0aW9uUGF0dGVybihwYXJ0KTtcclxuICAgICAgICAgICAgICAgIGlmIChlcnJvclN0cmluZykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvclN0cmluZyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9kZXNjcmlwdGlvblBhdHRlcm5zLnB1c2gocGFydCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVjaywgd2V0aGVyIGFuIGV4cGxpY2l0bHkgc2V0IGlkIG1hdGNoZXMgdGhlIHBhdHRlcm4uXHJcbiAgICAgKiBAcGFyYW0gaWQgaWRcclxuICAgICAqIEByZXR1cm4gd2V0aGVyIGFuIGV4cGxpY2l0bHkgc2V0IGlkIG1hdGNoZXMgdGhlIHBhdHRlcm4uXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBpc0V4cGxpY2l0SWRNYXRjaGVkKGlkOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gaWQgJiYgdGhpcy5fbWF0Y2hFeHBsaWNpdElkO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2ssIHdldGhlciBhIGdpdmVuIGRlc2NyaXB0aW9uIG1hdGNoZXMgdGhlIHBhdHRlcm4uXHJcbiAgICAgKiBAcGFyYW0gZGVzY3JpcHRpb24gZGVzY3JpcHRpb25cclxuICAgICAqIEByZXR1cm4gd2V0aGVyIGEgZ2l2ZW4gZGVzY3JpcHRpb24gbWF0Y2hlcyB0aGUgcGF0dGVybi5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGlzRGVzY3JpcHRpb25NYXRjaGVkKGRlc2NyaXB0aW9uOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZGVzY3JpcHRpb25QYXR0ZXJucy5pbmRleE9mKGRlc2NyaXB0aW9uKSA+PSAwO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgY2hlY2tWYWxpZERlc2NyaXB0aW9uUGF0dGVybihkZXNjcmlwdGlvblBhdHRlcm46IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgaWYgKCFkZXNjcmlwdGlvblBhdHRlcm4pIHtcclxuICAgICAgICAgICAgcmV0dXJuICdlbXB0eSB2YWx1ZSBub3QgYWxsb3dlZCc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICgvXlthLXpBLVpfXVthLXpBLVpfLV0qJC8udGVzdChkZXNjcmlwdGlvblBhdHRlcm4pKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsOyAvLyBpdCBpcyBva1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnZGVzY3JpcHRpb24gcGF0dGVybiBtdXN0IGJlIGFuIGlkZW50aWZpZXIgY29udGFpbmluZyBvbmx5IGxldHRlcnMsIGRpZ2l0cywgXyBvciAtJztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19","originalSourcemap":{"version":3,"file":"ngx-translate-extraction-pattern.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/xliffmerge/ngx-translate-extraction-pattern.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[[3,0,3,3]],[[0,0,4,0],[6,0,4,6],[13,0,4,13],[42,0,4,42]],[[4,0,9,4]],[],[],[],[[7,0,13,7]],[[4,0,14,4],[16,0,14,24],[39,0,14,55]],[[8,0,14,24],[36,0,14,47],[39,0,14,24],[62,0,14,47],[63,0,14,55]],[[8,0,15,8],[14,0,15,14],[19,0,15,19],[22,0,15,22],[45,0,15,45],[46,0,15,46],[51,0,15,51],[52,0,15,52],[55,0,15,55],[56,0,15,56],[57,0,15,57]],[[8,0,16,8],[12,0,16,12],[13,0,16,13],[29,0,16,29],[32,0,16,32],[37,0,16,37],[38,0,16,38]],[[8,0,17,8],[12,0,17,12],[13,0,17,13],[33,0,17,33],[36,0,17,36],[38,0,17,38],[39,0,17,39]],[[8,0,18,8],[13,0,18,13],[17,0,18,17],[18,0,18,18],[21,0,18,21],[22,0,18,22],[24,0,18,24],[25,0,18,25],[28,0,18,28],[33,0,18,33],[34,0,18,34],[40,0,18,40],[42,0,18,42],[43,0,18,43],[45,0,18,45],[47,0,18,47]],[[12,0,19,12],[18,0,19,18],[22,0,19,22],[25,0,19,25],[30,0,19,30],[31,0,19,31],[32,0,19,32],[33,0,19,33],[34,0,19,34]],[[12,0,20,12],[16,0,20,16],[20,0,20,20],[25,0,20,25],[29,0,20,29],[31,0,20,31]],[[16,0,21,16],[20,0,21,20],[24,0,21,24],[25,0,21,25],[41,0,21,41],[43,0,21,43]],[[20,0,22,20],[26,0,22,26],[30,0,22,30],[35,0,22,35],[36,0,22,36],[82,0,22,82],[83,0,22,83],[84,0,22,84]],[[17,0,23,17]],[[16,0,24,16],[20,0,24,20],[21,0,24,21],[37,0,24,37],[40,0,24,40],[44,0,24,44],[45,0,24,45]],[[13,0,25,13]],[[17,0,25,19]],[[16,0,26,16],[22,0,26,22],[33,0,26,33],[36,0,26,36],[40,0,26,40],[41,0,26,41],[69,0,26,69],[70,0,26,70],[74,0,26,74],[75,0,26,75],[76,0,26,76]],[[16,0,27,16],[20,0,27,20],[31,0,27,31],[33,0,27,33]],[[20,0,28,20],[26,0,28,26],[30,0,28,30],[35,0,28,35],[36,0,28,36],[47,0,28,47],[48,0,28,48],[49,0,28,49]],[[17,0,29,17]],[[16,0,30,16],[20,0,30,20],[21,0,30,21],[41,0,30,41],[42,0,30,42],[46,0,30,46],[47,0,30,47],[51,0,30,51],[52,0,30,52],[53,0,30,53]],[[13,0,31,13]],[[9,0,32,9]],[[4,0,33,4],[5,0,33,5]],[[4,0,35,4]],[],[],[],[[7,0,39,7]],[[4,0,40,11],[23,0,40,30],[24,0,40,31],[26,0,40,41]],[[8,0,41,8],[15,0,41,15],[17,0,41,17],[21,0,41,21],[25,0,41,25],[26,0,41,26],[42,0,41,42],[43,0,41,43]],[[4,0,42,4],[5,0,42,5]],[[4,0,44,4]],[],[],[],[[7,0,48,7]],[[4,0,49,11],[24,0,49,31],[25,0,49,32],[36,0,49,51]],[[8,0,50,8],[15,0,50,15],[19,0,50,19],[20,0,50,20],[40,0,50,40],[41,0,50,41],[48,0,50,48],[49,0,50,49],[60,0,50,60],[61,0,50,61],[65,0,50,65],[66,0,50,66],[67,0,50,67]],[[4,0,51,4],[5,0,51,5]],[[4,0,53,12],[32,0,53,40],[33,0,53,41],[51,0,53,67]],[[8,0,54,8],[12,0,54,12],[13,0,54,13],[31,0,54,31],[33,0,54,33]],[[12,0,55,12],[19,0,55,19],[44,0,55,44],[45,0,55,45]],[[9,0,56,9]],[[8,0,57,8],[12,0,57,12],[36,0,57,36],[37,0,57,37],[41,0,57,41],[42,0,57,42],[60,0,57,60],[61,0,57,61],[63,0,57,63]],[[12,0,58,12],[19,0,58,19],[23,0,58,23],[24,0,58,24],[25,0,58,25],[36,0,58,36]],[[9,0,59,9]],[[13,0,59,15]],[[12,0,60,12],[19,0,60,19],[102,0,60,102],[103,0,60,103]],[[9,0,61,9]],[[4,0,62,4],[5,0,62,5]],[[1,0,63,1]]],"sourcesContent":["/**\r\n * Helper class to parse ngx translate extraction pattern\r\n * and to decide wether a given message matches the pattern.\r\n */\r\nexport class NgxTranslateExtractionPattern {\r\n\r\n    private _matchExplicitId: boolean;\r\n    private _descriptionPatterns: string[];\r\n\r\n    /**\r\n     * Construct the pattern from given description string\r\n     * @param extractionPatternString extractionPatternString\r\n     * @throws an error, if there is a syntax error\r\n     */\r\n    constructor(private extractionPatternString: string) {\r\n        const parts = extractionPatternString.split('|');\r\n        this._matchExplicitId = false;\r\n        this._descriptionPatterns = [];\r\n        for (let i = 0; i < parts.length; i++) {\r\n            const part = parts[i];\r\n            if (part === '@@') {\r\n                if (this._matchExplicitId) {\r\n                    throw new Error('extraction pattern must not contain @@ twice');\r\n                }\r\n                this._matchExplicitId = true;\r\n            } else {\r\n                const errorString = this.checkValidDescriptionPattern(part);\r\n                if (errorString) {\r\n                    throw new Error(errorString);\r\n                }\r\n                this._descriptionPatterns.push(part);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check, wether an explicitly set id matches the pattern.\r\n     * @param id id\r\n     * @return wether an explicitly set id matches the pattern.\r\n     */\r\n    public isExplicitIdMatched(id: string): boolean {\r\n        return id && this._matchExplicitId;\r\n    }\r\n\r\n    /**\r\n     * Check, wether a given description matches the pattern.\r\n     * @param description description\r\n     * @return wether a given description matches the pattern.\r\n     */\r\n    public isDescriptionMatched(description: string): boolean {\r\n        return this._descriptionPatterns.indexOf(description) >= 0;\r\n    }\r\n\r\n    private checkValidDescriptionPattern(descriptionPattern: string): string {\r\n        if (!descriptionPattern) {\r\n            return 'empty value not allowed';\r\n        }\r\n        if (/^[a-zA-Z_][a-zA-Z_-]*$/.test(descriptionPattern)) {\r\n            return null; // it is ok\r\n        } else {\r\n            return 'description pattern must be an identifier containing only letters, digits, _ or -';\r\n        }\r\n    }\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":19800,"body":[{"type":"ImportDeclaration","start":0,"end":89,"specifiers":[{"type":"ImportSpecifier","start":9,"end":42,"imported":{"type":"Identifier","start":9,"end":42,"name":"NORMALIZATION_FORMAT_NGXTRANSLATE"},"local":{"type":"Identifier","start":9,"end":42,"name":"NORMALIZATION_FORMAT_NGXTRANSLATE"}}],"source":{"type":"Literal","start":50,"end":88,"value":"@ngx-i18nsupport/ngx-i18nsupport-lib","raw":"'@ngx-i18nsupport/ngx-i18nsupport-lib'"}},{"type":"ImportDeclaration","start":91,"end":138,"specifiers":[{"type":"ImportSpecifier","start":100,"end":108,"imported":{"type":"Identifier","start":100,"end":108,"name":"FileUtil"},"local":{"type":"Identifier","start":100,"end":108,"name":"FileUtil"}}],"source":{"type":"Literal","start":116,"end":137,"value":"../common/file-util","raw":"'../common/file-util'"}},{"type":"ImportDeclaration","start":140,"end":191,"specifiers":[{"type":"ImportSpecifier","start":149,"end":166,"imported":{"type":"Identifier","start":149,"end":166,"name":"isNullOrUndefined"},"local":{"type":"Identifier","start":149,"end":166,"name":"isNullOrUndefined"}}],"source":{"type":"Literal","start":174,"end":190,"value":"../common/util","raw":"'../common/util'"}},{"type":"ImportDeclaration","start":193,"end":276,"specifiers":[{"type":"ImportSpecifier","start":202,"end":231,"imported":{"type":"Identifier","start":202,"end":231,"name":"NgxTranslateExtractionPattern"},"local":{"type":"Identifier","start":202,"end":231,"name":"NgxTranslateExtractionPattern"}}],"source":{"type":"Literal","start":239,"end":275,"value":"./ngx-translate-extraction-pattern","raw":"'./ngx-translate-extraction-pattern'"}},{"type":"ExportNamedDeclaration","start":278,"end":5498,"declaration":{"type":"ClassDeclaration","start":285,"end":5498,"id":{"type":"Identifier","start":291,"end":312,"name":"NgxTranslateExtractor"},"superClass":null,"body":{"type":"ClassBody","start":313,"end":5498,"body":[{"type":"MethodDefinition","start":320,"end":516,"static":false,"computed":false,"key":{"type":"Identifier","start":320,"end":331,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":331,"end":516,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":332,"end":344,"name":"messagesFile"},{"type":"Identifier","start":346,"end":369,"name":"extractionPatternString"}],"body":{"type":"BlockStatement","start":371,"end":516,"body":[{"type":"ExpressionStatement","start":382,"end":415,"expression":{"type":"AssignmentExpression","start":382,"end":414,"operator":"=","left":{"type":"MemberExpression","start":382,"end":399,"object":{"type":"ThisExpression","start":382,"end":386},"property":{"type":"Identifier","start":387,"end":399,"name":"messagesFile"},"computed":false,"optional":false},"right":{"type":"Identifier","start":402,"end":414,"name":"messagesFile"}}},{"type":"ExpressionStatement","start":425,"end":509,"expression":{"type":"AssignmentExpression","start":425,"end":508,"operator":"=","left":{"type":"MemberExpression","start":425,"end":447,"object":{"type":"ThisExpression","start":425,"end":429},"property":{"type":"Identifier","start":430,"end":447,"name":"extractionPattern"},"computed":false,"optional":false},"right":{"type":"NewExpression","start":450,"end":508,"callee":{"type":"Identifier","start":454,"end":483,"name":"NgxTranslateExtractionPattern"},"arguments":[{"type":"Identifier","start":484,"end":507,"name":"extractionPatternString"}]}}}]}}},{"type":"MethodDefinition","start":747,"end":1043,"static":true,"computed":false,"key":{"type":"Identifier","start":754,"end":766,"name":"checkPattern"},"kind":"method","value":{"type":"FunctionExpression","start":766,"end":1043,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":767,"end":790,"name":"extractionPatternString"}],"body":{"type":"BlockStatement","start":792,"end":1043,"body":[{"type":"TryStatement","start":803,"end":1014,"block":{"type":"BlockStatement","start":807,"end":943,"body":[{"type":"IfStatement","start":822,"end":932,"test":{"type":"NewExpression","start":826,"end":884,"callee":{"type":"Identifier","start":830,"end":859,"name":"NgxTranslateExtractionPattern"},"arguments":[{"type":"Identifier","start":860,"end":883,"name":"extractionPatternString"}]},"consequent":{"type":"BlockStatement","start":886,"end":932,"body":[{"type":"ReturnStatement","start":905,"end":917,"argument":{"type":"Literal","start":912,"end":916,"value":null,"raw":"null"}}]},"alternate":null}]},"handler":{"type":"CatchClause","start":953,"end":1014,"param":{"type":"Identifier","start":960,"end":965,"name":"error"},"body":{"type":"BlockStatement","start":967,"end":1014,"body":[{"type":"ReturnStatement","start":982,"end":1003,"argument":{"type":"MemberExpression","start":989,"end":1002,"object":{"type":"Identifier","start":989,"end":994,"name":"error"},"property":{"type":"Identifier","start":995,"end":1002,"name":"message"},"computed":false,"optional":false}}]}},"finalizer":null},{"type":"ReturnStatement","start":1024,"end":1036,"argument":{"type":"Literal","start":1031,"end":1035,"value":null,"raw":"null"}}]}}},{"type":"MethodDefinition","start":1049,"end":1208,"static":true,"computed":false,"key":{"type":"Identifier","start":1056,"end":1063,"name":"extract"},"kind":"method","value":{"type":"FunctionExpression","start":1063,"end":1208,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1064,"end":1076,"name":"messagesFile"},{"type":"Identifier","start":1078,"end":1095,"name":"extractionPattern"},{"type":"Identifier","start":1097,"end":1107,"name":"outputFile"}],"body":{"type":"BlockStatement","start":1109,"end":1208,"body":[{"type":"ExpressionStatement","start":1120,"end":1201,"expression":{"type":"CallExpression","start":1120,"end":1200,"callee":{"type":"MemberExpression","start":1120,"end":1188,"object":{"type":"NewExpression","start":1120,"end":1178,"callee":{"type":"Identifier","start":1124,"end":1145,"name":"NgxTranslateExtractor"},"arguments":[{"type":"Identifier","start":1146,"end":1158,"name":"messagesFile"},{"type":"Identifier","start":1160,"end":1177,"name":"extractionPattern"}]},"property":{"type":"Identifier","start":1179,"end":1188,"name":"extractTo"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1189,"end":1199,"name":"outputFile"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1319,"end":1737,"static":false,"computed":false,"key":{"type":"Identifier","start":1319,"end":1328,"name":"extractTo"},"kind":"method","value":{"type":"FunctionExpression","start":1328,"end":1737,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1329,"end":1339,"name":"outputFile"}],"body":{"type":"BlockStatement","start":1341,"end":1737,"body":[{"type":"VariableDeclaration","start":1352,"end":1412,"declarations":[{"type":"VariableDeclarator","start":1358,"end":1411,"id":{"type":"Identifier","start":1358,"end":1370,"name":"translations"},"init":{"type":"CallExpression","start":1373,"end":1411,"callee":{"type":"MemberExpression","start":1373,"end":1395,"object":{"type":"ThisExpression","start":1373,"end":1377},"property":{"type":"Identifier","start":1378,"end":1395,"name":"toNgxTranslations"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1396,"end":1410,"callee":{"type":"MemberExpression","start":1396,"end":1408,"object":{"type":"ThisExpression","start":1396,"end":1400},"property":{"type":"Identifier","start":1401,"end":1408,"name":"extract"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1422,"end":1730,"test":{"type":"LogicalExpression","start":1426,"end":1478,"left":{"type":"Identifier","start":1426,"end":1438,"name":"translations"},"operator":"&&","right":{"type":"BinaryExpression","start":1442,"end":1478,"left":{"type":"MemberExpression","start":1442,"end":1474,"object":{"type":"CallExpression","start":1442,"end":1467,"callee":{"type":"MemberExpression","start":1442,"end":1453,"object":{"type":"Identifier","start":1442,"end":1448,"name":"Object"},"property":{"type":"Identifier","start":1449,"end":1453,"name":"keys"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1454,"end":1466,"name":"translations"}],"optional":false},"property":{"type":"Identifier","start":1468,"end":1474,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":1477,"end":1478,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":1480,"end":1590,"body":[{"type":"ExpressionStatement","start":1495,"end":1579,"expression":{"type":"CallExpression","start":1495,"end":1578,"callee":{"type":"MemberExpression","start":1495,"end":1518,"object":{"type":"Identifier","start":1495,"end":1503,"name":"FileUtil"},"property":{"type":"Identifier","start":1504,"end":1518,"name":"replaceContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1519,"end":1529,"name":"outputFile"},{"type":"CallExpression","start":1531,"end":1568,"callee":{"type":"MemberExpression","start":1531,"end":1545,"object":{"type":"Identifier","start":1531,"end":1535,"name":"JSON"},"property":{"type":"Identifier","start":1536,"end":1545,"name":"stringify"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1546,"end":1558,"name":"translations"},{"type":"Literal","start":1560,"end":1564,"value":null,"raw":"null"},{"type":"Literal","start":1566,"end":1567,"value":4,"raw":"4"}],"optional":false},{"type":"Literal","start":1570,"end":1577,"value":"utf-8","raw":"'utf-8'"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":1605,"end":1730,"body":[{"type":"IfStatement","start":1620,"end":1719,"test":{"type":"CallExpression","start":1624,"end":1651,"callee":{"type":"MemberExpression","start":1624,"end":1639,"object":{"type":"Identifier","start":1624,"end":1632,"name":"FileUtil"},"property":{"type":"Identifier","start":1633,"end":1639,"name":"exists"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1640,"end":1650,"name":"outputFile"}],"optional":false},"consequent":{"type":"BlockStatement","start":1653,"end":1719,"body":[{"type":"ExpressionStatement","start":1672,"end":1704,"expression":{"type":"CallExpression","start":1672,"end":1703,"callee":{"type":"MemberExpression","start":1672,"end":1691,"object":{"type":"Identifier","start":1672,"end":1680,"name":"FileUtil"},"property":{"type":"Identifier","start":1681,"end":1691,"name":"deleteFile"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1692,"end":1702,"name":"outputFile"}],"optional":false}}]},"alternate":null}]}}]}}},{"type":"MethodDefinition","start":1867,"end":2288,"static":false,"computed":false,"key":{"type":"Identifier","start":1867,"end":1874,"name":"extract"},"kind":"method","value":{"type":"FunctionExpression","start":1874,"end":2288,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1877,"end":2288,"body":[{"type":"VariableDeclaration","start":1888,"end":1906,"declarations":[{"type":"VariableDeclarator","start":1894,"end":1905,"id":{"type":"Identifier","start":1894,"end":1900,"name":"result"},"init":{"type":"ArrayExpression","start":1903,"end":1905,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":1916,"end":2257,"expression":{"type":"CallExpression","start":1916,"end":2256,"callee":{"type":"MemberExpression","start":1916,"end":1950,"object":{"type":"MemberExpression","start":1916,"end":1933,"object":{"type":"ThisExpression","start":1916,"end":1920},"property":{"type":"Identifier","start":1921,"end":1933,"name":"messagesFile"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1934,"end":1950,"name":"forEachTransUnit"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":1951,"end":2255,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1952,"end":1954,"name":"tu"}],"body":{"type":"BlockStatement","start":1959,"end":2255,"body":[{"type":"VariableDeclaration","start":1974,"end":2018,"declarations":[{"type":"VariableDeclarator","start":1980,"end":2017,"id":{"type":"Identifier","start":1980,"end":1985,"name":"ngxId"},"init":{"type":"CallExpression","start":1988,"end":2017,"callee":{"type":"MemberExpression","start":1988,"end":2013,"object":{"type":"ThisExpression","start":1988,"end":1992},"property":{"type":"Identifier","start":1993,"end":2013,"name":"ngxTranslateIdFromTU"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2014,"end":2016,"name":"tu"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":2032,"end":2244,"test":{"type":"Identifier","start":2036,"end":2041,"name":"ngxId"},"consequent":{"type":"BlockStatement","start":2043,"end":2244,"body":[{"type":"VariableDeclaration","start":2062,"end":2162,"declarations":[{"type":"VariableDeclarator","start":2068,"end":2161,"id":{"type":"Identifier","start":2068,"end":2079,"name":"messagetext"},"init":{"type":"CallExpression","start":2082,"end":2161,"callee":{"type":"MemberExpression","start":2082,"end":2126,"object":{"type":"CallExpression","start":2082,"end":2110,"callee":{"type":"MemberExpression","start":2082,"end":2108,"object":{"type":"Identifier","start":2082,"end":2084,"name":"tu"},"property":{"type":"Identifier","start":2085,"end":2108,"name":"targetContentNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":2111,"end":2126,"name":"asDisplayString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2127,"end":2160,"name":"NORMALIZATION_FORMAT_NGXTRANSLATE"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":2180,"end":2229,"expression":{"type":"CallExpression","start":2180,"end":2228,"callee":{"type":"MemberExpression","start":2180,"end":2191,"object":{"type":"Identifier","start":2180,"end":2186,"name":"result"},"property":{"type":"Identifier","start":2187,"end":2191,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":2192,"end":2227,"properties":[{"type":"Property","start":2194,"end":2203,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2194,"end":2196,"name":"id"},"value":{"type":"Identifier","start":2198,"end":2203,"name":"ngxId"},"kind":"init"},{"type":"Property","start":2205,"end":2225,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2205,"end":2212,"name":"message"},"value":{"type":"Identifier","start":2214,"end":2225,"name":"messagetext"},"kind":"init"}]}],"optional":false}}]},"alternate":null}]}}],"optional":false}},{"type":"ReturnStatement","start":2267,"end":2281,"argument":{"type":"Identifier","start":2274,"end":2280,"name":"result"}}]}}},{"type":"MethodDefinition","start":2674,"end":3125,"static":false,"computed":false,"key":{"type":"Identifier","start":2674,"end":2694,"name":"ngxTranslateIdFromTU"},"kind":"method","value":{"type":"FunctionExpression","start":2694,"end":3125,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2695,"end":2697,"name":"tu"}],"body":{"type":"BlockStatement","start":2699,"end":3125,"body":[{"type":"IfStatement","start":2710,"end":2938,"test":{"type":"CallExpression","start":2714,"end":2743,"callee":{"type":"MemberExpression","start":2714,"end":2736,"object":{"type":"ThisExpression","start":2714,"end":2718},"property":{"type":"Identifier","start":2719,"end":2736,"name":"isExplicitlySetId"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2737,"end":2742,"object":{"type":"Identifier","start":2737,"end":2739,"name":"tu"},"property":{"type":"Identifier","start":2740,"end":2742,"name":"id"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":2745,"end":2938,"body":[{"type":"IfStatement","start":2760,"end":2927,"test":{"type":"CallExpression","start":2764,"end":2813,"callee":{"type":"MemberExpression","start":2764,"end":2806,"object":{"type":"MemberExpression","start":2764,"end":2786,"object":{"type":"ThisExpression","start":2764,"end":2768},"property":{"type":"Identifier","start":2769,"end":2786,"name":"extractionPattern"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2787,"end":2806,"name":"isExplicitIdMatched"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2807,"end":2812,"object":{"type":"Identifier","start":2807,"end":2809,"name":"tu"},"property":{"type":"Identifier","start":2810,"end":2812,"name":"id"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":2815,"end":2862,"body":[{"type":"ReturnStatement","start":2834,"end":2847,"argument":{"type":"MemberExpression","start":2841,"end":2846,"object":{"type":"Identifier","start":2841,"end":2843,"name":"tu"},"property":{"type":"Identifier","start":2844,"end":2846,"name":"id"},"computed":false,"optional":false}}]},"alternate":{"type":"BlockStatement","start":2881,"end":2927,"body":[{"type":"ReturnStatement","start":2900,"end":2912,"argument":{"type":"Literal","start":2907,"end":2911,"value":null,"raw":"null"}}]}}]},"alternate":null},{"type":"VariableDeclaration","start":2948,"end":2985,"declarations":[{"type":"VariableDeclarator","start":2954,"end":2984,"id":{"type":"Identifier","start":2954,"end":2965,"name":"description"},"init":{"type":"CallExpression","start":2968,"end":2984,"callee":{"type":"MemberExpression","start":2968,"end":2982,"object":{"type":"Identifier","start":2968,"end":2970,"name":"tu"},"property":{"type":"Identifier","start":2971,"end":2982,"name":"description"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":2995,"end":3118,"test":{"type":"LogicalExpression","start":2999,"end":3070,"left":{"type":"Identifier","start":2999,"end":3010,"name":"description"},"operator":"&&","right":{"type":"CallExpression","start":3014,"end":3070,"callee":{"type":"MemberExpression","start":3014,"end":3057,"object":{"type":"MemberExpression","start":3014,"end":3036,"object":{"type":"ThisExpression","start":3014,"end":3018},"property":{"type":"Identifier","start":3019,"end":3036,"name":"extractionPattern"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3037,"end":3057,"name":"isDescriptionMatched"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3058,"end":3069,"name":"description"}],"optional":false}},"consequent":{"type":"BlockStatement","start":3072,"end":3118,"body":[{"type":"ReturnStatement","start":3087,"end":3107,"argument":{"type":"CallExpression","start":3094,"end":3106,"callee":{"type":"MemberExpression","start":3094,"end":3104,"object":{"type":"Identifier","start":3094,"end":3096,"name":"tu"},"property":{"type":"Identifier","start":3097,"end":3104,"name":"meaning"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":3383,"end":3643,"static":false,"computed":false,"key":{"type":"Identifier","start":3383,"end":3400,"name":"isExplicitlySetId"},"kind":"method","value":{"type":"FunctionExpression","start":3400,"end":3643,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3401,"end":3403,"name":"id"}],"body":{"type":"BlockStatement","start":3405,"end":3643,"body":[{"type":"IfStatement","start":3416,"end":3482,"test":{"type":"CallExpression","start":3420,"end":3441,"callee":{"type":"Identifier","start":3420,"end":3437,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":3438,"end":3440,"name":"id"}],"optional":false},"consequent":{"type":"BlockStatement","start":3443,"end":3482,"body":[{"type":"ReturnStatement","start":3458,"end":3471,"argument":{"type":"Literal","start":3465,"end":3470,"value":false,"raw":"false"}}]},"alternate":null},{"type":"VariableDeclaration","start":3549,"end":3592,"declarations":[{"type":"VariableDeclarator","start":3555,"end":3591,"id":{"type":"Identifier","start":3555,"end":3571,"name":"reForGeneratedId"},"init":{"type":"Literal","start":3574,"end":3591,"value":{},"raw":"/^[0-9a-f]{11,}$/","regex":{"pattern":"^[0-9a-f]{11,}$","flags":""}}}],"kind":"const"},{"type":"ReturnStatement","start":3602,"end":3636,"argument":{"type":"UnaryExpression","start":3609,"end":3635,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":3610,"end":3635,"callee":{"type":"MemberExpression","start":3610,"end":3631,"object":{"type":"Identifier","start":3610,"end":3626,"name":"reForGeneratedId"},"property":{"type":"Identifier","start":3627,"end":3631,"name":"test"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3632,"end":3634,"name":"id"}],"optional":false}}}]}}},{"type":"MethodDefinition","start":3763,"end":3987,"static":false,"computed":false,"key":{"type":"Identifier","start":3763,"end":3780,"name":"toNgxTranslations"},"kind":"method","value":{"type":"FunctionExpression","start":3780,"end":3987,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3781,"end":3788,"name":"msgList"}],"body":{"type":"BlockStatement","start":3790,"end":3987,"body":[{"type":"VariableDeclaration","start":3801,"end":3830,"declarations":[{"type":"VariableDeclarator","start":3807,"end":3829,"id":{"type":"Identifier","start":3807,"end":3824,"name":"translationObject"},"init":{"type":"ObjectExpression","start":3827,"end":3829,"properties":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":3840,"end":3945,"expression":{"type":"CallExpression","start":3840,"end":3944,"callee":{"type":"MemberExpression","start":3840,"end":3855,"object":{"type":"Identifier","start":3840,"end":3847,"name":"msgList"},"property":{"type":"Identifier","start":3848,"end":3855,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":3856,"end":3943,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3857,"end":3860,"name":"msg"}],"body":{"type":"BlockStatement","start":3865,"end":3943,"body":[{"type":"ExpressionStatement","start":3880,"end":3932,"expression":{"type":"CallExpression","start":3880,"end":3931,"callee":{"type":"MemberExpression","start":3880,"end":3907,"object":{"type":"ThisExpression","start":3880,"end":3884},"property":{"type":"Identifier","start":3885,"end":3907,"name":"putInTranslationObject"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3908,"end":3925,"name":"translationObject"},{"type":"Identifier","start":3927,"end":3930,"name":"msg"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":3955,"end":3980,"argument":{"type":"Identifier","start":3962,"end":3979,"name":"translationObject"}}]}}},{"type":"MethodDefinition","start":4362,"end":5495,"static":false,"computed":false,"key":{"type":"Identifier","start":4362,"end":4384,"name":"putInTranslationObject"},"kind":"method","value":{"type":"FunctionExpression","start":4384,"end":5495,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4385,"end":4402,"name":"translationObject"},{"type":"Identifier","start":4404,"end":4407,"name":"msg"}],"body":{"type":"BlockStatement","start":4409,"end":5495,"body":[{"type":"VariableDeclaration","start":4420,"end":4438,"declarations":[{"type":"VariableDeclarator","start":4424,"end":4437,"id":{"type":"Identifier","start":4424,"end":4437,"name":"firstPartOfId"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":4448,"end":4461,"declarations":[{"type":"VariableDeclarator","start":4452,"end":4460,"id":{"type":"Identifier","start":4452,"end":4460,"name":"restOfId"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":4471,"end":4510,"declarations":[{"type":"VariableDeclarator","start":4477,"end":4509,"id":{"type":"Identifier","start":4477,"end":4487,"name":"indexOfDot"},"init":{"type":"CallExpression","start":4490,"end":4509,"callee":{"type":"MemberExpression","start":4490,"end":4504,"object":{"type":"MemberExpression","start":4490,"end":4496,"object":{"type":"Identifier","start":4490,"end":4493,"name":"msg"},"property":{"type":"Identifier","start":4494,"end":4496,"name":"id"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4497,"end":4504,"name":"indexOf"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4505,"end":4508,"value":".","raw":"'.'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":4520,"end":4663,"test":{"type":"LogicalExpression","start":4524,"end":4578,"left":{"type":"BinaryExpression","start":4524,"end":4540,"left":{"type":"Identifier","start":4524,"end":4534,"name":"indexOfDot"},"operator":"===","right":{"type":"Literal","start":4539,"end":4540,"value":0,"raw":"0"}},"operator":"||","right":{"type":"BinaryExpression","start":4544,"end":4578,"left":{"type":"Identifier","start":4544,"end":4554,"name":"indexOfDot"},"operator":"===","right":{"type":"BinaryExpression","start":4560,"end":4577,"left":{"type":"MemberExpression","start":4560,"end":4573,"object":{"type":"MemberExpression","start":4560,"end":4566,"object":{"type":"Identifier","start":4560,"end":4563,"name":"msg"},"property":{"type":"Identifier","start":4564,"end":4566,"name":"id"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4567,"end":4573,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":4576,"end":4577,"value":1,"raw":"1"}}}},"consequent":{"type":"BlockStatement","start":4580,"end":4663,"body":[{"type":"ThrowStatement","start":4595,"end":4652,"argument":{"type":"NewExpression","start":4601,"end":4651,"callee":{"type":"Identifier","start":4605,"end":4610,"name":"Error"},"arguments":[{"type":"BinaryExpression","start":4611,"end":4650,"left":{"type":"BinaryExpression","start":4611,"end":4644,"left":{"type":"Literal","start":4611,"end":4635,"value":"bad nxg-translate id \"","raw":"'bad nxg-translate id \"'"},"operator":"+","right":{"type":"MemberExpression","start":4638,"end":4644,"object":{"type":"Identifier","start":4638,"end":4641,"name":"msg"},"property":{"type":"Identifier","start":4642,"end":4644,"name":"id"},"computed":false,"optional":false}},"operator":"+","right":{"type":"Literal","start":4647,"end":4650,"value":"\"","raw":"'\"'"}}]}}]},"alternate":null},{"type":"IfStatement","start":4673,"end":4917,"test":{"type":"BinaryExpression","start":4677,"end":4691,"left":{"type":"Identifier","start":4677,"end":4687,"name":"indexOfDot"},"operator":"<","right":{"type":"Literal","start":4690,"end":4691,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":4693,"end":4770,"body":[{"type":"ExpressionStatement","start":4708,"end":4731,"expression":{"type":"AssignmentExpression","start":4708,"end":4730,"operator":"=","left":{"type":"Identifier","start":4708,"end":4721,"name":"firstPartOfId"},"right":{"type":"MemberExpression","start":4724,"end":4730,"object":{"type":"Identifier","start":4724,"end":4727,"name":"msg"},"property":{"type":"Identifier","start":4728,"end":4730,"name":"id"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":4745,"end":4759,"expression":{"type":"AssignmentExpression","start":4745,"end":4758,"operator":"=","left":{"type":"Identifier","start":4745,"end":4753,"name":"restOfId"},"right":{"type":"Literal","start":4756,"end":4758,"value":"","raw":"''"}}}]},"alternate":{"type":"BlockStatement","start":4785,"end":4917,"body":[{"type":"ExpressionStatement","start":4800,"end":4848,"expression":{"type":"AssignmentExpression","start":4800,"end":4847,"operator":"=","left":{"type":"Identifier","start":4800,"end":4813,"name":"firstPartOfId"},"right":{"type":"CallExpression","start":4816,"end":4847,"callee":{"type":"MemberExpression","start":4816,"end":4832,"object":{"type":"MemberExpression","start":4816,"end":4822,"object":{"type":"Identifier","start":4816,"end":4819,"name":"msg"},"property":{"type":"Identifier","start":4820,"end":4822,"name":"id"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4823,"end":4832,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4833,"end":4834,"value":0,"raw":"0"},{"type":"Identifier","start":4836,"end":4846,"name":"indexOfDot"}],"optional":false}}},{"type":"ExpressionStatement","start":4862,"end":4906,"expression":{"type":"AssignmentExpression","start":4862,"end":4905,"operator":"=","left":{"type":"Identifier","start":4862,"end":4870,"name":"restOfId"},"right":{"type":"CallExpression","start":4873,"end":4905,"callee":{"type":"MemberExpression","start":4873,"end":4889,"object":{"type":"MemberExpression","start":4873,"end":4879,"object":{"type":"Identifier","start":4873,"end":4876,"name":"msg"},"property":{"type":"Identifier","start":4877,"end":4879,"name":"id"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4880,"end":4889,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":4890,"end":4904,"left":{"type":"Identifier","start":4890,"end":4900,"name":"indexOfDot"},"operator":"+","right":{"type":"Literal","start":4903,"end":4904,"value":1,"raw":"1"}}],"optional":false}}}]}},{"type":"VariableDeclaration","start":4927,"end":4973,"declarations":[{"type":"VariableDeclarator","start":4931,"end":4972,"id":{"type":"Identifier","start":4931,"end":4937,"name":"object"},"init":{"type":"MemberExpression","start":4940,"end":4972,"object":{"type":"Identifier","start":4940,"end":4957,"name":"translationObject"},"property":{"type":"Identifier","start":4958,"end":4971,"name":"firstPartOfId"},"computed":true,"optional":false}}],"kind":"let"},{"type":"IfStatement","start":4983,"end":5402,"test":{"type":"CallExpression","start":4987,"end":5012,"callee":{"type":"Identifier","start":4987,"end":5004,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":5005,"end":5011,"name":"object"}],"optional":false},"consequent":{"type":"BlockStatement","start":5014,"end":5249,"body":[{"type":"IfStatement","start":5029,"end":5156,"test":{"type":"BinaryExpression","start":5033,"end":5048,"left":{"type":"Identifier","start":5033,"end":5041,"name":"restOfId"},"operator":"===","right":{"type":"Literal","start":5046,"end":5048,"value":"","raw":"''"}},"consequent":{"type":"BlockStatement","start":5050,"end":5156,"body":[{"type":"ExpressionStatement","start":5069,"end":5116,"expression":{"type":"AssignmentExpression","start":5069,"end":5115,"operator":"=","left":{"type":"MemberExpression","start":5069,"end":5101,"object":{"type":"Identifier","start":5069,"end":5086,"name":"translationObject"},"property":{"type":"Identifier","start":5087,"end":5100,"name":"firstPartOfId"},"computed":true,"optional":false},"right":{"type":"MemberExpression","start":5104,"end":5115,"object":{"type":"Identifier","start":5104,"end":5107,"name":"msg"},"property":{"type":"Identifier","start":5108,"end":5115,"name":"message"},"computed":false,"optional":false}}},{"type":"ReturnStatement","start":5134,"end":5141,"argument":null}]},"alternate":null},{"type":"ExpressionStatement","start":5170,"end":5182,"expression":{"type":"AssignmentExpression","start":5170,"end":5181,"operator":"=","left":{"type":"Identifier","start":5170,"end":5176,"name":"object"},"right":{"type":"ObjectExpression","start":5179,"end":5181,"properties":[]}}},{"type":"ExpressionStatement","start":5196,"end":5238,"expression":{"type":"AssignmentExpression","start":5196,"end":5237,"operator":"=","left":{"type":"MemberExpression","start":5196,"end":5228,"object":{"type":"Identifier","start":5196,"end":5213,"name":"translationObject"},"property":{"type":"Identifier","start":5214,"end":5227,"name":"firstPartOfId"},"computed":true,"optional":false},"right":{"type":"Identifier","start":5231,"end":5237,"name":"object"}}}]},"alternate":{"type":"BlockStatement","start":5264,"end":5402,"body":[{"type":"IfStatement","start":5279,"end":5391,"test":{"type":"BinaryExpression","start":5283,"end":5298,"left":{"type":"Identifier","start":5283,"end":5291,"name":"restOfId"},"operator":"===","right":{"type":"Literal","start":5296,"end":5298,"value":"","raw":"''"}},"consequent":{"type":"BlockStatement","start":5300,"end":5391,"body":[{"type":"ThrowStatement","start":5319,"end":5376,"argument":{"type":"NewExpression","start":5325,"end":5375,"callee":{"type":"Identifier","start":5329,"end":5334,"name":"Error"},"arguments":[{"type":"BinaryExpression","start":5335,"end":5374,"left":{"type":"BinaryExpression","start":5335,"end":5368,"left":{"type":"Literal","start":5335,"end":5359,"value":"duplicate id praefix \"","raw":"'duplicate id praefix \"'"},"operator":"+","right":{"type":"MemberExpression","start":5362,"end":5368,"object":{"type":"Identifier","start":5362,"end":5365,"name":"msg"},"property":{"type":"Identifier","start":5366,"end":5368,"name":"id"},"computed":false,"optional":false}},"operator":"+","right":{"type":"Literal","start":5371,"end":5374,"value":"\"","raw":"'\"'"}}]}}]},"alternate":null}]}},{"type":"ExpressionStatement","start":5412,"end":5488,"expression":{"type":"CallExpression","start":5412,"end":5487,"callee":{"type":"MemberExpression","start":5412,"end":5439,"object":{"type":"ThisExpression","start":5412,"end":5416},"property":{"type":"Identifier","start":5417,"end":5439,"name":"putInTranslationObject"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5440,"end":5446,"name":"object"},{"type":"ObjectExpression","start":5448,"end":5486,"properties":[{"type":"Property","start":5450,"end":5462,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":5450,"end":5452,"name":"id"},"value":{"type":"Identifier","start":5454,"end":5462,"name":"restOfId"},"kind":"init"},{"type":"Property","start":5464,"end":5484,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":5464,"end":5471,"name":"message"},"value":{"type":"MemberExpression","start":5473,"end":5484,"object":{"type":"Identifier","start":5473,"end":5476,"name":"msg"},"property":{"type":"Identifier","start":5477,"end":5484,"name":"message"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":5500,"end":5568,"expression":{"type":"AssignmentExpression","start":5500,"end":5567,"operator":"=","left":{"type":"MemberExpression","start":5500,"end":5546,"object":{"type":"Identifier","start":5500,"end":5521,"name":"NgxTranslateExtractor"},"property":{"type":"Identifier","start":5522,"end":5546,"name":"DefaultExtractionPattern"},"computed":false,"optional":false},"right":{"type":"Literal","start":5549,"end":5567,"value":"@@|ngx-translate","raw":"'@@|ngx-translate'"}}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":5570,"end":19800}]},"code":"import { NORMALIZATION_FORMAT_NGXTRANSLATE } from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport { FileUtil } from '../common/file-util';\r\nimport { isNullOrUndefined } from '../common/util';\r\nimport { NgxTranslateExtractionPattern } from './ngx-translate-extraction-pattern';\r\nexport class NgxTranslateExtractor {\r\n    constructor(messagesFile, extractionPatternString) {\r\n        this.messagesFile = messagesFile;\r\n        this.extractionPattern = new NgxTranslateExtractionPattern(extractionPatternString);\r\n    }\r\n    /**\r\n     * Check, wether extractionPattern has valid syntax.\r\n     * @param extractionPatternString extractionPatternString\r\n     * @return null, if pattern is ok, string describing the error, if it is not ok.\r\n     */\r\n    static checkPattern(extractionPatternString) {\r\n        try {\r\n            if (new NgxTranslateExtractionPattern(extractionPatternString)) {\r\n                return null;\r\n            }\r\n        }\r\n        catch (error) {\r\n            return error.message;\r\n        }\r\n        return null;\r\n    }\r\n    static extract(messagesFile, extractionPattern, outputFile) {\r\n        new NgxTranslateExtractor(messagesFile, extractionPattern).extractTo(outputFile);\r\n    }\r\n    /**\r\n     * Extact messages and write them to a file.\r\n     * @param outputFile outputFile\r\n     */\r\n    extractTo(outputFile) {\r\n        const translations = this.toNgxTranslations(this.extract());\r\n        if (translations && Object.keys(translations).length > 0) {\r\n            FileUtil.replaceContent(outputFile, JSON.stringify(translations, null, 4), 'utf-8');\r\n        }\r\n        else {\r\n            if (FileUtil.exists(outputFile)) {\r\n                FileUtil.deleteFile(outputFile);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     *  Extract messages and convert them to ngx translations.\r\n     *  @return the translation objects.\r\n     */\r\n    extract() {\r\n        const result = [];\r\n        this.messagesFile.forEachTransUnit((tu) => {\r\n            const ngxId = this.ngxTranslateIdFromTU(tu);\r\n            if (ngxId) {\r\n                const messagetext = tu.targetContentNormalized().asDisplayString(NORMALIZATION_FORMAT_NGXTRANSLATE);\r\n                result.push({ id: ngxId, message: messagetext });\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    /**\r\n     * Check, wether this tu should be extracted for ngx-translate usage, and return its id for ngx-translate.\r\n     * There are 2 possibilities:\r\n     * 1. description is set to \"ngx-translate\" and meaning contains the id.\r\n     * 2. id is explicitly set to a string.\r\n     * @param tu tu\r\n     * @return an ngx id or null, if this tu should not be extracted.\r\n     */\r\n    ngxTranslateIdFromTU(tu) {\r\n        if (this.isExplicitlySetId(tu.id)) {\r\n            if (this.extractionPattern.isExplicitIdMatched(tu.id)) {\r\n                return tu.id;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        const description = tu.description();\r\n        if (description && this.extractionPattern.isDescriptionMatched(description)) {\r\n            return tu.meaning();\r\n        }\r\n    }\r\n    /**\r\n     * Test, wether ID was explicitly set (via i18n=\"@myid).\r\n     * Just heuristic, an ID is explicitly, if it does not look like a generated one.\r\n     * @param id id\r\n     * @return wether ID was explicitly set (via i18n=\"@myid).\r\n     */\r\n    isExplicitlySetId(id) {\r\n        if (isNullOrUndefined(id)) {\r\n            return false;\r\n        }\r\n        // generated IDs are either decimal or sha1 hex\r\n        const reForGeneratedId = /^[0-9a-f]{11,}$/;\r\n        return !reForGeneratedId.test(id);\r\n    }\r\n    /**\r\n     * Convert list of relevant TUs to ngx translations object.\r\n     * @param msgList msgList\r\n     */\r\n    toNgxTranslations(msgList) {\r\n        const translationObject = {};\r\n        msgList.forEach((msg) => {\r\n            this.putInTranslationObject(translationObject, msg);\r\n        });\r\n        return translationObject;\r\n    }\r\n    /**\r\n     * Put a new messages into the translation data object.\r\n     * If you add, e.g. \"{id: 'myapp.example', message: 'test'}\",\r\n     * the translation object will then contain an object myapp that has property example:\r\n     * {myapp: {\r\n     *   example: 'test'\r\n     *   }}\r\n     * @param translationObject translationObject\r\n     * @param msg msg\r\n     */\r\n    putInTranslationObject(translationObject, msg) {\r\n        let firstPartOfId;\r\n        let restOfId;\r\n        const indexOfDot = msg.id.indexOf('.');\r\n        if (indexOfDot === 0 || indexOfDot === (msg.id.length - 1)) {\r\n            throw new Error('bad nxg-translate id \"' + msg.id + '\"');\r\n        }\r\n        if (indexOfDot < 0) {\r\n            firstPartOfId = msg.id;\r\n            restOfId = '';\r\n        }\r\n        else {\r\n            firstPartOfId = msg.id.substring(0, indexOfDot);\r\n            restOfId = msg.id.substring(indexOfDot + 1);\r\n        }\r\n        let object = translationObject[firstPartOfId];\r\n        if (isNullOrUndefined(object)) {\r\n            if (restOfId === '') {\r\n                translationObject[firstPartOfId] = msg.message;\r\n                return;\r\n            }\r\n            object = {};\r\n            translationObject[firstPartOfId] = object;\r\n        }\r\n        else {\r\n            if (restOfId === '') {\r\n                throw new Error('duplicate id praefix \"' + msg.id + '\"');\r\n            }\r\n        }\r\n        this.putInTranslationObject(object, { id: restOfId, message: msg.message });\r\n    }\r\n}\r\nNgxTranslateExtractor.DefaultExtractionPattern = '@@|ngx-translate';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRyYW5zbGF0ZS1leHRyYWN0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy94bGlmZm1lcmdlL3NyYy94bGlmZm1lcmdlL25neC10cmFuc2xhdGUtZXh0cmFjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBdUMsaUNBQWlDLEVBQUMsTUFBTSxzQ0FBc0MsQ0FBQztBQUM3SCxPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDN0MsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDakQsT0FBTyxFQUFDLDZCQUE2QixFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUF3QmpGLE1BQU0sT0FBTyxxQkFBcUI7SUF5QjlCLFlBQW9CLFlBQXNDLEVBQUUsdUJBQStCO1FBQXZFLGlCQUFZLEdBQVosWUFBWSxDQUEwQjtRQUN0RCxJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSw2QkFBNkIsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0lBQ3hGLENBQUM7SUF0QkQ7Ozs7T0FJRztJQUNJLE1BQU0sQ0FBQyxZQUFZLENBQUMsdUJBQStCO1FBQ3RELElBQUk7WUFDRixJQUFJLElBQUksNkJBQTZCLENBQUMsdUJBQXVCLENBQUMsRUFBRTtnQkFDNUQsT0FBTyxJQUFJLENBQUM7YUFDZjtTQUNGO1FBQUMsT0FBTyxLQUFLLEVBQUU7WUFDWixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUM7U0FDeEI7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRU0sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFzQyxFQUFFLGlCQUF5QixFQUFFLFVBQWtCO1FBQ3ZHLElBQUkscUJBQXFCLENBQUMsWUFBWSxFQUFFLGlCQUFpQixDQUFDLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3JGLENBQUM7SUFNRDs7O09BR0c7SUFDSSxTQUFTLENBQUMsVUFBa0I7UUFDL0IsTUFBTSxZQUFZLEdBQW9CLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztRQUM3RSxJQUFJLFlBQVksSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDdEQsUUFBUSxDQUFDLGNBQWMsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1NBQ3ZGO2FBQU07WUFDSCxJQUFJLFFBQVEsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUU7Z0JBQzdCLFFBQVEsQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7YUFDbkM7U0FDSjtJQUNMLENBQUM7SUFFRDs7O09BR0c7SUFDSyxPQUFPO1FBQ1gsTUFBTSxNQUFNLEdBQWlCLEVBQUUsQ0FBQztRQUNoQyxJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLENBQUMsRUFBYyxFQUFFLEVBQUU7WUFDbEQsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQzVDLElBQUksS0FBSyxFQUFFO2dCQUNQLE1BQU0sV0FBVyxHQUFHLEVBQUUsQ0FBQyx1QkFBdUIsRUFBRSxDQUFDLGVBQWUsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO2dCQUNwRyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUMsRUFBRSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsV0FBVyxFQUFDLENBQUMsQ0FBQzthQUNsRDtRQUNMLENBQUMsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUVEOzs7Ozs7O09BT0c7SUFDSyxvQkFBb0IsQ0FBQyxFQUFjO1FBQ3ZDLElBQUksSUFBSSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtZQUMvQixJQUFJLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxtQkFBbUIsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7Z0JBQ25ELE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQzthQUNoQjtpQkFBTTtnQkFDSCxPQUFPLElBQUksQ0FBQzthQUNmO1NBQ0o7UUFDRCxNQUFNLFdBQVcsR0FBRyxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDckMsSUFBSSxXQUFXLElBQUksSUFBSSxDQUFDLGlCQUFpQixDQUFDLG9CQUFvQixDQUFDLFdBQVcsQ0FBQyxFQUFFO1lBQ3pFLE9BQU8sRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQ3ZCO0lBQ0wsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0ssaUJBQWlCLENBQUMsRUFBVTtRQUNoQyxJQUFJLGlCQUFpQixDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQ3ZCLE9BQU8sS0FBSyxDQUFDO1NBQ2hCO1FBQ0QsK0NBQStDO1FBQy9DLE1BQU0sZ0JBQWdCLEdBQUcsaUJBQWlCLENBQUM7UUFDM0MsT0FBTyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ssaUJBQWlCLENBQUMsT0FBcUI7UUFDM0MsTUFBTSxpQkFBaUIsR0FBb0IsRUFBRSxDQUFDO1FBQzlDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFlLEVBQUUsRUFBRTtZQUNoQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsaUJBQWlCLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDeEQsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLGlCQUFpQixDQUFDO0lBQzdCLENBQUM7SUFFRDs7Ozs7Ozs7O09BU0c7SUFDSyxzQkFBc0IsQ0FBQyxpQkFBa0MsRUFBRSxHQUFlO1FBQzlFLElBQUksYUFBcUIsQ0FBQztRQUMxQixJQUFJLFFBQWdCLENBQUM7UUFDckIsTUFBTSxVQUFVLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdkMsSUFBSSxVQUFVLEtBQUssQ0FBQyxJQUFJLFVBQVUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxFQUFFO1lBQ3hELE1BQU0sSUFBSSxLQUFLLENBQUMsd0JBQXdCLEdBQUcsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLENBQUMsQ0FBQztTQUM1RDtRQUNELElBQUksVUFBVSxHQUFHLENBQUMsRUFBRTtZQUNoQixhQUFhLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQztZQUN2QixRQUFRLEdBQUcsRUFBRSxDQUFDO1NBQ2pCO2FBQU07WUFDSCxhQUFhLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1lBQ2hELFFBQVEsR0FBRyxHQUFHLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDL0M7UUFDRCxJQUFJLE1BQU0sR0FBRyxpQkFBaUIsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUM5QyxJQUFJLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQzNCLElBQUksUUFBUSxLQUFLLEVBQUUsRUFBRTtnQkFDakIsaUJBQWlCLENBQUMsYUFBYSxDQUFDLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQztnQkFDL0MsT0FBTzthQUNWO1lBQ0QsTUFBTSxHQUFHLEVBQUUsQ0FBQztZQUNaLGlCQUFpQixDQUFDLGFBQWEsQ0FBQyxHQUFHLE1BQU0sQ0FBQztTQUM3QzthQUFNO1lBQ0gsSUFBSSxRQUFRLEtBQUssRUFBRSxFQUFFO2dCQUNqQixNQUFNLElBQUksS0FBSyxDQUFDLHdCQUF3QixHQUFHLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDLENBQUM7YUFDNUQ7U0FDSjtRQUNELElBQUksQ0FBQyxzQkFBc0IsQ0FBbUIsTUFBTSxFQUFFLEVBQUMsRUFBRSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsR0FBRyxDQUFDLE9BQU8sRUFBQyxDQUFDLENBQUM7SUFDaEcsQ0FBQzs7QUFqSmEsOENBQXdCLEdBQUcsa0JBQWtCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0lUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSwgSVRyYW5zVW5pdCwgTk9STUFMSVpBVElPTl9GT1JNQVRfTkdYVFJBTlNMQVRFfSBmcm9tICdAbmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWInO1xyXG5pbXBvcnQge0ZpbGVVdGlsfSBmcm9tICcuLi9jb21tb24vZmlsZS11dGlsJztcclxuaW1wb3J0IHtpc051bGxPclVuZGVmaW5lZH0gZnJvbSAnLi4vY29tbW9uL3V0aWwnO1xyXG5pbXBvcnQge05neFRyYW5zbGF0ZUV4dHJhY3Rpb25QYXR0ZXJufSBmcm9tICcuL25neC10cmFuc2xhdGUtZXh0cmFjdGlvbi1wYXR0ZXJuJztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgcm9vYm0gb24gMTUuMDMuMjAxNy5cclxuICogQSB0b29sIGZvciBleHRyYWN0aW5nIG1lc3NhZ2VzIGluIG5neC10cmFuc2xhdGUgZm9ybWF0LlxyXG4gKiBHZW5lcmF0ZXMgYSBqc29uLWZpbGUgdG8gYmUgdXNlZCB3aXRoIG5neC10cmFuc2xhdGUuXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIFRoZSBpbnRlcmZhY2UgdXNlZCBmb3IgdHJhbnNsYXRpb25zIGluIG5neC10cmFuc2xhdGUuXHJcbiAqIEEgaGFzaCB0aGF0IGNvbnRhaW5zIGVpdGhlciB0aGUgdHJhbnNsYXRpb24gb3IgYW5vdGhlciBoYXNoLlxyXG4gKi9cclxuaW50ZXJmYWNlIE5neFRyYW5zbGF0aW9ucyB7XHJcbiAgICBbaWQ6IHN0cmluZ106IE5neFRyYW5zbGF0aW9ucyB8IHN0cmluZztcclxufVxyXG5cclxuLyoqXHJcbiAqIGludGVybmFsLFxyXG4gKiBhIG1lc3NhZ2Ugd2l0aCBpZCAoYSBkb3Qtc2VwYXJhdGVkIHN0cmluZykuXHJcbiAqL1xyXG5pbnRlcmZhY2UgTmd4TWVzc2FnZSB7XHJcbiAgICBpZDogc3RyaW5nOyAvLyBkb3Qgc2VwYXJhdGVkIG5hbWUsIGUuZy4gXCJteWFwcC5zZXJ2aWNlMS5tZXNzYWdlMVwiXHJcbiAgICBtZXNzYWdlOiBzdHJpbmc7IC8vIHRoZSBtZXNzYWdlLCBwbGFjZWhvbGRlciBhcmUgaW4ge3tufX0gc3ludGF4LCBlLmcuIFwiYSB0ZXN0IHdpdGggdmFsdWU6IHt7MH19XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBOZ3hUcmFuc2xhdGVFeHRyYWN0b3Ige1xyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgRGVmYXVsdEV4dHJhY3Rpb25QYXR0ZXJuID0gJ0BAfG5neC10cmFuc2xhdGUnO1xyXG4gICAgcHJpdmF0ZSBleHRyYWN0aW9uUGF0dGVybjogTmd4VHJhbnNsYXRlRXh0cmFjdGlvblBhdHRlcm47XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVjaywgd2V0aGVyIGV4dHJhY3Rpb25QYXR0ZXJuIGhhcyB2YWxpZCBzeW50YXguXHJcbiAgICAgKiBAcGFyYW0gZXh0cmFjdGlvblBhdHRlcm5TdHJpbmcgZXh0cmFjdGlvblBhdHRlcm5TdHJpbmdcclxuICAgICAqIEByZXR1cm4gbnVsbCwgaWYgcGF0dGVybiBpcyBvaywgc3RyaW5nIGRlc2NyaWJpbmcgdGhlIGVycm9yLCBpZiBpdCBpcyBub3Qgb2suXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgY2hlY2tQYXR0ZXJuKGV4dHJhY3Rpb25QYXR0ZXJuU3RyaW5nOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICBpZiAobmV3IE5neFRyYW5zbGF0ZUV4dHJhY3Rpb25QYXR0ZXJuKGV4dHJhY3Rpb25QYXR0ZXJuU3RyaW5nKSkge1xyXG4gICAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBlcnJvci5tZXNzYWdlO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGV4dHJhY3QobWVzc2FnZXNGaWxlOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUsIGV4dHJhY3Rpb25QYXR0ZXJuOiBzdHJpbmcsIG91dHB1dEZpbGU6IHN0cmluZykge1xyXG4gICAgICAgIG5ldyBOZ3hUcmFuc2xhdGVFeHRyYWN0b3IobWVzc2FnZXNGaWxlLCBleHRyYWN0aW9uUGF0dGVybikuZXh0cmFjdFRvKG91dHB1dEZpbGUpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbWVzc2FnZXNGaWxlOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUsIGV4dHJhY3Rpb25QYXR0ZXJuU3RyaW5nOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLmV4dHJhY3Rpb25QYXR0ZXJuID0gbmV3IE5neFRyYW5zbGF0ZUV4dHJhY3Rpb25QYXR0ZXJuKGV4dHJhY3Rpb25QYXR0ZXJuU3RyaW5nKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEV4dGFjdCBtZXNzYWdlcyBhbmQgd3JpdGUgdGhlbSB0byBhIGZpbGUuXHJcbiAgICAgKiBAcGFyYW0gb3V0cHV0RmlsZSBvdXRwdXRGaWxlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBleHRyYWN0VG8ob3V0cHV0RmlsZTogc3RyaW5nKSB7XHJcbiAgICAgICAgY29uc3QgdHJhbnNsYXRpb25zOiBOZ3hUcmFuc2xhdGlvbnMgPSB0aGlzLnRvTmd4VHJhbnNsYXRpb25zKHRoaXMuZXh0cmFjdCgpKTtcclxuICAgICAgICBpZiAodHJhbnNsYXRpb25zICYmIE9iamVjdC5rZXlzKHRyYW5zbGF0aW9ucykubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBGaWxlVXRpbC5yZXBsYWNlQ29udGVudChvdXRwdXRGaWxlLCBKU09OLnN0cmluZ2lmeSh0cmFuc2xhdGlvbnMsIG51bGwsIDQpLCAndXRmLTgnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAoRmlsZVV0aWwuZXhpc3RzKG91dHB1dEZpbGUpKSB7XHJcbiAgICAgICAgICAgICAgICBGaWxlVXRpbC5kZWxldGVGaWxlKG91dHB1dEZpbGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogIEV4dHJhY3QgbWVzc2FnZXMgYW5kIGNvbnZlcnQgdGhlbSB0byBuZ3ggdHJhbnNsYXRpb25zLlxyXG4gICAgICogIEByZXR1cm4gdGhlIHRyYW5zbGF0aW9uIG9iamVjdHMuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZXh0cmFjdCgpOiBOZ3hNZXNzYWdlW10ge1xyXG4gICAgICAgIGNvbnN0IHJlc3VsdDogTmd4TWVzc2FnZVtdID0gW107XHJcbiAgICAgICAgdGhpcy5tZXNzYWdlc0ZpbGUuZm9yRWFjaFRyYW5zVW5pdCgodHU6IElUcmFuc1VuaXQpID0+IHtcclxuICAgICAgICAgICAgY29uc3Qgbmd4SWQgPSB0aGlzLm5neFRyYW5zbGF0ZUlkRnJvbVRVKHR1KTtcclxuICAgICAgICAgICAgaWYgKG5neElkKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdldGV4dCA9IHR1LnRhcmdldENvbnRlbnROb3JtYWxpemVkKCkuYXNEaXNwbGF5U3RyaW5nKE5PUk1BTElaQVRJT05fRk9STUFUX05HWFRSQU5TTEFURSk7XHJcbiAgICAgICAgICAgICAgICByZXN1bHQucHVzaCh7aWQ6IG5neElkLCBtZXNzYWdlOiBtZXNzYWdldGV4dH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENoZWNrLCB3ZXRoZXIgdGhpcyB0dSBzaG91bGQgYmUgZXh0cmFjdGVkIGZvciBuZ3gtdHJhbnNsYXRlIHVzYWdlLCBhbmQgcmV0dXJuIGl0cyBpZCBmb3Igbmd4LXRyYW5zbGF0ZS5cclxuICAgICAqIFRoZXJlIGFyZSAyIHBvc3NpYmlsaXRpZXM6XHJcbiAgICAgKiAxLiBkZXNjcmlwdGlvbiBpcyBzZXQgdG8gXCJuZ3gtdHJhbnNsYXRlXCIgYW5kIG1lYW5pbmcgY29udGFpbnMgdGhlIGlkLlxyXG4gICAgICogMi4gaWQgaXMgZXhwbGljaXRseSBzZXQgdG8gYSBzdHJpbmcuXHJcbiAgICAgKiBAcGFyYW0gdHUgdHVcclxuICAgICAqIEByZXR1cm4gYW4gbmd4IGlkIG9yIG51bGwsIGlmIHRoaXMgdHUgc2hvdWxkIG5vdCBiZSBleHRyYWN0ZWQuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgbmd4VHJhbnNsYXRlSWRGcm9tVFUodHU6IElUcmFuc1VuaXQpOiBzdHJpbmcge1xyXG4gICAgICAgIGlmICh0aGlzLmlzRXhwbGljaXRseVNldElkKHR1LmlkKSkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5leHRyYWN0aW9uUGF0dGVybi5pc0V4cGxpY2l0SWRNYXRjaGVkKHR1LmlkKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHR1LmlkO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgZGVzY3JpcHRpb24gPSB0dS5kZXNjcmlwdGlvbigpO1xyXG4gICAgICAgIGlmIChkZXNjcmlwdGlvbiAmJiB0aGlzLmV4dHJhY3Rpb25QYXR0ZXJuLmlzRGVzY3JpcHRpb25NYXRjaGVkKGRlc2NyaXB0aW9uKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdHUubWVhbmluZygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3QsIHdldGhlciBJRCB3YXMgZXhwbGljaXRseSBzZXQgKHZpYSBpMThuPVwiQG15aWQpLlxyXG4gICAgICogSnVzdCBoZXVyaXN0aWMsIGFuIElEIGlzIGV4cGxpY2l0bHksIGlmIGl0IGRvZXMgbm90IGxvb2sgbGlrZSBhIGdlbmVyYXRlZCBvbmUuXHJcbiAgICAgKiBAcGFyYW0gaWQgaWRcclxuICAgICAqIEByZXR1cm4gd2V0aGVyIElEIHdhcyBleHBsaWNpdGx5IHNldCAodmlhIGkxOG49XCJAbXlpZCkuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgaXNFeHBsaWNpdGx5U2V0SWQoaWQ6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGlmIChpc051bGxPclVuZGVmaW5lZChpZCkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBnZW5lcmF0ZWQgSURzIGFyZSBlaXRoZXIgZGVjaW1hbCBvciBzaGExIGhleFxyXG4gICAgICAgIGNvbnN0IHJlRm9yR2VuZXJhdGVkSWQgPSAvXlswLTlhLWZdezExLH0kLztcclxuICAgICAgICByZXR1cm4gIXJlRm9yR2VuZXJhdGVkSWQudGVzdChpZCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDb252ZXJ0IGxpc3Qgb2YgcmVsZXZhbnQgVFVzIHRvIG5neCB0cmFuc2xhdGlvbnMgb2JqZWN0LlxyXG4gICAgICogQHBhcmFtIG1zZ0xpc3QgbXNnTGlzdFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHRvTmd4VHJhbnNsYXRpb25zKG1zZ0xpc3Q6IE5neE1lc3NhZ2VbXSk6IE5neFRyYW5zbGF0aW9ucyB7XHJcbiAgICAgICAgY29uc3QgdHJhbnNsYXRpb25PYmplY3Q6IE5neFRyYW5zbGF0aW9ucyA9IHt9O1xyXG4gICAgICAgIG1zZ0xpc3QuZm9yRWFjaCgobXNnOiBOZ3hNZXNzYWdlKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMucHV0SW5UcmFuc2xhdGlvbk9iamVjdCh0cmFuc2xhdGlvbk9iamVjdCwgbXNnKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gdHJhbnNsYXRpb25PYmplY3Q7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBQdXQgYSBuZXcgbWVzc2FnZXMgaW50byB0aGUgdHJhbnNsYXRpb24gZGF0YSBvYmplY3QuXHJcbiAgICAgKiBJZiB5b3UgYWRkLCBlLmcuIFwie2lkOiAnbXlhcHAuZXhhbXBsZScsIG1lc3NhZ2U6ICd0ZXN0J31cIixcclxuICAgICAqIHRoZSB0cmFuc2xhdGlvbiBvYmplY3Qgd2lsbCB0aGVuIGNvbnRhaW4gYW4gb2JqZWN0IG15YXBwIHRoYXQgaGFzIHByb3BlcnR5IGV4YW1wbGU6XHJcbiAgICAgKiB7bXlhcHA6IHtcclxuICAgICAqICAgZXhhbXBsZTogJ3Rlc3QnXHJcbiAgICAgKiAgIH19XHJcbiAgICAgKiBAcGFyYW0gdHJhbnNsYXRpb25PYmplY3QgdHJhbnNsYXRpb25PYmplY3RcclxuICAgICAqIEBwYXJhbSBtc2cgbXNnXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgcHV0SW5UcmFuc2xhdGlvbk9iamVjdCh0cmFuc2xhdGlvbk9iamVjdDogTmd4VHJhbnNsYXRpb25zLCBtc2c6IE5neE1lc3NhZ2UpIHtcclxuICAgICAgICBsZXQgZmlyc3RQYXJ0T2ZJZDogc3RyaW5nO1xyXG4gICAgICAgIGxldCByZXN0T2ZJZDogc3RyaW5nO1xyXG4gICAgICAgIGNvbnN0IGluZGV4T2ZEb3QgPSBtc2cuaWQuaW5kZXhPZignLicpO1xyXG4gICAgICAgIGlmIChpbmRleE9mRG90ID09PSAwIHx8IGluZGV4T2ZEb3QgPT09IChtc2cuaWQubGVuZ3RoIC0gMSkpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdiYWQgbnhnLXRyYW5zbGF0ZSBpZCBcIicgKyBtc2cuaWQgKyAnXCInKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGluZGV4T2ZEb3QgPCAwKSB7XHJcbiAgICAgICAgICAgIGZpcnN0UGFydE9mSWQgPSBtc2cuaWQ7XHJcbiAgICAgICAgICAgIHJlc3RPZklkID0gJyc7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZmlyc3RQYXJ0T2ZJZCA9IG1zZy5pZC5zdWJzdHJpbmcoMCwgaW5kZXhPZkRvdCk7XHJcbiAgICAgICAgICAgIHJlc3RPZklkID0gbXNnLmlkLnN1YnN0cmluZyhpbmRleE9mRG90ICsgMSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBvYmplY3QgPSB0cmFuc2xhdGlvbk9iamVjdFtmaXJzdFBhcnRPZklkXTtcclxuICAgICAgICBpZiAoaXNOdWxsT3JVbmRlZmluZWQob2JqZWN0KSkge1xyXG4gICAgICAgICAgICBpZiAocmVzdE9mSWQgPT09ICcnKSB7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbk9iamVjdFtmaXJzdFBhcnRPZklkXSA9IG1zZy5tZXNzYWdlO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG9iamVjdCA9IHt9O1xyXG4gICAgICAgICAgICB0cmFuc2xhdGlvbk9iamVjdFtmaXJzdFBhcnRPZklkXSA9IG9iamVjdDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAocmVzdE9mSWQgPT09ICcnKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2R1cGxpY2F0ZSBpZCBwcmFlZml4IFwiJyArIG1zZy5pZCArICdcIicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucHV0SW5UcmFuc2xhdGlvbk9iamVjdCg8Tmd4VHJhbnNsYXRpb25zPiBvYmplY3QsIHtpZDogcmVzdE9mSWQsIG1lc3NhZ2U6IG1zZy5tZXNzYWdlfSk7XHJcbiAgICB9XHJcbn1cclxuIl19","customTransformCache":false,"dependencies":["@ngx-i18nsupport/ngx-i18nsupport-lib","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\file-util.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\util.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\ngx-translate-extraction-pattern.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\ngx-translate-extractor.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { NORMALIZATION_FORMAT_NGXTRANSLATE } from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport { FileUtil } from '../common/file-util';\r\nimport { isNullOrUndefined } from '../common/util';\r\nimport { NgxTranslateExtractionPattern } from './ngx-translate-extraction-pattern';\r\nexport class NgxTranslateExtractor {\r\n    constructor(messagesFile, extractionPatternString) {\r\n        this.messagesFile = messagesFile;\r\n        this.extractionPattern = new NgxTranslateExtractionPattern(extractionPatternString);\r\n    }\r\n    /**\r\n     * Check, wether extractionPattern has valid syntax.\r\n     * @param extractionPatternString extractionPatternString\r\n     * @return null, if pattern is ok, string describing the error, if it is not ok.\r\n     */\r\n    static checkPattern(extractionPatternString) {\r\n        try {\r\n            if (new NgxTranslateExtractionPattern(extractionPatternString)) {\r\n                return null;\r\n            }\r\n        }\r\n        catch (error) {\r\n            return error.message;\r\n        }\r\n        return null;\r\n    }\r\n    static extract(messagesFile, extractionPattern, outputFile) {\r\n        new NgxTranslateExtractor(messagesFile, extractionPattern).extractTo(outputFile);\r\n    }\r\n    /**\r\n     * Extact messages and write them to a file.\r\n     * @param outputFile outputFile\r\n     */\r\n    extractTo(outputFile) {\r\n        const translations = this.toNgxTranslations(this.extract());\r\n        if (translations && Object.keys(translations).length > 0) {\r\n            FileUtil.replaceContent(outputFile, JSON.stringify(translations, null, 4), 'utf-8');\r\n        }\r\n        else {\r\n            if (FileUtil.exists(outputFile)) {\r\n                FileUtil.deleteFile(outputFile);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     *  Extract messages and convert them to ngx translations.\r\n     *  @return the translation objects.\r\n     */\r\n    extract() {\r\n        const result = [];\r\n        this.messagesFile.forEachTransUnit((tu) => {\r\n            const ngxId = this.ngxTranslateIdFromTU(tu);\r\n            if (ngxId) {\r\n                const messagetext = tu.targetContentNormalized().asDisplayString(NORMALIZATION_FORMAT_NGXTRANSLATE);\r\n                result.push({ id: ngxId, message: messagetext });\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    /**\r\n     * Check, wether this tu should be extracted for ngx-translate usage, and return its id for ngx-translate.\r\n     * There are 2 possibilities:\r\n     * 1. description is set to \"ngx-translate\" and meaning contains the id.\r\n     * 2. id is explicitly set to a string.\r\n     * @param tu tu\r\n     * @return an ngx id or null, if this tu should not be extracted.\r\n     */\r\n    ngxTranslateIdFromTU(tu) {\r\n        if (this.isExplicitlySetId(tu.id)) {\r\n            if (this.extractionPattern.isExplicitIdMatched(tu.id)) {\r\n                return tu.id;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        const description = tu.description();\r\n        if (description && this.extractionPattern.isDescriptionMatched(description)) {\r\n            return tu.meaning();\r\n        }\r\n    }\r\n    /**\r\n     * Test, wether ID was explicitly set (via i18n=\"@myid).\r\n     * Just heuristic, an ID is explicitly, if it does not look like a generated one.\r\n     * @param id id\r\n     * @return wether ID was explicitly set (via i18n=\"@myid).\r\n     */\r\n    isExplicitlySetId(id) {\r\n        if (isNullOrUndefined(id)) {\r\n            return false;\r\n        }\r\n        // generated IDs are either decimal or sha1 hex\r\n        const reForGeneratedId = /^[0-9a-f]{11,}$/;\r\n        return !reForGeneratedId.test(id);\r\n    }\r\n    /**\r\n     * Convert list of relevant TUs to ngx translations object.\r\n     * @param msgList msgList\r\n     */\r\n    toNgxTranslations(msgList) {\r\n        const translationObject = {};\r\n        msgList.forEach((msg) => {\r\n            this.putInTranslationObject(translationObject, msg);\r\n        });\r\n        return translationObject;\r\n    }\r\n    /**\r\n     * Put a new messages into the translation data object.\r\n     * If you add, e.g. \"{id: 'myapp.example', message: 'test'}\",\r\n     * the translation object will then contain an object myapp that has property example:\r\n     * {myapp: {\r\n     *   example: 'test'\r\n     *   }}\r\n     * @param translationObject translationObject\r\n     * @param msg msg\r\n     */\r\n    putInTranslationObject(translationObject, msg) {\r\n        let firstPartOfId;\r\n        let restOfId;\r\n        const indexOfDot = msg.id.indexOf('.');\r\n        if (indexOfDot === 0 || indexOfDot === (msg.id.length - 1)) {\r\n            throw new Error('bad nxg-translate id \"' + msg.id + '\"');\r\n        }\r\n        if (indexOfDot < 0) {\r\n            firstPartOfId = msg.id;\r\n            restOfId = '';\r\n        }\r\n        else {\r\n            firstPartOfId = msg.id.substring(0, indexOfDot);\r\n            restOfId = msg.id.substring(indexOfDot + 1);\r\n        }\r\n        let object = translationObject[firstPartOfId];\r\n        if (isNullOrUndefined(object)) {\r\n            if (restOfId === '') {\r\n                translationObject[firstPartOfId] = msg.message;\r\n                return;\r\n            }\r\n            object = {};\r\n            translationObject[firstPartOfId] = object;\r\n        }\r\n        else {\r\n            if (restOfId === '') {\r\n                throw new Error('duplicate id praefix \"' + msg.id + '\"');\r\n            }\r\n        }\r\n        this.putInTranslationObject(object, { id: restOfId, message: msg.message });\r\n    }\r\n}\r\nNgxTranslateExtractor.DefaultExtractionPattern = '@@|ngx-translate';\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"ngx-translate-extractor.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/xliffmerge/ngx-translate-extractor.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,46],[42,0,0,79],[44,0,0,80],[50,0,0,86],[88,0,0,124],[89,0,0,125]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[17,0,1,16],[19,0,1,17],[25,0,1,23],[46,0,1,44],[47,0,1,45]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[26,0,2,25],[28,0,2,26],[34,0,2,32],[50,0,2,48],[51,0,2,49]],[[0,0,3,0],[7,0,3,7],[9,0,3,8],[38,0,3,37],[40,0,3,38],[46,0,3,44],[82,0,3,80],[83,0,3,81]],[[0,0,27,0],[6,0,27,6],[13,0,27,13],[34,0,27,34]],[[4,0,52,4],[16,0,52,24],[28,0,52,62],[30,0,52,64],[53,0,52,95]],[[8,0,52,24],[25,0,52,36],[28,0,52,24],[40,0,52,36],[41,0,52,62]],[[8,0,53,8],[12,0,53,12],[13,0,53,13],[30,0,53,30],[33,0,53,33],[37,0,53,37],[66,0,53,66],[67,0,53,67],[90,0,53,90],[91,0,53,91],[92,0,53,92]],[[4,0,54,4],[5,0,54,5]],[[4,0,32,4]],[],[],[],[[7,0,36,7]],[[4,0,37,11],[10,0,37,17],[11,0,37,18],[23,0,37,30],[24,0,37,31],[47,0,37,62]],[[8,0,38,8],[12,0,38,12]],[[12,0,39,10],[16,0,39,14],[20,0,39,18],[49,0,39,47],[50,0,39,48],[73,0,39,71],[74,0,39,72],[76,0,39,74]],[[16,0,40,14],[23,0,40,21],[27,0,40,25],[28,0,40,26]],[[13,0,41,11]],[[9,0,42,9]],[[8,0,42,10],[15,0,42,17],[20,0,42,22],[22,0,42,24]],[[12,0,43,12],[19,0,43,19],[24,0,43,24],[25,0,43,25],[32,0,43,32],[33,0,43,33]],[[9,0,44,9]],[[8,0,45,8],[15,0,45,15],[19,0,45,19],[20,0,45,20]],[[4,0,46,4],[5,0,46,5]],[[4,0,48,11],[10,0,48,17],[11,0,48,18],[18,0,48,25],[19,0,48,26],[31,0,48,64],[33,0,48,66],[50,0,48,91],[52,0,48,93],[62,0,48,111]],[[8,0,49,8],[12,0,49,12],[33,0,49,33],[34,0,49,34],[46,0,49,46],[48,0,49,48],[65,0,49,65],[66,0,49,66],[67,0,49,67],[76,0,49,76],[77,0,49,77],[87,0,49,87],[88,0,49,88],[89,0,49,89]],[[4,0,50,4],[5,0,50,5]],[[4,0,56,4]],[],[],[[7,0,59,7]],[[4,0,60,11],[13,0,60,20],[14,0,60,21],[24,0,60,39]],[[8,0,61,8],[14,0,61,14],[26,0,61,26],[29,0,61,46],[33,0,61,50],[34,0,61,51],[51,0,61,68],[52,0,61,69],[56,0,61,73],[57,0,61,74],[64,0,61,81],[66,0,61,83],[67,0,61,84],[68,0,61,85]],[[8,0,62,8],[12,0,62,12],[24,0,62,24],[28,0,62,28],[34,0,62,34],[35,0,62,35],[39,0,62,39],[40,0,62,40],[52,0,62,52],[53,0,62,53],[54,0,62,54],[60,0,62,60],[63,0,62,63],[64,0,62,64],[66,0,62,66]],[[12,0,63,12],[20,0,63,20],[21,0,63,21],[35,0,63,35],[36,0,63,36],[46,0,63,46],[48,0,63,48],[52,0,63,52],[53,0,63,53],[62,0,63,62],[63,0,63,63],[75,0,63,75],[77,0,63,77],[81,0,63,81],[83,0,63,83],[84,0,63,84],[85,0,63,85],[87,0,63,87],[94,0,63,94],[95,0,63,95],[96,0,63,96]],[[9,0,64,9]],[[13,0,64,15]],[[12,0,65,12],[16,0,65,16],[24,0,65,24],[25,0,65,25],[31,0,65,31],[32,0,65,32],[42,0,65,42],[43,0,65,43],[45,0,65,45]],[[16,0,66,16],[24,0,66,24],[25,0,66,25],[35,0,66,35],[36,0,66,36],[46,0,66,46],[47,0,66,47],[48,0,66,48]],[[13,0,67,13]],[[9,0,68,9]],[[4,0,69,4],[5,0,69,5]],[[4,0,71,4]],[],[],[[7,0,74,7]],[[4,0,75,12],[11,0,75,19]],[[8,0,76,8],[14,0,76,14],[20,0,76,20],[23,0,76,37],[25,0,76,39],[26,0,76,40]],[[8,0,77,8],[12,0,77,12],[13,0,77,13],[25,0,77,25],[26,0,77,26],[42,0,77,42],[43,0,77,43],[44,0,77,44],[46,0,77,58],[48,0,77,60],[50,0,77,62]],[[12,0,78,12],[18,0,78,18],[23,0,78,23],[26,0,78,26],[30,0,78,30],[31,0,78,31],[51,0,78,51],[52,0,78,52],[54,0,78,54],[55,0,78,55],[56,0,78,56]],[[12,0,79,12],[16,0,79,16],[21,0,79,21],[23,0,79,23]],[[16,0,80,16],[22,0,80,22],[33,0,80,33],[36,0,80,36],[38,0,80,38],[39,0,80,39],[62,0,80,62],[64,0,80,64],[65,0,80,65],[80,0,80,80],[81,0,80,81],[114,0,80,114],[115,0,80,115],[116,0,80,116]],[[16,0,81,16],[22,0,81,22],[23,0,81,23],[27,0,81,27],[28,0,81,28],[30,0,81,29],[32,0,81,31],[34,0,81,33],[39,0,81,38],[41,0,81,40],[48,0,81,47],[50,0,81,49],[61,0,81,60],[63,0,81,61],[64,0,81,62],[65,0,81,63]],[[13,0,82,13]],[[8,0,83,8],[9,0,83,9],[10,0,83,10],[11,0,83,11]],[[8,0,84,8],[15,0,84,15],[21,0,84,21],[22,0,84,22]],[[4,0,85,4],[5,0,85,5]],[[4,0,87,4]],[],[],[],[],[],[],[[7,0,94,7]],[[4,0,95,12],[24,0,95,32],[25,0,95,33],[27,0,95,47]],[[8,0,96,8],[12,0,96,12],[16,0,96,16],[17,0,96,17],[34,0,96,34],[35,0,96,35],[37,0,96,37],[38,0,96,38],[40,0,96,40],[41,0,96,41],[43,0,96,43]],[[12,0,97,12],[16,0,97,16],[20,0,97,20],[21,0,97,21],[38,0,97,38],[39,0,97,39],[58,0,97,58],[59,0,97,59],[61,0,97,61],[62,0,97,62],[64,0,97,64],[65,0,97,65],[67,0,97,67]],[[16,0,98,16],[23,0,98,23],[25,0,98,25],[26,0,98,26],[28,0,98,28],[29,0,98,29]],[[13,0,99,13]],[[17,0,99,19]],[[16,0,100,16],[23,0,100,23],[27,0,100,27],[28,0,100,28]],[[13,0,101,13]],[[9,0,102,9]],[[8,0,103,8],[14,0,103,14],[25,0,103,25],[28,0,103,28],[30,0,103,30],[31,0,103,31],[42,0,103,42],[44,0,103,44],[45,0,103,45]],[[8,0,104,8],[12,0,104,12],[23,0,104,23],[27,0,104,27],[31,0,104,31],[32,0,104,32],[49,0,104,49],[50,0,104,50],[70,0,104,70],[71,0,104,71],[82,0,104,82],[83,0,104,83],[85,0,104,85]],[[12,0,105,12],[19,0,105,19],[21,0,105,21],[22,0,105,22],[29,0,105,29],[31,0,105,31],[32,0,105,32]],[[9,0,106,9]],[[4,0,107,4],[5,0,107,5]],[[4,0,109,4]],[],[],[],[],[[7,0,114,7]],[[4,0,115,12],[21,0,115,29],[22,0,115,30],[24,0,115,40]],[[8,0,116,8],[12,0,116,12],[29,0,116,29],[30,0,116,30],[32,0,116,32],[33,0,116,33],[35,0,116,35]],[[12,0,117,12],[19,0,117,19],[24,0,117,24],[25,0,117,25]],[[9,0,118,9]],[[8,0,119,8],[55,0,119,55]],[[8,0,120,8],[14,0,120,14],[30,0,120,30],[33,0,120,33],[50,0,120,50],[51,0,120,51]],[[8,0,121,8],[15,0,121,15],[16,0,121,16],[32,0,121,32],[33,0,121,33],[37,0,121,37],[38,0,121,38],[40,0,121,40],[41,0,121,41],[42,0,121,42]],[[4,0,122,4],[5,0,122,5]],[[4,0,124,4]],[],[],[[7,0,127,7]],[[4,0,128,12],[21,0,128,29],[22,0,128,30],[29,0,128,51]],[[8,0,129,8],[14,0,129,14],[31,0,129,31],[34,0,129,51],[36,0,129,53],[37,0,129,54]],[[8,0,130,8],[15,0,130,15],[16,0,130,16],[23,0,130,23],[24,0,130,24],[25,0,130,25],[28,0,130,40],[30,0,130,42],[32,0,130,44]],[[12,0,131,12],[16,0,131,16],[17,0,131,17],[39,0,131,39],[40,0,131,40],[57,0,131,57],[59,0,131,59],[62,0,131,62],[63,0,131,63],[64,0,131,64]],[[8,0,132,8],[9,0,132,9],[10,0,132,10],[11,0,132,11]],[[8,0,133,8],[15,0,133,15],[32,0,133,32],[33,0,133,33]],[[4,0,134,4],[5,0,134,5]],[[4,0,136,4]],[],[],[],[],[],[],[],[],[[7,0,145,7]],[[4,0,146,12],[26,0,146,34],[27,0,146,35],[44,0,146,69],[46,0,146,71],[49,0,146,86]],[[8,0,147,8],[12,0,147,12],[25,0,147,33],[26,0,147,34]],[[8,0,148,8],[12,0,148,12],[20,0,148,28],[21,0,148,29]],[[8,0,149,8],[14,0,149,14],[24,0,149,24],[27,0,149,27],[30,0,149,30],[31,0,149,31],[33,0,149,33],[34,0,149,34],[41,0,149,41],[42,0,149,42],[45,0,149,45],[46,0,149,46],[47,0,149,47]],[[8,0,150,8],[12,0,150,12],[22,0,150,22],[27,0,150,27],[28,0,150,28],[32,0,150,32],[42,0,150,42],[47,0,150,47],[48,0,150,48],[51,0,150,51],[52,0,150,52],[54,0,150,54],[55,0,150,55],[61,0,150,61],[64,0,150,64],[65,0,150,65],[66,0,150,66],[68,0,150,68]],[[12,0,151,12],[18,0,151,18],[22,0,151,22],[27,0,151,27],[28,0,151,28],[52,0,151,52],[55,0,151,55],[58,0,151,58],[59,0,151,59],[61,0,151,61],[64,0,151,64],[67,0,151,67],[68,0,151,68],[69,0,151,69]],[[9,0,152,9]],[[8,0,153,8],[12,0,153,12],[22,0,153,22],[25,0,153,25],[26,0,153,26],[28,0,153,28]],[[12,0,154,12],[25,0,154,25],[28,0,154,28],[31,0,154,31],[32,0,154,32],[34,0,154,34],[35,0,154,35]],[[12,0,155,12],[20,0,155,20],[23,0,155,23],[25,0,155,25],[26,0,155,26]],[[9,0,156,9]],[[13,0,156,15]],[[12,0,157,12],[25,0,157,25],[28,0,157,28],[31,0,157,31],[32,0,157,32],[34,0,157,34],[35,0,157,35],[44,0,157,44],[45,0,157,45],[46,0,157,46],[48,0,157,48],[58,0,157,58],[59,0,157,59],[60,0,157,60]],[[12,0,158,12],[20,0,158,20],[23,0,158,23],[26,0,158,26],[27,0,158,27],[29,0,158,29],[30,0,158,30],[39,0,158,39],[40,0,158,40],[50,0,158,50],[53,0,158,53],[54,0,158,54],[55,0,158,55],[56,0,158,56]],[[9,0,159,9]],[[8,0,160,8],[12,0,160,12],[18,0,160,18],[21,0,160,21],[38,0,160,38],[39,0,160,39],[52,0,160,52],[53,0,160,53],[54,0,160,54]],[[8,0,161,8],[12,0,161,12],[29,0,161,29],[30,0,161,30],[36,0,161,36],[37,0,161,37],[39,0,161,39]],[[12,0,162,12],[16,0,162,16],[24,0,162,24],[29,0,162,29],[31,0,162,31],[33,0,162,33]],[[16,0,163,16],[33,0,163,33],[34,0,163,34],[47,0,163,47],[48,0,163,48],[51,0,163,51],[54,0,163,54],[55,0,163,55],[62,0,163,62],[63,0,163,63]],[[16,0,164,16],[23,0,164,23]],[[13,0,165,13]],[[12,0,166,12],[18,0,166,18],[21,0,166,21],[23,0,166,23],[24,0,166,24]],[[12,0,167,12],[29,0,167,29],[30,0,167,30],[43,0,167,43],[44,0,167,44],[47,0,167,47],[53,0,167,53],[54,0,167,54]],[[9,0,168,9]],[[13,0,168,15]],[[12,0,169,12],[16,0,169,16],[24,0,169,24],[29,0,169,29],[31,0,169,31],[33,0,169,33]],[[16,0,170,16],[22,0,170,22],[26,0,170,26],[31,0,170,31],[32,0,170,32],[56,0,170,56],[59,0,170,59],[62,0,170,62],[63,0,170,63],[65,0,170,65],[68,0,170,68],[71,0,170,71],[72,0,170,72],[73,0,170,73]],[[13,0,171,13]],[[9,0,172,9]],[[8,0,173,8],[12,0,173,12],[13,0,173,13],[35,0,173,35],[36,0,173,54],[42,0,173,60],[44,0,173,62],[46,0,173,63],[48,0,173,65],[50,0,173,67],[58,0,173,75],[60,0,173,77],[67,0,173,84],[69,0,173,86],[72,0,173,89],[73,0,173,90],[80,0,173,97],[82,0,173,98],[83,0,173,99],[84,0,173,100]],[[4,0,174,4],[5,0,174,5]],[],[[0,0,29,18],[46,0,29,42],[49,0,29,45],[67,0,29,63],[68,0,29,64]]],"sourcesContent":["import {ITranslationMessagesFile, ITransUnit, NORMALIZATION_FORMAT_NGXTRANSLATE} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {FileUtil} from '../common/file-util';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {NgxTranslateExtractionPattern} from './ngx-translate-extraction-pattern';\r\n/**\r\n * Created by roobm on 15.03.2017.\r\n * A tool for extracting messages in ngx-translate format.\r\n * Generates a json-file to be used with ngx-translate.\r\n */\r\n\r\n/**\r\n * The interface used for translations in ngx-translate.\r\n * A hash that contains either the translation or another hash.\r\n */\r\ninterface NgxTranslations {\r\n    [id: string]: NgxTranslations | string;\r\n}\r\n\r\n/**\r\n * internal,\r\n * a message with id (a dot-separated string).\r\n */\r\ninterface NgxMessage {\r\n    id: string; // dot separated name, e.g. \"myapp.service1.message1\"\r\n    message: string; // the message, placeholder are in {{n}} syntax, e.g. \"a test with value: {{0}}\r\n}\r\n\r\nexport class NgxTranslateExtractor {\r\n\r\n    public static DefaultExtractionPattern = '@@|ngx-translate';\r\n    private extractionPattern: NgxTranslateExtractionPattern;\r\n\r\n    /**\r\n     * Check, wether extractionPattern has valid syntax.\r\n     * @param extractionPatternString extractionPatternString\r\n     * @return null, if pattern is ok, string describing the error, if it is not ok.\r\n     */\r\n    public static checkPattern(extractionPatternString: string): string {\r\n        try {\r\n          if (new NgxTranslateExtractionPattern(extractionPatternString)) {\r\n              return null;\r\n          }\r\n        } catch (error) {\r\n            return error.message;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static extract(messagesFile: ITranslationMessagesFile, extractionPattern: string, outputFile: string) {\r\n        new NgxTranslateExtractor(messagesFile, extractionPattern).extractTo(outputFile);\r\n    }\r\n\r\n    constructor(private messagesFile: ITranslationMessagesFile, extractionPatternString: string) {\r\n        this.extractionPattern = new NgxTranslateExtractionPattern(extractionPatternString);\r\n    }\r\n\r\n    /**\r\n     * Extact messages and write them to a file.\r\n     * @param outputFile outputFile\r\n     */\r\n    public extractTo(outputFile: string) {\r\n        const translations: NgxTranslations = this.toNgxTranslations(this.extract());\r\n        if (translations && Object.keys(translations).length > 0) {\r\n            FileUtil.replaceContent(outputFile, JSON.stringify(translations, null, 4), 'utf-8');\r\n        } else {\r\n            if (FileUtil.exists(outputFile)) {\r\n                FileUtil.deleteFile(outputFile);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  Extract messages and convert them to ngx translations.\r\n     *  @return the translation objects.\r\n     */\r\n    private extract(): NgxMessage[] {\r\n        const result: NgxMessage[] = [];\r\n        this.messagesFile.forEachTransUnit((tu: ITransUnit) => {\r\n            const ngxId = this.ngxTranslateIdFromTU(tu);\r\n            if (ngxId) {\r\n                const messagetext = tu.targetContentNormalized().asDisplayString(NORMALIZATION_FORMAT_NGXTRANSLATE);\r\n                result.push({id: ngxId, message: messagetext});\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Check, wether this tu should be extracted for ngx-translate usage, and return its id for ngx-translate.\r\n     * There are 2 possibilities:\r\n     * 1. description is set to \"ngx-translate\" and meaning contains the id.\r\n     * 2. id is explicitly set to a string.\r\n     * @param tu tu\r\n     * @return an ngx id or null, if this tu should not be extracted.\r\n     */\r\n    private ngxTranslateIdFromTU(tu: ITransUnit): string {\r\n        if (this.isExplicitlySetId(tu.id)) {\r\n            if (this.extractionPattern.isExplicitIdMatched(tu.id)) {\r\n                return tu.id;\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n        const description = tu.description();\r\n        if (description && this.extractionPattern.isDescriptionMatched(description)) {\r\n            return tu.meaning();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Test, wether ID was explicitly set (via i18n=\"@myid).\r\n     * Just heuristic, an ID is explicitly, if it does not look like a generated one.\r\n     * @param id id\r\n     * @return wether ID was explicitly set (via i18n=\"@myid).\r\n     */\r\n    private isExplicitlySetId(id: string): boolean {\r\n        if (isNullOrUndefined(id)) {\r\n            return false;\r\n        }\r\n        // generated IDs are either decimal or sha1 hex\r\n        const reForGeneratedId = /^[0-9a-f]{11,}$/;\r\n        return !reForGeneratedId.test(id);\r\n    }\r\n\r\n    /**\r\n     * Convert list of relevant TUs to ngx translations object.\r\n     * @param msgList msgList\r\n     */\r\n    private toNgxTranslations(msgList: NgxMessage[]): NgxTranslations {\r\n        const translationObject: NgxTranslations = {};\r\n        msgList.forEach((msg: NgxMessage) => {\r\n            this.putInTranslationObject(translationObject, msg);\r\n        });\r\n        return translationObject;\r\n    }\r\n\r\n    /**\r\n     * Put a new messages into the translation data object.\r\n     * If you add, e.g. \"{id: 'myapp.example', message: 'test'}\",\r\n     * the translation object will then contain an object myapp that has property example:\r\n     * {myapp: {\r\n     *   example: 'test'\r\n     *   }}\r\n     * @param translationObject translationObject\r\n     * @param msg msg\r\n     */\r\n    private putInTranslationObject(translationObject: NgxTranslations, msg: NgxMessage) {\r\n        let firstPartOfId: string;\r\n        let restOfId: string;\r\n        const indexOfDot = msg.id.indexOf('.');\r\n        if (indexOfDot === 0 || indexOfDot === (msg.id.length - 1)) {\r\n            throw new Error('bad nxg-translate id \"' + msg.id + '\"');\r\n        }\r\n        if (indexOfDot < 0) {\r\n            firstPartOfId = msg.id;\r\n            restOfId = '';\r\n        } else {\r\n            firstPartOfId = msg.id.substring(0, indexOfDot);\r\n            restOfId = msg.id.substring(indexOfDot + 1);\r\n        }\r\n        let object = translationObject[firstPartOfId];\r\n        if (isNullOrUndefined(object)) {\r\n            if (restOfId === '') {\r\n                translationObject[firstPartOfId] = msg.message;\r\n                return;\r\n            }\r\n            object = {};\r\n            translationObject[firstPartOfId] = object;\r\n        } else {\r\n            if (restOfId === '') {\r\n                throw new Error('duplicate id praefix \"' + msg.id + '\"');\r\n            }\r\n        }\r\n        this.putInTranslationObject(<NgxTranslations> object, {id: restOfId, message: msg.message});\r\n    }\r\n}\r\n"]},"resolvedIds":{"@ngx-i18nsupport/ngx-i18nsupport-lib":{"external":true,"id":"@ngx-i18nsupport/ngx-i18nsupport-lib","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../common/file-util":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\file-util.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../common/util":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\util.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./ngx-translate-extraction-pattern":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\ngx-translate-extraction-pattern.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":73206,"body":[{"type":"ImportDeclaration","start":165,"end":190,"specifiers":[{"type":"ImportNamespaceSpecifier","start":172,"end":179,"local":{"type":"Identifier","start":177,"end":179,"name":"fs"}}],"source":{"type":"Literal","start":185,"end":189,"value":"fs","raw":"'fs'"}},{"type":"ImportDeclaration","start":192,"end":246,"specifiers":[{"type":"ImportSpecifier","start":201,"end":216,"imported":{"type":"Identifier","start":201,"end":216,"name":"XliffMergeError"},"local":{"type":"Identifier","start":201,"end":216,"name":"XliffMergeError"}}],"source":{"type":"Literal","start":224,"end":245,"value":"./xliff-merge-error","raw":"'./xliff-merge-error'"}},{"type":"ImportDeclaration","start":248,"end":278,"specifiers":[{"type":"ImportSpecifier","start":257,"end":263,"imported":{"type":"Identifier","start":257,"end":263,"name":"format"},"local":{"type":"Identifier","start":257,"end":263,"name":"format"}}],"source":{"type":"Literal","start":271,"end":277,"value":"util","raw":"'util'"}},{"type":"ImportDeclaration","start":280,"end":340,"specifiers":[{"type":"ImportSpecifier","start":289,"end":296,"imported":{"type":"Identifier","start":289,"end":296,"name":"isArray"},"local":{"type":"Identifier","start":289,"end":296,"name":"isArray"}},{"type":"ImportSpecifier","start":298,"end":315,"imported":{"type":"Identifier","start":298,"end":315,"name":"isNullOrUndefined"},"local":{"type":"Identifier","start":298,"end":315,"name":"isNullOrUndefined"}}],"source":{"type":"Literal","start":323,"end":339,"value":"../common/util","raw":"'../common/util'"}},{"type":"ImportDeclaration","start":342,"end":389,"specifiers":[{"type":"ImportSpecifier","start":351,"end":359,"imported":{"type":"Identifier","start":351,"end":359,"name":"FileUtil"},"local":{"type":"Identifier","start":351,"end":359,"name":"FileUtil"}}],"source":{"type":"Literal","start":367,"end":388,"value":"../common/file-util","raw":"'../common/file-util'"}},{"type":"ImportDeclaration","start":391,"end":457,"specifiers":[{"type":"ImportSpecifier","start":400,"end":421,"imported":{"type":"Identifier","start":400,"end":421,"name":"NgxTranslateExtractor"},"local":{"type":"Identifier","start":400,"end":421,"name":"NgxTranslateExtractor"}}],"source":{"type":"Literal","start":429,"end":456,"value":"./ngx-translate-extractor","raw":"'./ngx-translate-extractor'"}},{"type":"ImportDeclaration","start":459,"end":508,"specifiers":[{"type":"ImportSpecifier","start":468,"end":475,"imported":{"type":"Identifier","start":468,"end":475,"name":"dirname"},"local":{"type":"Identifier","start":468,"end":475,"name":"dirname"}},{"type":"ImportSpecifier","start":477,"end":487,"imported":{"type":"Identifier","start":477,"end":487,"name":"isAbsolute"},"local":{"type":"Identifier","start":477,"end":487,"name":"isAbsolute"}},{"type":"ImportSpecifier","start":489,"end":493,"imported":{"type":"Identifier","start":489,"end":493,"name":"join"},"local":{"type":"Identifier","start":489,"end":493,"name":"join"}}],"source":{"type":"Literal","start":501,"end":507,"value":"path","raw":"'path'"}},{"type":"VariableDeclaration","start":510,"end":575,"declarations":[{"type":"VariableDeclarator","start":516,"end":574,"id":{"type":"Identifier","start":516,"end":534,"name":"PROFILE_CANDIDATES"},"init":{"type":"ArrayExpression","start":537,"end":574,"elements":[{"type":"Literal","start":538,"end":552,"value":"package.json","raw":"'package.json'"},{"type":"Literal","start":554,"end":573,"value":".angular-cli.json","raw":"'.angular-cli.json'"}]}}],"kind":"const"},{"type":"ExportNamedDeclaration","start":577,"end":20890,"declaration":{"type":"ClassDeclaration","start":584,"end":20890,"id":{"type":"Identifier","start":590,"end":610,"name":"XliffMergeParameters"},"superClass":null,"body":{"type":"ClassBody","start":611,"end":20890,"body":[{"type":"MethodDefinition","start":618,"end":706,"static":false,"computed":false,"key":{"type":"Identifier","start":618,"end":629,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":629,"end":706,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":632,"end":706,"body":[{"type":"ExpressionStatement","start":643,"end":665,"expression":{"type":"AssignmentExpression","start":643,"end":664,"operator":"=","left":{"type":"MemberExpression","start":643,"end":659,"object":{"type":"ThisExpression","start":643,"end":647},"property":{"type":"Identifier","start":648,"end":659,"name":"errorsFound"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":662,"end":664,"elements":[]}}},{"type":"ExpressionStatement","start":675,"end":699,"expression":{"type":"AssignmentExpression","start":675,"end":698,"operator":"=","left":{"type":"MemberExpression","start":675,"end":693,"object":{"type":"ThisExpression","start":675,"end":679},"property":{"type":"Identifier","start":680,"end":693,"name":"warningsFound"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":696,"end":698,"elements":[]}}}]}}},{"type":"MethodDefinition","start":897,"end":1095,"static":true,"computed":false,"key":{"type":"Identifier","start":904,"end":921,"name":"createFromOptions"},"kind":"method","value":{"type":"FunctionExpression","start":921,"end":1095,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":922,"end":929,"name":"options"},{"type":"Identifier","start":931,"end":945,"name":"profileContent"}],"body":{"type":"BlockStatement","start":947,"end":1095,"body":[{"type":"VariableDeclaration","start":958,"end":1004,"declarations":[{"type":"VariableDeclarator","start":964,"end":1003,"id":{"type":"Identifier","start":964,"end":974,"name":"parameters"},"init":{"type":"NewExpression","start":977,"end":1003,"callee":{"type":"Identifier","start":981,"end":1001,"name":"XliffMergeParameters"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":1014,"end":1060,"expression":{"type":"CallExpression","start":1014,"end":1059,"callee":{"type":"MemberExpression","start":1014,"end":1034,"object":{"type":"Identifier","start":1014,"end":1024,"name":"parameters"},"property":{"type":"Identifier","start":1025,"end":1034,"name":"configure"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1035,"end":1042,"name":"options"},{"type":"Identifier","start":1044,"end":1058,"name":"profileContent"}],"optional":false}},{"type":"ReturnStatement","start":1070,"end":1088,"argument":{"type":"Identifier","start":1077,"end":1087,"name":"parameters"}}]}}},{"type":"MethodDefinition","start":1381,"end":1816,"static":true,"computed":false,"key":{"type":"Identifier","start":1388,"end":1408,"name":"readProfileCandidate"},"kind":"method","value":{"type":"FunctionExpression","start":1408,"end":1816,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1409,"end":1420,"name":"profilePath"}],"body":{"type":"BlockStatement","start":1422,"end":1816,"body":[{"type":"VariableDeclaration","start":1433,"end":1445,"declarations":[{"type":"VariableDeclarator","start":1437,"end":1444,"id":{"type":"Identifier","start":1437,"end":1444,"name":"content"},"init":null}],"kind":"let"},{"type":"TryStatement","start":1455,"end":1593,"block":{"type":"BlockStatement","start":1459,"end":1533,"body":[{"type":"ExpressionStatement","start":1474,"end":1522,"expression":{"type":"AssignmentExpression","start":1474,"end":1521,"operator":"=","left":{"type":"Identifier","start":1474,"end":1481,"name":"content"},"right":{"type":"CallExpression","start":1484,"end":1521,"callee":{"type":"MemberExpression","start":1484,"end":1499,"object":{"type":"Identifier","start":1484,"end":1486,"name":"fs"},"property":{"type":"Identifier","start":1487,"end":1499,"name":"readFileSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1500,"end":1511,"name":"profilePath"},{"type":"Literal","start":1513,"end":1520,"value":"utf-8","raw":"'utf-8'"}],"optional":false}}}]},"handler":{"type":"CatchClause","start":1543,"end":1593,"param":{"type":"Identifier","start":1550,"end":1553,"name":"err"},"body":{"type":"BlockStatement","start":1555,"end":1593,"body":[{"type":"ReturnStatement","start":1570,"end":1582,"argument":{"type":"Literal","start":1577,"end":1581,"value":null,"raw":"null"}}]}},"finalizer":null},{"type":"VariableDeclaration","start":1603,"end":1645,"declarations":[{"type":"VariableDeclarator","start":1609,"end":1644,"id":{"type":"Identifier","start":1609,"end":1622,"name":"parsedContent"},"init":{"type":"CallExpression","start":1625,"end":1644,"callee":{"type":"MemberExpression","start":1625,"end":1635,"object":{"type":"Identifier","start":1625,"end":1629,"name":"JSON"},"property":{"type":"Identifier","start":1630,"end":1635,"name":"parse"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1636,"end":1643,"name":"content"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1655,"end":1809,"test":{"type":"LogicalExpression","start":1659,"end":1707,"left":{"type":"Identifier","start":1659,"end":1672,"name":"parsedContent"},"operator":"&&","right":{"type":"MemberExpression","start":1676,"end":1707,"object":{"type":"Identifier","start":1676,"end":1689,"name":"parsedContent"},"property":{"type":"Identifier","start":1690,"end":1707,"name":"xliffmergeOptions"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":1709,"end":1756,"body":[{"type":"ReturnStatement","start":1724,"end":1745,"argument":{"type":"Identifier","start":1731,"end":1744,"name":"parsedContent"}}]},"alternate":{"type":"BlockStatement","start":1771,"end":1809,"body":[{"type":"ReturnStatement","start":1786,"end":1798,"argument":{"type":"Literal","start":1793,"end":1797,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":2052,"end":2983,"static":false,"computed":false,"key":{"type":"Identifier","start":2052,"end":2061,"name":"configure"},"kind":"method","value":{"type":"FunctionExpression","start":2061,"end":2983,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2062,"end":2069,"name":"options"},{"type":"Identifier","start":2071,"end":2085,"name":"profileContent"}],"body":{"type":"BlockStatement","start":2087,"end":2983,"body":[{"type":"ExpressionStatement","start":2098,"end":2120,"expression":{"type":"AssignmentExpression","start":2098,"end":2119,"operator":"=","left":{"type":"MemberExpression","start":2098,"end":2114,"object":{"type":"ThisExpression","start":2098,"end":2102},"property":{"type":"Identifier","start":2103,"end":2114,"name":"errorsFound"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":2117,"end":2119,"elements":[]}}},{"type":"ExpressionStatement","start":2130,"end":2154,"expression":{"type":"AssignmentExpression","start":2130,"end":2153,"operator":"=","left":{"type":"MemberExpression","start":2130,"end":2148,"object":{"type":"ThisExpression","start":2130,"end":2134},"property":{"type":"Identifier","start":2135,"end":2148,"name":"warningsFound"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":2151,"end":2153,"elements":[]}}},{"type":"IfStatement","start":2164,"end":2254,"test":{"type":"UnaryExpression","start":2168,"end":2183,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":2169,"end":2183,"name":"profileContent"}},"consequent":{"type":"BlockStatement","start":2185,"end":2254,"body":[{"type":"ExpressionStatement","start":2200,"end":2243,"expression":{"type":"AssignmentExpression","start":2200,"end":2242,"operator":"=","left":{"type":"Identifier","start":2200,"end":2214,"name":"profileContent"},"right":{"type":"CallExpression","start":2217,"end":2242,"callee":{"type":"MemberExpression","start":2217,"end":2233,"object":{"type":"ThisExpression","start":2217,"end":2221},"property":{"type":"Identifier","start":2222,"end":2233,"name":"readProfile"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2234,"end":2241,"name":"options"}],"optional":false}}}]},"alternate":null},{"type":"VariableDeclaration","start":2264,"end":2304,"declarations":[{"type":"VariableDeclarator","start":2270,"end":2303,"id":{"type":"Identifier","start":2270,"end":2282,"name":"validProfile"},"init":{"type":"UnaryExpression","start":2286,"end":2302,"operator":"!","prefix":true,"argument":{"type":"UnaryExpression","start":2287,"end":2302,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":2288,"end":2302,"name":"profileContent"}}}}],"kind":"const"},{"type":"IfStatement","start":2314,"end":2387,"test":{"type":"MemberExpression","start":2318,"end":2331,"object":{"type":"Identifier","start":2318,"end":2325,"name":"options"},"property":{"type":"Identifier","start":2326,"end":2331,"name":"quiet"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":2333,"end":2387,"body":[{"type":"ExpressionStatement","start":2348,"end":2376,"expression":{"type":"AssignmentExpression","start":2348,"end":2375,"operator":"=","left":{"type":"MemberExpression","start":2348,"end":2359,"object":{"type":"ThisExpression","start":2348,"end":2352},"property":{"type":"Identifier","start":2353,"end":2359,"name":"_quiet"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":2362,"end":2375,"object":{"type":"Identifier","start":2362,"end":2369,"name":"options"},"property":{"type":"Identifier","start":2370,"end":2375,"name":"quiet"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":2397,"end":2476,"test":{"type":"MemberExpression","start":2401,"end":2416,"object":{"type":"Identifier","start":2401,"end":2408,"name":"options"},"property":{"type":"Identifier","start":2409,"end":2416,"name":"verbose"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":2418,"end":2476,"body":[{"type":"ExpressionStatement","start":2433,"end":2465,"expression":{"type":"AssignmentExpression","start":2433,"end":2464,"operator":"=","left":{"type":"MemberExpression","start":2433,"end":2446,"object":{"type":"ThisExpression","start":2433,"end":2437},"property":{"type":"Identifier","start":2438,"end":2446,"name":"_verbose"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":2449,"end":2464,"object":{"type":"Identifier","start":2449,"end":2456,"name":"options"},"property":{"type":"Identifier","start":2457,"end":2464,"name":"verbose"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":2486,"end":2976,"test":{"type":"Identifier","start":2490,"end":2502,"name":"validProfile"},"consequent":{"type":"BlockStatement","start":2504,"end":2976,"body":[{"type":"ExpressionStatement","start":2519,"end":2561,"expression":{"type":"CallExpression","start":2519,"end":2560,"callee":{"type":"MemberExpression","start":2519,"end":2544,"object":{"type":"ThisExpression","start":2519,"end":2523},"property":{"type":"Identifier","start":2524,"end":2544,"name":"initializeFromConfig"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2545,"end":2559,"name":"profileContent"}],"optional":false}},{"type":"IfStatement","start":2670,"end":2928,"test":{"type":"LogicalExpression","start":2674,"end":2725,"left":{"type":"UnaryExpression","start":2674,"end":2693,"operator":"!","prefix":true,"argument":{"type":"UnaryExpression","start":2675,"end":2693,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":2676,"end":2693,"object":{"type":"Identifier","start":2676,"end":2683,"name":"options"},"property":{"type":"Identifier","start":2684,"end":2693,"name":"languages"},"computed":false,"optional":false}}},"operator":"&&","right":{"type":"BinaryExpression","start":2697,"end":2725,"left":{"type":"MemberExpression","start":2697,"end":2721,"object":{"type":"MemberExpression","start":2697,"end":2714,"object":{"type":"Identifier","start":2697,"end":2704,"name":"options"},"property":{"type":"Identifier","start":2705,"end":2714,"name":"languages"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2715,"end":2721,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":2724,"end":2725,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":2727,"end":2928,"body":[{"type":"ExpressionStatement","start":2746,"end":2782,"expression":{"type":"AssignmentExpression","start":2746,"end":2781,"operator":"=","left":{"type":"MemberExpression","start":2746,"end":2761,"object":{"type":"ThisExpression","start":2746,"end":2750},"property":{"type":"Identifier","start":2751,"end":2761,"name":"_languages"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":2764,"end":2781,"object":{"type":"Identifier","start":2764,"end":2771,"name":"options"},"property":{"type":"Identifier","start":2772,"end":2781,"name":"languages"},"computed":false,"optional":false}}},{"type":"IfStatement","start":2800,"end":2913,"test":{"type":"UnaryExpression","start":2804,"end":2826,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":2805,"end":2826,"object":{"type":"ThisExpression","start":2805,"end":2809},"property":{"type":"Identifier","start":2810,"end":2826,"name":"_defaultLanguage"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":2828,"end":2913,"body":[{"type":"ExpressionStatement","start":2851,"end":2894,"expression":{"type":"AssignmentExpression","start":2851,"end":2893,"operator":"=","left":{"type":"MemberExpression","start":2851,"end":2872,"object":{"type":"ThisExpression","start":2851,"end":2855},"property":{"type":"Identifier","start":2856,"end":2872,"name":"_defaultLanguage"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":2875,"end":2893,"object":{"type":"MemberExpression","start":2875,"end":2890,"object":{"type":"ThisExpression","start":2875,"end":2879},"property":{"type":"Identifier","start":2880,"end":2890,"name":"_languages"},"computed":false,"optional":false},"property":{"type":"Literal","start":2891,"end":2892,"value":0,"raw":"0"},"computed":true,"optional":false}}}]},"alternate":null}]},"alternate":null},{"type":"ExpressionStatement","start":2942,"end":2965,"expression":{"type":"CallExpression","start":2942,"end":2964,"callee":{"type":"MemberExpression","start":2942,"end":2962,"object":{"type":"ThisExpression","start":2942,"end":2946},"property":{"type":"Identifier","start":2947,"end":2962,"name":"checkParameters"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":3134,"end":4453,"static":false,"computed":false,"key":{"type":"Identifier","start":3134,"end":3145,"name":"readProfile"},"kind":"method","value":{"type":"FunctionExpression","start":3145,"end":4453,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3146,"end":3153,"name":"options"}],"body":{"type":"BlockStatement","start":3155,"end":4453,"body":[{"type":"VariableDeclaration","start":3166,"end":3206,"declarations":[{"type":"VariableDeclarator","start":3172,"end":3205,"id":{"type":"Identifier","start":3172,"end":3183,"name":"profilePath"},"init":{"type":"MemberExpression","start":3186,"end":3205,"object":{"type":"Identifier","start":3186,"end":3193,"name":"options"},"property":{"type":"Identifier","start":3194,"end":3205,"name":"profilePath"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3216,"end":3589,"test":{"type":"UnaryExpression","start":3220,"end":3232,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":3221,"end":3232,"name":"profilePath"}},"consequent":{"type":"BlockStatement","start":3234,"end":3589,"body":[{"type":"ForOfStatement","start":3249,"end":3554,"await":false,"left":{"type":"VariableDeclaration","start":3254,"end":3274,"declarations":[{"type":"VariableDeclarator","start":3260,"end":3274,"id":{"type":"Identifier","start":3260,"end":3274,"name":"configfilename"},"init":null}],"kind":"const"},"right":{"type":"Identifier","start":3278,"end":3296,"name":"PROFILE_CANDIDATES"},"body":{"type":"BlockStatement","start":3298,"end":3554,"body":[{"type":"VariableDeclaration","start":3317,"end":3391,"declarations":[{"type":"VariableDeclarator","start":3323,"end":3390,"id":{"type":"Identifier","start":3323,"end":3330,"name":"profile"},"init":{"type":"CallExpression","start":3333,"end":3390,"callee":{"type":"MemberExpression","start":3333,"end":3374,"object":{"type":"Identifier","start":3333,"end":3353,"name":"XliffMergeParameters"},"property":{"type":"Identifier","start":3354,"end":3374,"name":"readProfileCandidate"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3375,"end":3389,"name":"configfilename"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3409,"end":3539,"test":{"type":"Identifier","start":3413,"end":3420,"name":"profile"},"consequent":{"type":"BlockStatement","start":3422,"end":3539,"body":[{"type":"ExpressionStatement","start":3445,"end":3483,"expression":{"type":"AssignmentExpression","start":3445,"end":3482,"operator":"=","left":{"type":"MemberExpression","start":3445,"end":3465,"object":{"type":"ThisExpression","start":3445,"end":3449},"property":{"type":"Identifier","start":3450,"end":3465,"name":"usedProfilePath"},"computed":false,"optional":false},"right":{"type":"Identifier","start":3468,"end":3482,"name":"configfilename"}}},{"type":"ReturnStatement","start":3505,"end":3520,"argument":{"type":"Identifier","start":3512,"end":3519,"name":"profile"}}]},"alternate":null}]}},{"type":"ReturnStatement","start":3568,"end":3578,"argument":{"type":"ObjectExpression","start":3575,"end":3577,"properties":[]}}]},"alternate":null},{"type":"VariableDeclaration","start":3599,"end":3611,"declarations":[{"type":"VariableDeclarator","start":3603,"end":3610,"id":{"type":"Identifier","start":3603,"end":3610,"name":"content"},"init":null}],"kind":"let"},{"type":"TryStatement","start":3621,"end":3864,"block":{"type":"BlockStatement","start":3625,"end":3699,"body":[{"type":"ExpressionStatement","start":3640,"end":3688,"expression":{"type":"AssignmentExpression","start":3640,"end":3687,"operator":"=","left":{"type":"Identifier","start":3640,"end":3647,"name":"content"},"right":{"type":"CallExpression","start":3650,"end":3687,"callee":{"type":"MemberExpression","start":3650,"end":3665,"object":{"type":"Identifier","start":3650,"end":3652,"name":"fs"},"property":{"type":"Identifier","start":3653,"end":3665,"name":"readFileSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3666,"end":3677,"name":"profilePath"},{"type":"Literal","start":3679,"end":3686,"value":"utf-8","raw":"'utf-8'"}],"optional":false}}}]},"handler":{"type":"CatchClause","start":3709,"end":3864,"param":{"type":"Identifier","start":3716,"end":3719,"name":"err"},"body":{"type":"BlockStatement","start":3721,"end":3864,"body":[{"type":"ExpressionStatement","start":3736,"end":3827,"expression":{"type":"CallExpression","start":3736,"end":3826,"callee":{"type":"MemberExpression","start":3736,"end":3757,"object":{"type":"MemberExpression","start":3736,"end":3752,"object":{"type":"ThisExpression","start":3736,"end":3740},"property":{"type":"Identifier","start":3741,"end":3752,"name":"errorsFound"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3753,"end":3757,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":3758,"end":3825,"callee":{"type":"Identifier","start":3762,"end":3777,"name":"XliffMergeError"},"arguments":[{"type":"BinaryExpression","start":3778,"end":3824,"left":{"type":"BinaryExpression","start":3778,"end":3818,"left":{"type":"Literal","start":3778,"end":3804,"value":"could not read profile \"","raw":"'could not read profile \"'"},"operator":"+","right":{"type":"Identifier","start":3807,"end":3818,"name":"profilePath"}},"operator":"+","right":{"type":"Literal","start":3821,"end":3824,"value":"\"","raw":"'\"'"}}]}],"optional":false}},{"type":"ReturnStatement","start":3841,"end":3853,"argument":{"type":"Literal","start":3848,"end":3852,"value":null,"raw":"null"}}]}},"finalizer":null},{"type":"ExpressionStatement","start":3874,"end":3909,"expression":{"type":"AssignmentExpression","start":3874,"end":3908,"operator":"=","left":{"type":"MemberExpression","start":3874,"end":3894,"object":{"type":"ThisExpression","start":3874,"end":3878},"property":{"type":"Identifier","start":3879,"end":3894,"name":"usedProfilePath"},"computed":false,"optional":false},"right":{"type":"Identifier","start":3897,"end":3908,"name":"profilePath"}}},{"type":"VariableDeclaration","start":3919,"end":3962,"declarations":[{"type":"VariableDeclarator","start":3925,"end":3961,"id":{"type":"Identifier","start":3925,"end":3939,"name":"profileContent"},"init":{"type":"CallExpression","start":3942,"end":3961,"callee":{"type":"MemberExpression","start":3942,"end":3952,"object":{"type":"Identifier","start":3942,"end":3946,"name":"JSON"},"property":{"type":"Identifier","start":3947,"end":3952,"name":"parse"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3953,"end":3960,"name":"content"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":4032,"end":4091,"declarations":[{"type":"VariableDeclarator","start":4038,"end":4090,"id":{"type":"Identifier","start":4038,"end":4055,"name":"xliffmergeOptions"},"init":{"type":"MemberExpression","start":4058,"end":4090,"object":{"type":"Identifier","start":4058,"end":4072,"name":"profileContent"},"property":{"type":"Identifier","start":4073,"end":4090,"name":"xliffmergeOptions"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":4101,"end":4196,"expression":{"type":"AssignmentExpression","start":4101,"end":4195,"operator":"=","left":{"type":"MemberExpression","start":4101,"end":4125,"object":{"type":"Identifier","start":4101,"end":4118,"name":"xliffmergeOptions"},"property":{"type":"Identifier","start":4119,"end":4125,"name":"srcDir"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":4128,"end":4195,"callee":{"type":"MemberExpression","start":4128,"end":4156,"object":{"type":"ThisExpression","start":4128,"end":4132},"property":{"type":"Identifier","start":4133,"end":4156,"name":"adjustPathToProfilePath"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4157,"end":4168,"name":"profilePath"},{"type":"MemberExpression","start":4170,"end":4194,"object":{"type":"Identifier","start":4170,"end":4187,"name":"xliffmergeOptions"},"property":{"type":"Identifier","start":4188,"end":4194,"name":"srcDir"},"computed":false,"optional":false}],"optional":false}}},{"type":"ExpressionStatement","start":4206,"end":4301,"expression":{"type":"AssignmentExpression","start":4206,"end":4300,"operator":"=","left":{"type":"MemberExpression","start":4206,"end":4230,"object":{"type":"Identifier","start":4206,"end":4223,"name":"xliffmergeOptions"},"property":{"type":"Identifier","start":4224,"end":4230,"name":"genDir"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":4233,"end":4300,"callee":{"type":"MemberExpression","start":4233,"end":4261,"object":{"type":"ThisExpression","start":4233,"end":4237},"property":{"type":"Identifier","start":4238,"end":4261,"name":"adjustPathToProfilePath"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4262,"end":4273,"name":"profilePath"},{"type":"MemberExpression","start":4275,"end":4299,"object":{"type":"Identifier","start":4275,"end":4292,"name":"xliffmergeOptions"},"property":{"type":"Identifier","start":4293,"end":4299,"name":"genDir"},"computed":false,"optional":false}],"optional":false}}},{"type":"ExpressionStatement","start":4311,"end":4414,"expression":{"type":"AssignmentExpression","start":4311,"end":4413,"operator":"=","left":{"type":"MemberExpression","start":4311,"end":4339,"object":{"type":"Identifier","start":4311,"end":4328,"name":"xliffmergeOptions"},"property":{"type":"Identifier","start":4329,"end":4339,"name":"apikeyfile"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":4342,"end":4413,"callee":{"type":"MemberExpression","start":4342,"end":4370,"object":{"type":"ThisExpression","start":4342,"end":4346},"property":{"type":"Identifier","start":4347,"end":4370,"name":"adjustPathToProfilePath"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4371,"end":4382,"name":"profilePath"},{"type":"MemberExpression","start":4384,"end":4412,"object":{"type":"Identifier","start":4384,"end":4401,"name":"xliffmergeOptions"},"property":{"type":"Identifier","start":4402,"end":4412,"name":"apikeyfile"},"computed":false,"optional":false}],"optional":false}}},{"type":"ReturnStatement","start":4424,"end":4446,"argument":{"type":"Identifier","start":4431,"end":4445,"name":"profileContent"}}]}}},{"type":"MethodDefinition","start":4459,"end":4699,"static":false,"computed":false,"key":{"type":"Identifier","start":4459,"end":4482,"name":"adjustPathToProfilePath"},"kind":"method","value":{"type":"FunctionExpression","start":4482,"end":4699,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4483,"end":4494,"name":"profilePath"},{"type":"Identifier","start":4496,"end":4508,"name":"pathToAdjust"}],"body":{"type":"BlockStatement","start":4510,"end":4699,"body":[{"type":"IfStatement","start":4521,"end":4614,"test":{"type":"LogicalExpression","start":4525,"end":4566,"left":{"type":"UnaryExpression","start":4525,"end":4538,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":4526,"end":4538,"name":"pathToAdjust"}},"operator":"||","right":{"type":"CallExpression","start":4542,"end":4566,"callee":{"type":"Identifier","start":4542,"end":4552,"name":"isAbsolute"},"arguments":[{"type":"Identifier","start":4553,"end":4565,"name":"pathToAdjust"}],"optional":false}},"consequent":{"type":"BlockStatement","start":4568,"end":4614,"body":[{"type":"ReturnStatement","start":4583,"end":4603,"argument":{"type":"Identifier","start":4590,"end":4602,"name":"pathToAdjust"}}]},"alternate":null},{"type":"ReturnStatement","start":4624,"end":4692,"argument":{"type":"CallExpression","start":4631,"end":4691,"callee":{"type":"MemberExpression","start":4631,"end":4679,"object":{"type":"CallExpression","start":4631,"end":4671,"callee":{"type":"Identifier","start":4631,"end":4635,"name":"join"},"arguments":[{"type":"CallExpression","start":4636,"end":4656,"callee":{"type":"Identifier","start":4636,"end":4643,"name":"dirname"},"arguments":[{"type":"Identifier","start":4644,"end":4655,"name":"profilePath"}],"optional":false},{"type":"Identifier","start":4658,"end":4670,"name":"pathToAdjust"}],"optional":false},"property":{"type":"Identifier","start":4672,"end":4679,"name":"replace"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4680,"end":4685,"value":{},"raw":"/\\\\/g","regex":{"pattern":"\\\\","flags":"g"}},{"type":"Literal","start":4687,"end":4690,"value":"/","raw":"'/'"}],"optional":false}}]}}},{"type":"MethodDefinition","start":4705,"end":8156,"static":false,"computed":false,"key":{"type":"Identifier","start":4705,"end":4725,"name":"initializeFromConfig"},"kind":"method","value":{"type":"FunctionExpression","start":4725,"end":8156,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4726,"end":4740,"name":"profileContent"}],"body":{"type":"BlockStatement","start":4742,"end":8156,"body":[{"type":"IfStatement","start":4753,"end":4807,"test":{"type":"UnaryExpression","start":4757,"end":4772,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":4758,"end":4772,"name":"profileContent"}},"consequent":{"type":"BlockStatement","start":4774,"end":4807,"body":[{"type":"ReturnStatement","start":4789,"end":4796,"argument":null}]},"alternate":null},{"type":"VariableDeclaration","start":4817,"end":4866,"declarations":[{"type":"VariableDeclarator","start":4823,"end":4865,"id":{"type":"Identifier","start":4823,"end":4830,"name":"profile"},"init":{"type":"MemberExpression","start":4833,"end":4865,"object":{"type":"Identifier","start":4833,"end":4847,"name":"profileContent"},"property":{"type":"Identifier","start":4848,"end":4865,"name":"xliffmergeOptions"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":4876,"end":8149,"test":{"type":"Identifier","start":4880,"end":4887,"name":"profile"},"consequent":{"type":"BlockStatement","start":4889,"end":8021,"body":[{"type":"IfStatement","start":4904,"end":5005,"test":{"type":"UnaryExpression","start":4908,"end":4941,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":4909,"end":4941,"callee":{"type":"Identifier","start":4909,"end":4926,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":4927,"end":4940,"object":{"type":"Identifier","start":4927,"end":4934,"name":"profile"},"property":{"type":"Identifier","start":4935,"end":4940,"name":"quiet"},"computed":false,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":4943,"end":5005,"body":[{"type":"ExpressionStatement","start":4962,"end":4990,"expression":{"type":"AssignmentExpression","start":4962,"end":4989,"operator":"=","left":{"type":"MemberExpression","start":4962,"end":4973,"object":{"type":"ThisExpression","start":4962,"end":4966},"property":{"type":"Identifier","start":4967,"end":4973,"name":"_quiet"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":4976,"end":4989,"object":{"type":"Identifier","start":4976,"end":4983,"name":"profile"},"property":{"type":"Identifier","start":4984,"end":4989,"name":"quiet"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":5019,"end":5126,"test":{"type":"UnaryExpression","start":5023,"end":5058,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":5024,"end":5058,"callee":{"type":"Identifier","start":5024,"end":5041,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":5042,"end":5057,"object":{"type":"Identifier","start":5042,"end":5049,"name":"profile"},"property":{"type":"Identifier","start":5050,"end":5057,"name":"verbose"},"computed":false,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":5060,"end":5126,"body":[{"type":"ExpressionStatement","start":5079,"end":5111,"expression":{"type":"AssignmentExpression","start":5079,"end":5110,"operator":"=","left":{"type":"MemberExpression","start":5079,"end":5092,"object":{"type":"ThisExpression","start":5079,"end":5083},"property":{"type":"Identifier","start":5084,"end":5092,"name":"_verbose"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":5095,"end":5110,"object":{"type":"Identifier","start":5095,"end":5102,"name":"profile"},"property":{"type":"Identifier","start":5103,"end":5110,"name":"verbose"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":5140,"end":5265,"test":{"type":"UnaryExpression","start":5144,"end":5185,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":5145,"end":5185,"callee":{"type":"Identifier","start":5145,"end":5162,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":5163,"end":5184,"object":{"type":"Identifier","start":5163,"end":5170,"name":"profile"},"property":{"type":"Identifier","start":5171,"end":5184,"name":"allowIdChange"},"computed":false,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":5187,"end":5265,"body":[{"type":"ExpressionStatement","start":5206,"end":5250,"expression":{"type":"AssignmentExpression","start":5206,"end":5249,"operator":"=","left":{"type":"MemberExpression","start":5206,"end":5225,"object":{"type":"ThisExpression","start":5206,"end":5210},"property":{"type":"Identifier","start":5211,"end":5225,"name":"_allowIdChange"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":5228,"end":5249,"object":{"type":"Identifier","start":5228,"end":5235,"name":"profile"},"property":{"type":"Identifier","start":5236,"end":5249,"name":"allowIdChange"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":5279,"end":5390,"test":{"type":"MemberExpression","start":5283,"end":5306,"object":{"type":"Identifier","start":5283,"end":5290,"name":"profile"},"property":{"type":"Identifier","start":5291,"end":5306,"name":"defaultLanguage"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":5308,"end":5390,"body":[{"type":"ExpressionStatement","start":5327,"end":5375,"expression":{"type":"AssignmentExpression","start":5327,"end":5374,"operator":"=","left":{"type":"MemberExpression","start":5327,"end":5348,"object":{"type":"ThisExpression","start":5327,"end":5331},"property":{"type":"Identifier","start":5332,"end":5348,"name":"_defaultLanguage"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":5351,"end":5374,"object":{"type":"Identifier","start":5351,"end":5358,"name":"profile"},"property":{"type":"Identifier","start":5359,"end":5374,"name":"defaultLanguage"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":5404,"end":5497,"test":{"type":"MemberExpression","start":5408,"end":5425,"object":{"type":"Identifier","start":5408,"end":5415,"name":"profile"},"property":{"type":"Identifier","start":5416,"end":5425,"name":"languages"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":5427,"end":5497,"body":[{"type":"ExpressionStatement","start":5446,"end":5482,"expression":{"type":"AssignmentExpression","start":5446,"end":5481,"operator":"=","left":{"type":"MemberExpression","start":5446,"end":5461,"object":{"type":"ThisExpression","start":5446,"end":5450},"property":{"type":"Identifier","start":5451,"end":5461,"name":"_languages"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":5464,"end":5481,"object":{"type":"Identifier","start":5464,"end":5471,"name":"profile"},"property":{"type":"Identifier","start":5472,"end":5481,"name":"languages"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":5511,"end":5595,"test":{"type":"MemberExpression","start":5515,"end":5529,"object":{"type":"Identifier","start":5515,"end":5522,"name":"profile"},"property":{"type":"Identifier","start":5523,"end":5529,"name":"srcDir"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":5531,"end":5595,"body":[{"type":"ExpressionStatement","start":5550,"end":5580,"expression":{"type":"AssignmentExpression","start":5550,"end":5579,"operator":"=","left":{"type":"MemberExpression","start":5550,"end":5562,"object":{"type":"ThisExpression","start":5550,"end":5554},"property":{"type":"Identifier","start":5555,"end":5562,"name":"_srcDir"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":5565,"end":5579,"object":{"type":"Identifier","start":5565,"end":5572,"name":"profile"},"property":{"type":"Identifier","start":5573,"end":5579,"name":"srcDir"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":5609,"end":5817,"test":{"type":"MemberExpression","start":5613,"end":5643,"object":{"type":"Identifier","start":5613,"end":5620,"name":"profile"},"property":{"type":"Identifier","start":5621,"end":5643,"name":"angularCompilerOptions"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":5645,"end":5817,"body":[{"type":"IfStatement","start":5664,"end":5802,"test":{"type":"MemberExpression","start":5668,"end":5705,"object":{"type":"MemberExpression","start":5668,"end":5698,"object":{"type":"Identifier","start":5668,"end":5675,"name":"profile"},"property":{"type":"Identifier","start":5676,"end":5698,"name":"angularCompilerOptions"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5699,"end":5705,"name":"genDir"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":5707,"end":5802,"body":[{"type":"ExpressionStatement","start":5730,"end":5783,"expression":{"type":"AssignmentExpression","start":5730,"end":5782,"operator":"=","left":{"type":"MemberExpression","start":5730,"end":5742,"object":{"type":"ThisExpression","start":5730,"end":5734},"property":{"type":"Identifier","start":5735,"end":5742,"name":"_genDir"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":5745,"end":5782,"object":{"type":"MemberExpression","start":5745,"end":5775,"object":{"type":"Identifier","start":5745,"end":5752,"name":"profile"},"property":{"type":"Identifier","start":5753,"end":5775,"name":"angularCompilerOptions"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5776,"end":5782,"name":"genDir"},"computed":false,"optional":false}}}]},"alternate":null}]},"alternate":null},{"type":"IfStatement","start":5831,"end":5993,"test":{"type":"MemberExpression","start":5835,"end":5849,"object":{"type":"Identifier","start":5835,"end":5842,"name":"profile"},"property":{"type":"Identifier","start":5843,"end":5849,"name":"genDir"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":5851,"end":5993,"body":[{"type":"ExpressionStatement","start":5948,"end":5978,"expression":{"type":"AssignmentExpression","start":5948,"end":5977,"operator":"=","left":{"type":"MemberExpression","start":5948,"end":5960,"object":{"type":"ThisExpression","start":5948,"end":5952},"property":{"type":"Identifier","start":5953,"end":5960,"name":"_genDir"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":5963,"end":5977,"object":{"type":"Identifier","start":5963,"end":5970,"name":"profile"},"property":{"type":"Identifier","start":5971,"end":5977,"name":"genDir"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":6007,"end":6109,"test":{"type":"MemberExpression","start":6011,"end":6031,"object":{"type":"Identifier","start":6011,"end":6018,"name":"profile"},"property":{"type":"Identifier","start":6019,"end":6031,"name":"i18nBaseFile"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":6033,"end":6109,"body":[{"type":"ExpressionStatement","start":6052,"end":6094,"expression":{"type":"AssignmentExpression","start":6052,"end":6093,"operator":"=","left":{"type":"MemberExpression","start":6052,"end":6070,"object":{"type":"ThisExpression","start":6052,"end":6056},"property":{"type":"Identifier","start":6057,"end":6070,"name":"_i18nBaseFile"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":6073,"end":6093,"object":{"type":"Identifier","start":6073,"end":6080,"name":"profile"},"property":{"type":"Identifier","start":6081,"end":6093,"name":"i18nBaseFile"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":6123,"end":6213,"test":{"type":"MemberExpression","start":6127,"end":6143,"object":{"type":"Identifier","start":6127,"end":6134,"name":"profile"},"property":{"type":"Identifier","start":6135,"end":6143,"name":"i18nFile"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":6145,"end":6213,"body":[{"type":"ExpressionStatement","start":6164,"end":6198,"expression":{"type":"AssignmentExpression","start":6164,"end":6197,"operator":"=","left":{"type":"MemberExpression","start":6164,"end":6178,"object":{"type":"ThisExpression","start":6164,"end":6168},"property":{"type":"Identifier","start":6169,"end":6178,"name":"_i18nFile"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":6181,"end":6197,"object":{"type":"Identifier","start":6181,"end":6188,"name":"profile"},"property":{"type":"Identifier","start":6189,"end":6197,"name":"i18nFile"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":6227,"end":6323,"test":{"type":"MemberExpression","start":6231,"end":6249,"object":{"type":"Identifier","start":6231,"end":6238,"name":"profile"},"property":{"type":"Identifier","start":6239,"end":6249,"name":"i18nFormat"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":6251,"end":6323,"body":[{"type":"ExpressionStatement","start":6270,"end":6308,"expression":{"type":"AssignmentExpression","start":6270,"end":6307,"operator":"=","left":{"type":"MemberExpression","start":6270,"end":6286,"object":{"type":"ThisExpression","start":6270,"end":6274},"property":{"type":"Identifier","start":6275,"end":6286,"name":"_i18nFormat"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":6289,"end":6307,"object":{"type":"Identifier","start":6289,"end":6296,"name":"profile"},"property":{"type":"Identifier","start":6297,"end":6307,"name":"i18nFormat"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":6337,"end":6427,"test":{"type":"MemberExpression","start":6341,"end":6357,"object":{"type":"Identifier","start":6341,"end":6348,"name":"profile"},"property":{"type":"Identifier","start":6349,"end":6357,"name":"encoding"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":6359,"end":6427,"body":[{"type":"ExpressionStatement","start":6378,"end":6412,"expression":{"type":"AssignmentExpression","start":6378,"end":6411,"operator":"=","left":{"type":"MemberExpression","start":6378,"end":6392,"object":{"type":"ThisExpression","start":6378,"end":6382},"property":{"type":"Identifier","start":6383,"end":6392,"name":"_encoding"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":6395,"end":6411,"object":{"type":"Identifier","start":6395,"end":6402,"name":"profile"},"property":{"type":"Identifier","start":6403,"end":6411,"name":"encoding"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":6441,"end":6572,"test":{"type":"UnaryExpression","start":6445,"end":6488,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":6446,"end":6488,"callee":{"type":"Identifier","start":6446,"end":6463,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":6464,"end":6487,"object":{"type":"Identifier","start":6464,"end":6471,"name":"profile"},"property":{"type":"Identifier","start":6472,"end":6487,"name":"removeUnusedIds"},"computed":false,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":6490,"end":6572,"body":[{"type":"ExpressionStatement","start":6509,"end":6557,"expression":{"type":"AssignmentExpression","start":6509,"end":6556,"operator":"=","left":{"type":"MemberExpression","start":6509,"end":6530,"object":{"type":"ThisExpression","start":6509,"end":6513},"property":{"type":"Identifier","start":6514,"end":6530,"name":"_removeUnusedIds"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":6533,"end":6556,"object":{"type":"Identifier","start":6533,"end":6540,"name":"profile"},"property":{"type":"Identifier","start":6541,"end":6556,"name":"removeUnusedIds"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":6586,"end":6729,"test":{"type":"UnaryExpression","start":6590,"end":6637,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":6591,"end":6637,"callee":{"type":"Identifier","start":6591,"end":6608,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":6609,"end":6636,"object":{"type":"Identifier","start":6609,"end":6616,"name":"profile"},"property":{"type":"Identifier","start":6617,"end":6636,"name":"supportNgxTranslate"},"computed":false,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":6639,"end":6729,"body":[{"type":"ExpressionStatement","start":6658,"end":6714,"expression":{"type":"AssignmentExpression","start":6658,"end":6713,"operator":"=","left":{"type":"MemberExpression","start":6658,"end":6683,"object":{"type":"ThisExpression","start":6658,"end":6662},"property":{"type":"Identifier","start":6663,"end":6683,"name":"_supportNgxTranslate"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":6686,"end":6713,"object":{"type":"Identifier","start":6686,"end":6693,"name":"profile"},"property":{"type":"Identifier","start":6694,"end":6713,"name":"supportNgxTranslate"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":6743,"end":6916,"test":{"type":"UnaryExpression","start":6747,"end":6804,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":6748,"end":6804,"callee":{"type":"Identifier","start":6748,"end":6765,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":6766,"end":6803,"object":{"type":"Identifier","start":6766,"end":6773,"name":"profile"},"property":{"type":"Identifier","start":6774,"end":6803,"name":"ngxTranslateExtractionPattern"},"computed":false,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":6806,"end":6916,"body":[{"type":"ExpressionStatement","start":6825,"end":6901,"expression":{"type":"AssignmentExpression","start":6825,"end":6900,"operator":"=","left":{"type":"MemberExpression","start":6825,"end":6860,"object":{"type":"ThisExpression","start":6825,"end":6829},"property":{"type":"Identifier","start":6830,"end":6860,"name":"_ngxTranslateExtractionPattern"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":6863,"end":6900,"object":{"type":"Identifier","start":6863,"end":6870,"name":"profile"},"property":{"type":"Identifier","start":6871,"end":6900,"name":"ngxTranslateExtractionPattern"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":6930,"end":7067,"test":{"type":"UnaryExpression","start":6934,"end":6979,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":6935,"end":6979,"callee":{"type":"Identifier","start":6935,"end":6952,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":6953,"end":6978,"object":{"type":"Identifier","start":6953,"end":6960,"name":"profile"},"property":{"type":"Identifier","start":6961,"end":6978,"name":"useSourceAsTarget"},"computed":false,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":6981,"end":7067,"body":[{"type":"ExpressionStatement","start":7000,"end":7052,"expression":{"type":"AssignmentExpression","start":7000,"end":7051,"operator":"=","left":{"type":"MemberExpression","start":7000,"end":7023,"object":{"type":"ThisExpression","start":7000,"end":7004},"property":{"type":"Identifier","start":7005,"end":7023,"name":"_useSourceAsTarget"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":7026,"end":7051,"object":{"type":"Identifier","start":7026,"end":7033,"name":"profile"},"property":{"type":"Identifier","start":7034,"end":7051,"name":"useSourceAsTarget"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":7081,"end":7206,"test":{"type":"UnaryExpression","start":7085,"end":7126,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":7086,"end":7126,"callee":{"type":"Identifier","start":7086,"end":7103,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":7104,"end":7125,"object":{"type":"Identifier","start":7104,"end":7111,"name":"profile"},"property":{"type":"Identifier","start":7112,"end":7125,"name":"targetPraefix"},"computed":false,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":7128,"end":7206,"body":[{"type":"ExpressionStatement","start":7147,"end":7191,"expression":{"type":"AssignmentExpression","start":7147,"end":7190,"operator":"=","left":{"type":"MemberExpression","start":7147,"end":7166,"object":{"type":"ThisExpression","start":7147,"end":7151},"property":{"type":"Identifier","start":7152,"end":7166,"name":"_targetPraefix"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":7169,"end":7190,"object":{"type":"Identifier","start":7169,"end":7176,"name":"profile"},"property":{"type":"Identifier","start":7177,"end":7190,"name":"targetPraefix"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":7220,"end":7342,"test":{"type":"UnaryExpression","start":7224,"end":7264,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":7225,"end":7264,"callee":{"type":"Identifier","start":7225,"end":7242,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":7243,"end":7263,"object":{"type":"Identifier","start":7243,"end":7250,"name":"profile"},"property":{"type":"Identifier","start":7251,"end":7263,"name":"targetSuffix"},"computed":false,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":7266,"end":7342,"body":[{"type":"ExpressionStatement","start":7285,"end":7327,"expression":{"type":"AssignmentExpression","start":7285,"end":7326,"operator":"=","left":{"type":"MemberExpression","start":7285,"end":7303,"object":{"type":"ThisExpression","start":7285,"end":7289},"property":{"type":"Identifier","start":7290,"end":7303,"name":"_targetSuffix"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":7306,"end":7326,"object":{"type":"Identifier","start":7306,"end":7313,"name":"profile"},"property":{"type":"Identifier","start":7314,"end":7326,"name":"targetSuffix"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":7356,"end":7481,"test":{"type":"UnaryExpression","start":7360,"end":7401,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":7361,"end":7401,"callee":{"type":"Identifier","start":7361,"end":7378,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":7379,"end":7400,"object":{"type":"Identifier","start":7379,"end":7386,"name":"profile"},"property":{"type":"Identifier","start":7387,"end":7400,"name":"autotranslate"},"computed":false,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":7403,"end":7481,"body":[{"type":"ExpressionStatement","start":7422,"end":7466,"expression":{"type":"AssignmentExpression","start":7422,"end":7465,"operator":"=","left":{"type":"MemberExpression","start":7422,"end":7441,"object":{"type":"ThisExpression","start":7422,"end":7426},"property":{"type":"Identifier","start":7427,"end":7441,"name":"_autotranslate"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":7444,"end":7465,"object":{"type":"Identifier","start":7444,"end":7451,"name":"profile"},"property":{"type":"Identifier","start":7452,"end":7465,"name":"autotranslate"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":7495,"end":7623,"test":{"type":"UnaryExpression","start":7499,"end":7541,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":7500,"end":7541,"callee":{"type":"Identifier","start":7500,"end":7517,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":7518,"end":7540,"object":{"type":"Identifier","start":7518,"end":7525,"name":"profile"},"property":{"type":"Identifier","start":7526,"end":7540,"name":"beautifyOutput"},"computed":false,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":7543,"end":7623,"body":[{"type":"ExpressionStatement","start":7562,"end":7608,"expression":{"type":"AssignmentExpression","start":7562,"end":7607,"operator":"=","left":{"type":"MemberExpression","start":7562,"end":7582,"object":{"type":"ThisExpression","start":7562,"end":7566},"property":{"type":"Identifier","start":7567,"end":7582,"name":"_beautifyOutput"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":7585,"end":7607,"object":{"type":"Identifier","start":7585,"end":7592,"name":"profile"},"property":{"type":"Identifier","start":7593,"end":7607,"name":"beautifyOutput"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":7637,"end":7762,"test":{"type":"UnaryExpression","start":7641,"end":7682,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":7642,"end":7682,"callee":{"type":"Identifier","start":7642,"end":7659,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":7660,"end":7681,"object":{"type":"Identifier","start":7660,"end":7667,"name":"profile"},"property":{"type":"Identifier","start":7668,"end":7681,"name":"preserveOrder"},"computed":false,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":7684,"end":7762,"body":[{"type":"ExpressionStatement","start":7703,"end":7747,"expression":{"type":"AssignmentExpression","start":7703,"end":7746,"operator":"=","left":{"type":"MemberExpression","start":7703,"end":7722,"object":{"type":"ThisExpression","start":7703,"end":7707},"property":{"type":"Identifier","start":7708,"end":7722,"name":"_preserveOrder"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":7725,"end":7746,"object":{"type":"Identifier","start":7725,"end":7732,"name":"profile"},"property":{"type":"Identifier","start":7733,"end":7746,"name":"preserveOrder"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":7776,"end":7880,"test":{"type":"UnaryExpression","start":7780,"end":7814,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":7781,"end":7814,"callee":{"type":"Identifier","start":7781,"end":7798,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":7799,"end":7813,"object":{"type":"Identifier","start":7799,"end":7806,"name":"profile"},"property":{"type":"Identifier","start":7807,"end":7813,"name":"apikey"},"computed":false,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":7816,"end":7880,"body":[{"type":"ExpressionStatement","start":7835,"end":7865,"expression":{"type":"AssignmentExpression","start":7835,"end":7864,"operator":"=","left":{"type":"MemberExpression","start":7835,"end":7847,"object":{"type":"ThisExpression","start":7835,"end":7839},"property":{"type":"Identifier","start":7840,"end":7847,"name":"_apikey"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":7850,"end":7864,"object":{"type":"Identifier","start":7850,"end":7857,"name":"profile"},"property":{"type":"Identifier","start":7858,"end":7864,"name":"apikey"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":7894,"end":8010,"test":{"type":"UnaryExpression","start":7898,"end":7936,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":7899,"end":7936,"callee":{"type":"Identifier","start":7899,"end":7916,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":7917,"end":7935,"object":{"type":"Identifier","start":7917,"end":7924,"name":"profile"},"property":{"type":"Identifier","start":7925,"end":7935,"name":"apikeyfile"},"computed":false,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":7938,"end":8010,"body":[{"type":"ExpressionStatement","start":7957,"end":7995,"expression":{"type":"AssignmentExpression","start":7957,"end":7994,"operator":"=","left":{"type":"MemberExpression","start":7957,"end":7973,"object":{"type":"ThisExpression","start":7957,"end":7961},"property":{"type":"Identifier","start":7962,"end":7973,"name":"_apikeyfile"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":7976,"end":7994,"object":{"type":"Identifier","start":7976,"end":7983,"name":"profile"},"property":{"type":"Identifier","start":7984,"end":7994,"name":"apikeyfile"},"computed":false,"optional":false}}}]},"alternate":null}]},"alternate":{"type":"BlockStatement","start":8036,"end":8149,"body":[{"type":"ExpressionStatement","start":8051,"end":8138,"expression":{"type":"CallExpression","start":8051,"end":8137,"callee":{"type":"MemberExpression","start":8051,"end":8074,"object":{"type":"MemberExpression","start":8051,"end":8069,"object":{"type":"ThisExpression","start":8051,"end":8055},"property":{"type":"Identifier","start":8056,"end":8069,"name":"warningsFound"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8070,"end":8074,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8075,"end":8136,"value":"did not find \"xliffmergeOptions\" in profile, using defaults","raw":"'did not find \"xliffmergeOptions\" in profile, using defaults'"}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":8334,"end":11701,"static":false,"computed":false,"key":{"type":"Identifier","start":8334,"end":8349,"name":"checkParameters"},"kind":"method","value":{"type":"FunctionExpression","start":8349,"end":11701,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":8352,"end":11701,"body":[{"type":"ExpressionStatement","start":8363,"end":8412,"expression":{"type":"CallExpression","start":8363,"end":8411,"callee":{"type":"MemberExpression","start":8363,"end":8387,"object":{"type":"ThisExpression","start":8363,"end":8367},"property":{"type":"Identifier","start":8368,"end":8387,"name":"checkLanguageSyntax"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":8388,"end":8410,"callee":{"type":"MemberExpression","start":8388,"end":8408,"object":{"type":"ThisExpression","start":8388,"end":8392},"property":{"type":"Identifier","start":8393,"end":8408,"name":"defaultLanguage"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"IfStatement","start":8422,"end":8552,"test":{"type":"BinaryExpression","start":8426,"end":8455,"left":{"type":"MemberExpression","start":8426,"end":8449,"object":{"type":"CallExpression","start":8426,"end":8442,"callee":{"type":"MemberExpression","start":8426,"end":8440,"object":{"type":"ThisExpression","start":8426,"end":8430},"property":{"type":"Identifier","start":8431,"end":8440,"name":"languages"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":8443,"end":8449,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":8454,"end":8455,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":8457,"end":8552,"body":[{"type":"ExpressionStatement","start":8472,"end":8541,"expression":{"type":"CallExpression","start":8472,"end":8540,"callee":{"type":"MemberExpression","start":8472,"end":8493,"object":{"type":"MemberExpression","start":8472,"end":8488,"object":{"type":"ThisExpression","start":8472,"end":8476},"property":{"type":"Identifier","start":8477,"end":8488,"name":"errorsFound"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8489,"end":8493,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":8494,"end":8539,"callee":{"type":"Identifier","start":8498,"end":8513,"name":"XliffMergeError"},"arguments":[{"type":"Literal","start":8514,"end":8538,"value":"no languages specified","raw":"'no languages specified'"}]}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":8562,"end":8656,"expression":{"type":"CallExpression","start":8562,"end":8655,"callee":{"type":"MemberExpression","start":8562,"end":8586,"object":{"type":"CallExpression","start":8562,"end":8578,"callee":{"type":"MemberExpression","start":8562,"end":8576,"object":{"type":"ThisExpression","start":8562,"end":8566},"property":{"type":"Identifier","start":8567,"end":8576,"name":"languages"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":8579,"end":8586,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":8587,"end":8654,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8588,"end":8592,"name":"lang"}],"body":{"type":"BlockStatement","start":8597,"end":8654,"body":[{"type":"ExpressionStatement","start":8612,"end":8643,"expression":{"type":"CallExpression","start":8612,"end":8642,"callee":{"type":"MemberExpression","start":8612,"end":8636,"object":{"type":"ThisExpression","start":8612,"end":8616},"property":{"type":"Identifier","start":8617,"end":8636,"name":"checkLanguageSyntax"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8637,"end":8641,"name":"lang"}],"optional":false}}]}}],"optional":false}},{"type":"VariableDeclaration","start":8666,"end":8676,"declarations":[{"type":"VariableDeclarator","start":8670,"end":8675,"id":{"type":"Identifier","start":8670,"end":8675,"name":"stats"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":8686,"end":8694,"declarations":[{"type":"VariableDeclarator","start":8690,"end":8693,"id":{"type":"Identifier","start":8690,"end":8693,"name":"err"},"init":null}],"kind":"let"},{"type":"TryStatement","start":8737,"end":8856,"block":{"type":"BlockStatement","start":8741,"end":8802,"body":[{"type":"ExpressionStatement","start":8756,"end":8791,"expression":{"type":"AssignmentExpression","start":8756,"end":8790,"operator":"=","left":{"type":"Identifier","start":8756,"end":8761,"name":"stats"},"right":{"type":"CallExpression","start":8764,"end":8790,"callee":{"type":"MemberExpression","start":8764,"end":8775,"object":{"type":"Identifier","start":8764,"end":8766,"name":"fs"},"property":{"type":"Identifier","start":8767,"end":8775,"name":"statSync"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":8776,"end":8789,"callee":{"type":"MemberExpression","start":8776,"end":8787,"object":{"type":"ThisExpression","start":8776,"end":8780},"property":{"type":"Identifier","start":8781,"end":8787,"name":"srcDir"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}}]},"handler":{"type":"CatchClause","start":8812,"end":8856,"param":{"type":"Identifier","start":8819,"end":8820,"name":"e"},"body":{"type":"BlockStatement","start":8822,"end":8856,"body":[{"type":"ExpressionStatement","start":8837,"end":8845,"expression":{"type":"AssignmentExpression","start":8837,"end":8844,"operator":"=","left":{"type":"Identifier","start":8837,"end":8840,"name":"err"},"right":{"type":"Identifier","start":8843,"end":8844,"name":"e"}}}]}},"finalizer":null},{"type":"IfStatement","start":8866,"end":9023,"test":{"type":"LogicalExpression","start":8870,"end":8899,"left":{"type":"UnaryExpression","start":8870,"end":8875,"operator":"!","prefix":true,"argument":{"type":"UnaryExpression","start":8871,"end":8875,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":8872,"end":8875,"name":"err"}}},"operator":"||","right":{"type":"UnaryExpression","start":8879,"end":8899,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":8880,"end":8899,"callee":{"type":"MemberExpression","start":8880,"end":8897,"object":{"type":"Identifier","start":8880,"end":8885,"name":"stats"},"property":{"type":"Identifier","start":8886,"end":8897,"name":"isDirectory"},"computed":false,"optional":false},"arguments":[],"optional":false}}},"consequent":{"type":"BlockStatement","start":8901,"end":9023,"body":[{"type":"ExpressionStatement","start":8916,"end":9012,"expression":{"type":"CallExpression","start":8916,"end":9011,"callee":{"type":"MemberExpression","start":8916,"end":8937,"object":{"type":"MemberExpression","start":8916,"end":8932,"object":{"type":"ThisExpression","start":8916,"end":8920},"property":{"type":"Identifier","start":8921,"end":8932,"name":"errorsFound"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8933,"end":8937,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":8938,"end":9010,"callee":{"type":"Identifier","start":8942,"end":8957,"name":"XliffMergeError"},"arguments":[{"type":"BinaryExpression","start":8958,"end":9009,"left":{"type":"BinaryExpression","start":8958,"end":8984,"left":{"type":"Literal","start":8958,"end":8968,"value":"srcDir \"","raw":"'srcDir \"'"},"operator":"+","right":{"type":"CallExpression","start":8971,"end":8984,"callee":{"type":"MemberExpression","start":8971,"end":8982,"object":{"type":"ThisExpression","start":8971,"end":8975},"property":{"type":"Identifier","start":8976,"end":8982,"name":"srcDir"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"+","right":{"type":"Literal","start":8987,"end":9009,"value":"\" is not a directory","raw":"'\" is not a directory'"}}]}],"optional":false}}]},"alternate":null},{"type":"TryStatement","start":9066,"end":9185,"block":{"type":"BlockStatement","start":9070,"end":9131,"body":[{"type":"ExpressionStatement","start":9085,"end":9120,"expression":{"type":"AssignmentExpression","start":9085,"end":9119,"operator":"=","left":{"type":"Identifier","start":9085,"end":9090,"name":"stats"},"right":{"type":"CallExpression","start":9093,"end":9119,"callee":{"type":"MemberExpression","start":9093,"end":9104,"object":{"type":"Identifier","start":9093,"end":9095,"name":"fs"},"property":{"type":"Identifier","start":9096,"end":9104,"name":"statSync"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9105,"end":9118,"callee":{"type":"MemberExpression","start":9105,"end":9116,"object":{"type":"ThisExpression","start":9105,"end":9109},"property":{"type":"Identifier","start":9110,"end":9116,"name":"genDir"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}}]},"handler":{"type":"CatchClause","start":9141,"end":9185,"param":{"type":"Identifier","start":9148,"end":9149,"name":"e"},"body":{"type":"BlockStatement","start":9151,"end":9185,"body":[{"type":"ExpressionStatement","start":9166,"end":9174,"expression":{"type":"AssignmentExpression","start":9166,"end":9173,"operator":"=","left":{"type":"Identifier","start":9166,"end":9169,"name":"err"},"right":{"type":"Identifier","start":9172,"end":9173,"name":"e"}}}]}},"finalizer":null},{"type":"IfStatement","start":9195,"end":9352,"test":{"type":"LogicalExpression","start":9199,"end":9228,"left":{"type":"UnaryExpression","start":9199,"end":9204,"operator":"!","prefix":true,"argument":{"type":"UnaryExpression","start":9200,"end":9204,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":9201,"end":9204,"name":"err"}}},"operator":"||","right":{"type":"UnaryExpression","start":9208,"end":9228,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":9209,"end":9228,"callee":{"type":"MemberExpression","start":9209,"end":9226,"object":{"type":"Identifier","start":9209,"end":9214,"name":"stats"},"property":{"type":"Identifier","start":9215,"end":9226,"name":"isDirectory"},"computed":false,"optional":false},"arguments":[],"optional":false}}},"consequent":{"type":"BlockStatement","start":9230,"end":9352,"body":[{"type":"ExpressionStatement","start":9245,"end":9341,"expression":{"type":"CallExpression","start":9245,"end":9340,"callee":{"type":"MemberExpression","start":9245,"end":9266,"object":{"type":"MemberExpression","start":9245,"end":9261,"object":{"type":"ThisExpression","start":9245,"end":9249},"property":{"type":"Identifier","start":9250,"end":9261,"name":"errorsFound"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9262,"end":9266,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":9267,"end":9339,"callee":{"type":"Identifier","start":9271,"end":9286,"name":"XliffMergeError"},"arguments":[{"type":"BinaryExpression","start":9287,"end":9338,"left":{"type":"BinaryExpression","start":9287,"end":9313,"left":{"type":"Literal","start":9287,"end":9297,"value":"genDir \"","raw":"'genDir \"'"},"operator":"+","right":{"type":"CallExpression","start":9300,"end":9313,"callee":{"type":"MemberExpression","start":9300,"end":9311,"object":{"type":"ThisExpression","start":9300,"end":9304},"property":{"type":"Identifier","start":9305,"end":9311,"name":"genDir"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"+","right":{"type":"Literal","start":9316,"end":9338,"value":"\" is not a directory","raw":"'\" is not a directory'"}}]}],"optional":false}}]},"alternate":null},{"type":"TryStatement","start":9397,"end":9622,"block":{"type":"BlockStatement","start":9401,"end":9477,"body":[{"type":"ExpressionStatement","start":9416,"end":9466,"expression":{"type":"CallExpression","start":9416,"end":9465,"callee":{"type":"MemberExpression","start":9416,"end":9429,"object":{"type":"Identifier","start":9416,"end":9418,"name":"fs"},"property":{"type":"Identifier","start":9419,"end":9429,"name":"accessSync"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9430,"end":9445,"callee":{"type":"MemberExpression","start":9430,"end":9443,"object":{"type":"ThisExpression","start":9430,"end":9434},"property":{"type":"Identifier","start":9435,"end":9443,"name":"i18nFile"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"MemberExpression","start":9447,"end":9464,"object":{"type":"MemberExpression","start":9447,"end":9459,"object":{"type":"Identifier","start":9447,"end":9449,"name":"fs"},"property":{"type":"Identifier","start":9450,"end":9459,"name":"constants"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9460,"end":9464,"name":"R_OK"},"computed":false,"optional":false}],"optional":false}}]},"handler":{"type":"CatchClause","start":9487,"end":9622,"param":{"type":"Identifier","start":9494,"end":9497,"name":"err"},"body":{"type":"BlockStatement","start":9499,"end":9622,"body":[{"type":"ExpressionStatement","start":9514,"end":9611,"expression":{"type":"CallExpression","start":9514,"end":9610,"callee":{"type":"MemberExpression","start":9514,"end":9535,"object":{"type":"MemberExpression","start":9514,"end":9530,"object":{"type":"ThisExpression","start":9514,"end":9518},"property":{"type":"Identifier","start":9519,"end":9530,"name":"errorsFound"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9531,"end":9535,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":9536,"end":9609,"callee":{"type":"Identifier","start":9540,"end":9555,"name":"XliffMergeError"},"arguments":[{"type":"BinaryExpression","start":9556,"end":9608,"left":{"type":"BinaryExpression","start":9556,"end":9586,"left":{"type":"Literal","start":9556,"end":9568,"value":"i18nFile \"","raw":"'i18nFile \"'"},"operator":"+","right":{"type":"CallExpression","start":9571,"end":9586,"callee":{"type":"MemberExpression","start":9571,"end":9584,"object":{"type":"ThisExpression","start":9571,"end":9575},"property":{"type":"Identifier","start":9576,"end":9584,"name":"i18nFile"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"+","right":{"type":"Literal","start":9589,"end":9608,"value":"\" is not readable","raw":"'\" is not readable'"}}]}],"optional":false}}]}},"finalizer":null},{"type":"IfStatement","start":9679,"end":9931,"test":{"type":"UnaryExpression","start":9683,"end":9776,"operator":"!","prefix":true,"argument":{"type":"LogicalExpression","start":9685,"end":9775,"left":{"type":"LogicalExpression","start":9685,"end":9744,"left":{"type":"BinaryExpression","start":9685,"end":9712,"left":{"type":"CallExpression","start":9685,"end":9702,"callee":{"type":"MemberExpression","start":9685,"end":9700,"object":{"type":"ThisExpression","start":9685,"end":9689},"property":{"type":"Identifier","start":9690,"end":9700,"name":"i18nFormat"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"===","right":{"type":"Literal","start":9707,"end":9712,"value":"xlf","raw":"'xlf'"}},"operator":"||","right":{"type":"BinaryExpression","start":9716,"end":9744,"left":{"type":"CallExpression","start":9716,"end":9733,"callee":{"type":"MemberExpression","start":9716,"end":9731,"object":{"type":"ThisExpression","start":9716,"end":9720},"property":{"type":"Identifier","start":9721,"end":9731,"name":"i18nFormat"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"===","right":{"type":"Literal","start":9738,"end":9744,"value":"xlf2","raw":"'xlf2'"}}},"operator":"||","right":{"type":"BinaryExpression","start":9748,"end":9775,"left":{"type":"CallExpression","start":9748,"end":9765,"callee":{"type":"MemberExpression","start":9748,"end":9763,"object":{"type":"ThisExpression","start":9748,"end":9752},"property":{"type":"Identifier","start":9753,"end":9763,"name":"i18nFormat"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"===","right":{"type":"Literal","start":9770,"end":9775,"value":"xmb","raw":"'xmb'"}}}},"consequent":{"type":"BlockStatement","start":9778,"end":9931,"body":[{"type":"ExpressionStatement","start":9793,"end":9920,"expression":{"type":"CallExpression","start":9793,"end":9919,"callee":{"type":"MemberExpression","start":9793,"end":9814,"object":{"type":"MemberExpression","start":9793,"end":9809,"object":{"type":"ThisExpression","start":9793,"end":9797},"property":{"type":"Identifier","start":9798,"end":9809,"name":"errorsFound"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9810,"end":9814,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":9815,"end":9918,"callee":{"type":"Identifier","start":9819,"end":9834,"name":"XliffMergeError"},"arguments":[{"type":"BinaryExpression","start":9835,"end":9917,"left":{"type":"BinaryExpression","start":9835,"end":9869,"left":{"type":"Literal","start":9835,"end":9849,"value":"i18nFormat \"","raw":"'i18nFormat \"'"},"operator":"+","right":{"type":"CallExpression","start":9852,"end":9869,"callee":{"type":"MemberExpression","start":9852,"end":9867,"object":{"type":"ThisExpression","start":9852,"end":9856},"property":{"type":"Identifier","start":9857,"end":9867,"name":"i18nFormat"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"+","right":{"type":"Literal","start":9872,"end":9917,"value":"\" invalid, must be \"xlf\" or \"xlf2\" or \"xmb\"","raw":"'\" invalid, must be \"xlf\" or \"xlf2\" or \"xmb\"'"}}]}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":9984,"end":10150,"test":{"type":"LogicalExpression","start":9988,"end":10026,"left":{"type":"CallExpression","start":9988,"end":10008,"callee":{"type":"MemberExpression","start":9988,"end":10006,"object":{"type":"ThisExpression","start":9988,"end":9992},"property":{"type":"Identifier","start":9993,"end":10006,"name":"autotranslate"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"&&","right":{"type":"UnaryExpression","start":10012,"end":10026,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":10013,"end":10026,"callee":{"type":"MemberExpression","start":10013,"end":10024,"object":{"type":"ThisExpression","start":10013,"end":10017},"property":{"type":"Identifier","start":10018,"end":10024,"name":"apikey"},"computed":false,"optional":false},"arguments":[],"optional":false}}},"consequent":{"type":"BlockStatement","start":10028,"end":10150,"body":[{"type":"ExpressionStatement","start":10043,"end":10139,"expression":{"type":"CallExpression","start":10043,"end":10138,"callee":{"type":"MemberExpression","start":10043,"end":10064,"object":{"type":"MemberExpression","start":10043,"end":10059,"object":{"type":"ThisExpression","start":10043,"end":10047},"property":{"type":"Identifier","start":10048,"end":10059,"name":"errorsFound"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10060,"end":10064,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":10065,"end":10137,"callee":{"type":"Identifier","start":10069,"end":10084,"name":"XliffMergeError"},"arguments":[{"type":"Literal","start":10085,"end":10136,"value":"autotranslate requires an API key, please set one","raw":"'autotranslate requires an API key, please set one'"}]}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":10230,"end":10718,"expression":{"type":"CallExpression","start":10230,"end":10717,"callee":{"type":"MemberExpression","start":10230,"end":10268,"object":{"type":"CallExpression","start":10230,"end":10260,"callee":{"type":"MemberExpression","start":10230,"end":10258,"object":{"type":"ThisExpression","start":10230,"end":10234},"property":{"type":"Identifier","start":10235,"end":10258,"name":"autotranslatedLanguages"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":10261,"end":10268,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":10269,"end":10716,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":10270,"end":10274,"name":"lang"}],"body":{"type":"BlockStatement","start":10279,"end":10716,"body":[{"type":"IfStatement","start":10294,"end":10480,"test":{"type":"BinaryExpression","start":10298,"end":10332,"left":{"type":"CallExpression","start":10298,"end":10328,"callee":{"type":"MemberExpression","start":10298,"end":10322,"object":{"type":"CallExpression","start":10298,"end":10314,"callee":{"type":"MemberExpression","start":10298,"end":10312,"object":{"type":"ThisExpression","start":10298,"end":10302},"property":{"type":"Identifier","start":10303,"end":10312,"name":"languages"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":10315,"end":10322,"name":"indexOf"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10323,"end":10327,"name":"lang"}],"optional":false},"operator":"<","right":{"type":"Literal","start":10331,"end":10332,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":10334,"end":10480,"body":[{"type":"ExpressionStatement","start":10353,"end":10465,"expression":{"type":"CallExpression","start":10353,"end":10464,"callee":{"type":"MemberExpression","start":10353,"end":10374,"object":{"type":"MemberExpression","start":10353,"end":10369,"object":{"type":"ThisExpression","start":10353,"end":10357},"property":{"type":"Identifier","start":10358,"end":10369,"name":"errorsFound"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10370,"end":10374,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":10375,"end":10463,"callee":{"type":"Identifier","start":10379,"end":10394,"name":"XliffMergeError"},"arguments":[{"type":"BinaryExpression","start":10395,"end":10462,"left":{"type":"BinaryExpression","start":10395,"end":10428,"left":{"type":"Literal","start":10395,"end":10421,"value":"autotranslate language \"","raw":"'autotranslate language \"'"},"operator":"+","right":{"type":"Identifier","start":10424,"end":10428,"name":"lang"}},"operator":"+","right":{"type":"Literal","start":10431,"end":10462,"value":"\" is not in list of languages","raw":"'\" is not in list of languages'"}}]}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":10494,"end":10705,"test":{"type":"BinaryExpression","start":10498,"end":10529,"left":{"type":"Identifier","start":10498,"end":10502,"name":"lang"},"operator":"===","right":{"type":"CallExpression","start":10507,"end":10529,"callee":{"type":"MemberExpression","start":10507,"end":10527,"object":{"type":"ThisExpression","start":10507,"end":10511},"property":{"type":"Identifier","start":10512,"end":10527,"name":"defaultLanguage"},"computed":false,"optional":false},"arguments":[],"optional":false}},"consequent":{"type":"BlockStatement","start":10531,"end":10705,"body":[{"type":"ExpressionStatement","start":10550,"end":10690,"expression":{"type":"CallExpression","start":10550,"end":10689,"callee":{"type":"MemberExpression","start":10550,"end":10571,"object":{"type":"MemberExpression","start":10550,"end":10566,"object":{"type":"ThisExpression","start":10550,"end":10554},"property":{"type":"Identifier","start":10555,"end":10566,"name":"errorsFound"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10567,"end":10571,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":10572,"end":10688,"callee":{"type":"Identifier","start":10576,"end":10591,"name":"XliffMergeError"},"arguments":[{"type":"BinaryExpression","start":10592,"end":10687,"left":{"type":"BinaryExpression","start":10592,"end":10625,"left":{"type":"Literal","start":10592,"end":10618,"value":"autotranslate language \"","raw":"'autotranslate language \"'"},"operator":"+","right":{"type":"Identifier","start":10621,"end":10625,"name":"lang"}},"operator":"+","right":{"type":"Literal","start":10628,"end":10687,"value":"\" cannot be translated, because it is the source language","raw":"'\" cannot be translated, because it is the source language'"}}]}],"optional":false}}]},"alternate":null}]}}],"optional":false}},{"type":"IfStatement","start":10768,"end":11143,"test":{"type":"CallExpression","start":10772,"end":10798,"callee":{"type":"MemberExpression","start":10772,"end":10796,"object":{"type":"ThisExpression","start":10772,"end":10776},"property":{"type":"Identifier","start":10777,"end":10796,"name":"supportNgxTranslate"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":10800,"end":11143,"body":[{"type":"VariableDeclaration","start":10815,"end":10908,"declarations":[{"type":"VariableDeclarator","start":10821,"end":10907,"id":{"type":"Identifier","start":10821,"end":10832,"name":"checkResult"},"init":{"type":"CallExpression","start":10835,"end":10907,"callee":{"type":"MemberExpression","start":10835,"end":10869,"object":{"type":"Identifier","start":10835,"end":10856,"name":"NgxTranslateExtractor"},"property":{"type":"Identifier","start":10857,"end":10869,"name":"checkPattern"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":10870,"end":10906,"callee":{"type":"MemberExpression","start":10870,"end":10904,"object":{"type":"ThisExpression","start":10870,"end":10874},"property":{"type":"Identifier","start":10875,"end":10904,"name":"ngxTranslateExtractionPattern"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":10922,"end":11132,"test":{"type":"UnaryExpression","start":10926,"end":10957,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":10927,"end":10957,"callee":{"type":"Identifier","start":10927,"end":10944,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":10945,"end":10956,"name":"checkResult"}],"optional":false}},"consequent":{"type":"BlockStatement","start":10959,"end":11132,"body":[{"type":"ExpressionStatement","start":10978,"end":11117,"expression":{"type":"CallExpression","start":10978,"end":11116,"callee":{"type":"MemberExpression","start":10978,"end":10999,"object":{"type":"MemberExpression","start":10978,"end":10994,"object":{"type":"ThisExpression","start":10978,"end":10982},"property":{"type":"Identifier","start":10983,"end":10994,"name":"errorsFound"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10995,"end":10999,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":11000,"end":11115,"callee":{"type":"Identifier","start":11004,"end":11019,"name":"XliffMergeError"},"arguments":[{"type":"BinaryExpression","start":11020,"end":11114,"left":{"type":"BinaryExpression","start":11020,"end":11100,"left":{"type":"BinaryExpression","start":11020,"end":11092,"left":{"type":"Literal","start":11020,"end":11053,"value":"ngxTranslateExtractionPattern \"","raw":"'ngxTranslateExtractionPattern \"'"},"operator":"+","right":{"type":"CallExpression","start":11056,"end":11092,"callee":{"type":"MemberExpression","start":11056,"end":11090,"object":{"type":"ThisExpression","start":11056,"end":11060},"property":{"type":"Identifier","start":11061,"end":11090,"name":"ngxTranslateExtractionPattern"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"+","right":{"type":"Literal","start":11095,"end":11100,"value":"\": ","raw":"'\": '"}},"operator":"+","right":{"type":"Identifier","start":11103,"end":11114,"name":"checkResult"}}]}],"optional":false}}]},"alternate":null}]},"alternate":null},{"type":"IfStatement","start":11202,"end":11694,"test":{"type":"UnaryExpression","start":11206,"end":11231,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":11207,"end":11231,"callee":{"type":"MemberExpression","start":11207,"end":11229,"object":{"type":"ThisExpression","start":11207,"end":11211},"property":{"type":"Identifier","start":11212,"end":11229,"name":"useSourceAsTarget"},"computed":false,"optional":false},"arguments":[],"optional":false}},"consequent":{"type":"BlockStatement","start":11233,"end":11694,"body":[{"type":"IfStatement","start":11248,"end":11460,"test":{"type":"BinaryExpression","start":11252,"end":11283,"left":{"type":"MemberExpression","start":11252,"end":11279,"object":{"type":"CallExpression","start":11252,"end":11272,"callee":{"type":"MemberExpression","start":11252,"end":11270,"object":{"type":"ThisExpression","start":11252,"end":11256},"property":{"type":"Identifier","start":11257,"end":11270,"name":"targetPraefix"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":11273,"end":11279,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":11282,"end":11283,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":11285,"end":11460,"body":[{"type":"ExpressionStatement","start":11304,"end":11445,"expression":{"type":"CallExpression","start":11304,"end":11444,"callee":{"type":"MemberExpression","start":11304,"end":11327,"object":{"type":"MemberExpression","start":11304,"end":11322,"object":{"type":"ThisExpression","start":11304,"end":11308},"property":{"type":"Identifier","start":11309,"end":11322,"name":"warningsFound"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11323,"end":11327,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":11328,"end":11443,"left":{"type":"BinaryExpression","start":11328,"end":11379,"left":{"type":"Literal","start":11328,"end":11356,"value":"configured targetPraefix \"","raw":"'configured targetPraefix \"'"},"operator":"+","right":{"type":"CallExpression","start":11359,"end":11379,"callee":{"type":"MemberExpression","start":11359,"end":11377,"object":{"type":"ThisExpression","start":11359,"end":11363},"property":{"type":"Identifier","start":11364,"end":11377,"name":"targetPraefix"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"+","right":{"type":"Literal","start":11382,"end":11443,"value":"\" will not be used because \"useSourceAsTarget\" is disabled\"","raw":"'\" will not be used because \"useSourceAsTarget\" is disabled\"'"}}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":11474,"end":11683,"test":{"type":"BinaryExpression","start":11478,"end":11508,"left":{"type":"MemberExpression","start":11478,"end":11504,"object":{"type":"CallExpression","start":11478,"end":11497,"callee":{"type":"MemberExpression","start":11478,"end":11495,"object":{"type":"ThisExpression","start":11478,"end":11482},"property":{"type":"Identifier","start":11483,"end":11495,"name":"targetSuffix"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":11498,"end":11504,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":11507,"end":11508,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":11510,"end":11683,"body":[{"type":"ExpressionStatement","start":11529,"end":11668,"expression":{"type":"CallExpression","start":11529,"end":11667,"callee":{"type":"MemberExpression","start":11529,"end":11552,"object":{"type":"MemberExpression","start":11529,"end":11547,"object":{"type":"ThisExpression","start":11529,"end":11533},"property":{"type":"Identifier","start":11534,"end":11547,"name":"warningsFound"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11548,"end":11552,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":11553,"end":11666,"left":{"type":"BinaryExpression","start":11553,"end":11602,"left":{"type":"Literal","start":11553,"end":11580,"value":"configured targetSuffix \"","raw":"'configured targetSuffix \"'"},"operator":"+","right":{"type":"CallExpression","start":11583,"end":11602,"callee":{"type":"MemberExpression","start":11583,"end":11600,"object":{"type":"ThisExpression","start":11583,"end":11587},"property":{"type":"Identifier","start":11588,"end":11600,"name":"targetSuffix"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"+","right":{"type":"Literal","start":11605,"end":11666,"value":"\" will not be used because \"useSourceAsTarget\" is disabled\"","raw":"'\" will not be used because \"useSourceAsTarget\" is disabled\"'"}}],"optional":false}}]},"alternate":null}]},"alternate":null}]}}},{"type":"MethodDefinition","start":11914,"end":12159,"static":false,"computed":false,"key":{"type":"Identifier","start":11914,"end":11933,"name":"checkLanguageSyntax"},"kind":"method","value":{"type":"FunctionExpression","start":11933,"end":12159,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11934,"end":11938,"name":"lang"}],"body":{"type":"BlockStatement","start":11940,"end":12159,"body":[{"type":"VariableDeclaration","start":11951,"end":12008,"declarations":[{"type":"VariableDeclarator","start":11957,"end":12007,"id":{"type":"Identifier","start":11957,"end":11964,"name":"pattern"},"init":{"type":"Literal","start":11967,"end":12007,"value":{},"raw":"/^[a-zA-Z]{1,8}([-_][a-zA-Z0-9]{1,8})*$/","regex":{"pattern":"^[a-zA-Z]{1,8}([-_][a-zA-Z0-9]{1,8})*$","flags":""}}}],"kind":"const"},{"type":"IfStatement","start":12018,"end":12152,"test":{"type":"UnaryExpression","start":12022,"end":12041,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":12023,"end":12041,"callee":{"type":"MemberExpression","start":12023,"end":12035,"object":{"type":"Identifier","start":12023,"end":12030,"name":"pattern"},"property":{"type":"Identifier","start":12031,"end":12035,"name":"test"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12036,"end":12040,"name":"lang"}],"optional":false}},"consequent":{"type":"BlockStatement","start":12043,"end":12152,"body":[{"type":"ExpressionStatement","start":12058,"end":12141,"expression":{"type":"CallExpression","start":12058,"end":12140,"callee":{"type":"MemberExpression","start":12058,"end":12079,"object":{"type":"MemberExpression","start":12058,"end":12074,"object":{"type":"ThisExpression","start":12058,"end":12062},"property":{"type":"Identifier","start":12063,"end":12074,"name":"errorsFound"},"computed":false,"optional":false},"property":{"type":"Identifier","start":12075,"end":12079,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":12080,"end":12139,"callee":{"type":"Identifier","start":12084,"end":12099,"name":"XliffMergeError"},"arguments":[{"type":"BinaryExpression","start":12100,"end":12138,"left":{"type":"BinaryExpression","start":12100,"end":12119,"left":{"type":"Literal","start":12100,"end":12112,"value":"language \"","raw":"'language \"'"},"operator":"+","right":{"type":"Identifier","start":12115,"end":12119,"name":"lang"}},"operator":"+","right":{"type":"Literal","start":12122,"end":12138,"value":"\" is not valid","raw":"'\" is not valid'"}}]}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":12165,"end":12277,"static":false,"computed":false,"key":{"type":"Identifier","start":12165,"end":12178,"name":"allowIdChange"},"kind":"method","value":{"type":"FunctionExpression","start":12178,"end":12277,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":12181,"end":12277,"body":[{"type":"ReturnStatement","start":12192,"end":12270,"argument":{"type":"ConditionalExpression","start":12199,"end":12269,"test":{"type":"CallExpression","start":12200,"end":12238,"callee":{"type":"Identifier","start":12200,"end":12217,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":12218,"end":12237,"object":{"type":"ThisExpression","start":12218,"end":12222},"property":{"type":"Identifier","start":12223,"end":12237,"name":"_allowIdChange"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"Literal","start":12242,"end":12247,"value":false,"raw":"false"},"alternate":{"type":"MemberExpression","start":12250,"end":12269,"object":{"type":"ThisExpression","start":12250,"end":12254},"property":{"type":"Identifier","start":12255,"end":12269,"name":"_allowIdChange"},"computed":false,"optional":false}}}]}}},{"type":"MethodDefinition","start":12283,"end":12377,"static":false,"computed":false,"key":{"type":"Identifier","start":12283,"end":12290,"name":"verbose"},"kind":"method","value":{"type":"FunctionExpression","start":12290,"end":12377,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":12293,"end":12377,"body":[{"type":"ReturnStatement","start":12304,"end":12370,"argument":{"type":"ConditionalExpression","start":12311,"end":12369,"test":{"type":"CallExpression","start":12312,"end":12344,"callee":{"type":"Identifier","start":12312,"end":12329,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":12330,"end":12343,"object":{"type":"ThisExpression","start":12330,"end":12334},"property":{"type":"Identifier","start":12335,"end":12343,"name":"_verbose"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"Literal","start":12348,"end":12353,"value":false,"raw":"false"},"alternate":{"type":"MemberExpression","start":12356,"end":12369,"object":{"type":"ThisExpression","start":12356,"end":12360},"property":{"type":"Identifier","start":12361,"end":12369,"name":"_verbose"},"computed":false,"optional":false}}}]}}},{"type":"MethodDefinition","start":12383,"end":12471,"static":false,"computed":false,"key":{"type":"Identifier","start":12383,"end":12388,"name":"quiet"},"kind":"method","value":{"type":"FunctionExpression","start":12388,"end":12471,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":12391,"end":12471,"body":[{"type":"ReturnStatement","start":12402,"end":12464,"argument":{"type":"ConditionalExpression","start":12409,"end":12463,"test":{"type":"CallExpression","start":12410,"end":12440,"callee":{"type":"Identifier","start":12410,"end":12427,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":12428,"end":12439,"object":{"type":"ThisExpression","start":12428,"end":12432},"property":{"type":"Identifier","start":12433,"end":12439,"name":"_quiet"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"Literal","start":12444,"end":12449,"value":false,"raw":"false"},"alternate":{"type":"MemberExpression","start":12452,"end":12463,"object":{"type":"ThisExpression","start":12452,"end":12456},"property":{"type":"Identifier","start":12457,"end":12463,"name":"_quiet"},"computed":false,"optional":false}}}]}}},{"type":"MethodDefinition","start":12549,"end":14525,"static":false,"computed":false,"key":{"type":"Identifier","start":12549,"end":12566,"name":"showAllParameters"},"kind":"method","value":{"type":"FunctionExpression","start":12566,"end":14525,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12567,"end":12580,"name":"commandOutput"}],"body":{"type":"BlockStatement","start":12582,"end":14525,"body":[{"type":"ExpressionStatement","start":12593,"end":12644,"expression":{"type":"CallExpression","start":12593,"end":12643,"callee":{"type":"MemberExpression","start":12593,"end":12612,"object":{"type":"Identifier","start":12593,"end":12606,"name":"commandOutput"},"property":{"type":"Identifier","start":12607,"end":12612,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":12613,"end":12642,"value":"xliffmerge Used Parameters:","raw":"'xliffmerge Used Parameters:'"}],"optional":false}},{"type":"ExpressionStatement","start":12654,"end":12722,"expression":{"type":"CallExpression","start":12654,"end":12721,"callee":{"type":"MemberExpression","start":12654,"end":12673,"object":{"type":"Identifier","start":12654,"end":12667,"name":"commandOutput"},"property":{"type":"Identifier","start":12668,"end":12673,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":12674,"end":12698,"value":"usedProfilePath:\t\"%s\"","raw":"'usedProfilePath:\\t\"%s\"'"},{"type":"MemberExpression","start":12700,"end":12720,"object":{"type":"ThisExpression","start":12700,"end":12704},"property":{"type":"Identifier","start":12705,"end":12720,"name":"usedProfilePath"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":12732,"end":12802,"expression":{"type":"CallExpression","start":12732,"end":12801,"callee":{"type":"MemberExpression","start":12732,"end":12751,"object":{"type":"Identifier","start":12732,"end":12745,"name":"commandOutput"},"property":{"type":"Identifier","start":12746,"end":12751,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":12752,"end":12776,"value":"defaultLanguage:\t\"%s\"","raw":"'defaultLanguage:\\t\"%s\"'"},{"type":"CallExpression","start":12778,"end":12800,"callee":{"type":"MemberExpression","start":12778,"end":12798,"object":{"type":"ThisExpression","start":12778,"end":12782},"property":{"type":"Identifier","start":12783,"end":12798,"name":"defaultLanguage"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":12812,"end":12864,"expression":{"type":"CallExpression","start":12812,"end":12863,"callee":{"type":"MemberExpression","start":12812,"end":12831,"object":{"type":"Identifier","start":12812,"end":12825,"name":"commandOutput"},"property":{"type":"Identifier","start":12826,"end":12831,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":12832,"end":12847,"value":"srcDir:\t\"%s\"","raw":"'srcDir:\\t\"%s\"'"},{"type":"CallExpression","start":12849,"end":12862,"callee":{"type":"MemberExpression","start":12849,"end":12860,"object":{"type":"ThisExpression","start":12849,"end":12853},"property":{"type":"Identifier","start":12854,"end":12860,"name":"srcDir"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":12874,"end":12926,"expression":{"type":"CallExpression","start":12874,"end":12925,"callee":{"type":"MemberExpression","start":12874,"end":12893,"object":{"type":"Identifier","start":12874,"end":12887,"name":"commandOutput"},"property":{"type":"Identifier","start":12888,"end":12893,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":12894,"end":12909,"value":"genDir:\t\"%s\"","raw":"'genDir:\\t\"%s\"'"},{"type":"CallExpression","start":12911,"end":12924,"callee":{"type":"MemberExpression","start":12911,"end":12922,"object":{"type":"ThisExpression","start":12911,"end":12915},"property":{"type":"Identifier","start":12916,"end":12922,"name":"genDir"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":12936,"end":13000,"expression":{"type":"CallExpression","start":12936,"end":12999,"callee":{"type":"MemberExpression","start":12936,"end":12955,"object":{"type":"Identifier","start":12936,"end":12949,"name":"commandOutput"},"property":{"type":"Identifier","start":12950,"end":12955,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":12956,"end":12977,"value":"i18nBaseFile:\t\"%s\"","raw":"'i18nBaseFile:\\t\"%s\"'"},{"type":"CallExpression","start":12979,"end":12998,"callee":{"type":"MemberExpression","start":12979,"end":12996,"object":{"type":"ThisExpression","start":12979,"end":12983},"property":{"type":"Identifier","start":12984,"end":12996,"name":"i18nBaseFile"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":13010,"end":13066,"expression":{"type":"CallExpression","start":13010,"end":13065,"callee":{"type":"MemberExpression","start":13010,"end":13029,"object":{"type":"Identifier","start":13010,"end":13023,"name":"commandOutput"},"property":{"type":"Identifier","start":13024,"end":13029,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":13030,"end":13047,"value":"i18nFile:\t\"%s\"","raw":"'i18nFile:\\t\"%s\"'"},{"type":"CallExpression","start":13049,"end":13064,"callee":{"type":"MemberExpression","start":13049,"end":13062,"object":{"type":"ThisExpression","start":13049,"end":13053},"property":{"type":"Identifier","start":13054,"end":13062,"name":"i18nFile"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":13076,"end":13132,"expression":{"type":"CallExpression","start":13076,"end":13131,"callee":{"type":"MemberExpression","start":13076,"end":13095,"object":{"type":"Identifier","start":13076,"end":13089,"name":"commandOutput"},"property":{"type":"Identifier","start":13090,"end":13095,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":13096,"end":13112,"value":"languages:\t%s","raw":"'languages:\\t%s'"},{"type":"CallExpression","start":13114,"end":13130,"callee":{"type":"MemberExpression","start":13114,"end":13128,"object":{"type":"ThisExpression","start":13114,"end":13118},"property":{"type":"Identifier","start":13119,"end":13128,"name":"languages"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ForOfStatement","start":13142,"end":13296,"await":false,"left":{"type":"VariableDeclaration","start":13147,"end":13161,"declarations":[{"type":"VariableDeclarator","start":13153,"end":13161,"id":{"type":"Identifier","start":13153,"end":13161,"name":"language"},"init":null}],"kind":"const"},"right":{"type":"CallExpression","start":13165,"end":13181,"callee":{"type":"MemberExpression","start":13165,"end":13179,"object":{"type":"ThisExpression","start":13165,"end":13169},"property":{"type":"Identifier","start":13170,"end":13179,"name":"languages"},"computed":false,"optional":false},"arguments":[],"optional":false},"body":{"type":"BlockStatement","start":13183,"end":13296,"body":[{"type":"ExpressionStatement","start":13198,"end":13285,"expression":{"type":"CallExpression","start":13198,"end":13284,"callee":{"type":"MemberExpression","start":13198,"end":13217,"object":{"type":"Identifier","start":13198,"end":13211,"name":"commandOutput"},"property":{"type":"Identifier","start":13212,"end":13217,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":13218,"end":13239,"value":"outputFile[%s]:\t%s","raw":"'outputFile[%s]:\\t%s'"},{"type":"Identifier","start":13241,"end":13249,"name":"language"},{"type":"CallExpression","start":13251,"end":13283,"callee":{"type":"MemberExpression","start":13251,"end":13273,"object":{"type":"ThisExpression","start":13251,"end":13255},"property":{"type":"Identifier","start":13256,"end":13273,"name":"generatedI18nFile"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":13274,"end":13282,"name":"language"}],"optional":false}],"optional":false}}]}},{"type":"ExpressionStatement","start":13306,"end":13374,"expression":{"type":"CallExpression","start":13306,"end":13373,"callee":{"type":"MemberExpression","start":13306,"end":13325,"object":{"type":"Identifier","start":13306,"end":13319,"name":"commandOutput"},"property":{"type":"Identifier","start":13320,"end":13325,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":13326,"end":13348,"value":"removeUnusedIds:\t%s","raw":"'removeUnusedIds:\\t%s'"},{"type":"CallExpression","start":13350,"end":13372,"callee":{"type":"MemberExpression","start":13350,"end":13370,"object":{"type":"ThisExpression","start":13350,"end":13354},"property":{"type":"Identifier","start":13355,"end":13370,"name":"removeUnusedIds"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":13384,"end":13460,"expression":{"type":"CallExpression","start":13384,"end":13459,"callee":{"type":"MemberExpression","start":13384,"end":13403,"object":{"type":"Identifier","start":13384,"end":13397,"name":"commandOutput"},"property":{"type":"Identifier","start":13398,"end":13403,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":13404,"end":13430,"value":"supportNgxTranslate:\t%s","raw":"'supportNgxTranslate:\\t%s'"},{"type":"CallExpression","start":13432,"end":13458,"callee":{"type":"MemberExpression","start":13432,"end":13456,"object":{"type":"ThisExpression","start":13432,"end":13436},"property":{"type":"Identifier","start":13437,"end":13456,"name":"supportNgxTranslate"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"IfStatement","start":13470,"end":13624,"test":{"type":"CallExpression","start":13474,"end":13500,"callee":{"type":"MemberExpression","start":13474,"end":13498,"object":{"type":"ThisExpression","start":13474,"end":13478},"property":{"type":"Identifier","start":13479,"end":13498,"name":"supportNgxTranslate"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":13502,"end":13624,"body":[{"type":"ExpressionStatement","start":13517,"end":13613,"expression":{"type":"CallExpression","start":13517,"end":13612,"callee":{"type":"MemberExpression","start":13517,"end":13536,"object":{"type":"Identifier","start":13517,"end":13530,"name":"commandOutput"},"property":{"type":"Identifier","start":13531,"end":13536,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":13537,"end":13573,"value":"ngxTranslateExtractionPattern:\t%s","raw":"'ngxTranslateExtractionPattern:\\t%s'"},{"type":"CallExpression","start":13575,"end":13611,"callee":{"type":"MemberExpression","start":13575,"end":13609,"object":{"type":"ThisExpression","start":13575,"end":13579},"property":{"type":"Identifier","start":13580,"end":13609,"name":"ngxTranslateExtractionPattern"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":13634,"end":13706,"expression":{"type":"CallExpression","start":13634,"end":13705,"callee":{"type":"MemberExpression","start":13634,"end":13653,"object":{"type":"Identifier","start":13634,"end":13647,"name":"commandOutput"},"property":{"type":"Identifier","start":13648,"end":13653,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":13654,"end":13678,"value":"useSourceAsTarget:\t%s","raw":"'useSourceAsTarget:\\t%s'"},{"type":"CallExpression","start":13680,"end":13704,"callee":{"type":"MemberExpression","start":13680,"end":13702,"object":{"type":"ThisExpression","start":13680,"end":13684},"property":{"type":"Identifier","start":13685,"end":13702,"name":"useSourceAsTarget"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"IfStatement","start":13716,"end":13916,"test":{"type":"CallExpression","start":13720,"end":13744,"callee":{"type":"MemberExpression","start":13720,"end":13742,"object":{"type":"ThisExpression","start":13720,"end":13724},"property":{"type":"Identifier","start":13725,"end":13742,"name":"useSourceAsTarget"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":13746,"end":13916,"body":[{"type":"ExpressionStatement","start":13761,"end":13827,"expression":{"type":"CallExpression","start":13761,"end":13826,"callee":{"type":"MemberExpression","start":13761,"end":13780,"object":{"type":"Identifier","start":13761,"end":13774,"name":"commandOutput"},"property":{"type":"Identifier","start":13775,"end":13780,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":13781,"end":13803,"value":"targetPraefix:\t\"%s\"","raw":"'targetPraefix:\\t\"%s\"'"},{"type":"CallExpression","start":13805,"end":13825,"callee":{"type":"MemberExpression","start":13805,"end":13823,"object":{"type":"ThisExpression","start":13805,"end":13809},"property":{"type":"Identifier","start":13810,"end":13823,"name":"targetPraefix"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":13841,"end":13905,"expression":{"type":"CallExpression","start":13841,"end":13904,"callee":{"type":"MemberExpression","start":13841,"end":13860,"object":{"type":"Identifier","start":13841,"end":13854,"name":"commandOutput"},"property":{"type":"Identifier","start":13855,"end":13860,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":13861,"end":13882,"value":"targetSuffix:\t\"%s\"","raw":"'targetSuffix:\\t\"%s\"'"},{"type":"CallExpression","start":13884,"end":13903,"callee":{"type":"MemberExpression","start":13884,"end":13901,"object":{"type":"ThisExpression","start":13884,"end":13888},"property":{"type":"Identifier","start":13889,"end":13901,"name":"targetSuffix"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":13926,"end":13990,"expression":{"type":"CallExpression","start":13926,"end":13989,"callee":{"type":"MemberExpression","start":13926,"end":13945,"object":{"type":"Identifier","start":13926,"end":13939,"name":"commandOutput"},"property":{"type":"Identifier","start":13940,"end":13945,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":13946,"end":13966,"value":"allowIdChange:\t%s","raw":"'allowIdChange:\\t%s'"},{"type":"CallExpression","start":13968,"end":13988,"callee":{"type":"MemberExpression","start":13968,"end":13986,"object":{"type":"ThisExpression","start":13968,"end":13972},"property":{"type":"Identifier","start":13973,"end":13986,"name":"allowIdChange"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":14000,"end":14066,"expression":{"type":"CallExpression","start":14000,"end":14065,"callee":{"type":"MemberExpression","start":14000,"end":14019,"object":{"type":"Identifier","start":14000,"end":14013,"name":"commandOutput"},"property":{"type":"Identifier","start":14014,"end":14019,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":14020,"end":14041,"value":"beautifyOutput:\t%s","raw":"'beautifyOutput:\\t%s'"},{"type":"CallExpression","start":14043,"end":14064,"callee":{"type":"MemberExpression","start":14043,"end":14062,"object":{"type":"ThisExpression","start":14043,"end":14047},"property":{"type":"Identifier","start":14048,"end":14062,"name":"beautifyOutput"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":14076,"end":14140,"expression":{"type":"CallExpression","start":14076,"end":14139,"callee":{"type":"MemberExpression","start":14076,"end":14095,"object":{"type":"Identifier","start":14076,"end":14089,"name":"commandOutput"},"property":{"type":"Identifier","start":14090,"end":14095,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":14096,"end":14116,"value":"preserveOrder:\t%s","raw":"'preserveOrder:\\t%s'"},{"type":"CallExpression","start":14118,"end":14138,"callee":{"type":"MemberExpression","start":14118,"end":14136,"object":{"type":"ThisExpression","start":14118,"end":14122},"property":{"type":"Identifier","start":14123,"end":14136,"name":"preserveOrder"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":14150,"end":14214,"expression":{"type":"CallExpression","start":14150,"end":14213,"callee":{"type":"MemberExpression","start":14150,"end":14169,"object":{"type":"Identifier","start":14150,"end":14163,"name":"commandOutput"},"property":{"type":"Identifier","start":14164,"end":14169,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":14170,"end":14190,"value":"autotranslate:\t%s","raw":"'autotranslate:\\t%s'"},{"type":"CallExpression","start":14192,"end":14212,"callee":{"type":"MemberExpression","start":14192,"end":14210,"object":{"type":"ThisExpression","start":14192,"end":14196},"property":{"type":"Identifier","start":14197,"end":14210,"name":"autotranslate"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"IfStatement","start":14224,"end":14518,"test":{"type":"CallExpression","start":14228,"end":14248,"callee":{"type":"MemberExpression","start":14228,"end":14246,"object":{"type":"ThisExpression","start":14228,"end":14232},"property":{"type":"Identifier","start":14233,"end":14246,"name":"autotranslate"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":14250,"end":14518,"body":[{"type":"ExpressionStatement","start":14265,"end":14350,"expression":{"type":"CallExpression","start":14265,"end":14349,"callee":{"type":"MemberExpression","start":14265,"end":14284,"object":{"type":"Identifier","start":14265,"end":14278,"name":"commandOutput"},"property":{"type":"Identifier","start":14279,"end":14284,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":14285,"end":14316,"value":"autotranslated languages:\t%s","raw":"'autotranslated languages:\\t%s'"},{"type":"CallExpression","start":14318,"end":14348,"callee":{"type":"MemberExpression","start":14318,"end":14346,"object":{"type":"ThisExpression","start":14318,"end":14322},"property":{"type":"Identifier","start":14323,"end":14346,"name":"autotranslatedLanguages"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":14364,"end":14435,"expression":{"type":"CallExpression","start":14364,"end":14434,"callee":{"type":"MemberExpression","start":14364,"end":14383,"object":{"type":"Identifier","start":14364,"end":14377,"name":"commandOutput"},"property":{"type":"Identifier","start":14378,"end":14383,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":14384,"end":14397,"value":"apikey:\t%s","raw":"'apikey:\\t%s'"},{"type":"ConditionalExpression","start":14399,"end":14433,"test":{"type":"CallExpression","start":14399,"end":14412,"callee":{"type":"MemberExpression","start":14399,"end":14410,"object":{"type":"ThisExpression","start":14399,"end":14403},"property":{"type":"Identifier","start":14404,"end":14410,"name":"apikey"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"Literal","start":14415,"end":14421,"value":"****","raw":"'****'"},"alternate":{"type":"Literal","start":14424,"end":14433,"value":"NOT SET","raw":"'NOT SET'"}}],"optional":false}},{"type":"ExpressionStatement","start":14449,"end":14507,"expression":{"type":"CallExpression","start":14449,"end":14506,"callee":{"type":"MemberExpression","start":14449,"end":14468,"object":{"type":"Identifier","start":14449,"end":14462,"name":"commandOutput"},"property":{"type":"Identifier","start":14463,"end":14468,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":14469,"end":14486,"value":"apikeyfile:\t%s","raw":"'apikeyfile:\\t%s'"},{"type":"CallExpression","start":14488,"end":14505,"callee":{"type":"MemberExpression","start":14488,"end":14503,"object":{"type":"ThisExpression","start":14488,"end":14492},"property":{"type":"Identifier","start":14493,"end":14503,"name":"apikeyfile"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":14620,"end":14716,"static":false,"computed":false,"key":{"type":"Identifier","start":14620,"end":14635,"name":"defaultLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":14635,"end":14716,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":14638,"end":14716,"body":[{"type":"ReturnStatement","start":14649,"end":14709,"argument":{"type":"ConditionalExpression","start":14656,"end":14708,"test":{"type":"MemberExpression","start":14656,"end":14677,"object":{"type":"ThisExpression","start":14656,"end":14660},"property":{"type":"Identifier","start":14661,"end":14677,"name":"_defaultLanguage"},"computed":false,"optional":false},"consequent":{"type":"MemberExpression","start":14680,"end":14701,"object":{"type":"ThisExpression","start":14680,"end":14684},"property":{"type":"Identifier","start":14685,"end":14701,"name":"_defaultLanguage"},"computed":false,"optional":false},"alternate":{"type":"Literal","start":14704,"end":14708,"value":"en","raw":"'en'"}}}]}}},{"type":"MethodDefinition","start":14811,"end":14887,"static":false,"computed":false,"key":{"type":"Identifier","start":14811,"end":14820,"name":"languages"},"kind":"method","value":{"type":"FunctionExpression","start":14820,"end":14887,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":14823,"end":14887,"body":[{"type":"ReturnStatement","start":14834,"end":14880,"argument":{"type":"ConditionalExpression","start":14841,"end":14879,"test":{"type":"MemberExpression","start":14841,"end":14856,"object":{"type":"ThisExpression","start":14841,"end":14845},"property":{"type":"Identifier","start":14846,"end":14856,"name":"_languages"},"computed":false,"optional":false},"consequent":{"type":"MemberExpression","start":14859,"end":14874,"object":{"type":"ThisExpression","start":14859,"end":14863},"property":{"type":"Identifier","start":14864,"end":14874,"name":"_languages"},"computed":false,"optional":false},"alternate":{"type":"ArrayExpression","start":14877,"end":14879,"elements":[]}}}]}}},{"type":"MethodDefinition","start":14991,"end":15059,"static":false,"computed":false,"key":{"type":"Identifier","start":14991,"end":14997,"name":"srcDir"},"kind":"method","value":{"type":"FunctionExpression","start":14997,"end":15059,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":15000,"end":15059,"body":[{"type":"ReturnStatement","start":15011,"end":15052,"argument":{"type":"ConditionalExpression","start":15018,"end":15051,"test":{"type":"MemberExpression","start":15018,"end":15030,"object":{"type":"ThisExpression","start":15018,"end":15022},"property":{"type":"Identifier","start":15023,"end":15030,"name":"_srcDir"},"computed":false,"optional":false},"consequent":{"type":"MemberExpression","start":15033,"end":15045,"object":{"type":"ThisExpression","start":15033,"end":15037},"property":{"type":"Identifier","start":15038,"end":15045,"name":"_srcDir"},"computed":false,"optional":false},"alternate":{"type":"Literal","start":15048,"end":15051,"value":".","raw":"'.'"}}}]}}},{"type":"MethodDefinition","start":15203,"end":15296,"static":false,"computed":false,"key":{"type":"Identifier","start":15203,"end":15215,"name":"i18nBaseFile"},"kind":"method","value":{"type":"FunctionExpression","start":15215,"end":15296,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":15218,"end":15296,"body":[{"type":"ReturnStatement","start":15229,"end":15289,"argument":{"type":"ConditionalExpression","start":15236,"end":15288,"test":{"type":"MemberExpression","start":15236,"end":15254,"object":{"type":"ThisExpression","start":15236,"end":15240},"property":{"type":"Identifier","start":15241,"end":15254,"name":"_i18nBaseFile"},"computed":false,"optional":false},"consequent":{"type":"MemberExpression","start":15257,"end":15275,"object":{"type":"ThisExpression","start":15257,"end":15261},"property":{"type":"Identifier","start":15262,"end":15275,"name":"_i18nBaseFile"},"computed":false,"optional":false},"alternate":{"type":"Literal","start":15278,"end":15288,"value":"messages","raw":"'messages'"}}}]}}},{"type":"MethodDefinition","start":15458,"end":15633,"static":false,"computed":false,"key":{"type":"Identifier","start":15458,"end":15466,"name":"i18nFile"},"kind":"method","value":{"type":"FunctionExpression","start":15466,"end":15633,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":15469,"end":15633,"body":[{"type":"ReturnStatement","start":15480,"end":15626,"argument":{"type":"CallExpression","start":15487,"end":15625,"callee":{"type":"MemberExpression","start":15487,"end":15613,"object":{"type":"CallExpression","start":15487,"end":15605,"callee":{"type":"Identifier","start":15487,"end":15491,"name":"join"},"arguments":[{"type":"CallExpression","start":15492,"end":15505,"callee":{"type":"MemberExpression","start":15492,"end":15503,"object":{"type":"ThisExpression","start":15492,"end":15496},"property":{"type":"Identifier","start":15497,"end":15503,"name":"srcDir"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"ConditionalExpression","start":15508,"end":15603,"test":{"type":"MemberExpression","start":15508,"end":15522,"object":{"type":"ThisExpression","start":15508,"end":15512},"property":{"type":"Identifier","start":15513,"end":15522,"name":"_i18nFile"},"computed":false,"optional":false},"consequent":{"type":"MemberExpression","start":15525,"end":15539,"object":{"type":"ThisExpression","start":15525,"end":15529},"property":{"type":"Identifier","start":15530,"end":15539,"name":"_i18nFile"},"computed":false,"optional":false},"alternate":{"type":"BinaryExpression","start":15542,"end":15603,"left":{"type":"BinaryExpression","start":15542,"end":15567,"left":{"type":"CallExpression","start":15542,"end":15561,"callee":{"type":"MemberExpression","start":15542,"end":15559,"object":{"type":"ThisExpression","start":15542,"end":15546},"property":{"type":"Identifier","start":15547,"end":15559,"name":"i18nBaseFile"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"+","right":{"type":"Literal","start":15564,"end":15567,"value":".","raw":"'.'"}},"operator":"+","right":{"type":"CallExpression","start":15570,"end":15603,"callee":{"type":"MemberExpression","start":15570,"end":15601,"object":{"type":"ThisExpression","start":15570,"end":15574},"property":{"type":"Identifier","start":15575,"end":15601,"name":"suffixForGeneratedI18nFile"},"computed":false,"optional":false},"arguments":[],"optional":false}}}],"optional":false},"property":{"type":"Identifier","start":15606,"end":15613,"name":"replace"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":15614,"end":15619,"value":{},"raw":"/\\\\/g","regex":{"pattern":"\\\\","flags":"g"}},{"type":"Literal","start":15621,"end":15624,"value":"/","raw":"'/'"}],"optional":false}}]}}},{"type":"MethodDefinition","start":15785,"end":15869,"static":false,"computed":false,"key":{"type":"Identifier","start":15785,"end":15795,"name":"i18nFormat"},"kind":"method","value":{"type":"FunctionExpression","start":15795,"end":15869,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":15798,"end":15869,"body":[{"type":"ReturnStatement","start":15809,"end":15862,"argument":{"type":"ConditionalExpression","start":15817,"end":15860,"test":{"type":"MemberExpression","start":15817,"end":15833,"object":{"type":"ThisExpression","start":15817,"end":15821},"property":{"type":"Identifier","start":15822,"end":15833,"name":"_i18nFormat"},"computed":false,"optional":false},"consequent":{"type":"MemberExpression","start":15836,"end":15852,"object":{"type":"ThisExpression","start":15836,"end":15840},"property":{"type":"Identifier","start":15841,"end":15852,"name":"_i18nFormat"},"computed":false,"optional":false},"alternate":{"type":"Literal","start":15855,"end":15860,"value":"xlf","raw":"'xlf'"}}}]}}},{"type":"MethodDefinition","start":16046,"end":16211,"static":false,"computed":false,"key":{"type":"Identifier","start":16046,"end":16063,"name":"generatedI18nFile"},"kind":"method","value":{"type":"FunctionExpression","start":16063,"end":16211,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16064,"end":16068,"name":"lang"}],"body":{"type":"BlockStatement","start":16070,"end":16211,"body":[{"type":"ReturnStatement","start":16081,"end":16204,"argument":{"type":"CallExpression","start":16088,"end":16203,"callee":{"type":"MemberExpression","start":16088,"end":16191,"object":{"type":"CallExpression","start":16088,"end":16183,"callee":{"type":"Identifier","start":16088,"end":16092,"name":"join"},"arguments":[{"type":"CallExpression","start":16093,"end":16106,"callee":{"type":"MemberExpression","start":16093,"end":16104,"object":{"type":"ThisExpression","start":16093,"end":16097},"property":{"type":"Identifier","start":16098,"end":16104,"name":"genDir"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"BinaryExpression","start":16108,"end":16182,"left":{"type":"BinaryExpression","start":16108,"end":16146,"left":{"type":"BinaryExpression","start":16108,"end":16140,"left":{"type":"BinaryExpression","start":16108,"end":16133,"left":{"type":"CallExpression","start":16108,"end":16127,"callee":{"type":"MemberExpression","start":16108,"end":16125,"object":{"type":"ThisExpression","start":16108,"end":16112},"property":{"type":"Identifier","start":16113,"end":16125,"name":"i18nBaseFile"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"+","right":{"type":"Literal","start":16130,"end":16133,"value":".","raw":"'.'"}},"operator":"+","right":{"type":"Identifier","start":16136,"end":16140,"name":"lang"}},"operator":"+","right":{"type":"Literal","start":16143,"end":16146,"value":".","raw":"'.'"}},"operator":"+","right":{"type":"CallExpression","start":16149,"end":16182,"callee":{"type":"MemberExpression","start":16149,"end":16180,"object":{"type":"ThisExpression","start":16149,"end":16153},"property":{"type":"Identifier","start":16154,"end":16180,"name":"suffixForGeneratedI18nFile"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"optional":false},"property":{"type":"Identifier","start":16184,"end":16191,"name":"replace"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":16192,"end":16197,"value":{},"raw":"/\\\\/g","regex":{"pattern":"\\\\","flags":"g"}},{"type":"Literal","start":16199,"end":16202,"value":"/","raw":"'/'"}],"optional":false}}]}}},{"type":"MethodDefinition","start":16217,"end":16472,"static":false,"computed":false,"key":{"type":"Identifier","start":16217,"end":16243,"name":"suffixForGeneratedI18nFile"},"kind":"method","value":{"type":"FunctionExpression","start":16243,"end":16472,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":16246,"end":16472,"body":[{"type":"SwitchStatement","start":16257,"end":16465,"discriminant":{"type":"CallExpression","start":16265,"end":16282,"callee":{"type":"MemberExpression","start":16265,"end":16280,"object":{"type":"ThisExpression","start":16265,"end":16269},"property":{"type":"Identifier","start":16270,"end":16280,"name":"i18nFormat"},"computed":false,"optional":false},"arguments":[],"optional":false},"cases":[{"type":"SwitchCase","start":16299,"end":16341,"consequent":[{"type":"ReturnStatement","start":16328,"end":16341,"argument":{"type":"Literal","start":16335,"end":16340,"value":"xlf","raw":"'xlf'"}}],"test":{"type":"Literal","start":16304,"end":16309,"value":"xlf","raw":"'xlf'"}},{"type":"SwitchCase","start":16355,"end":16398,"consequent":[{"type":"ReturnStatement","start":16385,"end":16398,"argument":{"type":"Literal","start":16392,"end":16397,"value":"xlf","raw":"'xlf'"}}],"test":{"type":"Literal","start":16360,"end":16366,"value":"xlf2","raw":"'xlf2'"}},{"type":"SwitchCase","start":16412,"end":16454,"consequent":[{"type":"ReturnStatement","start":16441,"end":16454,"argument":{"type":"Literal","start":16448,"end":16453,"value":"xtb","raw":"'xtb'"}}],"test":{"type":"Literal","start":16417,"end":16422,"value":"xmb","raw":"'xmb'"}}]}]}}},{"type":"MethodDefinition","start":16672,"end":16818,"static":false,"computed":false,"key":{"type":"Identifier","start":16672,"end":16697,"name":"generatedNgxTranslateFile"},"kind":"method","value":{"type":"FunctionExpression","start":16697,"end":16818,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16698,"end":16702,"name":"lang"}],"body":{"type":"BlockStatement","start":16704,"end":16818,"body":[{"type":"ReturnStatement","start":16715,"end":16811,"argument":{"type":"CallExpression","start":16722,"end":16810,"callee":{"type":"MemberExpression","start":16722,"end":16798,"object":{"type":"CallExpression","start":16722,"end":16790,"callee":{"type":"Identifier","start":16722,"end":16726,"name":"join"},"arguments":[{"type":"CallExpression","start":16727,"end":16740,"callee":{"type":"MemberExpression","start":16727,"end":16738,"object":{"type":"ThisExpression","start":16727,"end":16731},"property":{"type":"Identifier","start":16732,"end":16738,"name":"genDir"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"BinaryExpression","start":16742,"end":16789,"left":{"type":"BinaryExpression","start":16742,"end":16780,"left":{"type":"BinaryExpression","start":16742,"end":16774,"left":{"type":"BinaryExpression","start":16742,"end":16767,"left":{"type":"CallExpression","start":16742,"end":16761,"callee":{"type":"MemberExpression","start":16742,"end":16759,"object":{"type":"ThisExpression","start":16742,"end":16746},"property":{"type":"Identifier","start":16747,"end":16759,"name":"i18nBaseFile"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"+","right":{"type":"Literal","start":16764,"end":16767,"value":".","raw":"'.'"}},"operator":"+","right":{"type":"Identifier","start":16770,"end":16774,"name":"lang"}},"operator":"+","right":{"type":"Literal","start":16777,"end":16780,"value":".","raw":"'.'"}},"operator":"+","right":{"type":"Literal","start":16783,"end":16789,"value":"json","raw":"'json'"}}],"optional":false},"property":{"type":"Identifier","start":16791,"end":16798,"name":"replace"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":16799,"end":16804,"value":{},"raw":"/\\\\/g","regex":{"pattern":"\\\\","flags":"g"}},{"type":"Literal","start":16806,"end":16809,"value":"/","raw":"'/'"}],"optional":false}}]}}},{"type":"MethodDefinition","start":16919,"end":16997,"static":false,"computed":false,"key":{"type":"Identifier","start":16919,"end":16927,"name":"encoding"},"kind":"method","value":{"type":"FunctionExpression","start":16927,"end":16997,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":16930,"end":16997,"body":[{"type":"ReturnStatement","start":16941,"end":16990,"argument":{"type":"ConditionalExpression","start":16948,"end":16989,"test":{"type":"MemberExpression","start":16948,"end":16962,"object":{"type":"ThisExpression","start":16948,"end":16952},"property":{"type":"Identifier","start":16953,"end":16962,"name":"_encoding"},"computed":false,"optional":false},"consequent":{"type":"MemberExpression","start":16965,"end":16979,"object":{"type":"ThisExpression","start":16965,"end":16969},"property":{"type":"Identifier","start":16970,"end":16979,"name":"_encoding"},"computed":false,"optional":false},"alternate":{"type":"Literal","start":16982,"end":16989,"value":"utf-8","raw":"'utf-8'"}}}]}}},{"type":"MethodDefinition","start":17107,"end":17185,"static":false,"computed":false,"key":{"type":"Identifier","start":17107,"end":17113,"name":"genDir"},"kind":"method","value":{"type":"FunctionExpression","start":17113,"end":17185,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":17116,"end":17185,"body":[{"type":"ReturnStatement","start":17127,"end":17178,"argument":{"type":"ConditionalExpression","start":17134,"end":17177,"test":{"type":"MemberExpression","start":17134,"end":17146,"object":{"type":"ThisExpression","start":17134,"end":17138},"property":{"type":"Identifier","start":17139,"end":17146,"name":"_genDir"},"computed":false,"optional":false},"consequent":{"type":"MemberExpression","start":17149,"end":17161,"object":{"type":"ThisExpression","start":17149,"end":17153},"property":{"type":"Identifier","start":17154,"end":17161,"name":"_genDir"},"computed":false,"optional":false},"alternate":{"type":"CallExpression","start":17164,"end":17177,"callee":{"type":"MemberExpression","start":17164,"end":17175,"object":{"type":"ThisExpression","start":17164,"end":17168},"property":{"type":"Identifier","start":17169,"end":17175,"name":"srcDir"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]}}},{"type":"MethodDefinition","start":17191,"end":17308,"static":false,"computed":false,"key":{"type":"Identifier","start":17191,"end":17206,"name":"removeUnusedIds"},"kind":"method","value":{"type":"FunctionExpression","start":17206,"end":17308,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":17209,"end":17308,"body":[{"type":"ReturnStatement","start":17220,"end":17301,"argument":{"type":"ConditionalExpression","start":17227,"end":17300,"test":{"type":"CallExpression","start":17228,"end":17268,"callee":{"type":"Identifier","start":17228,"end":17245,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":17246,"end":17267,"object":{"type":"ThisExpression","start":17246,"end":17250},"property":{"type":"Identifier","start":17251,"end":17267,"name":"_removeUnusedIds"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"Literal","start":17272,"end":17276,"value":true,"raw":"true"},"alternate":{"type":"MemberExpression","start":17279,"end":17300,"object":{"type":"ThisExpression","start":17279,"end":17283},"property":{"type":"Identifier","start":17284,"end":17300,"name":"_removeUnusedIds"},"computed":false,"optional":false}}}]}}},{"type":"MethodDefinition","start":17314,"end":17444,"static":false,"computed":false,"key":{"type":"Identifier","start":17314,"end":17333,"name":"supportNgxTranslate"},"kind":"method","value":{"type":"FunctionExpression","start":17333,"end":17444,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":17336,"end":17444,"body":[{"type":"ReturnStatement","start":17347,"end":17437,"argument":{"type":"ConditionalExpression","start":17354,"end":17436,"test":{"type":"CallExpression","start":17355,"end":17399,"callee":{"type":"Identifier","start":17355,"end":17372,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":17373,"end":17398,"object":{"type":"ThisExpression","start":17373,"end":17377},"property":{"type":"Identifier","start":17378,"end":17398,"name":"_supportNgxTranslate"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"Literal","start":17403,"end":17408,"value":false,"raw":"false"},"alternate":{"type":"MemberExpression","start":17411,"end":17436,"object":{"type":"ThisExpression","start":17411,"end":17415},"property":{"type":"Identifier","start":17416,"end":17436,"name":"_supportNgxTranslate"},"computed":false,"optional":false}}}]}}},{"type":"MethodDefinition","start":17450,"end":17664,"static":false,"computed":false,"key":{"type":"Identifier","start":17450,"end":17479,"name":"ngxTranslateExtractionPattern"},"kind":"method","value":{"type":"FunctionExpression","start":17479,"end":17664,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":17482,"end":17664,"body":[{"type":"ReturnStatement","start":17493,"end":17657,"argument":{"type":"ConditionalExpression","start":17500,"end":17656,"test":{"type":"CallExpression","start":17501,"end":17555,"callee":{"type":"Identifier","start":17501,"end":17518,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":17519,"end":17554,"object":{"type":"ThisExpression","start":17519,"end":17523},"property":{"type":"Identifier","start":17524,"end":17554,"name":"_ngxTranslateExtractionPattern"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"MemberExpression","start":17572,"end":17618,"object":{"type":"Identifier","start":17572,"end":17593,"name":"NgxTranslateExtractor"},"property":{"type":"Identifier","start":17594,"end":17618,"name":"DefaultExtractionPattern"},"computed":false,"optional":false},"alternate":{"type":"MemberExpression","start":17621,"end":17656,"object":{"type":"ThisExpression","start":17621,"end":17625},"property":{"type":"Identifier","start":17626,"end":17656,"name":"_ngxTranslateExtractionPattern"},"computed":false,"optional":false}}}]}}},{"type":"MethodDefinition","start":17778,"end":17901,"static":false,"computed":false,"key":{"type":"Identifier","start":17778,"end":17795,"name":"useSourceAsTarget"},"kind":"method","value":{"type":"FunctionExpression","start":17795,"end":17901,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":17798,"end":17901,"body":[{"type":"ReturnStatement","start":17809,"end":17894,"argument":{"type":"ConditionalExpression","start":17816,"end":17893,"test":{"type":"CallExpression","start":17817,"end":17859,"callee":{"type":"Identifier","start":17817,"end":17834,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":17835,"end":17858,"object":{"type":"ThisExpression","start":17835,"end":17839},"property":{"type":"Identifier","start":17840,"end":17858,"name":"_useSourceAsTarget"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"Literal","start":17863,"end":17867,"value":true,"raw":"true"},"alternate":{"type":"MemberExpression","start":17870,"end":17893,"object":{"type":"ThisExpression","start":17870,"end":17874},"property":{"type":"Identifier","start":17875,"end":17893,"name":"_useSourceAsTarget"},"computed":false,"optional":false}}}]}}},{"type":"MethodDefinition","start":18008,"end":18117,"static":false,"computed":false,"key":{"type":"Identifier","start":18008,"end":18021,"name":"targetPraefix"},"kind":"method","value":{"type":"FunctionExpression","start":18021,"end":18117,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":18024,"end":18117,"body":[{"type":"ReturnStatement","start":18035,"end":18110,"argument":{"type":"ConditionalExpression","start":18042,"end":18109,"test":{"type":"CallExpression","start":18043,"end":18081,"callee":{"type":"Identifier","start":18043,"end":18060,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":18061,"end":18080,"object":{"type":"ThisExpression","start":18061,"end":18065},"property":{"type":"Identifier","start":18066,"end":18080,"name":"_targetPraefix"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"Literal","start":18085,"end":18087,"value":"","raw":"''"},"alternate":{"type":"MemberExpression","start":18090,"end":18109,"object":{"type":"ThisExpression","start":18090,"end":18094},"property":{"type":"Identifier","start":18095,"end":18109,"name":"_targetPraefix"},"computed":false,"optional":false}}}]}}},{"type":"MethodDefinition","start":18223,"end":18329,"static":false,"computed":false,"key":{"type":"Identifier","start":18223,"end":18235,"name":"targetSuffix"},"kind":"method","value":{"type":"FunctionExpression","start":18235,"end":18329,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":18238,"end":18329,"body":[{"type":"ReturnStatement","start":18249,"end":18322,"argument":{"type":"ConditionalExpression","start":18256,"end":18321,"test":{"type":"CallExpression","start":18257,"end":18294,"callee":{"type":"Identifier","start":18257,"end":18274,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":18275,"end":18293,"object":{"type":"ThisExpression","start":18275,"end":18279},"property":{"type":"Identifier","start":18280,"end":18293,"name":"_targetSuffix"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"Literal","start":18298,"end":18300,"value":"","raw":"''"},"alternate":{"type":"MemberExpression","start":18303,"end":18321,"object":{"type":"ThisExpression","start":18303,"end":18307},"property":{"type":"Identifier","start":18308,"end":18321,"name":"_targetSuffix"},"computed":false,"optional":false}}}]}}},{"type":"MethodDefinition","start":18418,"end":18533,"static":false,"computed":false,"key":{"type":"Identifier","start":18418,"end":18432,"name":"beautifyOutput"},"kind":"method","value":{"type":"FunctionExpression","start":18432,"end":18533,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":18435,"end":18533,"body":[{"type":"ReturnStatement","start":18446,"end":18526,"argument":{"type":"ConditionalExpression","start":18453,"end":18525,"test":{"type":"CallExpression","start":18454,"end":18493,"callee":{"type":"Identifier","start":18454,"end":18471,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":18472,"end":18492,"object":{"type":"ThisExpression","start":18472,"end":18476},"property":{"type":"Identifier","start":18477,"end":18492,"name":"_beautifyOutput"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"Literal","start":18497,"end":18502,"value":false,"raw":"false"},"alternate":{"type":"MemberExpression","start":18505,"end":18525,"object":{"type":"ThisExpression","start":18505,"end":18509},"property":{"type":"Identifier","start":18510,"end":18525,"name":"_beautifyOutput"},"computed":false,"optional":false}}}]}}},{"type":"MethodDefinition","start":18665,"end":18776,"static":false,"computed":false,"key":{"type":"Identifier","start":18665,"end":18678,"name":"preserveOrder"},"kind":"method","value":{"type":"FunctionExpression","start":18678,"end":18776,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":18681,"end":18776,"body":[{"type":"ReturnStatement","start":18692,"end":18769,"argument":{"type":"ConditionalExpression","start":18699,"end":18768,"test":{"type":"CallExpression","start":18700,"end":18738,"callee":{"type":"Identifier","start":18700,"end":18717,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":18718,"end":18737,"object":{"type":"ThisExpression","start":18718,"end":18722},"property":{"type":"Identifier","start":18723,"end":18737,"name":"_preserveOrder"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"Literal","start":18742,"end":18746,"value":true,"raw":"true"},"alternate":{"type":"MemberExpression","start":18749,"end":18768,"object":{"type":"ThisExpression","start":18749,"end":18753},"property":{"type":"Identifier","start":18754,"end":18768,"name":"_preserveOrder"},"computed":false,"optional":false}}}]}}},{"type":"MethodDefinition","start":18882,"end":19144,"static":false,"computed":false,"key":{"type":"Identifier","start":18882,"end":18895,"name":"autotranslate"},"kind":"method","value":{"type":"FunctionExpression","start":18895,"end":19144,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":18898,"end":19144,"body":[{"type":"IfStatement","start":18909,"end":18992,"test":{"type":"CallExpression","start":18913,"end":18951,"callee":{"type":"Identifier","start":18913,"end":18930,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":18931,"end":18950,"object":{"type":"ThisExpression","start":18931,"end":18935},"property":{"type":"Identifier","start":18936,"end":18950,"name":"_autotranslate"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":18953,"end":18992,"body":[{"type":"ReturnStatement","start":18968,"end":18981,"argument":{"type":"Literal","start":18975,"end":18980,"value":false,"raw":"false"}}]},"alternate":null},{"type":"IfStatement","start":19002,"end":19100,"test":{"type":"CallExpression","start":19006,"end":19034,"callee":{"type":"Identifier","start":19006,"end":19013,"name":"isArray"},"arguments":[{"type":"MemberExpression","start":19014,"end":19033,"object":{"type":"ThisExpression","start":19014,"end":19018},"property":{"type":"Identifier","start":19019,"end":19033,"name":"_autotranslate"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":19036,"end":19100,"body":[{"type":"ReturnStatement","start":19051,"end":19089,"argument":{"type":"BinaryExpression","start":19058,"end":19088,"left":{"type":"MemberExpression","start":19058,"end":19084,"object":{"type":"MemberExpression","start":19058,"end":19077,"object":{"type":"ThisExpression","start":19058,"end":19062},"property":{"type":"Identifier","start":19063,"end":19077,"name":"_autotranslate"},"computed":false,"optional":false},"property":{"type":"Identifier","start":19078,"end":19084,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":19087,"end":19088,"value":0,"raw":"0"}}}]},"alternate":null},{"type":"ReturnStatement","start":19110,"end":19137,"argument":{"type":"MemberExpression","start":19117,"end":19136,"object":{"type":"ThisExpression","start":19117,"end":19121},"property":{"type":"Identifier","start":19122,"end":19136,"name":"_autotranslate"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":19262,"end":19365,"static":false,"computed":false,"key":{"type":"Identifier","start":19262,"end":19283,"name":"autotranslateLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":19283,"end":19365,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":19284,"end":19288,"name":"lang"}],"body":{"type":"BlockStatement","start":19290,"end":19365,"body":[{"type":"ReturnStatement","start":19301,"end":19358,"argument":{"type":"BinaryExpression","start":19308,"end":19357,"left":{"type":"CallExpression","start":19308,"end":19352,"callee":{"type":"MemberExpression","start":19308,"end":19346,"object":{"type":"CallExpression","start":19308,"end":19338,"callee":{"type":"MemberExpression","start":19308,"end":19336,"object":{"type":"ThisExpression","start":19308,"end":19312},"property":{"type":"Identifier","start":19313,"end":19336,"name":"autotranslatedLanguages"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":19339,"end":19346,"name":"indexOf"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":19347,"end":19351,"name":"lang"}],"optional":false},"operator":">=","right":{"type":"Literal","start":19356,"end":19357,"value":0,"raw":"0"}}}]}}},{"type":"MethodDefinition","start":19446,"end":19771,"static":false,"computed":false,"key":{"type":"Identifier","start":19446,"end":19469,"name":"autotranslatedLanguages"},"kind":"method","value":{"type":"FunctionExpression","start":19469,"end":19771,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":19472,"end":19771,"body":[{"type":"IfStatement","start":19483,"end":19596,"test":{"type":"LogicalExpression","start":19487,"end":19558,"left":{"type":"CallExpression","start":19487,"end":19525,"callee":{"type":"Identifier","start":19487,"end":19504,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":19505,"end":19524,"object":{"type":"ThisExpression","start":19505,"end":19509},"property":{"type":"Identifier","start":19510,"end":19524,"name":"_autotranslate"},"computed":false,"optional":false}],"optional":false},"operator":"||","right":{"type":"BinaryExpression","start":19529,"end":19558,"left":{"type":"MemberExpression","start":19529,"end":19548,"object":{"type":"ThisExpression","start":19529,"end":19533},"property":{"type":"Identifier","start":19534,"end":19548,"name":"_autotranslate"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":19553,"end":19558,"value":false,"raw":"false"}}},"consequent":{"type":"BlockStatement","start":19560,"end":19596,"body":[{"type":"ReturnStatement","start":19575,"end":19585,"argument":{"type":"ArrayExpression","start":19582,"end":19584,"elements":[]}}]},"alternate":null},{"type":"IfStatement","start":19606,"end":19693,"test":{"type":"CallExpression","start":19610,"end":19638,"callee":{"type":"Identifier","start":19610,"end":19617,"name":"isArray"},"arguments":[{"type":"MemberExpression","start":19618,"end":19637,"object":{"type":"ThisExpression","start":19618,"end":19622},"property":{"type":"Identifier","start":19623,"end":19637,"name":"_autotranslate"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":19640,"end":19693,"body":[{"type":"ReturnStatement","start":19655,"end":19682,"argument":{"type":"MemberExpression","start":19662,"end":19681,"object":{"type":"ThisExpression","start":19662,"end":19666},"property":{"type":"Identifier","start":19667,"end":19681,"name":"_autotranslate"},"computed":false,"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":19703,"end":19736,"argument":{"type":"CallExpression","start":19710,"end":19735,"callee":{"type":"MemberExpression","start":19710,"end":19732,"object":{"type":"CallExpression","start":19710,"end":19726,"callee":{"type":"MemberExpression","start":19710,"end":19724,"object":{"type":"ThisExpression","start":19710,"end":19714},"property":{"type":"Identifier","start":19715,"end":19724,"name":"languages"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":19727,"end":19732,"name":"slice"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":19733,"end":19734,"value":1,"raw":"1"}],"optional":false}}]}}},{"type":"MethodDefinition","start":19867,"end":20451,"static":false,"computed":false,"key":{"type":"Identifier","start":19867,"end":19873,"name":"apikey"},"kind":"method","value":{"type":"FunctionExpression","start":19873,"end":20451,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":19876,"end":20451,"body":[{"type":"IfStatement","start":19887,"end":20444,"test":{"type":"UnaryExpression","start":19891,"end":19923,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":19892,"end":19923,"callee":{"type":"Identifier","start":19892,"end":19909,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":19910,"end":19922,"object":{"type":"ThisExpression","start":19910,"end":19914},"property":{"type":"Identifier","start":19915,"end":19922,"name":"_apikey"},"computed":false,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":19925,"end":19971,"body":[{"type":"ReturnStatement","start":19940,"end":19960,"argument":{"type":"MemberExpression","start":19947,"end":19959,"object":{"type":"ThisExpression","start":19947,"end":19951},"property":{"type":"Identifier","start":19952,"end":19959,"name":"_apikey"},"computed":false,"optional":false}}]},"alternate":{"type":"BlockStatement","start":19986,"end":20444,"body":[{"type":"VariableDeclaration","start":20001,"end":20038,"declarations":[{"type":"VariableDeclarator","start":20007,"end":20037,"id":{"type":"Identifier","start":20007,"end":20017,"name":"apikeyPath"},"init":{"type":"CallExpression","start":20020,"end":20037,"callee":{"type":"MemberExpression","start":20020,"end":20035,"object":{"type":"ThisExpression","start":20020,"end":20024},"property":{"type":"Identifier","start":20025,"end":20035,"name":"apikeyfile"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":20052,"end":20433,"test":{"type":"CallExpression","start":20056,"end":20073,"callee":{"type":"MemberExpression","start":20056,"end":20071,"object":{"type":"ThisExpression","start":20056,"end":20060},"property":{"type":"Identifier","start":20061,"end":20071,"name":"apikeyfile"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":20075,"end":20368,"body":[{"type":"IfStatement","start":20094,"end":20353,"test":{"type":"CallExpression","start":20098,"end":20123,"callee":{"type":"MemberExpression","start":20098,"end":20111,"object":{"type":"Identifier","start":20098,"end":20100,"name":"fs"},"property":{"type":"Identifier","start":20101,"end":20111,"name":"existsSync"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20112,"end":20122,"name":"apikeyPath"}],"optional":false},"consequent":{"type":"BlockStatement","start":20125,"end":20209,"body":[{"type":"ReturnStatement","start":20148,"end":20190,"argument":{"type":"CallExpression","start":20155,"end":20189,"callee":{"type":"MemberExpression","start":20155,"end":20168,"object":{"type":"Identifier","start":20155,"end":20163,"name":"FileUtil"},"property":{"type":"Identifier","start":20164,"end":20168,"name":"read"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20169,"end":20179,"name":"apikeyPath"},{"type":"Literal","start":20181,"end":20188,"value":"utf-8","raw":"'utf-8'"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":20232,"end":20353,"body":[{"type":"ThrowStatement","start":20255,"end":20334,"argument":{"type":"NewExpression","start":20261,"end":20333,"callee":{"type":"Identifier","start":20265,"end":20270,"name":"Error"},"arguments":[{"type":"CallExpression","start":20271,"end":20332,"callee":{"type":"Identifier","start":20271,"end":20277,"name":"format"},"arguments":[{"type":"Literal","start":20278,"end":20319,"value":"api key file not found: API_KEY_FILE=%s","raw":"'api key file not found: API_KEY_FILE=%s'"},{"type":"Identifier","start":20321,"end":20331,"name":"apikeyPath"}],"optional":false}]}}]}}]},"alternate":{"type":"BlockStatement","start":20387,"end":20433,"body":[{"type":"ReturnStatement","start":20406,"end":20418,"argument":{"type":"Literal","start":20413,"end":20417,"value":null,"raw":"null"}}]}}]}}]}}},{"type":"MethodDefinition","start":20628,"end":20887,"static":false,"computed":false,"key":{"type":"Identifier","start":20628,"end":20638,"name":"apikeyfile"},"kind":"method","value":{"type":"FunctionExpression","start":20638,"end":20887,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":20641,"end":20887,"body":[{"type":"IfStatement","start":20652,"end":20880,"test":{"type":"MemberExpression","start":20656,"end":20672,"object":{"type":"ThisExpression","start":20656,"end":20660},"property":{"type":"Identifier","start":20661,"end":20672,"name":"_apikeyfile"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":20674,"end":20724,"body":[{"type":"ReturnStatement","start":20689,"end":20713,"argument":{"type":"MemberExpression","start":20696,"end":20712,"object":{"type":"ThisExpression","start":20696,"end":20700},"property":{"type":"Identifier","start":20701,"end":20712,"name":"_apikeyfile"},"computed":false,"optional":false}}]},"alternate":{"type":"IfStatement","start":20739,"end":20880,"test":{"type":"MemberExpression","start":20743,"end":20767,"object":{"type":"MemberExpression","start":20743,"end":20754,"object":{"type":"Identifier","start":20743,"end":20750,"name":"process"},"property":{"type":"Identifier","start":20751,"end":20754,"name":"env"},"computed":false,"optional":false},"property":{"type":"Identifier","start":20755,"end":20767,"name":"API_KEY_FILE"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":20769,"end":20827,"body":[{"type":"ReturnStatement","start":20784,"end":20816,"argument":{"type":"MemberExpression","start":20791,"end":20815,"object":{"type":"MemberExpression","start":20791,"end":20802,"object":{"type":"Identifier","start":20791,"end":20798,"name":"process"},"property":{"type":"Identifier","start":20799,"end":20802,"name":"env"},"computed":false,"optional":false},"property":{"type":"Identifier","start":20803,"end":20815,"name":"API_KEY_FILE"},"computed":false,"optional":false}}]},"alternate":{"type":"BlockStatement","start":20842,"end":20880,"body":[{"type":"ReturnStatement","start":20857,"end":20869,"argument":{"type":"Literal","start":20864,"end":20868,"value":null,"raw":"null"}}]}}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieGxpZmYtbWVyZ2UtcGFyYW1ldGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL3hsaWZmbWVyZ2UveGxpZmYtbWVyZ2UtcGFyYW1ldGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxLQUFLLEVBQUUsTUFBTSxJQUFJLENBQUM7QUFDekIsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBR3BELE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDNUIsT0FBTyxFQUFDLE9BQU8sRUFBRSxpQkFBaUIsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRTFELE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QyxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUNoRSxPQUFPLEVBQUMsT0FBTyxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQVksTUFBTSxNQUFNLENBQUM7QUFFMUQsTUFBTSxrQkFBa0IsR0FBRyxDQUFDLGNBQWMsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0FBRWpFLE1BQU0sT0FBTyxvQkFBb0I7SUF3QzdCO1FBQ0ksSUFBSSxDQUFDLFdBQVcsR0FBRyxFQUFFLENBQUM7UUFDdEIsSUFBSSxDQUFDLGFBQWEsR0FBRyxFQUFFLENBQUM7SUFDNUIsQ0FBQztJQWREOzs7O09BSUc7SUFDSSxNQUFNLENBQUMsaUJBQWlCLENBQUMsT0FBdUIsRUFBRSxjQUE0QjtRQUNqRixNQUFNLFVBQVUsR0FBRyxJQUFJLG9CQUFvQixFQUFFLENBQUM7UUFDOUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsY0FBYyxDQUFDLENBQUM7UUFDOUMsT0FBTyxVQUFVLENBQUM7SUFDdEIsQ0FBQztJQU9EOzs7OztPQUtHO0lBQ0ssTUFBTSxDQUFDLG9CQUFvQixDQUFDLFdBQW1CO1FBQ25ELElBQUksT0FBZSxDQUFDO1FBQ3BCLElBQUk7WUFDQSxPQUFPLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsT0FBTyxDQUFDLENBQUM7U0FDbkQ7UUFBQyxPQUFPLEdBQUcsRUFBRTtZQUNWLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7UUFDRCxNQUFNLGFBQWEsR0FBZ0IsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN2RCxJQUFJLGFBQWEsSUFBSSxhQUFhLENBQUMsaUJBQWlCLEVBQUU7WUFDbEQsT0FBTyxhQUFhLENBQUM7U0FDeEI7YUFBTTtZQUNILE9BQU8sSUFBSSxDQUFDO1NBQ2Y7SUFDTCxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSyxTQUFTLENBQUMsT0FBdUIsRUFBRSxjQUE0QjtRQUNuRSxJQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQztRQUN0QixJQUFJLENBQUMsYUFBYSxHQUFHLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsY0FBYyxFQUFFO1lBQ2pCLGNBQWMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzlDO1FBQ0QsTUFBTSxZQUFZLEdBQVksQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDakQsSUFBSSxPQUFPLENBQUMsS0FBSyxFQUFFO1lBQ2YsSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDO1NBQy9CO1FBQ0QsSUFBSSxPQUFPLENBQUMsT0FBTyxFQUFFO1lBQ2pCLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQztTQUNuQztRQUNELElBQUksWUFBWSxFQUFFO1lBQ2QsSUFBSSxDQUFDLG9CQUFvQixDQUFDLGNBQWMsQ0FBQyxDQUFDO1lBQzFDLGlGQUFpRjtZQUNqRixJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxJQUFJLE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtnQkFDckQsSUFBSSxDQUFDLFVBQVUsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDO2dCQUNwQyxJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFO29CQUN4QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztpQkFDOUM7YUFDSjtZQUNELElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztTQUMxQjtJQUNMLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ssV0FBVyxDQUFDLE9BQXVCO1FBQ3ZDLE1BQU0sV0FBVyxHQUFXLE9BQU8sQ0FBQyxXQUFXLENBQUM7UUFDaEQsSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUNkLEtBQUssTUFBTSxjQUFjLElBQUksa0JBQWtCLEVBQUU7Z0JBQzdDLE1BQU0sT0FBTyxHQUFHLG9CQUFvQixDQUFDLG9CQUFvQixDQUFDLGNBQWMsQ0FBQyxDQUFDO2dCQUMxRSxJQUFJLE9BQU8sRUFBRTtvQkFDVCxJQUFJLENBQUMsZUFBZSxHQUFHLGNBQWMsQ0FBQztvQkFDdEMsT0FBTyxPQUFPLENBQUM7aUJBQ2xCO2FBQ0o7WUFDRCxPQUFPLEVBQUUsQ0FBQztTQUNiO1FBQ0QsSUFBSSxPQUFlLENBQUM7UUFDcEIsSUFBSTtZQUNBLE9BQU8sR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxPQUFPLENBQUMsQ0FBQztTQUNuRDtRQUFDLE9BQU8sR0FBRyxFQUFFO1lBQ1YsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxlQUFlLENBQUMsMEJBQTBCLEdBQUcsV0FBVyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDM0YsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUNELElBQUksQ0FBQyxlQUFlLEdBQUcsV0FBVyxDQUFDO1FBQ25DLE1BQU0sY0FBYyxHQUFnQixJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3hELGtEQUFrRDtRQUNsRCxNQUFNLGlCQUFpQixHQUFHLGNBQWMsQ0FBQyxpQkFBaUIsQ0FBQztRQUMzRCxpQkFBaUIsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLHVCQUF1QixDQUFDLFdBQVcsRUFBRSxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMvRixpQkFBaUIsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLHVCQUF1QixDQUFDLFdBQVcsRUFBRSxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMvRixpQkFBaUIsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLHVCQUF1QixDQUFDLFdBQVcsRUFBRSxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN2RyxPQUFPLGNBQWMsQ0FBQztJQUMxQixDQUFDO0lBRU8sdUJBQXVCLENBQUMsV0FBbUIsRUFBRSxZQUFnQztRQUNqRixJQUFJLENBQUMsWUFBWSxJQUFJLFVBQVUsQ0FBQyxZQUFZLENBQUMsRUFBRTtZQUMzQyxPQUFPLFlBQVksQ0FBQztTQUN2QjtRQUNELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsRUFBRSxZQUFZLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ3hFLENBQUM7SUFFTyxvQkFBb0IsQ0FBQyxjQUEyQjtRQUNwRCxJQUFJLENBQUMsY0FBYyxFQUFFO1lBQ2pCLE9BQU87U0FDVjtRQUNELE1BQU0sT0FBTyxHQUFHLGNBQWMsQ0FBQyxpQkFBaUIsQ0FBQztRQUNqRCxJQUFJLE9BQU8sRUFBRTtZQUNULElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7Z0JBQ25DLElBQUksQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQzthQUMvQjtZQUNELElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQ3JDLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQzthQUNuQztZQUNELElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLEVBQUU7Z0JBQzNDLElBQUksQ0FBQyxjQUFjLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQzthQUMvQztZQUNELElBQUksT0FBTyxDQUFDLGVBQWUsRUFBRTtnQkFDekIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLE9BQU8sQ0FBQyxlQUFlLENBQUM7YUFDbkQ7WUFDRCxJQUFJLE9BQU8sQ0FBQyxTQUFTLEVBQUU7Z0JBQ25CLElBQUksQ0FBQyxVQUFVLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQzthQUN2QztZQUNELElBQUksT0FBTyxDQUFDLE1BQU0sRUFBRTtnQkFDaEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDO2FBQ2pDO1lBQ0QsSUFBSSxPQUFPLENBQUMsc0JBQXNCLEVBQUU7Z0JBQ2hDLElBQUksT0FBTyxDQUFDLHNCQUFzQixDQUFDLE1BQU0sRUFBRTtvQkFDdkMsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMsc0JBQXNCLENBQUMsTUFBTSxDQUFDO2lCQUN4RDthQUNKO1lBQ0QsSUFBSSxPQUFPLENBQUMsTUFBTSxFQUFFO2dCQUNoQiw0REFBNEQ7Z0JBQzVELElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQzthQUNqQztZQUNELElBQUksT0FBTyxDQUFDLFlBQVksRUFBRTtnQkFDdEIsSUFBSSxDQUFDLGFBQWEsR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDO2FBQzdDO1lBQ0QsSUFBSSxPQUFPLENBQUMsUUFBUSxFQUFFO2dCQUNsQixJQUFJLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7YUFDckM7WUFDRCxJQUFJLE9BQU8sQ0FBQyxVQUFVLEVBQUU7Z0JBQ3BCLElBQUksQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQzthQUN6QztZQUNELElBQUksT0FBTyxDQUFDLFFBQVEsRUFBRTtnQkFDbEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDO2FBQ3JDO1lBQ0QsSUFBSSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsRUFBRTtnQkFDN0MsSUFBSSxDQUFDLGdCQUFnQixHQUFHLE9BQU8sQ0FBQyxlQUFlLENBQUM7YUFDbkQ7WUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLEVBQUU7Z0JBQ2pELElBQUksQ0FBQyxvQkFBb0IsR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUM7YUFDM0Q7WUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLDZCQUE2QixDQUFDLEVBQUU7Z0JBQzNELElBQUksQ0FBQyw4QkFBOEIsR0FBRyxPQUFPLENBQUMsNkJBQTZCLENBQUM7YUFDL0U7WUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLEVBQUU7Z0JBQy9DLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxPQUFPLENBQUMsaUJBQWlCLENBQUM7YUFDdkQ7WUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxFQUFFO2dCQUMzQyxJQUFJLENBQUMsY0FBYyxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUM7YUFDL0M7WUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxFQUFFO2dCQUMxQyxJQUFJLENBQUMsYUFBYSxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUM7YUFDN0M7WUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxFQUFFO2dCQUMzQyxJQUFJLENBQUMsY0FBYyxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUM7YUFDL0M7WUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxFQUFFO2dCQUM1QyxJQUFJLENBQUMsZUFBZSxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUM7YUFDakQ7WUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxFQUFFO2dCQUMzQyxJQUFJLENBQUMsY0FBYyxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUM7YUFDL0M7WUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO2dCQUNwQyxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUM7YUFDakM7WUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUFFO2dCQUN4QyxJQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUM7YUFDekM7U0FDSjthQUFNO1lBQ0gsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsNkRBQTZELENBQUMsQ0FBQztTQUMxRjtJQUNMLENBQUM7SUFFRDs7O09BR0c7SUFDSyxlQUFlO1FBQ25CLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQztRQUNqRCxJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQy9CLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksZUFBZSxDQUFDLHdCQUF3QixDQUFDLENBQUMsQ0FBQztTQUN4RTtRQUNELElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUM5QixJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbkMsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLEtBQVksQ0FBQztRQUNqQixJQUFJLEdBQVEsQ0FBQztRQUNiLHVCQUF1QjtRQUN2QixJQUFJO1lBQ0EsS0FBSyxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7U0FDdEM7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNSLEdBQUcsR0FBRyxDQUFDLENBQUM7U0FDWDtRQUNELElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsRUFBRTtZQUMvQixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLGVBQWUsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLHNCQUFzQixDQUFDLENBQUMsQ0FBQztTQUNuRztRQUNELHVCQUF1QjtRQUN2QixJQUFJO1lBQ0EsS0FBSyxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7U0FDdEM7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNSLEdBQUcsR0FBRyxDQUFDLENBQUM7U0FDWDtRQUNELElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsRUFBRTtZQUMvQixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLGVBQWUsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLHNCQUFzQixDQUFDLENBQUMsQ0FBQztTQUNuRztRQUNELHlCQUF5QjtRQUN6QixJQUFJO1lBQ0EsRUFBRSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNyRDtRQUFDLE9BQU8sR0FBRyxFQUFFO1lBQ1YsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxlQUFlLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxtQkFBbUIsQ0FBQyxDQUFDLENBQUM7U0FDcEc7UUFDRCxxQ0FBcUM7UUFDckMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxLQUFLLEtBQUssSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFLEtBQUssTUFBTSxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUUsS0FBSyxLQUFLLENBQUMsRUFBRTtZQUMvRixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLGVBQWUsQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxHQUFHLDZDQUE2QyxDQUFDLENBQUMsQ0FBQztTQUNsSTtRQUNELGlDQUFpQztRQUNqQyxJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFBRTtZQUN4QyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLGVBQWUsQ0FBQyxtREFBbUQsQ0FBQyxDQUFDLENBQUM7U0FDbkc7UUFDRCw0REFBNEQ7UUFDNUQsSUFBSSxDQUFDLHVCQUF1QixFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7WUFDNUMsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRTtnQkFDcEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxlQUFlLENBQUMsMEJBQTBCLEdBQUcsSUFBSSxHQUFHLCtCQUErQixDQUFDLENBQUMsQ0FBQzthQUNuSDtZQUNELElBQUksSUFBSSxLQUFLLElBQUksQ0FBQyxlQUFlLEVBQUUsRUFBRTtnQkFDakMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQ2pCLElBQUksZUFBZSxDQUFDLDBCQUEwQixHQUFHLElBQUksR0FBRywyREFBMkQsQ0FBQyxDQUFDLENBQUM7YUFDN0g7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUNILDhCQUE4QjtRQUM5QixJQUFJLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxFQUFFO1lBQzVCLE1BQU0sV0FBVyxHQUFHLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsNkJBQTZCLEVBQUUsQ0FBQyxDQUFDO1lBQzdGLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxXQUFXLENBQUMsRUFBRTtnQkFDakMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQ2pCLElBQUksZUFBZSxDQUFDLGlDQUFpQyxHQUFHLElBQUksQ0FBQyw2QkFBNkIsRUFBRSxHQUFHLEtBQUssR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDO2FBQzVIO1NBQ0o7UUFDRCx1Q0FBdUM7UUFDdkMsSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxFQUFFO1lBQzNCLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7Z0JBQ2pDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUNuQiw0QkFBNEIsR0FBRyxJQUFJLENBQUMsYUFBYSxFQUFFLEdBQUcsNkRBQTZELENBQUMsQ0FBQzthQUM1SDtZQUNELElBQUksSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7Z0JBQ2hDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUNuQiwyQkFBMkIsR0FBRyxJQUFJLENBQUMsWUFBWSxFQUFFLEdBQUcsNkRBQTZELENBQUMsQ0FBQzthQUMxSDtTQUNKO0lBQ0osQ0FBQztJQUVGOzs7OztPQUtHO0lBQ0ssbUJBQW1CLENBQUMsSUFBWTtRQUNwQyxNQUFNLE9BQU8sR0FBRyx3Q0FBd0MsQ0FBQztRQUN6RCxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNyQixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLGVBQWUsQ0FBQyxZQUFZLEdBQUcsSUFBSSxHQUFHLGdCQUFnQixDQUFDLENBQUMsQ0FBQztTQUN0RjtJQUNMLENBQUM7SUFFTSxhQUFhO1FBQ2hCLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQ2xGLENBQUM7SUFFTSxPQUFPO1FBQ1YsT0FBTyxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdEUsQ0FBQztJQUVNLEtBQUs7UUFDUixPQUFPLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNsRSxDQUFDO0lBRUQ7O09BRUc7SUFDSSxpQkFBaUIsQ0FBQyxhQUE0QjtRQUNqRCxhQUFhLENBQUMsS0FBSyxDQUFDLDZCQUE2QixDQUFDLENBQUM7UUFDbkQsYUFBYSxDQUFDLEtBQUssQ0FBQyx3QkFBd0IsRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDcEUsYUFBYSxDQUFDLEtBQUssQ0FBQyx3QkFBd0IsRUFBRSxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQztRQUN0RSxhQUFhLENBQUMsS0FBSyxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztRQUNwRCxhQUFhLENBQUMsS0FBSyxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztRQUNwRCxhQUFhLENBQUMsS0FBSyxDQUFDLHFCQUFxQixFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDO1FBQ2hFLGFBQWEsQ0FBQyxLQUFLLENBQUMsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7UUFDeEQsYUFBYSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQztRQUN4RCxLQUFLLE1BQU0sUUFBUSxJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUUsRUFBRTtZQUNyQyxhQUFhLENBQUMsS0FBSyxDQUFDLHFCQUFxQixFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztTQUMxRjtRQUNELGFBQWEsQ0FBQyxLQUFLLENBQUMsc0JBQXNCLEVBQUUsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUM7UUFDcEUsYUFBYSxDQUFDLEtBQUssQ0FBQywwQkFBMEIsRUFBRSxJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQyxDQUFDO1FBQzVFLElBQUksSUFBSSxDQUFDLG1CQUFtQixFQUFFLEVBQUU7WUFDNUIsYUFBYSxDQUFDLEtBQUssQ0FBQyxvQ0FBb0MsRUFBRSxJQUFJLENBQUMsNkJBQTZCLEVBQUUsQ0FBQyxDQUFDO1NBQ25HO1FBQ0QsYUFBYSxDQUFDLEtBQUssQ0FBQyx3QkFBd0IsRUFBRSxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxDQUFDO1FBQ3hFLElBQUksSUFBSSxDQUFDLGlCQUFpQixFQUFFLEVBQUU7WUFDMUIsYUFBYSxDQUFDLEtBQUssQ0FBQyxzQkFBc0IsRUFBRSxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQztZQUNsRSxhQUFhLENBQUMsS0FBSyxDQUFDLHFCQUFxQixFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDO1NBQ25FO1FBQ0QsYUFBYSxDQUFDLEtBQUssQ0FBQyxvQkFBb0IsRUFBRSxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQztRQUNoRSxhQUFhLENBQUMsS0FBSyxDQUFDLHFCQUFxQixFQUFFLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDO1FBQ2xFLGFBQWEsQ0FBQyxLQUFLLENBQUMsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUM7UUFDaEUsYUFBYSxDQUFDLEtBQUssQ0FBQyxvQkFBb0IsRUFBRSxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQztRQUNoRSxJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUUsRUFBRTtZQUN0QixhQUFhLENBQUMsS0FBSyxDQUFDLCtCQUErQixFQUFFLElBQUksQ0FBQyx1QkFBdUIsRUFBRSxDQUFDLENBQUM7WUFDckYsYUFBYSxDQUFDLEtBQUssQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ3ZFLGFBQWEsQ0FBQyxLQUFLLENBQUMsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUM7U0FDN0Q7SUFDTCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksZUFBZTtRQUNsQixPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDaEUsQ0FBQztJQUVEOzs7T0FHRztJQUNJLFNBQVM7UUFDWixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUNsRCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksTUFBTTtRQUNULE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO0lBQzdDLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksWUFBWTtRQUNmLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDO0lBQ2hFLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksUUFBUTtRQUNYLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFDckIsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQywwQkFBMEIsRUFBRSxDQUFDLENBQ3BHLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLFVBQVU7UUFDYixPQUFPLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDekQsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxpQkFBaUIsQ0FBQyxJQUFZO1FBQ2pDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLEdBQUcsR0FBRyxHQUFHLElBQUksR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLDBCQUEwQixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQy9ILENBQUM7SUFFTywwQkFBMEI7UUFDOUIsUUFBUSxJQUFJLENBQUMsVUFBVSxFQUFFLEVBQUU7WUFDdkIsS0FBSyxLQUFLO2dCQUNOLE9BQU8sS0FBSyxDQUFDO1lBQ2pCLEtBQUssTUFBTTtnQkFDUCxPQUFPLEtBQUssQ0FBQztZQUNqQixLQUFLLEtBQUs7Z0JBQ04sT0FBTyxLQUFLLENBQUM7U0FDcEI7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLHlCQUF5QixDQUFDLElBQVk7UUFDekMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsR0FBRyxHQUFHLEdBQUcsSUFBSSxHQUFHLEdBQUcsR0FBRyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ3BHLENBQUM7SUFFRDs7O09BR0c7SUFDSSxRQUFRO1FBQ1gsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7SUFDckQsQ0FBQztJQUVBOzs7TUFHRTtJQUNJLE1BQU07UUFDVCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUN2RCxDQUFDO0lBRU0sZUFBZTtRQUNsQixPQUFPLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7SUFDckYsQ0FBQztJQUVNLG1CQUFtQjtRQUN0QixPQUFPLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUM7SUFDOUYsQ0FBQztJQUVNLDZCQUE2QjtRQUNoQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLDhCQUE4QixDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzdELHFCQUFxQixDQUFDLHdCQUF3QixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsOEJBQThCLENBQUM7SUFDN0YsQ0FBQztJQUVEOzs7T0FHRztJQUNJLGlCQUFpQjtRQUNwQixPQUFPLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUM7SUFDekYsQ0FBQztJQUVEOzs7T0FHRztJQUNJLGFBQWE7UUFDaEIsT0FBTyxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUM7SUFDL0UsQ0FBQztJQUVEOzs7T0FHRztJQUNJLFlBQVk7UUFDZixPQUFPLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM3RSxDQUFDO0lBRUQ7O09BRUc7SUFDSSxjQUFjO1FBQ2pCLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDO0lBQ3BGLENBQUM7SUFFRDs7O09BR0c7SUFDSSxhQUFhO1FBQ2hCLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQ2pGLENBQUM7SUFFRDs7O09BR0c7SUFDSSxhQUFhO1FBQ2hCLElBQUksaUJBQWlCLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUFFO1lBQ3hDLE9BQU8sS0FBSyxDQUFDO1NBQ2hCO1FBQ0QsSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUFFO1lBQzlCLE9BQWtCLElBQUksQ0FBQyxjQUFlLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztTQUNyRDtRQUNELE9BQWlCLElBQUksQ0FBQyxjQUFjLENBQUM7SUFDekMsQ0FBQztJQUVEOzs7T0FHRztJQUNJLHFCQUFxQixDQUFDLElBQVk7UUFDckMsT0FBTyxJQUFJLENBQUMsdUJBQXVCLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdELENBQUM7SUFFRDs7T0FFRztJQUNJLHVCQUF1QjtRQUMxQixJQUFJLGlCQUFpQixDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxJQUFJLENBQUMsY0FBYyxLQUFLLEtBQUssRUFBRTtZQUN6RSxPQUFPLEVBQUUsQ0FBQztTQUNiO1FBQ0QsSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUFFO1lBQzlCLE9BQWtCLElBQUksQ0FBQyxjQUFlLENBQUM7U0FDMUM7UUFDRCxPQUFPLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQywyQkFBMkI7SUFDakUsQ0FBQztJQUVEOzs7T0FHRztJQUNJLE1BQU07UUFDVCxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ2xDLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztTQUN2QjthQUFNO1lBQ0gsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBQ3JDLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRSxFQUFFO2dCQUNuQixJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLEVBQUU7b0JBQzNCLE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLENBQUM7aUJBQzdDO3FCQUFNO29CQUNILE1BQU0sSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLHlDQUF5QyxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7aUJBQ2xGO2FBQ0o7aUJBQU07Z0JBQ0gsT0FBTyxJQUFJLENBQUM7YUFDZjtTQUNKO0lBQ0wsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxVQUFVO1FBQ2IsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ2xCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztTQUMzQjthQUFNLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUU7WUFDakMsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQztTQUNuQzthQUFNO1lBQ0gsT0FBTyxJQUFJLENBQUM7U0FDZjtJQUNMLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAxNy4wMi4yMDE3LlxyXG4gKiBDb2xsZWN0aW9uIG9mIGFsbCBwYXJhbWV0ZXJzIHVzZWQgYnkgdGhlIHRvb2wuXHJcbiAqIFRoZSBwYXJhbWV0ZXJzIGFyZSByZWFkIGZvcm0gdGhlIHByb2ZpbGUgb3IgZGVmYXVsdHMgYXJlIHVzZWQuXHJcbiAqL1xyXG5cclxuaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnO1xyXG5pbXBvcnQge1hsaWZmTWVyZ2VFcnJvcn0gZnJvbSAnLi94bGlmZi1tZXJnZS1lcnJvcic7XHJcbmltcG9ydCB7U3RhdHN9IGZyb20gJ2ZzJztcclxuaW1wb3J0IHtDb21tYW5kT3V0cHV0fSBmcm9tICcuLi9jb21tb24vY29tbWFuZC1vdXRwdXQnO1xyXG5pbXBvcnQge2Zvcm1hdH0gZnJvbSAndXRpbCc7XHJcbmltcG9ydCB7aXNBcnJheSwgaXNOdWxsT3JVbmRlZmluZWR9IGZyb20gJy4uL2NvbW1vbi91dGlsJztcclxuaW1wb3J0IHtQcm9ncmFtT3B0aW9ucywgSUNvbmZpZ0ZpbGV9IGZyb20gJy4vaS14bGlmZi1tZXJnZS1vcHRpb25zJztcclxuaW1wb3J0IHtGaWxlVXRpbH0gZnJvbSAnLi4vY29tbW9uL2ZpbGUtdXRpbCc7XHJcbmltcG9ydCB7Tmd4VHJhbnNsYXRlRXh0cmFjdG9yfSBmcm9tICcuL25neC10cmFuc2xhdGUtZXh0cmFjdG9yJztcclxuaW1wb3J0IHtkaXJuYW1lLCBpc0Fic29sdXRlLCBqb2luLCBub3JtYWxpemV9IGZyb20gJ3BhdGgnO1xyXG5cclxuY29uc3QgUFJPRklMRV9DQU5ESURBVEVTID0gWydwYWNrYWdlLmpzb24nLCAnLmFuZ3VsYXItY2xpLmpzb24nXTtcclxuXHJcbmV4cG9ydCBjbGFzcyBYbGlmZk1lcmdlUGFyYW1ldGVycyB7XHJcblxyXG4gICAgcHJpdmF0ZSB1c2VkUHJvZmlsZVBhdGg6IHN0cmluZztcclxuICAgIHByaXZhdGUgX3F1aWV0OiBib29sZWFuO1xyXG4gICAgcHJpdmF0ZSBfdmVyYm9zZTogYm9vbGVhbjtcclxuICAgIHByaXZhdGUgX2FsbG93SWRDaGFuZ2U6IGJvb2xlYW47XHJcbiAgICBwcml2YXRlIF9kZWZhdWx0TGFuZ3VhZ2U6IHN0cmluZztcclxuICAgIHByaXZhdGUgX3NyY0Rpcjogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBfaTE4bkJhc2VGaWxlOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIF9pMThuRmlsZTogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBfaTE4bkZvcm1hdDogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBfZW5jb2Rpbmc6IEJ1ZmZlckVuY29kaW5nIDtcclxuICAgIHByaXZhdGUgX2dlbkRpcjogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBfbGFuZ3VhZ2VzOiBzdHJpbmdbXTtcclxuICAgIHByaXZhdGUgX3JlbW92ZVVudXNlZElkczogYm9vbGVhbjtcclxuICAgIHByaXZhdGUgX3N1cHBvcnROZ3hUcmFuc2xhdGU6IGJvb2xlYW47XHJcbiAgICBwcml2YXRlIF9uZ3hUcmFuc2xhdGVFeHRyYWN0aW9uUGF0dGVybjogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBfdXNlU291cmNlQXNUYXJnZXQ6IGJvb2xlYW47XHJcbiAgICBwcml2YXRlIF90YXJnZXRQcmFlZml4OiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIF90YXJnZXRTdWZmaXg6IHN0cmluZztcclxuICAgIHByaXZhdGUgX2JlYXV0aWZ5T3V0cHV0OiBib29sZWFuO1xyXG4gICAgcHJpdmF0ZSBfcHJlc2VydmVPcmRlcjogYm9vbGVhbjtcclxuICAgIHByaXZhdGUgX2F1dG90cmFuc2xhdGU6IGJvb2xlYW58c3RyaW5nW107XHJcbiAgICBwcml2YXRlIF9hcGlrZXk6IHN0cmluZztcclxuICAgIHByaXZhdGUgX2FwaWtleWZpbGU6IHN0cmluZztcclxuXHJcbiAgICBwdWJsaWMgZXJyb3JzRm91bmQ6IFhsaWZmTWVyZ2VFcnJvcltdO1xyXG4gICAgcHVibGljIHdhcm5pbmdzRm91bmQ6IHN0cmluZ1tdO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIFBhcmFtZXRlcnMuXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBjb21tYW5kIG9wdGlvbnNcclxuICAgICAqIEBwYXJhbSBwcm9maWxlQ29udGVudCBnaXZlbiBwcm9maWxlIChpZiBub3QsIGl0IGlzIHJlYWQgZnJvbSB0aGUgcHJvZmlsZSBwYXRoIGZyb20gb3B0aW9ucykuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgY3JlYXRlRnJvbU9wdGlvbnMob3B0aW9uczogUHJvZ3JhbU9wdGlvbnMsIHByb2ZpbGVDb250ZW50PzogSUNvbmZpZ0ZpbGUpIHtcclxuICAgICAgICBjb25zdCBwYXJhbWV0ZXJzID0gbmV3IFhsaWZmTWVyZ2VQYXJhbWV0ZXJzKCk7XHJcbiAgICAgICAgcGFyYW1ldGVycy5jb25maWd1cmUob3B0aW9ucywgcHJvZmlsZUNvbnRlbnQpO1xyXG4gICAgICAgIHJldHVybiBwYXJhbWV0ZXJzO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5lcnJvcnNGb3VuZCA9IFtdO1xyXG4gICAgICAgIHRoaXMud2FybmluZ3NGb3VuZCA9IFtdO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVhZCBwb3RlbnRpYWwgcHJvZmlsZS5cclxuICAgICAqIFRvIGJlIGEgY2FuZGlkYXRlLCBmaWxlIG11c3QgZXhpc3QgYW5kIGNvbnRhaW4gcHJvcGVydHkgXCJ4bGlmZm1lcmdlT3B0aW9uc1wiLlxyXG4gICAgICogQHBhcmFtIHByb2ZpbGVQYXRoIHBhdGggb2YgcHJvZmlsZVxyXG4gICAgICogQHJldHVybiBwYXJzZWQgY29udGVudCBvZiBmaWxlIG9yIG51bGwsIGlmIGZpbGUgZG9lcyBub3QgZXhpc3Qgb3IgaXMgbm90IGEgcHJvZmlsZSBjYW5kaWRhdGUuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgc3RhdGljIHJlYWRQcm9maWxlQ2FuZGlkYXRlKHByb2ZpbGVQYXRoOiBzdHJpbmcpOiBJQ29uZmlnRmlsZSB7XHJcbiAgICAgICAgbGV0IGNvbnRlbnQ6IHN0cmluZztcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb250ZW50ID0gZnMucmVhZEZpbGVTeW5jKHByb2ZpbGVQYXRoLCAndXRmLTgnKTtcclxuICAgICAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHBhcnNlZENvbnRlbnQ6IElDb25maWdGaWxlID0gSlNPTi5wYXJzZShjb250ZW50KTtcclxuICAgICAgICBpZiAocGFyc2VkQ29udGVudCAmJiBwYXJzZWRDb250ZW50LnhsaWZmbWVyZ2VPcHRpb25zKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBwYXJzZWRDb250ZW50O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEluaXRpYWxpemUgbWUgZnJvbSB0aGUgcHJvZmlsZSBjb250ZW50LlxyXG4gICAgICogKHB1YmxpYyBvbmx5IGZvciB0ZXN0IHVzYWdlKS5cclxuICAgICAqIEBwYXJhbSBvcHRpb25zIG9wdGlvbnMgZ2l2ZW4gYXQgcnVudGltZSB2aWEgY29tbWFuZCBsaW5lXHJcbiAgICAgKiBAcGFyYW0gcHJvZmlsZUNvbnRlbnQgaWYgbnVsbCwgcmVhZCBpdCBmcm9tIHByb2ZpbGUuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgY29uZmlndXJlKG9wdGlvbnM6IFByb2dyYW1PcHRpb25zLCBwcm9maWxlQ29udGVudD86IElDb25maWdGaWxlKSB7XHJcbiAgICAgICAgdGhpcy5lcnJvcnNGb3VuZCA9IFtdO1xyXG4gICAgICAgIHRoaXMud2FybmluZ3NGb3VuZCA9IFtdO1xyXG4gICAgICAgIGlmICghcHJvZmlsZUNvbnRlbnQpIHtcclxuICAgICAgICAgICAgcHJvZmlsZUNvbnRlbnQgPSB0aGlzLnJlYWRQcm9maWxlKG9wdGlvbnMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCB2YWxpZFByb2ZpbGU6IGJvb2xlYW4gPSAoISFwcm9maWxlQ29udGVudCk7XHJcbiAgICAgICAgaWYgKG9wdGlvbnMucXVpZXQpIHtcclxuICAgICAgICAgICAgdGhpcy5fcXVpZXQgPSBvcHRpb25zLnF1aWV0O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAob3B0aW9ucy52ZXJib3NlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3ZlcmJvc2UgPSBvcHRpb25zLnZlcmJvc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh2YWxpZFByb2ZpbGUpIHtcclxuICAgICAgICAgICAgdGhpcy5pbml0aWFsaXplRnJvbUNvbmZpZyhwcm9maWxlQ29udGVudCk7XHJcbiAgICAgICAgICAgIC8vIGlmIGxhbmd1YWdlcyBhcmUgZ2l2ZW4gYXMgcGFyYW1ldGVycywgdGhleSBvdnZlcmlkZSBldmVyeXRoaW5nIHNhaWQgaW4gcHJvZmlsZVxyXG4gICAgICAgICAgICBpZiAoISFvcHRpb25zLmxhbmd1YWdlcyAmJiBvcHRpb25zLmxhbmd1YWdlcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9sYW5ndWFnZXMgPSBvcHRpb25zLmxhbmd1YWdlcztcclxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5fZGVmYXVsdExhbmd1YWdlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZGVmYXVsdExhbmd1YWdlID0gdGhpcy5fbGFuZ3VhZ2VzWzBdO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuY2hlY2tQYXJhbWV0ZXJzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVhZCBwcm9maWxlLlxyXG4gICAgICogQHBhcmFtIG9wdGlvbnMgcHJvZ3JhbSBvcHRpb25zXHJcbiAgICAgKiBAcmV0dXJuIHRoZSByZWFkIHByb2ZpbGUgKGVtcHR5LCBpZiBub25lLCBudWxsIGlmIGVycm9ycylcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSByZWFkUHJvZmlsZShvcHRpb25zOiBQcm9ncmFtT3B0aW9ucyk6IElDb25maWdGaWxlIHtcclxuICAgICAgICBjb25zdCBwcm9maWxlUGF0aDogc3RyaW5nID0gb3B0aW9ucy5wcm9maWxlUGF0aDtcclxuICAgICAgICBpZiAoIXByb2ZpbGVQYXRoKSB7XHJcbiAgICAgICAgICAgIGZvciAoY29uc3QgY29uZmlnZmlsZW5hbWUgb2YgUFJPRklMRV9DQU5ESURBVEVTKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBwcm9maWxlID0gWGxpZmZNZXJnZVBhcmFtZXRlcnMucmVhZFByb2ZpbGVDYW5kaWRhdGUoY29uZmlnZmlsZW5hbWUpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHByb2ZpbGUpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnVzZWRQcm9maWxlUGF0aCA9IGNvbmZpZ2ZpbGVuYW1lO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9maWxlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB7fTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGNvbnRlbnQ6IHN0cmluZztcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb250ZW50ID0gZnMucmVhZEZpbGVTeW5jKHByb2ZpbGVQYXRoLCAndXRmLTgnKTtcclxuICAgICAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICAgICAgdGhpcy5lcnJvcnNGb3VuZC5wdXNoKG5ldyBYbGlmZk1lcmdlRXJyb3IoJ2NvdWxkIG5vdCByZWFkIHByb2ZpbGUgXCInICsgcHJvZmlsZVBhdGggKyAnXCInKSk7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnVzZWRQcm9maWxlUGF0aCA9IHByb2ZpbGVQYXRoO1xyXG4gICAgICAgIGNvbnN0IHByb2ZpbGVDb250ZW50OiBJQ29uZmlnRmlsZSA9IEpTT04ucGFyc2UoY29udGVudCk7XHJcbiAgICAgICAgLy8gcmVwbGFjZSBhbGwgcGF0aGVzIGluIG9wdGlvbnMgYnkgYWJzb2x1dGUgcGF0aHNcclxuICAgICAgICBjb25zdCB4bGlmZm1lcmdlT3B0aW9ucyA9IHByb2ZpbGVDb250ZW50LnhsaWZmbWVyZ2VPcHRpb25zO1xyXG4gICAgICAgIHhsaWZmbWVyZ2VPcHRpb25zLnNyY0RpciA9IHRoaXMuYWRqdXN0UGF0aFRvUHJvZmlsZVBhdGgocHJvZmlsZVBhdGgsIHhsaWZmbWVyZ2VPcHRpb25zLnNyY0Rpcik7XHJcbiAgICAgICAgeGxpZmZtZXJnZU9wdGlvbnMuZ2VuRGlyID0gdGhpcy5hZGp1c3RQYXRoVG9Qcm9maWxlUGF0aChwcm9maWxlUGF0aCwgeGxpZmZtZXJnZU9wdGlvbnMuZ2VuRGlyKTtcclxuICAgICAgICB4bGlmZm1lcmdlT3B0aW9ucy5hcGlrZXlmaWxlID0gdGhpcy5hZGp1c3RQYXRoVG9Qcm9maWxlUGF0aChwcm9maWxlUGF0aCwgeGxpZmZtZXJnZU9wdGlvbnMuYXBpa2V5ZmlsZSk7XHJcbiAgICAgICAgcmV0dXJuIHByb2ZpbGVDb250ZW50O1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgYWRqdXN0UGF0aFRvUHJvZmlsZVBhdGgocHJvZmlsZVBhdGg6IHN0cmluZywgcGF0aFRvQWRqdXN0OiBzdHJpbmcgfCB1bmRlZmluZWQpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xyXG4gICAgICAgIGlmICghcGF0aFRvQWRqdXN0IHx8IGlzQWJzb2x1dGUocGF0aFRvQWRqdXN0KSkge1xyXG4gICAgICAgICAgICByZXR1cm4gcGF0aFRvQWRqdXN0O1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gam9pbihkaXJuYW1lKHByb2ZpbGVQYXRoKSwgcGF0aFRvQWRqdXN0KS5yZXBsYWNlKC9cXFxcL2csICcvJyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBpbml0aWFsaXplRnJvbUNvbmZpZyhwcm9maWxlQ29udGVudDogSUNvbmZpZ0ZpbGUpIHtcclxuICAgICAgICBpZiAoIXByb2ZpbGVDb250ZW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgcHJvZmlsZSA9IHByb2ZpbGVDb250ZW50LnhsaWZmbWVyZ2VPcHRpb25zO1xyXG4gICAgICAgIGlmIChwcm9maWxlKSB7XHJcbiAgICAgICAgICAgIGlmICghaXNOdWxsT3JVbmRlZmluZWQocHJvZmlsZS5xdWlldCkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3F1aWV0ID0gcHJvZmlsZS5xdWlldDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKHByb2ZpbGUudmVyYm9zZSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3ZlcmJvc2UgPSBwcm9maWxlLnZlcmJvc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCFpc051bGxPclVuZGVmaW5lZChwcm9maWxlLmFsbG93SWRDaGFuZ2UpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9hbGxvd0lkQ2hhbmdlID0gcHJvZmlsZS5hbGxvd0lkQ2hhbmdlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChwcm9maWxlLmRlZmF1bHRMYW5ndWFnZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZGVmYXVsdExhbmd1YWdlID0gcHJvZmlsZS5kZWZhdWx0TGFuZ3VhZ2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHByb2ZpbGUubGFuZ3VhZ2VzKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9sYW5ndWFnZXMgPSBwcm9maWxlLmxhbmd1YWdlcztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAocHJvZmlsZS5zcmNEaXIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3NyY0RpciA9IHByb2ZpbGUuc3JjRGlyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChwcm9maWxlLmFuZ3VsYXJDb21waWxlck9wdGlvbnMpIHtcclxuICAgICAgICAgICAgICAgIGlmIChwcm9maWxlLmFuZ3VsYXJDb21waWxlck9wdGlvbnMuZ2VuRGlyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZ2VuRGlyID0gcHJvZmlsZS5hbmd1bGFyQ29tcGlsZXJPcHRpb25zLmdlbkRpcjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAocHJvZmlsZS5nZW5EaXIpIHtcclxuICAgICAgICAgICAgICAgIC8vIHRoaXMgbXVzdCBiZSBhZnRlciBhbmd1bGFyQ29tcGlsZXJPcHRpb25zIHRvIGJlIHByZWZlcnJlZFxyXG4gICAgICAgICAgICAgICAgdGhpcy5fZ2VuRGlyID0gcHJvZmlsZS5nZW5EaXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHByb2ZpbGUuaTE4bkJhc2VGaWxlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9pMThuQmFzZUZpbGUgPSBwcm9maWxlLmkxOG5CYXNlRmlsZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAocHJvZmlsZS5pMThuRmlsZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5faTE4bkZpbGUgPSBwcm9maWxlLmkxOG5GaWxlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChwcm9maWxlLmkxOG5Gb3JtYXQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2kxOG5Gb3JtYXQgPSBwcm9maWxlLmkxOG5Gb3JtYXQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHByb2ZpbGUuZW5jb2RpbmcpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2VuY29kaW5nID0gcHJvZmlsZS5lbmNvZGluZztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKHByb2ZpbGUucmVtb3ZlVW51c2VkSWRzKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcmVtb3ZlVW51c2VkSWRzID0gcHJvZmlsZS5yZW1vdmVVbnVzZWRJZHM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCFpc051bGxPclVuZGVmaW5lZChwcm9maWxlLnN1cHBvcnROZ3hUcmFuc2xhdGUpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9zdXBwb3J0Tmd4VHJhbnNsYXRlID0gcHJvZmlsZS5zdXBwb3J0Tmd4VHJhbnNsYXRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICghaXNOdWxsT3JVbmRlZmluZWQocHJvZmlsZS5uZ3hUcmFuc2xhdGVFeHRyYWN0aW9uUGF0dGVybikpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX25neFRyYW5zbGF0ZUV4dHJhY3Rpb25QYXR0ZXJuID0gcHJvZmlsZS5uZ3hUcmFuc2xhdGVFeHRyYWN0aW9uUGF0dGVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKHByb2ZpbGUudXNlU291cmNlQXNUYXJnZXQpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl91c2VTb3VyY2VBc1RhcmdldCA9IHByb2ZpbGUudXNlU291cmNlQXNUYXJnZXQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCFpc051bGxPclVuZGVmaW5lZChwcm9maWxlLnRhcmdldFByYWVmaXgpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl90YXJnZXRQcmFlZml4ID0gcHJvZmlsZS50YXJnZXRQcmFlZml4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICghaXNOdWxsT3JVbmRlZmluZWQocHJvZmlsZS50YXJnZXRTdWZmaXgpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl90YXJnZXRTdWZmaXggPSBwcm9maWxlLnRhcmdldFN1ZmZpeDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKHByb2ZpbGUuYXV0b3RyYW5zbGF0ZSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2F1dG90cmFuc2xhdGUgPSBwcm9maWxlLmF1dG90cmFuc2xhdGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCFpc051bGxPclVuZGVmaW5lZChwcm9maWxlLmJlYXV0aWZ5T3V0cHV0KSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fYmVhdXRpZnlPdXRwdXQgPSBwcm9maWxlLmJlYXV0aWZ5T3V0cHV0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICghaXNOdWxsT3JVbmRlZmluZWQocHJvZmlsZS5wcmVzZXJ2ZU9yZGVyKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcHJlc2VydmVPcmRlciA9IHByb2ZpbGUucHJlc2VydmVPcmRlcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKHByb2ZpbGUuYXBpa2V5KSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fYXBpa2V5ID0gcHJvZmlsZS5hcGlrZXk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCFpc051bGxPclVuZGVmaW5lZChwcm9maWxlLmFwaWtleWZpbGUpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9hcGlrZXlmaWxlID0gcHJvZmlsZS5hcGlrZXlmaWxlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy53YXJuaW5nc0ZvdW5kLnB1c2goJ2RpZCBub3QgZmluZCBcInhsaWZmbWVyZ2VPcHRpb25zXCIgaW4gcHJvZmlsZSwgdXNpbmcgZGVmYXVsdHMnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVjayBhbGwgUGFyYW1ldGVycywgd2V0aGVyIHRoZXkgYXJlIGNvbXBsZXRlIGFuZCBjb25zaXN0ZW50LlxyXG4gICAgICogaWYgc29tZXRoaW5nIGlzIHdyb25nIHdpdGggdGhlIHBhcmFtZXRlcnMsIGl0IGlzIGNvbGxlY3RlZCBpbiBlcnJvcnNGb3VuZC5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBjaGVja1BhcmFtZXRlcnMoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5jaGVja0xhbmd1YWdlU3ludGF4KHRoaXMuZGVmYXVsdExhbmd1YWdlKCkpO1xyXG4gICAgICAgIGlmICh0aGlzLmxhbmd1YWdlcygpLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICB0aGlzLmVycm9yc0ZvdW5kLnB1c2gobmV3IFhsaWZmTWVyZ2VFcnJvcignbm8gbGFuZ3VhZ2VzIHNwZWNpZmllZCcpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5sYW5ndWFnZXMoKS5mb3JFYWNoKChsYW5nKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuY2hlY2tMYW5ndWFnZVN5bnRheChsYW5nKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBsZXQgc3RhdHM6IFN0YXRzO1xyXG4gICAgICAgIGxldCBlcnI6IGFueTtcclxuICAgICAgICAvLyBzcmNEaXIgc2hvdWxkIGV4aXN0c1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHN0YXRzID0gZnMuc3RhdFN5bmModGhpcy5zcmNEaXIoKSk7XHJcbiAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICBlcnIgPSBlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoISFlcnIgfHwgIXN0YXRzLmlzRGlyZWN0b3J5KCkpIHtcclxuICAgICAgICAgICAgdGhpcy5lcnJvcnNGb3VuZC5wdXNoKG5ldyBYbGlmZk1lcmdlRXJyb3IoJ3NyY0RpciBcIicgKyB0aGlzLnNyY0RpcigpICsgJ1wiIGlzIG5vdCBhIGRpcmVjdG9yeScpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gZ2VuRGlyIHNob3VsZCBleGlzdHNcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBzdGF0cyA9IGZzLnN0YXRTeW5jKHRoaXMuZ2VuRGlyKCkpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgZXJyID0gZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCEhZXJyIHx8ICFzdGF0cy5pc0RpcmVjdG9yeSgpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZXJyb3JzRm91bmQucHVzaChuZXcgWGxpZmZNZXJnZUVycm9yKCdnZW5EaXIgXCInICsgdGhpcy5nZW5EaXIoKSArICdcIiBpcyBub3QgYSBkaXJlY3RvcnknKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIG1hc3RlciBmaWxlIE1VU1QgZXhpc3RcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBmcy5hY2Nlc3NTeW5jKHRoaXMuaTE4bkZpbGUoKSwgZnMuY29uc3RhbnRzLlJfT0spO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgICAgICB0aGlzLmVycm9yc0ZvdW5kLnB1c2gobmV3IFhsaWZmTWVyZ2VFcnJvcignaTE4bkZpbGUgXCInICsgdGhpcy5pMThuRmlsZSgpICsgJ1wiIGlzIG5vdCByZWFkYWJsZScpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gaTE4bkZvcm1hdCBtdXN0IGJlIHhsZiB4bGYyIG9yIHhtYlxyXG4gICAgICAgIGlmICghKHRoaXMuaTE4bkZvcm1hdCgpID09PSAneGxmJyB8fCB0aGlzLmkxOG5Gb3JtYXQoKSA9PT0gJ3hsZjInIHx8IHRoaXMuaTE4bkZvcm1hdCgpID09PSAneG1iJykpIHtcclxuICAgICAgICAgICAgdGhpcy5lcnJvcnNGb3VuZC5wdXNoKG5ldyBYbGlmZk1lcmdlRXJyb3IoJ2kxOG5Gb3JtYXQgXCInICsgdGhpcy5pMThuRm9ybWF0KCkgKyAnXCIgaW52YWxpZCwgbXVzdCBiZSBcInhsZlwiIG9yIFwieGxmMlwiIG9yIFwieG1iXCInKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGF1dG90cmFuc2xhdGUgcmVxdWlyZXMgYXBpIGtleVxyXG4gICAgICAgIGlmICh0aGlzLmF1dG90cmFuc2xhdGUoKSAmJiAhdGhpcy5hcGlrZXkoKSkge1xyXG4gICAgICAgICAgICB0aGlzLmVycm9yc0ZvdW5kLnB1c2gobmV3IFhsaWZmTWVyZ2VFcnJvcignYXV0b3RyYW5zbGF0ZSByZXF1aXJlcyBhbiBBUEkga2V5LCBwbGVhc2Ugc2V0IG9uZScpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gYXV0b3RyYW5zbGF0ZWQgbGFuZ3VhZ2VzIG11c3QgYmUgaW4gbGlzdCBvZiBhbGwgbGFuZ3VhZ2VzXHJcbiAgICAgICAgdGhpcy5hdXRvdHJhbnNsYXRlZExhbmd1YWdlcygpLmZvckVhY2goKGxhbmcpID0+IHtcclxuICAgICAgICAgICAgaWYgKHRoaXMubGFuZ3VhZ2VzKCkuaW5kZXhPZihsYW5nKSA8IDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZXJyb3JzRm91bmQucHVzaChuZXcgWGxpZmZNZXJnZUVycm9yKCdhdXRvdHJhbnNsYXRlIGxhbmd1YWdlIFwiJyArIGxhbmcgKyAnXCIgaXMgbm90IGluIGxpc3Qgb2YgbGFuZ3VhZ2VzJykpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChsYW5nID09PSB0aGlzLmRlZmF1bHRMYW5ndWFnZSgpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVycm9yc0ZvdW5kLnB1c2goXHJcbiAgICAgICAgICAgICAgICAgICAgbmV3IFhsaWZmTWVyZ2VFcnJvcignYXV0b3RyYW5zbGF0ZSBsYW5ndWFnZSBcIicgKyBsYW5nICsgJ1wiIGNhbm5vdCBiZSB0cmFuc2xhdGVkLCBiZWNhdXNlIGl0IGlzIHRoZSBzb3VyY2UgbGFuZ3VhZ2UnKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyBuZ3ggdHJhbnNsYXRlIHBhdHRlcm4gY2hlY2tcclxuICAgICAgICBpZiAodGhpcy5zdXBwb3J0Tmd4VHJhbnNsYXRlKCkpIHtcclxuICAgICAgICAgICAgY29uc3QgY2hlY2tSZXN1bHQgPSBOZ3hUcmFuc2xhdGVFeHRyYWN0b3IuY2hlY2tQYXR0ZXJuKHRoaXMubmd4VHJhbnNsYXRlRXh0cmFjdGlvblBhdHRlcm4oKSk7XHJcbiAgICAgICAgICAgIGlmICghaXNOdWxsT3JVbmRlZmluZWQoY2hlY2tSZXN1bHQpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVycm9yc0ZvdW5kLnB1c2goXHJcbiAgICAgICAgICAgICAgICAgICAgbmV3IFhsaWZmTWVyZ2VFcnJvcignbmd4VHJhbnNsYXRlRXh0cmFjdGlvblBhdHRlcm4gXCInICsgdGhpcy5uZ3hUcmFuc2xhdGVFeHRyYWN0aW9uUGF0dGVybigpICsgJ1wiOiAnICsgY2hlY2tSZXN1bHQpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyB0YXJnZXRQcmFlZml4IGFuZCB0YXJnZXRTdWZmaXggY2hlY2tcclxuICAgICAgICBpZiAoIXRoaXMudXNlU291cmNlQXNUYXJnZXQoKSkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy50YXJnZXRQcmFlZml4KCkubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy53YXJuaW5nc0ZvdW5kLnB1c2goXHJcbiAgICAgICAgICAgICAgICAgICAgJ2NvbmZpZ3VyZWQgdGFyZ2V0UHJhZWZpeCBcIicgKyB0aGlzLnRhcmdldFByYWVmaXgoKSArICdcIiB3aWxsIG5vdCBiZSB1c2VkIGJlY2F1c2UgXCJ1c2VTb3VyY2VBc1RhcmdldFwiIGlzIGRpc2FibGVkXCInKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodGhpcy50YXJnZXRTdWZmaXgoKS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLndhcm5pbmdzRm91bmQucHVzaChcclxuICAgICAgICAgICAgICAgICAgICAnY29uZmlndXJlZCB0YXJnZXRTdWZmaXggXCInICsgdGhpcy50YXJnZXRTdWZmaXgoKSArICdcIiB3aWxsIG5vdCBiZSB1c2VkIGJlY2F1c2UgXCJ1c2VTb3VyY2VBc1RhcmdldFwiIGlzIGRpc2FibGVkXCInKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVjayBzeW50YXggb2YgbGFuZ3VhZ2UuXHJcbiAgICAgKiBNdXN0IGJlIGNvbXBhdGlibGUgd2l0aCBYTUwgU2NoZW1hIHR5cGUgeHNkOmxhbmd1YWdlLlxyXG4gICAgICogUGF0dGVybjogW2EtekEtWl17MSw4fSgoLXxfKVthLXpBLVowLTldezEsOH0pKlxyXG4gICAgICogQHBhcmFtIGxhbmcgbGFuZ3VhZ2UgdG8gY2hlY2tcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBjaGVja0xhbmd1YWdlU3ludGF4KGxhbmc6IHN0cmluZykge1xyXG4gICAgICAgIGNvbnN0IHBhdHRlcm4gPSAvXlthLXpBLVpdezEsOH0oWy1fXVthLXpBLVowLTldezEsOH0pKiQvO1xyXG4gICAgICAgIGlmICghcGF0dGVybi50ZXN0KGxhbmcpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZXJyb3JzRm91bmQucHVzaChuZXcgWGxpZmZNZXJnZUVycm9yKCdsYW5ndWFnZSBcIicgKyBsYW5nICsgJ1wiIGlzIG5vdCB2YWxpZCcpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFsbG93SWRDaGFuZ2UoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIChpc051bGxPclVuZGVmaW5lZCh0aGlzLl9hbGxvd0lkQ2hhbmdlKSkgPyBmYWxzZSA6IHRoaXMuX2FsbG93SWRDaGFuZ2U7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHZlcmJvc2UoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIChpc051bGxPclVuZGVmaW5lZCh0aGlzLl92ZXJib3NlKSkgPyBmYWxzZSA6IHRoaXMuX3ZlcmJvc2U7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHF1aWV0KCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiAoaXNOdWxsT3JVbmRlZmluZWQodGhpcy5fcXVpZXQpKSA/IGZhbHNlIDogdGhpcy5fcXVpZXQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEZWJ1ZyBvdXRwdXQgYWxsIHBhcmFtZXRlcnMgdG8gY29tbWFuZE91dHB1dC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHNob3dBbGxQYXJhbWV0ZXJzKGNvbW1hbmRPdXRwdXQ6IENvbW1hbmRPdXRwdXQpOiB2b2lkIHtcclxuICAgICAgICBjb21tYW5kT3V0cHV0LmRlYnVnKCd4bGlmZm1lcmdlIFVzZWQgUGFyYW1ldGVyczonKTtcclxuICAgICAgICBjb21tYW5kT3V0cHV0LmRlYnVnKCd1c2VkUHJvZmlsZVBhdGg6XFx0XCIlc1wiJywgdGhpcy51c2VkUHJvZmlsZVBhdGgpO1xyXG4gICAgICAgIGNvbW1hbmRPdXRwdXQuZGVidWcoJ2RlZmF1bHRMYW5ndWFnZTpcXHRcIiVzXCInLCB0aGlzLmRlZmF1bHRMYW5ndWFnZSgpKTtcclxuICAgICAgICBjb21tYW5kT3V0cHV0LmRlYnVnKCdzcmNEaXI6XFx0XCIlc1wiJywgdGhpcy5zcmNEaXIoKSk7XHJcbiAgICAgICAgY29tbWFuZE91dHB1dC5kZWJ1ZygnZ2VuRGlyOlxcdFwiJXNcIicsIHRoaXMuZ2VuRGlyKCkpO1xyXG4gICAgICAgIGNvbW1hbmRPdXRwdXQuZGVidWcoJ2kxOG5CYXNlRmlsZTpcXHRcIiVzXCInLCB0aGlzLmkxOG5CYXNlRmlsZSgpKTtcclxuICAgICAgICBjb21tYW5kT3V0cHV0LmRlYnVnKCdpMThuRmlsZTpcXHRcIiVzXCInLCB0aGlzLmkxOG5GaWxlKCkpO1xyXG4gICAgICAgIGNvbW1hbmRPdXRwdXQuZGVidWcoJ2xhbmd1YWdlczpcXHQlcycsIHRoaXMubGFuZ3VhZ2VzKCkpO1xyXG4gICAgICAgIGZvciAoY29uc3QgbGFuZ3VhZ2Ugb2YgdGhpcy5sYW5ndWFnZXMoKSkge1xyXG4gICAgICAgICAgICBjb21tYW5kT3V0cHV0LmRlYnVnKCdvdXRwdXRGaWxlWyVzXTpcXHQlcycsIGxhbmd1YWdlLCB0aGlzLmdlbmVyYXRlZEkxOG5GaWxlKGxhbmd1YWdlKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbW1hbmRPdXRwdXQuZGVidWcoJ3JlbW92ZVVudXNlZElkczpcXHQlcycsIHRoaXMucmVtb3ZlVW51c2VkSWRzKCkpO1xyXG4gICAgICAgIGNvbW1hbmRPdXRwdXQuZGVidWcoJ3N1cHBvcnROZ3hUcmFuc2xhdGU6XFx0JXMnLCB0aGlzLnN1cHBvcnROZ3hUcmFuc2xhdGUoKSk7XHJcbiAgICAgICAgaWYgKHRoaXMuc3VwcG9ydE5neFRyYW5zbGF0ZSgpKSB7XHJcbiAgICAgICAgICAgIGNvbW1hbmRPdXRwdXQuZGVidWcoJ25neFRyYW5zbGF0ZUV4dHJhY3Rpb25QYXR0ZXJuOlxcdCVzJywgdGhpcy5uZ3hUcmFuc2xhdGVFeHRyYWN0aW9uUGF0dGVybigpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29tbWFuZE91dHB1dC5kZWJ1ZygndXNlU291cmNlQXNUYXJnZXQ6XFx0JXMnLCB0aGlzLnVzZVNvdXJjZUFzVGFyZ2V0KCkpO1xyXG4gICAgICAgIGlmICh0aGlzLnVzZVNvdXJjZUFzVGFyZ2V0KCkpIHtcclxuICAgICAgICAgICAgY29tbWFuZE91dHB1dC5kZWJ1ZygndGFyZ2V0UHJhZWZpeDpcXHRcIiVzXCInLCB0aGlzLnRhcmdldFByYWVmaXgoKSk7XHJcbiAgICAgICAgICAgIGNvbW1hbmRPdXRwdXQuZGVidWcoJ3RhcmdldFN1ZmZpeDpcXHRcIiVzXCInLCB0aGlzLnRhcmdldFN1ZmZpeCgpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29tbWFuZE91dHB1dC5kZWJ1ZygnYWxsb3dJZENoYW5nZTpcXHQlcycsIHRoaXMuYWxsb3dJZENoYW5nZSgpKTtcclxuICAgICAgICBjb21tYW5kT3V0cHV0LmRlYnVnKCdiZWF1dGlmeU91dHB1dDpcXHQlcycsIHRoaXMuYmVhdXRpZnlPdXRwdXQoKSk7XHJcbiAgICAgICAgY29tbWFuZE91dHB1dC5kZWJ1ZygncHJlc2VydmVPcmRlcjpcXHQlcycsIHRoaXMucHJlc2VydmVPcmRlcigpKTtcclxuICAgICAgICBjb21tYW5kT3V0cHV0LmRlYnVnKCdhdXRvdHJhbnNsYXRlOlxcdCVzJywgdGhpcy5hdXRvdHJhbnNsYXRlKCkpO1xyXG4gICAgICAgIGlmICh0aGlzLmF1dG90cmFuc2xhdGUoKSkge1xyXG4gICAgICAgICAgICBjb21tYW5kT3V0cHV0LmRlYnVnKCdhdXRvdHJhbnNsYXRlZCBsYW5ndWFnZXM6XFx0JXMnLCB0aGlzLmF1dG90cmFuc2xhdGVkTGFuZ3VhZ2VzKCkpO1xyXG4gICAgICAgICAgICBjb21tYW5kT3V0cHV0LmRlYnVnKCdhcGlrZXk6XFx0JXMnLCB0aGlzLmFwaWtleSgpID8gJyoqKionIDogJ05PVCBTRVQnKTtcclxuICAgICAgICAgICAgY29tbWFuZE91dHB1dC5kZWJ1ZygnYXBpa2V5ZmlsZTpcXHQlcycsIHRoaXMuYXBpa2V5ZmlsZSgpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEZWZhdWx0LUxhbmd1YWdlLCBkZWZhdWx0IGVuLlxyXG4gICAgICogQHJldHVybiBkZWZhdWx0IGxhbmd1YWdlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBkZWZhdWx0TGFuZ3VhZ2UoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZGVmYXVsdExhbmd1YWdlID8gdGhpcy5fZGVmYXVsdExhbmd1YWdlIDogJ2VuJztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIExpc3RlIGRlciB6dSBiZWFyYmVpdGVuZGVuIFNwcmFjaGVuLlxyXG4gICAgICogQHJldHVybiBsYW5ndWFnZXNcclxuICAgICAqL1xyXG4gICAgcHVibGljIGxhbmd1YWdlcygpOiBzdHJpbmdbXSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xhbmd1YWdlcyA/IHRoaXMuX2xhbmd1YWdlcyA6IFtdO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogc3JjIGRpcmVjdG9yeSwgd2hlcmUgdGhlIG1hc3RlciB4bGlmIGlzIGxvY2F0ZWQuXHJcbiAgICAgKiBAcmV0dXJuIHNyY0RpclxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3JjRGlyKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NyY0RpciA/IHRoaXMuX3NyY0RpciA6ICcuJztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBiYXNlIGZpbGUgbmFtZSBvZiB0aGUgeGxpZiBmaWxlIGZvciBpbnB1dCBhbmQgb3V0cHV0LlxyXG4gICAgICogRGVmYXVsdCBpcyBtZXNzYWdlc1xyXG4gICAgICogQHJldHVybiBiYXNlIGZpbGVcclxuICAgICAqL1xyXG4gICAgcHVibGljIGkxOG5CYXNlRmlsZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9pMThuQmFzZUZpbGUgPyB0aGlzLl9pMThuQmFzZUZpbGUgOiAnbWVzc2FnZXMnO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIG1hc3RlciB4bGlmIGZpbGUgKHRoZSBvbmUgZ2VuZXJhdGVkIGJ5IG5nLXhpMThuKS5cclxuICAgICAqIERlZmF1bHQgaXMgPHNyY0Rpcj4vPGkxOG5CYXNlRmlsZT4ueGxmLlxyXG4gICAgICogQHJldHVybiBtYXN0ZXIgZmlsZVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgaTE4bkZpbGUoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gam9pbih0aGlzLnNyY0RpcigpLFxyXG4gICAgICAgICAgICAodGhpcy5faTE4bkZpbGUgPyB0aGlzLl9pMThuRmlsZSA6IHRoaXMuaTE4bkJhc2VGaWxlKCkgKyAnLicgKyB0aGlzLnN1ZmZpeEZvckdlbmVyYXRlZEkxOG5GaWxlKCkpXHJcbiAgICAgICAgKS5yZXBsYWNlKC9cXFxcL2csICcvJyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBGb3JtYXQgb2YgdGhlIG1hc3RlciB4bGlmIGZpbGUuXHJcbiAgICAgKiBEZWZhdWx0IGlzIFwieGxmXCIsIHBvc3NpYmxlIGFyZSBcInhsZlwiIG9yIFwieGxmMlwiIG9yIFwieG1iXCIuXHJcbiAgICAgKiBAcmV0dXJuIGZvcm1hdFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgaTE4bkZvcm1hdCgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiAodGhpcy5faTE4bkZvcm1hdCA/IHRoaXMuX2kxOG5Gb3JtYXQgOiAneGxmJyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBwb3RlbnRpYWxseSB0byBiZSBnZW5lcmF0ZWQgSTE4bi1GaWxlIHdpdGggdGhlIHRyYW5zbGF0aW9ucyBmb3Igb25lIGxhbmd1YWdlLlxyXG4gICAgICogQHBhcmFtIGxhbmcgbGFuZ3VhZ2Ugc2hvcnRjdXRcclxuICAgICAqIEByZXR1cm4gUGF0aCBvZiBmaWxlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBnZW5lcmF0ZWRJMThuRmlsZShsYW5nOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiBqb2luKHRoaXMuZ2VuRGlyKCksIHRoaXMuaTE4bkJhc2VGaWxlKCkgKyAnLicgKyBsYW5nICsgJy4nICsgdGhpcy5zdWZmaXhGb3JHZW5lcmF0ZWRJMThuRmlsZSgpKS5yZXBsYWNlKC9cXFxcL2csICcvJyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzdWZmaXhGb3JHZW5lcmF0ZWRJMThuRmlsZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHN3aXRjaCAodGhpcy5pMThuRm9ybWF0KCkpIHtcclxuICAgICAgICAgICAgY2FzZSAneGxmJzpcclxuICAgICAgICAgICAgICAgIHJldHVybiAneGxmJztcclxuICAgICAgICAgICAgY2FzZSAneGxmMic6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3hsZic7XHJcbiAgICAgICAgICAgIGNhc2UgJ3htYic6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3h0Yic7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogcG90ZW50aWFsbHkgdG8gYmUgZ2VuZXJhdGVkIHRyYW5zbGF0ZS1GaWxlIGZvciBuZ3gtdHJhbnNsYXRlIHdpdGggdGhlIHRyYW5zbGF0aW9ucyBmb3Igb25lIGxhbmd1YWdlLlxyXG4gICAgICogQHBhcmFtIGxhbmcgbGFuZ3VhZ2Ugc2hvcnRjdXRcclxuICAgICAqIEByZXR1cm4gUGF0aCBvZiBmaWxlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBnZW5lcmF0ZWROZ3hUcmFuc2xhdGVGaWxlKGxhbmc6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIGpvaW4odGhpcy5nZW5EaXIoKSwgdGhpcy5pMThuQmFzZUZpbGUoKSArICcuJyArIGxhbmcgKyAnLicgKyAnanNvbicpLnJlcGxhY2UoL1xcXFwvZywgJy8nKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBlbmNvZGluZyB1c2VkIHRvIHdyaXRlIG5ldyBYTElGRi1maWxlcy5cclxuICAgICAqIEByZXR1cm4gZW5jb2RpbmdcclxuICAgICAqL1xyXG4gICAgcHVibGljIGVuY29kaW5nKCk6IEJ1ZmZlckVuY29kaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZW5jb2RpbmcgPyB0aGlzLl9lbmNvZGluZyA6ICd1dGYtOCc7XHJcbiAgICB9XHJcblxyXG4gICAgIC8qKlxyXG4gICAgICAqIE91dHB1dC1EaXJlY3RvcnksIHdoZXJlIHRoZSBvdXRwdXQgaXMgd3JpdHRlbiB0by5cclxuICAgICAgKiBEZWZhdWx0IGlzIDxzcmNEaXI+LlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2VuRGlyKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dlbkRpciA/IHRoaXMuX2dlbkRpciA6IHRoaXMuc3JjRGlyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHJlbW92ZVVudXNlZElkcygpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gKGlzTnVsbE9yVW5kZWZpbmVkKHRoaXMuX3JlbW92ZVVudXNlZElkcykpID8gdHJ1ZSA6IHRoaXMuX3JlbW92ZVVudXNlZElkcztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3VwcG9ydE5neFRyYW5zbGF0ZSgpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gKGlzTnVsbE9yVW5kZWZpbmVkKHRoaXMuX3N1cHBvcnROZ3hUcmFuc2xhdGUpKSA/IGZhbHNlIDogdGhpcy5fc3VwcG9ydE5neFRyYW5zbGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgbmd4VHJhbnNsYXRlRXh0cmFjdGlvblBhdHRlcm4oKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gKGlzTnVsbE9yVW5kZWZpbmVkKHRoaXMuX25neFRyYW5zbGF0ZUV4dHJhY3Rpb25QYXR0ZXJuKSkgP1xyXG4gICAgICAgICAgICBOZ3hUcmFuc2xhdGVFeHRyYWN0b3IuRGVmYXVsdEV4dHJhY3Rpb25QYXR0ZXJuIDogdGhpcy5fbmd4VHJhbnNsYXRlRXh0cmFjdGlvblBhdHRlcm47XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBXaGV0aGVyIHNvdXJjZSBtdXN0IGJlIHVzZWQgYXMgdGFyZ2V0IGZvciBuZXcgdHJhbnMtdW5pdHNcclxuICAgICAqIERlZmF1bHQgaXMgdHJ1ZVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgdXNlU291cmNlQXNUYXJnZXQoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIChpc051bGxPclVuZGVmaW5lZCh0aGlzLl91c2VTb3VyY2VBc1RhcmdldCkpID8gdHJ1ZSA6IHRoaXMuX3VzZVNvdXJjZUFzVGFyZ2V0O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUHJhZWZpeCB1c2VkIGZvciB0YXJnZXQgd2hlbiBjb3B5aW5nIG5ldyB0cmFucy11bml0c1xyXG4gICAgICogRGVmYXVsdCBpcyBcIlwiXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyB0YXJnZXRQcmFlZml4KCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIChpc051bGxPclVuZGVmaW5lZCh0aGlzLl90YXJnZXRQcmFlZml4KSkgPyAnJyA6IHRoaXMuX3RhcmdldFByYWVmaXg7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTdWZmaXggdXNlZCBmb3IgdGFyZ2V0IHdoZW4gY29weWluZyBuZXcgdHJhbnMtdW5pdHNcclxuICAgICAqIERlZmF1bHQgaXMgXCJcIlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgdGFyZ2V0U3VmZml4KCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIChpc051bGxPclVuZGVmaW5lZCh0aGlzLl90YXJnZXRTdWZmaXgpKSA/ICcnIDogdGhpcy5fdGFyZ2V0U3VmZml4O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogSWYgc2V0LCBydW4geG1sIHJlc3VsdCB0aHJvdWdoIGJlYXV0aWZpZXIgKHByZXR0eS1kYXRhKS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGJlYXV0aWZ5T3V0cHV0KCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiAoaXNOdWxsT3JVbmRlZmluZWQodGhpcy5fYmVhdXRpZnlPdXRwdXQpKSA/IGZhbHNlIDogdGhpcy5fYmVhdXRpZnlPdXRwdXQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBJZiBzZXQsIG9yZGVyIG9mIG5ldyB0cmFucyB1bml0cyB3aWxsIGJlIGFzIGluIG1hc3Rlci5cclxuICAgICAqIE90aGVyd2lzZSB0aGV5IGFyZSBhZGRlZCBhdCB0aGUgZW5kLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcHJlc2VydmVPcmRlcigpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gKGlzTnVsbE9yVW5kZWZpbmVkKHRoaXMuX3ByZXNlcnZlT3JkZXIpKSA/IHRydWUgOiB0aGlzLl9wcmVzZXJ2ZU9yZGVyO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogV2hldGhlciB0byB1c2UgYXV0b3RyYW5zbGF0ZSBmb3IgbmV3IHRyYW5zLXVuaXRzXHJcbiAgICAgKiBEZWZhdWx0IGlzIGZhbHNlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBhdXRvdHJhbnNsYXRlKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGlmIChpc051bGxPclVuZGVmaW5lZCh0aGlzLl9hdXRvdHJhbnNsYXRlKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChpc0FycmF5KHRoaXMuX2F1dG90cmFuc2xhdGUpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAoPHN0cmluZ1tdPnRoaXMuX2F1dG90cmFuc2xhdGUpLmxlbmd0aCA+IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiA8Ym9vbGVhbj4gdGhpcy5fYXV0b3RyYW5zbGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFdoZXRoZXIgdG8gdXNlIGF1dG90cmFuc2xhdGUgZm9yIGEgZ2l2ZW4gbGFuZ3VhZ2UuXHJcbiAgICAgKiBAcGFyYW0gbGFuZyBsYW5ndWFnZSBjb2RlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgYXV0b3RyYW5zbGF0ZUxhbmd1YWdlKGxhbmc6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmF1dG90cmFuc2xhdGVkTGFuZ3VhZ2VzKCkuaW5kZXhPZihsYW5nKSA+PSAwO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJuIGEgbGlzdCBvZiBsYW5ndWFnZXMgdG8gYmUgYXV0b3RyYW5zbGF0ZWQuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBhdXRvdHJhbnNsYXRlZExhbmd1YWdlcygpOiBzdHJpbmdbXSB7XHJcbiAgICAgICAgaWYgKGlzTnVsbE9yVW5kZWZpbmVkKHRoaXMuX2F1dG90cmFuc2xhdGUpIHx8IHRoaXMuX2F1dG90cmFuc2xhdGUgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBbXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGlzQXJyYXkodGhpcy5fYXV0b3RyYW5zbGF0ZSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuICg8c3RyaW5nW10+dGhpcy5fYXV0b3RyYW5zbGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLmxhbmd1YWdlcygpLnNsaWNlKDEpOyAvLyBmaXJzdCBpcyBzb3VyY2UgbGFuZ3VhZ2VcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFQSSBrZXkgdG8gYmUgdXNlZCBmb3IgR29vZ2xlIFRyYW5zbGF0ZVxyXG4gICAgICogQHJldHVybiBhcGkga2V5XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBhcGlrZXkoKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKHRoaXMuX2FwaWtleSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2FwaWtleTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zdCBhcGlrZXlQYXRoID0gdGhpcy5hcGlrZXlmaWxlKCk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmFwaWtleWZpbGUoKSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGZzLmV4aXN0c1N5bmMoYXBpa2V5UGF0aCkpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmlsZVV0aWwucmVhZChhcGlrZXlQYXRoLCAndXRmLTgnKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdCgnYXBpIGtleSBmaWxlIG5vdCBmb3VuZDogQVBJX0tFWV9GSUxFPSVzJywgYXBpa2V5UGF0aCkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBmaWxlIG5hbWUgZm9yIEFQSSBrZXkgdG8gYmUgdXNlZCBmb3IgR29vZ2xlIFRyYW5zbGF0ZS5cclxuICAgICAqIEV4cGxpY2l0bHkgc2V0IG9yIHJlYWQgZnJvbSBlbnYgdmFyIEFQSV9LRVlfRklMRS5cclxuICAgICAqIEByZXR1cm4gZmlsZSBvZiBhcGkga2V5XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBhcGlrZXlmaWxlKCk6IHN0cmluZyB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2FwaWtleWZpbGUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2FwaWtleWZpbGU7XHJcbiAgICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5BUElfS0VZX0ZJTEUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHByb2Nlc3MuZW52LkFQSV9LRVlfRklMRTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19","start":20892,"end":73206}]},"code":"/**\r\n * Created by martin on 17.02.2017.\r\n * Collection of all parameters used by the tool.\r\n * The parameters are read form the profile or defaults are used.\r\n */\r\nimport * as fs from 'fs';\r\nimport { XliffMergeError } from './xliff-merge-error';\r\nimport { format } from 'util';\r\nimport { isArray, isNullOrUndefined } from '../common/util';\r\nimport { FileUtil } from '../common/file-util';\r\nimport { NgxTranslateExtractor } from './ngx-translate-extractor';\r\nimport { dirname, isAbsolute, join } from 'path';\r\nconst PROFILE_CANDIDATES = ['package.json', '.angular-cli.json'];\r\nexport class XliffMergeParameters {\r\n    constructor() {\r\n        this.errorsFound = [];\r\n        this.warningsFound = [];\r\n    }\r\n    /**\r\n     * Create Parameters.\r\n     * @param options command options\r\n     * @param profileContent given profile (if not, it is read from the profile path from options).\r\n     */\r\n    static createFromOptions(options, profileContent) {\r\n        const parameters = new XliffMergeParameters();\r\n        parameters.configure(options, profileContent);\r\n        return parameters;\r\n    }\r\n    /**\r\n     * Read potential profile.\r\n     * To be a candidate, file must exist and contain property \"xliffmergeOptions\".\r\n     * @param profilePath path of profile\r\n     * @return parsed content of file or null, if file does not exist or is not a profile candidate.\r\n     */\r\n    static readProfileCandidate(profilePath) {\r\n        let content;\r\n        try {\r\n            content = fs.readFileSync(profilePath, 'utf-8');\r\n        }\r\n        catch (err) {\r\n            return null;\r\n        }\r\n        const parsedContent = JSON.parse(content);\r\n        if (parsedContent && parsedContent.xliffmergeOptions) {\r\n            return parsedContent;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Initialize me from the profile content.\r\n     * (public only for test usage).\r\n     * @param options options given at runtime via command line\r\n     * @param profileContent if null, read it from profile.\r\n     */\r\n    configure(options, profileContent) {\r\n        this.errorsFound = [];\r\n        this.warningsFound = [];\r\n        if (!profileContent) {\r\n            profileContent = this.readProfile(options);\r\n        }\r\n        const validProfile = (!!profileContent);\r\n        if (options.quiet) {\r\n            this._quiet = options.quiet;\r\n        }\r\n        if (options.verbose) {\r\n            this._verbose = options.verbose;\r\n        }\r\n        if (validProfile) {\r\n            this.initializeFromConfig(profileContent);\r\n            // if languages are given as parameters, they ovveride everything said in profile\r\n            if (!!options.languages && options.languages.length > 0) {\r\n                this._languages = options.languages;\r\n                if (!this._defaultLanguage) {\r\n                    this._defaultLanguage = this._languages[0];\r\n                }\r\n            }\r\n            this.checkParameters();\r\n        }\r\n    }\r\n    /**\r\n     * Read profile.\r\n     * @param options program options\r\n     * @return the read profile (empty, if none, null if errors)\r\n     */\r\n    readProfile(options) {\r\n        const profilePath = options.profilePath;\r\n        if (!profilePath) {\r\n            for (const configfilename of PROFILE_CANDIDATES) {\r\n                const profile = XliffMergeParameters.readProfileCandidate(configfilename);\r\n                if (profile) {\r\n                    this.usedProfilePath = configfilename;\r\n                    return profile;\r\n                }\r\n            }\r\n            return {};\r\n        }\r\n        let content;\r\n        try {\r\n            content = fs.readFileSync(profilePath, 'utf-8');\r\n        }\r\n        catch (err) {\r\n            this.errorsFound.push(new XliffMergeError('could not read profile \"' + profilePath + '\"'));\r\n            return null;\r\n        }\r\n        this.usedProfilePath = profilePath;\r\n        const profileContent = JSON.parse(content);\r\n        // replace all pathes in options by absolute paths\r\n        const xliffmergeOptions = profileContent.xliffmergeOptions;\r\n        xliffmergeOptions.srcDir = this.adjustPathToProfilePath(profilePath, xliffmergeOptions.srcDir);\r\n        xliffmergeOptions.genDir = this.adjustPathToProfilePath(profilePath, xliffmergeOptions.genDir);\r\n        xliffmergeOptions.apikeyfile = this.adjustPathToProfilePath(profilePath, xliffmergeOptions.apikeyfile);\r\n        return profileContent;\r\n    }\r\n    adjustPathToProfilePath(profilePath, pathToAdjust) {\r\n        if (!pathToAdjust || isAbsolute(pathToAdjust)) {\r\n            return pathToAdjust;\r\n        }\r\n        return join(dirname(profilePath), pathToAdjust).replace(/\\\\/g, '/');\r\n    }\r\n    initializeFromConfig(profileContent) {\r\n        if (!profileContent) {\r\n            return;\r\n        }\r\n        const profile = profileContent.xliffmergeOptions;\r\n        if (profile) {\r\n            if (!isNullOrUndefined(profile.quiet)) {\r\n                this._quiet = profile.quiet;\r\n            }\r\n            if (!isNullOrUndefined(profile.verbose)) {\r\n                this._verbose = profile.verbose;\r\n            }\r\n            if (!isNullOrUndefined(profile.allowIdChange)) {\r\n                this._allowIdChange = profile.allowIdChange;\r\n            }\r\n            if (profile.defaultLanguage) {\r\n                this._defaultLanguage = profile.defaultLanguage;\r\n            }\r\n            if (profile.languages) {\r\n                this._languages = profile.languages;\r\n            }\r\n            if (profile.srcDir) {\r\n                this._srcDir = profile.srcDir;\r\n            }\r\n            if (profile.angularCompilerOptions) {\r\n                if (profile.angularCompilerOptions.genDir) {\r\n                    this._genDir = profile.angularCompilerOptions.genDir;\r\n                }\r\n            }\r\n            if (profile.genDir) {\r\n                // this must be after angularCompilerOptions to be preferred\r\n                this._genDir = profile.genDir;\r\n            }\r\n            if (profile.i18nBaseFile) {\r\n                this._i18nBaseFile = profile.i18nBaseFile;\r\n            }\r\n            if (profile.i18nFile) {\r\n                this._i18nFile = profile.i18nFile;\r\n            }\r\n            if (profile.i18nFormat) {\r\n                this._i18nFormat = profile.i18nFormat;\r\n            }\r\n            if (profile.encoding) {\r\n                this._encoding = profile.encoding;\r\n            }\r\n            if (!isNullOrUndefined(profile.removeUnusedIds)) {\r\n                this._removeUnusedIds = profile.removeUnusedIds;\r\n            }\r\n            if (!isNullOrUndefined(profile.supportNgxTranslate)) {\r\n                this._supportNgxTranslate = profile.supportNgxTranslate;\r\n            }\r\n            if (!isNullOrUndefined(profile.ngxTranslateExtractionPattern)) {\r\n                this._ngxTranslateExtractionPattern = profile.ngxTranslateExtractionPattern;\r\n            }\r\n            if (!isNullOrUndefined(profile.useSourceAsTarget)) {\r\n                this._useSourceAsTarget = profile.useSourceAsTarget;\r\n            }\r\n            if (!isNullOrUndefined(profile.targetPraefix)) {\r\n                this._targetPraefix = profile.targetPraefix;\r\n            }\r\n            if (!isNullOrUndefined(profile.targetSuffix)) {\r\n                this._targetSuffix = profile.targetSuffix;\r\n            }\r\n            if (!isNullOrUndefined(profile.autotranslate)) {\r\n                this._autotranslate = profile.autotranslate;\r\n            }\r\n            if (!isNullOrUndefined(profile.beautifyOutput)) {\r\n                this._beautifyOutput = profile.beautifyOutput;\r\n            }\r\n            if (!isNullOrUndefined(profile.preserveOrder)) {\r\n                this._preserveOrder = profile.preserveOrder;\r\n            }\r\n            if (!isNullOrUndefined(profile.apikey)) {\r\n                this._apikey = profile.apikey;\r\n            }\r\n            if (!isNullOrUndefined(profile.apikeyfile)) {\r\n                this._apikeyfile = profile.apikeyfile;\r\n            }\r\n        }\r\n        else {\r\n            this.warningsFound.push('did not find \"xliffmergeOptions\" in profile, using defaults');\r\n        }\r\n    }\r\n    /**\r\n     * Check all Parameters, wether they are complete and consistent.\r\n     * if something is wrong with the parameters, it is collected in errorsFound.\r\n     */\r\n    checkParameters() {\r\n        this.checkLanguageSyntax(this.defaultLanguage());\r\n        if (this.languages().length === 0) {\r\n            this.errorsFound.push(new XliffMergeError('no languages specified'));\r\n        }\r\n        this.languages().forEach((lang) => {\r\n            this.checkLanguageSyntax(lang);\r\n        });\r\n        let stats;\r\n        let err;\r\n        // srcDir should exists\r\n        try {\r\n            stats = fs.statSync(this.srcDir());\r\n        }\r\n        catch (e) {\r\n            err = e;\r\n        }\r\n        if (!!err || !stats.isDirectory()) {\r\n            this.errorsFound.push(new XliffMergeError('srcDir \"' + this.srcDir() + '\" is not a directory'));\r\n        }\r\n        // genDir should exists\r\n        try {\r\n            stats = fs.statSync(this.genDir());\r\n        }\r\n        catch (e) {\r\n            err = e;\r\n        }\r\n        if (!!err || !stats.isDirectory()) {\r\n            this.errorsFound.push(new XliffMergeError('genDir \"' + this.genDir() + '\" is not a directory'));\r\n        }\r\n        // master file MUST exist\r\n        try {\r\n            fs.accessSync(this.i18nFile(), fs.constants.R_OK);\r\n        }\r\n        catch (err) {\r\n            this.errorsFound.push(new XliffMergeError('i18nFile \"' + this.i18nFile() + '\" is not readable'));\r\n        }\r\n        // i18nFormat must be xlf xlf2 or xmb\r\n        if (!(this.i18nFormat() === 'xlf' || this.i18nFormat() === 'xlf2' || this.i18nFormat() === 'xmb')) {\r\n            this.errorsFound.push(new XliffMergeError('i18nFormat \"' + this.i18nFormat() + '\" invalid, must be \"xlf\" or \"xlf2\" or \"xmb\"'));\r\n        }\r\n        // autotranslate requires api key\r\n        if (this.autotranslate() && !this.apikey()) {\r\n            this.errorsFound.push(new XliffMergeError('autotranslate requires an API key, please set one'));\r\n        }\r\n        // autotranslated languages must be in list of all languages\r\n        this.autotranslatedLanguages().forEach((lang) => {\r\n            if (this.languages().indexOf(lang) < 0) {\r\n                this.errorsFound.push(new XliffMergeError('autotranslate language \"' + lang + '\" is not in list of languages'));\r\n            }\r\n            if (lang === this.defaultLanguage()) {\r\n                this.errorsFound.push(new XliffMergeError('autotranslate language \"' + lang + '\" cannot be translated, because it is the source language'));\r\n            }\r\n        });\r\n        // ngx translate pattern check\r\n        if (this.supportNgxTranslate()) {\r\n            const checkResult = NgxTranslateExtractor.checkPattern(this.ngxTranslateExtractionPattern());\r\n            if (!isNullOrUndefined(checkResult)) {\r\n                this.errorsFound.push(new XliffMergeError('ngxTranslateExtractionPattern \"' + this.ngxTranslateExtractionPattern() + '\": ' + checkResult));\r\n            }\r\n        }\r\n        // targetPraefix and targetSuffix check\r\n        if (!this.useSourceAsTarget()) {\r\n            if (this.targetPraefix().length > 0) {\r\n                this.warningsFound.push('configured targetPraefix \"' + this.targetPraefix() + '\" will not be used because \"useSourceAsTarget\" is disabled\"');\r\n            }\r\n            if (this.targetSuffix().length > 0) {\r\n                this.warningsFound.push('configured targetSuffix \"' + this.targetSuffix() + '\" will not be used because \"useSourceAsTarget\" is disabled\"');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Check syntax of language.\r\n     * Must be compatible with XML Schema type xsd:language.\r\n     * Pattern: [a-zA-Z]{1,8}((-|_)[a-zA-Z0-9]{1,8})*\r\n     * @param lang language to check\r\n     */\r\n    checkLanguageSyntax(lang) {\r\n        const pattern = /^[a-zA-Z]{1,8}([-_][a-zA-Z0-9]{1,8})*$/;\r\n        if (!pattern.test(lang)) {\r\n            this.errorsFound.push(new XliffMergeError('language \"' + lang + '\" is not valid'));\r\n        }\r\n    }\r\n    allowIdChange() {\r\n        return (isNullOrUndefined(this._allowIdChange)) ? false : this._allowIdChange;\r\n    }\r\n    verbose() {\r\n        return (isNullOrUndefined(this._verbose)) ? false : this._verbose;\r\n    }\r\n    quiet() {\r\n        return (isNullOrUndefined(this._quiet)) ? false : this._quiet;\r\n    }\r\n    /**\r\n     * Debug output all parameters to commandOutput.\r\n     */\r\n    showAllParameters(commandOutput) {\r\n        commandOutput.debug('xliffmerge Used Parameters:');\r\n        commandOutput.debug('usedProfilePath:\\t\"%s\"', this.usedProfilePath);\r\n        commandOutput.debug('defaultLanguage:\\t\"%s\"', this.defaultLanguage());\r\n        commandOutput.debug('srcDir:\\t\"%s\"', this.srcDir());\r\n        commandOutput.debug('genDir:\\t\"%s\"', this.genDir());\r\n        commandOutput.debug('i18nBaseFile:\\t\"%s\"', this.i18nBaseFile());\r\n        commandOutput.debug('i18nFile:\\t\"%s\"', this.i18nFile());\r\n        commandOutput.debug('languages:\\t%s', this.languages());\r\n        for (const language of this.languages()) {\r\n            commandOutput.debug('outputFile[%s]:\\t%s', language, this.generatedI18nFile(language));\r\n        }\r\n        commandOutput.debug('removeUnusedIds:\\t%s', this.removeUnusedIds());\r\n        commandOutput.debug('supportNgxTranslate:\\t%s', this.supportNgxTranslate());\r\n        if (this.supportNgxTranslate()) {\r\n            commandOutput.debug('ngxTranslateExtractionPattern:\\t%s', this.ngxTranslateExtractionPattern());\r\n        }\r\n        commandOutput.debug('useSourceAsTarget:\\t%s', this.useSourceAsTarget());\r\n        if (this.useSourceAsTarget()) {\r\n            commandOutput.debug('targetPraefix:\\t\"%s\"', this.targetPraefix());\r\n            commandOutput.debug('targetSuffix:\\t\"%s\"', this.targetSuffix());\r\n        }\r\n        commandOutput.debug('allowIdChange:\\t%s', this.allowIdChange());\r\n        commandOutput.debug('beautifyOutput:\\t%s', this.beautifyOutput());\r\n        commandOutput.debug('preserveOrder:\\t%s', this.preserveOrder());\r\n        commandOutput.debug('autotranslate:\\t%s', this.autotranslate());\r\n        if (this.autotranslate()) {\r\n            commandOutput.debug('autotranslated languages:\\t%s', this.autotranslatedLanguages());\r\n            commandOutput.debug('apikey:\\t%s', this.apikey() ? '****' : 'NOT SET');\r\n            commandOutput.debug('apikeyfile:\\t%s', this.apikeyfile());\r\n        }\r\n    }\r\n    /**\r\n     * Default-Language, default en.\r\n     * @return default language\r\n     */\r\n    defaultLanguage() {\r\n        return this._defaultLanguage ? this._defaultLanguage : 'en';\r\n    }\r\n    /**\r\n     * Liste der zu bearbeitenden Sprachen.\r\n     * @return languages\r\n     */\r\n    languages() {\r\n        return this._languages ? this._languages : [];\r\n    }\r\n    /**\r\n     * src directory, where the master xlif is located.\r\n     * @return srcDir\r\n     */\r\n    srcDir() {\r\n        return this._srcDir ? this._srcDir : '.';\r\n    }\r\n    /**\r\n     * The base file name of the xlif file for input and output.\r\n     * Default is messages\r\n     * @return base file\r\n     */\r\n    i18nBaseFile() {\r\n        return this._i18nBaseFile ? this._i18nBaseFile : 'messages';\r\n    }\r\n    /**\r\n     * The master xlif file (the one generated by ng-xi18n).\r\n     * Default is <srcDir>/<i18nBaseFile>.xlf.\r\n     * @return master file\r\n     */\r\n    i18nFile() {\r\n        return join(this.srcDir(), (this._i18nFile ? this._i18nFile : this.i18nBaseFile() + '.' + this.suffixForGeneratedI18nFile())).replace(/\\\\/g, '/');\r\n    }\r\n    /**\r\n     * Format of the master xlif file.\r\n     * Default is \"xlf\", possible are \"xlf\" or \"xlf2\" or \"xmb\".\r\n     * @return format\r\n     */\r\n    i18nFormat() {\r\n        return (this._i18nFormat ? this._i18nFormat : 'xlf');\r\n    }\r\n    /**\r\n     * potentially to be generated I18n-File with the translations for one language.\r\n     * @param lang language shortcut\r\n     * @return Path of file\r\n     */\r\n    generatedI18nFile(lang) {\r\n        return join(this.genDir(), this.i18nBaseFile() + '.' + lang + '.' + this.suffixForGeneratedI18nFile()).replace(/\\\\/g, '/');\r\n    }\r\n    suffixForGeneratedI18nFile() {\r\n        switch (this.i18nFormat()) {\r\n            case 'xlf':\r\n                return 'xlf';\r\n            case 'xlf2':\r\n                return 'xlf';\r\n            case 'xmb':\r\n                return 'xtb';\r\n        }\r\n    }\r\n    /**\r\n     * potentially to be generated translate-File for ngx-translate with the translations for one language.\r\n     * @param lang language shortcut\r\n     * @return Path of file\r\n     */\r\n    generatedNgxTranslateFile(lang) {\r\n        return join(this.genDir(), this.i18nBaseFile() + '.' + lang + '.' + 'json').replace(/\\\\/g, '/');\r\n    }\r\n    /**\r\n     * The encoding used to write new XLIFF-files.\r\n     * @return encoding\r\n     */\r\n    encoding() {\r\n        return this._encoding ? this._encoding : 'utf-8';\r\n    }\r\n    /**\r\n     * Output-Directory, where the output is written to.\r\n     * Default is <srcDir>.\r\n    */\r\n    genDir() {\r\n        return this._genDir ? this._genDir : this.srcDir();\r\n    }\r\n    removeUnusedIds() {\r\n        return (isNullOrUndefined(this._removeUnusedIds)) ? true : this._removeUnusedIds;\r\n    }\r\n    supportNgxTranslate() {\r\n        return (isNullOrUndefined(this._supportNgxTranslate)) ? false : this._supportNgxTranslate;\r\n    }\r\n    ngxTranslateExtractionPattern() {\r\n        return (isNullOrUndefined(this._ngxTranslateExtractionPattern)) ?\r\n            NgxTranslateExtractor.DefaultExtractionPattern : this._ngxTranslateExtractionPattern;\r\n    }\r\n    /**\r\n     * Whether source must be used as target for new trans-units\r\n     * Default is true\r\n     */\r\n    useSourceAsTarget() {\r\n        return (isNullOrUndefined(this._useSourceAsTarget)) ? true : this._useSourceAsTarget;\r\n    }\r\n    /**\r\n     * Praefix used for target when copying new trans-units\r\n     * Default is \"\"\r\n     */\r\n    targetPraefix() {\r\n        return (isNullOrUndefined(this._targetPraefix)) ? '' : this._targetPraefix;\r\n    }\r\n    /**\r\n     * Suffix used for target when copying new trans-units\r\n     * Default is \"\"\r\n     */\r\n    targetSuffix() {\r\n        return (isNullOrUndefined(this._targetSuffix)) ? '' : this._targetSuffix;\r\n    }\r\n    /**\r\n     * If set, run xml result through beautifier (pretty-data).\r\n     */\r\n    beautifyOutput() {\r\n        return (isNullOrUndefined(this._beautifyOutput)) ? false : this._beautifyOutput;\r\n    }\r\n    /**\r\n     * If set, order of new trans units will be as in master.\r\n     * Otherwise they are added at the end.\r\n     */\r\n    preserveOrder() {\r\n        return (isNullOrUndefined(this._preserveOrder)) ? true : this._preserveOrder;\r\n    }\r\n    /**\r\n     * Whether to use autotranslate for new trans-units\r\n     * Default is false\r\n     */\r\n    autotranslate() {\r\n        if (isNullOrUndefined(this._autotranslate)) {\r\n            return false;\r\n        }\r\n        if (isArray(this._autotranslate)) {\r\n            return this._autotranslate.length > 0;\r\n        }\r\n        return this._autotranslate;\r\n    }\r\n    /**\r\n     * Whether to use autotranslate for a given language.\r\n     * @param lang language code.\r\n     */\r\n    autotranslateLanguage(lang) {\r\n        return this.autotranslatedLanguages().indexOf(lang) >= 0;\r\n    }\r\n    /**\r\n     * Return a list of languages to be autotranslated.\r\n     */\r\n    autotranslatedLanguages() {\r\n        if (isNullOrUndefined(this._autotranslate) || this._autotranslate === false) {\r\n            return [];\r\n        }\r\n        if (isArray(this._autotranslate)) {\r\n            return this._autotranslate;\r\n        }\r\n        return this.languages().slice(1); // first is source language\r\n    }\r\n    /**\r\n     * API key to be used for Google Translate\r\n     * @return api key\r\n     */\r\n    apikey() {\r\n        if (!isNullOrUndefined(this._apikey)) {\r\n            return this._apikey;\r\n        }\r\n        else {\r\n            const apikeyPath = this.apikeyfile();\r\n            if (this.apikeyfile()) {\r\n                if (fs.existsSync(apikeyPath)) {\r\n                    return FileUtil.read(apikeyPath, 'utf-8');\r\n                }\r\n                else {\r\n                    throw new Error(format('api key file not found: API_KEY_FILE=%s', apikeyPath));\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * file name for API key to be used for Google Translate.\r\n     * Explicitly set or read from env var API_KEY_FILE.\r\n     * @return file of api key\r\n     */\r\n    apikeyfile() {\r\n        if (this._apikeyfile) {\r\n            return this._apikeyfile;\r\n        }\r\n        else if (process.env.API_KEY_FILE) {\r\n            return process.env.API_KEY_FILE;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["fs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\xliff-merge-error.mjs","util","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\util.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\file-util.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\ngx-translate-extractor.mjs","path"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\xliff-merge-parameters.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Created by martin on 17.02.2017.\r\n * Collection of all parameters used by the tool.\r\n * The parameters are read form the profile or defaults are used.\r\n */\r\nimport * as fs from 'fs';\r\nimport { XliffMergeError } from './xliff-merge-error';\r\nimport { format } from 'util';\r\nimport { isArray, isNullOrUndefined } from '../common/util';\r\nimport { FileUtil } from '../common/file-util';\r\nimport { NgxTranslateExtractor } from './ngx-translate-extractor';\r\nimport { dirname, isAbsolute, join } from 'path';\r\nconst PROFILE_CANDIDATES = ['package.json', '.angular-cli.json'];\r\nexport class XliffMergeParameters {\r\n    constructor() {\r\n        this.errorsFound = [];\r\n        this.warningsFound = [];\r\n    }\r\n    /**\r\n     * Create Parameters.\r\n     * @param options command options\r\n     * @param profileContent given profile (if not, it is read from the profile path from options).\r\n     */\r\n    static createFromOptions(options, profileContent) {\r\n        const parameters = new XliffMergeParameters();\r\n        parameters.configure(options, profileContent);\r\n        return parameters;\r\n    }\r\n    /**\r\n     * Read potential profile.\r\n     * To be a candidate, file must exist and contain property \"xliffmergeOptions\".\r\n     * @param profilePath path of profile\r\n     * @return parsed content of file or null, if file does not exist or is not a profile candidate.\r\n     */\r\n    static readProfileCandidate(profilePath) {\r\n        let content;\r\n        try {\r\n            content = fs.readFileSync(profilePath, 'utf-8');\r\n        }\r\n        catch (err) {\r\n            return null;\r\n        }\r\n        const parsedContent = JSON.parse(content);\r\n        if (parsedContent && parsedContent.xliffmergeOptions) {\r\n            return parsedContent;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Initialize me from the profile content.\r\n     * (public only for test usage).\r\n     * @param options options given at runtime via command line\r\n     * @param profileContent if null, read it from profile.\r\n     */\r\n    configure(options, profileContent) {\r\n        this.errorsFound = [];\r\n        this.warningsFound = [];\r\n        if (!profileContent) {\r\n            profileContent = this.readProfile(options);\r\n        }\r\n        const validProfile = (!!profileContent);\r\n        if (options.quiet) {\r\n            this._quiet = options.quiet;\r\n        }\r\n        if (options.verbose) {\r\n            this._verbose = options.verbose;\r\n        }\r\n        if (validProfile) {\r\n            this.initializeFromConfig(profileContent);\r\n            // if languages are given as parameters, they ovveride everything said in profile\r\n            if (!!options.languages && options.languages.length > 0) {\r\n                this._languages = options.languages;\r\n                if (!this._defaultLanguage) {\r\n                    this._defaultLanguage = this._languages[0];\r\n                }\r\n            }\r\n            this.checkParameters();\r\n        }\r\n    }\r\n    /**\r\n     * Read profile.\r\n     * @param options program options\r\n     * @return the read profile (empty, if none, null if errors)\r\n     */\r\n    readProfile(options) {\r\n        const profilePath = options.profilePath;\r\n        if (!profilePath) {\r\n            for (const configfilename of PROFILE_CANDIDATES) {\r\n                const profile = XliffMergeParameters.readProfileCandidate(configfilename);\r\n                if (profile) {\r\n                    this.usedProfilePath = configfilename;\r\n                    return profile;\r\n                }\r\n            }\r\n            return {};\r\n        }\r\n        let content;\r\n        try {\r\n            content = fs.readFileSync(profilePath, 'utf-8');\r\n        }\r\n        catch (err) {\r\n            this.errorsFound.push(new XliffMergeError('could not read profile \"' + profilePath + '\"'));\r\n            return null;\r\n        }\r\n        this.usedProfilePath = profilePath;\r\n        const profileContent = JSON.parse(content);\r\n        // replace all pathes in options by absolute paths\r\n        const xliffmergeOptions = profileContent.xliffmergeOptions;\r\n        xliffmergeOptions.srcDir = this.adjustPathToProfilePath(profilePath, xliffmergeOptions.srcDir);\r\n        xliffmergeOptions.genDir = this.adjustPathToProfilePath(profilePath, xliffmergeOptions.genDir);\r\n        xliffmergeOptions.apikeyfile = this.adjustPathToProfilePath(profilePath, xliffmergeOptions.apikeyfile);\r\n        return profileContent;\r\n    }\r\n    adjustPathToProfilePath(profilePath, pathToAdjust) {\r\n        if (!pathToAdjust || isAbsolute(pathToAdjust)) {\r\n            return pathToAdjust;\r\n        }\r\n        return join(dirname(profilePath), pathToAdjust).replace(/\\\\/g, '/');\r\n    }\r\n    initializeFromConfig(profileContent) {\r\n        if (!profileContent) {\r\n            return;\r\n        }\r\n        const profile = profileContent.xliffmergeOptions;\r\n        if (profile) {\r\n            if (!isNullOrUndefined(profile.quiet)) {\r\n                this._quiet = profile.quiet;\r\n            }\r\n            if (!isNullOrUndefined(profile.verbose)) {\r\n                this._verbose = profile.verbose;\r\n            }\r\n            if (!isNullOrUndefined(profile.allowIdChange)) {\r\n                this._allowIdChange = profile.allowIdChange;\r\n            }\r\n            if (profile.defaultLanguage) {\r\n                this._defaultLanguage = profile.defaultLanguage;\r\n            }\r\n            if (profile.languages) {\r\n                this._languages = profile.languages;\r\n            }\r\n            if (profile.srcDir) {\r\n                this._srcDir = profile.srcDir;\r\n            }\r\n            if (profile.angularCompilerOptions) {\r\n                if (profile.angularCompilerOptions.genDir) {\r\n                    this._genDir = profile.angularCompilerOptions.genDir;\r\n                }\r\n            }\r\n            if (profile.genDir) {\r\n                // this must be after angularCompilerOptions to be preferred\r\n                this._genDir = profile.genDir;\r\n            }\r\n            if (profile.i18nBaseFile) {\r\n                this._i18nBaseFile = profile.i18nBaseFile;\r\n            }\r\n            if (profile.i18nFile) {\r\n                this._i18nFile = profile.i18nFile;\r\n            }\r\n            if (profile.i18nFormat) {\r\n                this._i18nFormat = profile.i18nFormat;\r\n            }\r\n            if (profile.encoding) {\r\n                this._encoding = profile.encoding;\r\n            }\r\n            if (!isNullOrUndefined(profile.removeUnusedIds)) {\r\n                this._removeUnusedIds = profile.removeUnusedIds;\r\n            }\r\n            if (!isNullOrUndefined(profile.supportNgxTranslate)) {\r\n                this._supportNgxTranslate = profile.supportNgxTranslate;\r\n            }\r\n            if (!isNullOrUndefined(profile.ngxTranslateExtractionPattern)) {\r\n                this._ngxTranslateExtractionPattern = profile.ngxTranslateExtractionPattern;\r\n            }\r\n            if (!isNullOrUndefined(profile.useSourceAsTarget)) {\r\n                this._useSourceAsTarget = profile.useSourceAsTarget;\r\n            }\r\n            if (!isNullOrUndefined(profile.targetPraefix)) {\r\n                this._targetPraefix = profile.targetPraefix;\r\n            }\r\n            if (!isNullOrUndefined(profile.targetSuffix)) {\r\n                this._targetSuffix = profile.targetSuffix;\r\n            }\r\n            if (!isNullOrUndefined(profile.autotranslate)) {\r\n                this._autotranslate = profile.autotranslate;\r\n            }\r\n            if (!isNullOrUndefined(profile.beautifyOutput)) {\r\n                this._beautifyOutput = profile.beautifyOutput;\r\n            }\r\n            if (!isNullOrUndefined(profile.preserveOrder)) {\r\n                this._preserveOrder = profile.preserveOrder;\r\n            }\r\n            if (!isNullOrUndefined(profile.apikey)) {\r\n                this._apikey = profile.apikey;\r\n            }\r\n            if (!isNullOrUndefined(profile.apikeyfile)) {\r\n                this._apikeyfile = profile.apikeyfile;\r\n            }\r\n        }\r\n        else {\r\n            this.warningsFound.push('did not find \"xliffmergeOptions\" in profile, using defaults');\r\n        }\r\n    }\r\n    /**\r\n     * Check all Parameters, wether they are complete and consistent.\r\n     * if something is wrong with the parameters, it is collected in errorsFound.\r\n     */\r\n    checkParameters() {\r\n        this.checkLanguageSyntax(this.defaultLanguage());\r\n        if (this.languages().length === 0) {\r\n            this.errorsFound.push(new XliffMergeError('no languages specified'));\r\n        }\r\n        this.languages().forEach((lang) => {\r\n            this.checkLanguageSyntax(lang);\r\n        });\r\n        let stats;\r\n        let err;\r\n        // srcDir should exists\r\n        try {\r\n            stats = fs.statSync(this.srcDir());\r\n        }\r\n        catch (e) {\r\n            err = e;\r\n        }\r\n        if (!!err || !stats.isDirectory()) {\r\n            this.errorsFound.push(new XliffMergeError('srcDir \"' + this.srcDir() + '\" is not a directory'));\r\n        }\r\n        // genDir should exists\r\n        try {\r\n            stats = fs.statSync(this.genDir());\r\n        }\r\n        catch (e) {\r\n            err = e;\r\n        }\r\n        if (!!err || !stats.isDirectory()) {\r\n            this.errorsFound.push(new XliffMergeError('genDir \"' + this.genDir() + '\" is not a directory'));\r\n        }\r\n        // master file MUST exist\r\n        try {\r\n            fs.accessSync(this.i18nFile(), fs.constants.R_OK);\r\n        }\r\n        catch (err) {\r\n            this.errorsFound.push(new XliffMergeError('i18nFile \"' + this.i18nFile() + '\" is not readable'));\r\n        }\r\n        // i18nFormat must be xlf xlf2 or xmb\r\n        if (!(this.i18nFormat() === 'xlf' || this.i18nFormat() === 'xlf2' || this.i18nFormat() === 'xmb')) {\r\n            this.errorsFound.push(new XliffMergeError('i18nFormat \"' + this.i18nFormat() + '\" invalid, must be \"xlf\" or \"xlf2\" or \"xmb\"'));\r\n        }\r\n        // autotranslate requires api key\r\n        if (this.autotranslate() && !this.apikey()) {\r\n            this.errorsFound.push(new XliffMergeError('autotranslate requires an API key, please set one'));\r\n        }\r\n        // autotranslated languages must be in list of all languages\r\n        this.autotranslatedLanguages().forEach((lang) => {\r\n            if (this.languages().indexOf(lang) < 0) {\r\n                this.errorsFound.push(new XliffMergeError('autotranslate language \"' + lang + '\" is not in list of languages'));\r\n            }\r\n            if (lang === this.defaultLanguage()) {\r\n                this.errorsFound.push(new XliffMergeError('autotranslate language \"' + lang + '\" cannot be translated, because it is the source language'));\r\n            }\r\n        });\r\n        // ngx translate pattern check\r\n        if (this.supportNgxTranslate()) {\r\n            const checkResult = NgxTranslateExtractor.checkPattern(this.ngxTranslateExtractionPattern());\r\n            if (!isNullOrUndefined(checkResult)) {\r\n                this.errorsFound.push(new XliffMergeError('ngxTranslateExtractionPattern \"' + this.ngxTranslateExtractionPattern() + '\": ' + checkResult));\r\n            }\r\n        }\r\n        // targetPraefix and targetSuffix check\r\n        if (!this.useSourceAsTarget()) {\r\n            if (this.targetPraefix().length > 0) {\r\n                this.warningsFound.push('configured targetPraefix \"' + this.targetPraefix() + '\" will not be used because \"useSourceAsTarget\" is disabled\"');\r\n            }\r\n            if (this.targetSuffix().length > 0) {\r\n                this.warningsFound.push('configured targetSuffix \"' + this.targetSuffix() + '\" will not be used because \"useSourceAsTarget\" is disabled\"');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Check syntax of language.\r\n     * Must be compatible with XML Schema type xsd:language.\r\n     * Pattern: [a-zA-Z]{1,8}((-|_)[a-zA-Z0-9]{1,8})*\r\n     * @param lang language to check\r\n     */\r\n    checkLanguageSyntax(lang) {\r\n        const pattern = /^[a-zA-Z]{1,8}([-_][a-zA-Z0-9]{1,8})*$/;\r\n        if (!pattern.test(lang)) {\r\n            this.errorsFound.push(new XliffMergeError('language \"' + lang + '\" is not valid'));\r\n        }\r\n    }\r\n    allowIdChange() {\r\n        return (isNullOrUndefined(this._allowIdChange)) ? false : this._allowIdChange;\r\n    }\r\n    verbose() {\r\n        return (isNullOrUndefined(this._verbose)) ? false : this._verbose;\r\n    }\r\n    quiet() {\r\n        return (isNullOrUndefined(this._quiet)) ? false : this._quiet;\r\n    }\r\n    /**\r\n     * Debug output all parameters to commandOutput.\r\n     */\r\n    showAllParameters(commandOutput) {\r\n        commandOutput.debug('xliffmerge Used Parameters:');\r\n        commandOutput.debug('usedProfilePath:\\t\"%s\"', this.usedProfilePath);\r\n        commandOutput.debug('defaultLanguage:\\t\"%s\"', this.defaultLanguage());\r\n        commandOutput.debug('srcDir:\\t\"%s\"', this.srcDir());\r\n        commandOutput.debug('genDir:\\t\"%s\"', this.genDir());\r\n        commandOutput.debug('i18nBaseFile:\\t\"%s\"', this.i18nBaseFile());\r\n        commandOutput.debug('i18nFile:\\t\"%s\"', this.i18nFile());\r\n        commandOutput.debug('languages:\\t%s', this.languages());\r\n        for (const language of this.languages()) {\r\n            commandOutput.debug('outputFile[%s]:\\t%s', language, this.generatedI18nFile(language));\r\n        }\r\n        commandOutput.debug('removeUnusedIds:\\t%s', this.removeUnusedIds());\r\n        commandOutput.debug('supportNgxTranslate:\\t%s', this.supportNgxTranslate());\r\n        if (this.supportNgxTranslate()) {\r\n            commandOutput.debug('ngxTranslateExtractionPattern:\\t%s', this.ngxTranslateExtractionPattern());\r\n        }\r\n        commandOutput.debug('useSourceAsTarget:\\t%s', this.useSourceAsTarget());\r\n        if (this.useSourceAsTarget()) {\r\n            commandOutput.debug('targetPraefix:\\t\"%s\"', this.targetPraefix());\r\n            commandOutput.debug('targetSuffix:\\t\"%s\"', this.targetSuffix());\r\n        }\r\n        commandOutput.debug('allowIdChange:\\t%s', this.allowIdChange());\r\n        commandOutput.debug('beautifyOutput:\\t%s', this.beautifyOutput());\r\n        commandOutput.debug('preserveOrder:\\t%s', this.preserveOrder());\r\n        commandOutput.debug('autotranslate:\\t%s', this.autotranslate());\r\n        if (this.autotranslate()) {\r\n            commandOutput.debug('autotranslated languages:\\t%s', this.autotranslatedLanguages());\r\n            commandOutput.debug('apikey:\\t%s', this.apikey() ? '****' : 'NOT SET');\r\n            commandOutput.debug('apikeyfile:\\t%s', this.apikeyfile());\r\n        }\r\n    }\r\n    /**\r\n     * Default-Language, default en.\r\n     * @return default language\r\n     */\r\n    defaultLanguage() {\r\n        return this._defaultLanguage ? this._defaultLanguage : 'en';\r\n    }\r\n    /**\r\n     * Liste der zu bearbeitenden Sprachen.\r\n     * @return languages\r\n     */\r\n    languages() {\r\n        return this._languages ? this._languages : [];\r\n    }\r\n    /**\r\n     * src directory, where the master xlif is located.\r\n     * @return srcDir\r\n     */\r\n    srcDir() {\r\n        return this._srcDir ? this._srcDir : '.';\r\n    }\r\n    /**\r\n     * The base file name of the xlif file for input and output.\r\n     * Default is messages\r\n     * @return base file\r\n     */\r\n    i18nBaseFile() {\r\n        return this._i18nBaseFile ? this._i18nBaseFile : 'messages';\r\n    }\r\n    /**\r\n     * The master xlif file (the one generated by ng-xi18n).\r\n     * Default is <srcDir>/<i18nBaseFile>.xlf.\r\n     * @return master file\r\n     */\r\n    i18nFile() {\r\n        return join(this.srcDir(), (this._i18nFile ? this._i18nFile : this.i18nBaseFile() + '.' + this.suffixForGeneratedI18nFile())).replace(/\\\\/g, '/');\r\n    }\r\n    /**\r\n     * Format of the master xlif file.\r\n     * Default is \"xlf\", possible are \"xlf\" or \"xlf2\" or \"xmb\".\r\n     * @return format\r\n     */\r\n    i18nFormat() {\r\n        return (this._i18nFormat ? this._i18nFormat : 'xlf');\r\n    }\r\n    /**\r\n     * potentially to be generated I18n-File with the translations for one language.\r\n     * @param lang language shortcut\r\n     * @return Path of file\r\n     */\r\n    generatedI18nFile(lang) {\r\n        return join(this.genDir(), this.i18nBaseFile() + '.' + lang + '.' + this.suffixForGeneratedI18nFile()).replace(/\\\\/g, '/');\r\n    }\r\n    suffixForGeneratedI18nFile() {\r\n        switch (this.i18nFormat()) {\r\n            case 'xlf':\r\n                return 'xlf';\r\n            case 'xlf2':\r\n                return 'xlf';\r\n            case 'xmb':\r\n                return 'xtb';\r\n        }\r\n    }\r\n    /**\r\n     * potentially to be generated translate-File for ngx-translate with the translations for one language.\r\n     * @param lang language shortcut\r\n     * @return Path of file\r\n     */\r\n    generatedNgxTranslateFile(lang) {\r\n        return join(this.genDir(), this.i18nBaseFile() + '.' + lang + '.' + 'json').replace(/\\\\/g, '/');\r\n    }\r\n    /**\r\n     * The encoding used to write new XLIFF-files.\r\n     * @return encoding\r\n     */\r\n    encoding() {\r\n        return this._encoding ? this._encoding : 'utf-8';\r\n    }\r\n    /**\r\n     * Output-Directory, where the output is written to.\r\n     * Default is <srcDir>.\r\n    */\r\n    genDir() {\r\n        return this._genDir ? this._genDir : this.srcDir();\r\n    }\r\n    removeUnusedIds() {\r\n        return (isNullOrUndefined(this._removeUnusedIds)) ? true : this._removeUnusedIds;\r\n    }\r\n    supportNgxTranslate() {\r\n        return (isNullOrUndefined(this._supportNgxTranslate)) ? false : this._supportNgxTranslate;\r\n    }\r\n    ngxTranslateExtractionPattern() {\r\n        return (isNullOrUndefined(this._ngxTranslateExtractionPattern)) ?\r\n            NgxTranslateExtractor.DefaultExtractionPattern : this._ngxTranslateExtractionPattern;\r\n    }\r\n    /**\r\n     * Whether source must be used as target for new trans-units\r\n     * Default is true\r\n     */\r\n    useSourceAsTarget() {\r\n        return (isNullOrUndefined(this._useSourceAsTarget)) ? true : this._useSourceAsTarget;\r\n    }\r\n    /**\r\n     * Praefix used for target when copying new trans-units\r\n     * Default is \"\"\r\n     */\r\n    targetPraefix() {\r\n        return (isNullOrUndefined(this._targetPraefix)) ? '' : this._targetPraefix;\r\n    }\r\n    /**\r\n     * Suffix used for target when copying new trans-units\r\n     * Default is \"\"\r\n     */\r\n    targetSuffix() {\r\n        return (isNullOrUndefined(this._targetSuffix)) ? '' : this._targetSuffix;\r\n    }\r\n    /**\r\n     * If set, run xml result through beautifier (pretty-data).\r\n     */\r\n    beautifyOutput() {\r\n        return (isNullOrUndefined(this._beautifyOutput)) ? false : this._beautifyOutput;\r\n    }\r\n    /**\r\n     * If set, order of new trans units will be as in master.\r\n     * Otherwise they are added at the end.\r\n     */\r\n    preserveOrder() {\r\n        return (isNullOrUndefined(this._preserveOrder)) ? true : this._preserveOrder;\r\n    }\r\n    /**\r\n     * Whether to use autotranslate for new trans-units\r\n     * Default is false\r\n     */\r\n    autotranslate() {\r\n        if (isNullOrUndefined(this._autotranslate)) {\r\n            return false;\r\n        }\r\n        if (isArray(this._autotranslate)) {\r\n            return this._autotranslate.length > 0;\r\n        }\r\n        return this._autotranslate;\r\n    }\r\n    /**\r\n     * Whether to use autotranslate for a given language.\r\n     * @param lang language code.\r\n     */\r\n    autotranslateLanguage(lang) {\r\n        return this.autotranslatedLanguages().indexOf(lang) >= 0;\r\n    }\r\n    /**\r\n     * Return a list of languages to be autotranslated.\r\n     */\r\n    autotranslatedLanguages() {\r\n        if (isNullOrUndefined(this._autotranslate) || this._autotranslate === false) {\r\n            return [];\r\n        }\r\n        if (isArray(this._autotranslate)) {\r\n            return this._autotranslate;\r\n        }\r\n        return this.languages().slice(1); // first is source language\r\n    }\r\n    /**\r\n     * API key to be used for Google Translate\r\n     * @return api key\r\n     */\r\n    apikey() {\r\n        if (!isNullOrUndefined(this._apikey)) {\r\n            return this._apikey;\r\n        }\r\n        else {\r\n            const apikeyPath = this.apikeyfile();\r\n            if (this.apikeyfile()) {\r\n                if (fs.existsSync(apikeyPath)) {\r\n                    return FileUtil.read(apikeyPath, 'utf-8');\r\n                }\r\n                else {\r\n                    throw new Error(format('api key file not found: API_KEY_FILE=%s', apikeyPath));\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * file name for API key to be used for Google Translate.\r\n     * Explicitly set or read from env var API_KEY_FILE.\r\n     * @return file of api key\r\n     */\r\n    apikeyfile() {\r\n        if (this._apikeyfile) {\r\n            return this._apikeyfile;\r\n        }\r\n        else if (process.env.API_KEY_FILE) {\r\n            return process.env.API_KEY_FILE;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"xliff-merge-parameters.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/xliffmerge/xliff-merge-parameters.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[[3,0,4,3]],[[0,0,6,0],[7,0,6,7],[12,0,6,12],[14,0,6,14],[20,0,6,20],[24,0,6,24],[25,0,6,25]],[[0,0,7,0],[7,0,7,7],[9,0,7,8],[24,0,7,23],[26,0,7,24],[32,0,7,30],[53,0,7,51],[54,0,7,52]],[[0,0,10,0],[7,0,10,7],[9,0,10,8],[15,0,10,14],[17,0,10,15],[23,0,10,21],[29,0,10,27],[30,0,10,28]],[[0,0,11,0],[7,0,11,7],[9,0,11,8],[16,0,11,15],[18,0,11,17],[35,0,11,34],[37,0,11,35],[43,0,11,41],[59,0,11,57],[60,0,11,58]],[[0,0,13,0],[7,0,13,7],[9,0,13,8],[17,0,13,16],[19,0,13,17],[25,0,13,23],[46,0,13,44],[47,0,13,45]],[[0,0,14,0],[7,0,14,7],[9,0,14,8],[30,0,14,29],[32,0,14,30],[38,0,14,36],[65,0,14,63],[66,0,14,64]],[[0,0,15,0],[7,0,15,7],[9,0,15,8],[16,0,15,15],[18,0,15,17],[28,0,15,27],[30,0,15,29],[34,0,15,33],[36,0,15,45],[42,0,15,51],[48,0,15,57],[49,0,15,58]],[[0,0,17,0],[6,0,17,6],[24,0,17,24],[27,0,17,27],[28,0,17,28],[42,0,17,42],[44,0,17,44],[63,0,17,63],[64,0,17,64],[65,0,17,65]],[[0,0,19,0],[6,0,19,6],[13,0,19,13],[33,0,19,33]],[[4,0,59,4]],[[8,0,60,8],[12,0,60,12],[13,0,60,13],[24,0,60,24],[27,0,60,27],[29,0,60,29],[30,0,60,30]],[[8,0,61,8],[12,0,61,12],[13,0,61,13],[26,0,61,26],[29,0,61,29],[31,0,61,31],[32,0,61,32]],[[4,0,62,4],[5,0,62,5]],[[4,0,48,4]],[],[],[],[[7,0,52,7]],[[4,0,53,11],[10,0,53,17],[11,0,53,18],[28,0,53,35],[29,0,53,36],[36,0,53,59],[38,0,53,61],[52,0,53,89]],[[8,0,54,8],[14,0,54,14],[24,0,54,24],[27,0,54,27],[31,0,54,31],[51,0,54,51],[53,0,54,53],[54,0,54,54]],[[8,0,55,8],[18,0,55,18],[19,0,55,19],[28,0,55,28],[29,0,55,29],[36,0,55,36],[38,0,55,38],[52,0,55,52],[53,0,55,53],[54,0,55,54]],[[8,0,56,8],[15,0,56,15],[25,0,56,25],[26,0,56,26]],[[4,0,57,4],[5,0,57,5]],[[4,0,64,4]],[],[],[],[],[[7,0,69,7]],[[4,0,70,12],[10,0,70,18],[11,0,70,19],[31,0,70,39],[32,0,70,40],[43,0,70,59]],[[8,0,71,8],[12,0,71,12],[19,0,71,27],[20,0,71,28]],[[8,0,72,8],[12,0,72,12]],[[12,0,73,12],[19,0,73,19],[22,0,73,22],[24,0,73,24],[25,0,73,25],[37,0,73,37],[38,0,73,38],[49,0,73,49],[51,0,73,51],[58,0,73,58],[59,0,73,59],[60,0,73,60]],[[9,0,74,9]],[[8,0,74,10],[15,0,74,17],[18,0,74,20],[20,0,74,22]],[[12,0,75,12],[19,0,75,19],[23,0,75,23],[24,0,75,24]],[[9,0,76,9]],[[8,0,77,8],[14,0,77,14],[27,0,77,27],[30,0,77,43],[34,0,77,47],[35,0,77,48],[40,0,77,53],[41,0,77,54],[48,0,77,61],[49,0,77,62],[50,0,77,63]],[[8,0,78,8],[12,0,78,12],[25,0,78,25],[29,0,78,29],[42,0,78,42],[43,0,78,43],[60,0,78,60],[62,0,78,62]],[[12,0,79,12],[19,0,79,19],[32,0,79,32],[33,0,79,33]],[[9,0,80,9]],[[13,0,80,15]],[[12,0,81,12],[19,0,81,19],[23,0,81,23],[24,0,81,24]],[[9,0,82,9]],[[4,0,83,4],[5,0,83,5]],[[4,0,85,4]],[],[],[],[],[[7,0,90,7]],[[4,0,91,12],[13,0,91,21],[14,0,91,22],[21,0,91,45],[23,0,91,47],[37,0,91,75]],[[8,0,92,8],[12,0,92,12],[13,0,92,13],[24,0,92,24],[27,0,92,27],[29,0,92,29],[30,0,92,30]],[[8,0,93,8],[12,0,93,12],[13,0,93,13],[26,0,93,26],[29,0,93,29],[31,0,93,31],[32,0,93,32]],[[8,0,94,8],[12,0,94,12],[13,0,94,13],[27,0,94,27],[29,0,94,29]],[[12,0,95,12],[26,0,95,26],[29,0,95,29],[33,0,95,33],[34,0,95,34],[45,0,95,45],[46,0,95,46],[53,0,95,53],[54,0,95,54],[55,0,95,55]],[[9,0,96,9]],[[8,0,97,8],[14,0,97,14],[26,0,97,26],[29,0,97,38],[30,0,97,39],[31,0,97,40],[32,0,97,41],[46,0,97,55],[47,0,97,56],[48,0,97,57]],[[8,0,98,8],[12,0,98,12],[19,0,98,19],[20,0,98,20],[25,0,98,25],[27,0,98,27]],[[12,0,99,12],[16,0,99,16],[17,0,99,17],[23,0,99,23],[26,0,99,26],[33,0,99,33],[34,0,99,34],[39,0,99,39],[40,0,99,40]],[[9,0,100,9]],[[8,0,101,8],[12,0,101,12],[19,0,101,19],[20,0,101,20],[27,0,101,27],[29,0,101,29]],[[12,0,102,12],[16,0,102,16],[17,0,102,17],[25,0,102,25],[28,0,102,28],[35,0,102,35],[36,0,102,36],[43,0,102,43],[44,0,102,44]],[[9,0,103,9]],[[8,0,104,8],[12,0,104,12],[24,0,104,24],[26,0,104,26]],[[12,0,105,12],[16,0,105,16],[17,0,105,17],[37,0,105,37],[38,0,105,38],[52,0,105,52],[53,0,105,53],[54,0,105,54]],[[12,0,106,12],[93,0,106,93]],[[12,0,107,12],[16,0,107,16],[17,0,107,17],[18,0,107,18],[25,0,107,25],[26,0,107,26],[35,0,107,35],[39,0,107,39],[46,0,107,46],[47,0,107,47],[56,0,107,56],[57,0,107,57],[63,0,107,63],[66,0,107,66],[67,0,107,67],[69,0,107,69]],[[16,0,108,16],[20,0,108,20],[21,0,108,21],[31,0,108,31],[34,0,108,34],[41,0,108,41],[42,0,108,42],[51,0,108,51],[52,0,108,52]],[[16,0,109,16],[20,0,109,20],[21,0,109,21],[25,0,109,25],[26,0,109,26],[42,0,109,42],[44,0,109,44]],[[20,0,110,20],[24,0,110,24],[25,0,110,25],[41,0,110,41],[44,0,110,44],[48,0,110,48],[49,0,110,49],[59,0,110,59],[60,0,110,60],[61,0,110,61],[62,0,110,62],[63,0,110,63]],[[17,0,111,17]],[[13,0,112,13]],[[12,0,113,12],[16,0,113,16],[17,0,113,17],[32,0,113,32],[34,0,113,34],[35,0,113,35]],[[9,0,114,9]],[[4,0,115,4],[5,0,115,5]],[[4,0,117,4]],[],[],[],[[7,0,121,7]],[[4,0,122,12],[15,0,122,23],[16,0,122,24],[23,0,122,47]],[[8,0,123,8],[14,0,123,14],[25,0,123,25],[28,0,123,36],[35,0,123,43],[36,0,123,44],[47,0,123,55],[48,0,123,56]],[[8,0,124,8],[12,0,124,12],[13,0,124,13],[24,0,124,24],[26,0,124,26]],[[12,0,125,12],[17,0,125,17],[23,0,125,23],[37,0,125,37],[41,0,125,41],[59,0,125,59],[61,0,125,61]],[[16,0,126,16],[22,0,126,22],[29,0,126,29],[32,0,126,32],[52,0,126,52],[53,0,126,53],[73,0,126,73],[74,0,126,74],[88,0,126,88],[89,0,126,89],[90,0,126,90]],[[16,0,127,16],[20,0,127,20],[27,0,127,27],[29,0,127,29]],[[20,0,128,20],[24,0,128,24],[25,0,128,25],[40,0,128,40],[43,0,128,43],[57,0,128,57],[58,0,128,58]],[[20,0,129,20],[27,0,129,27],[34,0,129,34],[35,0,129,35]],[[17,0,130,17]],[[13,0,131,13]],[[12,0,132,12],[19,0,132,19],[21,0,132,21],[22,0,132,22]],[[9,0,133,9]],[[8,0,134,8],[12,0,134,12],[19,0,134,27],[20,0,134,28]],[[8,0,135,8],[12,0,135,12]],[[12,0,136,12],[19,0,136,19],[22,0,136,22],[24,0,136,24],[25,0,136,25],[37,0,136,37],[38,0,136,38],[49,0,136,49],[51,0,136,51],[58,0,136,58],[59,0,136,59],[60,0,136,60]],[[9,0,137,9]],[[8,0,137,10],[15,0,137,17],[18,0,137,20],[20,0,137,22]],[[12,0,138,12],[16,0,138,16],[17,0,138,17],[28,0,138,28],[29,0,138,29],[33,0,138,33],[34,0,138,34],[38,0,138,38],[53,0,138,53],[54,0,138,54],[80,0,138,80],[83,0,138,83],[94,0,138,94],[97,0,138,97],[100,0,138,100],[101,0,138,101],[102,0,138,102],[103,0,138,103]],[[12,0,139,12],[19,0,139,19],[23,0,139,23],[24,0,139,24]],[[9,0,140,9]],[[8,0,141,8],[12,0,141,12],[13,0,141,13],[28,0,141,28],[31,0,141,31],[42,0,141,42],[43,0,141,43]],[[8,0,142,8],[14,0,142,14],[28,0,142,28],[31,0,142,44],[35,0,142,48],[36,0,142,49],[41,0,142,54],[42,0,142,55],[49,0,142,62],[50,0,142,63],[51,0,142,64]],[[8,0,143,8],[58,0,143,58]],[[8,0,144,8],[14,0,144,14],[31,0,144,31],[34,0,144,34],[48,0,144,48],[49,0,144,49],[66,0,144,66],[67,0,144,67]],[[8,0,145,8],[25,0,145,25],[26,0,145,26],[32,0,145,32],[35,0,145,35],[39,0,145,39],[40,0,145,40],[63,0,145,63],[64,0,145,64],[75,0,145,75],[77,0,145,77],[94,0,145,94],[95,0,145,95],[101,0,145,101],[102,0,145,102],[103,0,145,103]],[[8,0,146,8],[25,0,146,25],[26,0,146,26],[32,0,146,32],[35,0,146,35],[39,0,146,39],[40,0,146,40],[63,0,146,63],[64,0,146,64],[75,0,146,75],[77,0,146,77],[94,0,146,94],[95,0,146,95],[101,0,146,101],[102,0,146,102],[103,0,146,103]],[[8,0,147,8],[25,0,147,25],[26,0,147,26],[36,0,147,36],[39,0,147,39],[43,0,147,43],[44,0,147,44],[67,0,147,67],[68,0,147,68],[79,0,147,79],[81,0,147,81],[98,0,147,98],[99,0,147,99],[109,0,147,109],[110,0,147,110],[111,0,147,111]],[[8,0,148,8],[15,0,148,15],[29,0,148,29],[30,0,148,30]],[[4,0,149,4],[5,0,149,5]],[[4,0,151,12],[27,0,151,35],[28,0,151,36],[39,0,151,55],[41,0,151,57],[53,0,151,89]],[[8,0,152,8],[12,0,152,12],[13,0,152,13],[25,0,152,25],[29,0,152,29],[39,0,152,39],[40,0,152,40],[52,0,152,52],[53,0,152,53],[55,0,152,55]],[[12,0,153,12],[19,0,153,19],[31,0,153,31],[32,0,153,32]],[[9,0,154,9]],[[8,0,155,8],[15,0,155,15],[19,0,155,19],[20,0,155,20],[27,0,155,27],[28,0,155,28],[39,0,155,39],[40,0,155,40],[42,0,155,42],[54,0,155,54],[55,0,155,55],[56,0,155,56],[63,0,155,63],[64,0,155,64],[69,0,155,69],[71,0,155,71],[74,0,155,74],[75,0,155,75],[76,0,155,76]],[[4,0,156,4],[5,0,156,5]],[[4,0,158,12],[24,0,158,32],[25,0,158,33],[39,0,158,60]],[[8,0,159,8],[12,0,159,12],[13,0,159,13],[27,0,159,27],[29,0,159,29]],[[12,0,160,12],[19,0,160,19]],[[9,0,161,9]],[[8,0,162,8],[14,0,162,14],[21,0,162,21],[24,0,162,24],[38,0,162,38],[39,0,162,39],[56,0,162,56],[57,0,162,57]],[[8,0,163,8],[12,0,163,12],[19,0,163,19],[21,0,163,21]],[[12,0,164,12],[16,0,164,16],[17,0,164,17],[34,0,164,34],[35,0,164,35],[42,0,164,42],[43,0,164,43],[48,0,164,48],[49,0,164,49],[51,0,164,51]],[[16,0,165,16],[20,0,165,20],[21,0,165,21],[27,0,165,27],[30,0,165,30],[37,0,165,37],[38,0,165,38],[43,0,165,43],[44,0,165,44]],[[13,0,166,13]],[[12,0,167,12],[16,0,167,16],[17,0,167,17],[34,0,167,34],[35,0,167,35],[42,0,167,42],[43,0,167,43],[50,0,167,50],[51,0,167,51],[53,0,167,53]],[[16,0,168,16],[20,0,168,20],[21,0,168,21],[29,0,168,29],[32,0,168,32],[39,0,168,39],[40,0,168,40],[47,0,168,47],[48,0,168,48]],[[13,0,169,13]],[[12,0,170,12],[16,0,170,16],[17,0,170,17],[34,0,170,34],[35,0,170,35],[42,0,170,42],[43,0,170,43],[56,0,170,56],[57,0,170,57],[59,0,170,59]],[[16,0,171,16],[20,0,171,20],[21,0,171,21],[35,0,171,35],[38,0,171,38],[45,0,171,45],[46,0,171,46],[59,0,171,59],[60,0,171,60]],[[13,0,172,13]],[[12,0,173,12],[16,0,173,16],[23,0,173,23],[24,0,173,24],[39,0,173,39],[41,0,173,41]],[[16,0,174,16],[20,0,174,20],[21,0,174,21],[37,0,174,37],[40,0,174,40],[47,0,174,47],[48,0,174,48],[63,0,174,63],[64,0,174,64]],[[13,0,175,13]],[[12,0,176,12],[16,0,176,16],[23,0,176,23],[24,0,176,24],[33,0,176,33],[35,0,176,35]],[[16,0,177,16],[20,0,177,20],[21,0,177,21],[31,0,177,31],[34,0,177,34],[41,0,177,41],[42,0,177,42],[51,0,177,51],[52,0,177,52]],[[13,0,178,13]],[[12,0,179,12],[16,0,179,16],[23,0,179,23],[24,0,179,24],[30,0,179,30],[32,0,179,32]],[[16,0,180,16],[20,0,180,20],[21,0,180,21],[28,0,180,28],[31,0,180,31],[38,0,180,38],[39,0,180,39],[45,0,180,45],[46,0,180,46]],[[13,0,181,13]],[[12,0,182,12],[16,0,182,16],[23,0,182,23],[24,0,182,24],[46,0,182,46],[48,0,182,48]],[[16,0,183,16],[20,0,183,20],[27,0,183,27],[28,0,183,28],[50,0,183,50],[51,0,183,51],[57,0,183,57],[59,0,183,59]],[[20,0,184,20],[24,0,184,24],[25,0,184,25],[32,0,184,32],[35,0,184,35],[42,0,184,42],[43,0,184,43],[65,0,184,65],[66,0,184,66],[72,0,184,72],[73,0,184,73]],[[17,0,185,17]],[[13,0,186,13]],[[12,0,187,12],[16,0,187,16],[23,0,187,23],[24,0,187,24],[30,0,187,30],[32,0,187,32]],[[16,0,188,16],[76,0,188,76]],[[16,0,189,16],[20,0,189,20],[21,0,189,21],[28,0,189,28],[31,0,189,31],[38,0,189,38],[39,0,189,39],[45,0,189,45],[46,0,189,46]],[[13,0,190,13]],[[12,0,191,12],[16,0,191,16],[23,0,191,23],[24,0,191,24],[36,0,191,36],[38,0,191,38]],[[16,0,192,16],[20,0,192,20],[21,0,192,21],[34,0,192,34],[37,0,192,37],[44,0,192,44],[45,0,192,45],[57,0,192,57],[58,0,192,58]],[[13,0,193,13]],[[12,0,194,12],[16,0,194,16],[23,0,194,23],[24,0,194,24],[32,0,194,32],[34,0,194,34]],[[16,0,195,16],[20,0,195,20],[21,0,195,21],[30,0,195,30],[33,0,195,33],[40,0,195,40],[41,0,195,41],[49,0,195,49],[50,0,195,50]],[[13,0,196,13]],[[12,0,197,12],[16,0,197,16],[23,0,197,23],[24,0,197,24],[34,0,197,34],[36,0,197,36]],[[16,0,198,16],[20,0,198,20],[21,0,198,21],[32,0,198,32],[35,0,198,35],[42,0,198,42],[43,0,198,43],[53,0,198,53],[54,0,198,54]],[[13,0,199,13]],[[12,0,200,12],[16,0,200,16],[23,0,200,23],[24,0,200,24],[32,0,200,32],[34,0,200,34]],[[16,0,201,16],[20,0,201,20],[21,0,201,21],[30,0,201,30],[33,0,201,33],[40,0,201,40],[41,0,201,41],[49,0,201,49],[50,0,201,50]],[[13,0,202,13]],[[12,0,203,12],[16,0,203,16],[17,0,203,17],[34,0,203,34],[35,0,203,35],[42,0,203,42],[43,0,203,43],[58,0,203,58],[59,0,203,59],[61,0,203,61]],[[16,0,204,16],[20,0,204,20],[21,0,204,21],[37,0,204,37],[40,0,204,40],[47,0,204,47],[48,0,204,48],[63,0,204,63],[64,0,204,64]],[[13,0,205,13]],[[12,0,206,12],[16,0,206,16],[17,0,206,17],[34,0,206,34],[35,0,206,35],[42,0,206,42],[43,0,206,43],[62,0,206,62],[63,0,206,63],[65,0,206,65]],[[16,0,207,16],[20,0,207,20],[21,0,207,21],[41,0,207,41],[44,0,207,44],[51,0,207,51],[52,0,207,52],[71,0,207,71],[72,0,207,72]],[[13,0,208,13]],[[12,0,209,12],[16,0,209,16],[17,0,209,17],[34,0,209,34],[35,0,209,35],[42,0,209,42],[43,0,209,43],[72,0,209,72],[73,0,209,73],[75,0,209,75]],[[16,0,210,16],[20,0,210,20],[21,0,210,21],[51,0,210,51],[54,0,210,54],[61,0,210,61],[62,0,210,62],[91,0,210,91],[92,0,210,92]],[[13,0,211,13]],[[12,0,212,12],[16,0,212,16],[17,0,212,17],[34,0,212,34],[35,0,212,35],[42,0,212,42],[43,0,212,43],[60,0,212,60],[61,0,212,61],[63,0,212,63]],[[16,0,213,16],[20,0,213,20],[21,0,213,21],[39,0,213,39],[42,0,213,42],[49,0,213,49],[50,0,213,50],[67,0,213,67],[68,0,213,68]],[[13,0,214,13]],[[12,0,215,12],[16,0,215,16],[17,0,215,17],[34,0,215,34],[35,0,215,35],[42,0,215,42],[43,0,215,43],[56,0,215,56],[57,0,215,57],[59,0,215,59]],[[16,0,216,16],[20,0,216,20],[21,0,216,21],[35,0,216,35],[38,0,216,38],[45,0,216,45],[46,0,216,46],[59,0,216,59],[60,0,216,60]],[[13,0,217,13]],[[12,0,218,12],[16,0,218,16],[17,0,218,17],[34,0,218,34],[35,0,218,35],[42,0,218,42],[43,0,218,43],[55,0,218,55],[56,0,218,56],[58,0,218,58]],[[16,0,219,16],[20,0,219,20],[21,0,219,21],[34,0,219,34],[37,0,219,37],[44,0,219,44],[45,0,219,45],[57,0,219,57],[58,0,219,58]],[[13,0,220,13]],[[12,0,221,12],[16,0,221,16],[17,0,221,17],[34,0,221,34],[35,0,221,35],[42,0,221,42],[43,0,221,43],[56,0,221,56],[57,0,221,57],[59,0,221,59]],[[16,0,222,16],[20,0,222,20],[21,0,222,21],[35,0,222,35],[38,0,222,38],[45,0,222,45],[46,0,222,46],[59,0,222,59],[60,0,222,60]],[[13,0,223,13]],[[12,0,224,12],[16,0,224,16],[17,0,224,17],[34,0,224,34],[35,0,224,35],[42,0,224,42],[43,0,224,43],[57,0,224,57],[58,0,224,58],[60,0,224,60]],[[16,0,225,16],[20,0,225,20],[21,0,225,21],[36,0,225,36],[39,0,225,39],[46,0,225,46],[47,0,225,47],[61,0,225,61],[62,0,225,62]],[[13,0,226,13]],[[12,0,227,12],[16,0,227,16],[17,0,227,17],[34,0,227,34],[35,0,227,35],[42,0,227,42],[43,0,227,43],[56,0,227,56],[57,0,227,57],[59,0,227,59]],[[16,0,228,16],[20,0,228,20],[21,0,228,21],[35,0,228,35],[38,0,228,38],[45,0,228,45],[46,0,228,46],[59,0,228,59],[60,0,228,60]],[[13,0,229,13]],[[12,0,230,12],[16,0,230,16],[17,0,230,17],[34,0,230,34],[35,0,230,35],[42,0,230,42],[43,0,230,43],[49,0,230,49],[50,0,230,50],[52,0,230,52]],[[16,0,231,16],[20,0,231,20],[21,0,231,21],[28,0,231,28],[31,0,231,31],[38,0,231,38],[39,0,231,39],[45,0,231,45],[46,0,231,46]],[[13,0,232,13]],[[12,0,233,12],[16,0,233,16],[17,0,233,17],[34,0,233,34],[35,0,233,35],[42,0,233,42],[43,0,233,43],[53,0,233,53],[54,0,233,54],[56,0,233,56]],[[16,0,234,16],[20,0,234,20],[21,0,234,21],[32,0,234,32],[35,0,234,35],[42,0,234,42],[43,0,234,43],[53,0,234,53],[54,0,234,54]],[[13,0,235,13]],[[9,0,236,9]],[[13,0,236,15]],[[12,0,237,12],[16,0,237,16],[17,0,237,17],[30,0,237,30],[31,0,237,31],[35,0,237,35],[36,0,237,36],[97,0,237,97],[98,0,237,98],[99,0,237,99]],[[9,0,238,9]],[[4,0,239,4],[5,0,239,5]],[[4,0,241,4]],[],[],[[7,0,244,7]],[[4,0,245,12],[19,0,245,27]],[[8,0,246,8],[12,0,246,12],[13,0,246,13],[32,0,246,32],[33,0,246,33],[37,0,246,37],[38,0,246,38],[53,0,246,53],[55,0,246,55],[56,0,246,56],[57,0,246,57]],[[8,0,247,8],[12,0,247,12],[16,0,247,16],[17,0,247,17],[26,0,247,26],[28,0,247,28],[29,0,247,29],[35,0,247,35],[40,0,247,40],[41,0,247,41],[43,0,247,43]],[[12,0,248,12],[16,0,248,16],[17,0,248,17],[28,0,248,28],[29,0,248,29],[33,0,248,33],[34,0,248,34],[38,0,248,38],[53,0,248,53],[54,0,248,54],[78,0,248,78],[79,0,248,79],[80,0,248,80],[81,0,248,81]],[[9,0,249,9]],[[8,0,250,8],[12,0,250,12],[13,0,250,13],[22,0,250,22],[24,0,250,24],[25,0,250,25],[32,0,250,32],[33,0,250,33],[34,0,250,34],[38,0,250,38],[40,0,250,40],[42,0,250,42]],[[12,0,251,12],[16,0,251,16],[17,0,251,17],[36,0,251,36],[37,0,251,37],[41,0,251,41],[42,0,251,42],[43,0,251,43]],[[8,0,252,8],[9,0,252,9],[10,0,252,10],[11,0,252,11]],[[8,0,253,8],[12,0,253,12],[17,0,253,24],[18,0,253,25]],[[8,0,254,8],[12,0,254,12],[15,0,254,20],[16,0,254,21]],[[8,0,255,8],[31,0,255,31]],[[8,0,256,8],[12,0,256,12]],[[12,0,257,12],[17,0,257,17],[20,0,257,20],[22,0,257,22],[23,0,257,23],[31,0,257,31],[32,0,257,32],[36,0,257,36],[37,0,257,37],[43,0,257,43],[45,0,257,45],[46,0,257,46],[47,0,257,47]],[[9,0,258,9]],[[8,0,258,10],[15,0,258,17],[16,0,258,18],[18,0,258,20]],[[12,0,259,12],[15,0,259,15],[18,0,259,18],[19,0,259,19],[20,0,259,20]],[[9,0,260,9]],[[8,0,261,8],[12,0,261,12],[13,0,261,13],[14,0,261,14],[17,0,261,17],[21,0,261,21],[22,0,261,22],[27,0,261,27],[28,0,261,28],[39,0,261,39],[41,0,261,41],[43,0,261,43]],[[12,0,262,12],[16,0,262,16],[17,0,262,17],[28,0,262,28],[29,0,262,29],[33,0,262,33],[34,0,262,34],[38,0,262,38],[53,0,262,53],[54,0,262,54],[64,0,262,64],[67,0,262,67],[71,0,262,71],[72,0,262,72],[78,0,262,78],[80,0,262,80],[83,0,262,83],[105,0,262,105],[106,0,262,106],[107,0,262,107],[108,0,262,108]],[[9,0,263,9]],[[8,0,264,8],[31,0,264,31]],[[8,0,265,8],[12,0,265,12]],[[12,0,266,12],[17,0,266,17],[20,0,266,20],[22,0,266,22],[23,0,266,23],[31,0,266,31],[32,0,266,32],[36,0,266,36],[37,0,266,37],[43,0,266,43],[45,0,266,45],[46,0,266,46],[47,0,266,47]],[[9,0,267,9]],[[8,0,267,10],[15,0,267,17],[16,0,267,18],[18,0,267,20]],[[12,0,268,12],[15,0,268,15],[18,0,268,18],[19,0,268,19],[20,0,268,20]],[[9,0,269,9]],[[8,0,270,8],[12,0,270,12],[13,0,270,13],[14,0,270,14],[17,0,270,17],[21,0,270,21],[22,0,270,22],[27,0,270,27],[28,0,270,28],[39,0,270,39],[41,0,270,41],[43,0,270,43]],[[12,0,271,12],[16,0,271,16],[17,0,271,17],[28,0,271,28],[29,0,271,29],[33,0,271,33],[34,0,271,34],[38,0,271,38],[53,0,271,53],[54,0,271,54],[64,0,271,64],[67,0,271,67],[71,0,271,71],[72,0,271,72],[78,0,271,78],[80,0,271,80],[83,0,271,83],[105,0,271,105],[106,0,271,106],[107,0,271,107],[108,0,271,108]],[[9,0,272,9]],[[8,0,273,8],[33,0,273,33]],[[8,0,274,8],[12,0,274,12]],[[12,0,275,12],[14,0,275,14],[15,0,275,15],[25,0,275,25],[26,0,275,26],[30,0,275,30],[31,0,275,31],[39,0,275,39],[41,0,275,41],[43,0,275,43],[45,0,275,45],[46,0,275,46],[55,0,275,55],[56,0,275,56],[60,0,275,60],[61,0,275,61],[62,0,275,62]],[[9,0,276,9]],[[8,0,276,10],[15,0,276,17],[18,0,276,20],[20,0,276,22]],[[12,0,277,12],[16,0,277,16],[17,0,277,17],[28,0,277,28],[29,0,277,29],[33,0,277,33],[34,0,277,34],[38,0,277,38],[53,0,277,53],[54,0,277,54],[66,0,277,66],[69,0,277,69],[73,0,277,73],[74,0,277,74],[82,0,277,82],[84,0,277,84],[87,0,277,87],[106,0,277,106],[107,0,277,107],[108,0,277,108],[109,0,277,109]],[[9,0,278,9]],[[8,0,279,8],[45,0,279,45]],[[8,0,280,8],[12,0,280,12],[13,0,280,13],[14,0,280,14],[18,0,280,18],[19,0,280,19],[29,0,280,29],[31,0,280,31],[36,0,280,36],[41,0,280,41],[45,0,280,45],[49,0,280,49],[50,0,280,50],[60,0,280,60],[62,0,280,62],[67,0,280,67],[73,0,280,73],[77,0,280,77],[81,0,280,81],[82,0,280,82],[92,0,280,92],[94,0,280,94],[99,0,280,99],[104,0,280,104],[105,0,280,105],[107,0,280,107]],[[12,0,281,12],[16,0,281,16],[17,0,281,17],[28,0,281,28],[29,0,281,29],[33,0,281,33],[34,0,281,34],[38,0,281,38],[53,0,281,53],[54,0,281,54],[68,0,281,68],[71,0,281,71],[75,0,281,75],[76,0,281,76],[86,0,281,86],[88,0,281,88],[91,0,281,91],[136,0,281,136],[137,0,281,137],[138,0,281,138],[139,0,281,139]],[[9,0,282,9]],[[8,0,283,8],[41,0,283,41]],[[8,0,284,8],[12,0,284,12],[16,0,284,16],[17,0,284,17],[30,0,284,30],[32,0,284,32],[36,0,284,36],[37,0,284,37],[41,0,284,41],[42,0,284,42],[48,0,284,48],[50,0,284,50],[52,0,284,52]],[[12,0,285,12],[16,0,285,16],[17,0,285,17],[28,0,285,28],[29,0,285,29],[33,0,285,33],[34,0,285,34],[38,0,285,38],[53,0,285,53],[54,0,285,54],[105,0,285,105],[106,0,285,106],[107,0,285,107],[108,0,285,108]],[[9,0,286,9]],[[8,0,287,8],[68,0,287,68]],[[8,0,288,8],[12,0,288,12],[13,0,288,13],[36,0,288,36],[38,0,288,38],[39,0,288,39],[46,0,288,46],[47,0,288,47],[48,0,288,48],[52,0,288,52],[54,0,288,54],[56,0,288,56]],[[12,0,289,12],[16,0,289,16],[20,0,289,20],[21,0,289,21],[30,0,289,30],[32,0,289,32],[33,0,289,33],[40,0,289,40],[41,0,289,41],[45,0,289,45],[46,0,289,46],[49,0,289,49],[50,0,289,50],[52,0,289,52]],[[16,0,290,16],[20,0,290,20],[21,0,290,21],[32,0,290,32],[33,0,290,33],[37,0,290,37],[38,0,290,38],[42,0,290,42],[57,0,290,57],[58,0,290,58],[84,0,290,84],[87,0,290,87],[91,0,290,91],[94,0,290,94],[125,0,290,125],[126,0,290,126],[127,0,290,127],[128,0,290,128]],[[13,0,291,13]],[[12,0,292,12],[16,0,292,16],[20,0,292,20],[25,0,292,25],[29,0,292,29],[30,0,292,30],[45,0,292,45],[47,0,292,47],[49,0,292,49]],[[16,0,293,16],[20,0,293,20],[21,0,293,21],[32,0,293,32],[33,0,293,33],[37,0,293,37],[38,0,294,20],[42,0,294,24],[57,0,294,39],[58,0,294,40],[84,0,294,66],[87,0,294,69],[91,0,294,73],[94,0,294,76],[153,0,294,135],[154,0,294,136],[155,0,294,137],[156,0,294,138]],[[13,0,295,13]],[[8,0,296,8],[9,0,296,9],[10,0,296,10],[11,0,296,11]],[[8,0,297,8],[38,0,297,38]],[[8,0,298,8],[12,0,298,12],[16,0,298,16],[17,0,298,17],[36,0,298,36],[38,0,298,38],[40,0,298,40]],[[12,0,299,12],[18,0,299,18],[29,0,299,29],[32,0,299,32],[53,0,299,53],[54,0,299,54],[66,0,299,66],[67,0,299,67],[71,0,299,71],[72,0,299,72],[101,0,299,101],[103,0,299,103],[104,0,299,104],[105,0,299,105]],[[12,0,300,12],[16,0,300,16],[17,0,300,17],[34,0,300,34],[35,0,300,35],[46,0,300,46],[47,0,300,47],[49,0,300,49]],[[16,0,301,16],[20,0,301,20],[21,0,301,21],[32,0,301,32],[33,0,301,33],[37,0,301,37],[38,0,302,20],[42,0,302,24],[57,0,302,39],[58,0,302,40],[91,0,302,73],[94,0,302,76],[98,0,302,80],[99,0,302,81],[128,0,302,110],[130,0,302,112],[133,0,302,115],[138,0,302,120],[141,0,302,123],[152,0,302,134],[153,0,302,135],[154,0,302,136],[155,0,302,137]],[[13,0,303,13]],[[9,0,304,9]],[[8,0,305,8],[47,0,305,47]],[[8,0,306,8],[12,0,306,12],[13,0,306,13],[17,0,306,17],[18,0,306,18],[35,0,306,35],[37,0,306,37],[39,0,306,39]],[[12,0,307,12],[16,0,307,16],[20,0,307,20],[21,0,307,21],[34,0,307,34],[36,0,307,36],[37,0,307,37],[43,0,307,43],[46,0,307,46],[47,0,307,47],[49,0,307,49]],[[16,0,308,16],[20,0,308,20],[21,0,308,21],[34,0,308,34],[35,0,308,35],[39,0,308,39],[40,0,309,20],[68,0,309,48],[71,0,309,51],[75,0,309,55],[76,0,309,56],[89,0,309,69],[91,0,309,71],[94,0,309,74],[155,0,309,135],[156,0,309,136],[157,0,309,137]],[[13,0,310,13]],[[12,0,311,12],[16,0,311,16],[20,0,311,20],[21,0,311,21],[33,0,311,33],[35,0,311,35],[36,0,311,36],[42,0,311,42],[45,0,311,45],[46,0,311,46],[48,0,311,48]],[[16,0,312,16],[20,0,312,20],[21,0,312,21],[34,0,312,34],[35,0,312,35],[39,0,312,39],[40,0,313,20],[67,0,313,47],[70,0,313,50],[74,0,313,54],[75,0,313,55],[87,0,313,67],[89,0,313,69],[92,0,313,72],[153,0,313,133],[154,0,313,134],[155,0,313,135]],[[13,0,314,13]],[[9,0,315,9]],[[4,0,316,5],[5,0,316,6]],[[4,0,318,4]],[],[],[],[],[[7,0,323,7]],[[4,0,324,12],[23,0,324,31],[24,0,324,32],[28,0,324,44]],[[8,0,325,8],[14,0,325,14],[21,0,325,21],[24,0,325,24],[64,0,325,64],[65,0,325,65]],[[8,0,326,8],[12,0,326,12],[13,0,326,13],[20,0,326,20],[21,0,326,21],[25,0,326,25],[26,0,326,26],[30,0,326,30],[31,0,326,31],[33,0,326,33]],[[12,0,327,12],[16,0,327,16],[17,0,327,17],[28,0,327,28],[29,0,327,29],[33,0,327,33],[34,0,327,34],[38,0,327,38],[53,0,327,53],[54,0,327,54],[66,0,327,66],[69,0,327,69],[73,0,327,73],[76,0,327,76],[92,0,327,92],[93,0,327,93],[94,0,327,94],[95,0,327,95]],[[9,0,328,9]],[[4,0,329,4],[5,0,329,5]],[[4,0,331,11],[17,0,331,24]],[[8,0,332,8],[15,0,332,15],[16,0,332,16],[33,0,332,33],[34,0,332,34],[38,0,332,38],[39,0,332,39],[53,0,332,53],[54,0,332,54],[55,0,332,55],[56,0,332,56],[57,0,332,57],[58,0,332,58],[63,0,332,63],[64,0,332,64],[65,0,332,65],[66,0,332,66],[70,0,332,70],[71,0,332,71],[85,0,332,85],[86,0,332,86]],[[4,0,333,4],[5,0,333,5]],[[4,0,335,11],[11,0,335,18]],[[8,0,336,8],[15,0,336,15],[16,0,336,16],[33,0,336,33],[34,0,336,34],[38,0,336,38],[39,0,336,39],[47,0,336,47],[48,0,336,48],[49,0,336,49],[50,0,336,50],[51,0,336,51],[52,0,336,52],[57,0,336,57],[58,0,336,58],[59,0,336,59],[60,0,336,60],[64,0,336,64],[65,0,336,65],[73,0,336,73],[74,0,336,74]],[[4,0,337,4],[5,0,337,5]],[[4,0,339,11],[9,0,339,16]],[[8,0,340,8],[15,0,340,15],[16,0,340,16],[33,0,340,33],[34,0,340,34],[38,0,340,38],[39,0,340,39],[45,0,340,45],[46,0,340,46],[47,0,340,47],[48,0,340,48],[49,0,340,49],[50,0,340,50],[55,0,340,55],[56,0,340,56],[57,0,340,57],[58,0,340,58],[62,0,340,62],[63,0,340,63],[69,0,340,69],[70,0,340,70]],[[4,0,341,4],[5,0,341,5]],[[4,0,343,4]],[],[[7,0,345,7]],[[4,0,346,11],[21,0,346,28],[22,0,346,29],[35,0,346,57]],[[8,0,347,8],[21,0,347,21],[22,0,347,22],[27,0,347,27],[28,0,347,28],[57,0,347,57],[58,0,347,58],[59,0,347,59]],[[8,0,348,8],[21,0,348,21],[22,0,348,22],[27,0,348,27],[28,0,348,28],[52,0,348,52],[54,0,348,54],[58,0,348,58],[59,0,348,59],[74,0,348,74],[75,0,348,75],[76,0,348,76]],[[8,0,349,8],[21,0,349,21],[22,0,349,22],[27,0,349,27],[28,0,349,28],[52,0,349,52],[54,0,349,54],[58,0,349,58],[59,0,349,59],[74,0,349,74],[76,0,349,76],[77,0,349,77],[78,0,349,78]],[[8,0,350,8],[21,0,350,21],[22,0,350,22],[27,0,350,27],[28,0,350,28],[43,0,350,43],[45,0,350,45],[49,0,350,49],[50,0,350,50],[56,0,350,56],[58,0,350,58],[59,0,350,59],[60,0,350,60]],[[8,0,351,8],[21,0,351,21],[22,0,351,22],[27,0,351,27],[28,0,351,28],[43,0,351,43],[45,0,351,45],[49,0,351,49],[50,0,351,50],[56,0,351,56],[58,0,351,58],[59,0,351,59],[60,0,351,60]],[[8,0,352,8],[21,0,352,21],[22,0,352,22],[27,0,352,27],[28,0,352,28],[49,0,352,49],[51,0,352,51],[55,0,352,55],[56,0,352,56],[68,0,352,68],[70,0,352,70],[71,0,352,71],[72,0,352,72]],[[8,0,353,8],[21,0,353,21],[22,0,353,22],[27,0,353,27],[28,0,353,28],[45,0,353,45],[47,0,353,47],[51,0,353,51],[52,0,353,52],[60,0,353,60],[62,0,353,62],[63,0,353,63],[64,0,353,64]],[[8,0,354,8],[21,0,354,21],[22,0,354,22],[27,0,354,27],[28,0,354,28],[44,0,354,44],[46,0,354,46],[50,0,354,50],[51,0,354,51],[60,0,354,60],[62,0,354,62],[63,0,354,63],[64,0,354,64]],[[8,0,355,8],[13,0,355,13],[19,0,355,19],[27,0,355,27],[31,0,355,31],[35,0,355,35],[36,0,355,36],[45,0,355,45],[47,0,355,47],[49,0,355,49]],[[12,0,356,12],[25,0,356,25],[26,0,356,26],[31,0,356,31],[32,0,356,32],[53,0,356,53],[55,0,356,55],[63,0,356,63],[65,0,356,65],[69,0,356,69],[70,0,356,70],[87,0,356,87],[88,0,356,88],[96,0,356,96],[97,0,356,97],[98,0,356,98],[99,0,356,99]],[[9,0,357,9]],[[8,0,358,8],[21,0,358,21],[22,0,358,22],[27,0,358,27],[28,0,358,28],[50,0,358,50],[52,0,358,52],[56,0,358,56],[57,0,358,57],[72,0,358,72],[74,0,358,74],[75,0,358,75],[76,0,358,76]],[[8,0,359,8],[21,0,359,21],[22,0,359,22],[27,0,359,27],[28,0,359,28],[54,0,359,54],[56,0,359,56],[60,0,359,60],[61,0,359,61],[80,0,359,80],[82,0,359,82],[83,0,359,83],[84,0,359,84]],[[8,0,360,8],[12,0,360,12],[16,0,360,16],[17,0,360,17],[36,0,360,36],[38,0,360,38],[40,0,360,40]],[[12,0,361,12],[25,0,361,25],[26,0,361,26],[31,0,361,31],[32,0,361,32],[68,0,361,68],[70,0,361,70],[74,0,361,74],[75,0,361,75],[104,0,361,104],[106,0,361,106],[107,0,361,107],[108,0,361,108]],[[9,0,362,9]],[[8,0,363,8],[21,0,363,21],[22,0,363,22],[27,0,363,27],[28,0,363,28],[52,0,363,52],[54,0,363,54],[58,0,363,58],[59,0,363,59],[76,0,363,76],[78,0,363,78],[79,0,363,79],[80,0,363,80]],[[8,0,364,8],[12,0,364,12],[16,0,364,16],[17,0,364,17],[34,0,364,34],[36,0,364,36],[38,0,364,38]],[[12,0,365,12],[25,0,365,25],[26,0,365,26],[31,0,365,31],[32,0,365,32],[54,0,365,54],[56,0,365,56],[60,0,365,60],[61,0,365,61],[74,0,365,74],[76,0,365,76],[77,0,365,77],[78,0,365,78]],[[12,0,366,12],[25,0,366,25],[26,0,366,26],[31,0,366,31],[32,0,366,32],[53,0,366,53],[55,0,366,55],[59,0,366,59],[60,0,366,60],[72,0,366,72],[74,0,366,74],[75,0,366,75],[76,0,366,76]],[[9,0,367,9]],[[8,0,368,8],[21,0,368,21],[22,0,368,22],[27,0,368,27],[28,0,368,28],[48,0,368,48],[50,0,368,50],[54,0,368,54],[55,0,368,55],[68,0,368,68],[70,0,368,70],[71,0,368,71],[72,0,368,72]],[[8,0,369,8],[21,0,369,21],[22,0,369,22],[27,0,369,27],[28,0,369,28],[49,0,369,49],[51,0,369,51],[55,0,369,55],[56,0,369,56],[70,0,369,70],[72,0,369,72],[73,0,369,73],[74,0,369,74]],[[8,0,370,8],[21,0,370,21],[22,0,370,22],[27,0,370,27],[28,0,370,28],[48,0,370,48],[50,0,370,50],[54,0,370,54],[55,0,370,55],[68,0,370,68],[70,0,370,70],[71,0,370,71],[72,0,370,72]],[[8,0,371,8],[21,0,371,21],[22,0,371,22],[27,0,371,27],[28,0,371,28],[48,0,371,48],[50,0,371,50],[54,0,371,54],[55,0,371,55],[68,0,371,68],[70,0,371,70],[71,0,371,71],[72,0,371,72]],[[8,0,372,8],[12,0,372,12],[16,0,372,16],[17,0,372,17],[30,0,372,30],[32,0,372,32],[34,0,372,34]],[[12,0,373,12],[25,0,373,25],[26,0,373,26],[31,0,373,31],[32,0,373,32],[63,0,373,63],[65,0,373,65],[69,0,373,69],[70,0,373,70],[93,0,373,93],[95,0,373,95],[96,0,373,96],[97,0,373,97]],[[12,0,374,12],[25,0,374,25],[26,0,374,26],[31,0,374,31],[32,0,374,32],[45,0,374,45],[47,0,374,47],[51,0,374,51],[52,0,374,52],[58,0,374,58],[60,0,374,60],[61,0,374,61],[62,0,374,62],[63,0,374,63],[69,0,374,69],[70,0,374,70],[71,0,374,71],[72,0,374,72],[81,0,374,81],[82,0,374,82],[83,0,374,83]],[[12,0,375,12],[25,0,375,25],[26,0,375,26],[31,0,375,31],[32,0,375,32],[49,0,375,49],[51,0,375,51],[55,0,375,55],[56,0,375,56],[66,0,375,66],[68,0,375,68],[69,0,375,69],[70,0,375,70]],[[9,0,376,9]],[[4,0,377,4],[5,0,377,5]],[[4,0,379,4]],[],[],[[7,0,382,7]],[[4,0,383,11],[19,0,383,26]],[[8,0,384,8],[15,0,384,15],[19,0,384,19],[20,0,384,20],[36,0,384,36],[37,0,384,37],[38,0,384,38],[39,0,384,39],[43,0,384,43],[44,0,384,44],[60,0,384,60],[61,0,384,61],[62,0,384,62],[63,0,384,63],[67,0,384,67],[68,0,384,68]],[[4,0,385,4],[5,0,385,5]],[[4,0,387,4]],[],[],[[7,0,390,7]],[[4,0,391,11],[13,0,391,20]],[[8,0,392,8],[15,0,392,15],[19,0,392,19],[20,0,392,20],[30,0,392,30],[31,0,392,31],[32,0,392,32],[33,0,392,33],[37,0,392,37],[38,0,392,38],[48,0,392,48],[49,0,392,49],[50,0,392,50],[51,0,392,51],[53,0,392,53],[54,0,392,54]],[[4,0,393,4],[5,0,393,5]],[[4,0,395,4]],[],[],[[7,0,398,7]],[[4,0,399,11],[10,0,399,17]],[[8,0,400,8],[15,0,400,15],[19,0,400,19],[20,0,400,20],[27,0,400,27],[28,0,400,28],[29,0,400,29],[30,0,400,30],[34,0,400,34],[35,0,400,35],[42,0,400,42],[43,0,400,43],[44,0,400,44],[45,0,400,45],[48,0,400,48],[49,0,400,49]],[[4,0,401,4],[5,0,401,5]],[[4,0,403,4]],[],[],[],[[7,0,407,7]],[[4,0,408,11],[16,0,408,23]],[[8,0,409,8],[15,0,409,15],[19,0,409,19],[20,0,409,20],[33,0,409,33],[34,0,409,34],[35,0,409,35],[36,0,409,36],[40,0,409,40],[41,0,409,41],[54,0,409,54],[55,0,409,55],[56,0,409,56],[57,0,409,57],[67,0,409,67],[68,0,409,68]],[[4,0,410,4],[5,0,410,5]],[[4,0,412,4]],[],[],[],[[7,0,416,7]],[[4,0,417,11],[12,0,417,19]],[[8,0,418,8],[15,0,418,15],[19,0,418,19],[20,0,418,20],[24,0,418,24],[25,0,418,25],[31,0,418,31],[33,0,418,33],[35,0,419,12],[36,0,419,13],[40,0,419,17],[41,0,419,18],[50,0,419,27],[51,0,419,28],[52,0,419,29],[53,0,419,30],[57,0,419,34],[58,0,419,35],[67,0,419,44],[68,0,419,45],[69,0,419,46],[70,0,419,47],[74,0,419,51],[75,0,419,52],[87,0,419,64],[89,0,419,66],[92,0,419,69],[95,0,419,72],[98,0,419,75],[102,0,419,79],[103,0,419,80],[129,0,419,106],[131,0,419,108],[132,0,419,109],[133,0,420,9],[134,0,420,10],[141,0,420,17],[142,0,420,18],[147,0,420,23],[149,0,420,25],[152,0,420,28],[153,0,420,29],[154,0,420,30]],[[4,0,421,4],[5,0,421,5]],[[4,0,423,4]],[],[],[],[[7,0,427,7]],[[4,0,428,11],[14,0,428,21]],[[8,0,429,8],[15,0,429,15],[16,0,429,16],[20,0,429,20],[21,0,429,21],[32,0,429,32],[33,0,429,33],[34,0,429,34],[35,0,429,35],[39,0,429,39],[40,0,429,40],[51,0,429,51],[52,0,429,52],[53,0,429,53],[54,0,429,54],[59,0,429,59],[60,0,429,60],[61,0,429,61]],[[4,0,430,4],[5,0,430,5]],[[4,0,432,4]],[],[],[],[[7,0,436,7]],[[4,0,437,11],[21,0,437,28],[22,0,437,29],[26,0,437,41]],[[8,0,438,8],[15,0,438,15],[19,0,438,19],[20,0,438,20],[24,0,438,24],[25,0,438,25],[31,0,438,31],[33,0,438,33],[35,0,438,35],[39,0,438,39],[40,0,438,40],[52,0,438,52],[54,0,438,54],[57,0,438,57],[60,0,438,60],[63,0,438,63],[67,0,438,67],[70,0,438,70],[73,0,438,73],[76,0,438,76],[80,0,438,80],[81,0,438,81],[107,0,438,107],[109,0,438,109],[110,0,438,110],[111,0,438,111],[118,0,438,118],[119,0,438,119],[124,0,438,124],[126,0,438,126],[129,0,438,129],[130,0,438,130],[131,0,438,131]],[[4,0,439,4],[5,0,439,5]],[[4,0,441,12],[30,0,441,38]],[[8,0,442,8],[16,0,442,16],[20,0,442,20],[21,0,442,21],[31,0,442,31],[33,0,442,33],[35,0,442,35]],[[12,0,443,12],[17,0,443,17],[22,0,443,22]],[[16,0,444,16],[23,0,444,23],[28,0,444,28],[29,0,444,29]],[[12,0,445,12],[17,0,445,17],[23,0,445,23]],[[16,0,446,16],[23,0,446,23],[28,0,446,28],[29,0,446,29]],[[12,0,447,12],[17,0,447,17],[22,0,447,22]],[[16,0,448,16],[23,0,448,23],[28,0,448,28],[29,0,448,29]],[[9,0,449,9]],[[4,0,450,4],[5,0,450,5]],[[4,0,452,4]],[],[],[],[[7,0,456,7]],[[4,0,457,11],[29,0,457,36],[30,0,457,37],[34,0,457,49]],[[8,0,458,8],[15,0,458,15],[19,0,458,19],[20,0,458,20],[24,0,458,24],[25,0,458,25],[31,0,458,31],[33,0,458,33],[35,0,458,35],[39,0,458,39],[40,0,458,40],[52,0,458,52],[54,0,458,54],[57,0,458,57],[60,0,458,60],[63,0,458,63],[67,0,458,67],[70,0,458,70],[73,0,458,73],[76,0,458,76],[82,0,458,82],[83,0,458,83],[84,0,458,84],[91,0,458,91],[92,0,458,92],[97,0,458,97],[99,0,458,99],[102,0,458,102],[103,0,458,103],[104,0,458,104]],[[4,0,459,4],[5,0,459,5]],[[4,0,461,4]],[],[],[[7,0,464,7]],[[4,0,465,11],[12,0,465,19]],[[8,0,466,8],[15,0,466,15],[19,0,466,19],[20,0,466,20],[29,0,466,29],[30,0,466,30],[31,0,466,31],[32,0,466,32],[36,0,466,36],[37,0,466,37],[46,0,466,46],[47,0,466,47],[48,0,466,48],[49,0,466,49],[56,0,466,56],[57,0,466,57]],[[4,0,467,4],[5,0,467,5]],[[4,0,469,5]],[],[],[[6,0,472,7]],[[4,0,473,11],[10,0,473,17]],[[8,0,474,8],[15,0,474,15],[19,0,474,19],[20,0,474,20],[27,0,474,27],[28,0,474,28],[29,0,474,29],[30,0,474,30],[34,0,474,34],[35,0,474,35],[42,0,474,42],[43,0,474,43],[44,0,474,44],[45,0,474,45],[49,0,474,49],[50,0,474,50],[56,0,474,56],[58,0,474,58],[59,0,474,59]],[[4,0,475,4],[5,0,475,5]],[[4,0,477,11],[19,0,477,26]],[[8,0,478,8],[15,0,478,15],[16,0,478,16],[33,0,478,33],[34,0,478,34],[38,0,478,38],[39,0,478,39],[55,0,478,55],[56,0,478,56],[57,0,478,57],[58,0,478,58],[59,0,478,59],[60,0,478,60],[64,0,478,64],[65,0,478,65],[66,0,478,66],[67,0,478,67],[71,0,478,71],[72,0,478,72],[88,0,478,88],[89,0,478,89]],[[4,0,479,4],[5,0,479,5]],[[4,0,481,11],[23,0,481,30]],[[8,0,482,8],[15,0,482,15],[16,0,482,16],[33,0,482,33],[34,0,482,34],[38,0,482,38],[39,0,482,39],[59,0,482,59],[60,0,482,60],[61,0,482,61],[62,0,482,62],[63,0,482,63],[64,0,482,64],[69,0,482,69],[70,0,482,70],[71,0,482,71],[72,0,482,72],[76,0,482,76],[77,0,482,77],[97,0,482,97],[98,0,482,98]],[[4,0,483,4],[5,0,483,5]],[[4,0,485,11],[33,0,485,40]],[[8,0,486,8],[15,0,486,15],[16,0,486,16],[33,0,486,33],[34,0,486,34],[38,0,486,38],[39,0,486,39],[69,0,486,69],[70,0,486,70],[71,0,486,71],[72,0,486,72],[73,0,486,73]],[[12,0,487,12],[33,0,487,33],[34,0,487,34],[58,0,487,58],[59,0,487,59],[60,0,487,60],[61,0,487,61],[65,0,487,65],[66,0,487,66],[96,0,487,96],[97,0,487,97]],[[4,0,488,4],[5,0,488,5]],[[4,0,490,4]],[],[],[[7,0,493,7]],[[4,0,494,11],[21,0,494,28]],[[8,0,495,8],[15,0,495,15],[16,0,495,16],[33,0,495,33],[34,0,495,34],[38,0,495,38],[39,0,495,39],[57,0,495,57],[58,0,495,58],[59,0,495,59],[60,0,495,60],[61,0,495,61],[62,0,495,62],[66,0,495,66],[67,0,495,67],[68,0,495,68],[69,0,495,69],[73,0,495,73],[74,0,495,74],[92,0,495,92],[93,0,495,93]],[[4,0,496,4],[5,0,496,5]],[[4,0,498,4]],[],[],[[7,0,501,7]],[[4,0,502,11],[17,0,502,24]],[[8,0,503,8],[15,0,503,15],[16,0,503,16],[33,0,503,33],[34,0,503,34],[38,0,503,38],[39,0,503,39],[53,0,503,53],[54,0,503,54],[55,0,503,55],[56,0,503,56],[57,0,503,57],[58,0,503,58],[60,0,503,60],[61,0,503,61],[62,0,503,62],[63,0,503,63],[67,0,503,67],[68,0,503,68],[82,0,503,82],[83,0,503,83]],[[4,0,504,4],[5,0,504,5]],[[4,0,506,4]],[],[],[[7,0,509,7]],[[4,0,510,11],[16,0,510,23]],[[8,0,511,8],[15,0,511,15],[16,0,511,16],[33,0,511,33],[34,0,511,34],[38,0,511,38],[39,0,511,39],[52,0,511,52],[53,0,511,53],[54,0,511,54],[55,0,511,55],[56,0,511,56],[57,0,511,57],[59,0,511,59],[60,0,511,60],[61,0,511,61],[62,0,511,62],[66,0,511,66],[67,0,511,67],[80,0,511,80],[81,0,511,81]],[[4,0,512,4],[5,0,512,5]],[[4,0,514,4]],[],[[7,0,516,7]],[[4,0,517,11],[18,0,517,25]],[[8,0,518,8],[15,0,518,15],[16,0,518,16],[33,0,518,33],[34,0,518,34],[38,0,518,38],[39,0,518,39],[54,0,518,54],[55,0,518,55],[56,0,518,56],[57,0,518,57],[58,0,518,58],[59,0,518,59],[64,0,518,64],[65,0,518,65],[66,0,518,66],[67,0,518,67],[71,0,518,71],[72,0,518,72],[87,0,518,87],[88,0,518,88]],[[4,0,519,4],[5,0,519,5]],[[4,0,521,4]],[],[],[[7,0,524,7]],[[4,0,525,11],[17,0,525,24]],[[8,0,526,8],[15,0,526,15],[16,0,526,16],[33,0,526,33],[34,0,526,34],[38,0,526,38],[39,0,526,39],[53,0,526,53],[54,0,526,54],[55,0,526,55],[56,0,526,56],[57,0,526,57],[58,0,526,58],[62,0,526,62],[63,0,526,63],[64,0,526,64],[65,0,526,65],[69,0,526,69],[70,0,526,70],[84,0,526,84],[85,0,526,85]],[[4,0,527,4],[5,0,527,5]],[[4,0,529,4]],[],[],[[7,0,532,7]],[[4,0,533,11],[17,0,533,24]],[[8,0,534,8],[12,0,534,12],[29,0,534,29],[30,0,534,30],[34,0,534,34],[35,0,534,35],[49,0,534,49],[50,0,534,50],[52,0,534,52]],[[12,0,535,12],[19,0,535,19],[24,0,535,24],[25,0,535,25]],[[9,0,536,9]],[[8,0,537,8],[12,0,537,12],[19,0,537,19],[20,0,537,20],[24,0,537,24],[25,0,537,25],[39,0,537,39],[40,0,537,40],[42,0,537,42]],[[12,0,538,12],[19,0,538,30],[23,0,538,34],[24,0,538,35],[38,0,538,50],[39,0,538,51],[45,0,538,57],[48,0,538,60],[49,0,538,61],[50,0,538,62]],[[9,0,539,9]],[[8,0,540,8],[15,0,540,25],[19,0,540,29],[20,0,540,30],[34,0,540,44],[35,0,540,45]],[[4,0,541,4],[5,0,541,5]],[[4,0,543,4]],[],[],[[7,0,546,7]],[[4,0,547,11],[25,0,547,32],[26,0,547,33],[30,0,547,45]],[[8,0,548,8],[15,0,548,15],[19,0,548,19],[20,0,548,20],[43,0,548,43],[45,0,548,45],[46,0,548,46],[53,0,548,53],[54,0,548,54],[58,0,548,58],[59,0,548,59],[63,0,548,63],[64,0,548,64],[65,0,548,65]],[[4,0,549,4],[5,0,549,5]],[[4,0,551,4]],[],[[7,0,553,7]],[[4,0,554,11],[27,0,554,34]],[[8,0,555,8],[12,0,555,12],[29,0,555,29],[30,0,555,30],[34,0,555,34],[35,0,555,35],[49,0,555,49],[50,0,555,50],[54,0,555,54],[58,0,555,58],[59,0,555,59],[73,0,555,73],[78,0,555,78],[83,0,555,83],[85,0,555,85]],[[12,0,556,12],[19,0,556,19],[21,0,556,21],[22,0,556,22]],[[9,0,557,9]],[[8,0,558,8],[12,0,558,12],[19,0,558,19],[20,0,558,20],[24,0,558,24],[25,0,558,25],[39,0,558,39],[40,0,558,40],[42,0,558,42]],[[12,0,559,12],[19,0,559,30],[23,0,559,34],[24,0,559,35],[38,0,559,50],[39,0,559,51]],[[9,0,560,9]],[[8,0,561,8],[15,0,561,15],[19,0,561,19],[20,0,561,20],[29,0,561,29],[31,0,561,31],[32,0,561,32],[37,0,561,37],[38,0,561,38],[39,0,561,39],[40,0,561,40],[41,0,561,41],[42,0,561,42],[69,0,561,69]],[[4,0,562,4],[5,0,562,5]],[[4,0,564,4]],[],[],[[7,0,567,7]],[[4,0,568,11],[10,0,568,17]],[[8,0,569,8],[12,0,569,12],[13,0,569,13],[30,0,569,30],[31,0,569,31],[35,0,569,35],[36,0,569,36],[43,0,569,43],[44,0,569,44],[46,0,569,46]],[[12,0,570,12],[19,0,570,19],[23,0,570,23],[24,0,570,24],[31,0,570,31],[32,0,570,32]],[[9,0,571,9]],[[13,0,571,15]],[[12,0,572,12],[18,0,572,18],[28,0,572,28],[31,0,572,31],[35,0,572,35],[36,0,572,36],[46,0,572,46],[48,0,572,48],[49,0,572,49]],[[12,0,573,12],[16,0,573,16],[20,0,573,20],[21,0,573,21],[31,0,573,31],[33,0,573,33],[35,0,573,35]],[[16,0,574,16],[20,0,574,20],[22,0,574,22],[23,0,574,23],[33,0,574,33],[34,0,574,34],[44,0,574,44],[45,0,574,45],[47,0,574,47]],[[20,0,575,20],[27,0,575,27],[35,0,575,35],[36,0,575,36],[40,0,575,40],[41,0,575,41],[51,0,575,51],[53,0,575,53],[60,0,575,60],[61,0,575,61],[62,0,575,62]],[[17,0,576,17]],[[21,0,576,23]],[[20,0,577,20],[26,0,577,26],[30,0,577,30],[35,0,577,35],[36,0,577,36],[42,0,577,42],[43,0,577,43],[84,0,577,84],[86,0,577,86],[96,0,577,96],[97,0,577,97],[98,0,577,98],[99,0,577,99]],[[17,0,578,17]],[[13,0,579,13]],[[17,0,579,19]],[[16,0,580,16],[23,0,580,23],[27,0,580,27],[28,0,580,28]],[[13,0,581,13]],[[9,0,582,9]],[[4,0,583,4],[5,0,583,5]],[[4,0,585,4]],[],[],[],[[7,0,589,7]],[[4,0,590,11],[14,0,590,21]],[[8,0,591,8],[12,0,591,12],[16,0,591,16],[17,0,591,17],[28,0,591,28],[30,0,591,30]],[[12,0,592,12],[19,0,592,19],[23,0,592,23],[24,0,592,24],[35,0,592,35],[36,0,592,36]],[[9,0,593,9]],[[13,0,593,15],[17,0,593,19],[24,0,593,26],[25,0,593,27],[28,0,593,30],[29,0,593,31],[41,0,593,43],[43,0,593,45]],[[12,0,594,12],[19,0,594,19],[26,0,594,26],[27,0,594,27],[30,0,594,30],[31,0,594,31],[43,0,594,43],[44,0,594,44]],[[9,0,595,9]],[[13,0,595,15]],[[12,0,596,12],[19,0,596,19],[23,0,596,23],[24,0,596,24]],[[9,0,597,9]],[[4,0,598,4],[5,0,598,5]],[[1,0,599,1]]],"sourcesContent":["/**\r\n * Created by martin on 17.02.2017.\r\n * Collection of all parameters used by the tool.\r\n * The parameters are read form the profile or defaults are used.\r\n */\r\n\r\nimport * as fs from 'fs';\r\nimport {XliffMergeError} from './xliff-merge-error';\r\nimport {Stats} from 'fs';\r\nimport {CommandOutput} from '../common/command-output';\r\nimport {format} from 'util';\r\nimport {isArray, isNullOrUndefined} from '../common/util';\r\nimport {ProgramOptions, IConfigFile} from './i-xliff-merge-options';\r\nimport {FileUtil} from '../common/file-util';\r\nimport {NgxTranslateExtractor} from './ngx-translate-extractor';\r\nimport {dirname, isAbsolute, join, normalize} from 'path';\r\n\r\nconst PROFILE_CANDIDATES = ['package.json', '.angular-cli.json'];\r\n\r\nexport class XliffMergeParameters {\r\n\r\n    private usedProfilePath: string;\r\n    private _quiet: boolean;\r\n    private _verbose: boolean;\r\n    private _allowIdChange: boolean;\r\n    private _defaultLanguage: string;\r\n    private _srcDir: string;\r\n    private _i18nBaseFile: string;\r\n    private _i18nFile: string;\r\n    private _i18nFormat: string;\r\n    private _encoding: BufferEncoding ;\r\n    private _genDir: string;\r\n    private _languages: string[];\r\n    private _removeUnusedIds: boolean;\r\n    private _supportNgxTranslate: boolean;\r\n    private _ngxTranslateExtractionPattern: string;\r\n    private _useSourceAsTarget: boolean;\r\n    private _targetPraefix: string;\r\n    private _targetSuffix: string;\r\n    private _beautifyOutput: boolean;\r\n    private _preserveOrder: boolean;\r\n    private _autotranslate: boolean|string[];\r\n    private _apikey: string;\r\n    private _apikeyfile: string;\r\n\r\n    public errorsFound: XliffMergeError[];\r\n    public warningsFound: string[];\r\n\r\n    /**\r\n     * Create Parameters.\r\n     * @param options command options\r\n     * @param profileContent given profile (if not, it is read from the profile path from options).\r\n     */\r\n    public static createFromOptions(options: ProgramOptions, profileContent?: IConfigFile) {\r\n        const parameters = new XliffMergeParameters();\r\n        parameters.configure(options, profileContent);\r\n        return parameters;\r\n    }\r\n\r\n    private constructor() {\r\n        this.errorsFound = [];\r\n        this.warningsFound = [];\r\n    }\r\n\r\n    /**\r\n     * Read potential profile.\r\n     * To be a candidate, file must exist and contain property \"xliffmergeOptions\".\r\n     * @param profilePath path of profile\r\n     * @return parsed content of file or null, if file does not exist or is not a profile candidate.\r\n     */\r\n    private static readProfileCandidate(profilePath: string): IConfigFile {\r\n        let content: string;\r\n        try {\r\n            content = fs.readFileSync(profilePath, 'utf-8');\r\n        } catch (err) {\r\n            return null;\r\n        }\r\n        const parsedContent: IConfigFile = JSON.parse(content);\r\n        if (parsedContent && parsedContent.xliffmergeOptions) {\r\n            return parsedContent;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize me from the profile content.\r\n     * (public only for test usage).\r\n     * @param options options given at runtime via command line\r\n     * @param profileContent if null, read it from profile.\r\n     */\r\n    private configure(options: ProgramOptions, profileContent?: IConfigFile) {\r\n        this.errorsFound = [];\r\n        this.warningsFound = [];\r\n        if (!profileContent) {\r\n            profileContent = this.readProfile(options);\r\n        }\r\n        const validProfile: boolean = (!!profileContent);\r\n        if (options.quiet) {\r\n            this._quiet = options.quiet;\r\n        }\r\n        if (options.verbose) {\r\n            this._verbose = options.verbose;\r\n        }\r\n        if (validProfile) {\r\n            this.initializeFromConfig(profileContent);\r\n            // if languages are given as parameters, they ovveride everything said in profile\r\n            if (!!options.languages && options.languages.length > 0) {\r\n                this._languages = options.languages;\r\n                if (!this._defaultLanguage) {\r\n                    this._defaultLanguage = this._languages[0];\r\n                }\r\n            }\r\n            this.checkParameters();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Read profile.\r\n     * @param options program options\r\n     * @return the read profile (empty, if none, null if errors)\r\n     */\r\n    private readProfile(options: ProgramOptions): IConfigFile {\r\n        const profilePath: string = options.profilePath;\r\n        if (!profilePath) {\r\n            for (const configfilename of PROFILE_CANDIDATES) {\r\n                const profile = XliffMergeParameters.readProfileCandidate(configfilename);\r\n                if (profile) {\r\n                    this.usedProfilePath = configfilename;\r\n                    return profile;\r\n                }\r\n            }\r\n            return {};\r\n        }\r\n        let content: string;\r\n        try {\r\n            content = fs.readFileSync(profilePath, 'utf-8');\r\n        } catch (err) {\r\n            this.errorsFound.push(new XliffMergeError('could not read profile \"' + profilePath + '\"'));\r\n            return null;\r\n        }\r\n        this.usedProfilePath = profilePath;\r\n        const profileContent: IConfigFile = JSON.parse(content);\r\n        // replace all pathes in options by absolute paths\r\n        const xliffmergeOptions = profileContent.xliffmergeOptions;\r\n        xliffmergeOptions.srcDir = this.adjustPathToProfilePath(profilePath, xliffmergeOptions.srcDir);\r\n        xliffmergeOptions.genDir = this.adjustPathToProfilePath(profilePath, xliffmergeOptions.genDir);\r\n        xliffmergeOptions.apikeyfile = this.adjustPathToProfilePath(profilePath, xliffmergeOptions.apikeyfile);\r\n        return profileContent;\r\n    }\r\n\r\n    private adjustPathToProfilePath(profilePath: string, pathToAdjust: string | undefined): string | undefined {\r\n        if (!pathToAdjust || isAbsolute(pathToAdjust)) {\r\n            return pathToAdjust;\r\n        }\r\n        return join(dirname(profilePath), pathToAdjust).replace(/\\\\/g, '/');\r\n    }\r\n\r\n    private initializeFromConfig(profileContent: IConfigFile) {\r\n        if (!profileContent) {\r\n            return;\r\n        }\r\n        const profile = profileContent.xliffmergeOptions;\r\n        if (profile) {\r\n            if (!isNullOrUndefined(profile.quiet)) {\r\n                this._quiet = profile.quiet;\r\n            }\r\n            if (!isNullOrUndefined(profile.verbose)) {\r\n                this._verbose = profile.verbose;\r\n            }\r\n            if (!isNullOrUndefined(profile.allowIdChange)) {\r\n                this._allowIdChange = profile.allowIdChange;\r\n            }\r\n            if (profile.defaultLanguage) {\r\n                this._defaultLanguage = profile.defaultLanguage;\r\n            }\r\n            if (profile.languages) {\r\n                this._languages = profile.languages;\r\n            }\r\n            if (profile.srcDir) {\r\n                this._srcDir = profile.srcDir;\r\n            }\r\n            if (profile.angularCompilerOptions) {\r\n                if (profile.angularCompilerOptions.genDir) {\r\n                    this._genDir = profile.angularCompilerOptions.genDir;\r\n                }\r\n            }\r\n            if (profile.genDir) {\r\n                // this must be after angularCompilerOptions to be preferred\r\n                this._genDir = profile.genDir;\r\n            }\r\n            if (profile.i18nBaseFile) {\r\n                this._i18nBaseFile = profile.i18nBaseFile;\r\n            }\r\n            if (profile.i18nFile) {\r\n                this._i18nFile = profile.i18nFile;\r\n            }\r\n            if (profile.i18nFormat) {\r\n                this._i18nFormat = profile.i18nFormat;\r\n            }\r\n            if (profile.encoding) {\r\n                this._encoding = profile.encoding;\r\n            }\r\n            if (!isNullOrUndefined(profile.removeUnusedIds)) {\r\n                this._removeUnusedIds = profile.removeUnusedIds;\r\n            }\r\n            if (!isNullOrUndefined(profile.supportNgxTranslate)) {\r\n                this._supportNgxTranslate = profile.supportNgxTranslate;\r\n            }\r\n            if (!isNullOrUndefined(profile.ngxTranslateExtractionPattern)) {\r\n                this._ngxTranslateExtractionPattern = profile.ngxTranslateExtractionPattern;\r\n            }\r\n            if (!isNullOrUndefined(profile.useSourceAsTarget)) {\r\n                this._useSourceAsTarget = profile.useSourceAsTarget;\r\n            }\r\n            if (!isNullOrUndefined(profile.targetPraefix)) {\r\n                this._targetPraefix = profile.targetPraefix;\r\n            }\r\n            if (!isNullOrUndefined(profile.targetSuffix)) {\r\n                this._targetSuffix = profile.targetSuffix;\r\n            }\r\n            if (!isNullOrUndefined(profile.autotranslate)) {\r\n                this._autotranslate = profile.autotranslate;\r\n            }\r\n            if (!isNullOrUndefined(profile.beautifyOutput)) {\r\n                this._beautifyOutput = profile.beautifyOutput;\r\n            }\r\n            if (!isNullOrUndefined(profile.preserveOrder)) {\r\n                this._preserveOrder = profile.preserveOrder;\r\n            }\r\n            if (!isNullOrUndefined(profile.apikey)) {\r\n                this._apikey = profile.apikey;\r\n            }\r\n            if (!isNullOrUndefined(profile.apikeyfile)) {\r\n                this._apikeyfile = profile.apikeyfile;\r\n            }\r\n        } else {\r\n            this.warningsFound.push('did not find \"xliffmergeOptions\" in profile, using defaults');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check all Parameters, wether they are complete and consistent.\r\n     * if something is wrong with the parameters, it is collected in errorsFound.\r\n     */\r\n    private checkParameters(): void {\r\n        this.checkLanguageSyntax(this.defaultLanguage());\r\n        if (this.languages().length === 0) {\r\n            this.errorsFound.push(new XliffMergeError('no languages specified'));\r\n        }\r\n        this.languages().forEach((lang) => {\r\n            this.checkLanguageSyntax(lang);\r\n        });\r\n        let stats: Stats;\r\n        let err: any;\r\n        // srcDir should exists\r\n        try {\r\n            stats = fs.statSync(this.srcDir());\r\n        } catch (e) {\r\n            err = e;\r\n        }\r\n        if (!!err || !stats.isDirectory()) {\r\n            this.errorsFound.push(new XliffMergeError('srcDir \"' + this.srcDir() + '\" is not a directory'));\r\n        }\r\n        // genDir should exists\r\n        try {\r\n            stats = fs.statSync(this.genDir());\r\n        } catch (e) {\r\n            err = e;\r\n        }\r\n        if (!!err || !stats.isDirectory()) {\r\n            this.errorsFound.push(new XliffMergeError('genDir \"' + this.genDir() + '\" is not a directory'));\r\n        }\r\n        // master file MUST exist\r\n        try {\r\n            fs.accessSync(this.i18nFile(), fs.constants.R_OK);\r\n        } catch (err) {\r\n            this.errorsFound.push(new XliffMergeError('i18nFile \"' + this.i18nFile() + '\" is not readable'));\r\n        }\r\n        // i18nFormat must be xlf xlf2 or xmb\r\n        if (!(this.i18nFormat() === 'xlf' || this.i18nFormat() === 'xlf2' || this.i18nFormat() === 'xmb')) {\r\n            this.errorsFound.push(new XliffMergeError('i18nFormat \"' + this.i18nFormat() + '\" invalid, must be \"xlf\" or \"xlf2\" or \"xmb\"'));\r\n        }\r\n        // autotranslate requires api key\r\n        if (this.autotranslate() && !this.apikey()) {\r\n            this.errorsFound.push(new XliffMergeError('autotranslate requires an API key, please set one'));\r\n        }\r\n        // autotranslated languages must be in list of all languages\r\n        this.autotranslatedLanguages().forEach((lang) => {\r\n            if (this.languages().indexOf(lang) < 0) {\r\n                this.errorsFound.push(new XliffMergeError('autotranslate language \"' + lang + '\" is not in list of languages'));\r\n            }\r\n            if (lang === this.defaultLanguage()) {\r\n                this.errorsFound.push(\r\n                    new XliffMergeError('autotranslate language \"' + lang + '\" cannot be translated, because it is the source language'));\r\n            }\r\n        });\r\n        // ngx translate pattern check\r\n        if (this.supportNgxTranslate()) {\r\n            const checkResult = NgxTranslateExtractor.checkPattern(this.ngxTranslateExtractionPattern());\r\n            if (!isNullOrUndefined(checkResult)) {\r\n                this.errorsFound.push(\r\n                    new XliffMergeError('ngxTranslateExtractionPattern \"' + this.ngxTranslateExtractionPattern() + '\": ' + checkResult));\r\n            }\r\n        }\r\n        // targetPraefix and targetSuffix check\r\n        if (!this.useSourceAsTarget()) {\r\n            if (this.targetPraefix().length > 0) {\r\n                this.warningsFound.push(\r\n                    'configured targetPraefix \"' + this.targetPraefix() + '\" will not be used because \"useSourceAsTarget\" is disabled\"');\r\n            }\r\n            if (this.targetSuffix().length > 0) {\r\n                this.warningsFound.push(\r\n                    'configured targetSuffix \"' + this.targetSuffix() + '\" will not be used because \"useSourceAsTarget\" is disabled\"');\r\n            }\r\n        }\r\n     }\r\n\r\n    /**\r\n     * Check syntax of language.\r\n     * Must be compatible with XML Schema type xsd:language.\r\n     * Pattern: [a-zA-Z]{1,8}((-|_)[a-zA-Z0-9]{1,8})*\r\n     * @param lang language to check\r\n     */\r\n    private checkLanguageSyntax(lang: string) {\r\n        const pattern = /^[a-zA-Z]{1,8}([-_][a-zA-Z0-9]{1,8})*$/;\r\n        if (!pattern.test(lang)) {\r\n            this.errorsFound.push(new XliffMergeError('language \"' + lang + '\" is not valid'));\r\n        }\r\n    }\r\n\r\n    public allowIdChange(): boolean {\r\n        return (isNullOrUndefined(this._allowIdChange)) ? false : this._allowIdChange;\r\n    }\r\n\r\n    public verbose(): boolean {\r\n        return (isNullOrUndefined(this._verbose)) ? false : this._verbose;\r\n    }\r\n\r\n    public quiet(): boolean {\r\n        return (isNullOrUndefined(this._quiet)) ? false : this._quiet;\r\n    }\r\n\r\n    /**\r\n     * Debug output all parameters to commandOutput.\r\n     */\r\n    public showAllParameters(commandOutput: CommandOutput): void {\r\n        commandOutput.debug('xliffmerge Used Parameters:');\r\n        commandOutput.debug('usedProfilePath:\\t\"%s\"', this.usedProfilePath);\r\n        commandOutput.debug('defaultLanguage:\\t\"%s\"', this.defaultLanguage());\r\n        commandOutput.debug('srcDir:\\t\"%s\"', this.srcDir());\r\n        commandOutput.debug('genDir:\\t\"%s\"', this.genDir());\r\n        commandOutput.debug('i18nBaseFile:\\t\"%s\"', this.i18nBaseFile());\r\n        commandOutput.debug('i18nFile:\\t\"%s\"', this.i18nFile());\r\n        commandOutput.debug('languages:\\t%s', this.languages());\r\n        for (const language of this.languages()) {\r\n            commandOutput.debug('outputFile[%s]:\\t%s', language, this.generatedI18nFile(language));\r\n        }\r\n        commandOutput.debug('removeUnusedIds:\\t%s', this.removeUnusedIds());\r\n        commandOutput.debug('supportNgxTranslate:\\t%s', this.supportNgxTranslate());\r\n        if (this.supportNgxTranslate()) {\r\n            commandOutput.debug('ngxTranslateExtractionPattern:\\t%s', this.ngxTranslateExtractionPattern());\r\n        }\r\n        commandOutput.debug('useSourceAsTarget:\\t%s', this.useSourceAsTarget());\r\n        if (this.useSourceAsTarget()) {\r\n            commandOutput.debug('targetPraefix:\\t\"%s\"', this.targetPraefix());\r\n            commandOutput.debug('targetSuffix:\\t\"%s\"', this.targetSuffix());\r\n        }\r\n        commandOutput.debug('allowIdChange:\\t%s', this.allowIdChange());\r\n        commandOutput.debug('beautifyOutput:\\t%s', this.beautifyOutput());\r\n        commandOutput.debug('preserveOrder:\\t%s', this.preserveOrder());\r\n        commandOutput.debug('autotranslate:\\t%s', this.autotranslate());\r\n        if (this.autotranslate()) {\r\n            commandOutput.debug('autotranslated languages:\\t%s', this.autotranslatedLanguages());\r\n            commandOutput.debug('apikey:\\t%s', this.apikey() ? '****' : 'NOT SET');\r\n            commandOutput.debug('apikeyfile:\\t%s', this.apikeyfile());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Default-Language, default en.\r\n     * @return default language\r\n     */\r\n    public defaultLanguage(): string {\r\n        return this._defaultLanguage ? this._defaultLanguage : 'en';\r\n    }\r\n\r\n    /**\r\n     * Liste der zu bearbeitenden Sprachen.\r\n     * @return languages\r\n     */\r\n    public languages(): string[] {\r\n        return this._languages ? this._languages : [];\r\n    }\r\n\r\n    /**\r\n     * src directory, where the master xlif is located.\r\n     * @return srcDir\r\n     */\r\n    public srcDir(): string {\r\n        return this._srcDir ? this._srcDir : '.';\r\n    }\r\n\r\n    /**\r\n     * The base file name of the xlif file for input and output.\r\n     * Default is messages\r\n     * @return base file\r\n     */\r\n    public i18nBaseFile(): string {\r\n        return this._i18nBaseFile ? this._i18nBaseFile : 'messages';\r\n    }\r\n\r\n    /**\r\n     * The master xlif file (the one generated by ng-xi18n).\r\n     * Default is <srcDir>/<i18nBaseFile>.xlf.\r\n     * @return master file\r\n     */\r\n    public i18nFile(): string {\r\n        return join(this.srcDir(),\r\n            (this._i18nFile ? this._i18nFile : this.i18nBaseFile() + '.' + this.suffixForGeneratedI18nFile())\r\n        ).replace(/\\\\/g, '/');\r\n    }\r\n\r\n    /**\r\n     * Format of the master xlif file.\r\n     * Default is \"xlf\", possible are \"xlf\" or \"xlf2\" or \"xmb\".\r\n     * @return format\r\n     */\r\n    public i18nFormat(): string {\r\n        return (this._i18nFormat ? this._i18nFormat : 'xlf');\r\n    }\r\n\r\n    /**\r\n     * potentially to be generated I18n-File with the translations for one language.\r\n     * @param lang language shortcut\r\n     * @return Path of file\r\n     */\r\n    public generatedI18nFile(lang: string): string {\r\n        return join(this.genDir(), this.i18nBaseFile() + '.' + lang + '.' + this.suffixForGeneratedI18nFile()).replace(/\\\\/g, '/');\r\n    }\r\n\r\n    private suffixForGeneratedI18nFile(): string {\r\n        switch (this.i18nFormat()) {\r\n            case 'xlf':\r\n                return 'xlf';\r\n            case 'xlf2':\r\n                return 'xlf';\r\n            case 'xmb':\r\n                return 'xtb';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * potentially to be generated translate-File for ngx-translate with the translations for one language.\r\n     * @param lang language shortcut\r\n     * @return Path of file\r\n     */\r\n    public generatedNgxTranslateFile(lang: string): string {\r\n        return join(this.genDir(), this.i18nBaseFile() + '.' + lang + '.' + 'json').replace(/\\\\/g, '/');\r\n    }\r\n\r\n    /**\r\n     * The encoding used to write new XLIFF-files.\r\n     * @return encoding\r\n     */\r\n    public encoding(): BufferEncoding {\r\n        return this._encoding ? this._encoding : 'utf-8';\r\n    }\r\n\r\n     /**\r\n      * Output-Directory, where the output is written to.\r\n      * Default is <srcDir>.\r\n     */\r\n    public genDir(): string {\r\n        return this._genDir ? this._genDir : this.srcDir();\r\n    }\r\n\r\n    public removeUnusedIds(): boolean {\r\n        return (isNullOrUndefined(this._removeUnusedIds)) ? true : this._removeUnusedIds;\r\n    }\r\n\r\n    public supportNgxTranslate(): boolean {\r\n        return (isNullOrUndefined(this._supportNgxTranslate)) ? false : this._supportNgxTranslate;\r\n    }\r\n\r\n    public ngxTranslateExtractionPattern(): string {\r\n        return (isNullOrUndefined(this._ngxTranslateExtractionPattern)) ?\r\n            NgxTranslateExtractor.DefaultExtractionPattern : this._ngxTranslateExtractionPattern;\r\n    }\r\n\r\n    /**\r\n     * Whether source must be used as target for new trans-units\r\n     * Default is true\r\n     */\r\n    public useSourceAsTarget(): boolean {\r\n        return (isNullOrUndefined(this._useSourceAsTarget)) ? true : this._useSourceAsTarget;\r\n    }\r\n\r\n    /**\r\n     * Praefix used for target when copying new trans-units\r\n     * Default is \"\"\r\n     */\r\n    public targetPraefix(): string {\r\n        return (isNullOrUndefined(this._targetPraefix)) ? '' : this._targetPraefix;\r\n    }\r\n\r\n    /**\r\n     * Suffix used for target when copying new trans-units\r\n     * Default is \"\"\r\n     */\r\n    public targetSuffix(): string {\r\n        return (isNullOrUndefined(this._targetSuffix)) ? '' : this._targetSuffix;\r\n    }\r\n\r\n    /**\r\n     * If set, run xml result through beautifier (pretty-data).\r\n     */\r\n    public beautifyOutput(): boolean {\r\n        return (isNullOrUndefined(this._beautifyOutput)) ? false : this._beautifyOutput;\r\n    }\r\n\r\n    /**\r\n     * If set, order of new trans units will be as in master.\r\n     * Otherwise they are added at the end.\r\n     */\r\n    public preserveOrder(): boolean {\r\n        return (isNullOrUndefined(this._preserveOrder)) ? true : this._preserveOrder;\r\n    }\r\n\r\n    /**\r\n     * Whether to use autotranslate for new trans-units\r\n     * Default is false\r\n     */\r\n    public autotranslate(): boolean {\r\n        if (isNullOrUndefined(this._autotranslate)) {\r\n            return false;\r\n        }\r\n        if (isArray(this._autotranslate)) {\r\n            return (<string[]>this._autotranslate).length > 0;\r\n        }\r\n        return <boolean> this._autotranslate;\r\n    }\r\n\r\n    /**\r\n     * Whether to use autotranslate for a given language.\r\n     * @param lang language code.\r\n     */\r\n    public autotranslateLanguage(lang: string): boolean {\r\n        return this.autotranslatedLanguages().indexOf(lang) >= 0;\r\n    }\r\n\r\n    /**\r\n     * Return a list of languages to be autotranslated.\r\n     */\r\n    public autotranslatedLanguages(): string[] {\r\n        if (isNullOrUndefined(this._autotranslate) || this._autotranslate === false) {\r\n            return [];\r\n        }\r\n        if (isArray(this._autotranslate)) {\r\n            return (<string[]>this._autotranslate);\r\n        }\r\n        return this.languages().slice(1); // first is source language\r\n    }\r\n\r\n    /**\r\n     * API key to be used for Google Translate\r\n     * @return api key\r\n     */\r\n    public apikey(): string {\r\n        if (!isNullOrUndefined(this._apikey)) {\r\n            return this._apikey;\r\n        } else {\r\n            const apikeyPath = this.apikeyfile();\r\n            if (this.apikeyfile()) {\r\n                if (fs.existsSync(apikeyPath)) {\r\n                    return FileUtil.read(apikeyPath, 'utf-8');\r\n                } else {\r\n                    throw new Error(format('api key file not found: API_KEY_FILE=%s', apikeyPath));\r\n                }\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * file name for API key to be used for Google Translate.\r\n     * Explicitly set or read from env var API_KEY_FILE.\r\n     * @return file of api key\r\n     */\r\n    public apikeyfile(): string {\r\n        if (this._apikeyfile) {\r\n            return this._apikeyfile;\r\n        } else if (process.env.API_KEY_FILE) {\r\n            return process.env.API_KEY_FILE;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n"]},"resolvedIds":{"fs":{"external":true,"id":"fs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"util":{"external":true,"id":"util","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"path":{"external":true,"id":"path","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../common/file-util":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\file-util.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./xliff-merge-error":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\xliff-merge-error.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../common/util":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\util.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./ngx-translate-extractor":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\ngx-translate-extractor.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1835,"body":[{"type":"ImportDeclaration","start":47,"end":76,"specifiers":[{"type":"ImportNamespaceSpecifier","start":54,"end":63,"local":{"type":"Identifier","start":59,"end":63,"name":"path"}}],"source":{"type":"Literal","start":69,"end":75,"value":"path","raw":"'path'"}},{"type":"VariableDeclaration","start":78,"end":93,"declarations":[{"type":"VariableDeclarator","start":82,"end":92,"id":{"type":"Identifier","start":82,"end":85,"name":"pkg"},"init":{"type":"Literal","start":88,"end":92,"value":null,"raw":"null"}}],"kind":"let"},{"type":"TryStatement","start":95,"end":326,"block":{"type":"BlockStatement","start":99,"end":170,"body":[{"type":"ExpressionStatement","start":106,"end":167,"expression":{"type":"AssignmentExpression","start":106,"end":166,"operator":"=","left":{"type":"Identifier","start":106,"end":109,"name":"pkg"},"right":{"type":"CallExpression","start":112,"end":166,"callee":{"type":"Identifier","start":112,"end":119,"name":"require"},"arguments":[{"type":"CallExpression","start":120,"end":165,"callee":{"type":"MemberExpression","start":120,"end":132,"object":{"type":"Identifier","start":120,"end":124,"name":"path"},"property":{"type":"Identifier","start":125,"end":132,"name":"resolve"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":133,"end":142,"name":"__dirname"},{"type":"Literal","start":144,"end":148,"value":"..","raw":"'..'"},{"type":"Literal","start":150,"end":164,"value":"package.json","raw":"'package.json'"}],"optional":false}],"optional":false}}}]},"handler":{"type":"CatchClause","start":172,"end":326,"param":{"type":"Identifier","start":179,"end":180,"name":"e"},"body":{"type":"BlockStatement","start":182,"end":326,"body":[{"type":"TryStatement","start":189,"end":323,"block":{"type":"BlockStatement","start":193,"end":278,"body":[{"type":"ExpressionStatement","start":204,"end":271,"expression":{"type":"AssignmentExpression","start":204,"end":270,"operator":"=","left":{"type":"Identifier","start":204,"end":207,"name":"pkg"},"right":{"type":"CallExpression","start":210,"end":270,"callee":{"type":"Identifier","start":210,"end":217,"name":"require"},"arguments":[{"type":"CallExpression","start":218,"end":269,"callee":{"type":"MemberExpression","start":218,"end":230,"object":{"type":"Identifier","start":218,"end":222,"name":"path"},"property":{"type":"Identifier","start":223,"end":230,"name":"resolve"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":231,"end":240,"name":"__dirname"},{"type":"Literal","start":242,"end":246,"value":"..","raw":"'..'"},{"type":"Literal","start":248,"end":252,"value":"..","raw":"'..'"},{"type":"Literal","start":254,"end":268,"value":"package.json","raw":"'package.json'"}],"optional":false}],"optional":false}}}]},"handler":{"type":"CatchClause","start":284,"end":323,"param":{"type":"Identifier","start":291,"end":292,"name":"e"},"body":{"type":"BlockStatement","start":294,"end":323,"body":[{"type":"ExpressionStatement","start":305,"end":316,"expression":{"type":"AssignmentExpression","start":305,"end":315,"operator":"=","left":{"type":"Identifier","start":305,"end":308,"name":"pkg"},"right":{"type":"Literal","start":311,"end":315,"value":null,"raw":"null"}}}]}},"finalizer":null}]}},"finalizer":null},{"type":"ExportNamedDeclaration","start":328,"end":383,"declaration":{"type":"VariableDeclaration","start":335,"end":383,"declarations":[{"type":"VariableDeclarator","start":341,"end":382,"id":{"type":"Identifier","start":341,"end":348,"name":"VERSION"},"init":{"type":"ConditionalExpression","start":352,"end":381,"test":{"type":"Identifier","start":352,"end":355,"name":"pkg"},"consequent":{"type":"MemberExpression","start":358,"end":369,"object":{"type":"Identifier","start":358,"end":361,"name":"pkg"},"property":{"type":"Identifier","start":362,"end":369,"name":"version"},"computed":false,"optional":false},"alternate":{"type":"Literal","start":372,"end":381,"value":"unknown","raw":"'unknown'"}}}],"kind":"const"},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVyc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL3hsaWZmbWVyZ2UvdmVyc2lvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILE9BQU8sS0FBSyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBRTdCLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQztBQUNmLElBQUk7SUFDQSxHQUFHLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxjQUFjLENBQUMsQ0FBQyxDQUFDO0NBQ2hFO0FBQUMsT0FBTyxDQUFDLEVBQUU7SUFDUixJQUFJO1FBQ0EsR0FBRyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLGNBQWMsQ0FBQyxDQUFDLENBQUM7S0FDdEU7SUFBQyxPQUFPLENBQUMsRUFBRTtRQUNSLEdBQUcsR0FBRyxJQUFJLENBQUM7S0FDZDtDQUNKO0FBRUQsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAxOS4wMi4yMDE3LlxyXG4gKi9cclxuaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJztcclxuXHJcbmxldCBwa2cgPSBudWxsO1xyXG50cnkge1xyXG4gICAgcGtnID0gcmVxdWlyZShwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4nLCAncGFja2FnZS5qc29uJykpO1xyXG59IGNhdGNoIChlKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIHBrZyA9IHJlcXVpcmUocGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uJywgJy4uJywgJ3BhY2thZ2UuanNvbicpKTtcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICBwa2cgPSBudWxsO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgVkVSU0lPTiA9IChwa2cgPyBwa2cudmVyc2lvbiA6ICd1bmtub3duJyk7XHJcbiJdfQ==","start":385,"end":1835}]},"code":"/**\r\n * Created by martin on 19.02.2017.\r\n */\r\nimport * as path from 'path';\r\nlet pkg = null;\r\ntry {\r\n    pkg = require(path.resolve(__dirname, '..', 'package.json'));\r\n}\r\ncatch (e) {\r\n    try {\r\n        pkg = require(path.resolve(__dirname, '..', '..', 'package.json'));\r\n    }\r\n    catch (e) {\r\n        pkg = null;\r\n    }\r\n}\r\nexport const VERSION = (pkg ? pkg.version : 'unknown');\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVyc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL3hsaWZmbWVyZ2UvdmVyc2lvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILE9BQU8sS0FBSyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBRTdCLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQztBQUNmLElBQUk7SUFDQSxHQUFHLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxjQUFjLENBQUMsQ0FBQyxDQUFDO0NBQ2hFO0FBQUMsT0FBTyxDQUFDLEVBQUU7SUFDUixJQUFJO1FBQ0EsR0FBRyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLGNBQWMsQ0FBQyxDQUFDLENBQUM7S0FDdEU7SUFBQyxPQUFPLENBQUMsRUFBRTtRQUNSLEdBQUcsR0FBRyxJQUFJLENBQUM7S0FDZDtDQUNKO0FBRUQsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAxOS4wMi4yMDE3LlxyXG4gKi9cclxuaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJztcclxuXHJcbmxldCBwa2cgPSBudWxsO1xyXG50cnkge1xyXG4gICAgcGtnID0gcmVxdWlyZShwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4nLCAncGFja2FnZS5qc29uJykpO1xyXG59IGNhdGNoIChlKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIHBrZyA9IHJlcXVpcmUocGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uJywgJy4uJywgJ3BhY2thZ2UuanNvbicpKTtcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICBwa2cgPSBudWxsO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgVkVSU0lPTiA9IChwa2cgPyBwa2cudmVyc2lvbiA6ICd1bmtub3duJyk7XHJcbiJdfQ==","customTransformCache":false,"dependencies":["path"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\version.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Created by martin on 19.02.2017.\r\n */\r\nimport * as path from 'path';\r\nlet pkg = null;\r\ntry {\r\n    pkg = require(path.resolve(__dirname, '..', 'package.json'));\r\n}\r\ncatch (e) {\r\n    try {\r\n        pkg = require(path.resolve(__dirname, '..', '..', 'package.json'));\r\n    }\r\n    catch (e) {\r\n        pkg = null;\r\n    }\r\n}\r\nexport const VERSION = (pkg ? pkg.version : 'unknown');\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVyc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL3hsaWZmbWVyZ2UvdmVyc2lvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILE9BQU8sS0FBSyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBRTdCLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQztBQUNmLElBQUk7SUFDQSxHQUFHLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxjQUFjLENBQUMsQ0FBQyxDQUFDO0NBQ2hFO0FBQUMsT0FBTyxDQUFDLEVBQUU7SUFDUixJQUFJO1FBQ0EsR0FBRyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLGNBQWMsQ0FBQyxDQUFDLENBQUM7S0FDdEU7SUFBQyxPQUFPLENBQUMsRUFBRTtRQUNSLEdBQUcsR0FBRyxJQUFJLENBQUM7S0FDZDtDQUNKO0FBRUQsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAxOS4wMi4yMDE3LlxyXG4gKi9cclxuaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJztcclxuXHJcbmxldCBwa2cgPSBudWxsO1xyXG50cnkge1xyXG4gICAgcGtnID0gcmVxdWlyZShwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4nLCAncGFja2FnZS5qc29uJykpO1xyXG59IGNhdGNoIChlKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIHBrZyA9IHJlcXVpcmUocGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uJywgJy4uJywgJ3BhY2thZ2UuanNvbicpKTtcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICBwa2cgPSBudWxsO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgVkVSU0lPTiA9IChwa2cgPyBwa2cudmVyc2lvbiA6ICd1bmtub3duJyk7XHJcbiJdfQ==","originalSourcemap":{"version":3,"file":"version.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/xliffmerge/version.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,3,0],[7,0,3,7],[12,0,3,12],[16,0,3,16],[22,0,3,22],[28,0,3,28],[29,0,3,29]],[[0,0,5,0],[4,0,5,4],[7,0,5,7],[10,0,5,10],[14,0,5,14],[15,0,5,15]],[[0,0,6,0],[4,0,6,4]],[[4,0,7,4],[7,0,7,7],[10,0,7,10],[17,0,7,17],[18,0,7,18],[22,0,7,22],[23,0,7,23],[30,0,7,30],[31,0,7,31],[40,0,7,40],[42,0,7,42],[46,0,7,46],[48,0,7,48],[62,0,7,62],[63,0,7,63],[64,0,7,64],[65,0,7,65]],[[1,0,8,1]],[[0,0,8,2],[7,0,8,9],[8,0,8,10],[10,0,8,12]],[[4,0,9,4],[8,0,9,8]],[[8,0,10,8],[11,0,10,11],[14,0,10,14],[21,0,10,21],[22,0,10,22],[26,0,10,26],[27,0,10,27],[34,0,10,34],[35,0,10,35],[44,0,10,44],[46,0,10,46],[50,0,10,50],[52,0,10,52],[56,0,10,56],[58,0,10,58],[72,0,10,72],[73,0,10,73],[74,0,10,74],[75,0,10,75]],[[5,0,11,5]],[[4,0,11,6],[11,0,11,13],[12,0,11,14],[14,0,11,16]],[[8,0,12,8],[11,0,12,11],[14,0,12,14],[18,0,12,18],[19,0,12,19]],[[5,0,13,5]],[[1,0,14,1]],[[0,0,16,0],[6,0,16,6],[7,0,16,7],[13,0,16,13],[20,0,16,20],[23,0,16,23],[24,0,16,24],[27,0,16,27],[28,0,16,28],[29,0,16,29],[30,0,16,30],[33,0,16,33],[34,0,16,34],[41,0,16,41],[42,0,16,42],[43,0,16,43],[44,0,16,44],[53,0,16,53],[54,0,16,54],[55,0,16,55]]],"sourcesContent":["/**\r\n * Created by martin on 19.02.2017.\r\n */\r\nimport * as path from 'path';\r\n\r\nlet pkg = null;\r\ntry {\r\n    pkg = require(path.resolve(__dirname, '..', 'package.json'));\r\n} catch (e) {\r\n    try {\r\n        pkg = require(path.resolve(__dirname, '..', '..', 'package.json'));\r\n    } catch (e) {\r\n        pkg = null;\r\n    }\r\n}\r\n\r\nexport const VERSION = (pkg ? pkg.version : 'unknown');\r\n"]},"resolvedIds":{"path":{"external":true,"id":"path","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":5519,"body":[{"type":"ImportDeclaration","start":0,"end":47,"specifiers":[{"type":"ImportSpecifier","start":9,"end":17,"imported":{"type":"Identifier","start":9,"end":17,"name":"FileUtil"},"local":{"type":"Identifier","start":9,"end":17,"name":"FileUtil"}}],"source":{"type":"Literal","start":25,"end":46,"value":"../common/file-util","raw":"'../common/file-util'"}},{"type":"ExportNamedDeclaration","start":150,"end":1540,"declaration":{"type":"ClassDeclaration","start":157,"end":1540,"id":{"type":"Identifier","start":163,"end":172,"name":"XmlReader"},"superClass":null,"body":{"type":"ClassBody","start":173,"end":1540,"body":[{"type":"MethodDefinition","start":473,"end":997,"static":true,"computed":false,"key":{"type":"Identifier","start":480,"end":498,"name":"readXmlFileContent"},"kind":"method","value":{"type":"FunctionExpression","start":498,"end":997,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":499,"end":503,"name":"path"},{"type":"Identifier","start":505,"end":513,"name":"encoding"}],"body":{"type":"BlockStatement","start":515,"end":997,"body":[{"type":"IfStatement","start":526,"end":605,"test":{"type":"UnaryExpression","start":530,"end":539,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":531,"end":539,"name":"encoding"}},"consequent":{"type":"BlockStatement","start":541,"end":605,"body":[{"type":"ExpressionStatement","start":556,"end":594,"expression":{"type":"AssignmentExpression","start":556,"end":593,"operator":"=","left":{"type":"Identifier","start":556,"end":564,"name":"encoding"},"right":{"type":"MemberExpression","start":567,"end":593,"object":{"type":"Identifier","start":567,"end":576,"name":"XmlReader"},"property":{"type":"Identifier","start":577,"end":593,"name":"DEFAULT_ENCODING"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"VariableDeclaration","start":615,"end":659,"declarations":[{"type":"VariableDeclarator","start":619,"end":658,"id":{"type":"Identifier","start":619,"end":626,"name":"content"},"init":{"type":"CallExpression","start":629,"end":658,"callee":{"type":"MemberExpression","start":629,"end":642,"object":{"type":"Identifier","start":629,"end":637,"name":"FileUtil"},"property":{"type":"Identifier","start":638,"end":642,"name":"read"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":643,"end":647,"name":"path"},{"type":"Identifier","start":649,"end":657,"name":"encoding"}],"optional":false}}],"kind":"let"},{"type":"VariableDeclaration","start":669,"end":726,"declarations":[{"type":"VariableDeclarator","start":675,"end":725,"id":{"type":"Identifier","start":675,"end":688,"name":"foundEncoding"},"init":{"type":"CallExpression","start":691,"end":725,"callee":{"type":"MemberExpression","start":691,"end":716,"object":{"type":"Identifier","start":691,"end":700,"name":"XmlReader"},"property":{"type":"Identifier","start":701,"end":716,"name":"encodingFromXml"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":717,"end":724,"name":"content"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":736,"end":892,"test":{"type":"BinaryExpression","start":740,"end":766,"left":{"type":"Identifier","start":740,"end":753,"name":"foundEncoding"},"operator":"!==","right":{"type":"Identifier","start":758,"end":766,"name":"encoding"}},"consequent":{"type":"BlockStatement","start":768,"end":892,"body":[{"type":"ExpressionStatement","start":836,"end":881,"expression":{"type":"AssignmentExpression","start":836,"end":880,"operator":"=","left":{"type":"Identifier","start":836,"end":843,"name":"content"},"right":{"type":"CallExpression","start":846,"end":880,"callee":{"type":"MemberExpression","start":846,"end":859,"object":{"type":"Identifier","start":846,"end":854,"name":"FileUtil"},"property":{"type":"Identifier","start":855,"end":859,"name":"read"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":860,"end":864,"name":"path"},{"type":"Identifier","start":866,"end":879,"name":"foundEncoding"}],"optional":false}}}]},"alternate":null},{"type":"ReturnStatement","start":902,"end":990,"argument":{"type":"ObjectExpression","start":909,"end":989,"properties":[{"type":"Property","start":924,"end":940,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":924,"end":931,"name":"content"},"value":{"type":"Identifier","start":933,"end":940,"name":"content"},"kind":"init"},{"type":"Property","start":955,"end":978,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":955,"end":963,"name":"encoding"},"value":{"type":"Identifier","start":965,"end":978,"name":"foundEncoding"},"kind":"init"}]}}]}}},{"type":"MethodDefinition","start":1167,"end":1537,"static":true,"computed":false,"key":{"type":"Identifier","start":1174,"end":1189,"name":"encodingFromXml"},"kind":"method","value":{"type":"FunctionExpression","start":1189,"end":1537,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1190,"end":1199,"name":"xmlString"}],"body":{"type":"BlockStatement","start":1201,"end":1537,"body":[{"type":"VariableDeclaration","start":1212,"end":1258,"declarations":[{"type":"VariableDeclarator","start":1218,"end":1257,"id":{"type":"Identifier","start":1218,"end":1223,"name":"index"},"init":{"type":"CallExpression","start":1226,"end":1257,"callee":{"type":"MemberExpression","start":1226,"end":1243,"object":{"type":"Identifier","start":1226,"end":1235,"name":"xmlString"},"property":{"type":"Identifier","start":1236,"end":1243,"name":"indexOf"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1244,"end":1256,"value":"encoding=\"","raw":"'encoding=\"'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1268,"end":1378,"test":{"type":"BinaryExpression","start":1272,"end":1281,"left":{"type":"Identifier","start":1272,"end":1277,"name":"index"},"operator":"<","right":{"type":"Literal","start":1280,"end":1281,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":1283,"end":1378,"body":[{"type":"ReturnStatement","start":1298,"end":1327,"argument":{"type":"MemberExpression","start":1305,"end":1326,"object":{"type":"ThisExpression","start":1305,"end":1309},"property":{"type":"Identifier","start":1310,"end":1326,"name":"DEFAULT_ENCODING"},"computed":false,"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":1388,"end":1440,"declarations":[{"type":"VariableDeclarator","start":1394,"end":1439,"id":{"type":"Identifier","start":1394,"end":1402,"name":"endIndex"},"init":{"type":"CallExpression","start":1405,"end":1439,"callee":{"type":"MemberExpression","start":1405,"end":1422,"object":{"type":"Identifier","start":1405,"end":1414,"name":"xmlString"},"property":{"type":"Identifier","start":1415,"end":1422,"name":"indexOf"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1423,"end":1426,"value":"\"","raw":"'\"'"},{"type":"BinaryExpression","start":1428,"end":1438,"left":{"type":"Identifier","start":1428,"end":1433,"name":"index"},"operator":"+","right":{"type":"Literal","start":1436,"end":1438,"value":10,"raw":"10"}}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":1481,"end":1530,"argument":{"type":"CallExpression","start":1488,"end":1529,"callee":{"type":"MemberExpression","start":1488,"end":1507,"object":{"type":"Identifier","start":1488,"end":1497,"name":"xmlString"},"property":{"type":"Identifier","start":1498,"end":1507,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":1508,"end":1518,"left":{"type":"Identifier","start":1508,"end":1513,"name":"index"},"operator":"+","right":{"type":"Literal","start":1516,"end":1518,"value":10,"raw":"10"}},{"type":"Identifier","start":1520,"end":1528,"name":"endIndex"}],"optional":false}}]}}}]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":1542,"end":1579,"expression":{"type":"AssignmentExpression","start":1542,"end":1578,"operator":"=","left":{"type":"MemberExpression","start":1542,"end":1568,"object":{"type":"Identifier","start":1542,"end":1551,"name":"XmlReader"},"property":{"type":"Identifier","start":1552,"end":1568,"name":"DEFAULT_ENCODING"},"computed":false,"optional":false},"right":{"type":"Literal","start":1571,"end":1578,"value":"utf-8","raw":"'utf-8'"}}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieG1sLXJlYWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL3hsaWZmbWVyZ2UveG1sLXJlYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDN0M7OztHQUdHO0FBRUgsTUFBTSxPQUFPLFNBQVM7SUFHbEI7Ozs7OztPQU1HO0lBQ0ksTUFBTSxDQUFDLGtCQUFrQixDQUFDLElBQVksRUFBRSxRQUF5QjtRQUNwRSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ1gsUUFBUSxHQUFHLFNBQVMsQ0FBQyxnQkFBa0MsQ0FBQztTQUMzRDtRQUNELElBQUksT0FBTyxHQUFXLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQ3BELE1BQU0sYUFBYSxHQUFHLFNBQVMsQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFtQixDQUFDO1FBQzNFLElBQUksYUFBYSxLQUFLLFFBQVEsRUFBRTtZQUM1Qix1Q0FBdUM7WUFDdkMsT0FBTyxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLGFBQWEsQ0FBQyxDQUFDO1NBQ2hEO1FBQ0QsT0FBTztZQUNILE9BQU8sRUFBRSxPQUFPO1lBQ2hCLFFBQVEsRUFBRSxhQUFhO1NBQzFCLENBQUM7SUFDTixDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSyxNQUFNLENBQUMsZUFBZSxDQUFDLFNBQWlCO1FBQzVDLE1BQU0sS0FBSyxHQUFHLFNBQVMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDOUMsSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFO1lBQ1gsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyx1Q0FBdUM7U0FDeEU7UUFDRCxNQUFNLFFBQVEsR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxLQUFLLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyw4QkFBOEI7UUFDbkYsT0FBTyxTQUFTLENBQUMsU0FBUyxDQUFDLEtBQUssR0FBRyxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7QUF0Q00sMEJBQWdCLEdBQUcsT0FBeUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlsZVV0aWx9IGZyb20gJy4uL2NvbW1vbi9maWxlLXV0aWwnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMTAuMDMuMjAxNy5cclxuICogSGVscGVyIGNsYXNzIHRvIHJlYWQgWE1sIHdpdGggYSBjb3JyZWN0IGVuY29kaW5nLlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBYbWxSZWFkZXIge1xyXG4gICAgc3RhdGljIERFRkFVTFRfRU5DT0RJTkcgPSAndXRmLTgnIGFzIEJ1ZmZlckVuY29kaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVhZCBhbiB4bWwtRmlsZS5cclxuICAgICAqIEBwYXJhbSBwYXRoIFBhdGggdG8gZmlsZVxyXG4gICAgICogQHBhcmFtIGVuY29kaW5nIG9wdGlvbmFsIGVuY29kaW5nIG9mIHRoZSB4bWwuXHJcbiAgICAgKiBUaGlzIGlzIHJlYWQgZnJvbSB0aGUgZmlsZSwgYnV0IGlmIHlvdSBrbm93IGl0IGJlZm9yZSwgeW91IGNhbiBhdm9pZCByZWFkaW5nIHRoZSBmaWxlIHR3aWNlLlxyXG4gICAgICogQHJldHVybiBmaWxlIGNvbnRlbnQgYW5kIGVuY29kaW5nIGZvdW5kIGluIHRoZSBmaWxlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRYbWxGaWxlQ29udGVudChwYXRoOiBzdHJpbmcsIGVuY29kaW5nPzogQnVmZmVyRW5jb2RpbmcpOiB7Y29udGVudDogc3RyaW5nLCBlbmNvZGluZzogQnVmZmVyRW5jb2RpbmcgfSB7XHJcbiAgICAgICAgaWYgKCFlbmNvZGluZykge1xyXG4gICAgICAgICAgICBlbmNvZGluZyA9IFhtbFJlYWRlci5ERUZBVUxUX0VOQ09ESU5HIGFzIEJ1ZmZlckVuY29kaW5nO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgY29udGVudDogc3RyaW5nID0gRmlsZVV0aWwucmVhZChwYXRoLCBlbmNvZGluZyk7XHJcbiAgICAgICAgY29uc3QgZm91bmRFbmNvZGluZyA9IFhtbFJlYWRlci5lbmNvZGluZ0Zyb21YbWwoY29udGVudCkgYXMgQnVmZmVyRW5jb2Rpbmc7XHJcbiAgICAgICAgaWYgKGZvdW5kRW5jb2RpbmcgIT09IGVuY29kaW5nKSB7XHJcbiAgICAgICAgICAgIC8vIHJlYWQgYWdhaW4gd2l0aCB0aGUgY29ycmVjdCBlbmNvZGluZ1xyXG4gICAgICAgICAgICBjb250ZW50ID0gRmlsZVV0aWwucmVhZChwYXRoLCBmb3VuZEVuY29kaW5nKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgY29udGVudDogY29udGVudCxcclxuICAgICAgICAgICAgZW5jb2Rpbmc6IGZvdW5kRW5jb2RpbmdcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVhZCB0aGUgZW5jb2RpbmcgZnJvbSB0aGUgeG1sLlxyXG4gICAgICogeG1sIEZpbGUgc3RhcnRzIHdpdGggLi4gZW5jb2Rpbmc9XCIuLlwiXHJcbiAgICAgKiBAcGFyYW0geG1sU3RyaW5nIHhtbFN0cmluZ1xyXG4gICAgICogQHJldHVybiBlbmNvZGluZ1xyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHN0YXRpYyBlbmNvZGluZ0Zyb21YbWwoeG1sU3RyaW5nOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IGluZGV4ID0geG1sU3RyaW5nLmluZGV4T2YoJ2VuY29kaW5nPVwiJyk7XHJcbiAgICAgICAgaWYgKGluZGV4IDwgMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5ERUZBVUxUX0VOQ09ESU5HOyAvLyBkZWZhdWx0IGluIHhtbCBpZiBub3QgZXhwbGljaXRseSBzZXRcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgZW5kSW5kZXggPSB4bWxTdHJpbmcuaW5kZXhPZignXCInLCBpbmRleCArIDEwKTsgLy8gMTAgPSBsZW5ndGggb2YgJ2VuY29kaW5nPVwiJ1xyXG4gICAgICAgIHJldHVybiB4bWxTdHJpbmcuc3Vic3RyaW5nKGluZGV4ICsgMTAsIGVuZEluZGV4KTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbiJdfQ==","start":1581,"end":5519}]},"code":"import { FileUtil } from '../common/file-util';\r\n/**\r\n * Created by martin on 10.03.2017.\r\n * Helper class to read XMl with a correct encoding.\r\n */\r\nexport class XmlReader {\r\n    /**\r\n     * Read an xml-File.\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return file content and encoding found in the file.\r\n     */\r\n    static readXmlFileContent(path, encoding) {\r\n        if (!encoding) {\r\n            encoding = XmlReader.DEFAULT_ENCODING;\r\n        }\r\n        let content = FileUtil.read(path, encoding);\r\n        const foundEncoding = XmlReader.encodingFromXml(content);\r\n        if (foundEncoding !== encoding) {\r\n            // read again with the correct encoding\r\n            content = FileUtil.read(path, foundEncoding);\r\n        }\r\n        return {\r\n            content: content,\r\n            encoding: foundEncoding\r\n        };\r\n    }\r\n    /**\r\n     * Read the encoding from the xml.\r\n     * xml File starts with .. encoding=\"..\"\r\n     * @param xmlString xmlString\r\n     * @return encoding\r\n     */\r\n    static encodingFromXml(xmlString) {\r\n        const index = xmlString.indexOf('encoding=\"');\r\n        if (index < 0) {\r\n            return this.DEFAULT_ENCODING; // default in xml if not explicitly set\r\n        }\r\n        const endIndex = xmlString.indexOf('\"', index + 10); // 10 = length of 'encoding=\"'\r\n        return xmlString.substring(index + 10, endIndex);\r\n    }\r\n}\r\nXmlReader.DEFAULT_ENCODING = 'utf-8';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieG1sLXJlYWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL3hsaWZmbWVyZ2UveG1sLXJlYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDN0M7OztHQUdHO0FBRUgsTUFBTSxPQUFPLFNBQVM7SUFHbEI7Ozs7OztPQU1HO0lBQ0ksTUFBTSxDQUFDLGtCQUFrQixDQUFDLElBQVksRUFBRSxRQUF5QjtRQUNwRSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ1gsUUFBUSxHQUFHLFNBQVMsQ0FBQyxnQkFBa0MsQ0FBQztTQUMzRDtRQUNELElBQUksT0FBTyxHQUFXLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQ3BELE1BQU0sYUFBYSxHQUFHLFNBQVMsQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFtQixDQUFDO1FBQzNFLElBQUksYUFBYSxLQUFLLFFBQVEsRUFBRTtZQUM1Qix1Q0FBdUM7WUFDdkMsT0FBTyxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLGFBQWEsQ0FBQyxDQUFDO1NBQ2hEO1FBQ0QsT0FBTztZQUNILE9BQU8sRUFBRSxPQUFPO1lBQ2hCLFFBQVEsRUFBRSxhQUFhO1NBQzFCLENBQUM7SUFDTixDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSyxNQUFNLENBQUMsZUFBZSxDQUFDLFNBQWlCO1FBQzVDLE1BQU0sS0FBSyxHQUFHLFNBQVMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDOUMsSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFO1lBQ1gsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyx1Q0FBdUM7U0FDeEU7UUFDRCxNQUFNLFFBQVEsR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxLQUFLLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyw4QkFBOEI7UUFDbkYsT0FBTyxTQUFTLENBQUMsU0FBUyxDQUFDLEtBQUssR0FBRyxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7QUF0Q00sMEJBQWdCLEdBQUcsT0FBeUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlsZVV0aWx9IGZyb20gJy4uL2NvbW1vbi9maWxlLXV0aWwnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMTAuMDMuMjAxNy5cclxuICogSGVscGVyIGNsYXNzIHRvIHJlYWQgWE1sIHdpdGggYSBjb3JyZWN0IGVuY29kaW5nLlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBYbWxSZWFkZXIge1xyXG4gICAgc3RhdGljIERFRkFVTFRfRU5DT0RJTkcgPSAndXRmLTgnIGFzIEJ1ZmZlckVuY29kaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVhZCBhbiB4bWwtRmlsZS5cclxuICAgICAqIEBwYXJhbSBwYXRoIFBhdGggdG8gZmlsZVxyXG4gICAgICogQHBhcmFtIGVuY29kaW5nIG9wdGlvbmFsIGVuY29kaW5nIG9mIHRoZSB4bWwuXHJcbiAgICAgKiBUaGlzIGlzIHJlYWQgZnJvbSB0aGUgZmlsZSwgYnV0IGlmIHlvdSBrbm93IGl0IGJlZm9yZSwgeW91IGNhbiBhdm9pZCByZWFkaW5nIHRoZSBmaWxlIHR3aWNlLlxyXG4gICAgICogQHJldHVybiBmaWxlIGNvbnRlbnQgYW5kIGVuY29kaW5nIGZvdW5kIGluIHRoZSBmaWxlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRYbWxGaWxlQ29udGVudChwYXRoOiBzdHJpbmcsIGVuY29kaW5nPzogQnVmZmVyRW5jb2RpbmcpOiB7Y29udGVudDogc3RyaW5nLCBlbmNvZGluZzogQnVmZmVyRW5jb2RpbmcgfSB7XHJcbiAgICAgICAgaWYgKCFlbmNvZGluZykge1xyXG4gICAgICAgICAgICBlbmNvZGluZyA9IFhtbFJlYWRlci5ERUZBVUxUX0VOQ09ESU5HIGFzIEJ1ZmZlckVuY29kaW5nO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgY29udGVudDogc3RyaW5nID0gRmlsZVV0aWwucmVhZChwYXRoLCBlbmNvZGluZyk7XHJcbiAgICAgICAgY29uc3QgZm91bmRFbmNvZGluZyA9IFhtbFJlYWRlci5lbmNvZGluZ0Zyb21YbWwoY29udGVudCkgYXMgQnVmZmVyRW5jb2Rpbmc7XHJcbiAgICAgICAgaWYgKGZvdW5kRW5jb2RpbmcgIT09IGVuY29kaW5nKSB7XHJcbiAgICAgICAgICAgIC8vIHJlYWQgYWdhaW4gd2l0aCB0aGUgY29ycmVjdCBlbmNvZGluZ1xyXG4gICAgICAgICAgICBjb250ZW50ID0gRmlsZVV0aWwucmVhZChwYXRoLCBmb3VuZEVuY29kaW5nKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgY29udGVudDogY29udGVudCxcclxuICAgICAgICAgICAgZW5jb2Rpbmc6IGZvdW5kRW5jb2RpbmdcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVhZCB0aGUgZW5jb2RpbmcgZnJvbSB0aGUgeG1sLlxyXG4gICAgICogeG1sIEZpbGUgc3RhcnRzIHdpdGggLi4gZW5jb2Rpbmc9XCIuLlwiXHJcbiAgICAgKiBAcGFyYW0geG1sU3RyaW5nIHhtbFN0cmluZ1xyXG4gICAgICogQHJldHVybiBlbmNvZGluZ1xyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHN0YXRpYyBlbmNvZGluZ0Zyb21YbWwoeG1sU3RyaW5nOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IGluZGV4ID0geG1sU3RyaW5nLmluZGV4T2YoJ2VuY29kaW5nPVwiJyk7XHJcbiAgICAgICAgaWYgKGluZGV4IDwgMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5ERUZBVUxUX0VOQ09ESU5HOyAvLyBkZWZhdWx0IGluIHhtbCBpZiBub3QgZXhwbGljaXRseSBzZXRcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgZW5kSW5kZXggPSB4bWxTdHJpbmcuaW5kZXhPZignXCInLCBpbmRleCArIDEwKTsgLy8gMTAgPSBsZW5ndGggb2YgJ2VuY29kaW5nPVwiJ1xyXG4gICAgICAgIHJldHVybiB4bWxTdHJpbmcuc3Vic3RyaW5nKGluZGV4ICsgMTAsIGVuZEluZGV4KTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbiJdfQ==","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\file-util.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\xml-reader.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { FileUtil } from '../common/file-util';\r\n/**\r\n * Created by martin on 10.03.2017.\r\n * Helper class to read XMl with a correct encoding.\r\n */\r\nexport class XmlReader {\r\n    /**\r\n     * Read an xml-File.\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return file content and encoding found in the file.\r\n     */\r\n    static readXmlFileContent(path, encoding) {\r\n        if (!encoding) {\r\n            encoding = XmlReader.DEFAULT_ENCODING;\r\n        }\r\n        let content = FileUtil.read(path, encoding);\r\n        const foundEncoding = XmlReader.encodingFromXml(content);\r\n        if (foundEncoding !== encoding) {\r\n            // read again with the correct encoding\r\n            content = FileUtil.read(path, foundEncoding);\r\n        }\r\n        return {\r\n            content: content,\r\n            encoding: foundEncoding\r\n        };\r\n    }\r\n    /**\r\n     * Read the encoding from the xml.\r\n     * xml File starts with .. encoding=\"..\"\r\n     * @param xmlString xmlString\r\n     * @return encoding\r\n     */\r\n    static encodingFromXml(xmlString) {\r\n        const index = xmlString.indexOf('encoding=\"');\r\n        if (index < 0) {\r\n            return this.DEFAULT_ENCODING; // default in xml if not explicitly set\r\n        }\r\n        const endIndex = xmlString.indexOf('\"', index + 10); // 10 = length of 'encoding=\"'\r\n        return xmlString.substring(index + 10, endIndex);\r\n    }\r\n}\r\nXmlReader.DEFAULT_ENCODING = 'utf-8';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieG1sLXJlYWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL3hsaWZmbWVyZ2UveG1sLXJlYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDN0M7OztHQUdHO0FBRUgsTUFBTSxPQUFPLFNBQVM7SUFHbEI7Ozs7OztPQU1HO0lBQ0ksTUFBTSxDQUFDLGtCQUFrQixDQUFDLElBQVksRUFBRSxRQUF5QjtRQUNwRSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ1gsUUFBUSxHQUFHLFNBQVMsQ0FBQyxnQkFBa0MsQ0FBQztTQUMzRDtRQUNELElBQUksT0FBTyxHQUFXLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQ3BELE1BQU0sYUFBYSxHQUFHLFNBQVMsQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFtQixDQUFDO1FBQzNFLElBQUksYUFBYSxLQUFLLFFBQVEsRUFBRTtZQUM1Qix1Q0FBdUM7WUFDdkMsT0FBTyxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLGFBQWEsQ0FBQyxDQUFDO1NBQ2hEO1FBQ0QsT0FBTztZQUNILE9BQU8sRUFBRSxPQUFPO1lBQ2hCLFFBQVEsRUFBRSxhQUFhO1NBQzFCLENBQUM7SUFDTixDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSyxNQUFNLENBQUMsZUFBZSxDQUFDLFNBQWlCO1FBQzVDLE1BQU0sS0FBSyxHQUFHLFNBQVMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDOUMsSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFO1lBQ1gsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyx1Q0FBdUM7U0FDeEU7UUFDRCxNQUFNLFFBQVEsR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxLQUFLLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyw4QkFBOEI7UUFDbkYsT0FBTyxTQUFTLENBQUMsU0FBUyxDQUFDLEtBQUssR0FBRyxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7QUF0Q00sMEJBQWdCLEdBQUcsT0FBeUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlsZVV0aWx9IGZyb20gJy4uL2NvbW1vbi9maWxlLXV0aWwnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMTAuMDMuMjAxNy5cclxuICogSGVscGVyIGNsYXNzIHRvIHJlYWQgWE1sIHdpdGggYSBjb3JyZWN0IGVuY29kaW5nLlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBYbWxSZWFkZXIge1xyXG4gICAgc3RhdGljIERFRkFVTFRfRU5DT0RJTkcgPSAndXRmLTgnIGFzIEJ1ZmZlckVuY29kaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVhZCBhbiB4bWwtRmlsZS5cclxuICAgICAqIEBwYXJhbSBwYXRoIFBhdGggdG8gZmlsZVxyXG4gICAgICogQHBhcmFtIGVuY29kaW5nIG9wdGlvbmFsIGVuY29kaW5nIG9mIHRoZSB4bWwuXHJcbiAgICAgKiBUaGlzIGlzIHJlYWQgZnJvbSB0aGUgZmlsZSwgYnV0IGlmIHlvdSBrbm93IGl0IGJlZm9yZSwgeW91IGNhbiBhdm9pZCByZWFkaW5nIHRoZSBmaWxlIHR3aWNlLlxyXG4gICAgICogQHJldHVybiBmaWxlIGNvbnRlbnQgYW5kIGVuY29kaW5nIGZvdW5kIGluIHRoZSBmaWxlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRYbWxGaWxlQ29udGVudChwYXRoOiBzdHJpbmcsIGVuY29kaW5nPzogQnVmZmVyRW5jb2RpbmcpOiB7Y29udGVudDogc3RyaW5nLCBlbmNvZGluZzogQnVmZmVyRW5jb2RpbmcgfSB7XHJcbiAgICAgICAgaWYgKCFlbmNvZGluZykge1xyXG4gICAgICAgICAgICBlbmNvZGluZyA9IFhtbFJlYWRlci5ERUZBVUxUX0VOQ09ESU5HIGFzIEJ1ZmZlckVuY29kaW5nO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgY29udGVudDogc3RyaW5nID0gRmlsZVV0aWwucmVhZChwYXRoLCBlbmNvZGluZyk7XHJcbiAgICAgICAgY29uc3QgZm91bmRFbmNvZGluZyA9IFhtbFJlYWRlci5lbmNvZGluZ0Zyb21YbWwoY29udGVudCkgYXMgQnVmZmVyRW5jb2Rpbmc7XHJcbiAgICAgICAgaWYgKGZvdW5kRW5jb2RpbmcgIT09IGVuY29kaW5nKSB7XHJcbiAgICAgICAgICAgIC8vIHJlYWQgYWdhaW4gd2l0aCB0aGUgY29ycmVjdCBlbmNvZGluZ1xyXG4gICAgICAgICAgICBjb250ZW50ID0gRmlsZVV0aWwucmVhZChwYXRoLCBmb3VuZEVuY29kaW5nKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgY29udGVudDogY29udGVudCxcclxuICAgICAgICAgICAgZW5jb2Rpbmc6IGZvdW5kRW5jb2RpbmdcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVhZCB0aGUgZW5jb2RpbmcgZnJvbSB0aGUgeG1sLlxyXG4gICAgICogeG1sIEZpbGUgc3RhcnRzIHdpdGggLi4gZW5jb2Rpbmc9XCIuLlwiXHJcbiAgICAgKiBAcGFyYW0geG1sU3RyaW5nIHhtbFN0cmluZ1xyXG4gICAgICogQHJldHVybiBlbmNvZGluZ1xyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHN0YXRpYyBlbmNvZGluZ0Zyb21YbWwoeG1sU3RyaW5nOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IGluZGV4ID0geG1sU3RyaW5nLmluZGV4T2YoJ2VuY29kaW5nPVwiJyk7XHJcbiAgICAgICAgaWYgKGluZGV4IDwgMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5ERUZBVUxUX0VOQ09ESU5HOyAvLyBkZWZhdWx0IGluIHhtbCBpZiBub3QgZXhwbGljaXRseSBzZXRcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgZW5kSW5kZXggPSB4bWxTdHJpbmcuaW5kZXhPZignXCInLCBpbmRleCArIDEwKTsgLy8gMTAgPSBsZW5ndGggb2YgJ2VuY29kaW5nPVwiJ1xyXG4gICAgICAgIHJldHVybiB4bWxTdHJpbmcuc3Vic3RyaW5nKGluZGV4ICsgMTAsIGVuZEluZGV4KTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbiJdfQ==","originalSourcemap":{"version":3,"file":"xml-reader.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/xliffmerge/xml-reader.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[17,0,0,16],[19,0,0,17],[25,0,0,23],[46,0,0,44],[47,0,0,45]],[[0,0,1,0]],[],[],[[3,0,4,3]],[[0,0,6,0],[6,0,6,6],[13,0,6,13],[22,0,6,22]],[[4,0,9,4]],[],[],[],[],[],[[7,0,15,7]],[[4,0,16,11],[10,0,16,17],[11,0,16,18],[29,0,16,36],[30,0,16,37],[34,0,16,49],[36,0,16,51],[44,0,16,76]],[[8,0,17,8],[12,0,17,12],[13,0,17,13],[21,0,17,21],[23,0,17,23]],[[12,0,18,12],[20,0,18,20],[23,0,18,23],[32,0,18,32],[33,0,18,33],[49,0,18,67],[50,0,18,68]],[[9,0,19,9]],[[8,0,20,8],[12,0,20,12],[19,0,20,19],[22,0,20,30],[30,0,20,38],[31,0,20,39],[35,0,20,43],[36,0,20,44],[40,0,20,48],[42,0,20,50],[50,0,20,58],[51,0,20,59],[52,0,20,60]],[[8,0,21,8],[14,0,21,14],[27,0,21,27],[30,0,21,30],[39,0,21,39],[40,0,21,40],[55,0,21,55],[56,0,21,56],[63,0,21,63],[64,0,21,82],[65,0,21,83]],[[8,0,22,8],[12,0,22,12],[25,0,22,25],[30,0,22,30],[38,0,22,38],[40,0,22,40]],[[12,0,23,12],[51,0,23,51]],[[12,0,24,12],[19,0,24,19],[22,0,24,22],[30,0,24,30],[31,0,24,31],[35,0,24,35],[36,0,24,36],[40,0,24,40],[42,0,24,42],[55,0,24,55],[56,0,24,56],[57,0,24,57]],[[9,0,25,9]],[[8,0,26,8],[15,0,26,15]],[[12,0,27,12],[19,0,27,19],[21,0,27,21],[28,0,27,28]],[[12,0,28,12],[20,0,28,20],[22,0,28,22],[35,0,28,35]],[[9,0,29,9],[10,0,29,10]],[[4,0,30,4],[5,0,30,5]],[[4,0,32,4]],[],[],[],[],[[7,0,37,7]],[[4,0,38,12],[10,0,38,18],[11,0,38,19],[26,0,38,34],[27,0,38,35],[36,0,38,52]],[[8,0,39,8],[14,0,39,14],[19,0,39,19],[22,0,39,22],[31,0,39,31],[32,0,39,32],[39,0,39,39],[40,0,39,40],[52,0,39,52],[53,0,39,53],[54,0,39,54]],[[8,0,40,8],[12,0,40,12],[17,0,40,17],[20,0,40,20],[21,0,40,21],[23,0,40,23]],[[12,0,41,12],[19,0,41,19],[23,0,41,23],[24,0,41,24],[40,0,41,40],[41,0,41,41],[42,0,41,42],[81,0,41,81]],[[9,0,42,9]],[[8,0,43,8],[14,0,43,14],[22,0,43,22],[25,0,43,25],[34,0,43,34],[35,0,43,35],[42,0,43,42],[43,0,43,43],[46,0,43,46],[48,0,43,48],[53,0,43,53],[56,0,43,56],[58,0,43,58],[59,0,43,59],[60,0,43,60],[61,0,43,61],[91,0,43,91]],[[8,0,44,8],[15,0,44,15],[24,0,44,24],[25,0,44,25],[34,0,44,34],[35,0,44,35],[40,0,44,40],[43,0,44,43],[45,0,44,45],[47,0,44,47],[55,0,44,55],[56,0,44,56],[57,0,44,57]],[[4,0,45,4],[5,0,45,5]],[],[[0,0,7,11],[26,0,7,27],[29,0,7,30],[36,0,7,55],[37,0,7,56]]],"sourcesContent":["import {FileUtil} from '../common/file-util';\r\n/**\r\n * Created by martin on 10.03.2017.\r\n * Helper class to read XMl with a correct encoding.\r\n */\r\n\r\nexport class XmlReader {\r\n    static DEFAULT_ENCODING = 'utf-8' as BufferEncoding;\r\n\r\n    /**\r\n     * Read an xml-File.\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return file content and encoding found in the file.\r\n     */\r\n    public static readXmlFileContent(path: string, encoding?: BufferEncoding): {content: string, encoding: BufferEncoding } {\r\n        if (!encoding) {\r\n            encoding = XmlReader.DEFAULT_ENCODING as BufferEncoding;\r\n        }\r\n        let content: string = FileUtil.read(path, encoding);\r\n        const foundEncoding = XmlReader.encodingFromXml(content) as BufferEncoding;\r\n        if (foundEncoding !== encoding) {\r\n            // read again with the correct encoding\r\n            content = FileUtil.read(path, foundEncoding);\r\n        }\r\n        return {\r\n            content: content,\r\n            encoding: foundEncoding\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Read the encoding from the xml.\r\n     * xml File starts with .. encoding=\"..\"\r\n     * @param xmlString xmlString\r\n     * @return encoding\r\n     */\r\n    private static encodingFromXml(xmlString: string): string {\r\n        const index = xmlString.indexOf('encoding=\"');\r\n        if (index < 0) {\r\n            return this.DEFAULT_ENCODING; // default in xml if not explicitly set\r\n        }\r\n        const endIndex = xmlString.indexOf('\"', index + 10); // 10 = length of 'encoding=\"'\r\n        return xmlString.substring(index + 10, endIndex);\r\n    }\r\n\r\n}\r\n\r\n"]},"resolvedIds":{"../common/file-util":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\file-util.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":9700,"body":[{"type":"ImportDeclaration","start":46,"end":132,"specifiers":[{"type":"ImportSpecifier","start":55,"end":85,"imported":{"type":"Identifier","start":55,"end":85,"name":"TranslationMessagesFileFactory"},"local":{"type":"Identifier","start":55,"end":85,"name":"TranslationMessagesFileFactory"}}],"source":{"type":"Literal","start":93,"end":131,"value":"@ngx-i18nsupport/ngx-i18nsupport-lib","raw":"'@ngx-i18nsupport/ngx-i18nsupport-lib'"}},{"type":"ImportDeclaration","start":134,"end":181,"specifiers":[{"type":"ImportSpecifier","start":143,"end":151,"imported":{"type":"Identifier","start":143,"end":151,"name":"FileUtil"},"local":{"type":"Identifier","start":143,"end":151,"name":"FileUtil"}}],"source":{"type":"Literal","start":159,"end":180,"value":"../common/file-util","raw":"'../common/file-util'"}},{"type":"ImportDeclaration","start":183,"end":224,"specifiers":[{"type":"ImportSpecifier","start":192,"end":201,"imported":{"type":"Identifier","start":192,"end":201,"name":"XmlReader"},"local":{"type":"Identifier","start":192,"end":201,"name":"XmlReader"}}],"source":{"type":"Literal","start":209,"end":223,"value":"./xml-reader","raw":"'./xml-reader'"}},{"type":"ExportNamedDeclaration","start":300,"end":2872,"declaration":{"type":"ClassDeclaration","start":307,"end":2872,"id":{"type":"Identifier","start":313,"end":342,"name":"TranslationMessagesFileReader"},"superClass":null,"body":{"type":"ClassBody","start":343,"end":2872,"body":[{"type":"MethodDefinition","start":629,"end":1033,"static":true,"computed":false,"key":{"type":"Identifier","start":636,"end":644,"name":"fromFile"},"kind":"method","value":{"type":"FunctionExpression","start":644,"end":1033,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":645,"end":655,"name":"i18nFormat"},{"type":"Identifier","start":657,"end":661,"name":"path"},{"type":"Identifier","start":663,"end":671,"name":"encoding"},{"type":"Identifier","start":673,"end":695,"name":"optionalMasterFilePath"}],"body":{"type":"BlockStatement","start":697,"end":1033,"body":[{"type":"VariableDeclaration","start":708,"end":772,"declarations":[{"type":"VariableDeclarator","start":714,"end":771,"id":{"type":"Identifier","start":714,"end":724,"name":"xmlContent"},"init":{"type":"CallExpression","start":727,"end":771,"callee":{"type":"MemberExpression","start":727,"end":755,"object":{"type":"Identifier","start":727,"end":736,"name":"XmlReader"},"property":{"type":"Identifier","start":737,"end":755,"name":"readXmlFileContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":756,"end":760,"name":"path"},{"type":"Identifier","start":762,"end":770,"name":"encoding"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":782,"end":887,"declarations":[{"type":"VariableDeclarator","start":788,"end":886,"id":{"type":"Identifier","start":788,"end":802,"name":"optionalMaster"},"init":{"type":"CallExpression","start":805,"end":886,"callee":{"type":"MemberExpression","start":805,"end":852,"object":{"type":"Identifier","start":805,"end":834,"name":"TranslationMessagesFileReader"},"property":{"type":"Identifier","start":835,"end":852,"name":"masterFileContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":853,"end":875,"name":"optionalMasterFilePath"},{"type":"Identifier","start":877,"end":885,"name":"encoding"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":897,"end":1026,"argument":{"type":"CallExpression","start":904,"end":1025,"callee":{"type":"MemberExpression","start":904,"end":950,"object":{"type":"Identifier","start":904,"end":934,"name":"TranslationMessagesFileFactory"},"property":{"type":"Identifier","start":935,"end":950,"name":"fromFileContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":951,"end":961,"name":"i18nFormat"},{"type":"MemberExpression","start":963,"end":981,"object":{"type":"Identifier","start":963,"end":973,"name":"xmlContent"},"property":{"type":"Identifier","start":974,"end":981,"name":"content"},"computed":false,"optional":false},{"type":"Identifier","start":983,"end":987,"name":"path"},{"type":"MemberExpression","start":989,"end":1008,"object":{"type":"Identifier","start":989,"end":999,"name":"xmlContent"},"property":{"type":"Identifier","start":1000,"end":1008,"name":"encoding"},"computed":false,"optional":false},{"type":"Identifier","start":1010,"end":1024,"name":"optionalMaster"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1285,"end":1691,"static":true,"computed":false,"key":{"type":"Identifier","start":1292,"end":1313,"name":"fromUnknownFormatFile"},"kind":"method","value":{"type":"FunctionExpression","start":1313,"end":1691,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1314,"end":1318,"name":"path"},{"type":"Identifier","start":1320,"end":1328,"name":"encoding"},{"type":"Identifier","start":1330,"end":1352,"name":"optionalMasterFilePath"}],"body":{"type":"BlockStatement","start":1354,"end":1691,"body":[{"type":"VariableDeclaration","start":1365,"end":1429,"declarations":[{"type":"VariableDeclarator","start":1371,"end":1428,"id":{"type":"Identifier","start":1371,"end":1381,"name":"xmlContent"},"init":{"type":"CallExpression","start":1384,"end":1428,"callee":{"type":"MemberExpression","start":1384,"end":1412,"object":{"type":"Identifier","start":1384,"end":1393,"name":"XmlReader"},"property":{"type":"Identifier","start":1394,"end":1412,"name":"readXmlFileContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1413,"end":1417,"name":"path"},{"type":"Identifier","start":1419,"end":1427,"name":"encoding"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1439,"end":1544,"declarations":[{"type":"VariableDeclarator","start":1445,"end":1543,"id":{"type":"Identifier","start":1445,"end":1459,"name":"optionalMaster"},"init":{"type":"CallExpression","start":1462,"end":1543,"callee":{"type":"MemberExpression","start":1462,"end":1509,"object":{"type":"Identifier","start":1462,"end":1491,"name":"TranslationMessagesFileReader"},"property":{"type":"Identifier","start":1492,"end":1509,"name":"masterFileContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1510,"end":1532,"name":"optionalMasterFilePath"},{"type":"Identifier","start":1534,"end":1542,"name":"encoding"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":1554,"end":1684,"argument":{"type":"CallExpression","start":1561,"end":1683,"callee":{"type":"MemberExpression","start":1561,"end":1620,"object":{"type":"Identifier","start":1561,"end":1591,"name":"TranslationMessagesFileFactory"},"property":{"type":"Identifier","start":1592,"end":1620,"name":"fromUnknownFormatFileContent"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":1621,"end":1639,"object":{"type":"Identifier","start":1621,"end":1631,"name":"xmlContent"},"property":{"type":"Identifier","start":1632,"end":1639,"name":"content"},"computed":false,"optional":false},{"type":"Identifier","start":1641,"end":1645,"name":"path"},{"type":"MemberExpression","start":1647,"end":1666,"object":{"type":"Identifier","start":1647,"end":1657,"name":"xmlContent"},"property":{"type":"Identifier","start":1658,"end":1666,"name":"encoding"},"computed":false,"optional":false},{"type":"Identifier","start":1668,"end":1682,"name":"optionalMaster"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1883,"end":2348,"static":true,"computed":false,"key":{"type":"Identifier","start":1890,"end":1907,"name":"masterFileContent"},"kind":"method","value":{"type":"FunctionExpression","start":1907,"end":2348,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1908,"end":1930,"name":"optionalMasterFilePath"},{"type":"Identifier","start":1932,"end":1940,"name":"encoding"}],"body":{"type":"BlockStatement","start":1942,"end":2348,"body":[{"type":"IfStatement","start":1953,"end":2341,"test":{"type":"Identifier","start":1957,"end":1979,"name":"optionalMasterFilePath"},"consequent":{"type":"BlockStatement","start":1981,"end":2288,"body":[{"type":"VariableDeclaration","start":1996,"end":2084,"declarations":[{"type":"VariableDeclarator","start":2002,"end":2083,"id":{"type":"Identifier","start":2002,"end":2018,"name":"masterXmlContent"},"init":{"type":"CallExpression","start":2021,"end":2083,"callee":{"type":"MemberExpression","start":2021,"end":2049,"object":{"type":"Identifier","start":2021,"end":2030,"name":"XmlReader"},"property":{"type":"Identifier","start":2031,"end":2049,"name":"readXmlFileContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2050,"end":2072,"name":"optionalMasterFilePath"},{"type":"Identifier","start":2074,"end":2082,"name":"encoding"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":2098,"end":2277,"argument":{"type":"ObjectExpression","start":2105,"end":2276,"properties":[{"type":"Property","start":2124,"end":2160,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2124,"end":2134,"name":"xmlContent"},"value":{"type":"MemberExpression","start":2136,"end":2160,"object":{"type":"Identifier","start":2136,"end":2152,"name":"masterXmlContent"},"property":{"type":"Identifier","start":2153,"end":2160,"name":"content"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":2179,"end":2207,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2179,"end":2183,"name":"path"},"value":{"type":"Identifier","start":2185,"end":2207,"name":"optionalMasterFilePath"},"kind":"init"},{"type":"Property","start":2226,"end":2261,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2226,"end":2234,"name":"encoding"},"value":{"type":"MemberExpression","start":2236,"end":2261,"object":{"type":"Identifier","start":2236,"end":2252,"name":"masterXmlContent"},"property":{"type":"Identifier","start":2253,"end":2261,"name":"encoding"},"computed":false,"optional":false},"kind":"init"}]}}]},"alternate":{"type":"BlockStatement","start":2303,"end":2341,"body":[{"type":"ReturnStatement","start":2318,"end":2330,"argument":{"type":"Literal","start":2325,"end":2329,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":2691,"end":2869,"static":true,"computed":false,"key":{"type":"Identifier","start":2698,"end":2702,"name":"save"},"kind":"method","value":{"type":"FunctionExpression","start":2702,"end":2869,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2703,"end":2715,"name":"messagesFile"},{"type":"Identifier","start":2717,"end":2731,"name":"beautifyOutput"}],"body":{"type":"BlockStatement","start":2733,"end":2869,"body":[{"type":"ExpressionStatement","start":2744,"end":2862,"expression":{"type":"CallExpression","start":2744,"end":2861,"callee":{"type":"MemberExpression","start":2744,"end":2767,"object":{"type":"Identifier","start":2744,"end":2752,"name":"FileUtil"},"property":{"type":"Identifier","start":2753,"end":2767,"name":"replaceContent"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2768,"end":2791,"callee":{"type":"MemberExpression","start":2768,"end":2789,"object":{"type":"Identifier","start":2768,"end":2780,"name":"messagesFile"},"property":{"type":"Identifier","start":2781,"end":2789,"name":"filename"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"CallExpression","start":2793,"end":2835,"callee":{"type":"MemberExpression","start":2793,"end":2819,"object":{"type":"Identifier","start":2793,"end":2805,"name":"messagesFile"},"property":{"type":"Identifier","start":2806,"end":2819,"name":"editedContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2820,"end":2834,"name":"beautifyOutput"}],"optional":false},{"type":"CallExpression","start":2837,"end":2860,"callee":{"type":"MemberExpression","start":2837,"end":2858,"object":{"type":"Identifier","start":2837,"end":2849,"name":"messagesFile"},"property":{"type":"Identifier","start":2850,"end":2858,"name":"encoding"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRpb24tbWVzc2FnZXMtZmlsZS1yZWFkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy94bGlmZm1lcmdlL3NyYy94bGlmZm1lcmdlL3RyYW5zbGF0aW9uLW1lc3NhZ2VzLWZpbGUtcmVhZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gsT0FBTyxFQUEyQiw4QkFBOEIsRUFBQyxNQUFNLHNDQUFzQyxDQUFDO0FBQzlHLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QyxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBRXZDOztHQUVHO0FBQ0gsTUFBTSxPQUFPLDZCQUE2QjtJQUV0Qzs7Ozs7OztPQU9HO0lBQ0ksTUFBTSxDQUFDLFFBQVEsQ0FBQyxVQUFrQixFQUNsQixJQUFZLEVBQ1osUUFBd0IsRUFDeEIsc0JBQStCO1FBQ2xELE1BQU0sVUFBVSxHQUFHLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDaEUsTUFBTSxjQUFjLEdBQUcsNkJBQTZCLENBQUMsaUJBQWlCLENBQUMsc0JBQXNCLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDekcsT0FBTyw4QkFBOEIsQ0FBQyxlQUFlLENBQUMsVUFBVSxFQUFFLFVBQVUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLFVBQVUsQ0FBQyxRQUFRLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFDckksQ0FBQztJQUVEOzs7Ozs7T0FNRztJQUNJLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxJQUFZLEVBQ1osUUFBd0IsRUFDeEIsc0JBQStCO1FBQy9ELE1BQU0sVUFBVSxHQUFHLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDaEUsTUFBTSxjQUFjLEdBQUcsNkJBQTZCLENBQUMsaUJBQWlCLENBQUMsc0JBQXNCLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDekcsT0FBTyw4QkFBOEIsQ0FBQyw0QkFBNEIsQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxVQUFVLENBQUMsUUFBUSxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQ3RJLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNLLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxzQkFBOEIsRUFBRSxRQUF3QjtRQUVyRixJQUFJLHNCQUFzQixFQUFFO1lBQ3hCLE1BQU0sZ0JBQWdCLEdBQUcsU0FBUyxDQUFDLGtCQUFrQixDQUFDLHNCQUFzQixFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBQ3hGLE9BQU87Z0JBQ0gsVUFBVSxFQUFFLGdCQUFnQixDQUFDLE9BQU87Z0JBQ3BDLElBQUksRUFBRSxzQkFBc0I7Z0JBQzVCLFFBQVEsRUFBRSxnQkFBZ0IsQ0FBQyxRQUFRO2FBQ3RDLENBQUM7U0FDTDthQUFNO1lBQ0gsT0FBTyxJQUFJLENBQUM7U0FDZjtJQUNMLENBQUM7SUFFRDs7Ozs7OztPQU9HO0lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFzQyxFQUFFLGNBQXdCO1FBQy9FLFFBQVEsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxFQUFFLFlBQVksQ0FBQyxhQUFhLENBQUMsY0FBYyxDQUFDLEVBQUUsWUFBWSxDQUFDLFFBQVEsRUFBb0IsQ0FBQyxDQUFDO0lBQzVJLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IHJvb2JtIG9uIDIxLjAzLjIwMTcuXHJcbiAqL1xyXG5pbXBvcnQge0lUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSwgVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVGYWN0b3J5fSBmcm9tICdAbmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWInO1xyXG5pbXBvcnQge0ZpbGVVdGlsfSBmcm9tICcuLi9jb21tb24vZmlsZS11dGlsJztcclxuaW1wb3J0IHtYbWxSZWFkZXJ9IGZyb20gJy4veG1sLXJlYWRlcic7XHJcblxyXG4vKipcclxuICogSGVscGVyIGNsYXNzIHRvIHJlYWQgdHJhbnNsYXRpb24gZmlsZXMgZGVwZW5kaW5nIG9uIGZvcm1hdC5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZVJlYWRlciB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZWFkIGZpbGUgZnVuY3Rpb24sIHJlc3VsdCBkZXBlbmRzIG9uIGZvcm1hdCwgZWl0aGVyIFhsaWZmRmlsZSBvciBYbWJGaWxlLlxyXG4gICAgICogQHBhcmFtIGkxOG5Gb3JtYXQgZm9ybWF0XHJcbiAgICAgKiBAcGFyYW0gcGF0aCBwYXRoXHJcbiAgICAgKiBAcGFyYW0gZW5jb2RpbmcgZW5jb2RpbmdcclxuICAgICAqIEBwYXJhbSBvcHRpb25hbE1hc3RlckZpbGVQYXRoIG9wdGlvbmFsTWFzdGVyRmlsZVBhdGhcclxuICAgICAqIEByZXR1cm4gWGxpZmZGaWxlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZnJvbUZpbGUoaTE4bkZvcm1hdDogc3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoOiBzdHJpbmcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuY29kaW5nOiBCdWZmZXJFbmNvZGluZyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uYWxNYXN0ZXJGaWxlUGF0aD86IHN0cmluZyk6IElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSB7XHJcbiAgICAgICAgY29uc3QgeG1sQ29udGVudCA9IFhtbFJlYWRlci5yZWFkWG1sRmlsZUNvbnRlbnQocGF0aCwgZW5jb2RpbmcpO1xyXG4gICAgICAgIGNvbnN0IG9wdGlvbmFsTWFzdGVyID0gVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVSZWFkZXIubWFzdGVyRmlsZUNvbnRlbnQob3B0aW9uYWxNYXN0ZXJGaWxlUGF0aCwgZW5jb2RpbmcpO1xyXG4gICAgICAgIHJldHVybiBUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZUZhY3RvcnkuZnJvbUZpbGVDb250ZW50KGkxOG5Gb3JtYXQsIHhtbENvbnRlbnQuY29udGVudCwgcGF0aCwgeG1sQ29udGVudC5lbmNvZGluZywgb3B0aW9uYWxNYXN0ZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVhZCBmaWxlIGZ1bmN0aW9uLCByZXN1bHQgZGVwZW5kcyBvbiBmb3JtYXQsIGVpdGhlciBYbGlmZkZpbGUgb3IgWG1iRmlsZS5cclxuICAgICAqIEBwYXJhbSBwYXRoIHBhdGhcclxuICAgICAqIEBwYXJhbSBlbmNvZGluZyBlbmNvZGluZ1xyXG4gICAgICogQHBhcmFtIG9wdGlvbmFsTWFzdGVyRmlsZVBhdGggb3B0aW9uYWxNYXN0ZXJGaWxlUGF0aFxyXG4gICAgICogQHJldHVybiBYbGlmZkZpbGVcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBmcm9tVW5rbm93bkZvcm1hdEZpbGUocGF0aDogc3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5jb2Rpbmc6IEJ1ZmZlckVuY29kaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uYWxNYXN0ZXJGaWxlUGF0aD86IHN0cmluZyk6IElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSB7XHJcbiAgICAgICAgY29uc3QgeG1sQ29udGVudCA9IFhtbFJlYWRlci5yZWFkWG1sRmlsZUNvbnRlbnQocGF0aCwgZW5jb2RpbmcpO1xyXG4gICAgICAgIGNvbnN0IG9wdGlvbmFsTWFzdGVyID0gVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVSZWFkZXIubWFzdGVyRmlsZUNvbnRlbnQob3B0aW9uYWxNYXN0ZXJGaWxlUGF0aCwgZW5jb2RpbmcpO1xyXG4gICAgICAgIHJldHVybiBUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZUZhY3RvcnkuZnJvbVVua25vd25Gb3JtYXRGaWxlQ29udGVudCh4bWxDb250ZW50LmNvbnRlbnQsIHBhdGgsIHhtbENvbnRlbnQuZW5jb2RpbmcsIG9wdGlvbmFsTWFzdGVyKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlYWQgbWFzdGVyIHhtYiBmaWxlXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9uYWxNYXN0ZXJGaWxlUGF0aCBvcHRpb25hbE1hc3RlckZpbGVQYXRoXHJcbiAgICAgKiBAcGFyYW0gZW5jb2RpbmcgZW5jb2RpbmdcclxuICAgICAqIEByZXR1cm4gY29udGVudCBhbmQgZW5jb2Rpbmcgb2YgZmlsZVxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHN0YXRpYyBtYXN0ZXJGaWxlQ29udGVudChvcHRpb25hbE1hc3RlckZpbGVQYXRoOiBzdHJpbmcsIGVuY29kaW5nOiBCdWZmZXJFbmNvZGluZylcclxuICAgICAgICA6IHsgeG1sQ29udGVudDogc3RyaW5nLCBwYXRoOiBzdHJpbmcsIGVuY29kaW5nOiBCdWZmZXJFbmNvZGluZyB9IHtcclxuICAgICAgICBpZiAob3B0aW9uYWxNYXN0ZXJGaWxlUGF0aCkge1xyXG4gICAgICAgICAgICBjb25zdCBtYXN0ZXJYbWxDb250ZW50ID0gWG1sUmVhZGVyLnJlYWRYbWxGaWxlQ29udGVudChvcHRpb25hbE1hc3RlckZpbGVQYXRoLCBlbmNvZGluZyk7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICB4bWxDb250ZW50OiBtYXN0ZXJYbWxDb250ZW50LmNvbnRlbnQsXHJcbiAgICAgICAgICAgICAgICBwYXRoOiBvcHRpb25hbE1hc3RlckZpbGVQYXRoLFxyXG4gICAgICAgICAgICAgICAgZW5jb2Rpbmc6IG1hc3RlclhtbENvbnRlbnQuZW5jb2RpbmdcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTYXZlIGVkaXRlZCBmaWxlLlxyXG4gICAgICogQHBhcmFtIG1lc3NhZ2VzRmlsZSBtZXNzYWdlc0ZpbGVcclxuICAgICAqIEBwYXJhbSBiZWF1dGlmeU91dHB1dCBGbGFnIHdoZXRoZXIgdG8gdXNlIHByZXR0eS1kYXRhIHRvIGZvcm1hdCB0aGUgb3V0cHV0LlxyXG4gICAgICogWE1MU2VyaWFsaXplciBwcm9kdWNlcyBzb21lIGNvcnJlY3QgYnV0IHN0cmFuZ2VseSBmb3JtYXR0ZWQgb3V0cHV0LCB3aGljaCBwcmV0dHktZGF0YSBjYW4gY29ycmVjdC5cclxuICAgICAqIFNlZSBpc3N1ZSAjNjQgZm9yIGRldGFpbHMuXHJcbiAgICAgKiBEZWZhdWx0IGlzIGZhbHNlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHNhdmUobWVzc2FnZXNGaWxlOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUsIGJlYXV0aWZ5T3V0cHV0PzogYm9vbGVhbikge1xyXG4gICAgICAgIEZpbGVVdGlsLnJlcGxhY2VDb250ZW50KG1lc3NhZ2VzRmlsZS5maWxlbmFtZSgpLCBtZXNzYWdlc0ZpbGUuZWRpdGVkQ29udGVudChiZWF1dGlmeU91dHB1dCksIG1lc3NhZ2VzRmlsZS5lbmNvZGluZygpIGFzIEJ1ZmZlckVuY29kaW5nKTtcclxuICAgIH1cclxufVxyXG5cclxuIl19","start":2874,"end":9700}]},"code":"/**\r\n * Created by roobm on 21.03.2017.\r\n */\r\nimport { TranslationMessagesFileFactory } from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport { FileUtil } from '../common/file-util';\r\nimport { XmlReader } from './xml-reader';\r\n/**\r\n * Helper class to read translation files depending on format.\r\n */\r\nexport class TranslationMessagesFileReader {\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param i18nFormat format\r\n     * @param path path\r\n     * @param encoding encoding\r\n     * @param optionalMasterFilePath optionalMasterFilePath\r\n     * @return XliffFile\r\n     */\r\n    static fromFile(i18nFormat, path, encoding, optionalMasterFilePath) {\r\n        const xmlContent = XmlReader.readXmlFileContent(path, encoding);\r\n        const optionalMaster = TranslationMessagesFileReader.masterFileContent(optionalMasterFilePath, encoding);\r\n        return TranslationMessagesFileFactory.fromFileContent(i18nFormat, xmlContent.content, path, xmlContent.encoding, optionalMaster);\r\n    }\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param path path\r\n     * @param encoding encoding\r\n     * @param optionalMasterFilePath optionalMasterFilePath\r\n     * @return XliffFile\r\n     */\r\n    static fromUnknownFormatFile(path, encoding, optionalMasterFilePath) {\r\n        const xmlContent = XmlReader.readXmlFileContent(path, encoding);\r\n        const optionalMaster = TranslationMessagesFileReader.masterFileContent(optionalMasterFilePath, encoding);\r\n        return TranslationMessagesFileFactory.fromUnknownFormatFileContent(xmlContent.content, path, xmlContent.encoding, optionalMaster);\r\n    }\r\n    /**\r\n     * Read master xmb file\r\n     * @param optionalMasterFilePath optionalMasterFilePath\r\n     * @param encoding encoding\r\n     * @return content and encoding of file\r\n     */\r\n    static masterFileContent(optionalMasterFilePath, encoding) {\r\n        if (optionalMasterFilePath) {\r\n            const masterXmlContent = XmlReader.readXmlFileContent(optionalMasterFilePath, encoding);\r\n            return {\r\n                xmlContent: masterXmlContent.content,\r\n                path: optionalMasterFilePath,\r\n                encoding: masterXmlContent.encoding\r\n            };\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Save edited file.\r\n     * @param messagesFile messagesFile\r\n     * @param beautifyOutput Flag whether to use pretty-data to format the output.\r\n     * XMLSerializer produces some correct but strangely formatted output, which pretty-data can correct.\r\n     * See issue #64 for details.\r\n     * Default is false.\r\n     */\r\n    static save(messagesFile, beautifyOutput) {\r\n        FileUtil.replaceContent(messagesFile.filename(), messagesFile.editedContent(beautifyOutput), messagesFile.encoding());\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRpb24tbWVzc2FnZXMtZmlsZS1yZWFkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy94bGlmZm1lcmdlL3NyYy94bGlmZm1lcmdlL3RyYW5zbGF0aW9uLW1lc3NhZ2VzLWZpbGUtcmVhZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gsT0FBTyxFQUEyQiw4QkFBOEIsRUFBQyxNQUFNLHNDQUFzQyxDQUFDO0FBQzlHLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QyxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBRXZDOztHQUVHO0FBQ0gsTUFBTSxPQUFPLDZCQUE2QjtJQUV0Qzs7Ozs7OztPQU9HO0lBQ0ksTUFBTSxDQUFDLFFBQVEsQ0FBQyxVQUFrQixFQUNsQixJQUFZLEVBQ1osUUFBd0IsRUFDeEIsc0JBQStCO1FBQ2xELE1BQU0sVUFBVSxHQUFHLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDaEUsTUFBTSxjQUFjLEdBQUcsNkJBQTZCLENBQUMsaUJBQWlCLENBQUMsc0JBQXNCLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDekcsT0FBTyw4QkFBOEIsQ0FBQyxlQUFlLENBQUMsVUFBVSxFQUFFLFVBQVUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLFVBQVUsQ0FBQyxRQUFRLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFDckksQ0FBQztJQUVEOzs7Ozs7T0FNRztJQUNJLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxJQUFZLEVBQ1osUUFBd0IsRUFDeEIsc0JBQStCO1FBQy9ELE1BQU0sVUFBVSxHQUFHLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDaEUsTUFBTSxjQUFjLEdBQUcsNkJBQTZCLENBQUMsaUJBQWlCLENBQUMsc0JBQXNCLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDekcsT0FBTyw4QkFBOEIsQ0FBQyw0QkFBNEIsQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxVQUFVLENBQUMsUUFBUSxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQ3RJLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNLLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxzQkFBOEIsRUFBRSxRQUF3QjtRQUVyRixJQUFJLHNCQUFzQixFQUFFO1lBQ3hCLE1BQU0sZ0JBQWdCLEdBQUcsU0FBUyxDQUFDLGtCQUFrQixDQUFDLHNCQUFzQixFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBQ3hGLE9BQU87Z0JBQ0gsVUFBVSxFQUFFLGdCQUFnQixDQUFDLE9BQU87Z0JBQ3BDLElBQUksRUFBRSxzQkFBc0I7Z0JBQzVCLFFBQVEsRUFBRSxnQkFBZ0IsQ0FBQyxRQUFRO2FBQ3RDLENBQUM7U0FDTDthQUFNO1lBQ0gsT0FBTyxJQUFJLENBQUM7U0FDZjtJQUNMLENBQUM7SUFFRDs7Ozs7OztPQU9HO0lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFzQyxFQUFFLGNBQXdCO1FBQy9FLFFBQVEsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxFQUFFLFlBQVksQ0FBQyxhQUFhLENBQUMsY0FBYyxDQUFDLEVBQUUsWUFBWSxDQUFDLFFBQVEsRUFBb0IsQ0FBQyxDQUFDO0lBQzVJLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IHJvb2JtIG9uIDIxLjAzLjIwMTcuXHJcbiAqL1xyXG5pbXBvcnQge0lUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSwgVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVGYWN0b3J5fSBmcm9tICdAbmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWInO1xyXG5pbXBvcnQge0ZpbGVVdGlsfSBmcm9tICcuLi9jb21tb24vZmlsZS11dGlsJztcclxuaW1wb3J0IHtYbWxSZWFkZXJ9IGZyb20gJy4veG1sLXJlYWRlcic7XHJcblxyXG4vKipcclxuICogSGVscGVyIGNsYXNzIHRvIHJlYWQgdHJhbnNsYXRpb24gZmlsZXMgZGVwZW5kaW5nIG9uIGZvcm1hdC5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZVJlYWRlciB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZWFkIGZpbGUgZnVuY3Rpb24sIHJlc3VsdCBkZXBlbmRzIG9uIGZvcm1hdCwgZWl0aGVyIFhsaWZmRmlsZSBvciBYbWJGaWxlLlxyXG4gICAgICogQHBhcmFtIGkxOG5Gb3JtYXQgZm9ybWF0XHJcbiAgICAgKiBAcGFyYW0gcGF0aCBwYXRoXHJcbiAgICAgKiBAcGFyYW0gZW5jb2RpbmcgZW5jb2RpbmdcclxuICAgICAqIEBwYXJhbSBvcHRpb25hbE1hc3RlckZpbGVQYXRoIG9wdGlvbmFsTWFzdGVyRmlsZVBhdGhcclxuICAgICAqIEByZXR1cm4gWGxpZmZGaWxlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZnJvbUZpbGUoaTE4bkZvcm1hdDogc3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoOiBzdHJpbmcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuY29kaW5nOiBCdWZmZXJFbmNvZGluZyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uYWxNYXN0ZXJGaWxlUGF0aD86IHN0cmluZyk6IElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSB7XHJcbiAgICAgICAgY29uc3QgeG1sQ29udGVudCA9IFhtbFJlYWRlci5yZWFkWG1sRmlsZUNvbnRlbnQocGF0aCwgZW5jb2RpbmcpO1xyXG4gICAgICAgIGNvbnN0IG9wdGlvbmFsTWFzdGVyID0gVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVSZWFkZXIubWFzdGVyRmlsZUNvbnRlbnQob3B0aW9uYWxNYXN0ZXJGaWxlUGF0aCwgZW5jb2RpbmcpO1xyXG4gICAgICAgIHJldHVybiBUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZUZhY3RvcnkuZnJvbUZpbGVDb250ZW50KGkxOG5Gb3JtYXQsIHhtbENvbnRlbnQuY29udGVudCwgcGF0aCwgeG1sQ29udGVudC5lbmNvZGluZywgb3B0aW9uYWxNYXN0ZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVhZCBmaWxlIGZ1bmN0aW9uLCByZXN1bHQgZGVwZW5kcyBvbiBmb3JtYXQsIGVpdGhlciBYbGlmZkZpbGUgb3IgWG1iRmlsZS5cclxuICAgICAqIEBwYXJhbSBwYXRoIHBhdGhcclxuICAgICAqIEBwYXJhbSBlbmNvZGluZyBlbmNvZGluZ1xyXG4gICAgICogQHBhcmFtIG9wdGlvbmFsTWFzdGVyRmlsZVBhdGggb3B0aW9uYWxNYXN0ZXJGaWxlUGF0aFxyXG4gICAgICogQHJldHVybiBYbGlmZkZpbGVcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBmcm9tVW5rbm93bkZvcm1hdEZpbGUocGF0aDogc3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5jb2Rpbmc6IEJ1ZmZlckVuY29kaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uYWxNYXN0ZXJGaWxlUGF0aD86IHN0cmluZyk6IElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSB7XHJcbiAgICAgICAgY29uc3QgeG1sQ29udGVudCA9IFhtbFJlYWRlci5yZWFkWG1sRmlsZUNvbnRlbnQocGF0aCwgZW5jb2RpbmcpO1xyXG4gICAgICAgIGNvbnN0IG9wdGlvbmFsTWFzdGVyID0gVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVSZWFkZXIubWFzdGVyRmlsZUNvbnRlbnQob3B0aW9uYWxNYXN0ZXJGaWxlUGF0aCwgZW5jb2RpbmcpO1xyXG4gICAgICAgIHJldHVybiBUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZUZhY3RvcnkuZnJvbVVua25vd25Gb3JtYXRGaWxlQ29udGVudCh4bWxDb250ZW50LmNvbnRlbnQsIHBhdGgsIHhtbENvbnRlbnQuZW5jb2RpbmcsIG9wdGlvbmFsTWFzdGVyKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlYWQgbWFzdGVyIHhtYiBmaWxlXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9uYWxNYXN0ZXJGaWxlUGF0aCBvcHRpb25hbE1hc3RlckZpbGVQYXRoXHJcbiAgICAgKiBAcGFyYW0gZW5jb2RpbmcgZW5jb2RpbmdcclxuICAgICAqIEByZXR1cm4gY29udGVudCBhbmQgZW5jb2Rpbmcgb2YgZmlsZVxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHN0YXRpYyBtYXN0ZXJGaWxlQ29udGVudChvcHRpb25hbE1hc3RlckZpbGVQYXRoOiBzdHJpbmcsIGVuY29kaW5nOiBCdWZmZXJFbmNvZGluZylcclxuICAgICAgICA6IHsgeG1sQ29udGVudDogc3RyaW5nLCBwYXRoOiBzdHJpbmcsIGVuY29kaW5nOiBCdWZmZXJFbmNvZGluZyB9IHtcclxuICAgICAgICBpZiAob3B0aW9uYWxNYXN0ZXJGaWxlUGF0aCkge1xyXG4gICAgICAgICAgICBjb25zdCBtYXN0ZXJYbWxDb250ZW50ID0gWG1sUmVhZGVyLnJlYWRYbWxGaWxlQ29udGVudChvcHRpb25hbE1hc3RlckZpbGVQYXRoLCBlbmNvZGluZyk7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICB4bWxDb250ZW50OiBtYXN0ZXJYbWxDb250ZW50LmNvbnRlbnQsXHJcbiAgICAgICAgICAgICAgICBwYXRoOiBvcHRpb25hbE1hc3RlckZpbGVQYXRoLFxyXG4gICAgICAgICAgICAgICAgZW5jb2Rpbmc6IG1hc3RlclhtbENvbnRlbnQuZW5jb2RpbmdcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTYXZlIGVkaXRlZCBmaWxlLlxyXG4gICAgICogQHBhcmFtIG1lc3NhZ2VzRmlsZSBtZXNzYWdlc0ZpbGVcclxuICAgICAqIEBwYXJhbSBiZWF1dGlmeU91dHB1dCBGbGFnIHdoZXRoZXIgdG8gdXNlIHByZXR0eS1kYXRhIHRvIGZvcm1hdCB0aGUgb3V0cHV0LlxyXG4gICAgICogWE1MU2VyaWFsaXplciBwcm9kdWNlcyBzb21lIGNvcnJlY3QgYnV0IHN0cmFuZ2VseSBmb3JtYXR0ZWQgb3V0cHV0LCB3aGljaCBwcmV0dHktZGF0YSBjYW4gY29ycmVjdC5cclxuICAgICAqIFNlZSBpc3N1ZSAjNjQgZm9yIGRldGFpbHMuXHJcbiAgICAgKiBEZWZhdWx0IGlzIGZhbHNlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHNhdmUobWVzc2FnZXNGaWxlOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUsIGJlYXV0aWZ5T3V0cHV0PzogYm9vbGVhbikge1xyXG4gICAgICAgIEZpbGVVdGlsLnJlcGxhY2VDb250ZW50KG1lc3NhZ2VzRmlsZS5maWxlbmFtZSgpLCBtZXNzYWdlc0ZpbGUuZWRpdGVkQ29udGVudChiZWF1dGlmeU91dHB1dCksIG1lc3NhZ2VzRmlsZS5lbmNvZGluZygpIGFzIEJ1ZmZlckVuY29kaW5nKTtcclxuICAgIH1cclxufVxyXG5cclxuIl19","customTransformCache":false,"dependencies":["@ngx-i18nsupport/ngx-i18nsupport-lib","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\file-util.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\xml-reader.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\translation-messages-file-reader.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Created by roobm on 21.03.2017.\r\n */\r\nimport { TranslationMessagesFileFactory } from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport { FileUtil } from '../common/file-util';\r\nimport { XmlReader } from './xml-reader';\r\n/**\r\n * Helper class to read translation files depending on format.\r\n */\r\nexport class TranslationMessagesFileReader {\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param i18nFormat format\r\n     * @param path path\r\n     * @param encoding encoding\r\n     * @param optionalMasterFilePath optionalMasterFilePath\r\n     * @return XliffFile\r\n     */\r\n    static fromFile(i18nFormat, path, encoding, optionalMasterFilePath) {\r\n        const xmlContent = XmlReader.readXmlFileContent(path, encoding);\r\n        const optionalMaster = TranslationMessagesFileReader.masterFileContent(optionalMasterFilePath, encoding);\r\n        return TranslationMessagesFileFactory.fromFileContent(i18nFormat, xmlContent.content, path, xmlContent.encoding, optionalMaster);\r\n    }\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param path path\r\n     * @param encoding encoding\r\n     * @param optionalMasterFilePath optionalMasterFilePath\r\n     * @return XliffFile\r\n     */\r\n    static fromUnknownFormatFile(path, encoding, optionalMasterFilePath) {\r\n        const xmlContent = XmlReader.readXmlFileContent(path, encoding);\r\n        const optionalMaster = TranslationMessagesFileReader.masterFileContent(optionalMasterFilePath, encoding);\r\n        return TranslationMessagesFileFactory.fromUnknownFormatFileContent(xmlContent.content, path, xmlContent.encoding, optionalMaster);\r\n    }\r\n    /**\r\n     * Read master xmb file\r\n     * @param optionalMasterFilePath optionalMasterFilePath\r\n     * @param encoding encoding\r\n     * @return content and encoding of file\r\n     */\r\n    static masterFileContent(optionalMasterFilePath, encoding) {\r\n        if (optionalMasterFilePath) {\r\n            const masterXmlContent = XmlReader.readXmlFileContent(optionalMasterFilePath, encoding);\r\n            return {\r\n                xmlContent: masterXmlContent.content,\r\n                path: optionalMasterFilePath,\r\n                encoding: masterXmlContent.encoding\r\n            };\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Save edited file.\r\n     * @param messagesFile messagesFile\r\n     * @param beautifyOutput Flag whether to use pretty-data to format the output.\r\n     * XMLSerializer produces some correct but strangely formatted output, which pretty-data can correct.\r\n     * See issue #64 for details.\r\n     * Default is false.\r\n     */\r\n    static save(messagesFile, beautifyOutput) {\r\n        FileUtil.replaceContent(messagesFile.filename(), messagesFile.editedContent(beautifyOutput), messagesFile.encoding());\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRpb24tbWVzc2FnZXMtZmlsZS1yZWFkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy94bGlmZm1lcmdlL3NyYy94bGlmZm1lcmdlL3RyYW5zbGF0aW9uLW1lc3NhZ2VzLWZpbGUtcmVhZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gsT0FBTyxFQUEyQiw4QkFBOEIsRUFBQyxNQUFNLHNDQUFzQyxDQUFDO0FBQzlHLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QyxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBRXZDOztHQUVHO0FBQ0gsTUFBTSxPQUFPLDZCQUE2QjtJQUV0Qzs7Ozs7OztPQU9HO0lBQ0ksTUFBTSxDQUFDLFFBQVEsQ0FBQyxVQUFrQixFQUNsQixJQUFZLEVBQ1osUUFBd0IsRUFDeEIsc0JBQStCO1FBQ2xELE1BQU0sVUFBVSxHQUFHLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDaEUsTUFBTSxjQUFjLEdBQUcsNkJBQTZCLENBQUMsaUJBQWlCLENBQUMsc0JBQXNCLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDekcsT0FBTyw4QkFBOEIsQ0FBQyxlQUFlLENBQUMsVUFBVSxFQUFFLFVBQVUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLFVBQVUsQ0FBQyxRQUFRLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFDckksQ0FBQztJQUVEOzs7Ozs7T0FNRztJQUNJLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxJQUFZLEVBQ1osUUFBd0IsRUFDeEIsc0JBQStCO1FBQy9ELE1BQU0sVUFBVSxHQUFHLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDaEUsTUFBTSxjQUFjLEdBQUcsNkJBQTZCLENBQUMsaUJBQWlCLENBQUMsc0JBQXNCLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDekcsT0FBTyw4QkFBOEIsQ0FBQyw0QkFBNEIsQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxVQUFVLENBQUMsUUFBUSxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQ3RJLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNLLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxzQkFBOEIsRUFBRSxRQUF3QjtRQUVyRixJQUFJLHNCQUFzQixFQUFFO1lBQ3hCLE1BQU0sZ0JBQWdCLEdBQUcsU0FBUyxDQUFDLGtCQUFrQixDQUFDLHNCQUFzQixFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBQ3hGLE9BQU87Z0JBQ0gsVUFBVSxFQUFFLGdCQUFnQixDQUFDLE9BQU87Z0JBQ3BDLElBQUksRUFBRSxzQkFBc0I7Z0JBQzVCLFFBQVEsRUFBRSxnQkFBZ0IsQ0FBQyxRQUFRO2FBQ3RDLENBQUM7U0FDTDthQUFNO1lBQ0gsT0FBTyxJQUFJLENBQUM7U0FDZjtJQUNMLENBQUM7SUFFRDs7Ozs7OztPQU9HO0lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFzQyxFQUFFLGNBQXdCO1FBQy9FLFFBQVEsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxFQUFFLFlBQVksQ0FBQyxhQUFhLENBQUMsY0FBYyxDQUFDLEVBQUUsWUFBWSxDQUFDLFFBQVEsRUFBb0IsQ0FBQyxDQUFDO0lBQzVJLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IHJvb2JtIG9uIDIxLjAzLjIwMTcuXHJcbiAqL1xyXG5pbXBvcnQge0lUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSwgVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVGYWN0b3J5fSBmcm9tICdAbmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWInO1xyXG5pbXBvcnQge0ZpbGVVdGlsfSBmcm9tICcuLi9jb21tb24vZmlsZS11dGlsJztcclxuaW1wb3J0IHtYbWxSZWFkZXJ9IGZyb20gJy4veG1sLXJlYWRlcic7XHJcblxyXG4vKipcclxuICogSGVscGVyIGNsYXNzIHRvIHJlYWQgdHJhbnNsYXRpb24gZmlsZXMgZGVwZW5kaW5nIG9uIGZvcm1hdC5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZVJlYWRlciB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZWFkIGZpbGUgZnVuY3Rpb24sIHJlc3VsdCBkZXBlbmRzIG9uIGZvcm1hdCwgZWl0aGVyIFhsaWZmRmlsZSBvciBYbWJGaWxlLlxyXG4gICAgICogQHBhcmFtIGkxOG5Gb3JtYXQgZm9ybWF0XHJcbiAgICAgKiBAcGFyYW0gcGF0aCBwYXRoXHJcbiAgICAgKiBAcGFyYW0gZW5jb2RpbmcgZW5jb2RpbmdcclxuICAgICAqIEBwYXJhbSBvcHRpb25hbE1hc3RlckZpbGVQYXRoIG9wdGlvbmFsTWFzdGVyRmlsZVBhdGhcclxuICAgICAqIEByZXR1cm4gWGxpZmZGaWxlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZnJvbUZpbGUoaTE4bkZvcm1hdDogc3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoOiBzdHJpbmcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuY29kaW5nOiBCdWZmZXJFbmNvZGluZyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uYWxNYXN0ZXJGaWxlUGF0aD86IHN0cmluZyk6IElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSB7XHJcbiAgICAgICAgY29uc3QgeG1sQ29udGVudCA9IFhtbFJlYWRlci5yZWFkWG1sRmlsZUNvbnRlbnQocGF0aCwgZW5jb2RpbmcpO1xyXG4gICAgICAgIGNvbnN0IG9wdGlvbmFsTWFzdGVyID0gVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVSZWFkZXIubWFzdGVyRmlsZUNvbnRlbnQob3B0aW9uYWxNYXN0ZXJGaWxlUGF0aCwgZW5jb2RpbmcpO1xyXG4gICAgICAgIHJldHVybiBUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZUZhY3RvcnkuZnJvbUZpbGVDb250ZW50KGkxOG5Gb3JtYXQsIHhtbENvbnRlbnQuY29udGVudCwgcGF0aCwgeG1sQ29udGVudC5lbmNvZGluZywgb3B0aW9uYWxNYXN0ZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVhZCBmaWxlIGZ1bmN0aW9uLCByZXN1bHQgZGVwZW5kcyBvbiBmb3JtYXQsIGVpdGhlciBYbGlmZkZpbGUgb3IgWG1iRmlsZS5cclxuICAgICAqIEBwYXJhbSBwYXRoIHBhdGhcclxuICAgICAqIEBwYXJhbSBlbmNvZGluZyBlbmNvZGluZ1xyXG4gICAgICogQHBhcmFtIG9wdGlvbmFsTWFzdGVyRmlsZVBhdGggb3B0aW9uYWxNYXN0ZXJGaWxlUGF0aFxyXG4gICAgICogQHJldHVybiBYbGlmZkZpbGVcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBmcm9tVW5rbm93bkZvcm1hdEZpbGUocGF0aDogc3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5jb2Rpbmc6IEJ1ZmZlckVuY29kaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uYWxNYXN0ZXJGaWxlUGF0aD86IHN0cmluZyk6IElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSB7XHJcbiAgICAgICAgY29uc3QgeG1sQ29udGVudCA9IFhtbFJlYWRlci5yZWFkWG1sRmlsZUNvbnRlbnQocGF0aCwgZW5jb2RpbmcpO1xyXG4gICAgICAgIGNvbnN0IG9wdGlvbmFsTWFzdGVyID0gVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVSZWFkZXIubWFzdGVyRmlsZUNvbnRlbnQob3B0aW9uYWxNYXN0ZXJGaWxlUGF0aCwgZW5jb2RpbmcpO1xyXG4gICAgICAgIHJldHVybiBUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZUZhY3RvcnkuZnJvbVVua25vd25Gb3JtYXRGaWxlQ29udGVudCh4bWxDb250ZW50LmNvbnRlbnQsIHBhdGgsIHhtbENvbnRlbnQuZW5jb2RpbmcsIG9wdGlvbmFsTWFzdGVyKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlYWQgbWFzdGVyIHhtYiBmaWxlXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9uYWxNYXN0ZXJGaWxlUGF0aCBvcHRpb25hbE1hc3RlckZpbGVQYXRoXHJcbiAgICAgKiBAcGFyYW0gZW5jb2RpbmcgZW5jb2RpbmdcclxuICAgICAqIEByZXR1cm4gY29udGVudCBhbmQgZW5jb2Rpbmcgb2YgZmlsZVxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHN0YXRpYyBtYXN0ZXJGaWxlQ29udGVudChvcHRpb25hbE1hc3RlckZpbGVQYXRoOiBzdHJpbmcsIGVuY29kaW5nOiBCdWZmZXJFbmNvZGluZylcclxuICAgICAgICA6IHsgeG1sQ29udGVudDogc3RyaW5nLCBwYXRoOiBzdHJpbmcsIGVuY29kaW5nOiBCdWZmZXJFbmNvZGluZyB9IHtcclxuICAgICAgICBpZiAob3B0aW9uYWxNYXN0ZXJGaWxlUGF0aCkge1xyXG4gICAgICAgICAgICBjb25zdCBtYXN0ZXJYbWxDb250ZW50ID0gWG1sUmVhZGVyLnJlYWRYbWxGaWxlQ29udGVudChvcHRpb25hbE1hc3RlckZpbGVQYXRoLCBlbmNvZGluZyk7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICB4bWxDb250ZW50OiBtYXN0ZXJYbWxDb250ZW50LmNvbnRlbnQsXHJcbiAgICAgICAgICAgICAgICBwYXRoOiBvcHRpb25hbE1hc3RlckZpbGVQYXRoLFxyXG4gICAgICAgICAgICAgICAgZW5jb2Rpbmc6IG1hc3RlclhtbENvbnRlbnQuZW5jb2RpbmdcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTYXZlIGVkaXRlZCBmaWxlLlxyXG4gICAgICogQHBhcmFtIG1lc3NhZ2VzRmlsZSBtZXNzYWdlc0ZpbGVcclxuICAgICAqIEBwYXJhbSBiZWF1dGlmeU91dHB1dCBGbGFnIHdoZXRoZXIgdG8gdXNlIHByZXR0eS1kYXRhIHRvIGZvcm1hdCB0aGUgb3V0cHV0LlxyXG4gICAgICogWE1MU2VyaWFsaXplciBwcm9kdWNlcyBzb21lIGNvcnJlY3QgYnV0IHN0cmFuZ2VseSBmb3JtYXR0ZWQgb3V0cHV0LCB3aGljaCBwcmV0dHktZGF0YSBjYW4gY29ycmVjdC5cclxuICAgICAqIFNlZSBpc3N1ZSAjNjQgZm9yIGRldGFpbHMuXHJcbiAgICAgKiBEZWZhdWx0IGlzIGZhbHNlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHNhdmUobWVzc2FnZXNGaWxlOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUsIGJlYXV0aWZ5T3V0cHV0PzogYm9vbGVhbikge1xyXG4gICAgICAgIEZpbGVVdGlsLnJlcGxhY2VDb250ZW50KG1lc3NhZ2VzRmlsZS5maWxlbmFtZSgpLCBtZXNzYWdlc0ZpbGUuZWRpdGVkQ29udGVudChiZWF1dGlmeU91dHB1dCksIG1lc3NhZ2VzRmlsZS5lbmNvZGluZygpIGFzIEJ1ZmZlckVuY29kaW5nKTtcclxuICAgIH1cclxufVxyXG5cclxuIl19","originalSourcemap":{"version":3,"file":"translation-messages-file-reader.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/xliffmerge/translation-messages-file-reader.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,3,0],[7,0,3,7],[9,0,3,34],[39,0,3,64],[41,0,3,65],[47,0,3,71],[85,0,3,109],[86,0,3,110]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[17,0,4,16],[19,0,4,17],[25,0,4,23],[46,0,4,44],[47,0,4,45]],[[0,0,5,0],[7,0,5,7],[9,0,5,8],[18,0,5,17],[20,0,5,18],[26,0,5,24],[40,0,5,38],[41,0,5,39]],[[0,0,7,0]],[],[[3,0,9,3]],[[0,0,10,0],[6,0,10,6],[13,0,10,13],[42,0,10,42]],[[4,0,12,4]],[],[],[],[],[],[],[[7,0,19,7]],[[4,0,20,11],[10,0,20,17],[11,0,20,18],[19,0,20,26],[20,0,20,27],[30,0,20,45],[32,0,21,27],[36,0,21,39],[38,0,22,27],[46,0,22,51],[48,0,23,27],[70,0,23,58]],[[8,0,24,8],[14,0,24,14],[24,0,24,24],[27,0,24,27],[36,0,24,36],[37,0,24,37],[55,0,24,55],[56,0,24,56],[60,0,24,60],[62,0,24,62],[70,0,24,70],[71,0,24,71],[72,0,24,72]],[[8,0,25,8],[14,0,25,14],[28,0,25,28],[31,0,25,31],[60,0,25,60],[61,0,25,61],[78,0,25,78],[79,0,25,79],[101,0,25,101],[103,0,25,103],[111,0,25,111],[112,0,25,112],[113,0,25,113]],[[8,0,26,8],[15,0,26,15],[45,0,26,45],[46,0,26,46],[61,0,26,61],[62,0,26,62],[72,0,26,72],[74,0,26,74],[84,0,26,84],[85,0,26,85],[92,0,26,92],[94,0,26,94],[98,0,26,98],[100,0,26,100],[110,0,26,110],[111,0,26,111],[119,0,26,119],[121,0,26,121],[135,0,26,135],[136,0,26,136],[137,0,26,137]],[[4,0,27,4],[5,0,27,5]],[[4,0,29,4]],[],[],[],[],[],[[7,0,35,7]],[[4,0,36,11],[10,0,36,17],[11,0,36,18],[32,0,36,39],[33,0,36,40],[37,0,36,52],[39,0,37,40],[47,0,37,64],[49,0,38,40],[71,0,38,71]],[[8,0,39,8],[14,0,39,14],[24,0,39,24],[27,0,39,27],[36,0,39,36],[37,0,39,37],[55,0,39,55],[56,0,39,56],[60,0,39,60],[62,0,39,62],[70,0,39,70],[71,0,39,71],[72,0,39,72]],[[8,0,40,8],[14,0,40,14],[28,0,40,28],[31,0,40,31],[60,0,40,60],[61,0,40,61],[78,0,40,78],[79,0,40,79],[101,0,40,101],[103,0,40,103],[111,0,40,111],[112,0,40,112],[113,0,40,113]],[[8,0,41,8],[15,0,41,15],[45,0,41,45],[46,0,41,46],[74,0,41,74],[75,0,41,75],[85,0,41,85],[86,0,41,86],[93,0,41,93],[95,0,41,95],[99,0,41,99],[101,0,41,101],[111,0,41,111],[112,0,41,112],[120,0,41,120],[122,0,41,122],[136,0,41,136],[137,0,41,137],[138,0,41,138]],[[4,0,42,4],[5,0,42,5]],[[4,0,44,4]],[],[],[],[],[[7,0,49,7]],[[4,0,50,12],[10,0,50,18],[11,0,50,19],[28,0,50,36],[29,0,50,37],[51,0,50,67],[53,0,50,69],[61,0,50,93]],[[8,0,52,8],[12,0,52,12],[34,0,52,34],[36,0,52,36]],[[12,0,53,12],[18,0,53,18],[34,0,53,34],[37,0,53,37],[46,0,53,46],[47,0,53,47],[65,0,53,65],[66,0,53,66],[88,0,53,88],[90,0,53,90],[98,0,53,98],[99,0,53,99],[100,0,53,100]],[[12,0,54,12],[19,0,54,19]],[[16,0,55,16],[26,0,55,26],[28,0,55,28],[44,0,55,44],[45,0,55,45],[52,0,55,52]],[[16,0,56,16],[20,0,56,20],[22,0,56,22],[44,0,56,44]],[[16,0,57,16],[24,0,57,24],[26,0,57,26],[42,0,57,42],[43,0,57,43],[51,0,57,51]],[[13,0,58,13],[14,0,58,14]],[[9,0,59,9]],[[13,0,59,15]],[[12,0,60,12],[19,0,60,19],[23,0,60,23],[24,0,60,24]],[[9,0,61,9]],[[4,0,62,4],[5,0,62,5]],[[4,0,64,4]],[],[],[],[],[],[],[[7,0,71,7]],[[4,0,72,11],[10,0,72,17],[11,0,72,18],[15,0,72,22],[16,0,72,23],[28,0,72,61],[30,0,72,63],[44,0,72,87]],[[8,0,73,8],[16,0,73,16],[17,0,73,17],[31,0,73,31],[32,0,73,32],[44,0,73,44],[45,0,73,45],[53,0,73,53],[55,0,73,55],[57,0,73,57],[69,0,73,69],[70,0,73,70],[83,0,73,83],[84,0,73,84],[98,0,73,98],[99,0,73,99],[101,0,73,101],[113,0,73,113],[114,0,73,114],[122,0,73,122],[124,0,73,142],[125,0,73,143],[126,0,73,144]],[[4,0,74,4],[5,0,74,5]],[[1,0,75,1]]],"sourcesContent":["/**\r\n * Created by roobm on 21.03.2017.\r\n */\r\nimport {ITranslationMessagesFile, TranslationMessagesFileFactory} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {FileUtil} from '../common/file-util';\r\nimport {XmlReader} from './xml-reader';\r\n\r\n/**\r\n * Helper class to read translation files depending on format.\r\n */\r\nexport class TranslationMessagesFileReader {\r\n\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param i18nFormat format\r\n     * @param path path\r\n     * @param encoding encoding\r\n     * @param optionalMasterFilePath optionalMasterFilePath\r\n     * @return XliffFile\r\n     */\r\n    public static fromFile(i18nFormat: string,\r\n                           path: string,\r\n                           encoding: BufferEncoding,\r\n                           optionalMasterFilePath?: string): ITranslationMessagesFile {\r\n        const xmlContent = XmlReader.readXmlFileContent(path, encoding);\r\n        const optionalMaster = TranslationMessagesFileReader.masterFileContent(optionalMasterFilePath, encoding);\r\n        return TranslationMessagesFileFactory.fromFileContent(i18nFormat, xmlContent.content, path, xmlContent.encoding, optionalMaster);\r\n    }\r\n\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param path path\r\n     * @param encoding encoding\r\n     * @param optionalMasterFilePath optionalMasterFilePath\r\n     * @return XliffFile\r\n     */\r\n    public static fromUnknownFormatFile(path: string,\r\n                                        encoding: BufferEncoding,\r\n                                        optionalMasterFilePath?: string): ITranslationMessagesFile {\r\n        const xmlContent = XmlReader.readXmlFileContent(path, encoding);\r\n        const optionalMaster = TranslationMessagesFileReader.masterFileContent(optionalMasterFilePath, encoding);\r\n        return TranslationMessagesFileFactory.fromUnknownFormatFileContent(xmlContent.content, path, xmlContent.encoding, optionalMaster);\r\n    }\r\n\r\n    /**\r\n     * Read master xmb file\r\n     * @param optionalMasterFilePath optionalMasterFilePath\r\n     * @param encoding encoding\r\n     * @return content and encoding of file\r\n     */\r\n    private static masterFileContent(optionalMasterFilePath: string, encoding: BufferEncoding)\r\n        : { xmlContent: string, path: string, encoding: BufferEncoding } {\r\n        if (optionalMasterFilePath) {\r\n            const masterXmlContent = XmlReader.readXmlFileContent(optionalMasterFilePath, encoding);\r\n            return {\r\n                xmlContent: masterXmlContent.content,\r\n                path: optionalMasterFilePath,\r\n                encoding: masterXmlContent.encoding\r\n            };\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Save edited file.\r\n     * @param messagesFile messagesFile\r\n     * @param beautifyOutput Flag whether to use pretty-data to format the output.\r\n     * XMLSerializer produces some correct but strangely formatted output, which pretty-data can correct.\r\n     * See issue #64 for details.\r\n     * Default is false.\r\n     */\r\n    public static save(messagesFile: ITranslationMessagesFile, beautifyOutput?: boolean) {\r\n        FileUtil.replaceContent(messagesFile.filename(), messagesFile.editedContent(beautifyOutput), messagesFile.encoding() as BufferEncoding);\r\n    }\r\n}\r\n\r\n"]},"resolvedIds":{"@ngx-i18nsupport/ngx-i18nsupport-lib":{"external":true,"id":"@ngx-i18nsupport/ngx-i18nsupport-lib","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../common/file-util":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\file-util.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./xml-reader":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\xml-reader.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":24003,"body":[{"type":"ImportDeclaration","start":0,"end":30,"specifiers":[{"type":"ImportSpecifier","start":9,"end":15,"imported":{"type":"Identifier","start":9,"end":15,"name":"format"},"local":{"type":"Identifier","start":9,"end":15,"name":"format"}}],"source":{"type":"Literal","start":23,"end":29,"value":"util","raw":"'util'"}},{"type":"ImportDeclaration","start":32,"end":67,"specifiers":[{"type":"ImportNamespaceSpecifier","start":39,"end":51,"local":{"type":"Identifier","start":44,"end":51,"name":"request"}}],"source":{"type":"Literal","start":57,"end":66,"value":"request","raw":"'request'"}},{"type":"ImportDeclaration","start":69,"end":103,"specifiers":[{"type":"ImportSpecifier","start":78,"end":88,"imported":{"type":"Identifier","start":78,"end":88,"name":"Observable"},"local":{"type":"Identifier","start":78,"end":88,"name":"Observable"}}],"source":{"type":"Literal","start":96,"end":102,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":105,"end":153,"specifiers":[{"type":"ImportSpecifier","start":114,"end":116,"imported":{"type":"Identifier","start":114,"end":116,"name":"of"},"local":{"type":"Identifier","start":114,"end":116,"name":"of"}},{"type":"ImportSpecifier","start":118,"end":126,"imported":{"type":"Identifier","start":118,"end":126,"name":"forkJoin"},"local":{"type":"Identifier","start":118,"end":126,"name":"forkJoin"}},{"type":"ImportSpecifier","start":128,"end":138,"imported":{"type":"Identifier","start":128,"end":138,"name":"throwError"},"local":{"type":"Identifier","start":128,"end":138,"name":"throwError"}}],"source":{"type":"Literal","start":146,"end":152,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":155,"end":192,"specifiers":[{"type":"ImportSpecifier","start":164,"end":167,"imported":{"type":"Identifier","start":164,"end":167,"name":"map"},"local":{"type":"Identifier","start":164,"end":167,"name":"map"}}],"source":{"type":"Literal","start":175,"end":191,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"VariableDeclaration","start":194,"end":219,"declarations":[{"type":"VariableDeclarator","start":200,"end":218,"id":{"type":"Identifier","start":200,"end":212,"name":"MAX_SEGMENTS"},"init":{"type":"Literal","start":215,"end":218,"value":128,"raw":"128"}}],"kind":"const"},{"type":"ExportNamedDeclaration","start":221,"end":5983,"declaration":{"type":"ClassDeclaration","start":228,"end":5983,"id":{"type":"Identifier","start":234,"end":254,"name":"AutoTranslateService"},"superClass":null,"body":{"type":"ClassBody","start":255,"end":5983,"body":[{"type":"MethodDefinition","start":262,"end":420,"static":false,"computed":false,"key":{"type":"Identifier","start":262,"end":273,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":273,"end":420,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":274,"end":280,"name":"apiKey"}],"body":{"type":"BlockStatement","start":282,"end":420,"body":[{"type":"ExpressionStatement","start":293,"end":317,"expression":{"type":"AssignmentExpression","start":293,"end":316,"operator":"=","left":{"type":"MemberExpression","start":293,"end":306,"object":{"type":"ThisExpression","start":293,"end":297},"property":{"type":"Identifier","start":298,"end":306,"name":"_request"},"computed":false,"optional":false},"right":{"type":"Identifier","start":309,"end":316,"name":"request"}}},{"type":"ExpressionStatement","start":327,"end":349,"expression":{"type":"AssignmentExpression","start":327,"end":348,"operator":"=","left":{"type":"MemberExpression","start":327,"end":339,"object":{"type":"ThisExpression","start":327,"end":331},"property":{"type":"Identifier","start":332,"end":339,"name":"_apiKey"},"computed":false,"optional":false},"right":{"type":"Identifier","start":342,"end":348,"name":"apiKey"}}},{"type":"ExpressionStatement","start":359,"end":413,"expression":{"type":"AssignmentExpression","start":359,"end":412,"operator":"=","left":{"type":"MemberExpression","start":359,"end":372,"object":{"type":"ThisExpression","start":359,"end":363},"property":{"type":"Identifier","start":364,"end":372,"name":"_rootUrl"},"computed":false,"optional":false},"right":{"type":"Literal","start":375,"end":412,"value":"https://translation.googleapis.com/","raw":"'https://translation.googleapis.com/'"}}}]}}},{"type":"MethodDefinition","start":576,"end":901,"static":true,"computed":false,"key":{"type":"Identifier","start":583,"end":598,"name":"stripRegioncode"},"kind":"method","value":{"type":"FunctionExpression","start":598,"end":901,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":599,"end":603,"name":"lang"}],"body":{"type":"BlockStatement","start":605,"end":901,"body":[{"type":"VariableDeclaration","start":616,"end":653,"declarations":[{"type":"VariableDeclarator","start":622,"end":652,"id":{"type":"Identifier","start":622,"end":631,"name":"langLower"},"init":{"type":"CallExpression","start":634,"end":652,"callee":{"type":"MemberExpression","start":634,"end":650,"object":{"type":"Identifier","start":634,"end":638,"name":"lang"},"property":{"type":"Identifier","start":639,"end":650,"name":"toLowerCase"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ForStatement","start":663,"end":867,"init":{"type":"VariableDeclaration","start":668,"end":677,"declarations":[{"type":"VariableDeclarator","start":672,"end":677,"id":{"type":"Identifier","start":672,"end":673,"name":"i"},"init":{"type":"Literal","start":676,"end":677,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":679,"end":699,"left":{"type":"Identifier","start":679,"end":680,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":683,"end":699,"object":{"type":"Identifier","start":683,"end":692,"name":"langLower"},"property":{"type":"Identifier","start":693,"end":699,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":701,"end":704,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":701,"end":702,"name":"i"}},"body":{"type":"BlockStatement","start":706,"end":867,"body":[{"type":"VariableDeclaration","start":721,"end":751,"declarations":[{"type":"VariableDeclarator","start":727,"end":750,"id":{"type":"Identifier","start":727,"end":728,"name":"c"},"init":{"type":"CallExpression","start":731,"end":750,"callee":{"type":"MemberExpression","start":731,"end":747,"object":{"type":"Identifier","start":731,"end":740,"name":"langLower"},"property":{"type":"Identifier","start":741,"end":747,"name":"charAt"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":748,"end":749,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":765,"end":856,"test":{"type":"LogicalExpression","start":769,"end":787,"left":{"type":"BinaryExpression","start":769,"end":776,"left":{"type":"Identifier","start":769,"end":770,"name":"c"},"operator":"<","right":{"type":"Literal","start":773,"end":776,"value":"a","raw":"'a'"}},"operator":"||","right":{"type":"BinaryExpression","start":780,"end":787,"left":{"type":"Identifier","start":780,"end":781,"name":"c"},"operator":">","right":{"type":"Literal","start":784,"end":787,"value":"z","raw":"'z'"}}},"consequent":{"type":"BlockStatement","start":789,"end":856,"body":[{"type":"ReturnStatement","start":808,"end":841,"argument":{"type":"CallExpression","start":815,"end":840,"callee":{"type":"MemberExpression","start":815,"end":834,"object":{"type":"Identifier","start":815,"end":824,"name":"langLower"},"property":{"type":"Identifier","start":825,"end":834,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":835,"end":836,"value":0,"raw":"0"},{"type":"Identifier","start":838,"end":839,"name":"i"}],"optional":false}}]},"alternate":null}]}},{"type":"ReturnStatement","start":877,"end":894,"argument":{"type":"Identifier","start":884,"end":893,"name":"langLower"}}]}}},{"type":"MethodDefinition","start":995,"end":1053,"static":false,"computed":false,"key":{"type":"Identifier","start":995,"end":1004,"name":"setApiKey"},"kind":"method","value":{"type":"FunctionExpression","start":1004,"end":1053,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1005,"end":1011,"name":"apikey"}],"body":{"type":"BlockStatement","start":1013,"end":1053,"body":[{"type":"ExpressionStatement","start":1024,"end":1046,"expression":{"type":"AssignmentExpression","start":1024,"end":1045,"operator":"=","left":{"type":"MemberExpression","start":1024,"end":1036,"object":{"type":"ThisExpression","start":1024,"end":1028},"property":{"type":"Identifier","start":1029,"end":1036,"name":"_apiKey"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1039,"end":1045,"name":"apikey"}}}]}}},{"type":"MethodDefinition","start":1320,"end":2349,"static":false,"computed":false,"key":{"type":"Identifier","start":1320,"end":1344,"name":"translateMultipleStrings"},"kind":"method","value":{"type":"FunctionExpression","start":1344,"end":2349,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1345,"end":1353,"name":"messages"},{"type":"Identifier","start":1355,"end":1359,"name":"from"},{"type":"Identifier","start":1361,"end":1363,"name":"to"}],"body":{"type":"BlockStatement","start":1365,"end":2349,"body":[{"type":"IfStatement","start":1448,"end":1515,"test":{"type":"BinaryExpression","start":1452,"end":1473,"left":{"type":"MemberExpression","start":1452,"end":1467,"object":{"type":"Identifier","start":1452,"end":1460,"name":"messages"},"property":{"type":"Identifier","start":1461,"end":1467,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":1472,"end":1473,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":1475,"end":1515,"body":[{"type":"ReturnStatement","start":1490,"end":1504,"argument":{"type":"CallExpression","start":1497,"end":1503,"callee":{"type":"Identifier","start":1497,"end":1499,"name":"of"},"arguments":[{"type":"ArrayExpression","start":1500,"end":1502,"elements":[]}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":1525,"end":1624,"test":{"type":"UnaryExpression","start":1529,"end":1542,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":1530,"end":1542,"object":{"type":"ThisExpression","start":1530,"end":1534},"property":{"type":"Identifier","start":1535,"end":1542,"name":"_apiKey"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":1544,"end":1624,"body":[{"type":"ReturnStatement","start":1559,"end":1613,"argument":{"type":"CallExpression","start":1566,"end":1612,"callee":{"type":"Identifier","start":1566,"end":1576,"name":"throwError"},"arguments":[{"type":"Literal","start":1577,"end":1611,"value":"cannot autotranslate: no api key","raw":"'cannot autotranslate: no api key'"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":1634,"end":1760,"test":{"type":"LogicalExpression","start":1638,"end":1650,"left":{"type":"UnaryExpression","start":1638,"end":1643,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":1639,"end":1643,"name":"from"}},"operator":"||","right":{"type":"UnaryExpression","start":1647,"end":1650,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":1648,"end":1650,"name":"to"}}},"consequent":{"type":"BlockStatement","start":1652,"end":1760,"body":[{"type":"ReturnStatement","start":1667,"end":1749,"argument":{"type":"CallExpression","start":1674,"end":1748,"callee":{"type":"Identifier","start":1674,"end":1684,"name":"throwError"},"arguments":[{"type":"Literal","start":1685,"end":1747,"value":"cannot autotranslate: source and target language must be set","raw":"'cannot autotranslate: source and target language must be set'"}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":1770,"end":1820,"expression":{"type":"AssignmentExpression","start":1770,"end":1819,"operator":"=","left":{"type":"Identifier","start":1770,"end":1774,"name":"from"},"right":{"type":"CallExpression","start":1777,"end":1819,"callee":{"type":"MemberExpression","start":1777,"end":1813,"object":{"type":"Identifier","start":1777,"end":1797,"name":"AutoTranslateService"},"property":{"type":"Identifier","start":1798,"end":1813,"name":"stripRegioncode"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1814,"end":1818,"name":"from"}],"optional":false}}},{"type":"ExpressionStatement","start":1830,"end":1876,"expression":{"type":"AssignmentExpression","start":1830,"end":1875,"operator":"=","left":{"type":"Identifier","start":1830,"end":1832,"name":"to"},"right":{"type":"CallExpression","start":1835,"end":1875,"callee":{"type":"MemberExpression","start":1835,"end":1871,"object":{"type":"Identifier","start":1835,"end":1855,"name":"AutoTranslateService"},"property":{"type":"Identifier","start":1856,"end":1871,"name":"stripRegioncode"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1872,"end":1874,"name":"to"}],"optional":false}}},{"type":"VariableDeclaration","start":1886,"end":2072,"declarations":[{"type":"VariableDeclarator","start":1892,"end":2071,"id":{"type":"Identifier","start":1892,"end":1903,"name":"allRequests"},"init":{"type":"CallExpression","start":1906,"end":2071,"callee":{"type":"MemberExpression","start":1906,"end":1951,"object":{"type":"CallExpression","start":1906,"end":1947,"callee":{"type":"MemberExpression","start":1906,"end":1937,"object":{"type":"ThisExpression","start":1906,"end":1910},"property":{"type":"Identifier","start":1911,"end":1937,"name":"splitMessagesToGoogleLimit"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1938,"end":1946,"name":"messages"}],"optional":false},"property":{"type":"Identifier","start":1948,"end":1951,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":1952,"end":2070,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1953,"end":1968,"name":"partialMessages"}],"body":{"type":"BlockStatement","start":1973,"end":2070,"body":[{"type":"ReturnStatement","start":1988,"end":2059,"argument":{"type":"CallExpression","start":1995,"end":2058,"callee":{"type":"MemberExpression","start":1995,"end":2031,"object":{"type":"ThisExpression","start":1995,"end":1999},"property":{"type":"Identifier","start":2000,"end":2031,"name":"limitedTranslateMultipleStrings"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2032,"end":2047,"name":"partialMessages"},{"type":"Identifier","start":2049,"end":2053,"name":"from"},{"type":"Identifier","start":2055,"end":2057,"name":"to"}],"optional":false}}]}}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":2082,"end":2342,"argument":{"type":"CallExpression","start":2089,"end":2341,"callee":{"type":"MemberExpression","start":2089,"end":2115,"object":{"type":"CallExpression","start":2089,"end":2110,"callee":{"type":"Identifier","start":2089,"end":2097,"name":"forkJoin"},"arguments":[{"type":"Identifier","start":2098,"end":2109,"name":"allRequests"}],"optional":false},"property":{"type":"Identifier","start":2111,"end":2115,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2116,"end":2340,"callee":{"type":"Identifier","start":2116,"end":2119,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":2120,"end":2339,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2121,"end":2136,"name":"allTranslations"}],"body":{"type":"BlockStatement","start":2141,"end":2339,"body":[{"type":"VariableDeclaration","start":2156,"end":2169,"declarations":[{"type":"VariableDeclarator","start":2160,"end":2168,"id":{"type":"Identifier","start":2160,"end":2163,"name":"all"},"init":{"type":"ArrayExpression","start":2166,"end":2168,"elements":[]}}],"kind":"let"},{"type":"ForStatement","start":2183,"end":2303,"init":{"type":"VariableDeclaration","start":2188,"end":2197,"declarations":[{"type":"VariableDeclarator","start":2192,"end":2197,"id":{"type":"Identifier","start":2192,"end":2193,"name":"i"},"init":{"type":"Literal","start":2196,"end":2197,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":2199,"end":2225,"left":{"type":"Identifier","start":2199,"end":2200,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":2203,"end":2225,"object":{"type":"Identifier","start":2203,"end":2218,"name":"allTranslations"},"property":{"type":"Identifier","start":2219,"end":2225,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":2227,"end":2230,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":2227,"end":2228,"name":"i"}},"body":{"type":"BlockStatement","start":2232,"end":2303,"body":[{"type":"ExpressionStatement","start":2251,"end":2288,"expression":{"type":"AssignmentExpression","start":2251,"end":2287,"operator":"=","left":{"type":"Identifier","start":2251,"end":2254,"name":"all"},"right":{"type":"CallExpression","start":2257,"end":2287,"callee":{"type":"MemberExpression","start":2257,"end":2267,"object":{"type":"Identifier","start":2257,"end":2260,"name":"all"},"property":{"type":"Identifier","start":2261,"end":2267,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2268,"end":2286,"object":{"type":"Identifier","start":2268,"end":2283,"name":"allTranslations"},"property":{"type":"Identifier","start":2284,"end":2285,"name":"i"},"computed":true,"optional":false}],"optional":false}}}]}},{"type":"ReturnStatement","start":2317,"end":2328,"argument":{"type":"Identifier","start":2324,"end":2327,"name":"all"}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":2355,"end":3022,"static":false,"computed":false,"key":{"type":"Identifier","start":2355,"end":2381,"name":"splitMessagesToGoogleLimit"},"kind":"method","value":{"type":"FunctionExpression","start":2381,"end":3022,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2382,"end":2390,"name":"messages"}],"body":{"type":"BlockStatement","start":2392,"end":3022,"body":[{"type":"IfStatement","start":2403,"end":2484,"test":{"type":"BinaryExpression","start":2407,"end":2438,"left":{"type":"MemberExpression","start":2407,"end":2422,"object":{"type":"Identifier","start":2407,"end":2415,"name":"messages"},"property":{"type":"Identifier","start":2416,"end":2422,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Identifier","start":2426,"end":2438,"name":"MAX_SEGMENTS"}},"consequent":{"type":"BlockStatement","start":2440,"end":2484,"body":[{"type":"ReturnStatement","start":2455,"end":2473,"argument":{"type":"ArrayExpression","start":2462,"end":2472,"elements":[{"type":"Identifier","start":2463,"end":2471,"name":"messages"}]}}]},"alternate":null},{"type":"VariableDeclaration","start":2494,"end":2512,"declarations":[{"type":"VariableDeclarator","start":2500,"end":2511,"id":{"type":"Identifier","start":2500,"end":2506,"name":"result"},"init":{"type":"ArrayExpression","start":2509,"end":2511,"elements":[]}}],"kind":"const"},{"type":"VariableDeclaration","start":2522,"end":2546,"declarations":[{"type":"VariableDeclarator","start":2526,"end":2545,"id":{"type":"Identifier","start":2526,"end":2540,"name":"currentPackage"},"init":{"type":"ArrayExpression","start":2543,"end":2545,"elements":[]}}],"kind":"let"},{"type":"VariableDeclaration","start":2556,"end":2576,"declarations":[{"type":"VariableDeclarator","start":2560,"end":2575,"id":{"type":"Identifier","start":2560,"end":2571,"name":"packageSize"},"init":{"type":"Literal","start":2574,"end":2575,"value":0,"raw":"0"}}],"kind":"let"},{"type":"ForStatement","start":2586,"end":2896,"init":{"type":"VariableDeclaration","start":2591,"end":2600,"declarations":[{"type":"VariableDeclarator","start":2595,"end":2600,"id":{"type":"Identifier","start":2595,"end":2596,"name":"i"},"init":{"type":"Literal","start":2599,"end":2600,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":2602,"end":2621,"left":{"type":"Identifier","start":2602,"end":2603,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":2606,"end":2621,"object":{"type":"Identifier","start":2606,"end":2614,"name":"messages"},"property":{"type":"Identifier","start":2615,"end":2621,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":2623,"end":2626,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":2623,"end":2624,"name":"i"}},"body":{"type":"BlockStatement","start":2628,"end":2896,"body":[{"type":"ExpressionStatement","start":2643,"end":2676,"expression":{"type":"CallExpression","start":2643,"end":2675,"callee":{"type":"MemberExpression","start":2643,"end":2662,"object":{"type":"Identifier","start":2643,"end":2657,"name":"currentPackage"},"property":{"type":"Identifier","start":2658,"end":2662,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2663,"end":2674,"object":{"type":"Identifier","start":2663,"end":2671,"name":"messages"},"property":{"type":"Identifier","start":2672,"end":2673,"name":"i"},"computed":true,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":2690,"end":2704,"expression":{"type":"UpdateExpression","start":2690,"end":2703,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":2690,"end":2701,"name":"packageSize"}}},{"type":"IfStatement","start":2718,"end":2885,"test":{"type":"BinaryExpression","start":2722,"end":2749,"left":{"type":"Identifier","start":2722,"end":2733,"name":"packageSize"},"operator":">=","right":{"type":"Identifier","start":2737,"end":2749,"name":"MAX_SEGMENTS"}},"consequent":{"type":"BlockStatement","start":2751,"end":2885,"body":[{"type":"ExpressionStatement","start":2770,"end":2798,"expression":{"type":"CallExpression","start":2770,"end":2797,"callee":{"type":"MemberExpression","start":2770,"end":2781,"object":{"type":"Identifier","start":2770,"end":2776,"name":"result"},"property":{"type":"Identifier","start":2777,"end":2781,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2782,"end":2796,"name":"currentPackage"}],"optional":false}},{"type":"ExpressionStatement","start":2816,"end":2836,"expression":{"type":"AssignmentExpression","start":2816,"end":2835,"operator":"=","left":{"type":"Identifier","start":2816,"end":2830,"name":"currentPackage"},"right":{"type":"ArrayExpression","start":2833,"end":2835,"elements":[]}}},{"type":"ExpressionStatement","start":2854,"end":2870,"expression":{"type":"AssignmentExpression","start":2854,"end":2869,"operator":"=","left":{"type":"Identifier","start":2854,"end":2865,"name":"packageSize"},"right":{"type":"Literal","start":2868,"end":2869,"value":0,"raw":"0"}}}]},"alternate":null}]}},{"type":"IfStatement","start":2906,"end":2991,"test":{"type":"BinaryExpression","start":2910,"end":2935,"left":{"type":"MemberExpression","start":2910,"end":2931,"object":{"type":"Identifier","start":2910,"end":2924,"name":"currentPackage"},"property":{"type":"Identifier","start":2925,"end":2931,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":2934,"end":2935,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":2937,"end":2991,"body":[{"type":"ExpressionStatement","start":2952,"end":2980,"expression":{"type":"CallExpression","start":2952,"end":2979,"callee":{"type":"MemberExpression","start":2952,"end":2963,"object":{"type":"Identifier","start":2952,"end":2958,"name":"result"},"property":{"type":"Identifier","start":2959,"end":2963,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2964,"end":2978,"name":"currentPackage"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":3001,"end":3015,"argument":{"type":"Identifier","start":3008,"end":3014,"name":"result"}}]}}},{"type":"MethodDefinition","start":3290,"end":4717,"static":false,"computed":false,"key":{"type":"Identifier","start":3290,"end":3321,"name":"limitedTranslateMultipleStrings"},"kind":"method","value":{"type":"FunctionExpression","start":3321,"end":4717,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3322,"end":3330,"name":"messages"},{"type":"Identifier","start":3332,"end":3336,"name":"from"},{"type":"Identifier","start":3338,"end":3340,"name":"to"}],"body":{"type":"BlockStatement","start":3342,"end":4717,"body":[{"type":"VariableDeclaration","start":3353,"end":3434,"declarations":[{"type":"VariableDeclarator","start":3359,"end":3433,"id":{"type":"Identifier","start":3359,"end":3366,"name":"realUrl"},"init":{"type":"BinaryExpression","start":3369,"end":3433,"left":{"type":"BinaryExpression","start":3369,"end":3418,"left":{"type":"BinaryExpression","start":3369,"end":3408,"left":{"type":"MemberExpression","start":3369,"end":3382,"object":{"type":"ThisExpression","start":3369,"end":3373},"property":{"type":"Identifier","start":3374,"end":3382,"name":"_rootUrl"},"computed":false,"optional":false},"operator":"+","right":{"type":"Literal","start":3385,"end":3408,"value":"language/translate/v2","raw":"'language/translate/v2'"}},"operator":"+","right":{"type":"Literal","start":3411,"end":3418,"value":"?key=","raw":"'?key='"}},"operator":"+","right":{"type":"MemberExpression","start":3421,"end":3433,"object":{"type":"ThisExpression","start":3421,"end":3425},"property":{"type":"Identifier","start":3426,"end":3433,"name":"_apiKey"},"computed":false,"optional":false}}}],"kind":"const"},{"type":"VariableDeclaration","start":3444,"end":3560,"declarations":[{"type":"VariableDeclarator","start":3450,"end":3559,"id":{"type":"Identifier","start":3450,"end":3466,"name":"translateRequest"},"init":{"type":"ObjectExpression","start":3469,"end":3559,"properties":[{"type":"Property","start":3484,"end":3495,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":3484,"end":3485,"name":"q"},"value":{"type":"Identifier","start":3487,"end":3495,"name":"messages"},"kind":"init"},{"type":"Property","start":3510,"end":3520,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":3510,"end":3516,"name":"target"},"value":{"type":"Identifier","start":3518,"end":3520,"name":"to"},"kind":"init"},{"type":"Property","start":3535,"end":3547,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":3535,"end":3541,"name":"source"},"value":{"type":"Identifier","start":3543,"end":3547,"name":"from"},"kind":"init"}]}}],"kind":"const"},{"type":"VariableDeclaration","start":3570,"end":3785,"declarations":[{"type":"VariableDeclarator","start":3576,"end":3784,"id":{"type":"Identifier","start":3576,"end":3583,"name":"options"},"init":{"type":"ObjectExpression","start":3586,"end":3784,"properties":[{"type":"Property","start":3601,"end":3613,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":3601,"end":3604,"name":"url"},"value":{"type":"Identifier","start":3606,"end":3613,"name":"realUrl"},"kind":"init"},{"type":"Property","start":3628,"end":3650,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":3628,"end":3632,"name":"body"},"value":{"type":"Identifier","start":3634,"end":3650,"name":"translateRequest"},"kind":"init"},{"type":"Property","start":3665,"end":3675,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":3665,"end":3669,"name":"json"},"value":{"type":"Literal","start":3671,"end":3675,"value":true,"raw":"true"},"kind":"init"}]}}],"kind":"const"},{"type":"ReturnStatement","start":3795,"end":4710,"argument":{"type":"CallExpression","start":3802,"end":4709,"callee":{"type":"MemberExpression","start":3802,"end":3834,"object":{"type":"CallExpression","start":3802,"end":3829,"callee":{"type":"MemberExpression","start":3802,"end":3811,"object":{"type":"ThisExpression","start":3802,"end":3806},"property":{"type":"Identifier","start":3807,"end":3811,"name":"post"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3812,"end":3819,"name":"realUrl"},{"type":"Identifier","start":3821,"end":3828,"name":"options"}],"optional":false},"property":{"type":"Identifier","start":3830,"end":3834,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3835,"end":4708,"callee":{"type":"Identifier","start":3835,"end":3838,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":3839,"end":4707,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3840,"end":3844,"name":"data"}],"body":{"type":"BlockStatement","start":3849,"end":4707,"body":[{"type":"VariableDeclaration","start":3864,"end":3887,"declarations":[{"type":"VariableDeclarator","start":3870,"end":3886,"id":{"type":"Identifier","start":3870,"end":3874,"name":"body"},"init":{"type":"MemberExpression","start":3877,"end":3886,"object":{"type":"Identifier","start":3877,"end":3881,"name":"data"},"property":{"type":"Identifier","start":3882,"end":3886,"name":"body"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3901,"end":3984,"test":{"type":"UnaryExpression","start":3905,"end":3910,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":3906,"end":3910,"name":"body"}},"consequent":{"type":"BlockStatement","start":3912,"end":3984,"body":[{"type":"ThrowStatement","start":3931,"end":3969,"argument":{"type":"NewExpression","start":3937,"end":3968,"callee":{"type":"Identifier","start":3941,"end":3946,"name":"Error"},"arguments":[{"type":"Literal","start":3947,"end":3967,"value":"no result received","raw":"'no result received'"}]}}]},"alternate":null},{"type":"IfStatement","start":3998,"end":4525,"test":{"type":"MemberExpression","start":4002,"end":4012,"object":{"type":"Identifier","start":4002,"end":4006,"name":"body"},"property":{"type":"Identifier","start":4007,"end":4012,"name":"error"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":4014,"end":4525,"body":[{"type":"IfStatement","start":4033,"end":4510,"test":{"type":"BinaryExpression","start":4037,"end":4060,"left":{"type":"MemberExpression","start":4037,"end":4052,"object":{"type":"MemberExpression","start":4037,"end":4047,"object":{"type":"Identifier","start":4037,"end":4041,"name":"body"},"property":{"type":"Identifier","start":4042,"end":4047,"name":"error"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4048,"end":4052,"name":"code"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":4057,"end":4060,"value":400,"raw":"400"}},"consequent":{"type":"BlockStatement","start":4062,"end":4368,"body":[{"type":"IfStatement","start":4085,"end":4260,"test":{"type":"BinaryExpression","start":4089,"end":4127,"left":{"type":"MemberExpression","start":4089,"end":4107,"object":{"type":"MemberExpression","start":4089,"end":4099,"object":{"type":"Identifier","start":4089,"end":4093,"name":"body"},"property":{"type":"Identifier","start":4094,"end":4099,"name":"error"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4100,"end":4107,"name":"message"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":4112,"end":4127,"value":"Invalid Value","raw":"'Invalid Value'"}},"consequent":{"type":"BlockStatement","start":4129,"end":4260,"body":[{"type":"ThrowStatement","start":4156,"end":4237,"argument":{"type":"NewExpression","start":4162,"end":4236,"callee":{"type":"Identifier","start":4166,"end":4171,"name":"Error"},"arguments":[{"type":"CallExpression","start":4172,"end":4235,"callee":{"type":"Identifier","start":4172,"end":4178,"name":"format"},"arguments":[{"type":"Literal","start":4179,"end":4224,"value":"Translation from \"%s\" to \"%s\" not supported","raw":"'Translation from \"%s\" to \"%s\" not supported'"},{"type":"Identifier","start":4226,"end":4230,"name":"from"},{"type":"Identifier","start":4232,"end":4234,"name":"to"}],"optional":false}]}}]},"alternate":null},{"type":"ThrowStatement","start":4282,"end":4349,"argument":{"type":"NewExpression","start":4288,"end":4348,"callee":{"type":"Identifier","start":4292,"end":4297,"name":"Error"},"arguments":[{"type":"CallExpression","start":4298,"end":4347,"callee":{"type":"Identifier","start":4298,"end":4304,"name":"format"},"arguments":[{"type":"Literal","start":4305,"end":4326,"value":"Invalid request: %s","raw":"'Invalid request: %s'"},{"type":"MemberExpression","start":4328,"end":4346,"object":{"type":"MemberExpression","start":4328,"end":4338,"object":{"type":"Identifier","start":4328,"end":4332,"name":"body"},"property":{"type":"Identifier","start":4333,"end":4338,"name":"error"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4339,"end":4346,"name":"message"},"computed":false,"optional":false}],"optional":false}]}}]},"alternate":{"type":"BlockStatement","start":4391,"end":4510,"body":[{"type":"ThrowStatement","start":4414,"end":4491,"argument":{"type":"NewExpression","start":4420,"end":4490,"callee":{"type":"Identifier","start":4424,"end":4429,"name":"Error"},"arguments":[{"type":"CallExpression","start":4430,"end":4489,"callee":{"type":"Identifier","start":4430,"end":4436,"name":"format"},"arguments":[{"type":"Literal","start":4437,"end":4451,"value":"Error %s: %s","raw":"'Error %s: %s'"},{"type":"MemberExpression","start":4453,"end":4468,"object":{"type":"MemberExpression","start":4453,"end":4463,"object":{"type":"Identifier","start":4453,"end":4457,"name":"body"},"property":{"type":"Identifier","start":4458,"end":4463,"name":"error"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4464,"end":4468,"name":"code"},"computed":false,"optional":false},{"type":"MemberExpression","start":4470,"end":4488,"object":{"type":"MemberExpression","start":4470,"end":4480,"object":{"type":"Identifier","start":4470,"end":4474,"name":"body"},"property":{"type":"Identifier","start":4475,"end":4480,"name":"error"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4481,"end":4488,"name":"message"},"computed":false,"optional":false}],"optional":false}]}}]}}]},"alternate":null},{"type":"VariableDeclaration","start":4539,"end":4564,"declarations":[{"type":"VariableDeclarator","start":4545,"end":4563,"id":{"type":"Identifier","start":4545,"end":4551,"name":"result"},"init":{"type":"MemberExpression","start":4554,"end":4563,"object":{"type":"Identifier","start":4554,"end":4558,"name":"body"},"property":{"type":"Identifier","start":4559,"end":4563,"name":"data"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":4578,"end":4696,"argument":{"type":"CallExpression","start":4585,"end":4695,"callee":{"type":"MemberExpression","start":4585,"end":4608,"object":{"type":"MemberExpression","start":4585,"end":4604,"object":{"type":"Identifier","start":4585,"end":4591,"name":"result"},"property":{"type":"Identifier","start":4592,"end":4604,"name":"translations"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4605,"end":4608,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":4609,"end":4694,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4610,"end":4621,"name":"translation"}],"body":{"type":"BlockStatement","start":4626,"end":4694,"body":[{"type":"ReturnStatement","start":4645,"end":4679,"argument":{"type":"MemberExpression","start":4652,"end":4678,"object":{"type":"Identifier","start":4652,"end":4663,"name":"translation"},"property":{"type":"Identifier","start":4664,"end":4678,"name":"translatedText"},"computed":false,"optional":false}}]}}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":4879,"end":5004,"static":false,"computed":false,"key":{"type":"Identifier","start":4879,"end":4883,"name":"post"},"kind":"method","value":{"type":"FunctionExpression","start":4883,"end":5004,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4884,"end":4887,"name":"uri"},{"type":"Identifier","start":4889,"end":4896,"name":"options"}],"body":{"type":"BlockStatement","start":4898,"end":5004,"body":[{"type":"ReturnStatement","start":4909,"end":4997,"argument":{"type":"CallExpression","start":4916,"end":4996,"callee":{"type":"MemberExpression","start":4916,"end":4932,"object":{"type":"MemberExpression","start":4916,"end":4926,"object":{"type":"ThisExpression","start":4916,"end":4920},"property":{"type":"Identifier","start":4921,"end":4926,"name":"_call"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4927,"end":4932,"name":"apply"},"computed":false,"optional":false},"arguments":[{"type":"ThisExpression","start":4933,"end":4937},{"type":"CallExpression","start":4939,"end":4995,"callee":{"type":"MemberExpression","start":4939,"end":4948,"object":{"type":"ArrayExpression","start":4939,"end":4941,"elements":[]},"property":{"type":"Identifier","start":4942,"end":4948,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4949,"end":4955,"value":"post","raw":"'post'"},{"type":"Identifier","start":4957,"end":4960,"name":"uri"},{"type":"CallExpression","start":4962,"end":4994,"callee":{"type":"MemberExpression","start":4962,"end":4975,"object":{"type":"Identifier","start":4962,"end":4968,"name":"Object"},"property":{"type":"Identifier","start":4969,"end":4975,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":4976,"end":4978,"properties":[]},{"type":"LogicalExpression","start":4980,"end":4993,"left":{"type":"Identifier","start":4980,"end":4987,"name":"options"},"operator":"||","right":{"type":"ObjectExpression","start":4991,"end":4993,"properties":[]}}],"optional":false}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":5215,"end":5980,"static":false,"computed":false,"key":{"type":"Identifier","start":5215,"end":5220,"name":"_call"},"kind":"method","value":{"type":"FunctionExpression","start":5220,"end":5980,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5221,"end":5227,"name":"method"},{"type":"Identifier","start":5229,"end":5232,"name":"uri"},{"type":"Identifier","start":5234,"end":5241,"name":"options"}],"body":{"type":"BlockStatement","start":5243,"end":5980,"body":[{"type":"ReturnStatement","start":5254,"end":5973,"argument":{"type":"CallExpression","start":5261,"end":5972,"callee":{"type":"MemberExpression","start":5261,"end":5278,"object":{"type":"Identifier","start":5261,"end":5271,"name":"Observable"},"property":{"type":"Identifier","start":5272,"end":5278,"name":"create"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":5279,"end":5971,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5280,"end":5288,"name":"observer"}],"body":{"type":"BlockStatement","start":5293,"end":5971,"body":[{"type":"VariableDeclaration","start":5343,"end":5736,"declarations":[{"type":"VariableDeclarator","start":5349,"end":5735,"id":{"type":"Identifier","start":5349,"end":5355,"name":"params"},"init":{"type":"CallExpression","start":5358,"end":5735,"callee":{"type":"MemberExpression","start":5358,"end":5367,"object":{"type":"ArrayExpression","start":5358,"end":5360,"elements":[]},"property":{"type":"Identifier","start":5361,"end":5367,"name":"concat"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5368,"end":5371,"name":"uri"},{"type":"CallExpression","start":5373,"end":5405,"callee":{"type":"MemberExpression","start":5373,"end":5386,"object":{"type":"Identifier","start":5373,"end":5379,"name":"Object"},"property":{"type":"Identifier","start":5380,"end":5386,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":5387,"end":5389,"properties":[]},{"type":"LogicalExpression","start":5391,"end":5404,"left":{"type":"Identifier","start":5391,"end":5398,"name":"options"},"operator":"||","right":{"type":"ObjectExpression","start":5402,"end":5404,"properties":[]}}],"optional":false},{"type":"ArrowFunctionExpression","start":5407,"end":5734,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5408,"end":5413,"name":"error"},{"type":"Identifier","start":5415,"end":5423,"name":"response"},{"type":"Identifier","start":5425,"end":5429,"name":"body"}],"body":{"type":"BlockStatement","start":5434,"end":5734,"body":[{"type":"IfStatement","start":5453,"end":5535,"test":{"type":"Identifier","start":5457,"end":5462,"name":"error"},"consequent":{"type":"BlockStatement","start":5464,"end":5535,"body":[{"type":"ReturnStatement","start":5487,"end":5516,"argument":{"type":"CallExpression","start":5494,"end":5515,"callee":{"type":"MemberExpression","start":5494,"end":5508,"object":{"type":"Identifier","start":5494,"end":5502,"name":"observer"},"property":{"type":"Identifier","start":5503,"end":5508,"name":"error"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5509,"end":5514,"name":"error"}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":5553,"end":5681,"expression":{"type":"CallExpression","start":5553,"end":5680,"callee":{"type":"MemberExpression","start":5553,"end":5566,"object":{"type":"Identifier","start":5553,"end":5561,"name":"observer"},"property":{"type":"Identifier","start":5562,"end":5566,"name":"next"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":5567,"end":5679,"callee":{"type":"MemberExpression","start":5567,"end":5580,"object":{"type":"Identifier","start":5567,"end":5573,"name":"Object"},"property":{"type":"Identifier","start":5574,"end":5580,"name":"assign"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":5581,"end":5583,"properties":[]},{"type":"ObjectExpression","start":5585,"end":5678,"properties":[{"type":"Property","start":5608,"end":5626,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":5608,"end":5616,"name":"response"},"value":{"type":"Identifier","start":5618,"end":5626,"name":"response"},"kind":"init"},{"type":"Property","start":5649,"end":5659,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":5649,"end":5653,"name":"body"},"value":{"type":"Identifier","start":5655,"end":5659,"name":"body"},"kind":"init"}]}],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":5699,"end":5719,"expression":{"type":"CallExpression","start":5699,"end":5718,"callee":{"type":"MemberExpression","start":5699,"end":5716,"object":{"type":"Identifier","start":5699,"end":5707,"name":"observer"},"property":{"type":"Identifier","start":5708,"end":5716,"name":"complete"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}],"optional":false}}],"kind":"const"},{"type":"TryStatement","start":5787,"end":5960,"block":{"type":"BlockStatement","start":5791,"end":5876,"body":[{"type":"ExpressionStatement","start":5810,"end":5861,"expression":{"type":"CallExpression","start":5810,"end":5860,"callee":{"type":"MemberExpression","start":5810,"end":5837,"object":{"type":"MemberExpression","start":5810,"end":5831,"object":{"type":"MemberExpression","start":5810,"end":5823,"object":{"type":"ThisExpression","start":5810,"end":5814},"property":{"type":"Identifier","start":5815,"end":5823,"name":"_request"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5824,"end":5830,"name":"method"},"computed":true,"optional":false},"property":{"type":"Identifier","start":5832,"end":5837,"name":"apply"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":5838,"end":5851,"object":{"type":"ThisExpression","start":5838,"end":5842},"property":{"type":"Identifier","start":5843,"end":5851,"name":"_request"},"computed":false,"optional":false},{"type":"Identifier","start":5853,"end":5859,"name":"params"}],"optional":false}}]},"handler":{"type":"CatchClause","start":5890,"end":5960,"param":{"type":"Identifier","start":5897,"end":5902,"name":"error"},"body":{"type":"BlockStatement","start":5904,"end":5960,"body":[{"type":"ExpressionStatement","start":5923,"end":5945,"expression":{"type":"CallExpression","start":5923,"end":5944,"callee":{"type":"MemberExpression","start":5923,"end":5937,"object":{"type":"Identifier","start":5923,"end":5931,"name":"observer"},"property":{"type":"Identifier","start":5932,"end":5937,"name":"error"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5938,"end":5943,"name":"error"}],"optional":false}}]}},"finalizer":null}]}}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":5985,"end":24003}]},"code":"import { format } from 'util';\r\nimport * as request from 'request';\r\nimport { Observable } from 'rxjs';\r\nimport { of, forkJoin, throwError } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nconst MAX_SEGMENTS = 128;\r\nexport class AutoTranslateService {\r\n    constructor(apiKey) {\r\n        this._request = request;\r\n        this._apiKey = apiKey;\r\n        this._rootUrl = 'https://translation.googleapis.com/';\r\n    }\r\n    /**\r\n     * Strip region code and convert to lower\r\n     * @param lang lang\r\n     * @return lang without region code and in lower case.\r\n     */\r\n    static stripRegioncode(lang) {\r\n        const langLower = lang.toLowerCase();\r\n        for (let i = 0; i < langLower.length; i++) {\r\n            const c = langLower.charAt(i);\r\n            if (c < 'a' || c > 'z') {\r\n                return langLower.substring(0, i);\r\n            }\r\n        }\r\n        return langLower;\r\n    }\r\n    /**\r\n     * Change API key (just for tests).\r\n     * @param apikey apikey\r\n     */\r\n    setApiKey(apikey) {\r\n        this._apiKey = apikey;\r\n    }\r\n    /**\r\n     * Translate an array of messages at once.\r\n     * @param messages the messages to be translated\r\n     * @param from source language code\r\n     * @param to target language code\r\n     * @return Observable with translated messages or error\r\n     */\r\n    translateMultipleStrings(messages, from, to) {\r\n        // empty array needs no translation and always works ... (#78)\r\n        if (messages.length === 0) {\r\n            return of([]);\r\n        }\r\n        if (!this._apiKey) {\r\n            return throwError('cannot autotranslate: no api key');\r\n        }\r\n        if (!from || !to) {\r\n            return throwError('cannot autotranslate: source and target language must be set');\r\n        }\r\n        from = AutoTranslateService.stripRegioncode(from);\r\n        to = AutoTranslateService.stripRegioncode(to);\r\n        const allRequests = this.splitMessagesToGoogleLimit(messages).map((partialMessages) => {\r\n            return this.limitedTranslateMultipleStrings(partialMessages, from, to);\r\n        });\r\n        return forkJoin(allRequests).pipe(map((allTranslations) => {\r\n            let all = [];\r\n            for (let i = 0; i < allTranslations.length; i++) {\r\n                all = all.concat(allTranslations[i]);\r\n            }\r\n            return all;\r\n        }));\r\n    }\r\n    splitMessagesToGoogleLimit(messages) {\r\n        if (messages.length <= MAX_SEGMENTS) {\r\n            return [messages];\r\n        }\r\n        const result = [];\r\n        let currentPackage = [];\r\n        let packageSize = 0;\r\n        for (let i = 0; i < messages.length; i++) {\r\n            currentPackage.push(messages[i]);\r\n            packageSize++;\r\n            if (packageSize >= MAX_SEGMENTS) {\r\n                result.push(currentPackage);\r\n                currentPackage = [];\r\n                packageSize = 0;\r\n            }\r\n        }\r\n        if (currentPackage.length > 0) {\r\n            result.push(currentPackage);\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Return translation request, but messages must be limited to google limits.\r\n     * Not more that 128 single messages.\r\n     * @param messages messages\r\n     * @param from from\r\n     * @param to to\r\n     * @return the translated strings\r\n     */\r\n    limitedTranslateMultipleStrings(messages, from, to) {\r\n        const realUrl = this._rootUrl + 'language/translate/v2' + '?key=' + this._apiKey;\r\n        const translateRequest = {\r\n            q: messages,\r\n            target: to,\r\n            source: from,\r\n        };\r\n        const options = {\r\n            url: realUrl,\r\n            body: translateRequest,\r\n            json: true,\r\n            //            proxy: 'http://127.0.0.1:8888' To set a proxy use env var HTTPS_PROXY\r\n        };\r\n        return this.post(realUrl, options).pipe(map((data) => {\r\n            const body = data.body;\r\n            if (!body) {\r\n                throw new Error('no result received');\r\n            }\r\n            if (body.error) {\r\n                if (body.error.code === 400) {\r\n                    if (body.error.message === 'Invalid Value') {\r\n                        throw new Error(format('Translation from \"%s\" to \"%s\" not supported', from, to));\r\n                    }\r\n                    throw new Error(format('Invalid request: %s', body.error.message));\r\n                }\r\n                else {\r\n                    throw new Error(format('Error %s: %s', body.error.code, body.error.message));\r\n                }\r\n            }\r\n            const result = body.data;\r\n            return result.translations.map((translation) => {\r\n                return translation.translatedText;\r\n            });\r\n        }));\r\n    }\r\n    /**\r\n     * Function to do a POST HTTP request\r\n     *\r\n     * @param uri uri\r\n     * @param options options\r\n     *\r\n     * @return response\r\n     */\r\n    post(uri, options) {\r\n        return this._call.apply(this, [].concat('post', uri, Object.assign({}, options || {})));\r\n    }\r\n    /**\r\n     * Function to do a HTTP request for given method\r\n     *\r\n     * @param method method\r\n     * @param uri uri\r\n     * @param options options\r\n     *\r\n     * @return response\r\n     *\r\n     */\r\n    _call(method, uri, options) {\r\n        return Observable.create((observer) => {\r\n            // build params array\r\n            const params = [].concat(uri, Object.assign({}, options || {}), (error, response, body) => {\r\n                if (error) {\r\n                    return observer.error(error);\r\n                }\r\n                observer.next(Object.assign({}, {\r\n                    response: response,\r\n                    body: body\r\n                }));\r\n                observer.complete();\r\n            });\r\n            // _call request method\r\n            try {\r\n                this._request[method].apply(this._request, params);\r\n            }\r\n            catch (error) {\r\n                observer.error(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["util","request","rxjs","rxjs/operators"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\autotranslate\\auto-translate-service.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { format } from 'util';\r\nimport * as request from 'request';\r\nimport { Observable } from 'rxjs';\r\nimport { of, forkJoin, throwError } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nconst MAX_SEGMENTS = 128;\r\nexport class AutoTranslateService {\r\n    constructor(apiKey) {\r\n        this._request = request;\r\n        this._apiKey = apiKey;\r\n        this._rootUrl = 'https://translation.googleapis.com/';\r\n    }\r\n    /**\r\n     * Strip region code and convert to lower\r\n     * @param lang lang\r\n     * @return lang without region code and in lower case.\r\n     */\r\n    static stripRegioncode(lang) {\r\n        const langLower = lang.toLowerCase();\r\n        for (let i = 0; i < langLower.length; i++) {\r\n            const c = langLower.charAt(i);\r\n            if (c < 'a' || c > 'z') {\r\n                return langLower.substring(0, i);\r\n            }\r\n        }\r\n        return langLower;\r\n    }\r\n    /**\r\n     * Change API key (just for tests).\r\n     * @param apikey apikey\r\n     */\r\n    setApiKey(apikey) {\r\n        this._apiKey = apikey;\r\n    }\r\n    /**\r\n     * Translate an array of messages at once.\r\n     * @param messages the messages to be translated\r\n     * @param from source language code\r\n     * @param to target language code\r\n     * @return Observable with translated messages or error\r\n     */\r\n    translateMultipleStrings(messages, from, to) {\r\n        // empty array needs no translation and always works ... (#78)\r\n        if (messages.length === 0) {\r\n            return of([]);\r\n        }\r\n        if (!this._apiKey) {\r\n            return throwError('cannot autotranslate: no api key');\r\n        }\r\n        if (!from || !to) {\r\n            return throwError('cannot autotranslate: source and target language must be set');\r\n        }\r\n        from = AutoTranslateService.stripRegioncode(from);\r\n        to = AutoTranslateService.stripRegioncode(to);\r\n        const allRequests = this.splitMessagesToGoogleLimit(messages).map((partialMessages) => {\r\n            return this.limitedTranslateMultipleStrings(partialMessages, from, to);\r\n        });\r\n        return forkJoin(allRequests).pipe(map((allTranslations) => {\r\n            let all = [];\r\n            for (let i = 0; i < allTranslations.length; i++) {\r\n                all = all.concat(allTranslations[i]);\r\n            }\r\n            return all;\r\n        }));\r\n    }\r\n    splitMessagesToGoogleLimit(messages) {\r\n        if (messages.length <= MAX_SEGMENTS) {\r\n            return [messages];\r\n        }\r\n        const result = [];\r\n        let currentPackage = [];\r\n        let packageSize = 0;\r\n        for (let i = 0; i < messages.length; i++) {\r\n            currentPackage.push(messages[i]);\r\n            packageSize++;\r\n            if (packageSize >= MAX_SEGMENTS) {\r\n                result.push(currentPackage);\r\n                currentPackage = [];\r\n                packageSize = 0;\r\n            }\r\n        }\r\n        if (currentPackage.length > 0) {\r\n            result.push(currentPackage);\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Return translation request, but messages must be limited to google limits.\r\n     * Not more that 128 single messages.\r\n     * @param messages messages\r\n     * @param from from\r\n     * @param to to\r\n     * @return the translated strings\r\n     */\r\n    limitedTranslateMultipleStrings(messages, from, to) {\r\n        const realUrl = this._rootUrl + 'language/translate/v2' + '?key=' + this._apiKey;\r\n        const translateRequest = {\r\n            q: messages,\r\n            target: to,\r\n            source: from,\r\n        };\r\n        const options = {\r\n            url: realUrl,\r\n            body: translateRequest,\r\n            json: true,\r\n            //            proxy: 'http://127.0.0.1:8888' To set a proxy use env var HTTPS_PROXY\r\n        };\r\n        return this.post(realUrl, options).pipe(map((data) => {\r\n            const body = data.body;\r\n            if (!body) {\r\n                throw new Error('no result received');\r\n            }\r\n            if (body.error) {\r\n                if (body.error.code === 400) {\r\n                    if (body.error.message === 'Invalid Value') {\r\n                        throw new Error(format('Translation from \"%s\" to \"%s\" not supported', from, to));\r\n                    }\r\n                    throw new Error(format('Invalid request: %s', body.error.message));\r\n                }\r\n                else {\r\n                    throw new Error(format('Error %s: %s', body.error.code, body.error.message));\r\n                }\r\n            }\r\n            const result = body.data;\r\n            return result.translations.map((translation) => {\r\n                return translation.translatedText;\r\n            });\r\n        }));\r\n    }\r\n    /**\r\n     * Function to do a POST HTTP request\r\n     *\r\n     * @param uri uri\r\n     * @param options options\r\n     *\r\n     * @return response\r\n     */\r\n    post(uri, options) {\r\n        return this._call.apply(this, [].concat('post', uri, Object.assign({}, options || {})));\r\n    }\r\n    /**\r\n     * Function to do a HTTP request for given method\r\n     *\r\n     * @param method method\r\n     * @param uri uri\r\n     * @param options options\r\n     *\r\n     * @return response\r\n     *\r\n     */\r\n    _call(method, uri, options) {\r\n        return Observable.create((observer) => {\r\n            // build params array\r\n            const params = [].concat(uri, Object.assign({}, options || {}), (error, response, body) => {\r\n                if (error) {\r\n                    return observer.error(error);\r\n                }\r\n                observer.next(Object.assign({}, {\r\n                    response: response,\r\n                    body: body\r\n                }));\r\n                observer.complete();\r\n            });\r\n            // _call request method\r\n            try {\r\n                this._request[method].apply(this._request, params);\r\n            }\r\n            catch (error) {\r\n                observer.error(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"auto-translate-service.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/autotranslate/auto-translate-service.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[15,0,0,14],[17,0,0,15],[23,0,0,21],[29,0,0,27],[30,0,0,28]],[[0,0,1,0],[7,0,1,7],[12,0,1,12],[19,0,1,19],[25,0,1,25],[34,0,1,34],[35,0,1,35]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[19,0,2,18],[21,0,2,19],[27,0,2,25],[33,0,2,31],[34,0,2,32]],[[0,0,3,0],[7,0,3,7],[9,0,3,8],[11,0,3,10],[13,0,3,12],[21,0,3,20],[23,0,3,22],[33,0,3,32],[35,0,3,33],[41,0,3,39],[47,0,3,45],[48,0,3,46]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[12,0,4,11],[14,0,4,12],[20,0,4,18],[36,0,4,34],[37,0,4,35]],[[0,0,51,0],[6,0,51,6],[18,0,51,18],[21,0,51,21],[24,0,51,24],[25,0,51,25]],[[0,0,53,0],[6,0,53,6],[13,0,53,13],[33,0,53,33]],[[4,0,75,4],[16,0,75,16],[22,0,75,30]],[[8,0,76,8],[12,0,76,12],[13,0,76,13],[21,0,76,21],[24,0,76,24],[31,0,76,31],[32,0,76,32]],[[8,0,77,8],[12,0,77,12],[13,0,77,13],[20,0,77,20],[23,0,77,23],[29,0,77,29],[30,0,77,30]],[[8,0,78,8],[12,0,78,12],[13,0,78,13],[21,0,78,21],[24,0,78,24],[61,0,78,61],[62,0,78,62]],[[4,0,79,4],[5,0,79,5]],[[4,0,59,4]],[],[],[],[[7,0,63,7]],[[4,0,64,11],[10,0,64,17],[11,0,64,18],[26,0,64,33],[27,0,64,34],[31,0,64,46]],[[8,0,65,8],[14,0,65,14],[23,0,65,23],[26,0,65,26],[30,0,65,30],[31,0,65,31],[42,0,65,42],[44,0,65,44],[45,0,65,45]],[[8,0,66,8],[13,0,66,13],[17,0,66,17],[18,0,66,18],[21,0,66,21],[22,0,66,22],[24,0,66,24],[25,0,66,25],[28,0,66,28],[37,0,66,37],[38,0,66,38],[44,0,66,44],[46,0,66,46],[47,0,66,47],[49,0,66,49],[51,0,66,51]],[[12,0,67,12],[18,0,67,18],[19,0,67,19],[22,0,67,22],[31,0,67,31],[32,0,67,32],[38,0,67,38],[39,0,67,39],[40,0,67,40],[41,0,67,41],[42,0,67,42]],[[12,0,68,12],[16,0,68,16],[17,0,68,17],[20,0,68,20],[23,0,68,23],[27,0,68,27],[28,0,68,28],[31,0,68,31],[34,0,68,34],[36,0,68,36]],[[16,0,69,16],[23,0,69,23],[32,0,69,32],[33,0,69,33],[42,0,69,42],[43,0,69,43],[44,0,69,44],[46,0,69,46],[47,0,69,47],[48,0,69,48],[49,0,69,49]],[[13,0,70,13]],[[9,0,71,9]],[[8,0,72,8],[15,0,72,15],[24,0,72,24],[25,0,72,25]],[[4,0,73,4],[5,0,73,5]],[[4,0,81,4]],[],[],[[7,0,84,7]],[[4,0,85,11],[13,0,85,20],[14,0,85,21],[20,0,85,35]],[[8,0,86,8],[12,0,86,12],[13,0,86,13],[20,0,86,20],[23,0,86,23],[29,0,86,29],[30,0,86,30]],[[4,0,87,4],[5,0,87,5]],[[4,0,89,4]],[],[],[],[],[],[[7,0,95,7]],[[4,0,96,11],[28,0,96,35],[29,0,96,36],[37,0,96,54],[39,0,96,56],[43,0,96,68],[45,0,96,70],[47,0,96,80]],[[8,0,97,8],[70,0,97,70]],[[8,0,98,8],[12,0,98,12],[20,0,98,20],[21,0,98,21],[27,0,98,27],[32,0,98,32],[33,0,98,33],[35,0,98,35]],[[12,0,99,12],[19,0,99,19],[21,0,99,21],[22,0,99,22],[24,0,99,24],[25,0,99,25],[26,0,99,26]],[[9,0,100,9]],[[8,0,101,8],[12,0,101,12],[13,0,101,13],[17,0,101,17],[18,0,101,18],[25,0,101,25],[27,0,101,27]],[[12,0,102,12],[19,0,102,19],[29,0,102,29],[30,0,102,30],[64,0,102,64],[65,0,102,65],[66,0,102,66]],[[9,0,103,9]],[[8,0,104,8],[12,0,104,12],[13,0,104,13],[17,0,104,17],[21,0,104,21],[22,0,104,22],[24,0,104,24],[26,0,104,26]],[[12,0,105,12],[19,0,105,19],[29,0,105,29],[30,0,105,30],[92,0,105,92],[93,0,105,93],[94,0,105,94]],[[9,0,106,9]],[[8,0,107,8],[12,0,107,12],[15,0,107,15],[35,0,107,35],[36,0,107,36],[51,0,107,51],[52,0,107,52],[56,0,107,56],[57,0,107,57],[58,0,107,58]],[[8,0,108,8],[10,0,108,10],[13,0,108,13],[33,0,108,33],[34,0,108,34],[49,0,108,49],[50,0,108,50],[52,0,108,52],[53,0,108,53],[54,0,108,54]],[[8,0,109,8],[14,0,109,14],[25,0,109,25],[28,0,109,52],[32,0,109,56],[33,0,109,57],[59,0,109,83],[60,0,109,84],[68,0,109,92],[69,0,109,93],[70,0,109,94],[73,0,109,97],[74,0,109,98],[75,0,109,99],[90,0,109,124],[92,0,109,126],[94,0,109,128]],[[12,0,110,12],[19,0,110,19],[23,0,110,23],[24,0,110,24],[55,0,110,55],[56,0,110,56],[71,0,110,71],[73,0,110,73],[77,0,110,77],[79,0,110,79],[81,0,110,81],[82,0,110,82],[83,0,110,83]],[[8,0,111,8],[9,0,111,9],[10,0,111,10],[11,0,111,11]],[[8,0,112,8],[15,0,112,15],[23,0,112,23],[24,0,112,24],[35,0,112,35],[36,0,112,36],[37,0,112,37],[41,0,112,41],[42,0,113,12],[45,0,113,15],[46,0,113,16],[47,0,113,17],[62,0,113,44],[64,0,113,46],[66,0,113,48]],[[12,0,114,16],[16,0,114,20],[19,0,114,23],[22,0,114,26],[24,0,114,28],[25,0,114,29]],[[12,0,115,16],[17,0,115,21],[21,0,115,25],[22,0,115,26],[25,0,115,29],[26,0,115,30],[28,0,115,32],[29,0,115,33],[32,0,115,36],[47,0,115,51],[48,0,115,52],[54,0,115,58],[56,0,115,60],[57,0,115,61],[59,0,115,63],[61,0,115,65]],[[16,0,116,20],[19,0,116,23],[22,0,116,26],[25,0,116,29],[26,0,116,30],[32,0,116,36],[33,0,116,37],[48,0,116,52],[49,0,116,53],[50,0,116,54],[51,0,116,55],[52,0,116,56],[53,0,116,57]],[[13,0,117,17]],[[12,0,118,16],[19,0,118,23],[22,0,118,26],[23,0,118,27]],[[8,0,119,8],[9,0,119,9],[10,0,119,10],[11,0,119,11],[12,0,119,12]],[[4,0,120,4],[5,0,120,5]],[[4,0,122,12],[30,0,122,38],[31,0,122,39],[39,0,122,57]],[[8,0,123,8],[12,0,123,12],[20,0,123,20],[21,0,123,21],[27,0,123,27],[31,0,123,31],[43,0,123,43],[45,0,123,45]],[[12,0,124,12],[19,0,124,19],[20,0,124,20],[28,0,124,28],[29,0,124,29],[30,0,124,30]],[[9,0,125,9]],[[8,0,126,8],[14,0,126,14],[20,0,126,20],[23,0,126,23],[25,0,126,25],[26,0,126,26]],[[8,0,127,8],[12,0,127,12],[26,0,127,26],[29,0,127,29],[31,0,127,31],[32,0,127,32]],[[8,0,128,8],[12,0,128,12],[23,0,128,23],[26,0,128,26],[27,0,128,27],[28,0,128,28]],[[8,0,129,8],[13,0,129,13],[17,0,129,17],[18,0,129,18],[21,0,129,21],[22,0,129,22],[24,0,129,24],[25,0,129,25],[28,0,129,28],[36,0,129,36],[37,0,129,37],[43,0,129,43],[45,0,129,45],[46,0,129,46],[48,0,129,48],[50,0,129,50]],[[12,0,130,12],[26,0,130,26],[27,0,130,27],[31,0,130,31],[32,0,130,32],[40,0,130,40],[41,0,130,41],[42,0,130,42],[43,0,130,43],[44,0,130,44],[45,0,130,45]],[[12,0,131,12],[23,0,131,23],[25,0,131,25],[26,0,131,26]],[[12,0,132,12],[16,0,132,16],[27,0,132,27],[31,0,132,31],[43,0,132,43],[45,0,132,45]],[[16,0,133,16],[22,0,133,22],[23,0,133,23],[27,0,133,27],[28,0,133,28],[42,0,133,42],[43,0,133,43],[44,0,133,44]],[[16,0,134,16],[30,0,134,30],[33,0,134,33],[35,0,134,35],[36,0,134,36]],[[16,0,135,16],[27,0,135,27],[30,0,135,30],[31,0,135,31],[32,0,135,32]],[[13,0,136,13]],[[9,0,137,9]],[[8,0,138,8],[12,0,138,12],[26,0,138,26],[27,0,138,27],[33,0,138,33],[36,0,138,36],[37,0,138,37],[39,0,138,39]],[[12,0,139,12],[18,0,139,18],[19,0,139,19],[23,0,139,23],[24,0,139,24],[38,0,139,38],[39,0,139,39],[40,0,139,40]],[[9,0,140,9]],[[8,0,141,8],[15,0,141,15],[21,0,141,21],[22,0,141,22]],[[4,0,142,4],[5,0,142,5]],[[4,0,144,4]],[],[],[],[],[],[],[[7,0,151,7]],[[4,0,152,12],[35,0,152,43],[36,0,152,44],[44,0,152,62],[46,0,152,64],[50,0,152,76],[52,0,152,78],[54,0,152,88]],[[8,0,153,8],[14,0,153,14],[21,0,153,21],[24,0,153,24],[28,0,153,28],[29,0,153,29],[37,0,153,37],[40,0,153,40],[63,0,153,63],[66,0,153,66],[73,0,153,73],[76,0,153,76],[80,0,153,80],[81,0,153,81],[88,0,153,88],[89,0,153,89]],[[8,0,154,8],[14,0,154,14],[30,0,154,30],[33,0,154,55]],[[12,0,155,12],[13,0,155,13],[15,0,155,15],[23,0,155,23]],[[12,0,156,12],[18,0,156,18],[20,0,156,20],[22,0,156,22]],[[12,0,157,12],[18,0,157,18],[20,0,157,20],[24,0,157,24]],[[9,0,158,9],[10,0,158,10]],[[8,0,159,8],[14,0,159,14],[21,0,159,21],[24,0,159,24]],[[12,0,160,12],[15,0,160,15],[17,0,160,17],[24,0,160,24]],[[12,0,161,12],[16,0,161,16],[18,0,161,18],[34,0,161,34]],[[12,0,162,12],[16,0,162,16],[18,0,162,18],[22,0,162,22]],[[12,0,163,0],[95,0,163,83]],[[9,0,164,9],[10,0,164,10]],[[8,0,165,8],[15,0,165,15],[19,0,165,19],[20,0,165,20],[24,0,165,24],[25,0,165,25],[32,0,165,32],[34,0,165,34],[41,0,165,41],[42,0,165,42],[43,0,165,43],[47,0,165,47],[48,0,166,12],[51,0,166,15],[52,0,166,16],[53,0,166,17],[57,0,166,21],[59,0,166,23],[61,0,166,25]],[[12,0,167,12],[18,0,167,18],[22,0,167,22],[25,0,167,30],[29,0,167,34],[30,0,167,35],[34,0,167,39],[35,0,167,40]],[[12,0,168,12],[16,0,168,16],[17,0,168,17],[21,0,168,21],[23,0,168,23]],[[16,0,169,16],[22,0,169,22],[26,0,169,26],[31,0,169,31],[32,0,169,32],[52,0,169,52],[53,0,169,53],[54,0,169,54]],[[13,0,170,13]],[[12,0,171,12],[16,0,171,16],[20,0,171,20],[21,0,171,21],[26,0,171,26],[28,0,171,28]],[[16,0,172,16],[20,0,172,20],[24,0,172,24],[25,0,172,25],[30,0,172,30],[31,0,172,31],[35,0,172,35],[40,0,172,40],[43,0,172,43],[45,0,172,45]],[[20,0,173,20],[24,0,173,24],[28,0,173,28],[29,0,173,29],[34,0,173,34],[35,0,173,35],[42,0,173,42],[47,0,173,47],[62,0,173,62],[64,0,173,64]],[[24,0,174,24],[30,0,174,30],[34,0,174,34],[39,0,174,39],[40,0,174,40],[46,0,174,46],[47,0,174,47],[92,0,174,92],[94,0,174,94],[98,0,174,98],[100,0,174,100],[102,0,174,102],[103,0,174,103],[104,0,174,104],[105,0,174,105]],[[21,0,175,21]],[[20,0,176,20],[26,0,176,26],[30,0,176,30],[35,0,176,35],[36,0,176,36],[42,0,176,42],[43,0,176,43],[64,0,176,64],[66,0,176,66],[70,0,176,70],[71,0,176,71],[76,0,176,76],[77,0,176,77],[84,0,176,84],[85,0,176,85],[86,0,176,86],[87,0,176,87]],[[17,0,177,17]],[[21,0,177,23]],[[20,0,178,20],[26,0,178,26],[30,0,178,30],[35,0,178,35],[36,0,178,36],[42,0,178,42],[43,0,178,43],[57,0,178,57],[59,0,178,59],[63,0,178,63],[64,0,178,64],[69,0,178,69],[70,0,178,70],[74,0,178,74],[76,0,178,76],[80,0,178,80],[81,0,178,81],[86,0,178,86],[87,0,178,87],[94,0,178,94],[95,0,178,95],[96,0,178,96],[97,0,178,97]],[[17,0,179,17]],[[13,0,180,13]],[[12,0,181,12],[18,0,181,18],[24,0,181,24],[27,0,181,27],[31,0,181,31],[32,0,181,32],[36,0,181,36],[37,0,181,37]],[[12,0,182,12],[19,0,182,19],[25,0,182,25],[26,0,182,26],[38,0,182,38],[39,0,182,39],[42,0,182,42],[43,0,182,43],[44,0,182,44],[55,0,182,77],[57,0,182,79],[59,0,182,81]],[[16,0,183,16],[23,0,183,23],[34,0,183,34],[35,0,183,35],[49,0,183,49],[50,0,183,50]],[[12,0,184,12],[13,0,184,13],[14,0,184,14],[15,0,184,15]],[[8,0,185,8],[9,0,185,9],[10,0,185,10],[11,0,185,11],[12,0,185,12]],[[4,0,186,4],[5,0,186,5]],[[4,0,188,4]],[],[],[],[],[],[],[[7,0,195,7]],[[4,0,196,4],[8,0,196,8],[9,0,196,9],[12,0,196,20],[14,0,196,22],[21,0,196,51]],[[8,0,197,8],[15,0,197,53],[19,0,197,57],[20,0,197,58],[25,0,197,63],[26,0,197,64],[31,0,197,69],[32,0,197,70],[36,0,197,74],[38,0,197,76],[40,0,197,78],[41,0,197,79],[47,0,197,85],[48,0,197,86],[54,0,197,92],[56,0,197,103],[59,0,197,106],[61,0,198,34],[67,0,198,40],[68,0,198,41],[74,0,198,47],[75,0,198,48],[77,0,198,50],[79,0,198,52],[86,0,198,59],[90,0,198,63],[92,0,198,65],[93,0,198,66],[94,0,198,67],[95,0,198,68],[96,0,198,69]],[[4,0,199,4],[5,0,199,5]],[[4,0,201,4]],[],[],[],[],[],[],[],[],[[7,0,210,7]],[[4,0,211,12],[9,0,211,17],[10,0,211,18],[16,0,211,32],[18,0,211,34],[21,0,211,45],[23,0,211,47],[30,0,211,76]],[[8,0,212,8],[15,0,212,53],[25,0,212,63],[26,0,212,64],[32,0,212,70],[33,0,212,71],[34,0,212,72],[42,0,212,80],[44,0,212,82],[46,0,212,84]],[[12,0,213,12],[33,0,213,33]],[[12,0,214,12],[18,0,214,18],[24,0,214,24],[27,0,214,27],[29,0,214,29],[30,0,214,30],[36,0,214,36],[37,0,214,46],[40,0,214,49],[42,0,214,73],[48,0,214,79],[49,0,214,80],[55,0,214,86],[56,0,214,87],[58,0,214,89],[60,0,214,91],[67,0,214,98],[71,0,214,102],[73,0,214,104],[74,0,214,105],[76,0,215,16],[77,0,215,34],[82,0,215,44],[84,0,215,46],[92,0,215,79],[94,0,215,81],[98,0,215,90],[100,0,215,92],[102,0,215,94]],[[16,0,216,20],[20,0,216,24],[25,0,216,29],[27,0,216,31]],[[20,0,217,24],[27,0,217,31],[35,0,217,39],[36,0,217,40],[41,0,217,45],[42,0,217,46],[47,0,217,51],[48,0,217,52],[49,0,217,53]],[[17,0,218,21]],[[16,0,220,20],[24,0,220,28],[25,0,220,29],[29,0,220,33],[30,0,220,60],[36,0,220,66],[37,0,220,67],[43,0,220,73],[44,0,220,74],[46,0,220,76],[48,0,220,78]],[[20,0,221,24],[28,0,221,32],[30,0,221,60],[38,0,221,68]],[[20,0,222,24],[24,0,222,28],[26,0,222,36],[30,0,222,40]],[[17,0,223,21],[18,0,223,22],[19,0,223,23],[20,0,223,24]],[[16,0,224,20],[24,0,224,28],[25,0,224,29],[33,0,224,37],[35,0,224,39],[36,0,224,40]],[[12,0,225,16],[13,0,225,17],[14,0,225,18],[15,0,225,19]],[[12,0,227,12],[35,0,227,35]],[[12,0,228,12],[16,0,228,16]],[[16,0,229,16],[20,0,229,20],[21,0,229,21],[29,0,229,29],[30,0,229,39],[36,0,229,45],[37,0,229,46],[38,0,229,47],[43,0,229,52],[44,0,232,45],[48,0,232,49],[49,0,232,50],[57,0,232,58],[59,0,233,20],[65,0,233,26],[66,0,233,27],[67,0,233,28]],[[13,0,234,13]],[[12,0,234,14],[19,0,234,21],[24,0,234,26],[26,0,234,28]],[[16,0,235,16],[24,0,235,24],[25,0,235,25],[30,0,235,30],[31,0,235,31],[36,0,235,36],[37,0,235,37],[38,0,235,38]],[[13,0,236,13]],[[8,0,237,8],[9,0,237,9],[10,0,237,10],[11,0,237,11]],[[4,0,238,4],[5,0,238,5]],[[1,0,239,1]]],"sourcesContent":["import {format} from 'util';\r\nimport * as request from 'request';\r\nimport {Observable} from 'rxjs';\r\nimport {of, forkJoin, throwError} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n/**\r\n * Created by roobm on 03.07.2017.\r\n * Low Level Service to call Google Translate.\r\n */\r\n\r\n/**\r\n * Types form google translate api.\r\n */\r\n\r\ninterface GetSupportedLanguagesRequest {\r\n    target: string; // The language to use to return localized, human readable names of supported\\nlanguages.\r\n}\r\n\r\ninterface LanguagesResource {\r\n    language: string; // code of the language\r\n    name: string; // human readable name (in target language)\r\n}\r\n\r\ninterface LanguagesListResponse {\r\n    languages: LanguagesResource[];\r\n}\r\n\r\ninterface TranslateTextRequest {\r\n    q: string[];  // The input texts to translate\r\n    target: string; // The language to use for translation of the input text\r\n    source: string; // The language of the source text\r\n    format?: string; // \"html\" (default) or \"text\"\r\n    model?: string; // see public documentation\r\n}\r\n\r\ninterface TranslationsResource {\r\n    detectedSourceLanguage?: string;\r\n    model?: string;\r\n    translatedText: string;\r\n}\r\n\r\ninterface TranslationsListResponse {\r\n    translations: TranslationsResource[];\r\n}\r\n\r\ninterface InternalRequestResponse {\r\n    response: request.RequestResponse;\r\n    body: any;\r\n}\r\n\r\nconst MAX_SEGMENTS = 128;\r\n\r\nexport class AutoTranslateService {\r\n\r\n    private _request: request.RequestAPI<request.Request, request.CoreOptions, request.RequiredUriUrl>;\r\n    _rootUrl: string;\r\n    _apiKey: string;\r\n\r\n    /**\r\n     * Strip region code and convert to lower\r\n     * @param lang lang\r\n     * @return lang without region code and in lower case.\r\n     */\r\n    public static stripRegioncode(lang: string): string {\r\n        const langLower = lang.toLowerCase();\r\n        for (let i = 0; i < langLower.length; i++) {\r\n            const c = langLower.charAt(i);\r\n            if (c < 'a' || c > 'z') {\r\n                return langLower.substring(0, i);\r\n            }\r\n        }\r\n        return langLower;\r\n    }\r\n\r\n    constructor(apiKey: string) {\r\n        this._request = request;\r\n        this._apiKey = apiKey;\r\n        this._rootUrl = 'https://translation.googleapis.com/';\r\n    }\r\n\r\n    /**\r\n     * Change API key (just for tests).\r\n     * @param apikey apikey\r\n     */\r\n    public setApiKey(apikey: string) {\r\n        this._apiKey = apikey;\r\n    }\r\n\r\n    /**\r\n     * Translate an array of messages at once.\r\n     * @param messages the messages to be translated\r\n     * @param from source language code\r\n     * @param to target language code\r\n     * @return Observable with translated messages or error\r\n     */\r\n    public translateMultipleStrings(messages: string[], from: string, to: string): Observable<string[]> {\r\n        // empty array needs no translation and always works ... (#78)\r\n        if (messages.length === 0) {\r\n            return of([]);\r\n        }\r\n        if (!this._apiKey) {\r\n            return throwError('cannot autotranslate: no api key');\r\n        }\r\n        if (!from || !to) {\r\n            return throwError('cannot autotranslate: source and target language must be set');\r\n        }\r\n        from = AutoTranslateService.stripRegioncode(from);\r\n        to = AutoTranslateService.stripRegioncode(to);\r\n        const allRequests: Observable<string[]>[] = this.splitMessagesToGoogleLimit(messages).map((partialMessages: string[]) => {\r\n            return this.limitedTranslateMultipleStrings(partialMessages, from, to);\r\n        });\r\n        return forkJoin(allRequests).pipe(\r\n            map((allTranslations: string[][]) => {\r\n                let all = [];\r\n                for (let i = 0; i < allTranslations.length; i++) {\r\n                    all = all.concat(allTranslations[i]);\r\n                }\r\n                return all;\r\n        }));\r\n    }\r\n\r\n    private splitMessagesToGoogleLimit(messages: string[]): string[][] {\r\n        if (messages.length <= MAX_SEGMENTS) {\r\n            return [messages];\r\n        }\r\n        const result = [];\r\n        let currentPackage = [];\r\n        let packageSize = 0;\r\n        for (let i = 0; i < messages.length; i++) {\r\n            currentPackage.push(messages[i]);\r\n            packageSize++;\r\n            if (packageSize >= MAX_SEGMENTS) {\r\n                result.push(currentPackage);\r\n                currentPackage = [];\r\n                packageSize = 0;\r\n            }\r\n        }\r\n        if (currentPackage.length > 0) {\r\n            result.push(currentPackage);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Return translation request, but messages must be limited to google limits.\r\n     * Not more that 128 single messages.\r\n     * @param messages messages\r\n     * @param from from\r\n     * @param to to\r\n     * @return the translated strings\r\n     */\r\n    private limitedTranslateMultipleStrings(messages: string[], from: string, to: string): Observable<string[]> {\r\n        const realUrl = this._rootUrl + 'language/translate/v2' + '?key=' + this._apiKey;\r\n        const translateRequest: TranslateTextRequest = {\r\n            q: messages,\r\n            target: to,\r\n            source: from,\r\n        };\r\n        const options = {\r\n            url: realUrl,\r\n            body: translateRequest,\r\n            json: true,\r\n//            proxy: 'http://127.0.0.1:8888' To set a proxy use env var HTTPS_PROXY\r\n        };\r\n        return this.post(realUrl, options).pipe(\r\n            map((data) => {\r\n            const body: any = data.body;\r\n            if (!body) {\r\n                throw new Error('no result received');\r\n            }\r\n            if (body.error) {\r\n                if (body.error.code === 400) {\r\n                    if (body.error.message === 'Invalid Value') {\r\n                        throw new Error(format('Translation from \"%s\" to \"%s\" not supported', from, to));\r\n                    }\r\n                    throw new Error(format('Invalid request: %s', body.error.message));\r\n                } else {\r\n                    throw new Error(format('Error %s: %s', body.error.code, body.error.message));\r\n                }\r\n            }\r\n            const result = body.data;\r\n            return result.translations.map((translation: TranslationsResource) => {\r\n                return translation.translatedText;\r\n            });\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Function to do a POST HTTP request\r\n     *\r\n     * @param uri uri\r\n     * @param options options\r\n     *\r\n     * @return response\r\n     */\r\n    post(uri: string, options?: request.CoreOptions): Observable<InternalRequestResponse> {\r\n        return <Observable<InternalRequestResponse>> this._call.apply(this, [].concat('post', <string> uri,\r\n            <request.CoreOptions> Object.assign({}, options || {})));\r\n    }\r\n\r\n    /**\r\n     * Function to do a HTTP request for given method\r\n     *\r\n     * @param method method\r\n     * @param uri uri\r\n     * @param options options\r\n     *\r\n     * @return response\r\n     *\r\n     */\r\n    private _call(method: string, uri: string, options?: request.CoreOptions): Observable<InternalRequestResponse> {\r\n        return <Observable<InternalRequestResponse>> Observable.create((observer) => {\r\n            // build params array\r\n            const params = [].concat(<string> uri, <request.CoreOptions> Object.assign({}, options || {}),\r\n                <RequestCallback>(error: any, response: request.RequestResponse, body: any) => {\r\n                    if (error) {\r\n                        return observer.error(error);\r\n                    }\r\n\r\n                    observer.next(<InternalRequestResponse> Object.assign({}, {\r\n                        response: <request.RequestResponse> response,\r\n                        body: <any> body\r\n                    }));\r\n                    observer.complete();\r\n                });\r\n\r\n            // _call request method\r\n            try {\r\n                this._request[<string> method].apply(\r\n                    <request.RequestAPI<request.Request,\r\n                    request.CoreOptions,\r\n                    request.RequiredUriUrl>> this._request,\r\n                    params);\r\n            } catch (error) {\r\n                observer.error(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n"]},"resolvedIds":{"util":{"external":true,"id":"util","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"request":{"external":true,"id":"request","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1159,"body":[{"type":"ExportNamedDeclaration","start":47,"end":255,"declaration":{"type":"ClassDeclaration","start":54,"end":255,"id":{"type":"Identifier","start":60,"end":79,"name":"AutoTranslateResult"},"superClass":null,"body":{"type":"ClassBody","start":80,"end":255,"body":[{"type":"MethodDefinition","start":87,"end":197,"static":false,"computed":false,"key":{"type":"Identifier","start":87,"end":98,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":98,"end":197,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":99,"end":107,"name":"_success"},{"type":"Identifier","start":109,"end":117,"name":"_details"}],"body":{"type":"BlockStatement","start":119,"end":197,"body":[{"type":"ExpressionStatement","start":130,"end":155,"expression":{"type":"AssignmentExpression","start":130,"end":154,"operator":"=","left":{"type":"MemberExpression","start":130,"end":143,"object":{"type":"ThisExpression","start":130,"end":134},"property":{"type":"Identifier","start":135,"end":143,"name":"_success"},"computed":false,"optional":false},"right":{"type":"Identifier","start":146,"end":154,"name":"_success"}}},{"type":"ExpressionStatement","start":165,"end":190,"expression":{"type":"AssignmentExpression","start":165,"end":189,"operator":"=","left":{"type":"MemberExpression","start":165,"end":178,"object":{"type":"ThisExpression","start":165,"end":169},"property":{"type":"Identifier","start":170,"end":178,"name":"_details"},"computed":false,"optional":false},"right":{"type":"Identifier","start":181,"end":189,"name":"_details"}}}]}}},{"type":"MethodDefinition","start":203,"end":252,"static":false,"computed":false,"key":{"type":"Identifier","start":203,"end":210,"name":"success"},"kind":"method","value":{"type":"FunctionExpression","start":210,"end":252,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":213,"end":252,"body":[{"type":"ReturnStatement","start":224,"end":245,"argument":{"type":"MemberExpression","start":231,"end":244,"object":{"type":"ThisExpression","start":231,"end":235},"property":{"type":"Identifier","start":236,"end":244,"name":"_success"},"computed":false,"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by10cmFuc2xhdGUtcmVzdWx0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMveGxpZmZtZXJnZS9zcmMvYXV0b3RyYW5zbGF0ZS9hdXRvLXRyYW5zbGF0ZS1yZXN1bHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxNQUFNLE9BQU8sbUJBQW1CO0lBRTlCLFlBQW9CLFFBQWlCLEVBQVUsUUFBZ0I7UUFBM0MsYUFBUSxHQUFSLFFBQVEsQ0FBUztRQUFVLGFBQVEsR0FBUixRQUFRLENBQVE7SUFFL0QsQ0FBQztJQUVNLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDI5LjA2LjIwMTcuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIEF1dG9UcmFuc2xhdGVSZXN1bHQge1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9zdWNjZXNzOiBib29sZWFuLCBwcml2YXRlIF9kZXRhaWxzOiBzdHJpbmcpIHtcclxuXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc3VjY2VzcygpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLl9zdWNjZXNzO1xyXG4gIH1cclxufVxyXG4iXX0=","start":257,"end":1159}]},"code":"/**\r\n * Created by martin on 29.06.2017.\r\n */\r\nexport class AutoTranslateResult {\r\n    constructor(_success, _details) {\r\n        this._success = _success;\r\n        this._details = _details;\r\n    }\r\n    success() {\r\n        return this._success;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by10cmFuc2xhdGUtcmVzdWx0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMveGxpZmZtZXJnZS9zcmMvYXV0b3RyYW5zbGF0ZS9hdXRvLXRyYW5zbGF0ZS1yZXN1bHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxNQUFNLE9BQU8sbUJBQW1CO0lBRTlCLFlBQW9CLFFBQWlCLEVBQVUsUUFBZ0I7UUFBM0MsYUFBUSxHQUFSLFFBQVEsQ0FBUztRQUFVLGFBQVEsR0FBUixRQUFRLENBQVE7SUFFL0QsQ0FBQztJQUVNLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDI5LjA2LjIwMTcuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIEF1dG9UcmFuc2xhdGVSZXN1bHQge1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9zdWNjZXNzOiBib29sZWFuLCBwcml2YXRlIF9kZXRhaWxzOiBzdHJpbmcpIHtcclxuXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc3VjY2VzcygpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLl9zdWNjZXNzO1xyXG4gIH1cclxufVxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\autotranslate\\auto-translate-result.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Created by martin on 29.06.2017.\r\n */\r\nexport class AutoTranslateResult {\r\n    constructor(_success, _details) {\r\n        this._success = _success;\r\n        this._details = _details;\r\n    }\r\n    success() {\r\n        return this._success;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by10cmFuc2xhdGUtcmVzdWx0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMveGxpZmZtZXJnZS9zcmMvYXV0b3RyYW5zbGF0ZS9hdXRvLXRyYW5zbGF0ZS1yZXN1bHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxNQUFNLE9BQU8sbUJBQW1CO0lBRTlCLFlBQW9CLFFBQWlCLEVBQVUsUUFBZ0I7UUFBM0MsYUFBUSxHQUFSLFFBQVEsQ0FBUztRQUFVLGFBQVEsR0FBUixRQUFRLENBQVE7SUFFL0QsQ0FBQztJQUVNLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDI5LjA2LjIwMTcuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIEF1dG9UcmFuc2xhdGVSZXN1bHQge1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9zdWNjZXNzOiBib29sZWFuLCBwcml2YXRlIF9kZXRhaWxzOiBzdHJpbmcpIHtcclxuXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc3VjY2VzcygpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLl9zdWNjZXNzO1xyXG4gIH1cclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"auto-translate-result.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/autotranslate/auto-translate-result.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[6,0,4,6],[13,0,4,13],[32,0,4,32]],[[4,0,6,2],[16,0,6,22],[24,0,6,39],[26,0,6,49],[34,0,6,65]],[[8,0,6,22],[21,0,6,30],[24,0,6,22],[32,0,6,30],[33,0,6,39]],[[8,0,6,49],[21,0,6,57],[24,0,6,49],[32,0,6,57],[33,0,6,65]],[[4,0,8,2],[5,0,8,3]],[[4,0,10,9],[11,0,10,16]],[[8,0,11,4],[15,0,11,11],[19,0,11,15],[20,0,11,16],[28,0,11,24],[29,0,11,25]],[[4,0,12,2],[5,0,12,3]],[[1,0,13,1]]],"sourcesContent":["/**\r\n * Created by martin on 29.06.2017.\r\n */\r\n\r\nexport class AutoTranslateResult {\r\n\r\n  constructor(private _success: boolean, private _details: string) {\r\n\r\n  }\r\n\r\n  public success(): boolean {\r\n    return this._success;\r\n  }\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":8954,"body":[{"type":"ImportDeclaration","start":0,"end":30,"specifiers":[{"type":"ImportSpecifier","start":9,"end":15,"imported":{"type":"Identifier","start":9,"end":15,"name":"format"},"local":{"type":"Identifier","start":9,"end":15,"name":"format"}}],"source":{"type":"Literal","start":23,"end":29,"value":"util","raw":"'util'"}},{"type":"ExportNamedDeclaration","start":154,"end":2354,"declaration":{"type":"ClassDeclaration","start":161,"end":2354,"id":{"type":"Identifier","start":167,"end":193,"name":"AutoTranslateSummaryReport"},"superClass":null,"body":{"type":"ClassBody","start":194,"end":2354,"body":[{"type":"MethodDefinition","start":201,"end":392,"static":false,"computed":false,"key":{"type":"Identifier","start":201,"end":212,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":212,"end":392,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":213,"end":217,"name":"from"},{"type":"Identifier","start":219,"end":221,"name":"to"}],"body":{"type":"BlockStatement","start":223,"end":392,"body":[{"type":"ExpressionStatement","start":234,"end":252,"expression":{"type":"AssignmentExpression","start":234,"end":251,"operator":"=","left":{"type":"MemberExpression","start":234,"end":244,"object":{"type":"ThisExpression","start":234,"end":238},"property":{"type":"Identifier","start":239,"end":244,"name":"_from"},"computed":false,"optional":false},"right":{"type":"Identifier","start":247,"end":251,"name":"from"}}},{"type":"ExpressionStatement","start":262,"end":276,"expression":{"type":"AssignmentExpression","start":262,"end":275,"operator":"=","left":{"type":"MemberExpression","start":262,"end":270,"object":{"type":"ThisExpression","start":262,"end":266},"property":{"type":"Identifier","start":267,"end":270,"name":"_to"},"computed":false,"optional":false},"right":{"type":"Identifier","start":273,"end":275,"name":"to"}}},{"type":"ExpressionStatement","start":286,"end":302,"expression":{"type":"AssignmentExpression","start":286,"end":301,"operator":"=","left":{"type":"MemberExpression","start":286,"end":297,"object":{"type":"ThisExpression","start":286,"end":290},"property":{"type":"Identifier","start":291,"end":297,"name":"_total"},"computed":false,"optional":false},"right":{"type":"Literal","start":300,"end":301,"value":0,"raw":"0"}}},{"type":"ExpressionStatement","start":312,"end":330,"expression":{"type":"AssignmentExpression","start":312,"end":329,"operator":"=","left":{"type":"MemberExpression","start":312,"end":325,"object":{"type":"ThisExpression","start":312,"end":316},"property":{"type":"Identifier","start":317,"end":325,"name":"_ignored"},"computed":false,"optional":false},"right":{"type":"Literal","start":328,"end":329,"value":0,"raw":"0"}}},{"type":"ExpressionStatement","start":340,"end":358,"expression":{"type":"AssignmentExpression","start":340,"end":357,"operator":"=","left":{"type":"MemberExpression","start":340,"end":353,"object":{"type":"ThisExpression","start":340,"end":344},"property":{"type":"Identifier","start":345,"end":353,"name":"_success"},"computed":false,"optional":false},"right":{"type":"Literal","start":356,"end":357,"value":0,"raw":"0"}}},{"type":"ExpressionStatement","start":368,"end":385,"expression":{"type":"AssignmentExpression","start":368,"end":384,"operator":"=","left":{"type":"MemberExpression","start":368,"end":380,"object":{"type":"ThisExpression","start":368,"end":372},"property":{"type":"Identifier","start":373,"end":380,"name":"_failed"},"computed":false,"optional":false},"right":{"type":"Literal","start":383,"end":384,"value":0,"raw":"0"}}}]}}},{"type":"MethodDefinition","start":557,"end":679,"static":false,"computed":false,"key":{"type":"Identifier","start":557,"end":565,"name":"setError"},"kind":"method","value":{"type":"FunctionExpression","start":565,"end":679,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":566,"end":571,"name":"error"},{"type":"Identifier","start":573,"end":578,"name":"total"}],"body":{"type":"BlockStatement","start":580,"end":679,"body":[{"type":"ExpressionStatement","start":591,"end":611,"expression":{"type":"AssignmentExpression","start":591,"end":610,"operator":"=","left":{"type":"MemberExpression","start":591,"end":602,"object":{"type":"ThisExpression","start":591,"end":595},"property":{"type":"Identifier","start":596,"end":602,"name":"_error"},"computed":false,"optional":false},"right":{"type":"Identifier","start":605,"end":610,"name":"error"}}},{"type":"ExpressionStatement","start":621,"end":641,"expression":{"type":"AssignmentExpression","start":621,"end":640,"operator":"=","left":{"type":"MemberExpression","start":621,"end":632,"object":{"type":"ThisExpression","start":621,"end":625},"property":{"type":"Identifier","start":626,"end":632,"name":"_total"},"computed":false,"optional":false},"right":{"type":"Identifier","start":635,"end":640,"name":"total"}}},{"type":"ExpressionStatement","start":651,"end":672,"expression":{"type":"AssignmentExpression","start":651,"end":671,"operator":"=","left":{"type":"MemberExpression","start":651,"end":663,"object":{"type":"ThisExpression","start":651,"end":655},"property":{"type":"Identifier","start":656,"end":663,"name":"_failed"},"computed":false,"optional":false},"right":{"type":"Identifier","start":666,"end":671,"name":"total"}}}]}}},{"type":"MethodDefinition","start":685,"end":730,"static":false,"computed":false,"key":{"type":"Identifier","start":685,"end":690,"name":"error"},"kind":"method","value":{"type":"FunctionExpression","start":690,"end":730,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":693,"end":730,"body":[{"type":"ReturnStatement","start":704,"end":723,"argument":{"type":"MemberExpression","start":711,"end":722,"object":{"type":"ThisExpression","start":711,"end":715},"property":{"type":"Identifier","start":716,"end":722,"name":"_error"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":736,"end":831,"static":false,"computed":false,"key":{"type":"Identifier","start":736,"end":746,"name":"setIgnored"},"kind":"method","value":{"type":"FunctionExpression","start":746,"end":831,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":747,"end":754,"name":"ignored"}],"body":{"type":"BlockStatement","start":756,"end":831,"body":[{"type":"ExpressionStatement","start":767,"end":790,"expression":{"type":"AssignmentExpression","start":767,"end":789,"operator":"+=","left":{"type":"MemberExpression","start":767,"end":778,"object":{"type":"ThisExpression","start":767,"end":771},"property":{"type":"Identifier","start":772,"end":778,"name":"_total"},"computed":false,"optional":false},"right":{"type":"Identifier","start":782,"end":789,"name":"ignored"}}},{"type":"ExpressionStatement","start":800,"end":824,"expression":{"type":"AssignmentExpression","start":800,"end":823,"operator":"=","left":{"type":"MemberExpression","start":800,"end":813,"object":{"type":"ThisExpression","start":800,"end":804},"property":{"type":"Identifier","start":805,"end":813,"name":"_ignored"},"computed":false,"optional":false},"right":{"type":"Identifier","start":816,"end":823,"name":"ignored"}}}]}}},{"type":"MethodDefinition","start":949,"end":1139,"static":false,"computed":false,"key":{"type":"Identifier","start":949,"end":964,"name":"addSingleResult"},"kind":"method","value":{"type":"FunctionExpression","start":964,"end":1139,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":965,"end":967,"name":"tu"},{"type":"Identifier","start":969,"end":975,"name":"result"}],"body":{"type":"BlockStatement","start":977,"end":1139,"body":[{"type":"ExpressionStatement","start":988,"end":1002,"expression":{"type":"UpdateExpression","start":988,"end":1001,"operator":"++","prefix":false,"argument":{"type":"MemberExpression","start":988,"end":999,"object":{"type":"ThisExpression","start":988,"end":992},"property":{"type":"Identifier","start":993,"end":999,"name":"_total"},"computed":false,"optional":false}}},{"type":"IfStatement","start":1012,"end":1132,"test":{"type":"CallExpression","start":1016,"end":1032,"callee":{"type":"MemberExpression","start":1016,"end":1030,"object":{"type":"Identifier","start":1016,"end":1022,"name":"result"},"property":{"type":"Identifier","start":1023,"end":1030,"name":"success"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":1034,"end":1076,"body":[{"type":"ExpressionStatement","start":1049,"end":1065,"expression":{"type":"UpdateExpression","start":1049,"end":1064,"operator":"++","prefix":false,"argument":{"type":"MemberExpression","start":1049,"end":1062,"object":{"type":"ThisExpression","start":1049,"end":1053},"property":{"type":"Identifier","start":1054,"end":1062,"name":"_success"},"computed":false,"optional":false}}}]},"alternate":{"type":"BlockStatement","start":1091,"end":1132,"body":[{"type":"ExpressionStatement","start":1106,"end":1121,"expression":{"type":"UpdateExpression","start":1106,"end":1120,"operator":"++","prefix":false,"argument":{"type":"MemberExpression","start":1106,"end":1118,"object":{"type":"ThisExpression","start":1106,"end":1110},"property":{"type":"Identifier","start":1111,"end":1118,"name":"_failed"},"computed":false,"optional":false}}}]}}]}}},{"type":"MethodDefinition","start":1253,"end":1575,"static":false,"computed":false,"key":{"type":"Identifier","start":1253,"end":1258,"name":"merge"},"kind":"method","value":{"type":"FunctionExpression","start":1258,"end":1575,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1259,"end":1273,"name":"anotherSummary"}],"body":{"type":"BlockStatement","start":1275,"end":1575,"body":[{"type":"IfStatement","start":1286,"end":1366,"test":{"type":"UnaryExpression","start":1290,"end":1302,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":1291,"end":1302,"object":{"type":"ThisExpression","start":1291,"end":1295},"property":{"type":"Identifier","start":1296,"end":1302,"name":"_error"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":1304,"end":1366,"body":[{"type":"ExpressionStatement","start":1319,"end":1355,"expression":{"type":"AssignmentExpression","start":1319,"end":1354,"operator":"=","left":{"type":"MemberExpression","start":1319,"end":1330,"object":{"type":"ThisExpression","start":1319,"end":1323},"property":{"type":"Identifier","start":1324,"end":1330,"name":"_error"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":1333,"end":1354,"object":{"type":"Identifier","start":1333,"end":1347,"name":"anotherSummary"},"property":{"type":"Identifier","start":1348,"end":1354,"name":"_error"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"ExpressionStatement","start":1376,"end":1414,"expression":{"type":"AssignmentExpression","start":1376,"end":1413,"operator":"+=","left":{"type":"MemberExpression","start":1376,"end":1387,"object":{"type":"ThisExpression","start":1376,"end":1380},"property":{"type":"Identifier","start":1381,"end":1387,"name":"_total"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1391,"end":1413,"callee":{"type":"MemberExpression","start":1391,"end":1411,"object":{"type":"Identifier","start":1391,"end":1405,"name":"anotherSummary"},"property":{"type":"Identifier","start":1406,"end":1411,"name":"total"},"computed":false,"optional":false},"arguments":[],"optional":false}}},{"type":"ExpressionStatement","start":1424,"end":1466,"expression":{"type":"AssignmentExpression","start":1424,"end":1465,"operator":"+=","left":{"type":"MemberExpression","start":1424,"end":1437,"object":{"type":"ThisExpression","start":1424,"end":1428},"property":{"type":"Identifier","start":1429,"end":1437,"name":"_ignored"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1441,"end":1465,"callee":{"type":"MemberExpression","start":1441,"end":1463,"object":{"type":"Identifier","start":1441,"end":1455,"name":"anotherSummary"},"property":{"type":"Identifier","start":1456,"end":1463,"name":"ignored"},"computed":false,"optional":false},"arguments":[],"optional":false}}},{"type":"ExpressionStatement","start":1476,"end":1518,"expression":{"type":"AssignmentExpression","start":1476,"end":1517,"operator":"+=","left":{"type":"MemberExpression","start":1476,"end":1489,"object":{"type":"ThisExpression","start":1476,"end":1480},"property":{"type":"Identifier","start":1481,"end":1489,"name":"_success"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1493,"end":1517,"callee":{"type":"MemberExpression","start":1493,"end":1515,"object":{"type":"Identifier","start":1493,"end":1507,"name":"anotherSummary"},"property":{"type":"Identifier","start":1508,"end":1515,"name":"success"},"computed":false,"optional":false},"arguments":[],"optional":false}}},{"type":"ExpressionStatement","start":1528,"end":1568,"expression":{"type":"AssignmentExpression","start":1528,"end":1567,"operator":"+=","left":{"type":"MemberExpression","start":1528,"end":1540,"object":{"type":"ThisExpression","start":1528,"end":1532},"property":{"type":"Identifier","start":1533,"end":1540,"name":"_failed"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1544,"end":1567,"callee":{"type":"MemberExpression","start":1544,"end":1565,"object":{"type":"Identifier","start":1544,"end":1558,"name":"anotherSummary"},"property":{"type":"Identifier","start":1559,"end":1565,"name":"failed"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]}}},{"type":"MethodDefinition","start":1581,"end":1626,"static":false,"computed":false,"key":{"type":"Identifier","start":1581,"end":1586,"name":"total"},"kind":"method","value":{"type":"FunctionExpression","start":1586,"end":1626,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1589,"end":1626,"body":[{"type":"ReturnStatement","start":1600,"end":1619,"argument":{"type":"MemberExpression","start":1607,"end":1618,"object":{"type":"ThisExpression","start":1607,"end":1611},"property":{"type":"Identifier","start":1612,"end":1618,"name":"_total"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":1632,"end":1681,"static":false,"computed":false,"key":{"type":"Identifier","start":1632,"end":1639,"name":"ignored"},"kind":"method","value":{"type":"FunctionExpression","start":1639,"end":1681,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1642,"end":1681,"body":[{"type":"ReturnStatement","start":1653,"end":1674,"argument":{"type":"MemberExpression","start":1660,"end":1673,"object":{"type":"ThisExpression","start":1660,"end":1664},"property":{"type":"Identifier","start":1665,"end":1673,"name":"_ignored"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":1687,"end":1736,"static":false,"computed":false,"key":{"type":"Identifier","start":1687,"end":1694,"name":"success"},"kind":"method","value":{"type":"FunctionExpression","start":1694,"end":1736,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1697,"end":1736,"body":[{"type":"ReturnStatement","start":1708,"end":1729,"argument":{"type":"MemberExpression","start":1715,"end":1728,"object":{"type":"ThisExpression","start":1715,"end":1719},"property":{"type":"Identifier","start":1720,"end":1728,"name":"_success"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":1742,"end":1789,"static":false,"computed":false,"key":{"type":"Identifier","start":1742,"end":1748,"name":"failed"},"kind":"method","value":{"type":"FunctionExpression","start":1748,"end":1789,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1751,"end":1789,"body":[{"type":"ReturnStatement","start":1762,"end":1782,"argument":{"type":"MemberExpression","start":1769,"end":1781,"object":{"type":"ThisExpression","start":1769,"end":1773},"property":{"type":"Identifier","start":1774,"end":1781,"name":"_failed"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":1854,"end":2351,"static":false,"computed":false,"key":{"type":"Identifier","start":1854,"end":1861,"name":"content"},"kind":"method","value":{"type":"FunctionExpression","start":1861,"end":2351,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1864,"end":2351,"body":[{"type":"VariableDeclaration","start":1875,"end":1886,"declarations":[{"type":"VariableDeclarator","start":1879,"end":1885,"id":{"type":"Identifier","start":1879,"end":1885,"name":"result"},"init":null}],"kind":"let"},{"type":"IfStatement","start":1896,"end":2320,"test":{"type":"MemberExpression","start":1900,"end":1911,"object":{"type":"ThisExpression","start":1900,"end":1904},"property":{"type":"Identifier","start":1905,"end":1911,"name":"_error"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":1913,"end":2073,"body":[{"type":"ExpressionStatement","start":1928,"end":2062,"expression":{"type":"AssignmentExpression","start":1928,"end":2061,"operator":"=","left":{"type":"Identifier","start":1928,"end":1934,"name":"result"},"right":{"type":"CallExpression","start":1937,"end":2061,"callee":{"type":"Identifier","start":1937,"end":1943,"name":"format"},"arguments":[{"type":"Literal","start":1944,"end":2011,"value":"Auto translation from \"%s\" to \"%s\" failed: \"%s\", failed units: %s","raw":"'Auto translation from \"%s\" to \"%s\" failed: \"%s\", failed units: %s'"},{"type":"MemberExpression","start":2013,"end":2023,"object":{"type":"ThisExpression","start":2013,"end":2017},"property":{"type":"Identifier","start":2018,"end":2023,"name":"_from"},"computed":false,"optional":false},{"type":"MemberExpression","start":2025,"end":2033,"object":{"type":"ThisExpression","start":2025,"end":2029},"property":{"type":"Identifier","start":2030,"end":2033,"name":"_to"},"computed":false,"optional":false},{"type":"MemberExpression","start":2035,"end":2046,"object":{"type":"ThisExpression","start":2035,"end":2039},"property":{"type":"Identifier","start":2040,"end":2046,"name":"_error"},"computed":false,"optional":false},{"type":"MemberExpression","start":2048,"end":2060,"object":{"type":"ThisExpression","start":2048,"end":2052},"property":{"type":"Identifier","start":2053,"end":2060,"name":"_failed"},"computed":false,"optional":false}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":2088,"end":2320,"body":[{"type":"ExpressionStatement","start":2103,"end":2309,"expression":{"type":"AssignmentExpression","start":2103,"end":2308,"operator":"=","left":{"type":"Identifier","start":2103,"end":2109,"name":"result"},"right":{"type":"CallExpression","start":2112,"end":2308,"callee":{"type":"Identifier","start":2112,"end":2118,"name":"format"},"arguments":[{"type":"Literal","start":2119,"end":2228,"value":"Auto translation from \"%s\" to \"%s\", total auto translated units: %s, ignored: %s, succesful: %s, failed: %s","raw":"'Auto translation from \"%s\" to \"%s\", total auto translated units: %s, ignored: %s, succesful: %s, failed: %s'"},{"type":"MemberExpression","start":2230,"end":2240,"object":{"type":"ThisExpression","start":2230,"end":2234},"property":{"type":"Identifier","start":2235,"end":2240,"name":"_from"},"computed":false,"optional":false},{"type":"MemberExpression","start":2242,"end":2250,"object":{"type":"ThisExpression","start":2242,"end":2246},"property":{"type":"Identifier","start":2247,"end":2250,"name":"_to"},"computed":false,"optional":false},{"type":"MemberExpression","start":2252,"end":2263,"object":{"type":"ThisExpression","start":2252,"end":2256},"property":{"type":"Identifier","start":2257,"end":2263,"name":"_total"},"computed":false,"optional":false},{"type":"MemberExpression","start":2265,"end":2278,"object":{"type":"ThisExpression","start":2265,"end":2269},"property":{"type":"Identifier","start":2270,"end":2278,"name":"_ignored"},"computed":false,"optional":false},{"type":"MemberExpression","start":2280,"end":2293,"object":{"type":"ThisExpression","start":2280,"end":2284},"property":{"type":"Identifier","start":2285,"end":2293,"name":"_success"},"computed":false,"optional":false},{"type":"MemberExpression","start":2295,"end":2307,"object":{"type":"ThisExpression","start":2295,"end":2299},"property":{"type":"Identifier","start":2300,"end":2307,"name":"_failed"},"computed":false,"optional":false}],"optional":false}}}]}},{"type":"ReturnStatement","start":2330,"end":2344,"argument":{"type":"Identifier","start":2337,"end":2343,"name":"result"}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by10cmFuc2xhdGUtc3VtbWFyeS1yZXBvcnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy94bGlmZm1lcmdlL3NyYy9hdXRvdHJhbnNsYXRlL2F1dG8tdHJhbnNsYXRlLXN1bW1hcnktcmVwb3J0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFHNUI7OztHQUdHO0FBRUgsTUFBTSxPQUFPLDBCQUEwQjtJQVVyQyxZQUFZLElBQVksRUFBRSxFQUFVO1FBQ2xDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDO1FBQ2QsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFDaEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7SUFDbkIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxRQUFRLENBQUMsS0FBYSxFQUFFLEtBQWE7UUFDMUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFDdkIsQ0FBQztJQUVNLEtBQUs7UUFDVixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztJQUVNLFVBQVUsQ0FBQyxPQUFlO1FBQy9CLElBQUksQ0FBQyxNQUFNLElBQUksT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO0lBQzFCLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksZUFBZSxDQUFDLEVBQWMsRUFBRSxNQUEyQjtRQUNoRSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDZCxJQUFJLE1BQU0sQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUNwQixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDakI7YUFBTTtZQUNMLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUNoQjtJQUNILENBQUM7SUFFRDs7O09BR0c7SUFDSSxLQUFLLENBQUMsY0FBMEM7UUFDckQsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxjQUFjLENBQUMsTUFBTSxDQUFDO1NBQ3JDO1FBQ0QsSUFBSSxDQUFDLE1BQU0sSUFBSSxjQUFjLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDdEMsSUFBSSxDQUFDLFFBQVEsSUFBSSxjQUFjLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDMUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxjQUFjLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDMUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxjQUFjLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDMUMsQ0FBQztJQUVNLEtBQUs7UUFDVixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztJQUVNLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztJQUVNLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztJQUVNLE1BQU07UUFDWCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksT0FBTztRQUNaLElBQUksTUFBTSxDQUFDO1FBQ1gsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2YsTUFBTSxHQUFHLE1BQU0sQ0FBQyxtRUFBbUUsRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDdkk7YUFBTTtZQUNMLE1BQU0sR0FBRyxNQUFNLENBQUMsNkdBQTZHLEVBQ3pILElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDcEY7UUFDRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0F1dG9UcmFuc2xhdGVSZXN1bHR9IGZyb20gJy4vYXV0by10cmFuc2xhdGUtcmVzdWx0JztcclxuaW1wb3J0IHtmb3JtYXR9IGZyb20gJ3V0aWwnO1xyXG5pbXBvcnQge0lUcmFuc1VuaXR9IGZyb20gJ0BuZ3gtaTE4bnN1cHBvcnQvbmd4LWkxOG5zdXBwb3J0LWxpYic7XHJcblxyXG4vKipcclxuICogQSByZXBvcnQgYWJvdXQgYSBydW4gb2YgR29vZ2xlIFRyYW5zbGF0ZSBvdmVyIGFsbCB1bnRyYW5zbGF0ZWQgdW5pdC5cclxuICogKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAyOS4wNi4yMDE3LlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBBdXRvVHJhbnNsYXRlU3VtbWFyeVJlcG9ydCB7XHJcblxyXG4gIHByaXZhdGUgX2Vycm9yOiBzdHJpbmc7XHJcbiAgcHJpdmF0ZSBfZnJvbTogc3RyaW5nO1xyXG4gIHByaXZhdGUgX3RvOiBzdHJpbmc7XHJcbiAgcHJpdmF0ZSBfdG90YWw6IG51bWJlcjtcclxuICBwcml2YXRlIF9pZ25vcmVkOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBfc3VjY2VzczogbnVtYmVyO1xyXG4gIHByaXZhdGUgX2ZhaWxlZDogbnVtYmVyO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihmcm9tOiBzdHJpbmcsIHRvOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuX2Zyb20gPSBmcm9tO1xyXG4gICAgdGhpcy5fdG8gPSB0bztcclxuICAgIHRoaXMuX3RvdGFsID0gMDtcclxuICAgIHRoaXMuX2lnbm9yZWQgPSAwO1xyXG4gICAgdGhpcy5fc3VjY2VzcyA9IDA7XHJcbiAgICB0aGlzLl9mYWlsZWQgPSAwO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2V0IGVycm9yIGlmIHRvdGFsIGNhbGwgZmFpbGVkIChlLmcuIFwiaW52YWxpZCBhcGkga2V5XCIgb3IgXCJubyBjb25uZWN0aW9uXCIgLi4uKVxyXG4gICAqIEBwYXJhbSBlcnJvciBlcnJvclxyXG4gICAqIEBwYXJhbSB0b3RhbCB0b3RhbFxyXG4gICAqL1xyXG4gIHB1YmxpYyBzZXRFcnJvcihlcnJvcjogc3RyaW5nLCB0b3RhbDogbnVtYmVyKSB7XHJcbiAgICB0aGlzLl9lcnJvciA9IGVycm9yO1xyXG4gICAgdGhpcy5fdG90YWwgPSB0b3RhbDtcclxuICAgIHRoaXMuX2ZhaWxlZCA9IHRvdGFsO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGVycm9yKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5fZXJyb3I7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0SWdub3JlZChpZ25vcmVkOiBudW1iZXIpIHtcclxuICAgIHRoaXMuX3RvdGFsICs9IGlnbm9yZWQ7XHJcbiAgICB0aGlzLl9pZ25vcmVkID0gaWdub3JlZDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEFkZCBhIHNpbmdsZSByZXN1bHQgdG8gdGhlIHN1bW1hcnkuXHJcbiAgICogQHBhcmFtIHR1IHR1XHJcbiAgICogQHBhcmFtIHJlc3VsdCByZXN1bHRcclxuICAgKi9cclxuICBwdWJsaWMgYWRkU2luZ2xlUmVzdWx0KHR1OiBJVHJhbnNVbml0LCByZXN1bHQ6IEF1dG9UcmFuc2xhdGVSZXN1bHQpIHtcclxuICAgIHRoaXMuX3RvdGFsKys7XHJcbiAgICBpZiAocmVzdWx0LnN1Y2Nlc3MoKSkge1xyXG4gICAgICB0aGlzLl9zdWNjZXNzKys7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9mYWlsZWQrKztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIE1lcmdlIGFub3RoZXIgc3VtbWFyeSBpbnRvIHRoaXMgb25lLlxyXG4gICAqIEBwYXJhbSBhbm90aGVyU3VtbWFyeSBhbm90aGVyU3VtbWFyeVxyXG4gICAqL1xyXG4gIHB1YmxpYyBtZXJnZShhbm90aGVyU3VtbWFyeTogQXV0b1RyYW5zbGF0ZVN1bW1hcnlSZXBvcnQpIHtcclxuICAgIGlmICghdGhpcy5fZXJyb3IpIHtcclxuICAgICAgdGhpcy5fZXJyb3IgPSBhbm90aGVyU3VtbWFyeS5fZXJyb3I7XHJcbiAgICB9XHJcbiAgICB0aGlzLl90b3RhbCArPSBhbm90aGVyU3VtbWFyeS50b3RhbCgpO1xyXG4gICAgdGhpcy5faWdub3JlZCArPSBhbm90aGVyU3VtbWFyeS5pZ25vcmVkKCk7XHJcbiAgICB0aGlzLl9zdWNjZXNzICs9IGFub3RoZXJTdW1tYXJ5LnN1Y2Nlc3MoKTtcclxuICAgIHRoaXMuX2ZhaWxlZCArPSBhbm90aGVyU3VtbWFyeS5mYWlsZWQoKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyB0b3RhbCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX3RvdGFsO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGlnbm9yZWQoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl9pZ25vcmVkO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHN1Y2Nlc3MoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl9zdWNjZXNzO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGZhaWxlZCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX2ZhaWxlZDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEh1bWFuIHJlYWRhYmxlIHZlcnNpb24gb2YgcmVwb3J0XHJcbiAgICovXHJcbiAgcHVibGljIGNvbnRlbnQoKTogc3RyaW5nIHtcclxuICAgIGxldCByZXN1bHQ7XHJcbiAgICBpZiAodGhpcy5fZXJyb3IpIHtcclxuICAgICAgcmVzdWx0ID0gZm9ybWF0KCdBdXRvIHRyYW5zbGF0aW9uIGZyb20gXCIlc1wiIHRvIFwiJXNcIiBmYWlsZWQ6IFwiJXNcIiwgZmFpbGVkIHVuaXRzOiAlcycsIHRoaXMuX2Zyb20sIHRoaXMuX3RvLCB0aGlzLl9lcnJvciwgdGhpcy5fZmFpbGVkKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJlc3VsdCA9IGZvcm1hdCgnQXV0byB0cmFuc2xhdGlvbiBmcm9tIFwiJXNcIiB0byBcIiVzXCIsIHRvdGFsIGF1dG8gdHJhbnNsYXRlZCB1bml0czogJXMsIGlnbm9yZWQ6ICVzLCBzdWNjZXNmdWw6ICVzLCBmYWlsZWQ6ICVzJyxcclxuICAgICAgICAgIHRoaXMuX2Zyb20sIHRoaXMuX3RvLCB0aGlzLl90b3RhbCwgdGhpcy5faWdub3JlZCwgdGhpcy5fc3VjY2VzcywgdGhpcy5fZmFpbGVkKTtcclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG59XHJcbiJdfQ==","start":2356,"end":8954}]},"code":"import { format } from 'util';\r\n/**\r\n * A report about a run of Google Translate over all untranslated unit.\r\n * * Created by martin on 29.06.2017.\r\n */\r\nexport class AutoTranslateSummaryReport {\r\n    constructor(from, to) {\r\n        this._from = from;\r\n        this._to = to;\r\n        this._total = 0;\r\n        this._ignored = 0;\r\n        this._success = 0;\r\n        this._failed = 0;\r\n    }\r\n    /**\r\n     * Set error if total call failed (e.g. \"invalid api key\" or \"no connection\" ...)\r\n     * @param error error\r\n     * @param total total\r\n     */\r\n    setError(error, total) {\r\n        this._error = error;\r\n        this._total = total;\r\n        this._failed = total;\r\n    }\r\n    error() {\r\n        return this._error;\r\n    }\r\n    setIgnored(ignored) {\r\n        this._total += ignored;\r\n        this._ignored = ignored;\r\n    }\r\n    /**\r\n     * Add a single result to the summary.\r\n     * @param tu tu\r\n     * @param result result\r\n     */\r\n    addSingleResult(tu, result) {\r\n        this._total++;\r\n        if (result.success()) {\r\n            this._success++;\r\n        }\r\n        else {\r\n            this._failed++;\r\n        }\r\n    }\r\n    /**\r\n     * Merge another summary into this one.\r\n     * @param anotherSummary anotherSummary\r\n     */\r\n    merge(anotherSummary) {\r\n        if (!this._error) {\r\n            this._error = anotherSummary._error;\r\n        }\r\n        this._total += anotherSummary.total();\r\n        this._ignored += anotherSummary.ignored();\r\n        this._success += anotherSummary.success();\r\n        this._failed += anotherSummary.failed();\r\n    }\r\n    total() {\r\n        return this._total;\r\n    }\r\n    ignored() {\r\n        return this._ignored;\r\n    }\r\n    success() {\r\n        return this._success;\r\n    }\r\n    failed() {\r\n        return this._failed;\r\n    }\r\n    /**\r\n     * Human readable version of report\r\n     */\r\n    content() {\r\n        let result;\r\n        if (this._error) {\r\n            result = format('Auto translation from \"%s\" to \"%s\" failed: \"%s\", failed units: %s', this._from, this._to, this._error, this._failed);\r\n        }\r\n        else {\r\n            result = format('Auto translation from \"%s\" to \"%s\", total auto translated units: %s, ignored: %s, succesful: %s, failed: %s', this._from, this._to, this._total, this._ignored, this._success, this._failed);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by10cmFuc2xhdGUtc3VtbWFyeS1yZXBvcnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy94bGlmZm1lcmdlL3NyYy9hdXRvdHJhbnNsYXRlL2F1dG8tdHJhbnNsYXRlLXN1bW1hcnktcmVwb3J0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFHNUI7OztHQUdHO0FBRUgsTUFBTSxPQUFPLDBCQUEwQjtJQVVyQyxZQUFZLElBQVksRUFBRSxFQUFVO1FBQ2xDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDO1FBQ2QsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFDaEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7SUFDbkIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxRQUFRLENBQUMsS0FBYSxFQUFFLEtBQWE7UUFDMUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFDdkIsQ0FBQztJQUVNLEtBQUs7UUFDVixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztJQUVNLFVBQVUsQ0FBQyxPQUFlO1FBQy9CLElBQUksQ0FBQyxNQUFNLElBQUksT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO0lBQzFCLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksZUFBZSxDQUFDLEVBQWMsRUFBRSxNQUEyQjtRQUNoRSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDZCxJQUFJLE1BQU0sQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUNwQixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDakI7YUFBTTtZQUNMLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUNoQjtJQUNILENBQUM7SUFFRDs7O09BR0c7SUFDSSxLQUFLLENBQUMsY0FBMEM7UUFDckQsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxjQUFjLENBQUMsTUFBTSxDQUFDO1NBQ3JDO1FBQ0QsSUFBSSxDQUFDLE1BQU0sSUFBSSxjQUFjLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDdEMsSUFBSSxDQUFDLFFBQVEsSUFBSSxjQUFjLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDMUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxjQUFjLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDMUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxjQUFjLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDMUMsQ0FBQztJQUVNLEtBQUs7UUFDVixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztJQUVNLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztJQUVNLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztJQUVNLE1BQU07UUFDWCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksT0FBTztRQUNaLElBQUksTUFBTSxDQUFDO1FBQ1gsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2YsTUFBTSxHQUFHLE1BQU0sQ0FBQyxtRUFBbUUsRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDdkk7YUFBTTtZQUNMLE1BQU0sR0FBRyxNQUFNLENBQUMsNkdBQTZHLEVBQ3pILElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDcEY7UUFDRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0F1dG9UcmFuc2xhdGVSZXN1bHR9IGZyb20gJy4vYXV0by10cmFuc2xhdGUtcmVzdWx0JztcclxuaW1wb3J0IHtmb3JtYXR9IGZyb20gJ3V0aWwnO1xyXG5pbXBvcnQge0lUcmFuc1VuaXR9IGZyb20gJ0BuZ3gtaTE4bnN1cHBvcnQvbmd4LWkxOG5zdXBwb3J0LWxpYic7XHJcblxyXG4vKipcclxuICogQSByZXBvcnQgYWJvdXQgYSBydW4gb2YgR29vZ2xlIFRyYW5zbGF0ZSBvdmVyIGFsbCB1bnRyYW5zbGF0ZWQgdW5pdC5cclxuICogKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAyOS4wNi4yMDE3LlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBBdXRvVHJhbnNsYXRlU3VtbWFyeVJlcG9ydCB7XHJcblxyXG4gIHByaXZhdGUgX2Vycm9yOiBzdHJpbmc7XHJcbiAgcHJpdmF0ZSBfZnJvbTogc3RyaW5nO1xyXG4gIHByaXZhdGUgX3RvOiBzdHJpbmc7XHJcbiAgcHJpdmF0ZSBfdG90YWw6IG51bWJlcjtcclxuICBwcml2YXRlIF9pZ25vcmVkOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBfc3VjY2VzczogbnVtYmVyO1xyXG4gIHByaXZhdGUgX2ZhaWxlZDogbnVtYmVyO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihmcm9tOiBzdHJpbmcsIHRvOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuX2Zyb20gPSBmcm9tO1xyXG4gICAgdGhpcy5fdG8gPSB0bztcclxuICAgIHRoaXMuX3RvdGFsID0gMDtcclxuICAgIHRoaXMuX2lnbm9yZWQgPSAwO1xyXG4gICAgdGhpcy5fc3VjY2VzcyA9IDA7XHJcbiAgICB0aGlzLl9mYWlsZWQgPSAwO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2V0IGVycm9yIGlmIHRvdGFsIGNhbGwgZmFpbGVkIChlLmcuIFwiaW52YWxpZCBhcGkga2V5XCIgb3IgXCJubyBjb25uZWN0aW9uXCIgLi4uKVxyXG4gICAqIEBwYXJhbSBlcnJvciBlcnJvclxyXG4gICAqIEBwYXJhbSB0b3RhbCB0b3RhbFxyXG4gICAqL1xyXG4gIHB1YmxpYyBzZXRFcnJvcihlcnJvcjogc3RyaW5nLCB0b3RhbDogbnVtYmVyKSB7XHJcbiAgICB0aGlzLl9lcnJvciA9IGVycm9yO1xyXG4gICAgdGhpcy5fdG90YWwgPSB0b3RhbDtcclxuICAgIHRoaXMuX2ZhaWxlZCA9IHRvdGFsO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGVycm9yKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5fZXJyb3I7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0SWdub3JlZChpZ25vcmVkOiBudW1iZXIpIHtcclxuICAgIHRoaXMuX3RvdGFsICs9IGlnbm9yZWQ7XHJcbiAgICB0aGlzLl9pZ25vcmVkID0gaWdub3JlZDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEFkZCBhIHNpbmdsZSByZXN1bHQgdG8gdGhlIHN1bW1hcnkuXHJcbiAgICogQHBhcmFtIHR1IHR1XHJcbiAgICogQHBhcmFtIHJlc3VsdCByZXN1bHRcclxuICAgKi9cclxuICBwdWJsaWMgYWRkU2luZ2xlUmVzdWx0KHR1OiBJVHJhbnNVbml0LCByZXN1bHQ6IEF1dG9UcmFuc2xhdGVSZXN1bHQpIHtcclxuICAgIHRoaXMuX3RvdGFsKys7XHJcbiAgICBpZiAocmVzdWx0LnN1Y2Nlc3MoKSkge1xyXG4gICAgICB0aGlzLl9zdWNjZXNzKys7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9mYWlsZWQrKztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIE1lcmdlIGFub3RoZXIgc3VtbWFyeSBpbnRvIHRoaXMgb25lLlxyXG4gICAqIEBwYXJhbSBhbm90aGVyU3VtbWFyeSBhbm90aGVyU3VtbWFyeVxyXG4gICAqL1xyXG4gIHB1YmxpYyBtZXJnZShhbm90aGVyU3VtbWFyeTogQXV0b1RyYW5zbGF0ZVN1bW1hcnlSZXBvcnQpIHtcclxuICAgIGlmICghdGhpcy5fZXJyb3IpIHtcclxuICAgICAgdGhpcy5fZXJyb3IgPSBhbm90aGVyU3VtbWFyeS5fZXJyb3I7XHJcbiAgICB9XHJcbiAgICB0aGlzLl90b3RhbCArPSBhbm90aGVyU3VtbWFyeS50b3RhbCgpO1xyXG4gICAgdGhpcy5faWdub3JlZCArPSBhbm90aGVyU3VtbWFyeS5pZ25vcmVkKCk7XHJcbiAgICB0aGlzLl9zdWNjZXNzICs9IGFub3RoZXJTdW1tYXJ5LnN1Y2Nlc3MoKTtcclxuICAgIHRoaXMuX2ZhaWxlZCArPSBhbm90aGVyU3VtbWFyeS5mYWlsZWQoKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyB0b3RhbCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX3RvdGFsO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGlnbm9yZWQoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl9pZ25vcmVkO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHN1Y2Nlc3MoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl9zdWNjZXNzO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGZhaWxlZCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX2ZhaWxlZDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEh1bWFuIHJlYWRhYmxlIHZlcnNpb24gb2YgcmVwb3J0XHJcbiAgICovXHJcbiAgcHVibGljIGNvbnRlbnQoKTogc3RyaW5nIHtcclxuICAgIGxldCByZXN1bHQ7XHJcbiAgICBpZiAodGhpcy5fZXJyb3IpIHtcclxuICAgICAgcmVzdWx0ID0gZm9ybWF0KCdBdXRvIHRyYW5zbGF0aW9uIGZyb20gXCIlc1wiIHRvIFwiJXNcIiBmYWlsZWQ6IFwiJXNcIiwgZmFpbGVkIHVuaXRzOiAlcycsIHRoaXMuX2Zyb20sIHRoaXMuX3RvLCB0aGlzLl9lcnJvciwgdGhpcy5fZmFpbGVkKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJlc3VsdCA9IGZvcm1hdCgnQXV0byB0cmFuc2xhdGlvbiBmcm9tIFwiJXNcIiB0byBcIiVzXCIsIHRvdGFsIGF1dG8gdHJhbnNsYXRlZCB1bml0czogJXMsIGlnbm9yZWQ6ICVzLCBzdWNjZXNmdWw6ICVzLCBmYWlsZWQ6ICVzJyxcclxuICAgICAgICAgIHRoaXMuX2Zyb20sIHRoaXMuX3RvLCB0aGlzLl90b3RhbCwgdGhpcy5faWdub3JlZCwgdGhpcy5fc3VjY2VzcywgdGhpcy5fZmFpbGVkKTtcclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG59XHJcbiJdfQ==","customTransformCache":false,"dependencies":["util"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\autotranslate\\auto-translate-summary-report.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { format } from 'util';\r\n/**\r\n * A report about a run of Google Translate over all untranslated unit.\r\n * * Created by martin on 29.06.2017.\r\n */\r\nexport class AutoTranslateSummaryReport {\r\n    constructor(from, to) {\r\n        this._from = from;\r\n        this._to = to;\r\n        this._total = 0;\r\n        this._ignored = 0;\r\n        this._success = 0;\r\n        this._failed = 0;\r\n    }\r\n    /**\r\n     * Set error if total call failed (e.g. \"invalid api key\" or \"no connection\" ...)\r\n     * @param error error\r\n     * @param total total\r\n     */\r\n    setError(error, total) {\r\n        this._error = error;\r\n        this._total = total;\r\n        this._failed = total;\r\n    }\r\n    error() {\r\n        return this._error;\r\n    }\r\n    setIgnored(ignored) {\r\n        this._total += ignored;\r\n        this._ignored = ignored;\r\n    }\r\n    /**\r\n     * Add a single result to the summary.\r\n     * @param tu tu\r\n     * @param result result\r\n     */\r\n    addSingleResult(tu, result) {\r\n        this._total++;\r\n        if (result.success()) {\r\n            this._success++;\r\n        }\r\n        else {\r\n            this._failed++;\r\n        }\r\n    }\r\n    /**\r\n     * Merge another summary into this one.\r\n     * @param anotherSummary anotherSummary\r\n     */\r\n    merge(anotherSummary) {\r\n        if (!this._error) {\r\n            this._error = anotherSummary._error;\r\n        }\r\n        this._total += anotherSummary.total();\r\n        this._ignored += anotherSummary.ignored();\r\n        this._success += anotherSummary.success();\r\n        this._failed += anotherSummary.failed();\r\n    }\r\n    total() {\r\n        return this._total;\r\n    }\r\n    ignored() {\r\n        return this._ignored;\r\n    }\r\n    success() {\r\n        return this._success;\r\n    }\r\n    failed() {\r\n        return this._failed;\r\n    }\r\n    /**\r\n     * Human readable version of report\r\n     */\r\n    content() {\r\n        let result;\r\n        if (this._error) {\r\n            result = format('Auto translation from \"%s\" to \"%s\" failed: \"%s\", failed units: %s', this._from, this._to, this._error, this._failed);\r\n        }\r\n        else {\r\n            result = format('Auto translation from \"%s\" to \"%s\", total auto translated units: %s, ignored: %s, succesful: %s, failed: %s', this._from, this._to, this._total, this._ignored, this._success, this._failed);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by10cmFuc2xhdGUtc3VtbWFyeS1yZXBvcnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy94bGlmZm1lcmdlL3NyYy9hdXRvdHJhbnNsYXRlL2F1dG8tdHJhbnNsYXRlLXN1bW1hcnktcmVwb3J0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFHNUI7OztHQUdHO0FBRUgsTUFBTSxPQUFPLDBCQUEwQjtJQVVyQyxZQUFZLElBQVksRUFBRSxFQUFVO1FBQ2xDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDO1FBQ2QsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFDaEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7SUFDbkIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxRQUFRLENBQUMsS0FBYSxFQUFFLEtBQWE7UUFDMUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFDdkIsQ0FBQztJQUVNLEtBQUs7UUFDVixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztJQUVNLFVBQVUsQ0FBQyxPQUFlO1FBQy9CLElBQUksQ0FBQyxNQUFNLElBQUksT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO0lBQzFCLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksZUFBZSxDQUFDLEVBQWMsRUFBRSxNQUEyQjtRQUNoRSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDZCxJQUFJLE1BQU0sQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUNwQixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDakI7YUFBTTtZQUNMLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUNoQjtJQUNILENBQUM7SUFFRDs7O09BR0c7SUFDSSxLQUFLLENBQUMsY0FBMEM7UUFDckQsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxjQUFjLENBQUMsTUFBTSxDQUFDO1NBQ3JDO1FBQ0QsSUFBSSxDQUFDLE1BQU0sSUFBSSxjQUFjLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDdEMsSUFBSSxDQUFDLFFBQVEsSUFBSSxjQUFjLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDMUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxjQUFjLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDMUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxjQUFjLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDMUMsQ0FBQztJQUVNLEtBQUs7UUFDVixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztJQUVNLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztJQUVNLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztJQUVNLE1BQU07UUFDWCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksT0FBTztRQUNaLElBQUksTUFBTSxDQUFDO1FBQ1gsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2YsTUFBTSxHQUFHLE1BQU0sQ0FBQyxtRUFBbUUsRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDdkk7YUFBTTtZQUNMLE1BQU0sR0FBRyxNQUFNLENBQUMsNkdBQTZHLEVBQ3pILElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDcEY7UUFDRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0F1dG9UcmFuc2xhdGVSZXN1bHR9IGZyb20gJy4vYXV0by10cmFuc2xhdGUtcmVzdWx0JztcclxuaW1wb3J0IHtmb3JtYXR9IGZyb20gJ3V0aWwnO1xyXG5pbXBvcnQge0lUcmFuc1VuaXR9IGZyb20gJ0BuZ3gtaTE4bnN1cHBvcnQvbmd4LWkxOG5zdXBwb3J0LWxpYic7XHJcblxyXG4vKipcclxuICogQSByZXBvcnQgYWJvdXQgYSBydW4gb2YgR29vZ2xlIFRyYW5zbGF0ZSBvdmVyIGFsbCB1bnRyYW5zbGF0ZWQgdW5pdC5cclxuICogKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAyOS4wNi4yMDE3LlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBBdXRvVHJhbnNsYXRlU3VtbWFyeVJlcG9ydCB7XHJcblxyXG4gIHByaXZhdGUgX2Vycm9yOiBzdHJpbmc7XHJcbiAgcHJpdmF0ZSBfZnJvbTogc3RyaW5nO1xyXG4gIHByaXZhdGUgX3RvOiBzdHJpbmc7XHJcbiAgcHJpdmF0ZSBfdG90YWw6IG51bWJlcjtcclxuICBwcml2YXRlIF9pZ25vcmVkOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBfc3VjY2VzczogbnVtYmVyO1xyXG4gIHByaXZhdGUgX2ZhaWxlZDogbnVtYmVyO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihmcm9tOiBzdHJpbmcsIHRvOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuX2Zyb20gPSBmcm9tO1xyXG4gICAgdGhpcy5fdG8gPSB0bztcclxuICAgIHRoaXMuX3RvdGFsID0gMDtcclxuICAgIHRoaXMuX2lnbm9yZWQgPSAwO1xyXG4gICAgdGhpcy5fc3VjY2VzcyA9IDA7XHJcbiAgICB0aGlzLl9mYWlsZWQgPSAwO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2V0IGVycm9yIGlmIHRvdGFsIGNhbGwgZmFpbGVkIChlLmcuIFwiaW52YWxpZCBhcGkga2V5XCIgb3IgXCJubyBjb25uZWN0aW9uXCIgLi4uKVxyXG4gICAqIEBwYXJhbSBlcnJvciBlcnJvclxyXG4gICAqIEBwYXJhbSB0b3RhbCB0b3RhbFxyXG4gICAqL1xyXG4gIHB1YmxpYyBzZXRFcnJvcihlcnJvcjogc3RyaW5nLCB0b3RhbDogbnVtYmVyKSB7XHJcbiAgICB0aGlzLl9lcnJvciA9IGVycm9yO1xyXG4gICAgdGhpcy5fdG90YWwgPSB0b3RhbDtcclxuICAgIHRoaXMuX2ZhaWxlZCA9IHRvdGFsO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGVycm9yKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5fZXJyb3I7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0SWdub3JlZChpZ25vcmVkOiBudW1iZXIpIHtcclxuICAgIHRoaXMuX3RvdGFsICs9IGlnbm9yZWQ7XHJcbiAgICB0aGlzLl9pZ25vcmVkID0gaWdub3JlZDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEFkZCBhIHNpbmdsZSByZXN1bHQgdG8gdGhlIHN1bW1hcnkuXHJcbiAgICogQHBhcmFtIHR1IHR1XHJcbiAgICogQHBhcmFtIHJlc3VsdCByZXN1bHRcclxuICAgKi9cclxuICBwdWJsaWMgYWRkU2luZ2xlUmVzdWx0KHR1OiBJVHJhbnNVbml0LCByZXN1bHQ6IEF1dG9UcmFuc2xhdGVSZXN1bHQpIHtcclxuICAgIHRoaXMuX3RvdGFsKys7XHJcbiAgICBpZiAocmVzdWx0LnN1Y2Nlc3MoKSkge1xyXG4gICAgICB0aGlzLl9zdWNjZXNzKys7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9mYWlsZWQrKztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIE1lcmdlIGFub3RoZXIgc3VtbWFyeSBpbnRvIHRoaXMgb25lLlxyXG4gICAqIEBwYXJhbSBhbm90aGVyU3VtbWFyeSBhbm90aGVyU3VtbWFyeVxyXG4gICAqL1xyXG4gIHB1YmxpYyBtZXJnZShhbm90aGVyU3VtbWFyeTogQXV0b1RyYW5zbGF0ZVN1bW1hcnlSZXBvcnQpIHtcclxuICAgIGlmICghdGhpcy5fZXJyb3IpIHtcclxuICAgICAgdGhpcy5fZXJyb3IgPSBhbm90aGVyU3VtbWFyeS5fZXJyb3I7XHJcbiAgICB9XHJcbiAgICB0aGlzLl90b3RhbCArPSBhbm90aGVyU3VtbWFyeS50b3RhbCgpO1xyXG4gICAgdGhpcy5faWdub3JlZCArPSBhbm90aGVyU3VtbWFyeS5pZ25vcmVkKCk7XHJcbiAgICB0aGlzLl9zdWNjZXNzICs9IGFub3RoZXJTdW1tYXJ5LnN1Y2Nlc3MoKTtcclxuICAgIHRoaXMuX2ZhaWxlZCArPSBhbm90aGVyU3VtbWFyeS5mYWlsZWQoKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyB0b3RhbCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX3RvdGFsO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGlnbm9yZWQoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl9pZ25vcmVkO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHN1Y2Nlc3MoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl9zdWNjZXNzO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGZhaWxlZCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX2ZhaWxlZDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEh1bWFuIHJlYWRhYmxlIHZlcnNpb24gb2YgcmVwb3J0XHJcbiAgICovXHJcbiAgcHVibGljIGNvbnRlbnQoKTogc3RyaW5nIHtcclxuICAgIGxldCByZXN1bHQ7XHJcbiAgICBpZiAodGhpcy5fZXJyb3IpIHtcclxuICAgICAgcmVzdWx0ID0gZm9ybWF0KCdBdXRvIHRyYW5zbGF0aW9uIGZyb20gXCIlc1wiIHRvIFwiJXNcIiBmYWlsZWQ6IFwiJXNcIiwgZmFpbGVkIHVuaXRzOiAlcycsIHRoaXMuX2Zyb20sIHRoaXMuX3RvLCB0aGlzLl9lcnJvciwgdGhpcy5fZmFpbGVkKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJlc3VsdCA9IGZvcm1hdCgnQXV0byB0cmFuc2xhdGlvbiBmcm9tIFwiJXNcIiB0byBcIiVzXCIsIHRvdGFsIGF1dG8gdHJhbnNsYXRlZCB1bml0czogJXMsIGlnbm9yZWQ6ICVzLCBzdWNjZXNmdWw6ICVzLCBmYWlsZWQ6ICVzJyxcclxuICAgICAgICAgIHRoaXMuX2Zyb20sIHRoaXMuX3RvLCB0aGlzLl90b3RhbCwgdGhpcy5faWdub3JlZCwgdGhpcy5fc3VjY2VzcywgdGhpcy5fZmFpbGVkKTtcclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG59XHJcbiJdfQ==","originalSourcemap":{"version":3,"file":"auto-translate-summary-report.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/autotranslate/auto-translate-summary-report.ts"],"names":[],"mappings":[[[0,0,1,0],[7,0,1,7],[9,0,1,8],[15,0,1,14],[17,0,1,15],[23,0,1,21],[29,0,1,27],[30,0,1,28]],[[0,0,4,0]],[],[],[[3,0,7,3]],[[0,0,9,0],[6,0,9,6],[13,0,9,13],[39,0,9,39]],[[4,0,19,2],[16,0,19,14],[20,0,19,26],[22,0,19,28],[24,0,19,38]],[[8,0,20,4],[12,0,20,8],[13,0,20,9],[18,0,20,14],[21,0,20,17],[25,0,20,21],[26,0,20,22]],[[8,0,21,4],[12,0,21,8],[13,0,21,9],[16,0,21,12],[19,0,21,15],[21,0,21,17],[22,0,21,18]],[[8,0,22,4],[12,0,22,8],[13,0,22,9],[19,0,22,15],[22,0,22,18],[23,0,22,19],[24,0,22,20]],[[8,0,23,4],[12,0,23,8],[13,0,23,9],[21,0,23,17],[24,0,23,20],[25,0,23,21],[26,0,23,22]],[[8,0,24,4],[12,0,24,8],[13,0,24,9],[21,0,24,17],[24,0,24,20],[25,0,24,21],[26,0,24,22]],[[8,0,25,4],[12,0,25,8],[13,0,25,9],[20,0,25,16],[23,0,25,19],[24,0,25,20],[25,0,25,21]],[[4,0,26,2],[5,0,26,3]],[[4,0,28,2]],[],[],[],[[7,0,32,5]],[[4,0,33,9],[12,0,33,17],[13,0,33,18],[18,0,33,31],[20,0,33,33],[25,0,33,46]],[[8,0,34,4],[12,0,34,8],[13,0,34,9],[19,0,34,15],[22,0,34,18],[27,0,34,23],[28,0,34,24]],[[8,0,35,4],[12,0,35,8],[13,0,35,9],[19,0,35,15],[22,0,35,18],[27,0,35,23],[28,0,35,24]],[[8,0,36,4],[12,0,36,8],[13,0,36,9],[20,0,36,16],[23,0,36,19],[28,0,36,24],[29,0,36,25]],[[4,0,37,2],[5,0,37,3]],[[4,0,39,9],[9,0,39,14]],[[8,0,40,4],[15,0,40,11],[19,0,40,15],[20,0,40,16],[26,0,40,22],[27,0,40,23]],[[4,0,41,2],[5,0,41,3]],[[4,0,43,9],[14,0,43,19],[15,0,43,20],[22,0,43,35]],[[8,0,44,4],[12,0,44,8],[13,0,44,9],[19,0,44,15],[23,0,44,19],[30,0,44,26],[31,0,44,27]],[[8,0,45,4],[12,0,45,8],[13,0,45,9],[21,0,45,17],[24,0,45,20],[31,0,45,27],[32,0,45,28]],[[4,0,46,2],[5,0,46,3]],[[4,0,48,2]],[],[],[],[[7,0,52,5]],[[4,0,53,9],[19,0,53,24],[20,0,53,25],[22,0,53,39],[24,0,53,41],[30,0,53,68]],[[8,0,54,4],[12,0,54,8],[13,0,54,9],[19,0,54,15],[21,0,54,17],[22,0,54,18]],[[8,0,55,4],[12,0,55,8],[18,0,55,14],[19,0,55,15],[26,0,55,22],[28,0,55,24],[30,0,55,26]],[[12,0,56,6],[16,0,56,10],[17,0,56,11],[25,0,56,19],[27,0,56,21],[28,0,56,22]],[[9,0,57,5]],[[13,0,57,11]],[[12,0,58,6],[16,0,58,10],[17,0,58,11],[24,0,58,18],[26,0,58,20],[27,0,58,21]],[[9,0,59,5]],[[4,0,60,2],[5,0,60,3]],[[4,0,62,2]],[],[],[[7,0,65,5]],[[4,0,66,9],[9,0,66,14],[10,0,66,15],[24,0,66,57]],[[8,0,67,4],[12,0,67,8],[13,0,67,9],[17,0,67,13],[18,0,67,14],[24,0,67,20],[26,0,67,22]],[[12,0,68,6],[16,0,68,10],[17,0,68,11],[23,0,68,17],[26,0,68,20],[40,0,68,34],[41,0,68,35],[47,0,68,41],[48,0,68,42]],[[9,0,69,5]],[[8,0,70,4],[12,0,70,8],[13,0,70,9],[19,0,70,15],[23,0,70,19],[37,0,70,33],[38,0,70,34],[43,0,70,39],[45,0,70,41],[46,0,70,42]],[[8,0,71,4],[12,0,71,8],[13,0,71,9],[21,0,71,17],[25,0,71,21],[39,0,71,35],[40,0,71,36],[47,0,71,43],[49,0,71,45],[50,0,71,46]],[[8,0,72,4],[12,0,72,8],[13,0,72,9],[21,0,72,17],[25,0,72,21],[39,0,72,35],[40,0,72,36],[47,0,72,43],[49,0,72,45],[50,0,72,46]],[[8,0,73,4],[12,0,73,8],[13,0,73,9],[20,0,73,16],[24,0,73,20],[38,0,73,34],[39,0,73,35],[45,0,73,41],[47,0,73,43],[48,0,73,44]],[[4,0,74,2],[5,0,74,3]],[[4,0,76,9],[9,0,76,14]],[[8,0,77,4],[15,0,77,11],[19,0,77,15],[20,0,77,16],[26,0,77,22],[27,0,77,23]],[[4,0,78,2],[5,0,78,3]],[[4,0,80,9],[11,0,80,16]],[[8,0,81,4],[15,0,81,11],[19,0,81,15],[20,0,81,16],[28,0,81,24],[29,0,81,25]],[[4,0,82,2],[5,0,82,3]],[[4,0,84,9],[11,0,84,16]],[[8,0,85,4],[15,0,85,11],[19,0,85,15],[20,0,85,16],[28,0,85,24],[29,0,85,25]],[[4,0,86,2],[5,0,86,3]],[[4,0,88,9],[10,0,88,15]],[[8,0,89,4],[15,0,89,11],[19,0,89,15],[20,0,89,16],[27,0,89,23],[28,0,89,24]],[[4,0,90,2],[5,0,90,3]],[[4,0,92,2]],[],[[7,0,94,5]],[[4,0,95,9],[11,0,95,16]],[[8,0,96,4],[12,0,96,8],[18,0,96,14],[19,0,96,15]],[[8,0,97,4],[12,0,97,8],[16,0,97,12],[17,0,97,13],[23,0,97,19],[25,0,97,21]],[[12,0,98,6],[18,0,98,12],[21,0,98,15],[27,0,98,21],[28,0,98,22],[95,0,98,89],[97,0,98,91],[101,0,98,95],[102,0,98,96],[107,0,98,101],[109,0,98,103],[113,0,98,107],[114,0,98,108],[117,0,98,111],[119,0,98,113],[123,0,98,117],[124,0,98,118],[130,0,98,124],[132,0,98,126],[136,0,98,130],[137,0,98,131],[144,0,98,138],[145,0,98,139],[146,0,98,140]],[[9,0,99,5]],[[13,0,99,11]],[[12,0,100,6],[18,0,100,12],[21,0,100,15],[27,0,100,21],[28,0,100,22],[137,0,100,131],[139,0,101,10],[143,0,101,14],[144,0,101,15],[149,0,101,20],[151,0,101,22],[155,0,101,26],[156,0,101,27],[159,0,101,30],[161,0,101,32],[165,0,101,36],[166,0,101,37],[172,0,101,43],[174,0,101,45],[178,0,101,49],[179,0,101,50],[187,0,101,58],[189,0,101,60],[193,0,101,64],[194,0,101,65],[202,0,101,73],[204,0,101,75],[208,0,101,79],[209,0,101,80],[216,0,101,87],[217,0,101,88],[218,0,101,89]],[[9,0,102,5]],[[8,0,103,4],[15,0,103,11],[21,0,103,17],[22,0,103,18]],[[4,0,104,2],[5,0,104,3]],[[1,0,105,1]]],"sourcesContent":["import {AutoTranslateResult} from './auto-translate-result';\r\nimport {format} from 'util';\r\nimport {ITransUnit} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\n\r\n/**\r\n * A report about a run of Google Translate over all untranslated unit.\r\n * * Created by martin on 29.06.2017.\r\n */\r\n\r\nexport class AutoTranslateSummaryReport {\r\n\r\n  private _error: string;\r\n  private _from: string;\r\n  private _to: string;\r\n  private _total: number;\r\n  private _ignored: number;\r\n  private _success: number;\r\n  private _failed: number;\r\n\r\n  constructor(from: string, to: string) {\r\n    this._from = from;\r\n    this._to = to;\r\n    this._total = 0;\r\n    this._ignored = 0;\r\n    this._success = 0;\r\n    this._failed = 0;\r\n  }\r\n\r\n  /**\r\n   * Set error if total call failed (e.g. \"invalid api key\" or \"no connection\" ...)\r\n   * @param error error\r\n   * @param total total\r\n   */\r\n  public setError(error: string, total: number) {\r\n    this._error = error;\r\n    this._total = total;\r\n    this._failed = total;\r\n  }\r\n\r\n  public error(): string {\r\n    return this._error;\r\n  }\r\n\r\n  public setIgnored(ignored: number) {\r\n    this._total += ignored;\r\n    this._ignored = ignored;\r\n  }\r\n\r\n  /**\r\n   * Add a single result to the summary.\r\n   * @param tu tu\r\n   * @param result result\r\n   */\r\n  public addSingleResult(tu: ITransUnit, result: AutoTranslateResult) {\r\n    this._total++;\r\n    if (result.success()) {\r\n      this._success++;\r\n    } else {\r\n      this._failed++;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Merge another summary into this one.\r\n   * @param anotherSummary anotherSummary\r\n   */\r\n  public merge(anotherSummary: AutoTranslateSummaryReport) {\r\n    if (!this._error) {\r\n      this._error = anotherSummary._error;\r\n    }\r\n    this._total += anotherSummary.total();\r\n    this._ignored += anotherSummary.ignored();\r\n    this._success += anotherSummary.success();\r\n    this._failed += anotherSummary.failed();\r\n  }\r\n\r\n  public total(): number {\r\n    return this._total;\r\n  }\r\n\r\n  public ignored(): number {\r\n    return this._ignored;\r\n  }\r\n\r\n  public success(): number {\r\n    return this._success;\r\n  }\r\n\r\n  public failed(): number {\r\n    return this._failed;\r\n  }\r\n\r\n  /**\r\n   * Human readable version of report\r\n   */\r\n  public content(): string {\r\n    let result;\r\n    if (this._error) {\r\n      result = format('Auto translation from \"%s\" to \"%s\" failed: \"%s\", failed units: %s', this._from, this._to, this._error, this._failed);\r\n    } else {\r\n      result = format('Auto translation from \"%s\" to \"%s\", total auto translated units: %s, ignored: %s, succesful: %s, failed: %s',\r\n          this._from, this._to, this._total, this._ignored, this._success, this._failed);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n"]},"resolvedIds":{"util":{"external":true,"id":"util","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":25298,"body":[{"type":"ImportDeclaration","start":0,"end":51,"specifiers":[{"type":"ImportSpecifier","start":9,"end":26,"imported":{"type":"Identifier","start":9,"end":26,"name":"isNullOrUndefined"},"local":{"type":"Identifier","start":9,"end":26,"name":"isNullOrUndefined"}}],"source":{"type":"Literal","start":34,"end":50,"value":"../common/util","raw":"'../common/util'"}},{"type":"ImportDeclaration","start":53,"end":89,"specifiers":[{"type":"ImportSpecifier","start":62,"end":70,"imported":{"type":"Identifier","start":62,"end":70,"name":"forkJoin"},"local":{"type":"Identifier","start":62,"end":70,"name":"forkJoin"}},{"type":"ImportSpecifier","start":72,"end":74,"imported":{"type":"Identifier","start":72,"end":74,"name":"of"},"local":{"type":"Identifier","start":72,"end":74,"name":"of"}}],"source":{"type":"Literal","start":82,"end":88,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":91,"end":140,"specifiers":[{"type":"ImportSpecifier","start":100,"end":103,"imported":{"type":"Identifier","start":100,"end":103,"name":"map"},"local":{"type":"Identifier","start":100,"end":103,"name":"map"}},{"type":"ImportSpecifier","start":105,"end":115,"imported":{"type":"Identifier","start":105,"end":115,"name":"catchError"},"local":{"type":"Identifier","start":105,"end":115,"name":"catchError"}}],"source":{"type":"Literal","start":123,"end":139,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"ImportDeclaration","start":142,"end":181,"specifiers":[{"type":"ImportNamespaceSpecifier","start":149,"end":170,"local":{"type":"Identifier","start":154,"end":170,"name":"entityDecoderLib"}}],"source":{"type":"Literal","start":176,"end":180,"value":"he","raw":"'he'"}},{"type":"ImportDeclaration","start":183,"end":248,"specifiers":[{"type":"ImportSpecifier","start":192,"end":201,"imported":{"type":"Identifier","start":192,"end":201,"name":"STATE_NEW"},"local":{"type":"Identifier","start":192,"end":201,"name":"STATE_NEW"}}],"source":{"type":"Literal","start":209,"end":247,"value":"@ngx-i18nsupport/ngx-i18nsupport-lib","raw":"'@ngx-i18nsupport/ngx-i18nsupport-lib'"}},{"type":"ImportDeclaration","start":250,"end":314,"specifiers":[{"type":"ImportSpecifier","start":259,"end":279,"imported":{"type":"Identifier","start":259,"end":279,"name":"AutoTranslateService"},"local":{"type":"Identifier","start":259,"end":279,"name":"AutoTranslateService"}}],"source":{"type":"Literal","start":287,"end":313,"value":"./auto-translate-service","raw":"'./auto-translate-service'"}},{"type":"ImportDeclaration","start":316,"end":378,"specifiers":[{"type":"ImportSpecifier","start":325,"end":344,"imported":{"type":"Identifier","start":325,"end":344,"name":"AutoTranslateResult"},"local":{"type":"Identifier","start":325,"end":344,"name":"AutoTranslateResult"}}],"source":{"type":"Literal","start":352,"end":377,"value":"./auto-translate-result","raw":"'./auto-translate-result'"}},{"type":"ImportDeclaration","start":380,"end":457,"specifiers":[{"type":"ImportSpecifier","start":389,"end":415,"imported":{"type":"Identifier","start":389,"end":415,"name":"AutoTranslateSummaryReport"},"local":{"type":"Identifier","start":389,"end":415,"name":"AutoTranslateSummaryReport"}}],"source":{"type":"Literal","start":423,"end":456,"value":"./auto-translate-summary-report","raw":"'./auto-translate-summary-report'"}},{"type":"ExportNamedDeclaration","start":568,"end":6790,"declaration":{"type":"ClassDeclaration","start":575,"end":6790,"id":{"type":"Identifier","start":581,"end":611,"name":"XliffMergeAutoTranslateService"},"superClass":null,"body":{"type":"ClassBody","start":612,"end":6790,"body":[{"type":"MethodDefinition","start":619,"end":718,"static":false,"computed":false,"key":{"type":"Identifier","start":619,"end":630,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":630,"end":718,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":631,"end":637,"name":"apikey"}],"body":{"type":"BlockStatement","start":639,"end":718,"body":[{"type":"ExpressionStatement","start":650,"end":711,"expression":{"type":"AssignmentExpression","start":650,"end":710,"operator":"=","left":{"type":"MemberExpression","start":650,"end":675,"object":{"type":"ThisExpression","start":650,"end":654},"property":{"type":"Identifier","start":655,"end":675,"name":"autoTranslateService"},"computed":false,"optional":false},"right":{"type":"NewExpression","start":678,"end":710,"callee":{"type":"Identifier","start":682,"end":702,"name":"AutoTranslateService"},"arguments":[{"type":"Identifier","start":703,"end":709,"name":"apikey"}]}}}]}}},{"type":"MethodDefinition","start":1030,"end":1553,"static":false,"computed":false,"key":{"type":"Identifier","start":1030,"end":1043,"name":"autoTranslate"},"kind":"method","value":{"type":"FunctionExpression","start":1043,"end":1553,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1044,"end":1048,"name":"from"},{"type":"Identifier","start":1050,"end":1052,"name":"to"},{"type":"Identifier","start":1054,"end":1082,"name":"languageSpecificMessagesFile"}],"body":{"type":"BlockStatement","start":1084,"end":1553,"body":[{"type":"ReturnStatement","start":1095,"end":1546,"argument":{"type":"CallExpression","start":1102,"end":1545,"callee":{"type":"MemberExpression","start":1102,"end":1320,"object":{"type":"CallExpression","start":1102,"end":1301,"callee":{"type":"Identifier","start":1102,"end":1110,"name":"forkJoin"},"arguments":[{"type":"ArrayExpression","start":1111,"end":1300,"elements":[{"type":"CallExpression","start":1126,"end":1200,"callee":{"type":"MemberExpression","start":1126,"end":1160,"object":{"type":"ThisExpression","start":1126,"end":1130},"property":{"type":"Identifier","start":1131,"end":1160,"name":"doAutoTranslateNonICUMessages"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1161,"end":1165,"name":"from"},{"type":"Identifier","start":1167,"end":1169,"name":"to"},{"type":"Identifier","start":1171,"end":1199,"name":"languageSpecificMessagesFile"}],"optional":false},{"type":"SpreadElement","start":1215,"end":1289,"argument":{"type":"CallExpression","start":1218,"end":1289,"callee":{"type":"MemberExpression","start":1218,"end":1249,"object":{"type":"ThisExpression","start":1218,"end":1222},"property":{"type":"Identifier","start":1223,"end":1249,"name":"doAutoTranslateICUMessages"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1250,"end":1254,"name":"from"},{"type":"Identifier","start":1256,"end":1258,"name":"to"},{"type":"Identifier","start":1260,"end":1288,"name":"languageSpecificMessagesFile"}],"optional":false}}]}],"optional":false},"property":{"type":"Identifier","start":1316,"end":1320,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1321,"end":1544,"callee":{"type":"Identifier","start":1321,"end":1324,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":1325,"end":1543,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1326,"end":1335,"name":"summaries"}],"body":{"type":"BlockStatement","start":1340,"end":1543,"body":[{"type":"VariableDeclaration","start":1355,"end":1384,"declarations":[{"type":"VariableDeclarator","start":1361,"end":1383,"id":{"type":"Identifier","start":1361,"end":1368,"name":"summary"},"init":{"type":"MemberExpression","start":1371,"end":1383,"object":{"type":"Identifier","start":1371,"end":1380,"name":"summaries"},"property":{"type":"Literal","start":1381,"end":1382,"value":0,"raw":"0"},"computed":true,"optional":false}}],"kind":"const"},{"type":"ForStatement","start":1398,"end":1503,"init":{"type":"VariableDeclaration","start":1403,"end":1412,"declarations":[{"type":"VariableDeclarator","start":1407,"end":1412,"id":{"type":"Identifier","start":1407,"end":1408,"name":"i"},"init":{"type":"Literal","start":1411,"end":1412,"value":1,"raw":"1"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":1414,"end":1434,"left":{"type":"Identifier","start":1414,"end":1415,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":1418,"end":1434,"object":{"type":"Identifier","start":1418,"end":1427,"name":"summaries"},"property":{"type":"Identifier","start":1428,"end":1434,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":1436,"end":1439,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":1436,"end":1437,"name":"i"}},"body":{"type":"BlockStatement","start":1441,"end":1503,"body":[{"type":"ExpressionStatement","start":1460,"end":1488,"expression":{"type":"CallExpression","start":1460,"end":1487,"callee":{"type":"MemberExpression","start":1460,"end":1473,"object":{"type":"Identifier","start":1460,"end":1467,"name":"summary"},"property":{"type":"Identifier","start":1468,"end":1473,"name":"merge"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":1474,"end":1486,"object":{"type":"Identifier","start":1474,"end":1483,"name":"summaries"},"property":{"type":"Identifier","start":1484,"end":1485,"name":"i"},"computed":true,"optional":false}],"optional":false}}]}},{"type":"ReturnStatement","start":1517,"end":1532,"argument":{"type":"Identifier","start":1524,"end":1531,"name":"summary"}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":1738,"end":2114,"static":false,"computed":false,"key":{"type":"Identifier","start":1738,"end":1756,"name":"allUntranslatedTUs"},"kind":"method","value":{"type":"FunctionExpression","start":1756,"end":2114,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1757,"end":1785,"name":"languageSpecificMessagesFile"}],"body":{"type":"BlockStatement","start":1787,"end":2114,"body":[{"type":"VariableDeclaration","start":1860,"end":1887,"declarations":[{"type":"VariableDeclarator","start":1866,"end":1886,"id":{"type":"Identifier","start":1866,"end":1881,"name":"allUntranslated"},"init":{"type":"ArrayExpression","start":1884,"end":1886,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":1897,"end":2074,"expression":{"type":"CallExpression","start":1897,"end":2073,"callee":{"type":"MemberExpression","start":1897,"end":1942,"object":{"type":"Identifier","start":1897,"end":1925,"name":"languageSpecificMessagesFile"},"property":{"type":"Identifier","start":1926,"end":1942,"name":"forEachTransUnit"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":1943,"end":2072,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1944,"end":1946,"name":"tu"}],"body":{"type":"BlockStatement","start":1951,"end":2072,"body":[{"type":"IfStatement","start":1966,"end":2061,"test":{"type":"BinaryExpression","start":1970,"end":2000,"left":{"type":"CallExpression","start":1970,"end":1986,"callee":{"type":"MemberExpression","start":1970,"end":1984,"object":{"type":"Identifier","start":1970,"end":1972,"name":"tu"},"property":{"type":"Identifier","start":1973,"end":1984,"name":"targetState"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"===","right":{"type":"Identifier","start":1991,"end":2000,"name":"STATE_NEW"}},"consequent":{"type":"BlockStatement","start":2002,"end":2061,"body":[{"type":"ExpressionStatement","start":2021,"end":2046,"expression":{"type":"CallExpression","start":2021,"end":2045,"callee":{"type":"MemberExpression","start":2021,"end":2041,"object":{"type":"Identifier","start":2021,"end":2036,"name":"allUntranslated"},"property":{"type":"Identifier","start":2037,"end":2041,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2042,"end":2044,"name":"tu"}],"optional":false}}]},"alternate":null}]}}],"optional":false}},{"type":"ReturnStatement","start":2084,"end":2107,"argument":{"type":"Identifier","start":2091,"end":2106,"name":"allUntranslated"}}]}}},{"type":"MethodDefinition","start":2120,"end":3622,"static":false,"computed":false,"key":{"type":"Identifier","start":2120,"end":2149,"name":"doAutoTranslateNonICUMessages"},"kind":"method","value":{"type":"FunctionExpression","start":2149,"end":3622,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2150,"end":2154,"name":"from"},{"type":"Identifier","start":2156,"end":2158,"name":"to"},{"type":"Identifier","start":2160,"end":2188,"name":"languageSpecificMessagesFile"}],"body":{"type":"BlockStatement","start":2190,"end":3622,"body":[{"type":"VariableDeclaration","start":2201,"end":2279,"declarations":[{"type":"VariableDeclarator","start":2207,"end":2278,"id":{"type":"Identifier","start":2207,"end":2222,"name":"allUntranslated"},"init":{"type":"CallExpression","start":2225,"end":2278,"callee":{"type":"MemberExpression","start":2225,"end":2248,"object":{"type":"ThisExpression","start":2225,"end":2229},"property":{"type":"Identifier","start":2230,"end":2248,"name":"allUntranslatedTUs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2249,"end":2277,"name":"languageSpecificMessagesFile"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":2289,"end":2409,"declarations":[{"type":"VariableDeclarator","start":2295,"end":2408,"id":{"type":"Identifier","start":2295,"end":2310,"name":"allTranslatable"},"init":{"type":"CallExpression","start":2313,"end":2408,"callee":{"type":"MemberExpression","start":2313,"end":2335,"object":{"type":"Identifier","start":2313,"end":2328,"name":"allUntranslated"},"property":{"type":"Identifier","start":2329,"end":2335,"name":"filter"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":2336,"end":2407,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":2337,"end":2339,"name":"tu"}],"body":{"type":"CallExpression","start":2344,"end":2407,"callee":{"type":"Identifier","start":2344,"end":2361,"name":"isNullOrUndefined"},"arguments":[{"type":"CallExpression","start":2362,"end":2406,"callee":{"type":"MemberExpression","start":2362,"end":2404,"object":{"type":"CallExpression","start":2362,"end":2390,"callee":{"type":"MemberExpression","start":2362,"end":2388,"object":{"type":"Identifier","start":2362,"end":2364,"name":"tu"},"property":{"type":"Identifier","start":2365,"end":2388,"name":"sourceContentNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":2391,"end":2404,"name":"getICUMessage"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":2419,"end":2549,"declarations":[{"type":"VariableDeclarator","start":2425,"end":2548,"id":{"type":"Identifier","start":2425,"end":2436,"name":"allMessages"},"init":{"type":"CallExpression","start":2439,"end":2548,"callee":{"type":"MemberExpression","start":2439,"end":2458,"object":{"type":"Identifier","start":2439,"end":2454,"name":"allTranslatable"},"property":{"type":"Identifier","start":2455,"end":2458,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":2459,"end":2547,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2460,"end":2462,"name":"tu"}],"body":{"type":"BlockStatement","start":2467,"end":2547,"body":[{"type":"ReturnStatement","start":2482,"end":2536,"argument":{"type":"CallExpression","start":2489,"end":2535,"callee":{"type":"MemberExpression","start":2489,"end":2533,"object":{"type":"CallExpression","start":2489,"end":2517,"callee":{"type":"MemberExpression","start":2489,"end":2515,"object":{"type":"Identifier","start":2489,"end":2491,"name":"tu"},"property":{"type":"Identifier","start":2492,"end":2515,"name":"sourceContentNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":2518,"end":2533,"name":"asDisplayString"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":2559,"end":3615,"argument":{"type":"CallExpression","start":2566,"end":3614,"callee":{"type":"MemberExpression","start":2566,"end":2658,"object":{"type":"CallExpression","start":2566,"end":2639,"callee":{"type":"MemberExpression","start":2566,"end":2616,"object":{"type":"MemberExpression","start":2566,"end":2591,"object":{"type":"ThisExpression","start":2566,"end":2570},"property":{"type":"Identifier","start":2571,"end":2591,"name":"autoTranslateService"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2592,"end":2616,"name":"translateMultipleStrings"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2617,"end":2628,"name":"allMessages"},{"type":"Identifier","start":2630,"end":2634,"name":"from"},{"type":"Identifier","start":2636,"end":2638,"name":"to"}],"optional":false},"property":{"type":"Identifier","start":2654,"end":2658,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2754,"end":2860,"callee":{"type":"Identifier","start":2754,"end":2757,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":2758,"end":2859,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":2759,"end":2771,"name":"translations"}],"body":{"type":"CallExpression","start":2776,"end":2859,"callee":{"type":"MemberExpression","start":2776,"end":2792,"object":{"type":"Identifier","start":2776,"end":2788,"name":"translations"},"property":{"type":"Identifier","start":2789,"end":2792,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":2793,"end":2858,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":2793,"end":2811,"name":"encodedTranslation"}],"body":{"type":"CallExpression","start":2815,"end":2858,"callee":{"type":"MemberExpression","start":2815,"end":2838,"object":{"type":"Identifier","start":2815,"end":2831,"name":"entityDecoderLib"},"property":{"type":"Identifier","start":2832,"end":2838,"name":"decode"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2839,"end":2857,"name":"encodedTranslation"}],"optional":false}}],"optional":false}}],"optional":false},{"type":"CallExpression","start":2862,"end":3398,"callee":{"type":"Identifier","start":2862,"end":2865,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":2866,"end":3397,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2867,"end":2879,"name":"translations"}],"body":{"type":"BlockStatement","start":2884,"end":3397,"body":[{"type":"VariableDeclaration","start":2899,"end":2956,"declarations":[{"type":"VariableDeclarator","start":2905,"end":2955,"id":{"type":"Identifier","start":2905,"end":2912,"name":"summary"},"init":{"type":"NewExpression","start":2915,"end":2955,"callee":{"type":"Identifier","start":2919,"end":2945,"name":"AutoTranslateSummaryReport"},"arguments":[{"type":"Identifier","start":2946,"end":2950,"name":"from"},{"type":"Identifier","start":2952,"end":2954,"name":"to"}]}}],"kind":"const"},{"type":"ExpressionStatement","start":2970,"end":3038,"expression":{"type":"CallExpression","start":2970,"end":3037,"callee":{"type":"MemberExpression","start":2970,"end":2988,"object":{"type":"Identifier","start":2970,"end":2977,"name":"summary"},"property":{"type":"Identifier","start":2978,"end":2988,"name":"setIgnored"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":2989,"end":3036,"left":{"type":"MemberExpression","start":2989,"end":3011,"object":{"type":"Identifier","start":2989,"end":3004,"name":"allUntranslated"},"property":{"type":"Identifier","start":3005,"end":3011,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"MemberExpression","start":3014,"end":3036,"object":{"type":"Identifier","start":3014,"end":3029,"name":"allTranslatable"},"property":{"type":"Identifier","start":3030,"end":3036,"name":"length"},"computed":false,"optional":false}}],"optional":false}},{"type":"ForStatement","start":3052,"end":3357,"init":{"type":"VariableDeclaration","start":3057,"end":3066,"declarations":[{"type":"VariableDeclarator","start":3061,"end":3066,"id":{"type":"Identifier","start":3061,"end":3062,"name":"i"},"init":{"type":"Literal","start":3065,"end":3066,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":3068,"end":3091,"left":{"type":"Identifier","start":3068,"end":3069,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":3072,"end":3091,"object":{"type":"Identifier","start":3072,"end":3084,"name":"translations"},"property":{"type":"Identifier","start":3085,"end":3091,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":3093,"end":3096,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":3093,"end":3094,"name":"i"}},"body":{"type":"BlockStatement","start":3098,"end":3357,"body":[{"type":"VariableDeclaration","start":3117,"end":3147,"declarations":[{"type":"VariableDeclarator","start":3123,"end":3146,"id":{"type":"Identifier","start":3123,"end":3125,"name":"tu"},"init":{"type":"MemberExpression","start":3128,"end":3146,"object":{"type":"Identifier","start":3128,"end":3143,"name":"allTranslatable"},"property":{"type":"Identifier","start":3144,"end":3145,"name":"i"},"computed":true,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":3165,"end":3205,"declarations":[{"type":"VariableDeclarator","start":3171,"end":3204,"id":{"type":"Identifier","start":3171,"end":3186,"name":"translationText"},"init":{"type":"MemberExpression","start":3189,"end":3204,"object":{"type":"Identifier","start":3189,"end":3201,"name":"translations"},"property":{"type":"Identifier","start":3202,"end":3203,"name":"i"},"computed":true,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":3223,"end":3288,"declarations":[{"type":"VariableDeclarator","start":3229,"end":3287,"id":{"type":"Identifier","start":3229,"end":3235,"name":"result"},"init":{"type":"CallExpression","start":3238,"end":3287,"callee":{"type":"MemberExpression","start":3238,"end":3266,"object":{"type":"ThisExpression","start":3238,"end":3242},"property":{"type":"Identifier","start":3243,"end":3266,"name":"autoTranslateNonICUUnit"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3267,"end":3269,"name":"tu"},{"type":"Identifier","start":3271,"end":3286,"name":"translationText"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":3306,"end":3342,"expression":{"type":"CallExpression","start":3306,"end":3341,"callee":{"type":"MemberExpression","start":3306,"end":3329,"object":{"type":"Identifier","start":3306,"end":3313,"name":"summary"},"property":{"type":"Identifier","start":3314,"end":3329,"name":"addSingleResult"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3330,"end":3332,"name":"tu"},{"type":"Identifier","start":3334,"end":3340,"name":"result"}],"optional":false}}]}},{"type":"ReturnStatement","start":3371,"end":3386,"argument":{"type":"Identifier","start":3378,"end":3385,"name":"summary"}}]}}],"optional":false},{"type":"CallExpression","start":3400,"end":3613,"callee":{"type":"Identifier","start":3400,"end":3410,"name":"catchError"},"arguments":[{"type":"ArrowFunctionExpression","start":3411,"end":3612,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3412,"end":3415,"name":"err"}],"body":{"type":"BlockStatement","start":3420,"end":3612,"body":[{"type":"VariableDeclaration","start":3435,"end":3496,"declarations":[{"type":"VariableDeclarator","start":3441,"end":3495,"id":{"type":"Identifier","start":3441,"end":3452,"name":"failSummary"},"init":{"type":"NewExpression","start":3455,"end":3495,"callee":{"type":"Identifier","start":3459,"end":3485,"name":"AutoTranslateSummaryReport"},"arguments":[{"type":"Identifier","start":3486,"end":3490,"name":"from"},{"type":"Identifier","start":3492,"end":3494,"name":"to"}]}}],"kind":"const"},{"type":"ExpressionStatement","start":3510,"end":3564,"expression":{"type":"CallExpression","start":3510,"end":3563,"callee":{"type":"MemberExpression","start":3510,"end":3530,"object":{"type":"Identifier","start":3510,"end":3521,"name":"failSummary"},"property":{"type":"Identifier","start":3522,"end":3530,"name":"setError"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3531,"end":3542,"object":{"type":"Identifier","start":3531,"end":3534,"name":"err"},"property":{"type":"Identifier","start":3535,"end":3542,"name":"message"},"computed":false,"optional":false},{"type":"MemberExpression","start":3544,"end":3562,"object":{"type":"Identifier","start":3544,"end":3555,"name":"allMessages"},"property":{"type":"Identifier","start":3556,"end":3562,"name":"length"},"computed":false,"optional":false}],"optional":false}},{"type":"ReturnStatement","start":3578,"end":3601,"argument":{"type":"CallExpression","start":3585,"end":3600,"callee":{"type":"Identifier","start":3585,"end":3587,"name":"of"},"arguments":[{"type":"Identifier","start":3588,"end":3599,"name":"failSummary"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":3628,"end":4053,"static":false,"computed":false,"key":{"type":"Identifier","start":3628,"end":3654,"name":"doAutoTranslateICUMessages"},"kind":"method","value":{"type":"FunctionExpression","start":3654,"end":4053,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3655,"end":3659,"name":"from"},{"type":"Identifier","start":3661,"end":3663,"name":"to"},{"type":"Identifier","start":3665,"end":3693,"name":"languageSpecificMessagesFile"}],"body":{"type":"BlockStatement","start":3695,"end":4053,"body":[{"type":"VariableDeclaration","start":3706,"end":3784,"declarations":[{"type":"VariableDeclarator","start":3712,"end":3783,"id":{"type":"Identifier","start":3712,"end":3727,"name":"allUntranslated"},"init":{"type":"CallExpression","start":3730,"end":3783,"callee":{"type":"MemberExpression","start":3730,"end":3753,"object":{"type":"ThisExpression","start":3730,"end":3734},"property":{"type":"Identifier","start":3735,"end":3753,"name":"allUntranslatedTUs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3754,"end":3782,"name":"languageSpecificMessagesFile"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":3794,"end":3918,"declarations":[{"type":"VariableDeclarator","start":3800,"end":3917,"id":{"type":"Identifier","start":3800,"end":3818,"name":"allTranslatableICU"},"init":{"type":"CallExpression","start":3821,"end":3917,"callee":{"type":"MemberExpression","start":3821,"end":3843,"object":{"type":"Identifier","start":3821,"end":3836,"name":"allUntranslated"},"property":{"type":"Identifier","start":3837,"end":3843,"name":"filter"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":3844,"end":3916,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":3845,"end":3847,"name":"tu"}],"body":{"type":"UnaryExpression","start":3852,"end":3916,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":3853,"end":3916,"callee":{"type":"Identifier","start":3853,"end":3870,"name":"isNullOrUndefined"},"arguments":[{"type":"CallExpression","start":3871,"end":3915,"callee":{"type":"MemberExpression","start":3871,"end":3913,"object":{"type":"CallExpression","start":3871,"end":3899,"callee":{"type":"MemberExpression","start":3871,"end":3897,"object":{"type":"Identifier","start":3871,"end":3873,"name":"tu"},"property":{"type":"Identifier","start":3874,"end":3897,"name":"sourceContentNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":3900,"end":3913,"name":"getICUMessage"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":3928,"end":4046,"argument":{"type":"CallExpression","start":3935,"end":4045,"callee":{"type":"MemberExpression","start":3935,"end":3957,"object":{"type":"Identifier","start":3935,"end":3953,"name":"allTranslatableICU"},"property":{"type":"Identifier","start":3954,"end":3957,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":3958,"end":4044,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3959,"end":3961,"name":"tu"}],"body":{"type":"BlockStatement","start":3966,"end":4044,"body":[{"type":"ReturnStatement","start":3981,"end":4033,"argument":{"type":"CallExpression","start":3988,"end":4032,"callee":{"type":"MemberExpression","start":3988,"end":4018,"object":{"type":"ThisExpression","start":3988,"end":3992},"property":{"type":"Identifier","start":3993,"end":4018,"name":"doAutoTranslateICUMessage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4019,"end":4023,"name":"from"},{"type":"Identifier","start":4025,"end":4027,"name":"to"},{"type":"Identifier","start":4029,"end":4031,"name":"tu"}],"optional":false}}]}}],"optional":false}}]}}},{"type":"MethodDefinition","start":4261,"end":5859,"static":false,"computed":false,"key":{"type":"Identifier","start":4261,"end":4286,"name":"doAutoTranslateICUMessage"},"kind":"method","value":{"type":"FunctionExpression","start":4286,"end":5859,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4287,"end":4291,"name":"from"},{"type":"Identifier","start":4293,"end":4295,"name":"to"},{"type":"Identifier","start":4297,"end":4299,"name":"tu"}],"body":{"type":"BlockStatement","start":4301,"end":5859,"body":[{"type":"VariableDeclaration","start":4312,"end":4376,"declarations":[{"type":"VariableDeclarator","start":4318,"end":4375,"id":{"type":"Identifier","start":4318,"end":4328,"name":"icuMessage"},"init":{"type":"CallExpression","start":4331,"end":4375,"callee":{"type":"MemberExpression","start":4331,"end":4373,"object":{"type":"CallExpression","start":4331,"end":4359,"callee":{"type":"MemberExpression","start":4331,"end":4357,"object":{"type":"Identifier","start":4331,"end":4333,"name":"tu"},"property":{"type":"Identifier","start":4334,"end":4357,"name":"sourceContentNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":4360,"end":4373,"name":"getICUMessage"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":4386,"end":4432,"declarations":[{"type":"VariableDeclarator","start":4392,"end":4431,"id":{"type":"Identifier","start":4392,"end":4402,"name":"categories"},"init":{"type":"CallExpression","start":4405,"end":4431,"callee":{"type":"MemberExpression","start":4405,"end":4429,"object":{"type":"Identifier","start":4405,"end":4415,"name":"icuMessage"},"property":{"type":"Identifier","start":4416,"end":4429,"name":"getCategories"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":4500,"end":4756,"test":{"type":"CallExpression","start":4504,"end":4602,"callee":{"type":"MemberExpression","start":4504,"end":4519,"object":{"type":"Identifier","start":4504,"end":4514,"name":"categories"},"property":{"type":"Identifier","start":4515,"end":4519,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":4520,"end":4601,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":4521,"end":4529,"name":"category"}],"body":{"type":"UnaryExpression","start":4534,"end":4601,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":4535,"end":4601,"callee":{"type":"Identifier","start":4535,"end":4552,"name":"isNullOrUndefined"},"arguments":[{"type":"CallExpression","start":4553,"end":4600,"callee":{"type":"MemberExpression","start":4553,"end":4598,"object":{"type":"CallExpression","start":4553,"end":4584,"callee":{"type":"MemberExpression","start":4553,"end":4582,"object":{"type":"Identifier","start":4553,"end":4561,"name":"category"},"property":{"type":"Identifier","start":4562,"end":4582,"name":"getMessageNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":4585,"end":4598,"name":"getICUMessage"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}}],"optional":false},"consequent":{"type":"BlockStatement","start":4604,"end":4756,"body":[{"type":"VariableDeclaration","start":4619,"end":4676,"declarations":[{"type":"VariableDeclarator","start":4625,"end":4675,"id":{"type":"Identifier","start":4625,"end":4632,"name":"summary"},"init":{"type":"NewExpression","start":4635,"end":4675,"callee":{"type":"Identifier","start":4639,"end":4665,"name":"AutoTranslateSummaryReport"},"arguments":[{"type":"Identifier","start":4666,"end":4670,"name":"from"},{"type":"Identifier","start":4672,"end":4674,"name":"to"}]}}],"kind":"const"},{"type":"ExpressionStatement","start":4690,"end":4712,"expression":{"type":"CallExpression","start":4690,"end":4711,"callee":{"type":"MemberExpression","start":4690,"end":4708,"object":{"type":"Identifier","start":4690,"end":4697,"name":"summary"},"property":{"type":"Identifier","start":4698,"end":4708,"name":"setIgnored"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4709,"end":4710,"value":1,"raw":"1"}],"optional":false}},{"type":"ReturnStatement","start":4726,"end":4745,"argument":{"type":"CallExpression","start":4733,"end":4744,"callee":{"type":"Identifier","start":4733,"end":4735,"name":"of"},"arguments":[{"type":"Identifier","start":4736,"end":4743,"name":"summary"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":4766,"end":4866,"declarations":[{"type":"VariableDeclarator","start":4772,"end":4865,"id":{"type":"Identifier","start":4772,"end":4783,"name":"allMessages"},"init":{"type":"CallExpression","start":4786,"end":4865,"callee":{"type":"MemberExpression","start":4786,"end":4800,"object":{"type":"Identifier","start":4786,"end":4796,"name":"categories"},"property":{"type":"Identifier","start":4797,"end":4800,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":4801,"end":4864,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":4802,"end":4810,"name":"category"}],"body":{"type":"CallExpression","start":4815,"end":4864,"callee":{"type":"MemberExpression","start":4815,"end":4862,"object":{"type":"CallExpression","start":4815,"end":4846,"callee":{"type":"MemberExpression","start":4815,"end":4844,"object":{"type":"Identifier","start":4815,"end":4823,"name":"category"},"property":{"type":"Identifier","start":4824,"end":4844,"name":"getMessageNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":4847,"end":4862,"name":"asDisplayString"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":4876,"end":5852,"argument":{"type":"CallExpression","start":4883,"end":5851,"callee":{"type":"MemberExpression","start":4883,"end":4975,"object":{"type":"CallExpression","start":4883,"end":4956,"callee":{"type":"MemberExpression","start":4883,"end":4933,"object":{"type":"MemberExpression","start":4883,"end":4908,"object":{"type":"ThisExpression","start":4883,"end":4887},"property":{"type":"Identifier","start":4888,"end":4908,"name":"autoTranslateService"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4909,"end":4933,"name":"translateMultipleStrings"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4934,"end":4945,"name":"allMessages"},{"type":"Identifier","start":4947,"end":4951,"name":"from"},{"type":"Identifier","start":4953,"end":4955,"name":"to"}],"optional":false},"property":{"type":"Identifier","start":4971,"end":4975,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":5071,"end":5177,"callee":{"type":"Identifier","start":5071,"end":5074,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":5075,"end":5176,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":5076,"end":5088,"name":"translations"}],"body":{"type":"CallExpression","start":5093,"end":5176,"callee":{"type":"MemberExpression","start":5093,"end":5109,"object":{"type":"Identifier","start":5093,"end":5105,"name":"translations"},"property":{"type":"Identifier","start":5106,"end":5109,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":5110,"end":5175,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":5110,"end":5128,"name":"encodedTranslation"}],"body":{"type":"CallExpression","start":5132,"end":5175,"callee":{"type":"MemberExpression","start":5132,"end":5155,"object":{"type":"Identifier","start":5132,"end":5148,"name":"entityDecoderLib"},"property":{"type":"Identifier","start":5149,"end":5155,"name":"decode"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5156,"end":5174,"name":"encodedTranslation"}],"optional":false}}],"optional":false}}],"optional":false},{"type":"CallExpression","start":5179,"end":5635,"callee":{"type":"Identifier","start":5179,"end":5182,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":5183,"end":5634,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5184,"end":5196,"name":"translations"}],"body":{"type":"BlockStatement","start":5201,"end":5634,"body":[{"type":"VariableDeclaration","start":5216,"end":5273,"declarations":[{"type":"VariableDeclarator","start":5222,"end":5272,"id":{"type":"Identifier","start":5222,"end":5229,"name":"summary"},"init":{"type":"NewExpression","start":5232,"end":5272,"callee":{"type":"Identifier","start":5236,"end":5262,"name":"AutoTranslateSummaryReport"},"arguments":[{"type":"Identifier","start":5263,"end":5267,"name":"from"},{"type":"Identifier","start":5269,"end":5271,"name":"to"}]}}],"kind":"const"},{"type":"VariableDeclaration","start":5287,"end":5313,"declarations":[{"type":"VariableDeclarator","start":5293,"end":5312,"id":{"type":"Identifier","start":5293,"end":5307,"name":"icuTranslation"},"init":{"type":"ObjectExpression","start":5310,"end":5312,"properties":[]}}],"kind":"const"},{"type":"ForStatement","start":5327,"end":5469,"init":{"type":"VariableDeclaration","start":5332,"end":5341,"declarations":[{"type":"VariableDeclarator","start":5336,"end":5341,"id":{"type":"Identifier","start":5336,"end":5337,"name":"i"},"init":{"type":"Literal","start":5340,"end":5341,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":5343,"end":5366,"left":{"type":"Identifier","start":5343,"end":5344,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":5347,"end":5366,"object":{"type":"Identifier","start":5347,"end":5359,"name":"translations"},"property":{"type":"Identifier","start":5360,"end":5366,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":5368,"end":5371,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":5368,"end":5369,"name":"i"}},"body":{"type":"BlockStatement","start":5373,"end":5469,"body":[{"type":"ExpressionStatement","start":5392,"end":5454,"expression":{"type":"AssignmentExpression","start":5392,"end":5453,"operator":"=","left":{"type":"MemberExpression","start":5392,"end":5435,"object":{"type":"Identifier","start":5392,"end":5406,"name":"icuTranslation"},"property":{"type":"CallExpression","start":5407,"end":5434,"callee":{"type":"MemberExpression","start":5407,"end":5432,"object":{"type":"MemberExpression","start":5407,"end":5420,"object":{"type":"Identifier","start":5407,"end":5417,"name":"categories"},"property":{"type":"Identifier","start":5418,"end":5419,"name":"i"},"computed":true,"optional":false},"property":{"type":"Identifier","start":5421,"end":5432,"name":"getCategory"},"computed":false,"optional":false},"arguments":[],"optional":false},"computed":true,"optional":false},"right":{"type":"MemberExpression","start":5438,"end":5453,"object":{"type":"Identifier","start":5438,"end":5450,"name":"translations"},"property":{"type":"Identifier","start":5451,"end":5452,"name":"i"},"computed":true,"optional":false}}}]}},{"type":"VariableDeclaration","start":5483,"end":5544,"declarations":[{"type":"VariableDeclarator","start":5489,"end":5543,"id":{"type":"Identifier","start":5489,"end":5495,"name":"result"},"init":{"type":"CallExpression","start":5498,"end":5543,"callee":{"type":"MemberExpression","start":5498,"end":5523,"object":{"type":"ThisExpression","start":5498,"end":5502},"property":{"type":"Identifier","start":5503,"end":5523,"name":"autoTranslateICUUnit"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5524,"end":5526,"name":"tu"},{"type":"Identifier","start":5528,"end":5542,"name":"icuTranslation"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":5558,"end":5594,"expression":{"type":"CallExpression","start":5558,"end":5593,"callee":{"type":"MemberExpression","start":5558,"end":5581,"object":{"type":"Identifier","start":5558,"end":5565,"name":"summary"},"property":{"type":"Identifier","start":5566,"end":5581,"name":"addSingleResult"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5582,"end":5584,"name":"tu"},{"type":"Identifier","start":5586,"end":5592,"name":"result"}],"optional":false}},{"type":"ReturnStatement","start":5608,"end":5623,"argument":{"type":"Identifier","start":5615,"end":5622,"name":"summary"}}]}}],"optional":false},{"type":"CallExpression","start":5637,"end":5850,"callee":{"type":"Identifier","start":5637,"end":5647,"name":"catchError"},"arguments":[{"type":"ArrowFunctionExpression","start":5648,"end":5849,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5649,"end":5652,"name":"err"}],"body":{"type":"BlockStatement","start":5657,"end":5849,"body":[{"type":"VariableDeclaration","start":5672,"end":5733,"declarations":[{"type":"VariableDeclarator","start":5678,"end":5732,"id":{"type":"Identifier","start":5678,"end":5689,"name":"failSummary"},"init":{"type":"NewExpression","start":5692,"end":5732,"callee":{"type":"Identifier","start":5696,"end":5722,"name":"AutoTranslateSummaryReport"},"arguments":[{"type":"Identifier","start":5723,"end":5727,"name":"from"},{"type":"Identifier","start":5729,"end":5731,"name":"to"}]}}],"kind":"const"},{"type":"ExpressionStatement","start":5747,"end":5801,"expression":{"type":"CallExpression","start":5747,"end":5800,"callee":{"type":"MemberExpression","start":5747,"end":5767,"object":{"type":"Identifier","start":5747,"end":5758,"name":"failSummary"},"property":{"type":"Identifier","start":5759,"end":5767,"name":"setError"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":5768,"end":5779,"object":{"type":"Identifier","start":5768,"end":5771,"name":"err"},"property":{"type":"Identifier","start":5772,"end":5779,"name":"message"},"computed":false,"optional":false},{"type":"MemberExpression","start":5781,"end":5799,"object":{"type":"Identifier","start":5781,"end":5792,"name":"allMessages"},"property":{"type":"Identifier","start":5793,"end":5799,"name":"length"},"computed":false,"optional":false}],"optional":false}},{"type":"ReturnStatement","start":5815,"end":5838,"argument":{"type":"CallExpression","start":5822,"end":5837,"callee":{"type":"Identifier","start":5822,"end":5824,"name":"of"},"arguments":[{"type":"Identifier","start":5825,"end":5836,"name":"failSummary"}],"optional":false}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":5865,"end":6023,"static":false,"computed":false,"key":{"type":"Identifier","start":5865,"end":5888,"name":"autoTranslateNonICUUnit"},"kind":"method","value":{"type":"FunctionExpression","start":5888,"end":6023,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5889,"end":5891,"name":"tu"},{"type":"Identifier","start":5893,"end":5910,"name":"translatedMessage"}],"body":{"type":"BlockStatement","start":5912,"end":6023,"body":[{"type":"ReturnStatement","start":5923,"end":6016,"argument":{"type":"CallExpression","start":5930,"end":6015,"callee":{"type":"MemberExpression","start":5930,"end":5952,"object":{"type":"ThisExpression","start":5930,"end":5934},"property":{"type":"Identifier","start":5935,"end":5952,"name":"autoTranslateUnit"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5953,"end":5955,"name":"tu"},{"type":"CallExpression","start":5957,"end":6014,"callee":{"type":"MemberExpression","start":5957,"end":5995,"object":{"type":"CallExpression","start":5957,"end":5985,"callee":{"type":"MemberExpression","start":5957,"end":5983,"object":{"type":"Identifier","start":5957,"end":5959,"name":"tu"},"property":{"type":"Identifier","start":5960,"end":5983,"name":"sourceContentNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":5986,"end":5995,"name":"translate"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5996,"end":6013,"name":"translatedMessage"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":6029,"end":6182,"static":false,"computed":false,"key":{"type":"Identifier","start":6029,"end":6049,"name":"autoTranslateICUUnit"},"kind":"method","value":{"type":"FunctionExpression","start":6049,"end":6182,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6050,"end":6052,"name":"tu"},{"type":"Identifier","start":6054,"end":6065,"name":"translation"}],"body":{"type":"BlockStatement","start":6067,"end":6182,"body":[{"type":"ReturnStatement","start":6078,"end":6175,"argument":{"type":"CallExpression","start":6085,"end":6174,"callee":{"type":"MemberExpression","start":6085,"end":6107,"object":{"type":"ThisExpression","start":6085,"end":6089},"property":{"type":"Identifier","start":6090,"end":6107,"name":"autoTranslateUnit"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6108,"end":6110,"name":"tu"},{"type":"CallExpression","start":6112,"end":6173,"callee":{"type":"MemberExpression","start":6112,"end":6160,"object":{"type":"CallExpression","start":6112,"end":6140,"callee":{"type":"MemberExpression","start":6112,"end":6138,"object":{"type":"Identifier","start":6112,"end":6114,"name":"tu"},"property":{"type":"Identifier","start":6115,"end":6138,"name":"sourceContentNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":6141,"end":6160,"name":"translateICUMessage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6161,"end":6172,"name":"translation"}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":6188,"end":6787,"static":false,"computed":false,"key":{"type":"Identifier","start":6188,"end":6205,"name":"autoTranslateUnit"},"kind":"method","value":{"type":"FunctionExpression","start":6205,"end":6787,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6206,"end":6208,"name":"tu"},{"type":"Identifier","start":6210,"end":6227,"name":"translatedMessage"}],"body":{"type":"BlockStatement","start":6229,"end":6787,"body":[{"type":"VariableDeclaration","start":6240,"end":6284,"declarations":[{"type":"VariableDeclarator","start":6246,"end":6283,"id":{"type":"Identifier","start":6246,"end":6252,"name":"errors"},"init":{"type":"CallExpression","start":6255,"end":6283,"callee":{"type":"MemberExpression","start":6255,"end":6281,"object":{"type":"Identifier","start":6255,"end":6272,"name":"translatedMessage"},"property":{"type":"Identifier","start":6273,"end":6281,"name":"validate"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6294,"end":6348,"declarations":[{"type":"VariableDeclarator","start":6300,"end":6347,"id":{"type":"Identifier","start":6300,"end":6308,"name":"warnings"},"init":{"type":"CallExpression","start":6311,"end":6347,"callee":{"type":"MemberExpression","start":6311,"end":6345,"object":{"type":"Identifier","start":6311,"end":6328,"name":"translatedMessage"},"property":{"type":"Identifier","start":6329,"end":6345,"name":"validateWarnings"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":6358,"end":6780,"test":{"type":"UnaryExpression","start":6362,"end":6388,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":6363,"end":6388,"callee":{"type":"Identifier","start":6363,"end":6380,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":6381,"end":6387,"name":"errors"}],"optional":false}},"consequent":{"type":"BlockStatement","start":6390,"end":6489,"body":[{"type":"ReturnStatement","start":6405,"end":6478,"argument":{"type":"NewExpression","start":6412,"end":6477,"callee":{"type":"Identifier","start":6416,"end":6435,"name":"AutoTranslateResult"},"arguments":[{"type":"Literal","start":6436,"end":6441,"value":false,"raw":"false"},{"type":"Literal","start":6443,"end":6476,"value":"errors detected, not translated","raw":"'errors detected, not translated'"}]}}]},"alternate":{"type":"IfStatement","start":6504,"end":6780,"test":{"type":"UnaryExpression","start":6508,"end":6536,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":6509,"end":6536,"callee":{"type":"Identifier","start":6509,"end":6526,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":6527,"end":6535,"name":"warnings"}],"optional":false}},"consequent":{"type":"BlockStatement","start":6538,"end":6639,"body":[{"type":"ReturnStatement","start":6553,"end":6628,"argument":{"type":"NewExpression","start":6560,"end":6627,"callee":{"type":"Identifier","start":6564,"end":6583,"name":"AutoTranslateResult"},"arguments":[{"type":"Literal","start":6584,"end":6589,"value":false,"raw":"false"},{"type":"Literal","start":6591,"end":6626,"value":"warnings detected, not translated","raw":"'warnings detected, not translated'"}]}}]},"alternate":{"type":"BlockStatement","start":6654,"end":6780,"body":[{"type":"ExpressionStatement","start":6669,"end":6701,"expression":{"type":"CallExpression","start":6669,"end":6700,"callee":{"type":"MemberExpression","start":6669,"end":6681,"object":{"type":"Identifier","start":6669,"end":6671,"name":"tu"},"property":{"type":"Identifier","start":6672,"end":6681,"name":"translate"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6682,"end":6699,"name":"translatedMessage"}],"optional":false}},{"type":"ReturnStatement","start":6715,"end":6758,"argument":{"type":"NewExpression","start":6722,"end":6757,"callee":{"type":"Identifier","start":6726,"end":6745,"name":"AutoTranslateResult"},"arguments":[{"type":"Literal","start":6746,"end":6750,"value":true,"raw":"true"},{"type":"Literal","start":6752,"end":6756,"value":null,"raw":"null"}]}}]}}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":6792,"end":25298}]},"code":"import { isNullOrUndefined } from '../common/util';\r\nimport { forkJoin, of } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport * as entityDecoderLib from 'he';\r\nimport { STATE_NEW } from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport { AutoTranslateService } from './auto-translate-service';\r\nimport { AutoTranslateResult } from './auto-translate-result';\r\nimport { AutoTranslateSummaryReport } from './auto-translate-summary-report';\r\n/**\r\n * Created by martin on 07.07.2017.\r\n * Service to autotranslate Transunits via Google Translate.\r\n */\r\nexport class XliffMergeAutoTranslateService {\r\n    constructor(apikey) {\r\n        this.autoTranslateService = new AutoTranslateService(apikey);\r\n    }\r\n    /**\r\n     * Auto translate file via Google Translate.\r\n     * Will translate all new units in file.\r\n     * @param from from\r\n     * @param to to\r\n     * @param languageSpecificMessagesFile languageSpecificMessagesFile\r\n     * @return a promise with the execution result as a summary report.\r\n     */\r\n    autoTranslate(from, to, languageSpecificMessagesFile) {\r\n        return forkJoin([\r\n            this.doAutoTranslateNonICUMessages(from, to, languageSpecificMessagesFile),\r\n            ...this.doAutoTranslateICUMessages(from, to, languageSpecificMessagesFile)\r\n        ])\r\n            .pipe(map((summaries) => {\r\n            const summary = summaries[0];\r\n            for (let i = 1; i < summaries.length; i++) {\r\n                summary.merge(summaries[i]);\r\n            }\r\n            return summary;\r\n        }));\r\n    }\r\n    /**\r\n     * Collect all units that are untranslated.\r\n     * @param languageSpecificMessagesFile languageSpecificMessagesFile\r\n     * @return all untranslated units\r\n     */\r\n    allUntranslatedTUs(languageSpecificMessagesFile) {\r\n        // collect all units, that should be auto translated\r\n        const allUntranslated = [];\r\n        languageSpecificMessagesFile.forEachTransUnit((tu) => {\r\n            if (tu.targetState() === STATE_NEW) {\r\n                allUntranslated.push(tu);\r\n            }\r\n        });\r\n        return allUntranslated;\r\n    }\r\n    doAutoTranslateNonICUMessages(from, to, languageSpecificMessagesFile) {\r\n        const allUntranslated = this.allUntranslatedTUs(languageSpecificMessagesFile);\r\n        const allTranslatable = allUntranslated.filter((tu) => isNullOrUndefined(tu.sourceContentNormalized().getICUMessage()));\r\n        const allMessages = allTranslatable.map((tu) => {\r\n            return tu.sourceContentNormalized().asDisplayString();\r\n        });\r\n        return this.autoTranslateService.translateMultipleStrings(allMessages, from, to)\r\n            .pipe(\r\n        // #94 google translate might return &#.. entity refs, that must be decoded\r\n        map((translations) => translations.map(encodedTranslation => entityDecoderLib.decode(encodedTranslation))), map((translations) => {\r\n            const summary = new AutoTranslateSummaryReport(from, to);\r\n            summary.setIgnored(allUntranslated.length - allTranslatable.length);\r\n            for (let i = 0; i < translations.length; i++) {\r\n                const tu = allTranslatable[i];\r\n                const translationText = translations[i];\r\n                const result = this.autoTranslateNonICUUnit(tu, translationText);\r\n                summary.addSingleResult(tu, result);\r\n            }\r\n            return summary;\r\n        }), catchError((err) => {\r\n            const failSummary = new AutoTranslateSummaryReport(from, to);\r\n            failSummary.setError(err.message, allMessages.length);\r\n            return of(failSummary);\r\n        }));\r\n    }\r\n    doAutoTranslateICUMessages(from, to, languageSpecificMessagesFile) {\r\n        const allUntranslated = this.allUntranslatedTUs(languageSpecificMessagesFile);\r\n        const allTranslatableICU = allUntranslated.filter((tu) => !isNullOrUndefined(tu.sourceContentNormalized().getICUMessage()));\r\n        return allTranslatableICU.map((tu) => {\r\n            return this.doAutoTranslateICUMessage(from, to, tu);\r\n        });\r\n    }\r\n    /**\r\n     * Translate single ICU Messages.\r\n     * @param from from\r\n     * @param to to\r\n     * @param tu transunit to translate (must contain ICU Message)\r\n     * @return summary report\r\n     */\r\n    doAutoTranslateICUMessage(from, to, tu) {\r\n        const icuMessage = tu.sourceContentNormalized().getICUMessage();\r\n        const categories = icuMessage.getCategories();\r\n        // check for nested ICUs, we do not support that\r\n        if (categories.find((category) => !isNullOrUndefined(category.getMessageNormalized().getICUMessage()))) {\r\n            const summary = new AutoTranslateSummaryReport(from, to);\r\n            summary.setIgnored(1);\r\n            return of(summary);\r\n        }\r\n        const allMessages = categories.map((category) => category.getMessageNormalized().asDisplayString());\r\n        return this.autoTranslateService.translateMultipleStrings(allMessages, from, to)\r\n            .pipe(\r\n        // #94 google translate might return &#.. entity refs, that must be decoded\r\n        map((translations) => translations.map(encodedTranslation => entityDecoderLib.decode(encodedTranslation))), map((translations) => {\r\n            const summary = new AutoTranslateSummaryReport(from, to);\r\n            const icuTranslation = {};\r\n            for (let i = 0; i < translations.length; i++) {\r\n                icuTranslation[categories[i].getCategory()] = translations[i];\r\n            }\r\n            const result = this.autoTranslateICUUnit(tu, icuTranslation);\r\n            summary.addSingleResult(tu, result);\r\n            return summary;\r\n        }), catchError((err) => {\r\n            const failSummary = new AutoTranslateSummaryReport(from, to);\r\n            failSummary.setError(err.message, allMessages.length);\r\n            return of(failSummary);\r\n        }));\r\n    }\r\n    autoTranslateNonICUUnit(tu, translatedMessage) {\r\n        return this.autoTranslateUnit(tu, tu.sourceContentNormalized().translate(translatedMessage));\r\n    }\r\n    autoTranslateICUUnit(tu, translation) {\r\n        return this.autoTranslateUnit(tu, tu.sourceContentNormalized().translateICUMessage(translation));\r\n    }\r\n    autoTranslateUnit(tu, translatedMessage) {\r\n        const errors = translatedMessage.validate();\r\n        const warnings = translatedMessage.validateWarnings();\r\n        if (!isNullOrUndefined(errors)) {\r\n            return new AutoTranslateResult(false, 'errors detected, not translated');\r\n        }\r\n        else if (!isNullOrUndefined(warnings)) {\r\n            return new AutoTranslateResult(false, 'warnings detected, not translated');\r\n        }\r\n        else {\r\n            tu.translate(translatedMessage);\r\n            return new AutoTranslateResult(true, null); // success\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieGxpZmYtbWVyZ2UtYXV0by10cmFuc2xhdGUtc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL2F1dG90cmFuc2xhdGUveGxpZmYtbWVyZ2UtYXV0by10cmFuc2xhdGUtc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNqRCxPQUFPLEVBQWEsUUFBUSxFQUFFLEVBQUUsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUM5QyxPQUFPLEVBQUMsR0FBRyxFQUFFLFVBQVUsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQy9DLE9BQU8sS0FBSyxnQkFBZ0IsTUFBTSxJQUFJLENBQUM7QUFDdkMsT0FBTyxFQUVILFNBQVMsRUFDWixNQUFNLHNDQUFzQyxDQUFDO0FBQzlDLE9BQU8sRUFBQyxvQkFBb0IsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBQzlELE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQzVELE9BQU8sRUFBQywwQkFBMEIsRUFBQyxNQUFNLGlDQUFpQyxDQUFDO0FBQzNFOzs7R0FHRztBQUVILE1BQU0sT0FBTyw4QkFBOEI7SUFJdkMsWUFBWSxNQUFjO1FBQ3RCLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLG9CQUFvQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2pFLENBQUM7SUFFRDs7Ozs7OztPQU9HO0lBQ0ksYUFBYSxDQUFDLElBQVksRUFBRSxFQUFVLEVBQUUsNEJBQXNEO1FBRWpHLE9BQU8sUUFBUSxDQUFDO1lBQ1osSUFBSSxDQUFDLDZCQUE2QixDQUFDLElBQUksRUFBRSxFQUFFLEVBQUUsNEJBQTRCLENBQUM7WUFDMUUsR0FBRyxJQUFJLENBQUMsMEJBQTBCLENBQUMsSUFBSSxFQUFFLEVBQUUsRUFBRSw0QkFBNEIsQ0FBQztTQUFDLENBQUM7YUFDM0UsSUFBSSxDQUNELEdBQUcsQ0FBQyxDQUFDLFNBQXVDLEVBQUUsRUFBRTtZQUM1QyxNQUFNLE9BQU8sR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDN0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQ3ZDLE9BQU8sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDL0I7WUFDRCxPQUFPLE9BQU8sQ0FBQztRQUMzQixDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ1IsQ0FBQztJQUVEOzs7O09BSUc7SUFDSyxrQkFBa0IsQ0FBQyw0QkFBc0Q7UUFDN0Usb0RBQW9EO1FBQ3BELE1BQU0sZUFBZSxHQUFpQixFQUFFLENBQUM7UUFDekMsNEJBQTRCLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRTtZQUNqRCxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsS0FBSyxTQUFTLEVBQUU7Z0JBQ2hDLGVBQWUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7YUFDNUI7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUNILE9BQU8sZUFBZSxDQUFDO0lBQzNCLENBQUM7SUFFTyw2QkFBNkIsQ0FBQyxJQUFZLEVBQUUsRUFBVSxFQUFFLDRCQUFzRDtRQUVsSCxNQUFNLGVBQWUsR0FBaUIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLDRCQUE0QixDQUFDLENBQUM7UUFDNUYsTUFBTSxlQUFlLEdBQUcsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsaUJBQWlCLENBQUMsRUFBRSxDQUFDLHVCQUF1QixFQUFFLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3hILE1BQU0sV0FBVyxHQUFhLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRTtZQUNyRCxPQUFPLEVBQUUsQ0FBQyx1QkFBdUIsRUFBRSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQzFELENBQUMsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUMsd0JBQXdCLENBQUMsV0FBVyxFQUFFLElBQUksRUFBRSxFQUFFLENBQUM7YUFDM0UsSUFBSTtRQUNELDJFQUEyRTtRQUMzRSxHQUFHLENBQUMsQ0FBQyxZQUFzQixFQUFFLEVBQUUsQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLEVBQ3BILEdBQUcsQ0FBQyxDQUFDLFlBQXNCLEVBQUUsRUFBRTtZQUMvQixNQUFNLE9BQU8sR0FBRyxJQUFJLDBCQUEwQixDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztZQUN6RCxPQUFPLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FBQyxNQUFNLEdBQUcsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3BFLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxZQUFZLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUMxQyxNQUFNLEVBQUUsR0FBRyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzlCLE1BQU0sZUFBZSxHQUFHLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDeEMsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLHVCQUF1QixDQUFDLEVBQUUsRUFBRSxlQUFlLENBQUMsQ0FBQztnQkFDakUsT0FBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUM7YUFDdkM7WUFDRCxPQUFPLE9BQU8sQ0FBQztRQUNmLENBQUMsQ0FBQyxFQUNGLFVBQVUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFO1lBQ2YsTUFBTSxXQUFXLEdBQUcsSUFBSSwwQkFBMEIsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDN0QsV0FBVyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN0RCxPQUFPLEVBQUUsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMvQixDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ1osQ0FBQztJQUVPLDBCQUEwQixDQUFDLElBQVksRUFBRSxFQUFVLEVBQUUsNEJBQXNEO1FBRS9HLE1BQU0sZUFBZSxHQUFpQixJQUFJLENBQUMsa0JBQWtCLENBQUMsNEJBQTRCLENBQUMsQ0FBQztRQUM1RixNQUFNLGtCQUFrQixHQUFHLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsaUJBQWlCLENBQUMsRUFBRSxDQUFDLHVCQUF1QixFQUFFLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzVILE9BQU8sa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUU7WUFDakMsT0FBTyxJQUFJLENBQUMseUJBQXlCLENBQUMsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN4RCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDSyx5QkFBeUIsQ0FBQyxJQUFZLEVBQUUsRUFBVSxFQUFFLEVBQWM7UUFDdEUsTUFBTSxVQUFVLEdBQWdCLEVBQUUsQ0FBQyx1QkFBdUIsRUFBRSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQzdFLE1BQU0sVUFBVSxHQUFHLFVBQVUsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUM5QyxnREFBZ0Q7UUFDaEQsSUFBSSxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsRUFBRSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUMsRUFBRTtZQUNwRyxNQUFNLE9BQU8sR0FBRyxJQUFJLDBCQUEwQixDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztZQUN6RCxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3RCLE9BQU8sRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ3RCO1FBQ0QsTUFBTSxXQUFXLEdBQWEsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLG9CQUFvQixFQUFFLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQztRQUM5RyxPQUFPLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyx3QkFBd0IsQ0FBQyxXQUFXLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQzthQUMzRSxJQUFJO1FBQ0QsMkVBQTJFO1FBQzNFLEdBQUcsQ0FBQyxDQUFDLFlBQXNCLEVBQUUsRUFBRSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsRUFBRSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsRUFDcEgsR0FBRyxDQUFDLENBQUMsWUFBc0IsRUFBRSxFQUFFO1lBQzNCLE1BQU0sT0FBTyxHQUFHLElBQUksMEJBQTBCLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQ3pELE1BQU0sY0FBYyxHQUEyQixFQUFFLENBQUM7WUFDbEQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFlBQVksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQzFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUMsR0FBRyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDakU7WUFDRCxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsb0JBQW9CLENBQUMsRUFBRSxFQUFFLGNBQWMsQ0FBQyxDQUFDO1lBQzdELE9BQU8sQ0FBQyxlQUFlLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBQ3BDLE9BQU8sT0FBTyxDQUFDO1FBQ25CLENBQUMsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFO1lBQ25CLE1BQU0sV0FBVyxHQUFHLElBQUksMEJBQTBCLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQzdELFdBQVcsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDdEQsT0FBTyxFQUFFLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDL0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNaLENBQUM7SUFFTyx1QkFBdUIsQ0FBQyxFQUFjLEVBQUUsaUJBQXlCO1FBQ3JFLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsdUJBQXVCLEVBQUUsQ0FBQyxTQUFTLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO0lBQ2pHLENBQUM7SUFFTyxvQkFBb0IsQ0FBQyxFQUFjLEVBQUUsV0FBbUM7UUFDNUUsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyx1QkFBdUIsRUFBRSxDQUFDLG1CQUFtQixDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7SUFDckcsQ0FBQztJQUVPLGlCQUFpQixDQUFDLEVBQWMsRUFBRSxpQkFBcUM7UUFDM0UsTUFBTSxNQUFNLEdBQUcsaUJBQWlCLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDNUMsTUFBTSxRQUFRLEdBQUcsaUJBQWlCLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUN0RCxJQUFJLENBQUMsaUJBQWlCLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDNUIsT0FBTyxJQUFJLG1CQUFtQixDQUFDLEtBQUssRUFBRSxpQ0FBaUMsQ0FBQyxDQUFDO1NBQzVFO2FBQU0sSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQ3JDLE9BQU8sSUFBSSxtQkFBbUIsQ0FBQyxLQUFLLEVBQUUsbUNBQW1DLENBQUMsQ0FBQztTQUM5RTthQUFNO1lBQ0gsRUFBRSxDQUFDLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1lBQ2hDLE9BQU8sSUFBSSxtQkFBbUIsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxVQUFVO1NBQ3pEO0lBQ0wsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtpc051bGxPclVuZGVmaW5lZH0gZnJvbSAnLi4vY29tbW9uL3V0aWwnO1xyXG5pbXBvcnQge09ic2VydmFibGUsIGZvcmtKb2luLCBvZn0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7bWFwLCBjYXRjaEVycm9yfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcbmltcG9ydCAqIGFzIGVudGl0eURlY29kZXJMaWIgZnJvbSAnaGUnO1xyXG5pbXBvcnQge1xyXG4gICAgSUlDVU1lc3NhZ2UsIElJQ1VNZXNzYWdlVHJhbnNsYXRpb24sIElOb3JtYWxpemVkTWVzc2FnZSwgSVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlLCBJVHJhbnNVbml0LFxyXG4gICAgU1RBVEVfTkVXXHJcbn0gZnJvbSAnQG5neC1pMThuc3VwcG9ydC9uZ3gtaTE4bnN1cHBvcnQtbGliJztcclxuaW1wb3J0IHtBdXRvVHJhbnNsYXRlU2VydmljZX0gZnJvbSAnLi9hdXRvLXRyYW5zbGF0ZS1zZXJ2aWNlJztcclxuaW1wb3J0IHtBdXRvVHJhbnNsYXRlUmVzdWx0fSBmcm9tICcuL2F1dG8tdHJhbnNsYXRlLXJlc3VsdCc7XHJcbmltcG9ydCB7QXV0b1RyYW5zbGF0ZVN1bW1hcnlSZXBvcnR9IGZyb20gJy4vYXV0by10cmFuc2xhdGUtc3VtbWFyeS1yZXBvcnQnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMDcuMDcuMjAxNy5cclxuICogU2VydmljZSB0byBhdXRvdHJhbnNsYXRlIFRyYW5zdW5pdHMgdmlhIEdvb2dsZSBUcmFuc2xhdGUuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFhsaWZmTWVyZ2VBdXRvVHJhbnNsYXRlU2VydmljZSB7XHJcblxyXG4gICAgcHJpdmF0ZSBhdXRvVHJhbnNsYXRlU2VydmljZTogQXV0b1RyYW5zbGF0ZVNlcnZpY2U7XHJcblxyXG4gICAgY29uc3RydWN0b3IoYXBpa2V5OiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLmF1dG9UcmFuc2xhdGVTZXJ2aWNlID0gbmV3IEF1dG9UcmFuc2xhdGVTZXJ2aWNlKGFwaWtleSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBBdXRvIHRyYW5zbGF0ZSBmaWxlIHZpYSBHb29nbGUgVHJhbnNsYXRlLlxyXG4gICAgICogV2lsbCB0cmFuc2xhdGUgYWxsIG5ldyB1bml0cyBpbiBmaWxlLlxyXG4gICAgICogQHBhcmFtIGZyb20gZnJvbVxyXG4gICAgICogQHBhcmFtIHRvIHRvXHJcbiAgICAgKiBAcGFyYW0gbGFuZ3VhZ2VTcGVjaWZpY01lc3NhZ2VzRmlsZSBsYW5ndWFnZVNwZWNpZmljTWVzc2FnZXNGaWxlXHJcbiAgICAgKiBAcmV0dXJuIGEgcHJvbWlzZSB3aXRoIHRoZSBleGVjdXRpb24gcmVzdWx0IGFzIGEgc3VtbWFyeSByZXBvcnQuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBhdXRvVHJhbnNsYXRlKGZyb206IHN0cmluZywgdG86IHN0cmluZywgbGFuZ3VhZ2VTcGVjaWZpY01lc3NhZ2VzRmlsZTogSVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlKVxyXG4gICAgICAgIDogT2JzZXJ2YWJsZTxBdXRvVHJhbnNsYXRlU3VtbWFyeVJlcG9ydD4ge1xyXG4gICAgICAgIHJldHVybiBmb3JrSm9pbihbXHJcbiAgICAgICAgICAgIHRoaXMuZG9BdXRvVHJhbnNsYXRlTm9uSUNVTWVzc2FnZXMoZnJvbSwgdG8sIGxhbmd1YWdlU3BlY2lmaWNNZXNzYWdlc0ZpbGUpLFxyXG4gICAgICAgICAgICAuLi50aGlzLmRvQXV0b1RyYW5zbGF0ZUlDVU1lc3NhZ2VzKGZyb20sIHRvLCBsYW5ndWFnZVNwZWNpZmljTWVzc2FnZXNGaWxlKV0pXHJcbiAgICAgICAgICAgIC5waXBlKFxyXG4gICAgICAgICAgICAgICAgbWFwKChzdW1tYXJpZXM6IEF1dG9UcmFuc2xhdGVTdW1tYXJ5UmVwb3J0W10pID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBzdW1tYXJ5ID0gc3VtbWFyaWVzWzBdO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDwgc3VtbWFyaWVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1bW1hcnkubWVyZ2Uoc3VtbWFyaWVzW2ldKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN1bW1hcnk7XHJcbiAgICAgICAgfSkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ29sbGVjdCBhbGwgdW5pdHMgdGhhdCBhcmUgdW50cmFuc2xhdGVkLlxyXG4gICAgICogQHBhcmFtIGxhbmd1YWdlU3BlY2lmaWNNZXNzYWdlc0ZpbGUgbGFuZ3VhZ2VTcGVjaWZpY01lc3NhZ2VzRmlsZVxyXG4gICAgICogQHJldHVybiBhbGwgdW50cmFuc2xhdGVkIHVuaXRzXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgYWxsVW50cmFuc2xhdGVkVFVzKGxhbmd1YWdlU3BlY2lmaWNNZXNzYWdlc0ZpbGU6IElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSk6IElUcmFuc1VuaXRbXSB7XHJcbiAgICAgICAgLy8gY29sbGVjdCBhbGwgdW5pdHMsIHRoYXQgc2hvdWxkIGJlIGF1dG8gdHJhbnNsYXRlZFxyXG4gICAgICAgIGNvbnN0IGFsbFVudHJhbnNsYXRlZDogSVRyYW5zVW5pdFtdID0gW107XHJcbiAgICAgICAgbGFuZ3VhZ2VTcGVjaWZpY01lc3NhZ2VzRmlsZS5mb3JFYWNoVHJhbnNVbml0KCh0dSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAodHUudGFyZ2V0U3RhdGUoKSA9PT0gU1RBVEVfTkVXKSB7XHJcbiAgICAgICAgICAgICAgICBhbGxVbnRyYW5zbGF0ZWQucHVzaCh0dSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gYWxsVW50cmFuc2xhdGVkO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgZG9BdXRvVHJhbnNsYXRlTm9uSUNVTWVzc2FnZXMoZnJvbTogc3RyaW5nLCB0bzogc3RyaW5nLCBsYW5ndWFnZVNwZWNpZmljTWVzc2FnZXNGaWxlOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUpXHJcbiAgICAgICAgOiBPYnNlcnZhYmxlPEF1dG9UcmFuc2xhdGVTdW1tYXJ5UmVwb3J0PiB7XHJcbiAgICAgICAgY29uc3QgYWxsVW50cmFuc2xhdGVkOiBJVHJhbnNVbml0W10gPSB0aGlzLmFsbFVudHJhbnNsYXRlZFRVcyhsYW5ndWFnZVNwZWNpZmljTWVzc2FnZXNGaWxlKTtcclxuICAgICAgICBjb25zdCBhbGxUcmFuc2xhdGFibGUgPSBhbGxVbnRyYW5zbGF0ZWQuZmlsdGVyKCh0dSkgPT4gaXNOdWxsT3JVbmRlZmluZWQodHUuc291cmNlQ29udGVudE5vcm1hbGl6ZWQoKS5nZXRJQ1VNZXNzYWdlKCkpKTtcclxuICAgICAgICBjb25zdCBhbGxNZXNzYWdlczogc3RyaW5nW10gPSBhbGxUcmFuc2xhdGFibGUubWFwKCh0dSkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gdHUuc291cmNlQ29udGVudE5vcm1hbGl6ZWQoKS5hc0Rpc3BsYXlTdHJpbmcoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gdGhpcy5hdXRvVHJhbnNsYXRlU2VydmljZS50cmFuc2xhdGVNdWx0aXBsZVN0cmluZ3MoYWxsTWVzc2FnZXMsIGZyb20sIHRvKVxyXG4gICAgICAgICAgICAucGlwZShcclxuICAgICAgICAgICAgICAgIC8vICM5NCBnb29nbGUgdHJhbnNsYXRlIG1pZ2h0IHJldHVybiAmIy4uIGVudGl0eSByZWZzLCB0aGF0IG11c3QgYmUgZGVjb2RlZFxyXG4gICAgICAgICAgICAgICAgbWFwKCh0cmFuc2xhdGlvbnM6IHN0cmluZ1tdKSA9PiB0cmFuc2xhdGlvbnMubWFwKGVuY29kZWRUcmFuc2xhdGlvbiA9PiBlbnRpdHlEZWNvZGVyTGliLmRlY29kZShlbmNvZGVkVHJhbnNsYXRpb24pKSksXHJcbiAgICAgICAgICAgICAgICBtYXAoKHRyYW5zbGF0aW9uczogc3RyaW5nW10pID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHN1bW1hcnkgPSBuZXcgQXV0b1RyYW5zbGF0ZVN1bW1hcnlSZXBvcnQoZnJvbSwgdG8pO1xyXG4gICAgICAgICAgICAgICAgc3VtbWFyeS5zZXRJZ25vcmVkKGFsbFVudHJhbnNsYXRlZC5sZW5ndGggLSBhbGxUcmFuc2xhdGFibGUubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdHJhbnNsYXRpb25zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdHUgPSBhbGxUcmFuc2xhdGFibGVbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdHJhbnNsYXRpb25UZXh0ID0gdHJhbnNsYXRpb25zW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuYXV0b1RyYW5zbGF0ZU5vbklDVVVuaXQodHUsIHRyYW5zbGF0aW9uVGV4dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgc3VtbWFyeS5hZGRTaW5nbGVSZXN1bHQodHUsIHJlc3VsdCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gc3VtbWFyeTtcclxuICAgICAgICAgICAgICAgIH0pLFxyXG4gICAgICAgICAgICAgICAgY2F0Y2hFcnJvcigoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZmFpbFN1bW1hcnkgPSBuZXcgQXV0b1RyYW5zbGF0ZVN1bW1hcnlSZXBvcnQoZnJvbSwgdG8pO1xyXG4gICAgICAgICAgICAgICAgICAgIGZhaWxTdW1tYXJ5LnNldEVycm9yKGVyci5tZXNzYWdlLCBhbGxNZXNzYWdlcy5sZW5ndGgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvZihmYWlsU3VtbWFyeSk7XHJcbiAgICAgICAgICAgIH0pKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGRvQXV0b1RyYW5zbGF0ZUlDVU1lc3NhZ2VzKGZyb206IHN0cmluZywgdG86IHN0cmluZywgbGFuZ3VhZ2VTcGVjaWZpY01lc3NhZ2VzRmlsZTogSVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlKVxyXG4gICAgICAgIDogT2JzZXJ2YWJsZTxBdXRvVHJhbnNsYXRlU3VtbWFyeVJlcG9ydD5bXSB7XHJcbiAgICAgICAgY29uc3QgYWxsVW50cmFuc2xhdGVkOiBJVHJhbnNVbml0W10gPSB0aGlzLmFsbFVudHJhbnNsYXRlZFRVcyhsYW5ndWFnZVNwZWNpZmljTWVzc2FnZXNGaWxlKTtcclxuICAgICAgICBjb25zdCBhbGxUcmFuc2xhdGFibGVJQ1UgPSBhbGxVbnRyYW5zbGF0ZWQuZmlsdGVyKCh0dSkgPT4gIWlzTnVsbE9yVW5kZWZpbmVkKHR1LnNvdXJjZUNvbnRlbnROb3JtYWxpemVkKCkuZ2V0SUNVTWVzc2FnZSgpKSk7XHJcbiAgICAgICAgcmV0dXJuIGFsbFRyYW5zbGF0YWJsZUlDVS5tYXAoKHR1KSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRvQXV0b1RyYW5zbGF0ZUlDVU1lc3NhZ2UoZnJvbSwgdG8sIHR1KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRyYW5zbGF0ZSBzaW5nbGUgSUNVIE1lc3NhZ2VzLlxyXG4gICAgICogQHBhcmFtIGZyb20gZnJvbVxyXG4gICAgICogQHBhcmFtIHRvIHRvXHJcbiAgICAgKiBAcGFyYW0gdHUgdHJhbnN1bml0IHRvIHRyYW5zbGF0ZSAobXVzdCBjb250YWluIElDVSBNZXNzYWdlKVxyXG4gICAgICogQHJldHVybiBzdW1tYXJ5IHJlcG9ydFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGRvQXV0b1RyYW5zbGF0ZUlDVU1lc3NhZ2UoZnJvbTogc3RyaW5nLCB0bzogc3RyaW5nLCB0dTogSVRyYW5zVW5pdCk6IE9ic2VydmFibGU8QXV0b1RyYW5zbGF0ZVN1bW1hcnlSZXBvcnQ+IHtcclxuICAgICAgICBjb25zdCBpY3VNZXNzYWdlOiBJSUNVTWVzc2FnZSA9IHR1LnNvdXJjZUNvbnRlbnROb3JtYWxpemVkKCkuZ2V0SUNVTWVzc2FnZSgpO1xyXG4gICAgICAgIGNvbnN0IGNhdGVnb3JpZXMgPSBpY3VNZXNzYWdlLmdldENhdGVnb3JpZXMoKTtcclxuICAgICAgICAvLyBjaGVjayBmb3IgbmVzdGVkIElDVXMsIHdlIGRvIG5vdCBzdXBwb3J0IHRoYXRcclxuICAgICAgICBpZiAoY2F0ZWdvcmllcy5maW5kKChjYXRlZ29yeSkgPT4gIWlzTnVsbE9yVW5kZWZpbmVkKGNhdGVnb3J5LmdldE1lc3NhZ2VOb3JtYWxpemVkKCkuZ2V0SUNVTWVzc2FnZSgpKSkpIHtcclxuICAgICAgICAgICAgY29uc3Qgc3VtbWFyeSA9IG5ldyBBdXRvVHJhbnNsYXRlU3VtbWFyeVJlcG9ydChmcm9tLCB0byk7XHJcbiAgICAgICAgICAgIHN1bW1hcnkuc2V0SWdub3JlZCgxKTtcclxuICAgICAgICAgICAgcmV0dXJuIG9mKHN1bW1hcnkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBhbGxNZXNzYWdlczogc3RyaW5nW10gPSBjYXRlZ29yaWVzLm1hcCgoY2F0ZWdvcnkpID0+IGNhdGVnb3J5LmdldE1lc3NhZ2VOb3JtYWxpemVkKCkuYXNEaXNwbGF5U3RyaW5nKCkpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmF1dG9UcmFuc2xhdGVTZXJ2aWNlLnRyYW5zbGF0ZU11bHRpcGxlU3RyaW5ncyhhbGxNZXNzYWdlcywgZnJvbSwgdG8pXHJcbiAgICAgICAgICAgIC5waXBlKFxyXG4gICAgICAgICAgICAgICAgLy8gIzk0IGdvb2dsZSB0cmFuc2xhdGUgbWlnaHQgcmV0dXJuICYjLi4gZW50aXR5IHJlZnMsIHRoYXQgbXVzdCBiZSBkZWNvZGVkXHJcbiAgICAgICAgICAgICAgICBtYXAoKHRyYW5zbGF0aW9uczogc3RyaW5nW10pID0+IHRyYW5zbGF0aW9ucy5tYXAoZW5jb2RlZFRyYW5zbGF0aW9uID0+IGVudGl0eURlY29kZXJMaWIuZGVjb2RlKGVuY29kZWRUcmFuc2xhdGlvbikpKSxcclxuICAgICAgICAgICAgICAgIG1hcCgodHJhbnNsYXRpb25zOiBzdHJpbmdbXSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHN1bW1hcnkgPSBuZXcgQXV0b1RyYW5zbGF0ZVN1bW1hcnlSZXBvcnQoZnJvbSwgdG8pO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGljdVRyYW5zbGF0aW9uOiBJSUNVTWVzc2FnZVRyYW5zbGF0aW9uID0ge307XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0cmFuc2xhdGlvbnMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWN1VHJhbnNsYXRpb25bY2F0ZWdvcmllc1tpXS5nZXRDYXRlZ29yeSgpXSA9IHRyYW5zbGF0aW9uc1tpXTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gdGhpcy5hdXRvVHJhbnNsYXRlSUNVVW5pdCh0dSwgaWN1VHJhbnNsYXRpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgIHN1bW1hcnkuYWRkU2luZ2xlUmVzdWx0KHR1LCByZXN1bHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzdW1tYXJ5O1xyXG4gICAgICAgICAgICAgICAgfSksIGNhdGNoRXJyb3IoKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZhaWxTdW1tYXJ5ID0gbmV3IEF1dG9UcmFuc2xhdGVTdW1tYXJ5UmVwb3J0KGZyb20sIHRvKTtcclxuICAgICAgICAgICAgICAgICAgICBmYWlsU3VtbWFyeS5zZXRFcnJvcihlcnIubWVzc2FnZSwgYWxsTWVzc2FnZXMubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb2YoZmFpbFN1bW1hcnkpO1xyXG4gICAgICAgICAgICB9KSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBhdXRvVHJhbnNsYXRlTm9uSUNVVW5pdCh0dTogSVRyYW5zVW5pdCwgdHJhbnNsYXRlZE1lc3NhZ2U6IHN0cmluZyk6IEF1dG9UcmFuc2xhdGVSZXN1bHQge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmF1dG9UcmFuc2xhdGVVbml0KHR1LCB0dS5zb3VyY2VDb250ZW50Tm9ybWFsaXplZCgpLnRyYW5zbGF0ZSh0cmFuc2xhdGVkTWVzc2FnZSkpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgYXV0b1RyYW5zbGF0ZUlDVVVuaXQodHU6IElUcmFuc1VuaXQsIHRyYW5zbGF0aW9uOiBJSUNVTWVzc2FnZVRyYW5zbGF0aW9uKTogQXV0b1RyYW5zbGF0ZVJlc3VsdCB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYXV0b1RyYW5zbGF0ZVVuaXQodHUsIHR1LnNvdXJjZUNvbnRlbnROb3JtYWxpemVkKCkudHJhbnNsYXRlSUNVTWVzc2FnZSh0cmFuc2xhdGlvbikpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgYXV0b1RyYW5zbGF0ZVVuaXQodHU6IElUcmFuc1VuaXQsIHRyYW5zbGF0ZWRNZXNzYWdlOiBJTm9ybWFsaXplZE1lc3NhZ2UpOiBBdXRvVHJhbnNsYXRlUmVzdWx0IHtcclxuICAgICAgICBjb25zdCBlcnJvcnMgPSB0cmFuc2xhdGVkTWVzc2FnZS52YWxpZGF0ZSgpO1xyXG4gICAgICAgIGNvbnN0IHdhcm5pbmdzID0gdHJhbnNsYXRlZE1lc3NhZ2UudmFsaWRhdGVXYXJuaW5ncygpO1xyXG4gICAgICAgIGlmICghaXNOdWxsT3JVbmRlZmluZWQoZXJyb3JzKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gbmV3IEF1dG9UcmFuc2xhdGVSZXN1bHQoZmFsc2UsICdlcnJvcnMgZGV0ZWN0ZWQsIG5vdCB0cmFuc2xhdGVkJyk7XHJcbiAgICAgICAgfSBlbHNlIGlmICghaXNOdWxsT3JVbmRlZmluZWQod2FybmluZ3MpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgQXV0b1RyYW5zbGF0ZVJlc3VsdChmYWxzZSwgJ3dhcm5pbmdzIGRldGVjdGVkLCBub3QgdHJhbnNsYXRlZCcpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHR1LnRyYW5zbGF0ZSh0cmFuc2xhdGVkTWVzc2FnZSk7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgQXV0b1RyYW5zbGF0ZVJlc3VsdCh0cnVlLCBudWxsKTsgLy8gc3VjY2Vzc1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0=","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\util.mjs","rxjs","rxjs/operators","he","@ngx-i18nsupport/ngx-i18nsupport-lib","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\autotranslate\\auto-translate-service.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\autotranslate\\auto-translate-result.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\autotranslate\\auto-translate-summary-report.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\autotranslate\\xliff-merge-auto-translate-service.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { isNullOrUndefined } from '../common/util';\r\nimport { forkJoin, of } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport * as entityDecoderLib from 'he';\r\nimport { STATE_NEW } from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport { AutoTranslateService } from './auto-translate-service';\r\nimport { AutoTranslateResult } from './auto-translate-result';\r\nimport { AutoTranslateSummaryReport } from './auto-translate-summary-report';\r\n/**\r\n * Created by martin on 07.07.2017.\r\n * Service to autotranslate Transunits via Google Translate.\r\n */\r\nexport class XliffMergeAutoTranslateService {\r\n    constructor(apikey) {\r\n        this.autoTranslateService = new AutoTranslateService(apikey);\r\n    }\r\n    /**\r\n     * Auto translate file via Google Translate.\r\n     * Will translate all new units in file.\r\n     * @param from from\r\n     * @param to to\r\n     * @param languageSpecificMessagesFile languageSpecificMessagesFile\r\n     * @return a promise with the execution result as a summary report.\r\n     */\r\n    autoTranslate(from, to, languageSpecificMessagesFile) {\r\n        return forkJoin([\r\n            this.doAutoTranslateNonICUMessages(from, to, languageSpecificMessagesFile),\r\n            ...this.doAutoTranslateICUMessages(from, to, languageSpecificMessagesFile)\r\n        ])\r\n            .pipe(map((summaries) => {\r\n            const summary = summaries[0];\r\n            for (let i = 1; i < summaries.length; i++) {\r\n                summary.merge(summaries[i]);\r\n            }\r\n            return summary;\r\n        }));\r\n    }\r\n    /**\r\n     * Collect all units that are untranslated.\r\n     * @param languageSpecificMessagesFile languageSpecificMessagesFile\r\n     * @return all untranslated units\r\n     */\r\n    allUntranslatedTUs(languageSpecificMessagesFile) {\r\n        // collect all units, that should be auto translated\r\n        const allUntranslated = [];\r\n        languageSpecificMessagesFile.forEachTransUnit((tu) => {\r\n            if (tu.targetState() === STATE_NEW) {\r\n                allUntranslated.push(tu);\r\n            }\r\n        });\r\n        return allUntranslated;\r\n    }\r\n    doAutoTranslateNonICUMessages(from, to, languageSpecificMessagesFile) {\r\n        const allUntranslated = this.allUntranslatedTUs(languageSpecificMessagesFile);\r\n        const allTranslatable = allUntranslated.filter((tu) => isNullOrUndefined(tu.sourceContentNormalized().getICUMessage()));\r\n        const allMessages = allTranslatable.map((tu) => {\r\n            return tu.sourceContentNormalized().asDisplayString();\r\n        });\r\n        return this.autoTranslateService.translateMultipleStrings(allMessages, from, to)\r\n            .pipe(\r\n        // #94 google translate might return &#.. entity refs, that must be decoded\r\n        map((translations) => translations.map(encodedTranslation => entityDecoderLib.decode(encodedTranslation))), map((translations) => {\r\n            const summary = new AutoTranslateSummaryReport(from, to);\r\n            summary.setIgnored(allUntranslated.length - allTranslatable.length);\r\n            for (let i = 0; i < translations.length; i++) {\r\n                const tu = allTranslatable[i];\r\n                const translationText = translations[i];\r\n                const result = this.autoTranslateNonICUUnit(tu, translationText);\r\n                summary.addSingleResult(tu, result);\r\n            }\r\n            return summary;\r\n        }), catchError((err) => {\r\n            const failSummary = new AutoTranslateSummaryReport(from, to);\r\n            failSummary.setError(err.message, allMessages.length);\r\n            return of(failSummary);\r\n        }));\r\n    }\r\n    doAutoTranslateICUMessages(from, to, languageSpecificMessagesFile) {\r\n        const allUntranslated = this.allUntranslatedTUs(languageSpecificMessagesFile);\r\n        const allTranslatableICU = allUntranslated.filter((tu) => !isNullOrUndefined(tu.sourceContentNormalized().getICUMessage()));\r\n        return allTranslatableICU.map((tu) => {\r\n            return this.doAutoTranslateICUMessage(from, to, tu);\r\n        });\r\n    }\r\n    /**\r\n     * Translate single ICU Messages.\r\n     * @param from from\r\n     * @param to to\r\n     * @param tu transunit to translate (must contain ICU Message)\r\n     * @return summary report\r\n     */\r\n    doAutoTranslateICUMessage(from, to, tu) {\r\n        const icuMessage = tu.sourceContentNormalized().getICUMessage();\r\n        const categories = icuMessage.getCategories();\r\n        // check for nested ICUs, we do not support that\r\n        if (categories.find((category) => !isNullOrUndefined(category.getMessageNormalized().getICUMessage()))) {\r\n            const summary = new AutoTranslateSummaryReport(from, to);\r\n            summary.setIgnored(1);\r\n            return of(summary);\r\n        }\r\n        const allMessages = categories.map((category) => category.getMessageNormalized().asDisplayString());\r\n        return this.autoTranslateService.translateMultipleStrings(allMessages, from, to)\r\n            .pipe(\r\n        // #94 google translate might return &#.. entity refs, that must be decoded\r\n        map((translations) => translations.map(encodedTranslation => entityDecoderLib.decode(encodedTranslation))), map((translations) => {\r\n            const summary = new AutoTranslateSummaryReport(from, to);\r\n            const icuTranslation = {};\r\n            for (let i = 0; i < translations.length; i++) {\r\n                icuTranslation[categories[i].getCategory()] = translations[i];\r\n            }\r\n            const result = this.autoTranslateICUUnit(tu, icuTranslation);\r\n            summary.addSingleResult(tu, result);\r\n            return summary;\r\n        }), catchError((err) => {\r\n            const failSummary = new AutoTranslateSummaryReport(from, to);\r\n            failSummary.setError(err.message, allMessages.length);\r\n            return of(failSummary);\r\n        }));\r\n    }\r\n    autoTranslateNonICUUnit(tu, translatedMessage) {\r\n        return this.autoTranslateUnit(tu, tu.sourceContentNormalized().translate(translatedMessage));\r\n    }\r\n    autoTranslateICUUnit(tu, translation) {\r\n        return this.autoTranslateUnit(tu, tu.sourceContentNormalized().translateICUMessage(translation));\r\n    }\r\n    autoTranslateUnit(tu, translatedMessage) {\r\n        const errors = translatedMessage.validate();\r\n        const warnings = translatedMessage.validateWarnings();\r\n        if (!isNullOrUndefined(errors)) {\r\n            return new AutoTranslateResult(false, 'errors detected, not translated');\r\n        }\r\n        else if (!isNullOrUndefined(warnings)) {\r\n            return new AutoTranslateResult(false, 'warnings detected, not translated');\r\n        }\r\n        else {\r\n            tu.translate(translatedMessage);\r\n            return new AutoTranslateResult(true, null); // success\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"xliff-merge-auto-translate-service.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/autotranslate/xliff-merge-auto-translate-service.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[26,0,0,25],[28,0,0,26],[34,0,0,32],[50,0,0,48],[51,0,0,49]],[[0,0,1,0],[7,0,1,7],[9,0,1,20],[17,0,1,28],[19,0,1,30],[21,0,1,32],[23,0,1,33],[29,0,1,39],[35,0,1,45],[36,0,1,46]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[12,0,2,11],[14,0,2,13],[24,0,2,23],[26,0,2,24],[32,0,2,30],[48,0,2,46],[49,0,2,47]],[[0,0,3,0],[7,0,3,7],[12,0,3,12],[28,0,3,28],[34,0,3,34],[38,0,3,38],[39,0,3,39]],[[0,0,4,0],[7,0,4,7],[9,0,6,4],[18,0,6,13],[20,0,7,1],[26,0,7,7],[64,0,7,45],[65,0,7,46]],[[0,0,8,0],[7,0,8,7],[9,0,8,8],[29,0,8,28],[31,0,8,29],[37,0,8,35],[63,0,8,61],[64,0,8,62]],[[0,0,9,0],[7,0,9,7],[9,0,9,8],[28,0,9,27],[30,0,9,28],[36,0,9,34],[61,0,9,59],[62,0,9,60]],[[0,0,10,0],[7,0,10,7],[9,0,10,8],[35,0,10,34],[37,0,10,35],[43,0,10,41],[76,0,10,74],[77,0,10,75]],[[0,0,11,0]],[],[],[[3,0,14,3]],[[0,0,16,0],[6,0,16,6],[13,0,16,13],[43,0,16,43]],[[4,0,20,4],[16,0,20,16],[22,0,20,30]],[[8,0,21,8],[12,0,21,12],[13,0,21,13],[33,0,21,33],[36,0,21,36],[40,0,21,40],[60,0,21,60],[61,0,21,61],[67,0,21,67],[68,0,21,68],[69,0,21,69]],[[4,0,22,4],[5,0,22,5]],[[4,0,24,4]],[],[],[],[],[],[],[[7,0,31,7]],[[4,0,32,11],[17,0,32,24],[18,0,32,25],[22,0,32,37],[24,0,32,39],[26,0,32,49],[28,0,32,51],[56,0,32,105]],[[8,0,34,8],[15,0,34,15],[23,0,34,23],[24,0,34,24]],[[12,0,35,12],[16,0,35,16],[17,0,35,17],[46,0,35,46],[47,0,35,47],[51,0,35,51],[53,0,35,53],[55,0,35,55],[57,0,35,57],[85,0,35,85],[86,0,35,86]],[[12,0,36,12],[15,0,36,15],[19,0,36,19],[20,0,36,20],[46,0,36,46],[47,0,36,47],[51,0,36,51],[53,0,36,53],[55,0,36,55],[57,0,36,57],[85,0,36,85],[86,0,36,86]],[[9,0,36,87],[10,0,36,88]],[[13,0,37,13],[17,0,37,17],[18,0,38,16],[21,0,38,19],[22,0,38,20],[23,0,38,21],[32,0,38,60],[34,0,38,62],[36,0,38,64]],[[12,0,39,20],[18,0,39,26],[25,0,39,33],[28,0,39,36],[37,0,39,45],[38,0,39,46],[39,0,39,47],[40,0,39,48],[41,0,39,49]],[[12,0,40,20],[17,0,40,25],[21,0,40,29],[22,0,40,30],[25,0,40,33],[26,0,40,34],[28,0,40,36],[29,0,40,37],[32,0,40,40],[41,0,40,49],[42,0,40,50],[48,0,40,56],[50,0,40,58],[51,0,40,59],[53,0,40,61],[55,0,40,63]],[[16,0,41,24],[23,0,41,31],[24,0,41,32],[29,0,41,37],[30,0,41,38],[39,0,41,47],[40,0,41,48],[41,0,41,49],[42,0,41,50],[43,0,41,51],[44,0,41,52]],[[13,0,42,21]],[[12,0,43,20],[19,0,43,27],[26,0,43,34],[27,0,43,35]],[[8,0,44,8],[9,0,44,9],[10,0,44,10],[11,0,44,11],[12,0,44,12]],[[4,0,45,4],[5,0,45,5]],[[4,0,47,4]],[],[],[],[[7,0,51,7]],[[4,0,52,12],[22,0,52,30],[23,0,52,31],[51,0,52,85]],[[8,0,53,8],[60,0,53,60]],[[8,0,54,8],[14,0,54,14],[29,0,54,29],[32,0,54,46],[34,0,54,48],[35,0,54,49]],[[8,0,55,8],[36,0,55,36],[37,0,55,37],[53,0,55,53],[54,0,55,54],[55,0,55,55],[57,0,55,57],[59,0,55,59],[61,0,55,61]],[[12,0,56,12],[16,0,56,16],[18,0,56,18],[19,0,56,19],[30,0,56,30],[32,0,56,32],[37,0,56,37],[46,0,56,46],[48,0,56,48]],[[16,0,57,16],[31,0,57,31],[32,0,57,32],[36,0,57,36],[37,0,57,37],[39,0,57,39],[40,0,57,40],[41,0,57,41]],[[13,0,58,13]],[[8,0,59,8],[9,0,59,9],[10,0,59,10],[11,0,59,11]],[[8,0,60,8],[15,0,60,15],[30,0,60,30],[31,0,60,31]],[[4,0,61,4],[5,0,61,5]],[[4,0,63,12],[33,0,63,41],[34,0,63,42],[38,0,63,54],[40,0,63,56],[42,0,63,66],[44,0,63,68],[72,0,63,122]],[[8,0,65,8],[14,0,65,14],[29,0,65,29],[32,0,65,46],[36,0,65,50],[37,0,65,51],[55,0,65,69],[56,0,65,70],[84,0,65,98],[85,0,65,99],[86,0,65,100]],[[8,0,66,8],[14,0,66,14],[29,0,66,29],[32,0,66,32],[47,0,66,47],[48,0,66,48],[54,0,66,54],[55,0,66,55],[56,0,66,56],[58,0,66,58],[60,0,66,60],[62,0,66,62],[63,0,66,63],[80,0,66,80],[81,0,66,81],[83,0,66,83],[84,0,66,84],[107,0,66,107],[109,0,66,109],[110,0,66,110],[123,0,66,123],[125,0,66,125],[126,0,66,126],[127,0,66,127],[128,0,66,128]],[[8,0,67,8],[14,0,67,14],[25,0,67,25],[28,0,67,38],[43,0,67,53],[44,0,67,54],[47,0,67,57],[48,0,67,58],[49,0,67,59],[51,0,67,61],[53,0,67,63],[55,0,67,65]],[[12,0,68,12],[19,0,68,19],[21,0,68,21],[22,0,68,22],[45,0,68,45],[47,0,68,47],[48,0,68,48],[63,0,68,63],[65,0,68,65],[66,0,68,66]],[[8,0,69,8],[9,0,69,9],[10,0,69,10],[11,0,69,11]],[[8,0,70,8],[15,0,70,15],[19,0,70,19],[20,0,70,20],[40,0,70,40],[41,0,70,41],[65,0,70,65],[66,0,70,66],[77,0,70,77],[79,0,70,79],[83,0,70,83],[85,0,70,85],[87,0,70,87],[88,0,70,88]],[[13,0,71,13],[17,0,71,17]],[[8,0,72,16],[83,0,72,91]],[[8,0,73,16],[11,0,73,19],[12,0,73,20],[13,0,73,21],[25,0,73,43],[27,0,73,45],[29,0,73,47],[30,0,73,48],[42,0,73,60],[43,0,73,61],[46,0,73,64],[47,0,73,65],[65,0,73,83],[66,0,73,84],[68,0,73,86],[69,0,73,87],[85,0,73,103],[86,0,73,104],[92,0,73,110],[93,0,73,111],[111,0,73,129],[112,0,73,130],[113,0,73,131],[114,0,73,132],[116,0,74,16],[119,0,74,19],[120,0,74,20],[121,0,74,21],[133,0,74,43],[135,0,74,45],[137,0,74,47]],[[12,0,75,16],[18,0,75,22],[25,0,75,29],[28,0,75,32],[32,0,75,36],[58,0,75,62],[59,0,75,63],[63,0,75,67],[65,0,75,69],[67,0,75,71],[68,0,75,72],[69,0,75,73]],[[12,0,76,16],[19,0,76,23],[20,0,76,24],[30,0,76,34],[31,0,76,35],[46,0,76,50],[47,0,76,51],[53,0,76,57],[56,0,76,60],[71,0,76,75],[72,0,76,76],[78,0,76,82],[79,0,76,83],[80,0,76,84]],[[12,0,77,16],[17,0,77,21],[21,0,77,25],[22,0,77,26],[25,0,77,29],[26,0,77,30],[28,0,77,32],[29,0,77,33],[32,0,77,36],[44,0,77,48],[45,0,77,49],[51,0,77,55],[53,0,77,57],[54,0,77,58],[56,0,77,60],[58,0,77,62]],[[16,0,78,20],[22,0,78,26],[24,0,78,28],[27,0,78,31],[42,0,78,46],[43,0,78,47],[44,0,78,48],[45,0,78,49],[46,0,78,50]],[[16,0,79,20],[22,0,79,26],[37,0,79,41],[40,0,79,44],[52,0,79,56],[53,0,79,57],[54,0,79,58],[55,0,79,59],[56,0,79,60]],[[16,0,80,20],[22,0,80,26],[28,0,80,32],[31,0,80,35],[35,0,80,39],[36,0,80,40],[59,0,80,63],[60,0,80,64],[62,0,80,66],[64,0,80,68],[79,0,80,83],[80,0,80,84],[81,0,80,85]],[[16,0,81,20],[23,0,81,27],[24,0,81,28],[39,0,81,43],[40,0,81,44],[42,0,81,46],[44,0,81,48],[50,0,81,54],[51,0,81,55],[52,0,81,56]],[[13,0,82,17]],[[12,0,83,16],[19,0,83,23],[26,0,83,30],[27,0,83,31]],[[8,0,84,16],[9,0,84,17],[10,0,84,18],[12,0,85,16],[22,0,85,26],[23,0,85,27],[24,0,85,28],[27,0,85,31],[29,0,85,33],[31,0,85,35]],[[12,0,86,20],[18,0,86,26],[29,0,86,37],[32,0,86,40],[36,0,86,44],[62,0,86,70],[63,0,86,71],[67,0,86,75],[69,0,86,77],[71,0,86,79],[72,0,86,80],[73,0,86,81]],[[12,0,87,20],[23,0,87,31],[24,0,87,32],[32,0,87,40],[33,0,87,41],[36,0,87,44],[37,0,87,45],[44,0,87,52],[46,0,87,54],[57,0,87,65],[58,0,87,66],[64,0,87,72],[65,0,87,73],[66,0,87,74]],[[12,0,88,20],[19,0,88,27],[21,0,88,29],[22,0,88,30],[33,0,88,41],[34,0,88,42],[35,0,88,43]],[[8,0,89,12],[9,0,89,13],[10,0,89,14],[11,0,89,15],[12,0,89,16]],[[4,0,90,4],[5,0,90,5]],[[4,0,92,12],[30,0,92,38],[31,0,92,39],[35,0,92,51],[37,0,92,53],[39,0,92,63],[41,0,92,65],[69,0,92,119]],[[8,0,94,8],[14,0,94,14],[29,0,94,29],[32,0,94,46],[36,0,94,50],[37,0,94,51],[55,0,94,69],[56,0,94,70],[84,0,94,98],[85,0,94,99],[86,0,94,100]],[[8,0,95,8],[14,0,95,14],[32,0,95,32],[35,0,95,35],[50,0,95,50],[51,0,95,51],[57,0,95,57],[58,0,95,58],[59,0,95,59],[61,0,95,61],[63,0,95,63],[65,0,95,65],[66,0,95,66],[67,0,95,67],[84,0,95,84],[85,0,95,85],[87,0,95,87],[88,0,95,88],[111,0,95,111],[113,0,95,113],[114,0,95,114],[127,0,95,127],[129,0,95,129],[130,0,95,130],[131,0,95,131],[132,0,95,132]],[[8,0,96,8],[15,0,96,15],[33,0,96,33],[34,0,96,34],[37,0,96,37],[38,0,96,38],[39,0,96,39],[41,0,96,41],[43,0,96,43],[45,0,96,45]],[[12,0,97,12],[19,0,97,19],[23,0,97,23],[24,0,97,24],[49,0,97,49],[50,0,97,50],[54,0,97,54],[56,0,97,56],[58,0,97,58],[60,0,97,60],[62,0,97,62],[63,0,97,63],[64,0,97,64]],[[8,0,98,8],[9,0,98,9],[10,0,98,10],[11,0,98,11]],[[4,0,99,4],[5,0,99,5]],[[4,0,101,4]],[],[],[],[],[],[[7,0,107,7]],[[4,0,108,12],[29,0,108,37],[30,0,108,38],[34,0,108,50],[36,0,108,52],[38,0,108,62],[40,0,108,64],[42,0,108,78]],[[8,0,109,8],[14,0,109,14],[24,0,109,24],[27,0,109,40],[29,0,109,42],[30,0,109,43],[53,0,109,66],[55,0,109,68],[56,0,109,69],[69,0,109,82],[71,0,109,84],[72,0,109,85]],[[8,0,110,8],[14,0,110,14],[24,0,110,24],[27,0,110,27],[37,0,110,37],[38,0,110,38],[51,0,110,51],[53,0,110,53],[54,0,110,54]],[[8,0,111,8],[56,0,111,56]],[[8,0,112,8],[12,0,112,12],[22,0,112,22],[23,0,112,23],[27,0,112,27],[28,0,112,28],[29,0,112,29],[37,0,112,37],[39,0,112,39],[41,0,112,41],[42,0,112,42],[43,0,112,43],[60,0,112,60],[61,0,112,61],[69,0,112,69],[70,0,112,70],[90,0,112,90],[92,0,112,92],[93,0,112,93],[106,0,112,106],[108,0,112,108],[109,0,112,109],[110,0,112,110],[112,0,112,112]],[[12,0,113,12],[18,0,113,18],[25,0,113,25],[28,0,113,28],[32,0,113,32],[58,0,113,58],[59,0,113,59],[63,0,113,63],[65,0,113,65],[67,0,113,67],[68,0,113,68],[69,0,113,69]],[[12,0,114,12],[19,0,114,19],[20,0,114,20],[30,0,114,30],[31,0,114,31],[32,0,114,32],[33,0,114,33],[34,0,114,34]],[[12,0,115,12],[19,0,115,19],[21,0,115,21],[22,0,115,22],[29,0,115,29],[30,0,115,30],[31,0,115,31]],[[9,0,116,9]],[[8,0,117,8],[14,0,117,14],[25,0,117,25],[28,0,117,38],[38,0,117,48],[39,0,117,49],[42,0,117,52],[43,0,117,53],[44,0,117,54],[52,0,117,62],[54,0,117,64],[56,0,117,66],[57,0,117,67],[65,0,117,75],[66,0,117,76],[86,0,117,96],[88,0,117,98],[89,0,117,99],[104,0,117,114],[106,0,117,116],[107,0,117,117],[108,0,117,118]],[[8,0,118,8],[15,0,118,15],[19,0,118,19],[20,0,118,20],[40,0,118,40],[41,0,118,41],[65,0,118,65],[66,0,118,66],[77,0,118,77],[79,0,118,79],[83,0,118,83],[85,0,118,85],[87,0,118,87],[88,0,118,88]],[[13,0,119,13],[17,0,119,17]],[[8,0,120,16],[83,0,120,91]],[[8,0,121,16],[11,0,121,19],[12,0,121,20],[13,0,121,21],[25,0,121,43],[27,0,121,45],[29,0,121,47],[30,0,121,48],[42,0,121,60],[43,0,121,61],[46,0,121,64],[47,0,121,65],[65,0,121,83],[66,0,121,84],[68,0,121,86],[69,0,121,87],[85,0,121,103],[86,0,121,104],[92,0,121,110],[93,0,121,111],[111,0,121,129],[112,0,121,130],[113,0,121,131],[114,0,121,132],[116,0,122,16],[119,0,122,19],[120,0,122,20],[121,0,122,21],[133,0,122,43],[135,0,122,45],[137,0,122,47]],[[12,0,123,20],[18,0,123,26],[25,0,123,33],[28,0,123,36],[32,0,123,40],[58,0,123,66],[59,0,123,67],[63,0,123,71],[65,0,123,73],[67,0,123,75],[68,0,123,76],[69,0,123,77]],[[12,0,124,20],[18,0,124,26],[32,0,124,40],[35,0,124,67],[37,0,124,69],[38,0,124,70]],[[12,0,125,20],[17,0,125,25],[21,0,125,29],[22,0,125,30],[25,0,125,33],[26,0,125,34],[28,0,125,36],[29,0,125,37],[32,0,125,40],[44,0,125,52],[45,0,125,53],[51,0,125,59],[53,0,125,61],[54,0,125,62],[56,0,125,64],[58,0,125,66]],[[16,0,126,24],[30,0,126,38],[31,0,126,39],[41,0,126,49],[42,0,126,50],[43,0,126,51],[44,0,126,52],[45,0,126,53],[56,0,126,64],[58,0,126,66],[59,0,126,67],[62,0,126,70],[74,0,126,82],[75,0,126,83],[76,0,126,84],[77,0,126,85],[78,0,126,86]],[[13,0,127,21]],[[12,0,128,20],[18,0,128,26],[24,0,128,32],[27,0,128,35],[31,0,128,39],[32,0,128,40],[52,0,128,60],[53,0,128,61],[55,0,128,63],[57,0,128,65],[71,0,128,79],[72,0,128,80],[73,0,128,81]],[[12,0,129,20],[19,0,129,27],[20,0,129,28],[35,0,129,43],[36,0,129,44],[38,0,129,46],[40,0,129,48],[46,0,129,54],[47,0,129,55],[48,0,129,56]],[[12,0,130,20],[19,0,130,27],[26,0,130,34],[27,0,130,35]],[[8,0,131,16],[9,0,131,17],[10,0,131,18],[12,0,131,20],[22,0,131,30],[23,0,131,31],[24,0,131,32],[27,0,131,35],[29,0,131,37],[31,0,131,39]],[[12,0,132,20],[18,0,132,26],[29,0,132,37],[32,0,132,40],[36,0,132,44],[62,0,132,70],[63,0,132,71],[67,0,132,75],[69,0,132,77],[71,0,132,79],[72,0,132,80],[73,0,132,81]],[[12,0,133,20],[23,0,133,31],[24,0,133,32],[32,0,133,40],[33,0,133,41],[36,0,133,44],[37,0,133,45],[44,0,133,52],[46,0,133,54],[57,0,133,65],[58,0,133,66],[64,0,133,72],[65,0,133,73],[66,0,133,74]],[[12,0,134,20],[19,0,134,27],[21,0,134,29],[22,0,134,30],[33,0,134,41],[34,0,134,42],[35,0,134,43]],[[8,0,135,12],[9,0,135,13],[10,0,135,14],[11,0,135,15],[12,0,135,16]],[[4,0,136,4],[5,0,136,5]],[[4,0,138,12],[27,0,138,35],[28,0,138,36],[30,0,138,50],[32,0,138,52],[49,0,138,77]],[[8,0,139,8],[15,0,139,15],[19,0,139,19],[20,0,139,20],[37,0,139,37],[38,0,139,38],[40,0,139,40],[42,0,139,42],[44,0,139,44],[45,0,139,45],[68,0,139,68],[70,0,139,70],[71,0,139,71],[80,0,139,80],[81,0,139,81],[98,0,139,98],[99,0,139,99],[100,0,139,100],[101,0,139,101]],[[4,0,140,4],[5,0,140,5]],[[4,0,142,12],[24,0,142,32],[25,0,142,33],[27,0,142,47],[29,0,142,49],[40,0,142,84]],[[8,0,143,8],[15,0,143,15],[19,0,143,19],[20,0,143,20],[37,0,143,37],[38,0,143,38],[40,0,143,40],[42,0,143,42],[44,0,143,44],[45,0,143,45],[68,0,143,68],[70,0,143,70],[71,0,143,71],[90,0,143,90],[91,0,143,91],[102,0,143,102],[103,0,143,103],[104,0,143,104],[105,0,143,105]],[[4,0,144,4],[5,0,144,5]],[[4,0,146,12],[21,0,146,29],[22,0,146,30],[24,0,146,44],[26,0,146,46],[43,0,146,83]],[[8,0,147,8],[14,0,147,14],[20,0,147,20],[23,0,147,23],[40,0,147,40],[41,0,147,41],[49,0,147,49],[51,0,147,51],[52,0,147,52]],[[8,0,148,8],[14,0,148,14],[22,0,148,22],[25,0,148,25],[42,0,148,42],[43,0,148,43],[59,0,148,59],[61,0,148,61],[62,0,148,62]],[[8,0,149,8],[12,0,149,12],[13,0,149,13],[30,0,149,30],[31,0,149,31],[37,0,149,37],[38,0,149,38],[40,0,149,40]],[[12,0,150,12],[19,0,150,19],[23,0,150,23],[42,0,150,42],[43,0,150,43],[48,0,150,48],[50,0,150,50],[83,0,150,83],[84,0,150,84],[85,0,150,85]],[[9,0,151,9]],[[13,0,151,15],[17,0,151,19],[18,0,151,20],[35,0,151,37],[36,0,151,38],[44,0,151,46],[45,0,151,47],[47,0,151,49]],[[12,0,152,12],[19,0,152,19],[23,0,152,23],[42,0,152,42],[43,0,152,43],[48,0,152,48],[50,0,152,50],[85,0,152,85],[86,0,152,86],[87,0,152,87]],[[9,0,153,9]],[[13,0,153,15]],[[12,0,154,12],[14,0,154,14],[15,0,154,15],[24,0,154,24],[25,0,154,25],[42,0,154,42],[43,0,154,43],[44,0,154,44]],[[12,0,155,12],[19,0,155,19],[23,0,155,23],[42,0,155,42],[43,0,155,43],[47,0,155,47],[49,0,155,49],[53,0,155,53],[54,0,155,54],[55,0,155,55],[56,0,155,56],[66,0,155,66]],[[9,0,156,9]],[[4,0,157,4],[5,0,157,5]],[[1,0,158,1]]],"sourcesContent":["import {isNullOrUndefined} from '../common/util';\r\nimport {Observable, forkJoin, of} from 'rxjs';\r\nimport {map, catchError} from 'rxjs/operators';\r\nimport * as entityDecoderLib from 'he';\r\nimport {\r\n    IICUMessage, IICUMessageTranslation, INormalizedMessage, ITranslationMessagesFile, ITransUnit,\r\n    STATE_NEW\r\n} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {AutoTranslateService} from './auto-translate-service';\r\nimport {AutoTranslateResult} from './auto-translate-result';\r\nimport {AutoTranslateSummaryReport} from './auto-translate-summary-report';\r\n/**\r\n * Created by martin on 07.07.2017.\r\n * Service to autotranslate Transunits via Google Translate.\r\n */\r\n\r\nexport class XliffMergeAutoTranslateService {\r\n\r\n    private autoTranslateService: AutoTranslateService;\r\n\r\n    constructor(apikey: string) {\r\n        this.autoTranslateService = new AutoTranslateService(apikey);\r\n    }\r\n\r\n    /**\r\n     * Auto translate file via Google Translate.\r\n     * Will translate all new units in file.\r\n     * @param from from\r\n     * @param to to\r\n     * @param languageSpecificMessagesFile languageSpecificMessagesFile\r\n     * @return a promise with the execution result as a summary report.\r\n     */\r\n    public autoTranslate(from: string, to: string, languageSpecificMessagesFile: ITranslationMessagesFile)\r\n        : Observable<AutoTranslateSummaryReport> {\r\n        return forkJoin([\r\n            this.doAutoTranslateNonICUMessages(from, to, languageSpecificMessagesFile),\r\n            ...this.doAutoTranslateICUMessages(from, to, languageSpecificMessagesFile)])\r\n            .pipe(\r\n                map((summaries: AutoTranslateSummaryReport[]) => {\r\n                    const summary = summaries[0];\r\n                    for (let i = 1; i < summaries.length; i++) {\r\n                        summary.merge(summaries[i]);\r\n                    }\r\n                    return summary;\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Collect all units that are untranslated.\r\n     * @param languageSpecificMessagesFile languageSpecificMessagesFile\r\n     * @return all untranslated units\r\n     */\r\n    private allUntranslatedTUs(languageSpecificMessagesFile: ITranslationMessagesFile): ITransUnit[] {\r\n        // collect all units, that should be auto translated\r\n        const allUntranslated: ITransUnit[] = [];\r\n        languageSpecificMessagesFile.forEachTransUnit((tu) => {\r\n            if (tu.targetState() === STATE_NEW) {\r\n                allUntranslated.push(tu);\r\n            }\r\n        });\r\n        return allUntranslated;\r\n    }\r\n\r\n    private doAutoTranslateNonICUMessages(from: string, to: string, languageSpecificMessagesFile: ITranslationMessagesFile)\r\n        : Observable<AutoTranslateSummaryReport> {\r\n        const allUntranslated: ITransUnit[] = this.allUntranslatedTUs(languageSpecificMessagesFile);\r\n        const allTranslatable = allUntranslated.filter((tu) => isNullOrUndefined(tu.sourceContentNormalized().getICUMessage()));\r\n        const allMessages: string[] = allTranslatable.map((tu) => {\r\n            return tu.sourceContentNormalized().asDisplayString();\r\n        });\r\n        return this.autoTranslateService.translateMultipleStrings(allMessages, from, to)\r\n            .pipe(\r\n                // #94 google translate might return &#.. entity refs, that must be decoded\r\n                map((translations: string[]) => translations.map(encodedTranslation => entityDecoderLib.decode(encodedTranslation))),\r\n                map((translations: string[]) => {\r\n                const summary = new AutoTranslateSummaryReport(from, to);\r\n                summary.setIgnored(allUntranslated.length - allTranslatable.length);\r\n                for (let i = 0; i < translations.length; i++) {\r\n                    const tu = allTranslatable[i];\r\n                    const translationText = translations[i];\r\n                    const result = this.autoTranslateNonICUUnit(tu, translationText);\r\n                    summary.addSingleResult(tu, result);\r\n                }\r\n                return summary;\r\n                }),\r\n                catchError((err) => {\r\n                    const failSummary = new AutoTranslateSummaryReport(from, to);\r\n                    failSummary.setError(err.message, allMessages.length);\r\n                    return of(failSummary);\r\n            }));\r\n    }\r\n\r\n    private doAutoTranslateICUMessages(from: string, to: string, languageSpecificMessagesFile: ITranslationMessagesFile)\r\n        : Observable<AutoTranslateSummaryReport>[] {\r\n        const allUntranslated: ITransUnit[] = this.allUntranslatedTUs(languageSpecificMessagesFile);\r\n        const allTranslatableICU = allUntranslated.filter((tu) => !isNullOrUndefined(tu.sourceContentNormalized().getICUMessage()));\r\n        return allTranslatableICU.map((tu) => {\r\n            return this.doAutoTranslateICUMessage(from, to, tu);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Translate single ICU Messages.\r\n     * @param from from\r\n     * @param to to\r\n     * @param tu transunit to translate (must contain ICU Message)\r\n     * @return summary report\r\n     */\r\n    private doAutoTranslateICUMessage(from: string, to: string, tu: ITransUnit): Observable<AutoTranslateSummaryReport> {\r\n        const icuMessage: IICUMessage = tu.sourceContentNormalized().getICUMessage();\r\n        const categories = icuMessage.getCategories();\r\n        // check for nested ICUs, we do not support that\r\n        if (categories.find((category) => !isNullOrUndefined(category.getMessageNormalized().getICUMessage()))) {\r\n            const summary = new AutoTranslateSummaryReport(from, to);\r\n            summary.setIgnored(1);\r\n            return of(summary);\r\n        }\r\n        const allMessages: string[] = categories.map((category) => category.getMessageNormalized().asDisplayString());\r\n        return this.autoTranslateService.translateMultipleStrings(allMessages, from, to)\r\n            .pipe(\r\n                // #94 google translate might return &#.. entity refs, that must be decoded\r\n                map((translations: string[]) => translations.map(encodedTranslation => entityDecoderLib.decode(encodedTranslation))),\r\n                map((translations: string[]) => {\r\n                    const summary = new AutoTranslateSummaryReport(from, to);\r\n                    const icuTranslation: IICUMessageTranslation = {};\r\n                    for (let i = 0; i < translations.length; i++) {\r\n                        icuTranslation[categories[i].getCategory()] = translations[i];\r\n                    }\r\n                    const result = this.autoTranslateICUUnit(tu, icuTranslation);\r\n                    summary.addSingleResult(tu, result);\r\n                    return summary;\r\n                }), catchError((err) => {\r\n                    const failSummary = new AutoTranslateSummaryReport(from, to);\r\n                    failSummary.setError(err.message, allMessages.length);\r\n                    return of(failSummary);\r\n            }));\r\n    }\r\n\r\n    private autoTranslateNonICUUnit(tu: ITransUnit, translatedMessage: string): AutoTranslateResult {\r\n        return this.autoTranslateUnit(tu, tu.sourceContentNormalized().translate(translatedMessage));\r\n    }\r\n\r\n    private autoTranslateICUUnit(tu: ITransUnit, translation: IICUMessageTranslation): AutoTranslateResult {\r\n        return this.autoTranslateUnit(tu, tu.sourceContentNormalized().translateICUMessage(translation));\r\n    }\r\n\r\n    private autoTranslateUnit(tu: ITransUnit, translatedMessage: INormalizedMessage): AutoTranslateResult {\r\n        const errors = translatedMessage.validate();\r\n        const warnings = translatedMessage.validateWarnings();\r\n        if (!isNullOrUndefined(errors)) {\r\n            return new AutoTranslateResult(false, 'errors detected, not translated');\r\n        } else if (!isNullOrUndefined(warnings)) {\r\n            return new AutoTranslateResult(false, 'warnings detected, not translated');\r\n        } else {\r\n            tu.translate(translatedMessage);\r\n            return new AutoTranslateResult(true, null); // success\r\n        }\r\n    }\r\n}\r\n"]},"resolvedIds":{"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"he":{"external":true,"id":"he","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"@ngx-i18nsupport/ngx-i18nsupport-lib":{"external":true,"id":"@ngx-i18nsupport/ngx-i18nsupport-lib","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../common/util":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\util.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./auto-translate-summary-report":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\autotranslate\\auto-translate-summary-report.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./auto-translate-result":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\autotranslate\\auto-translate-result.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./auto-translate-service":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\autotranslate\\auto-translate-service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":84363,"body":[{"type":"ImportDeclaration","start":0,"end":57,"specifiers":[{"type":"ImportSpecifier","start":9,"end":22,"imported":{"type":"Identifier","start":9,"end":22,"name":"CommandOutput"},"local":{"type":"Identifier","start":9,"end":22,"name":"CommandOutput"}}],"source":{"type":"Literal","start":30,"end":56,"value":"../common/command-output","raw":"'../common/command-output'"}},{"type":"ImportDeclaration","start":59,"end":123,"specifiers":[{"type":"ImportSpecifier","start":68,"end":88,"imported":{"type":"Identifier","start":68,"end":88,"name":"XliffMergeParameters"},"local":{"type":"Identifier","start":68,"end":88,"name":"XliffMergeParameters"}}],"source":{"type":"Literal","start":96,"end":122,"value":"./xliff-merge-parameters","raw":"'./xliff-merge-parameters'"}},{"type":"ImportDeclaration","start":125,"end":179,"specifiers":[{"type":"ImportSpecifier","start":134,"end":149,"imported":{"type":"Identifier","start":134,"end":149,"name":"XliffMergeError"},"local":{"type":"Identifier","start":134,"end":149,"name":"XliffMergeError"}}],"source":{"type":"Literal","start":157,"end":178,"value":"./xliff-merge-error","raw":"'./xliff-merge-error'"}},{"type":"ImportDeclaration","start":181,"end":228,"specifiers":[{"type":"ImportSpecifier","start":190,"end":198,"imported":{"type":"Identifier","start":190,"end":198,"name":"FileUtil"},"local":{"type":"Identifier","start":190,"end":198,"name":"FileUtil"}}],"source":{"type":"Literal","start":206,"end":227,"value":"../common/file-util","raw":"'../common/file-util'"}},{"type":"ImportDeclaration","start":230,"end":266,"specifiers":[{"type":"ImportSpecifier","start":239,"end":246,"imported":{"type":"Identifier","start":239,"end":246,"name":"VERSION"},"local":{"type":"Identifier","start":239,"end":246,"name":"VERSION"}}],"source":{"type":"Literal","start":254,"end":265,"value":"./version","raw":"'./version'"}},{"type":"ImportDeclaration","start":268,"end":298,"specifiers":[{"type":"ImportSpecifier","start":277,"end":283,"imported":{"type":"Identifier","start":277,"end":283,"name":"format"},"local":{"type":"Identifier","start":277,"end":283,"name":"format"}}],"source":{"type":"Literal","start":291,"end":297,"value":"util","raw":"'util'"}},{"type":"ImportDeclaration","start":300,"end":351,"specifiers":[{"type":"ImportSpecifier","start":309,"end":326,"imported":{"type":"Identifier","start":309,"end":326,"name":"isNullOrUndefined"},"local":{"type":"Identifier","start":309,"end":326,"name":"isNullOrUndefined"}}],"source":{"type":"Literal","start":334,"end":350,"value":"../common/util","raw":"'../common/util'"}},{"type":"ImportDeclaration","start":353,"end":492,"specifiers":[{"type":"ImportSpecifier","start":362,"end":372,"imported":{"type":"Identifier","start":362,"end":372,"name":"FORMAT_XMB"},"local":{"type":"Identifier","start":362,"end":372,"name":"FORMAT_XMB"}},{"type":"ImportSpecifier","start":374,"end":384,"imported":{"type":"Identifier","start":374,"end":384,"name":"FORMAT_XTB"},"local":{"type":"Identifier","start":374,"end":384,"name":"FORMAT_XTB"}},{"type":"ImportSpecifier","start":386,"end":414,"imported":{"type":"Identifier","start":386,"end":414,"name":"NORMALIZATION_FORMAT_DEFAULT"},"local":{"type":"Identifier","start":386,"end":414,"name":"NORMALIZATION_FORMAT_DEFAULT"}},{"type":"ImportSpecifier","start":416,"end":427,"imported":{"type":"Identifier","start":416,"end":427,"name":"STATE_FINAL"},"local":{"type":"Identifier","start":416,"end":427,"name":"STATE_FINAL"}},{"type":"ImportSpecifier","start":429,"end":445,"imported":{"type":"Identifier","start":429,"end":445,"name":"STATE_TRANSLATED"},"local":{"type":"Identifier","start":429,"end":445,"name":"STATE_TRANSLATED"}}],"source":{"type":"Literal","start":453,"end":491,"value":"@ngx-i18nsupport/ngx-i18nsupport-lib","raw":"'@ngx-i18nsupport/ngx-i18nsupport-lib'"}},{"type":"ImportDeclaration","start":494,"end":560,"specifiers":[{"type":"ImportSpecifier","start":503,"end":524,"imported":{"type":"Identifier","start":503,"end":524,"name":"NgxTranslateExtractor"},"local":{"type":"Identifier","start":503,"end":524,"name":"NgxTranslateExtractor"}}],"source":{"type":"Literal","start":532,"end":559,"value":"./ngx-translate-extractor","raw":"'./ngx-translate-extractor'"}},{"type":"ImportDeclaration","start":562,"end":645,"specifiers":[{"type":"ImportSpecifier","start":571,"end":600,"imported":{"type":"Identifier","start":571,"end":600,"name":"TranslationMessagesFileReader"},"local":{"type":"Identifier","start":571,"end":600,"name":"TranslationMessagesFileReader"}}],"source":{"type":"Literal","start":608,"end":644,"value":"./translation-messages-file-reader","raw":"'./translation-messages-file-reader'"}},{"type":"ImportDeclaration","start":647,"end":683,"specifiers":[{"type":"ImportSpecifier","start":656,"end":658,"imported":{"type":"Identifier","start":656,"end":658,"name":"of"},"local":{"type":"Identifier","start":656,"end":658,"name":"of"}},{"type":"ImportSpecifier","start":660,"end":668,"imported":{"type":"Identifier","start":660,"end":668,"name":"forkJoin"},"local":{"type":"Identifier","start":660,"end":668,"name":"forkJoin"}}],"source":{"type":"Literal","start":676,"end":682,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":685,"end":734,"specifiers":[{"type":"ImportSpecifier","start":694,"end":697,"imported":{"type":"Identifier","start":694,"end":697,"name":"map"},"local":{"type":"Identifier","start":694,"end":697,"name":"map"}},{"type":"ImportSpecifier","start":699,"end":709,"imported":{"type":"Identifier","start":699,"end":709,"name":"catchError"},"local":{"type":"Identifier","start":699,"end":709,"name":"catchError"}}],"source":{"type":"Literal","start":717,"end":733,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"ImportDeclaration","start":736,"end":837,"specifiers":[{"type":"ImportSpecifier","start":745,"end":775,"imported":{"type":"Identifier","start":745,"end":775,"name":"XliffMergeAutoTranslateService"},"local":{"type":"Identifier","start":745,"end":775,"name":"XliffMergeAutoTranslateService"}}],"source":{"type":"Literal","start":783,"end":836,"value":"../autotranslate/xliff-merge-auto-translate-service","raw":"'../autotranslate/xliff-merge-auto-translate-service'"}},{"type":"ImportDeclaration","start":839,"end":931,"specifiers":[{"type":"ImportSpecifier","start":848,"end":874,"imported":{"type":"Identifier","start":848,"end":874,"name":"AutoTranslateSummaryReport"},"local":{"type":"Identifier","start":848,"end":874,"name":"AutoTranslateSummaryReport"}}],"source":{"type":"Literal","start":882,"end":930,"value":"../autotranslate/auto-translate-summary-report","raw":"'../autotranslate/auto-translate-summary-report'"}},{"type":"ExportNamedDeclaration","start":1092,"end":24435,"declaration":{"type":"ClassDeclaration","start":1099,"end":24435,"id":{"type":"Identifier","start":1105,"end":1115,"name":"XliffMerge"},"superClass":null,"body":{"type":"ClassBody","start":1116,"end":24435,"body":[{"type":"MethodDefinition","start":1123,"end":1278,"static":false,"computed":false,"key":{"type":"Identifier","start":1123,"end":1134,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":1134,"end":1278,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1135,"end":1148,"name":"commandOutput"},{"type":"Identifier","start":1150,"end":1157,"name":"options"}],"body":{"type":"BlockStatement","start":1159,"end":1278,"body":[{"type":"ExpressionStatement","start":1170,"end":1205,"expression":{"type":"AssignmentExpression","start":1170,"end":1204,"operator":"=","left":{"type":"MemberExpression","start":1170,"end":1188,"object":{"type":"ThisExpression","start":1170,"end":1174},"property":{"type":"Identifier","start":1175,"end":1188,"name":"commandOutput"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1191,"end":1204,"name":"commandOutput"}}},{"type":"ExpressionStatement","start":1215,"end":1238,"expression":{"type":"AssignmentExpression","start":1215,"end":1237,"operator":"=","left":{"type":"MemberExpression","start":1215,"end":1227,"object":{"type":"ThisExpression","start":1215,"end":1219},"property":{"type":"Identifier","start":1220,"end":1227,"name":"options"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1230,"end":1237,"name":"options"}}},{"type":"ExpressionStatement","start":1248,"end":1271,"expression":{"type":"AssignmentExpression","start":1248,"end":1270,"operator":"=","left":{"type":"MemberExpression","start":1248,"end":1263,"object":{"type":"ThisExpression","start":1248,"end":1252},"property":{"type":"Identifier","start":1253,"end":1263,"name":"parameters"},"computed":false,"optional":false},"right":{"type":"Literal","start":1266,"end":1270,"value":null,"raw":"null"}}}]}}},{"type":"MethodDefinition","start":1284,"end":1544,"static":true,"computed":false,"key":{"type":"Identifier","start":1291,"end":1295,"name":"main"},"kind":"method","value":{"type":"FunctionExpression","start":1295,"end":1544,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1296,"end":1300,"name":"argv"}],"body":{"type":"BlockStatement","start":1302,"end":1544,"body":[{"type":"VariableDeclaration","start":1313,"end":1356,"declarations":[{"type":"VariableDeclarator","start":1319,"end":1355,"id":{"type":"Identifier","start":1319,"end":1326,"name":"options"},"init":{"type":"CallExpression","start":1329,"end":1355,"callee":{"type":"MemberExpression","start":1329,"end":1349,"object":{"type":"Identifier","start":1329,"end":1339,"name":"XliffMerge"},"property":{"type":"Identifier","start":1340,"end":1349,"name":"parseArgs"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1350,"end":1354,"name":"argv"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1366,"end":1537,"test":{"type":"Identifier","start":1370,"end":1377,"name":"options"},"consequent":{"type":"BlockStatement","start":1379,"end":1537,"body":[{"type":"ExpressionStatement","start":1394,"end":1526,"expression":{"type":"CallExpression","start":1394,"end":1525,"callee":{"type":"MemberExpression","start":1394,"end":1456,"object":{"type":"NewExpression","start":1394,"end":1452,"callee":{"type":"Identifier","start":1398,"end":1408,"name":"XliffMerge"},"arguments":[{"type":"NewExpression","start":1409,"end":1442,"callee":{"type":"Identifier","start":1413,"end":1426,"name":"CommandOutput"},"arguments":[{"type":"MemberExpression","start":1427,"end":1441,"object":{"type":"Identifier","start":1427,"end":1434,"name":"process"},"property":{"type":"Identifier","start":1435,"end":1441,"name":"stdout"},"computed":false,"optional":false}]},{"type":"Identifier","start":1444,"end":1451,"name":"options"}]},"property":{"type":"Identifier","start":1453,"end":1456,"name":"run"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":1457,"end":1524,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1458,"end":1464,"name":"result"}],"body":{"type":"BlockStatement","start":1469,"end":1524,"body":[{"type":"ExpressionStatement","start":1488,"end":1509,"expression":{"type":"CallExpression","start":1488,"end":1508,"callee":{"type":"MemberExpression","start":1488,"end":1500,"object":{"type":"Identifier","start":1488,"end":1495,"name":"process"},"property":{"type":"Identifier","start":1496,"end":1500,"name":"exit"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1501,"end":1507,"name":"result"}],"optional":false}}]}}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":1550,"end":2889,"static":true,"computed":false,"key":{"type":"Identifier","start":1557,"end":1566,"name":"parseArgs"},"kind":"method","value":{"type":"FunctionExpression","start":1566,"end":2889,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1567,"end":1571,"name":"argv"}],"body":{"type":"BlockStatement","start":1573,"end":2889,"body":[{"type":"VariableDeclaration","start":1584,"end":1640,"declarations":[{"type":"VariableDeclarator","start":1590,"end":1639,"id":{"type":"Identifier","start":1590,"end":1597,"name":"options"},"init":{"type":"ObjectExpression","start":1600,"end":1639,"properties":[{"type":"Property","start":1615,"end":1628,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1615,"end":1624,"name":"languages"},"value":{"type":"ArrayExpression","start":1626,"end":1628,"elements":[]},"kind":"init"}]}}],"kind":"const"},{"type":"ForStatement","start":1650,"end":2857,"init":{"type":"VariableDeclaration","start":1655,"end":1664,"declarations":[{"type":"VariableDeclarator","start":1659,"end":1664,"id":{"type":"Identifier","start":1659,"end":1660,"name":"i"},"init":{"type":"Literal","start":1663,"end":1664,"value":1,"raw":"1"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":1666,"end":1681,"left":{"type":"Identifier","start":1666,"end":1667,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":1670,"end":1681,"object":{"type":"Identifier","start":1670,"end":1674,"name":"argv"},"property":{"type":"Identifier","start":1675,"end":1681,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":1683,"end":1686,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":1683,"end":1684,"name":"i"}},"body":{"type":"BlockStatement","start":1688,"end":2857,"body":[{"type":"VariableDeclaration","start":1703,"end":1723,"declarations":[{"type":"VariableDeclarator","start":1709,"end":1722,"id":{"type":"Identifier","start":1709,"end":1712,"name":"arg"},"init":{"type":"MemberExpression","start":1715,"end":1722,"object":{"type":"Identifier","start":1715,"end":1719,"name":"argv"},"property":{"type":"Identifier","start":1720,"end":1721,"name":"i"},"computed":true,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1737,"end":2846,"test":{"type":"LogicalExpression","start":1741,"end":1782,"left":{"type":"BinaryExpression","start":1741,"end":1760,"left":{"type":"Identifier","start":1741,"end":1744,"name":"arg"},"operator":"===","right":{"type":"Literal","start":1749,"end":1760,"value":"--version","raw":"'--version'"}},"operator":"||","right":{"type":"BinaryExpression","start":1764,"end":1782,"left":{"type":"Identifier","start":1764,"end":1767,"name":"arg"},"operator":"===","right":{"type":"Literal","start":1772,"end":1782,"value":"-version","raw":"'-version'"}}},"consequent":{"type":"BlockStatement","start":1784,"end":1855,"body":[{"type":"ExpressionStatement","start":1803,"end":1840,"expression":{"type":"CallExpression","start":1803,"end":1839,"callee":{"type":"MemberExpression","start":1803,"end":1814,"object":{"type":"Identifier","start":1803,"end":1810,"name":"console"},"property":{"type":"Identifier","start":1811,"end":1814,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":1815,"end":1838,"left":{"type":"Literal","start":1815,"end":1828,"value":"xliffmerge ","raw":"'xliffmerge '"},"operator":"+","right":{"type":"Identifier","start":1831,"end":1838,"name":"VERSION"}}],"optional":false}}]},"alternate":{"type":"IfStatement","start":1874,"end":2846,"test":{"type":"LogicalExpression","start":1878,"end":1913,"left":{"type":"BinaryExpression","start":1878,"end":1897,"left":{"type":"Identifier","start":1878,"end":1881,"name":"arg"},"operator":"===","right":{"type":"Literal","start":1886,"end":1897,"value":"--verbose","raw":"'--verbose'"}},"operator":"||","right":{"type":"BinaryExpression","start":1901,"end":1913,"left":{"type":"Identifier","start":1901,"end":1904,"name":"arg"},"operator":"===","right":{"type":"Literal","start":1909,"end":1913,"value":"-v","raw":"'-v'"}}},"consequent":{"type":"BlockStatement","start":1915,"end":1972,"body":[{"type":"ExpressionStatement","start":1934,"end":1957,"expression":{"type":"AssignmentExpression","start":1934,"end":1956,"operator":"=","left":{"type":"MemberExpression","start":1934,"end":1949,"object":{"type":"Identifier","start":1934,"end":1941,"name":"options"},"property":{"type":"Identifier","start":1942,"end":1949,"name":"verbose"},"computed":false,"optional":false},"right":{"type":"Literal","start":1952,"end":1956,"value":true,"raw":"true"}}}]},"alternate":{"type":"IfStatement","start":1991,"end":2846,"test":{"type":"LogicalExpression","start":1995,"end":2030,"left":{"type":"BinaryExpression","start":1995,"end":2014,"left":{"type":"Identifier","start":1995,"end":1998,"name":"arg"},"operator":"===","right":{"type":"Literal","start":2003,"end":2014,"value":"--profile","raw":"'--profile'"}},"operator":"||","right":{"type":"BinaryExpression","start":2018,"end":2030,"left":{"type":"Identifier","start":2018,"end":2021,"name":"arg"},"operator":"===","right":{"type":"Literal","start":2026,"end":2030,"value":"-p","raw":"'-p'"}}},"consequent":{"type":"BlockStatement","start":2032,"end":2361,"body":[{"type":"ExpressionStatement","start":2051,"end":2055,"expression":{"type":"UpdateExpression","start":2051,"end":2054,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":2051,"end":2052,"name":"i"}}},{"type":"IfStatement","start":2073,"end":2346,"test":{"type":"BinaryExpression","start":2077,"end":2093,"left":{"type":"Identifier","start":2077,"end":2078,"name":"i"},"operator":">=","right":{"type":"MemberExpression","start":2082,"end":2093,"object":{"type":"Identifier","start":2082,"end":2086,"name":"argv"},"property":{"type":"Identifier","start":2087,"end":2093,"name":"length"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":2095,"end":2251,"body":[{"type":"ExpressionStatement","start":2118,"end":2153,"expression":{"type":"CallExpression","start":2118,"end":2152,"callee":{"type":"MemberExpression","start":2118,"end":2129,"object":{"type":"Identifier","start":2118,"end":2125,"name":"console"},"property":{"type":"Identifier","start":2126,"end":2129,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2130,"end":2151,"value":"missing config file","raw":"'missing config file'"}],"optional":false}},{"type":"ExpressionStatement","start":2175,"end":2198,"expression":{"type":"CallExpression","start":2175,"end":2197,"callee":{"type":"MemberExpression","start":2175,"end":2195,"object":{"type":"Identifier","start":2175,"end":2185,"name":"XliffMerge"},"property":{"type":"Identifier","start":2186,"end":2195,"name":"showUsage"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ReturnStatement","start":2220,"end":2232,"argument":{"type":"Literal","start":2227,"end":2231,"value":null,"raw":"null"}}]},"alternate":{"type":"BlockStatement","start":2274,"end":2346,"body":[{"type":"ExpressionStatement","start":2297,"end":2327,"expression":{"type":"AssignmentExpression","start":2297,"end":2326,"operator":"=","left":{"type":"MemberExpression","start":2297,"end":2316,"object":{"type":"Identifier","start":2297,"end":2304,"name":"options"},"property":{"type":"Identifier","start":2305,"end":2316,"name":"profilePath"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":2319,"end":2326,"object":{"type":"Identifier","start":2319,"end":2323,"name":"argv"},"property":{"type":"Identifier","start":2324,"end":2325,"name":"i"},"computed":true,"optional":false}}}]}}]},"alternate":{"type":"IfStatement","start":2380,"end":2846,"test":{"type":"LogicalExpression","start":2384,"end":2417,"left":{"type":"BinaryExpression","start":2384,"end":2401,"left":{"type":"Identifier","start":2384,"end":2387,"name":"arg"},"operator":"===","right":{"type":"Literal","start":2392,"end":2401,"value":"--quiet","raw":"'--quiet'"}},"operator":"||","right":{"type":"BinaryExpression","start":2405,"end":2417,"left":{"type":"Identifier","start":2405,"end":2408,"name":"arg"},"operator":"===","right":{"type":"Literal","start":2413,"end":2417,"value":"-q","raw":"'-q'"}}},"consequent":{"type":"BlockStatement","start":2419,"end":2474,"body":[{"type":"ExpressionStatement","start":2438,"end":2459,"expression":{"type":"AssignmentExpression","start":2438,"end":2458,"operator":"=","left":{"type":"MemberExpression","start":2438,"end":2451,"object":{"type":"Identifier","start":2438,"end":2445,"name":"options"},"property":{"type":"Identifier","start":2446,"end":2451,"name":"quiet"},"computed":false,"optional":false},"right":{"type":"Literal","start":2454,"end":2458,"value":true,"raw":"true"}}}]},"alternate":{"type":"IfStatement","start":2493,"end":2846,"test":{"type":"LogicalExpression","start":2497,"end":2548,"left":{"type":"LogicalExpression","start":2497,"end":2532,"left":{"type":"BinaryExpression","start":2497,"end":2513,"left":{"type":"Identifier","start":2497,"end":2500,"name":"arg"},"operator":"===","right":{"type":"Literal","start":2505,"end":2513,"value":"--help","raw":"'--help'"}},"operator":"||","right":{"type":"BinaryExpression","start":2517,"end":2532,"left":{"type":"Identifier","start":2517,"end":2520,"name":"arg"},"operator":"===","right":{"type":"Literal","start":2525,"end":2532,"value":"-help","raw":"'-help'"}}},"operator":"||","right":{"type":"BinaryExpression","start":2536,"end":2548,"left":{"type":"Identifier","start":2536,"end":2539,"name":"arg"},"operator":"===","right":{"type":"Literal","start":2544,"end":2548,"value":"-h","raw":"'-h'"}}},"consequent":{"type":"BlockStatement","start":2550,"end":2607,"body":[{"type":"ExpressionStatement","start":2569,"end":2592,"expression":{"type":"CallExpression","start":2569,"end":2591,"callee":{"type":"MemberExpression","start":2569,"end":2589,"object":{"type":"Identifier","start":2569,"end":2579,"name":"XliffMerge"},"property":{"type":"Identifier","start":2580,"end":2589,"name":"showUsage"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":{"type":"IfStatement","start":2626,"end":2846,"test":{"type":"LogicalExpression","start":2630,"end":2669,"left":{"type":"BinaryExpression","start":2630,"end":2644,"left":{"type":"MemberExpression","start":2630,"end":2640,"object":{"type":"Identifier","start":2630,"end":2633,"name":"arg"},"property":{"type":"Identifier","start":2634,"end":2640,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":2643,"end":2644,"value":0,"raw":"0"}},"operator":"&&","right":{"type":"BinaryExpression","start":2648,"end":2669,"left":{"type":"CallExpression","start":2648,"end":2661,"callee":{"type":"MemberExpression","start":2648,"end":2658,"object":{"type":"Identifier","start":2648,"end":2651,"name":"arg"},"property":{"type":"Identifier","start":2652,"end":2658,"name":"charAt"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2659,"end":2660,"value":0,"raw":"0"}],"optional":false},"operator":"===","right":{"type":"Literal","start":2666,"end":2669,"value":"-","raw":"'-'"}}},"consequent":{"type":"BlockStatement","start":2671,"end":2765,"body":[{"type":"ExpressionStatement","start":2690,"end":2720,"expression":{"type":"CallExpression","start":2690,"end":2719,"callee":{"type":"MemberExpression","start":2690,"end":2701,"object":{"type":"Identifier","start":2690,"end":2697,"name":"console"},"property":{"type":"Identifier","start":2698,"end":2701,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2702,"end":2718,"value":"unknown option","raw":"'unknown option'"}],"optional":false}},{"type":"ReturnStatement","start":2738,"end":2750,"argument":{"type":"Literal","start":2745,"end":2749,"value":null,"raw":"null"}}]},"alternate":{"type":"BlockStatement","start":2784,"end":2846,"body":[{"type":"ExpressionStatement","start":2803,"end":2831,"expression":{"type":"CallExpression","start":2803,"end":2830,"callee":{"type":"MemberExpression","start":2803,"end":2825,"object":{"type":"MemberExpression","start":2803,"end":2820,"object":{"type":"Identifier","start":2803,"end":2810,"name":"options"},"property":{"type":"Identifier","start":2811,"end":2820,"name":"languages"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2821,"end":2825,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2826,"end":2829,"name":"arg"}],"optional":false}}]}}}}}}}]}},{"type":"ReturnStatement","start":2867,"end":2882,"argument":{"type":"Identifier","start":2874,"end":2881,"name":"options"}}]}}},{"type":"MethodDefinition","start":2895,"end":3583,"static":true,"computed":false,"key":{"type":"Identifier","start":2902,"end":2911,"name":"showUsage"},"kind":"method","value":{"type":"FunctionExpression","start":2911,"end":3583,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2914,"end":3583,"body":[{"type":"ExpressionStatement","start":2925,"end":2980,"expression":{"type":"CallExpression","start":2925,"end":2979,"callee":{"type":"MemberExpression","start":2925,"end":2936,"object":{"type":"Identifier","start":2925,"end":2932,"name":"console"},"property":{"type":"Identifier","start":2933,"end":2936,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2937,"end":2978,"value":"usage: xliffmerge <option>* <language>*","raw":"'usage: xliffmerge <option>* <language>*'"}],"optional":false}},{"type":"ExpressionStatement","start":2990,"end":3013,"expression":{"type":"CallExpression","start":2990,"end":3012,"callee":{"type":"MemberExpression","start":2990,"end":3001,"object":{"type":"Identifier","start":2990,"end":2997,"name":"console"},"property":{"type":"Identifier","start":2998,"end":3001,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3002,"end":3011,"value":"Options","raw":"'Options'"}],"optional":false}},{"type":"ExpressionStatement","start":3023,"end":3115,"expression":{"type":"CallExpression","start":3023,"end":3114,"callee":{"type":"MemberExpression","start":3023,"end":3034,"object":{"type":"Identifier","start":3023,"end":3030,"name":"console"},"property":{"type":"Identifier","start":3031,"end":3034,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3035,"end":3113,"value":"\t-p|--profile a json configuration file containing all relevant parameters.","raw":"'\\t-p|--profile a json configuration file containing all relevant parameters.'"}],"optional":false}},{"type":"ExpressionStatement","start":3125,"end":3231,"expression":{"type":"CallExpression","start":3125,"end":3230,"callee":{"type":"MemberExpression","start":3125,"end":3136,"object":{"type":"Identifier","start":3125,"end":3132,"name":"console"},"property":{"type":"Identifier","start":3133,"end":3136,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3137,"end":3229,"value":"\t\tfor details please consult the home page https://github.com/martinroob/ngx-i18nsupport","raw":"'\\t\\tfor details please consult the home page https://github.com/martinroob/ngx-i18nsupport'"}],"optional":false}},{"type":"ExpressionStatement","start":3241,"end":3311,"expression":{"type":"CallExpression","start":3241,"end":3310,"callee":{"type":"MemberExpression","start":3241,"end":3252,"object":{"type":"Identifier","start":3241,"end":3248,"name":"console"},"property":{"type":"Identifier","start":3249,"end":3252,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3253,"end":3309,"value":"\t-v|--verbose show some output for debugging purposes","raw":"'\\t-v|--verbose show some output for debugging purposes'"}],"optional":false}},{"type":"ExpressionStatement","start":3321,"end":3380,"expression":{"type":"CallExpression","start":3321,"end":3379,"callee":{"type":"MemberExpression","start":3321,"end":3332,"object":{"type":"Identifier","start":3321,"end":3328,"name":"console"},"property":{"type":"Identifier","start":3329,"end":3332,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3333,"end":3378,"value":"\t-q|--quiet only show errors, nothing else","raw":"'\\t-q|--quiet only show errors, nothing else'"}],"optional":false}},{"type":"ExpressionStatement","start":3390,"end":3446,"expression":{"type":"CallExpression","start":3390,"end":3445,"callee":{"type":"MemberExpression","start":3390,"end":3401,"object":{"type":"Identifier","start":3390,"end":3397,"name":"console"},"property":{"type":"Identifier","start":3398,"end":3401,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3402,"end":3444,"value":"\t-version|--version show version string","raw":"'\\t-version|--version show version string'"}],"optional":false}},{"type":"ExpressionStatement","start":3456,"end":3472,"expression":{"type":"CallExpression","start":3456,"end":3471,"callee":{"type":"MemberExpression","start":3456,"end":3467,"object":{"type":"Identifier","start":3456,"end":3463,"name":"console"},"property":{"type":"Identifier","start":3464,"end":3467,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3468,"end":3470,"value":"","raw":"''"}],"optional":false}},{"type":"ExpressionStatement","start":3482,"end":3576,"expression":{"type":"CallExpression","start":3482,"end":3575,"callee":{"type":"MemberExpression","start":3482,"end":3493,"object":{"type":"Identifier","start":3482,"end":3489,"name":"console"},"property":{"type":"Identifier","start":3490,"end":3493,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3494,"end":3574,"value":"\t<language> has to be a valid language short string, e,g. \"en\", \"de\", \"de-ch\"","raw":"'\\t<language> has to be a valid language short string, e,g. \"en\", \"de\", \"de-ch\"'"}],"optional":false}}]}}},{"type":"MethodDefinition","start":3780,"end":4041,"static":true,"computed":false,"key":{"type":"Identifier","start":3787,"end":3804,"name":"createFromOptions"},"kind":"method","value":{"type":"FunctionExpression","start":3804,"end":4041,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3805,"end":3818,"name":"commandOutput"},{"type":"Identifier","start":3820,"end":3827,"name":"options"},{"type":"Identifier","start":3829,"end":3843,"name":"profileContent"}],"body":{"type":"BlockStatement","start":3845,"end":4041,"body":[{"type":"VariableDeclaration","start":3856,"end":3912,"declarations":[{"type":"VariableDeclarator","start":3862,"end":3911,"id":{"type":"Identifier","start":3862,"end":3870,"name":"instance"},"init":{"type":"NewExpression","start":3873,"end":3911,"callee":{"type":"Identifier","start":3877,"end":3887,"name":"XliffMerge"},"arguments":[{"type":"Identifier","start":3888,"end":3901,"name":"commandOutput"},{"type":"Identifier","start":3903,"end":3910,"name":"options"}]}}],"kind":"const"},{"type":"ExpressionStatement","start":3922,"end":4008,"expression":{"type":"AssignmentExpression","start":3922,"end":4007,"operator":"=","left":{"type":"MemberExpression","start":3922,"end":3941,"object":{"type":"Identifier","start":3922,"end":3930,"name":"instance"},"property":{"type":"Identifier","start":3931,"end":3941,"name":"parameters"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":3944,"end":4007,"callee":{"type":"MemberExpression","start":3944,"end":3982,"object":{"type":"Identifier","start":3944,"end":3964,"name":"XliffMergeParameters"},"property":{"type":"Identifier","start":3965,"end":3982,"name":"createFromOptions"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3983,"end":3990,"name":"options"},{"type":"Identifier","start":3992,"end":4006,"name":"profileContent"}],"optional":false}}},{"type":"ReturnStatement","start":4018,"end":4034,"argument":{"type":"Identifier","start":4025,"end":4033,"name":"instance"}}]}}},{"type":"MethodDefinition","start":4288,"end":4659,"static":false,"computed":false,"key":{"type":"Identifier","start":4288,"end":4291,"name":"run"},"kind":"method","value":{"type":"FunctionExpression","start":4291,"end":4659,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4292,"end":4308,"name":"callbackFunction"},{"type":"Identifier","start":4310,"end":4323,"name":"errorFunction"}],"body":{"type":"BlockStatement","start":4325,"end":4659,"body":[{"type":"ExpressionStatement","start":4336,"end":4652,"expression":{"type":"CallExpression","start":4336,"end":4651,"callee":{"type":"MemberExpression","start":4336,"end":4375,"object":{"type":"CallExpression","start":4336,"end":4351,"callee":{"type":"MemberExpression","start":4336,"end":4349,"object":{"type":"ThisExpression","start":4336,"end":4340},"property":{"type":"Identifier","start":4341,"end":4349,"name":"runAsync"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":4366,"end":4375,"name":"subscribe"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":4376,"end":4517,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4377,"end":4384,"name":"retcode"}],"body":{"type":"BlockStatement","start":4389,"end":4517,"body":[{"type":"IfStatement","start":4404,"end":4506,"test":{"type":"UnaryExpression","start":4408,"end":4444,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":4409,"end":4444,"callee":{"type":"Identifier","start":4409,"end":4426,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":4427,"end":4443,"name":"callbackFunction"}],"optional":false}},"consequent":{"type":"BlockStatement","start":4446,"end":4506,"body":[{"type":"ExpressionStatement","start":4465,"end":4491,"expression":{"type":"CallExpression","start":4465,"end":4490,"callee":{"type":"Identifier","start":4465,"end":4481,"name":"callbackFunction"},"arguments":[{"type":"Identifier","start":4482,"end":4489,"name":"retcode"}],"optional":false}}]},"alternate":null}]}},{"type":"ArrowFunctionExpression","start":4519,"end":4650,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4520,"end":4525,"name":"error"}],"body":{"type":"BlockStatement","start":4530,"end":4650,"body":[{"type":"IfStatement","start":4545,"end":4639,"test":{"type":"UnaryExpression","start":4549,"end":4582,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":4550,"end":4582,"callee":{"type":"Identifier","start":4550,"end":4567,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":4568,"end":4581,"name":"errorFunction"}],"optional":false}},"consequent":{"type":"BlockStatement","start":4584,"end":4639,"body":[{"type":"ExpressionStatement","start":4603,"end":4624,"expression":{"type":"CallExpression","start":4603,"end":4623,"callee":{"type":"Identifier","start":4603,"end":4616,"name":"errorFunction"},"arguments":[{"type":"Identifier","start":4617,"end":4622,"name":"error"}],"optional":false}}]},"alternate":null}]}}],"optional":false}}]}}},{"type":"MethodDefinition","start":4798,"end":6257,"static":false,"computed":false,"key":{"type":"Identifier","start":4798,"end":4806,"name":"runAsync"},"kind":"method","value":{"type":"FunctionExpression","start":4806,"end":6257,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":4809,"end":6257,"body":[{"type":"IfStatement","start":4820,"end":4916,"test":{"type":"LogicalExpression","start":4824,"end":4858,"left":{"type":"MemberExpression","start":4824,"end":4836,"object":{"type":"ThisExpression","start":4824,"end":4828},"property":{"type":"Identifier","start":4829,"end":4836,"name":"options"},"computed":false,"optional":false},"operator":"&&","right":{"type":"MemberExpression","start":4840,"end":4858,"object":{"type":"MemberExpression","start":4840,"end":4852,"object":{"type":"ThisExpression","start":4840,"end":4844},"property":{"type":"Identifier","start":4845,"end":4852,"name":"options"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4853,"end":4858,"name":"quiet"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":4860,"end":4916,"body":[{"type":"ExpressionStatement","start":4875,"end":4905,"expression":{"type":"CallExpression","start":4875,"end":4904,"callee":{"type":"MemberExpression","start":4875,"end":4902,"object":{"type":"MemberExpression","start":4875,"end":4893,"object":{"type":"ThisExpression","start":4875,"end":4879},"property":{"type":"Identifier","start":4880,"end":4893,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4894,"end":4902,"name":"setQuiet"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":4926,"end":5026,"test":{"type":"LogicalExpression","start":4930,"end":4966,"left":{"type":"MemberExpression","start":4930,"end":4942,"object":{"type":"ThisExpression","start":4930,"end":4934},"property":{"type":"Identifier","start":4935,"end":4942,"name":"options"},"computed":false,"optional":false},"operator":"&&","right":{"type":"MemberExpression","start":4946,"end":4966,"object":{"type":"MemberExpression","start":4946,"end":4958,"object":{"type":"ThisExpression","start":4946,"end":4950},"property":{"type":"Identifier","start":4951,"end":4958,"name":"options"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4959,"end":4966,"name":"verbose"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":4968,"end":5026,"body":[{"type":"ExpressionStatement","start":4983,"end":5015,"expression":{"type":"CallExpression","start":4983,"end":5014,"callee":{"type":"MemberExpression","start":4983,"end":5012,"object":{"type":"MemberExpression","start":4983,"end":5001,"object":{"type":"ThisExpression","start":4983,"end":4987},"property":{"type":"Identifier","start":4988,"end":5001,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5002,"end":5012,"name":"setVerbose"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":5036,"end":5155,"test":{"type":"UnaryExpression","start":5040,"end":5056,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":5041,"end":5056,"object":{"type":"ThisExpression","start":5041,"end":5045},"property":{"type":"Identifier","start":5046,"end":5056,"name":"parameters"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":5058,"end":5155,"body":[{"type":"ExpressionStatement","start":5073,"end":5144,"expression":{"type":"AssignmentExpression","start":5073,"end":5143,"operator":"=","left":{"type":"MemberExpression","start":5073,"end":5088,"object":{"type":"ThisExpression","start":5073,"end":5077},"property":{"type":"Identifier","start":5078,"end":5088,"name":"parameters"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":5091,"end":5143,"callee":{"type":"MemberExpression","start":5091,"end":5129,"object":{"type":"Identifier","start":5091,"end":5111,"name":"XliffMergeParameters"},"property":{"type":"Identifier","start":5112,"end":5129,"name":"createFromOptions"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":5130,"end":5142,"object":{"type":"ThisExpression","start":5130,"end":5134},"property":{"type":"Identifier","start":5135,"end":5142,"name":"options"},"computed":false,"optional":false}],"optional":false}}}]},"alternate":null},{"type":"ExpressionStatement","start":5165,"end":5223,"expression":{"type":"CallExpression","start":5165,"end":5222,"callee":{"type":"MemberExpression","start":5165,"end":5188,"object":{"type":"MemberExpression","start":5165,"end":5183,"object":{"type":"ThisExpression","start":5165,"end":5169},"property":{"type":"Identifier","start":5170,"end":5183,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5184,"end":5188,"name":"info"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5189,"end":5212,"value":"xliffmerge version %s","raw":"'xliffmerge version %s'"},{"type":"Identifier","start":5214,"end":5221,"name":"VERSION"}],"optional":false}},{"type":"IfStatement","start":5233,"end":5344,"test":{"type":"CallExpression","start":5237,"end":5262,"callee":{"type":"MemberExpression","start":5237,"end":5260,"object":{"type":"MemberExpression","start":5237,"end":5252,"object":{"type":"ThisExpression","start":5237,"end":5241},"property":{"type":"Identifier","start":5242,"end":5252,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5253,"end":5260,"name":"verbose"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":5264,"end":5344,"body":[{"type":"ExpressionStatement","start":5279,"end":5333,"expression":{"type":"CallExpression","start":5279,"end":5332,"callee":{"type":"MemberExpression","start":5279,"end":5312,"object":{"type":"MemberExpression","start":5279,"end":5294,"object":{"type":"ThisExpression","start":5279,"end":5283},"property":{"type":"Identifier","start":5284,"end":5294,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5295,"end":5312,"name":"showAllParameters"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":5313,"end":5331,"object":{"type":"ThisExpression","start":5313,"end":5317},"property":{"type":"Identifier","start":5318,"end":5331,"name":"commandOutput"},"computed":false,"optional":false}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":5354,"end":5571,"test":{"type":"BinaryExpression","start":5358,"end":5396,"left":{"type":"MemberExpression","start":5358,"end":5392,"object":{"type":"MemberExpression","start":5358,"end":5385,"object":{"type":"MemberExpression","start":5358,"end":5373,"object":{"type":"ThisExpression","start":5358,"end":5362},"property":{"type":"Identifier","start":5363,"end":5373,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5374,"end":5385,"name":"errorsFound"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5386,"end":5392,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":5395,"end":5396,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":5398,"end":5571,"body":[{"type":"ForOfStatement","start":5413,"end":5532,"await":false,"left":{"type":"VariableDeclaration","start":5418,"end":5427,"declarations":[{"type":"VariableDeclarator","start":5424,"end":5427,"id":{"type":"Identifier","start":5424,"end":5427,"name":"err"},"init":null}],"kind":"const"},"right":{"type":"MemberExpression","start":5431,"end":5458,"object":{"type":"MemberExpression","start":5431,"end":5446,"object":{"type":"ThisExpression","start":5431,"end":5435},"property":{"type":"Identifier","start":5436,"end":5446,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5447,"end":5458,"name":"errorsFound"},"computed":false,"optional":false},"body":{"type":"BlockStatement","start":5460,"end":5532,"body":[{"type":"ExpressionStatement","start":5479,"end":5517,"expression":{"type":"CallExpression","start":5479,"end":5516,"callee":{"type":"MemberExpression","start":5479,"end":5503,"object":{"type":"MemberExpression","start":5479,"end":5497,"object":{"type":"ThisExpression","start":5479,"end":5483},"property":{"type":"Identifier","start":5484,"end":5497,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5498,"end":5503,"name":"error"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":5504,"end":5515,"object":{"type":"Identifier","start":5504,"end":5507,"name":"err"},"property":{"type":"Identifier","start":5508,"end":5515,"name":"message"},"computed":false,"optional":false}],"optional":false}}]}},{"type":"ReturnStatement","start":5546,"end":5560,"argument":{"type":"CallExpression","start":5553,"end":5559,"callee":{"type":"Identifier","start":5553,"end":5555,"name":"of"},"arguments":[{"type":"UnaryExpression","start":5556,"end":5558,"operator":"-","prefix":true,"argument":{"type":"Literal","start":5557,"end":5558,"value":1,"raw":"1"}}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":5581,"end":5767,"test":{"type":"BinaryExpression","start":5585,"end":5625,"left":{"type":"MemberExpression","start":5585,"end":5621,"object":{"type":"MemberExpression","start":5585,"end":5614,"object":{"type":"MemberExpression","start":5585,"end":5600,"object":{"type":"ThisExpression","start":5585,"end":5589},"property":{"type":"Identifier","start":5590,"end":5600,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5601,"end":5614,"name":"warningsFound"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5615,"end":5621,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":5624,"end":5625,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":5627,"end":5767,"body":[{"type":"ForOfStatement","start":5642,"end":5756,"await":false,"left":{"type":"VariableDeclaration","start":5647,"end":5657,"declarations":[{"type":"VariableDeclarator","start":5653,"end":5657,"id":{"type":"Identifier","start":5653,"end":5657,"name":"warn"},"init":null}],"kind":"const"},"right":{"type":"MemberExpression","start":5661,"end":5690,"object":{"type":"MemberExpression","start":5661,"end":5676,"object":{"type":"ThisExpression","start":5661,"end":5665},"property":{"type":"Identifier","start":5666,"end":5676,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5677,"end":5690,"name":"warningsFound"},"computed":false,"optional":false},"body":{"type":"BlockStatement","start":5692,"end":5756,"body":[{"type":"ExpressionStatement","start":5711,"end":5741,"expression":{"type":"CallExpression","start":5711,"end":5740,"callee":{"type":"MemberExpression","start":5711,"end":5734,"object":{"type":"MemberExpression","start":5711,"end":5729,"object":{"type":"ThisExpression","start":5711,"end":5715},"property":{"type":"Identifier","start":5716,"end":5729,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5730,"end":5734,"name":"warn"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5735,"end":5739,"name":"warn"}],"optional":false}}]}}]},"alternate":null},{"type":"ExpressionStatement","start":5777,"end":5795,"expression":{"type":"CallExpression","start":5777,"end":5794,"callee":{"type":"MemberExpression","start":5777,"end":5792,"object":{"type":"ThisExpression","start":5777,"end":5781},"property":{"type":"Identifier","start":5782,"end":5792,"name":"readMaster"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"IfStatement","start":5805,"end":5957,"test":{"type":"CallExpression","start":5809,"end":5840,"callee":{"type":"MemberExpression","start":5809,"end":5838,"object":{"type":"MemberExpression","start":5809,"end":5824,"object":{"type":"ThisExpression","start":5809,"end":5813},"property":{"type":"Identifier","start":5814,"end":5824,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5825,"end":5838,"name":"autotranslate"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":5842,"end":5957,"body":[{"type":"ExpressionStatement","start":5857,"end":5946,"expression":{"type":"AssignmentExpression","start":5857,"end":5945,"operator":"=","left":{"type":"MemberExpression","start":5857,"end":5882,"object":{"type":"ThisExpression","start":5857,"end":5861},"property":{"type":"Identifier","start":5862,"end":5882,"name":"autoTranslateService"},"computed":false,"optional":false},"right":{"type":"NewExpression","start":5885,"end":5945,"callee":{"type":"Identifier","start":5889,"end":5919,"name":"XliffMergeAutoTranslateService"},"arguments":[{"type":"CallExpression","start":5920,"end":5944,"callee":{"type":"MemberExpression","start":5920,"end":5942,"object":{"type":"MemberExpression","start":5920,"end":5935,"object":{"type":"ThisExpression","start":5920,"end":5924},"property":{"type":"Identifier","start":5925,"end":5935,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5936,"end":5942,"name":"apikey"},"computed":false,"optional":false},"arguments":[],"optional":false}]}}}]},"alternate":null},{"type":"VariableDeclaration","start":5967,"end":6003,"declarations":[{"type":"VariableDeclarator","start":5973,"end":6002,"id":{"type":"Identifier","start":5973,"end":5997,"name":"executionForAllLanguages"},"init":{"type":"ArrayExpression","start":6000,"end":6002,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":6013,"end":6145,"expression":{"type":"CallExpression","start":6013,"end":6144,"callee":{"type":"MemberExpression","start":6013,"end":6048,"object":{"type":"CallExpression","start":6013,"end":6040,"callee":{"type":"MemberExpression","start":6013,"end":6038,"object":{"type":"MemberExpression","start":6013,"end":6028,"object":{"type":"ThisExpression","start":6013,"end":6017},"property":{"type":"Identifier","start":6018,"end":6028,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6029,"end":6038,"name":"languages"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":6041,"end":6048,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":6049,"end":6143,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6050,"end":6054,"name":"lang"}],"body":{"type":"BlockStatement","start":6059,"end":6143,"body":[{"type":"ExpressionStatement","start":6074,"end":6132,"expression":{"type":"CallExpression","start":6074,"end":6131,"callee":{"type":"MemberExpression","start":6074,"end":6103,"object":{"type":"Identifier","start":6074,"end":6098,"name":"executionForAllLanguages"},"property":{"type":"Identifier","start":6099,"end":6103,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6104,"end":6130,"callee":{"type":"MemberExpression","start":6104,"end":6124,"object":{"type":"ThisExpression","start":6104,"end":6108},"property":{"type":"Identifier","start":6109,"end":6124,"name":"processLanguage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6125,"end":6129,"name":"lang"}],"optional":false}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":6155,"end":6250,"argument":{"type":"CallExpression","start":6162,"end":6249,"callee":{"type":"MemberExpression","start":6162,"end":6201,"object":{"type":"CallExpression","start":6162,"end":6196,"callee":{"type":"Identifier","start":6162,"end":6170,"name":"forkJoin"},"arguments":[{"type":"Identifier","start":6171,"end":6195,"name":"executionForAllLanguages"}],"optional":false},"property":{"type":"Identifier","start":6197,"end":6201,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6202,"end":6248,"callee":{"type":"Identifier","start":6202,"end":6205,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":6206,"end":6247,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":6207,"end":6215,"name":"retcodes"}],"body":{"type":"CallExpression","start":6220,"end":6247,"callee":{"type":"MemberExpression","start":6220,"end":6237,"object":{"type":"ThisExpression","start":6220,"end":6224},"property":{"type":"Identifier","start":6225,"end":6237,"name":"totalRetcode"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6238,"end":6246,"name":"retcodes"}],"optional":false}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":6487,"end":6691,"static":false,"computed":false,"key":{"type":"Identifier","start":6487,"end":6499,"name":"totalRetcode"},"kind":"method","value":{"type":"FunctionExpression","start":6499,"end":6691,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6500,"end":6508,"name":"retcodes"}],"body":{"type":"BlockStatement","start":6510,"end":6691,"body":[{"type":"ForStatement","start":6521,"end":6665,"init":{"type":"VariableDeclaration","start":6526,"end":6535,"declarations":[{"type":"VariableDeclarator","start":6530,"end":6535,"id":{"type":"Identifier","start":6530,"end":6531,"name":"i"},"init":{"type":"Literal","start":6534,"end":6535,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":6537,"end":6556,"left":{"type":"Identifier","start":6537,"end":6538,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":6541,"end":6556,"object":{"type":"Identifier","start":6541,"end":6549,"name":"retcodes"},"property":{"type":"Identifier","start":6550,"end":6556,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":6558,"end":6561,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":6558,"end":6559,"name":"i"}},"body":{"type":"BlockStatement","start":6563,"end":6665,"body":[{"type":"IfStatement","start":6578,"end":6654,"test":{"type":"BinaryExpression","start":6582,"end":6599,"left":{"type":"MemberExpression","start":6582,"end":6593,"object":{"type":"Identifier","start":6582,"end":6590,"name":"retcodes"},"property":{"type":"Identifier","start":6591,"end":6592,"name":"i"},"computed":true,"optional":false},"operator":"!==","right":{"type":"Literal","start":6598,"end":6599,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":6601,"end":6654,"body":[{"type":"ReturnStatement","start":6620,"end":6639,"argument":{"type":"MemberExpression","start":6627,"end":6638,"object":{"type":"Identifier","start":6627,"end":6635,"name":"retcodes"},"property":{"type":"Identifier","start":6636,"end":6637,"name":"i"},"computed":true,"optional":false}}]},"alternate":null}]}},{"type":"ReturnStatement","start":6675,"end":6684,"argument":{"type":"Literal","start":6682,"end":6683,"value":0,"raw":"0"}}]}}},{"type":"MethodDefinition","start":6845,"end":6934,"static":false,"computed":false,"key":{"type":"Identifier","start":6845,"end":6862,"name":"generatedI18nFile"},"kind":"method","value":{"type":"FunctionExpression","start":6862,"end":6934,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6863,"end":6867,"name":"lang"}],"body":{"type":"BlockStatement","start":6869,"end":6934,"body":[{"type":"ReturnStatement","start":6880,"end":6927,"argument":{"type":"CallExpression","start":6887,"end":6926,"callee":{"type":"MemberExpression","start":6887,"end":6920,"object":{"type":"MemberExpression","start":6887,"end":6902,"object":{"type":"ThisExpression","start":6887,"end":6891},"property":{"type":"Identifier","start":6892,"end":6902,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6903,"end":6920,"name":"generatedI18nFile"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6921,"end":6925,"name":"lang"}],"optional":false}}]}}},{"type":"MethodDefinition","start":7104,"end":7209,"static":false,"computed":false,"key":{"type":"Identifier","start":7104,"end":7129,"name":"generatedNgxTranslateFile"},"kind":"method","value":{"type":"FunctionExpression","start":7129,"end":7209,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7130,"end":7134,"name":"lang"}],"body":{"type":"BlockStatement","start":7136,"end":7209,"body":[{"type":"ReturnStatement","start":7147,"end":7202,"argument":{"type":"CallExpression","start":7154,"end":7201,"callee":{"type":"MemberExpression","start":7154,"end":7195,"object":{"type":"MemberExpression","start":7154,"end":7169,"object":{"type":"ThisExpression","start":7154,"end":7158},"property":{"type":"Identifier","start":7159,"end":7169,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7170,"end":7195,"name":"generatedNgxTranslateFile"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7196,"end":7200,"name":"lang"}],"optional":false}}]}}},{"type":"MethodDefinition","start":7297,"end":7363,"static":false,"computed":false,"key":{"type":"Identifier","start":7297,"end":7305,"name":"warnings"},"kind":"method","value":{"type":"FunctionExpression","start":7305,"end":7363,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":7308,"end":7363,"body":[{"type":"ReturnStatement","start":7319,"end":7356,"argument":{"type":"MemberExpression","start":7326,"end":7355,"object":{"type":"MemberExpression","start":7326,"end":7341,"object":{"type":"ThisExpression","start":7326,"end":7330},"property":{"type":"Identifier","start":7331,"end":7341,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7342,"end":7355,"name":"warningsFound"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":7369,"end":9282,"static":false,"computed":false,"key":{"type":"Identifier","start":7369,"end":7379,"name":"readMaster"},"kind":"method","value":{"type":"FunctionExpression","start":7379,"end":9282,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":7382,"end":9282,"body":[{"type":"TryStatement","start":7393,"end":9275,"block":{"type":"BlockStatement","start":7397,"end":8745,"body":[{"type":"ExpressionStatement","start":7412,"end":7551,"expression":{"type":"AssignmentExpression","start":7412,"end":7550,"operator":"=","left":{"type":"MemberExpression","start":7412,"end":7423,"object":{"type":"ThisExpression","start":7412,"end":7416},"property":{"type":"Identifier","start":7417,"end":7423,"name":"master"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":7426,"end":7550,"callee":{"type":"MemberExpression","start":7426,"end":7464,"object":{"type":"Identifier","start":7426,"end":7455,"name":"TranslationMessagesFileReader"},"property":{"type":"Identifier","start":7456,"end":7464,"name":"fromFile"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7465,"end":7493,"callee":{"type":"MemberExpression","start":7465,"end":7491,"object":{"type":"MemberExpression","start":7465,"end":7480,"object":{"type":"ThisExpression","start":7465,"end":7469},"property":{"type":"Identifier","start":7470,"end":7480,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7481,"end":7491,"name":"i18nFormat"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"CallExpression","start":7495,"end":7521,"callee":{"type":"MemberExpression","start":7495,"end":7519,"object":{"type":"MemberExpression","start":7495,"end":7510,"object":{"type":"ThisExpression","start":7495,"end":7499},"property":{"type":"Identifier","start":7500,"end":7510,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7511,"end":7519,"name":"i18nFile"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"CallExpression","start":7523,"end":7549,"callee":{"type":"MemberExpression","start":7523,"end":7547,"object":{"type":"MemberExpression","start":7523,"end":7538,"object":{"type":"ThisExpression","start":7523,"end":7527},"property":{"type":"Identifier","start":7528,"end":7538,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7539,"end":7547,"name":"encoding"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}},{"type":"ExpressionStatement","start":7565,"end":7678,"expression":{"type":"CallExpression","start":7565,"end":7677,"callee":{"type":"MemberExpression","start":7565,"end":7595,"object":{"type":"CallExpression","start":7565,"end":7587,"callee":{"type":"MemberExpression","start":7565,"end":7585,"object":{"type":"MemberExpression","start":7565,"end":7576,"object":{"type":"ThisExpression","start":7565,"end":7569},"property":{"type":"Identifier","start":7570,"end":7576,"name":"master"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7577,"end":7585,"name":"warnings"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":7588,"end":7595,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":7596,"end":7676,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7597,"end":7604,"name":"warning"}],"body":{"type":"BlockStatement","start":7609,"end":7676,"body":[{"type":"ExpressionStatement","start":7628,"end":7661,"expression":{"type":"CallExpression","start":7628,"end":7660,"callee":{"type":"MemberExpression","start":7628,"end":7651,"object":{"type":"MemberExpression","start":7628,"end":7646,"object":{"type":"ThisExpression","start":7628,"end":7632},"property":{"type":"Identifier","start":7633,"end":7646,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7647,"end":7651,"name":"warn"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7652,"end":7659,"name":"warning"}],"optional":false}}]}}],"optional":false}},{"type":"VariableDeclaration","start":7692,"end":7739,"declarations":[{"type":"VariableDeclarator","start":7698,"end":7738,"id":{"type":"Identifier","start":7698,"end":7703,"name":"count"},"init":{"type":"CallExpression","start":7706,"end":7738,"callee":{"type":"MemberExpression","start":7706,"end":7736,"object":{"type":"MemberExpression","start":7706,"end":7717,"object":{"type":"ThisExpression","start":7706,"end":7710},"property":{"type":"Identifier","start":7711,"end":7717,"name":"master"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7718,"end":7736,"name":"numberOfTransUnits"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":7753,"end":7822,"declarations":[{"type":"VariableDeclarator","start":7759,"end":7821,"id":{"type":"Identifier","start":7759,"end":7773,"name":"missingIdCount"},"init":{"type":"CallExpression","start":7776,"end":7821,"callee":{"type":"MemberExpression","start":7776,"end":7819,"object":{"type":"MemberExpression","start":7776,"end":7787,"object":{"type":"ThisExpression","start":7776,"end":7780},"property":{"type":"Identifier","start":7781,"end":7787,"name":"master"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7788,"end":7819,"name":"numberOfTransUnitsWithMissingId"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7836,"end":7901,"expression":{"type":"CallExpression","start":7836,"end":7900,"callee":{"type":"MemberExpression","start":7836,"end":7859,"object":{"type":"MemberExpression","start":7836,"end":7854,"object":{"type":"ThisExpression","start":7836,"end":7840},"property":{"type":"Identifier","start":7841,"end":7854,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7855,"end":7859,"name":"info"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7860,"end":7892,"value":"master contains %s trans-units","raw":"'master contains %s trans-units'"},{"type":"Identifier","start":7894,"end":7899,"name":"count"}],"optional":false}},{"type":"IfStatement","start":7915,"end":8083,"test":{"type":"BinaryExpression","start":7919,"end":7937,"left":{"type":"Identifier","start":7919,"end":7933,"name":"missingIdCount"},"operator":">","right":{"type":"Literal","start":7936,"end":7937,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":7939,"end":8083,"body":[{"type":"ExpressionStatement","start":7958,"end":8068,"expression":{"type":"CallExpression","start":7958,"end":8067,"callee":{"type":"MemberExpression","start":7958,"end":7981,"object":{"type":"MemberExpression","start":7958,"end":7976,"object":{"type":"ThisExpression","start":7958,"end":7962},"property":{"type":"Identifier","start":7963,"end":7976,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7977,"end":7981,"name":"warn"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7982,"end":8043,"value":"master contains %s trans-units, but there are %s without id","raw":"'master contains %s trans-units, but there are %s without id'"},{"type":"Identifier","start":8045,"end":8050,"name":"count"},{"type":"Identifier","start":8052,"end":8066,"name":"missingIdCount"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":8097,"end":8145,"declarations":[{"type":"VariableDeclarator","start":8103,"end":8144,"id":{"type":"Identifier","start":8103,"end":8113,"name":"sourceLang"},"init":{"type":"CallExpression","start":8116,"end":8144,"callee":{"type":"MemberExpression","start":8116,"end":8142,"object":{"type":"MemberExpression","start":8116,"end":8127,"object":{"type":"ThisExpression","start":8116,"end":8120},"property":{"type":"Identifier","start":8121,"end":8127,"name":"master"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8128,"end":8142,"name":"sourceLanguage"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":8159,"end":8734,"test":{"type":"LogicalExpression","start":8163,"end":8225,"left":{"type":"Identifier","start":8163,"end":8173,"name":"sourceLang"},"operator":"&&","right":{"type":"BinaryExpression","start":8177,"end":8225,"left":{"type":"Identifier","start":8177,"end":8187,"name":"sourceLang"},"operator":"!==","right":{"type":"CallExpression","start":8192,"end":8225,"callee":{"type":"MemberExpression","start":8192,"end":8223,"object":{"type":"MemberExpression","start":8192,"end":8207,"object":{"type":"ThisExpression","start":8192,"end":8196},"property":{"type":"Identifier","start":8197,"end":8207,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8208,"end":8223,"name":"defaultLanguage"},"computed":false,"optional":false},"arguments":[],"optional":false}}},"consequent":{"type":"BlockStatement","start":8227,"end":8734,"body":[{"type":"ExpressionStatement","start":8246,"end":8400,"expression":{"type":"CallExpression","start":8246,"end":8399,"callee":{"type":"MemberExpression","start":8246,"end":8269,"object":{"type":"MemberExpression","start":8246,"end":8264,"object":{"type":"ThisExpression","start":8246,"end":8250},"property":{"type":"Identifier","start":8251,"end":8264,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8265,"end":8269,"name":"warn"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8270,"end":8351,"value":"master says to have source-language=\"%s\", should be \"%s\" (your defaultLanguage)","raw":"'master says to have source-language=\"%s\", should be \"%s\" (your defaultLanguage)'"},{"type":"Identifier","start":8353,"end":8363,"name":"sourceLang"},{"type":"CallExpression","start":8365,"end":8398,"callee":{"type":"MemberExpression","start":8365,"end":8396,"object":{"type":"MemberExpression","start":8365,"end":8380,"object":{"type":"ThisExpression","start":8365,"end":8369},"property":{"type":"Identifier","start":8370,"end":8380,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8381,"end":8396,"name":"defaultLanguage"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":8418,"end":8483,"expression":{"type":"CallExpression","start":8418,"end":8482,"callee":{"type":"MemberExpression","start":8418,"end":8447,"object":{"type":"MemberExpression","start":8418,"end":8429,"object":{"type":"ThisExpression","start":8418,"end":8422},"property":{"type":"Identifier","start":8423,"end":8429,"name":"master"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8430,"end":8447,"name":"setSourceLanguage"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":8448,"end":8481,"callee":{"type":"MemberExpression","start":8448,"end":8479,"object":{"type":"MemberExpression","start":8448,"end":8463,"object":{"type":"ThisExpression","start":8448,"end":8452},"property":{"type":"Identifier","start":8453,"end":8463,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8464,"end":8479,"name":"defaultLanguage"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":8501,"end":8583,"expression":{"type":"CallExpression","start":8501,"end":8582,"callee":{"type":"MemberExpression","start":8501,"end":8535,"object":{"type":"Identifier","start":8501,"end":8530,"name":"TranslationMessagesFileReader"},"property":{"type":"Identifier","start":8531,"end":8535,"name":"save"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":8536,"end":8547,"object":{"type":"ThisExpression","start":8536,"end":8540},"property":{"type":"Identifier","start":8541,"end":8547,"name":"master"},"computed":false,"optional":false},{"type":"CallExpression","start":8549,"end":8581,"callee":{"type":"MemberExpression","start":8549,"end":8579,"object":{"type":"MemberExpression","start":8549,"end":8564,"object":{"type":"ThisExpression","start":8549,"end":8553},"property":{"type":"Identifier","start":8554,"end":8564,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8565,"end":8579,"name":"beautifyOutput"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":8601,"end":8719,"expression":{"type":"CallExpression","start":8601,"end":8718,"callee":{"type":"MemberExpression","start":8601,"end":8624,"object":{"type":"MemberExpression","start":8601,"end":8619,"object":{"type":"ThisExpression","start":8601,"end":8605},"property":{"type":"Identifier","start":8606,"end":8619,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8620,"end":8624,"name":"warn"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8625,"end":8670,"value":"changed master source-language=\"%s\" to \"%s\"","raw":"'changed master source-language=\"%s\" to \"%s\"'"},{"type":"Identifier","start":8672,"end":8682,"name":"sourceLang"},{"type":"CallExpression","start":8684,"end":8717,"callee":{"type":"MemberExpression","start":8684,"end":8715,"object":{"type":"MemberExpression","start":8684,"end":8699,"object":{"type":"ThisExpression","start":8684,"end":8688},"property":{"type":"Identifier","start":8689,"end":8699,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8700,"end":8715,"name":"defaultLanguage"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}]},"alternate":null}]},"handler":{"type":"CatchClause","start":8755,"end":9275,"param":{"type":"Identifier","start":8762,"end":8765,"name":"err"},"body":{"type":"BlockStatement","start":8767,"end":9275,"body":[{"type":"IfStatement","start":8782,"end":9264,"test":{"type":"BinaryExpression","start":8786,"end":8816,"left":{"type":"Identifier","start":8786,"end":8789,"name":"err"},"operator":"instanceof","right":{"type":"Identifier","start":8801,"end":8816,"name":"XliffMergeError"}},"consequent":{"type":"BlockStatement","start":8818,"end":8922,"body":[{"type":"ExpressionStatement","start":8837,"end":8875,"expression":{"type":"CallExpression","start":8837,"end":8874,"callee":{"type":"MemberExpression","start":8837,"end":8861,"object":{"type":"MemberExpression","start":8837,"end":8855,"object":{"type":"ThisExpression","start":8837,"end":8841},"property":{"type":"Identifier","start":8842,"end":8855,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8856,"end":8861,"name":"error"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":8862,"end":8873,"object":{"type":"Identifier","start":8862,"end":8865,"name":"err"},"property":{"type":"Identifier","start":8866,"end":8873,"name":"message"},"computed":false,"optional":false}],"optional":false}},{"type":"ReturnStatement","start":8893,"end":8907,"argument":{"type":"CallExpression","start":8900,"end":8906,"callee":{"type":"Identifier","start":8900,"end":8902,"name":"of"},"arguments":[{"type":"UnaryExpression","start":8903,"end":8905,"operator":"-","prefix":true,"argument":{"type":"Literal","start":8904,"end":8905,"value":1,"raw":"1"}}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":8941,"end":9264,"body":[{"type":"VariableDeclaration","start":8990,"end":9041,"declarations":[{"type":"VariableDeclarator","start":8996,"end":9040,"id":{"type":"Identifier","start":8996,"end":9011,"name":"currentFilename"},"init":{"type":"CallExpression","start":9014,"end":9040,"callee":{"type":"MemberExpression","start":9014,"end":9038,"object":{"type":"MemberExpression","start":9014,"end":9029,"object":{"type":"ThisExpression","start":9014,"end":9018},"property":{"type":"Identifier","start":9019,"end":9029,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9030,"end":9038,"name":"i18nFile"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":9059,"end":9146,"declarations":[{"type":"VariableDeclarator","start":9065,"end":9145,"id":{"type":"Identifier","start":9065,"end":9079,"name":"filenameString"},"init":{"type":"ConditionalExpression","start":9082,"end":9145,"test":{"type":"Identifier","start":9083,"end":9098,"name":"currentFilename"},"consequent":{"type":"CallExpression","start":9102,"end":9140,"callee":{"type":"Identifier","start":9102,"end":9108,"name":"format"},"arguments":[{"type":"Literal","start":9109,"end":9122,"value":"file \"%s\", ","raw":"'file \"%s\", '"},{"type":"Identifier","start":9124,"end":9139,"name":"currentFilename"}],"optional":false},"alternate":{"type":"Literal","start":9143,"end":9145,"value":"","raw":"''"}}}],"kind":"const"},{"type":"ExpressionStatement","start":9164,"end":9221,"expression":{"type":"CallExpression","start":9164,"end":9220,"callee":{"type":"MemberExpression","start":9164,"end":9188,"object":{"type":"MemberExpression","start":9164,"end":9182,"object":{"type":"ThisExpression","start":9164,"end":9168},"property":{"type":"Identifier","start":9169,"end":9182,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9183,"end":9188,"name":"error"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":9189,"end":9219,"left":{"type":"BinaryExpression","start":9189,"end":9213,"left":{"type":"Identifier","start":9189,"end":9203,"name":"filenameString"},"operator":"+","right":{"type":"Literal","start":9206,"end":9213,"value":"oops ","raw":"'oops '"}},"operator":"+","right":{"type":"Identifier","start":9216,"end":9219,"name":"err"}}],"optional":false}},{"type":"ThrowStatement","start":9239,"end":9249,"argument":{"type":"Identifier","start":9245,"end":9248,"name":"err"}}]}}]}},"finalizer":null}]}}},{"type":"MethodDefinition","start":9452,"end":10953,"static":false,"computed":false,"key":{"type":"Identifier","start":9452,"end":9467,"name":"processLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":9467,"end":10953,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9468,"end":9472,"name":"lang"}],"body":{"type":"BlockStatement","start":9474,"end":10953,"body":[{"type":"ExpressionStatement","start":9485,"end":9542,"expression":{"type":"CallExpression","start":9485,"end":9541,"callee":{"type":"MemberExpression","start":9485,"end":9509,"object":{"type":"MemberExpression","start":9485,"end":9503,"object":{"type":"ThisExpression","start":9485,"end":9489},"property":{"type":"Identifier","start":9490,"end":9503,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9504,"end":9509,"name":"debug"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9510,"end":9534,"value":"processing language %s","raw":"'processing language %s'"},{"type":"Identifier","start":9536,"end":9540,"name":"lang"}],"optional":false}},{"type":"VariableDeclaration","start":9552,"end":9618,"declarations":[{"type":"VariableDeclarator","start":9558,"end":9617,"id":{"type":"Identifier","start":9558,"end":9575,"name":"languageXliffFile"},"init":{"type":"CallExpression","start":9578,"end":9617,"callee":{"type":"MemberExpression","start":9578,"end":9611,"object":{"type":"MemberExpression","start":9578,"end":9593,"object":{"type":"ThisExpression","start":9578,"end":9582},"property":{"type":"Identifier","start":9583,"end":9593,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9594,"end":9611,"name":"generatedI18nFile"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9612,"end":9616,"name":"lang"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":9628,"end":9670,"declarations":[{"type":"VariableDeclarator","start":9634,"end":9669,"id":{"type":"Identifier","start":9634,"end":9649,"name":"currentFilename"},"init":{"type":"Identifier","start":9652,"end":9669,"name":"languageXliffFile"}}],"kind":"const"},{"type":"VariableDeclaration","start":9680,"end":9691,"declarations":[{"type":"VariableDeclarator","start":9684,"end":9690,"id":{"type":"Identifier","start":9684,"end":9690,"name":"result"},"init":null}],"kind":"let"},{"type":"IfStatement","start":9701,"end":9925,"test":{"type":"UnaryExpression","start":9705,"end":9740,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":9706,"end":9740,"callee":{"type":"MemberExpression","start":9706,"end":9721,"object":{"type":"Identifier","start":9706,"end":9714,"name":"FileUtil"},"property":{"type":"Identifier","start":9715,"end":9721,"name":"exists"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9722,"end":9739,"name":"languageXliffFile"}],"optional":false}},"consequent":{"type":"BlockStatement","start":9742,"end":9831,"body":[{"type":"ExpressionStatement","start":9757,"end":9820,"expression":{"type":"AssignmentExpression","start":9757,"end":9819,"operator":"=","left":{"type":"Identifier","start":9757,"end":9763,"name":"result"},"right":{"type":"CallExpression","start":9766,"end":9819,"callee":{"type":"MemberExpression","start":9766,"end":9794,"object":{"type":"ThisExpression","start":9766,"end":9770},"property":{"type":"Identifier","start":9771,"end":9794,"name":"createUntranslatedXliff"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9795,"end":9799,"name":"lang"},{"type":"Identifier","start":9801,"end":9818,"name":"languageXliffFile"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":9846,"end":9925,"body":[{"type":"ExpressionStatement","start":9861,"end":9914,"expression":{"type":"AssignmentExpression","start":9861,"end":9913,"operator":"=","left":{"type":"Identifier","start":9861,"end":9867,"name":"result"},"right":{"type":"CallExpression","start":9870,"end":9913,"callee":{"type":"MemberExpression","start":9870,"end":9888,"object":{"type":"ThisExpression","start":9870,"end":9874},"property":{"type":"Identifier","start":9875,"end":9888,"name":"mergeMasterTo"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9889,"end":9893,"name":"lang"},{"type":"Identifier","start":9895,"end":9912,"name":"languageXliffFile"}],"optional":false}}}]}},{"type":"ReturnStatement","start":9935,"end":10946,"argument":{"type":"CallExpression","start":9942,"end":10945,"callee":{"type":"MemberExpression","start":9942,"end":9967,"object":{"type":"Identifier","start":9942,"end":9948,"name":"result"},"property":{"type":"Identifier","start":9963,"end":9967,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9968,"end":10482,"callee":{"type":"Identifier","start":9968,"end":9971,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":9972,"end":10481,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":9978,"end":10481,"body":[{"type":"IfStatement","start":9993,"end":10447,"test":{"type":"CallExpression","start":9997,"end":10034,"callee":{"type":"MemberExpression","start":9997,"end":10032,"object":{"type":"MemberExpression","start":9997,"end":10012,"object":{"type":"ThisExpression","start":9997,"end":10001},"property":{"type":"Identifier","start":10002,"end":10012,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10013,"end":10032,"name":"supportNgxTranslate"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":10036,"end":10447,"body":[{"type":"VariableDeclaration","start":10055,"end":10256,"declarations":[{"type":"VariableDeclarator","start":10061,"end":10255,"id":{"type":"Identifier","start":10061,"end":10089,"name":"languageSpecificMessagesFile"},"init":{"type":"CallExpression","start":10092,"end":10255,"callee":{"type":"MemberExpression","start":10092,"end":10130,"object":{"type":"Identifier","start":10092,"end":10121,"name":"TranslationMessagesFileReader"},"property":{"type":"Identifier","start":10122,"end":10130,"name":"fromFile"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":10131,"end":10183,"callee":{"type":"MemberExpression","start":10131,"end":10153,"object":{"type":"ThisExpression","start":10131,"end":10135},"property":{"type":"Identifier","start":10136,"end":10153,"name":"translationFormat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":10154,"end":10182,"callee":{"type":"MemberExpression","start":10154,"end":10180,"object":{"type":"MemberExpression","start":10154,"end":10169,"object":{"type":"ThisExpression","start":10154,"end":10158},"property":{"type":"Identifier","start":10159,"end":10169,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10170,"end":10180,"name":"i18nFormat"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false},{"type":"Identifier","start":10185,"end":10202,"name":"languageXliffFile"},{"type":"CallExpression","start":10204,"end":10230,"callee":{"type":"MemberExpression","start":10204,"end":10228,"object":{"type":"MemberExpression","start":10204,"end":10219,"object":{"type":"ThisExpression","start":10204,"end":10208},"property":{"type":"Identifier","start":10209,"end":10219,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10220,"end":10228,"name":"encoding"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"CallExpression","start":10232,"end":10254,"callee":{"type":"MemberExpression","start":10232,"end":10252,"object":{"type":"MemberExpression","start":10232,"end":10243,"object":{"type":"ThisExpression","start":10232,"end":10236},"property":{"type":"Identifier","start":10237,"end":10243,"name":"master"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10244,"end":10252,"name":"filename"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":10274,"end":10432,"expression":{"type":"CallExpression","start":10274,"end":10431,"callee":{"type":"MemberExpression","start":10274,"end":10303,"object":{"type":"Identifier","start":10274,"end":10295,"name":"NgxTranslateExtractor"},"property":{"type":"Identifier","start":10296,"end":10303,"name":"extract"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10304,"end":10332,"name":"languageSpecificMessagesFile"},{"type":"CallExpression","start":10334,"end":10381,"callee":{"type":"MemberExpression","start":10334,"end":10379,"object":{"type":"MemberExpression","start":10334,"end":10349,"object":{"type":"ThisExpression","start":10334,"end":10338},"property":{"type":"Identifier","start":10339,"end":10349,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10350,"end":10379,"name":"ngxTranslateExtractionPattern"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"CallExpression","start":10383,"end":10430,"callee":{"type":"MemberExpression","start":10383,"end":10424,"object":{"type":"MemberExpression","start":10383,"end":10398,"object":{"type":"ThisExpression","start":10383,"end":10387},"property":{"type":"Identifier","start":10388,"end":10398,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10399,"end":10424,"name":"generatedNgxTranslateFile"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10425,"end":10429,"name":"lang"}],"optional":false}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":10461,"end":10470,"argument":{"type":"Literal","start":10468,"end":10469,"value":0,"raw":"0"}}]}}],"optional":false},{"type":"CallExpression","start":10484,"end":10944,"callee":{"type":"Identifier","start":10484,"end":10494,"name":"catchError"},"arguments":[{"type":"ArrowFunctionExpression","start":10495,"end":10943,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":10496,"end":10499,"name":"err"}],"body":{"type":"BlockStatement","start":10504,"end":10943,"body":[{"type":"IfStatement","start":10519,"end":10932,"test":{"type":"BinaryExpression","start":10523,"end":10553,"left":{"type":"Identifier","start":10523,"end":10526,"name":"err"},"operator":"instanceof","right":{"type":"Identifier","start":10538,"end":10553,"name":"XliffMergeError"}},"consequent":{"type":"BlockStatement","start":10555,"end":10659,"body":[{"type":"ExpressionStatement","start":10574,"end":10612,"expression":{"type":"CallExpression","start":10574,"end":10611,"callee":{"type":"MemberExpression","start":10574,"end":10598,"object":{"type":"MemberExpression","start":10574,"end":10592,"object":{"type":"ThisExpression","start":10574,"end":10578},"property":{"type":"Identifier","start":10579,"end":10592,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10593,"end":10598,"name":"error"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":10599,"end":10610,"object":{"type":"Identifier","start":10599,"end":10602,"name":"err"},"property":{"type":"Identifier","start":10603,"end":10610,"name":"message"},"computed":false,"optional":false}],"optional":false}},{"type":"ReturnStatement","start":10630,"end":10644,"argument":{"type":"CallExpression","start":10637,"end":10643,"callee":{"type":"Identifier","start":10637,"end":10639,"name":"of"},"arguments":[{"type":"UnaryExpression","start":10640,"end":10642,"operator":"-","prefix":true,"argument":{"type":"Literal","start":10641,"end":10642,"value":1,"raw":"1"}}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":10678,"end":10932,"body":[{"type":"VariableDeclaration","start":10727,"end":10814,"declarations":[{"type":"VariableDeclarator","start":10733,"end":10813,"id":{"type":"Identifier","start":10733,"end":10747,"name":"filenameString"},"init":{"type":"ConditionalExpression","start":10750,"end":10813,"test":{"type":"Identifier","start":10751,"end":10766,"name":"currentFilename"},"consequent":{"type":"CallExpression","start":10770,"end":10808,"callee":{"type":"Identifier","start":10770,"end":10776,"name":"format"},"arguments":[{"type":"Literal","start":10777,"end":10790,"value":"file \"%s\", ","raw":"'file \"%s\", '"},{"type":"Identifier","start":10792,"end":10807,"name":"currentFilename"}],"optional":false},"alternate":{"type":"Literal","start":10811,"end":10813,"value":"","raw":"''"}}}],"kind":"const"},{"type":"ExpressionStatement","start":10832,"end":10889,"expression":{"type":"CallExpression","start":10832,"end":10888,"callee":{"type":"MemberExpression","start":10832,"end":10856,"object":{"type":"MemberExpression","start":10832,"end":10850,"object":{"type":"ThisExpression","start":10832,"end":10836},"property":{"type":"Identifier","start":10837,"end":10850,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10851,"end":10856,"name":"error"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":10857,"end":10887,"left":{"type":"BinaryExpression","start":10857,"end":10881,"left":{"type":"Identifier","start":10857,"end":10871,"name":"filenameString"},"operator":"+","right":{"type":"Literal","start":10874,"end":10881,"value":"oops ","raw":"'oops '"}},"operator":"+","right":{"type":"Identifier","start":10884,"end":10887,"name":"err"}}],"optional":false}},{"type":"ThrowStatement","start":10907,"end":10917,"argument":{"type":"Identifier","start":10913,"end":10916,"name":"err"}}]}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":11228,"end":12426,"static":false,"computed":false,"key":{"type":"Identifier","start":11228,"end":11251,"name":"createUntranslatedXliff"},"kind":"method","value":{"type":"FunctionExpression","start":11251,"end":12426,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11252,"end":11256,"name":"lang"},{"type":"Identifier","start":11258,"end":11279,"name":"languageXliffFilePath"}],"body":{"type":"BlockStatement","start":11281,"end":12426,"body":[{"type":"VariableDeclaration","start":11407,"end":11474,"declarations":[{"type":"VariableDeclarator","start":11413,"end":11473,"id":{"type":"Identifier","start":11413,"end":11426,"name":"isDefaultLang"},"init":{"type":"BinaryExpression","start":11430,"end":11472,"left":{"type":"Identifier","start":11430,"end":11434,"name":"lang"},"operator":"===","right":{"type":"CallExpression","start":11439,"end":11472,"callee":{"type":"MemberExpression","start":11439,"end":11470,"object":{"type":"MemberExpression","start":11439,"end":11454,"object":{"type":"ThisExpression","start":11439,"end":11443},"property":{"type":"Identifier","start":11444,"end":11454,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11455,"end":11470,"name":"defaultLanguage"},"computed":false,"optional":false},"arguments":[],"optional":false}}}],"kind":"const"},{"type":"ExpressionStatement","start":11484,"end":11558,"expression":{"type":"CallExpression","start":11484,"end":11557,"callee":{"type":"MemberExpression","start":11484,"end":11524,"object":{"type":"MemberExpression","start":11484,"end":11495,"object":{"type":"ThisExpression","start":11484,"end":11488},"property":{"type":"Identifier","start":11489,"end":11495,"name":"master"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11496,"end":11524,"name":"setNewTransUnitTargetPraefix"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":11525,"end":11556,"callee":{"type":"MemberExpression","start":11525,"end":11554,"object":{"type":"MemberExpression","start":11525,"end":11540,"object":{"type":"ThisExpression","start":11525,"end":11529},"property":{"type":"Identifier","start":11530,"end":11540,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11541,"end":11554,"name":"targetPraefix"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":11568,"end":11640,"expression":{"type":"CallExpression","start":11568,"end":11639,"callee":{"type":"MemberExpression","start":11568,"end":11607,"object":{"type":"MemberExpression","start":11568,"end":11579,"object":{"type":"ThisExpression","start":11568,"end":11572},"property":{"type":"Identifier","start":11573,"end":11579,"name":"master"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11580,"end":11607,"name":"setNewTransUnitTargetSuffix"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":11608,"end":11638,"callee":{"type":"MemberExpression","start":11608,"end":11636,"object":{"type":"MemberExpression","start":11608,"end":11623,"object":{"type":"ThisExpression","start":11608,"end":11612},"property":{"type":"Identifier","start":11613,"end":11623,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11624,"end":11636,"name":"targetSuffix"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"VariableDeclaration","start":11650,"end":11809,"declarations":[{"type":"VariableDeclarator","start":11656,"end":11808,"id":{"type":"Identifier","start":11656,"end":11684,"name":"languageSpecificMessagesFile"},"init":{"type":"CallExpression","start":11687,"end":11808,"callee":{"type":"MemberExpression","start":11687,"end":11727,"object":{"type":"MemberExpression","start":11687,"end":11698,"object":{"type":"ThisExpression","start":11687,"end":11691},"property":{"type":"Identifier","start":11692,"end":11698,"name":"master"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11699,"end":11727,"name":"createTranslationFileForLang"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11728,"end":11732,"name":"lang"},{"type":"Identifier","start":11734,"end":11755,"name":"languageXliffFilePath"},{"type":"Identifier","start":11757,"end":11770,"name":"isDefaultLang"},{"type":"CallExpression","start":11772,"end":11807,"callee":{"type":"MemberExpression","start":11772,"end":11805,"object":{"type":"MemberExpression","start":11772,"end":11787,"object":{"type":"ThisExpression","start":11772,"end":11776},"property":{"type":"Identifier","start":11777,"end":11787,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11788,"end":11805,"name":"useSourceAsTarget"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":11819,"end":12419,"argument":{"type":"CallExpression","start":11826,"end":12418,"callee":{"type":"MemberExpression","start":11826,"end":11915,"object":{"type":"CallExpression","start":11826,"end":11910,"callee":{"type":"MemberExpression","start":11826,"end":11844,"object":{"type":"ThisExpression","start":11826,"end":11830},"property":{"type":"Identifier","start":11831,"end":11844,"name":"autoTranslate"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":11845,"end":11873,"callee":{"type":"MemberExpression","start":11845,"end":11871,"object":{"type":"MemberExpression","start":11845,"end":11856,"object":{"type":"ThisExpression","start":11845,"end":11849},"property":{"type":"Identifier","start":11850,"end":11856,"name":"master"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11857,"end":11871,"name":"sourceLanguage"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"Identifier","start":11875,"end":11879,"name":"lang"},{"type":"Identifier","start":11881,"end":11909,"name":"languageSpecificMessagesFile"}],"optional":false},"property":{"type":"Identifier","start":11911,"end":11915,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":11916,"end":12417,"callee":{"type":"Identifier","start":11916,"end":11919,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":11920,"end":12416,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":11940,"end":12416,"body":[{"type":"ExpressionStatement","start":11988,"end":12087,"expression":{"type":"CallExpression","start":11988,"end":12086,"callee":{"type":"MemberExpression","start":11988,"end":12022,"object":{"type":"Identifier","start":11988,"end":12017,"name":"TranslationMessagesFileReader"},"property":{"type":"Identifier","start":12018,"end":12022,"name":"save"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12023,"end":12051,"name":"languageSpecificMessagesFile"},{"type":"CallExpression","start":12053,"end":12085,"callee":{"type":"MemberExpression","start":12053,"end":12083,"object":{"type":"MemberExpression","start":12053,"end":12068,"object":{"type":"ThisExpression","start":12053,"end":12057},"property":{"type":"Identifier","start":12058,"end":12068,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":12069,"end":12083,"name":"beautifyOutput"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":12101,"end":12204,"expression":{"type":"CallExpression","start":12101,"end":12203,"callee":{"type":"MemberExpression","start":12101,"end":12124,"object":{"type":"MemberExpression","start":12101,"end":12119,"object":{"type":"ThisExpression","start":12101,"end":12105},"property":{"type":"Identifier","start":12106,"end":12119,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":12120,"end":12124,"name":"info"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":12125,"end":12173,"value":"created new file \"%s\" for target-language=\"%s\"","raw":"'created new file \"%s\" for target-language=\"%s\"'"},{"type":"Identifier","start":12175,"end":12196,"name":"languageXliffFilePath"},{"type":"Identifier","start":12198,"end":12202,"name":"lang"}],"optional":false}},{"type":"IfStatement","start":12218,"end":12379,"test":{"type":"UnaryExpression","start":12222,"end":12236,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":12223,"end":12236,"name":"isDefaultLang"}},"consequent":{"type":"BlockStatement","start":12238,"end":12379,"body":[{"type":"ExpressionStatement","start":12257,"end":12364,"expression":{"type":"CallExpression","start":12257,"end":12363,"callee":{"type":"MemberExpression","start":12257,"end":12280,"object":{"type":"MemberExpression","start":12257,"end":12275,"object":{"type":"ThisExpression","start":12257,"end":12261},"property":{"type":"Identifier","start":12262,"end":12275,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":12276,"end":12280,"name":"warn"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":12281,"end":12333,"value":"please translate file \"%s\" to target-language=\"%s\"","raw":"'please translate file \"%s\" to target-language=\"%s\"'"},{"type":"Identifier","start":12335,"end":12356,"name":"languageXliffFilePath"},{"type":"Identifier","start":12358,"end":12362,"name":"lang"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":12393,"end":12405,"argument":{"type":"Literal","start":12400,"end":12404,"value":null,"raw":"null"}}]}}],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":12624,"end":12806,"static":false,"computed":false,"key":{"type":"Identifier","start":12624,"end":12641,"name":"translationFormat"},"kind":"method","value":{"type":"FunctionExpression","start":12641,"end":12806,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12642,"end":12652,"name":"i18nFormat"}],"body":{"type":"BlockStatement","start":12654,"end":12806,"body":[{"type":"IfStatement","start":12665,"end":12799,"test":{"type":"BinaryExpression","start":12669,"end":12694,"left":{"type":"Identifier","start":12669,"end":12679,"name":"i18nFormat"},"operator":"===","right":{"type":"Identifier","start":12684,"end":12694,"name":"FORMAT_XMB"}},"consequent":{"type":"BlockStatement","start":12696,"end":12740,"body":[{"type":"ReturnStatement","start":12711,"end":12729,"argument":{"type":"Identifier","start":12718,"end":12728,"name":"FORMAT_XTB"}}]},"alternate":{"type":"BlockStatement","start":12755,"end":12799,"body":[{"type":"ReturnStatement","start":12770,"end":12788,"argument":{"type":"Identifier","start":12777,"end":12787,"name":"i18nFormat"}}]}}]}}},{"type":"MethodDefinition","start":12923,"end":19697,"static":false,"computed":false,"key":{"type":"Identifier","start":12923,"end":12936,"name":"mergeMasterTo"},"kind":"method","value":{"type":"FunctionExpression","start":12936,"end":19697,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12937,"end":12941,"name":"lang"},{"type":"Identifier","start":12943,"end":12964,"name":"languageXliffFilePath"}],"body":{"type":"BlockStatement","start":12966,"end":19697,"body":[{"type":"VariableDeclaration","start":13013,"end":13194,"declarations":[{"type":"VariableDeclarator","start":13019,"end":13193,"id":{"type":"Identifier","start":13019,"end":13047,"name":"languageSpecificMessagesFile"},"init":{"type":"CallExpression","start":13050,"end":13193,"callee":{"type":"MemberExpression","start":13050,"end":13088,"object":{"type":"Identifier","start":13050,"end":13079,"name":"TranslationMessagesFileReader"},"property":{"type":"Identifier","start":13080,"end":13088,"name":"fromFile"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":13089,"end":13141,"callee":{"type":"MemberExpression","start":13089,"end":13111,"object":{"type":"ThisExpression","start":13089,"end":13093},"property":{"type":"Identifier","start":13094,"end":13111,"name":"translationFormat"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":13112,"end":13140,"callee":{"type":"MemberExpression","start":13112,"end":13138,"object":{"type":"MemberExpression","start":13112,"end":13127,"object":{"type":"ThisExpression","start":13112,"end":13116},"property":{"type":"Identifier","start":13117,"end":13127,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":13128,"end":13138,"name":"i18nFormat"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false},{"type":"Identifier","start":13143,"end":13164,"name":"languageXliffFilePath"},{"type":"CallExpression","start":13166,"end":13192,"callee":{"type":"MemberExpression","start":13166,"end":13190,"object":{"type":"MemberExpression","start":13166,"end":13181,"object":{"type":"ThisExpression","start":13166,"end":13170},"property":{"type":"Identifier","start":13171,"end":13181,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":13182,"end":13190,"name":"encoding"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":13204,"end":13271,"declarations":[{"type":"VariableDeclarator","start":13210,"end":13270,"id":{"type":"Identifier","start":13210,"end":13223,"name":"isDefaultLang"},"init":{"type":"BinaryExpression","start":13227,"end":13269,"left":{"type":"Identifier","start":13227,"end":13231,"name":"lang"},"operator":"===","right":{"type":"CallExpression","start":13236,"end":13269,"callee":{"type":"MemberExpression","start":13236,"end":13267,"object":{"type":"MemberExpression","start":13236,"end":13251,"object":{"type":"ThisExpression","start":13236,"end":13240},"property":{"type":"Identifier","start":13241,"end":13251,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":13252,"end":13267,"name":"defaultLanguage"},"computed":false,"optional":false},"arguments":[],"optional":false}}}],"kind":"const"},{"type":"VariableDeclaration","start":13281,"end":13298,"declarations":[{"type":"VariableDeclarator","start":13285,"end":13297,"id":{"type":"Identifier","start":13285,"end":13293,"name":"newCount"},"init":{"type":"Literal","start":13296,"end":13297,"value":0,"raw":"0"}}],"kind":"let"},{"type":"VariableDeclaration","start":13308,"end":13342,"declarations":[{"type":"VariableDeclarator","start":13312,"end":13341,"id":{"type":"Identifier","start":13312,"end":13337,"name":"correctSourceContentCount"},"init":{"type":"Literal","start":13340,"end":13341,"value":0,"raw":"0"}}],"kind":"let"},{"type":"VariableDeclaration","start":13352,"end":13382,"declarations":[{"type":"VariableDeclarator","start":13356,"end":13381,"id":{"type":"Identifier","start":13356,"end":13377,"name":"correctSourceRefCount"},"init":{"type":"Literal","start":13380,"end":13381,"value":0,"raw":"0"}}],"kind":"let"},{"type":"VariableDeclaration","start":13392,"end":13433,"declarations":[{"type":"VariableDeclarator","start":13396,"end":13432,"id":{"type":"Identifier","start":13396,"end":13428,"name":"correctDescriptionOrMeaningCount"},"init":{"type":"Literal","start":13431,"end":13432,"value":0,"raw":"0"}}],"kind":"let"},{"type":"VariableDeclaration","start":13443,"end":13466,"declarations":[{"type":"VariableDeclarator","start":13447,"end":13465,"id":{"type":"Identifier","start":13447,"end":13461,"name":"idChangedCount"},"init":{"type":"Literal","start":13464,"end":13465,"value":0,"raw":"0"}}],"kind":"let"},{"type":"ExpressionStatement","start":13476,"end":13567,"expression":{"type":"CallExpression","start":13476,"end":13566,"callee":{"type":"MemberExpression","start":13476,"end":13533,"object":{"type":"Identifier","start":13476,"end":13504,"name":"languageSpecificMessagesFile"},"property":{"type":"Identifier","start":13505,"end":13533,"name":"setNewTransUnitTargetPraefix"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":13534,"end":13565,"callee":{"type":"MemberExpression","start":13534,"end":13563,"object":{"type":"MemberExpression","start":13534,"end":13549,"object":{"type":"ThisExpression","start":13534,"end":13538},"property":{"type":"Identifier","start":13539,"end":13549,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":13550,"end":13563,"name":"targetPraefix"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":13577,"end":13666,"expression":{"type":"CallExpression","start":13577,"end":13665,"callee":{"type":"MemberExpression","start":13577,"end":13633,"object":{"type":"Identifier","start":13577,"end":13605,"name":"languageSpecificMessagesFile"},"property":{"type":"Identifier","start":13606,"end":13633,"name":"setNewTransUnitTargetSuffix"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":13634,"end":13664,"callee":{"type":"MemberExpression","start":13634,"end":13662,"object":{"type":"MemberExpression","start":13634,"end":13649,"object":{"type":"ThisExpression","start":13634,"end":13638},"property":{"type":"Identifier","start":13639,"end":13649,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":13650,"end":13662,"name":"targetSuffix"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"VariableDeclaration","start":13676,"end":13705,"declarations":[{"type":"VariableDeclarator","start":13680,"end":13704,"id":{"type":"Identifier","start":13680,"end":13697,"name":"lastProcessedUnit"},"init":{"type":"Literal","start":13700,"end":13704,"value":null,"raw":"null"}}],"kind":"let"},{"type":"ExpressionStatement","start":13715,"end":16955,"expression":{"type":"CallExpression","start":13715,"end":16954,"callee":{"type":"MemberExpression","start":13715,"end":13743,"object":{"type":"MemberExpression","start":13715,"end":13726,"object":{"type":"ThisExpression","start":13715,"end":13719},"property":{"type":"Identifier","start":13720,"end":13726,"name":"master"},"computed":false,"optional":false},"property":{"type":"Identifier","start":13727,"end":13743,"name":"forEachTransUnit"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":13744,"end":16953,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13745,"end":13760,"name":"masterTransUnit"}],"body":{"type":"BlockStatement","start":13765,"end":16953,"body":[{"type":"VariableDeclaration","start":13780,"end":13863,"declarations":[{"type":"VariableDeclarator","start":13786,"end":13862,"id":{"type":"Identifier","start":13786,"end":13795,"name":"transUnit"},"init":{"type":"CallExpression","start":13798,"end":13862,"callee":{"type":"MemberExpression","start":13798,"end":13842,"object":{"type":"Identifier","start":13798,"end":13826,"name":"languageSpecificMessagesFile"},"property":{"type":"Identifier","start":13827,"end":13842,"name":"transUnitWithId"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":13843,"end":13861,"object":{"type":"Identifier","start":13843,"end":13858,"name":"masterTransUnit"},"property":{"type":"Identifier","start":13859,"end":13861,"name":"id"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":13877,"end":16942,"test":{"type":"UnaryExpression","start":13881,"end":13891,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":13882,"end":13891,"name":"transUnit"}},"consequent":{"type":"BlockStatement","start":13893,"end":14604,"body":[{"type":"VariableDeclaration","start":13983,"end":13995,"declarations":[{"type":"VariableDeclarator","start":13987,"end":13994,"id":{"type":"Identifier","start":13987,"end":13994,"name":"newUnit"},"init":null}],"kind":"let"},{"type":"IfStatement","start":14013,"end":14589,"test":{"type":"LogicalExpression","start":14017,"end":14176,"left":{"type":"CallExpression","start":14017,"end":14048,"callee":{"type":"MemberExpression","start":14017,"end":14046,"object":{"type":"MemberExpression","start":14017,"end":14032,"object":{"type":"ThisExpression","start":14017,"end":14021},"property":{"type":"Identifier","start":14022,"end":14032,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":14033,"end":14046,"name":"allowIdChange"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"&&","right":{"type":"AssignmentExpression","start":14074,"end":14175,"operator":"=","left":{"type":"Identifier","start":14074,"end":14081,"name":"newUnit"},"right":{"type":"CallExpression","start":14084,"end":14175,"callee":{"type":"MemberExpression","start":14084,"end":14109,"object":{"type":"ThisExpression","start":14084,"end":14088},"property":{"type":"Identifier","start":14089,"end":14109,"name":"processChangedIdUnit"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":14110,"end":14125,"name":"masterTransUnit"},{"type":"Identifier","start":14127,"end":14155,"name":"languageSpecificMessagesFile"},{"type":"Identifier","start":14157,"end":14174,"name":"lastProcessedUnit"}],"optional":false}}},"consequent":{"type":"BlockStatement","start":14178,"end":14287,"body":[{"type":"ExpressionStatement","start":14201,"end":14229,"expression":{"type":"AssignmentExpression","start":14201,"end":14228,"operator":"=","left":{"type":"Identifier","start":14201,"end":14218,"name":"lastProcessedUnit"},"right":{"type":"Identifier","start":14221,"end":14228,"name":"newUnit"}}},{"type":"ExpressionStatement","start":14251,"end":14268,"expression":{"type":"UpdateExpression","start":14251,"end":14267,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":14251,"end":14265,"name":"idChangedCount"}}}]},"alternate":{"type":"BlockStatement","start":14310,"end":14589,"body":[{"type":"ExpressionStatement","start":14333,"end":14537,"expression":{"type":"AssignmentExpression","start":14333,"end":14536,"operator":"=","left":{"type":"Identifier","start":14333,"end":14350,"name":"lastProcessedUnit"},"right":{"type":"CallExpression","start":14353,"end":14536,"callee":{"type":"MemberExpression","start":14353,"end":14400,"object":{"type":"Identifier","start":14353,"end":14381,"name":"languageSpecificMessagesFile"},"property":{"type":"Identifier","start":14382,"end":14400,"name":"importNewTransUnit"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":14401,"end":14416,"name":"masterTransUnit"},{"type":"Identifier","start":14418,"end":14431,"name":"isDefaultLang"},{"type":"CallExpression","start":14433,"end":14468,"callee":{"type":"MemberExpression","start":14433,"end":14466,"object":{"type":"MemberExpression","start":14433,"end":14448,"object":{"type":"ThisExpression","start":14433,"end":14437},"property":{"type":"Identifier","start":14438,"end":14448,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":14449,"end":14466,"name":"useSourceAsTarget"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"ConditionalExpression","start":14470,"end":14535,"test":{"type":"CallExpression","start":14471,"end":14502,"callee":{"type":"MemberExpression","start":14471,"end":14500,"object":{"type":"MemberExpression","start":14471,"end":14486,"object":{"type":"ThisExpression","start":14471,"end":14475},"property":{"type":"Identifier","start":14476,"end":14486,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":14487,"end":14500,"name":"preserveOrder"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"Identifier","start":14506,"end":14523,"name":"lastProcessedUnit"},"alternate":{"type":"Identifier","start":14526,"end":14535,"name":"undefined"}}],"optional":false}}},{"type":"ExpressionStatement","start":14559,"end":14570,"expression":{"type":"UpdateExpression","start":14559,"end":14569,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":14559,"end":14567,"name":"newCount"}}}]}}]},"alternate":{"type":"BlockStatement","start":14623,"end":16942,"body":[{"type":"IfStatement","start":14838,"end":15701,"test":{"type":"LogicalExpression","start":14842,"end":14937,"left":{"type":"CallExpression","start":14842,"end":14878,"callee":{"type":"MemberExpression","start":14842,"end":14876,"object":{"type":"Identifier","start":14842,"end":14851,"name":"transUnit"},"property":{"type":"Identifier","start":14852,"end":14876,"name":"supportsSetSourceContent"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"&&","right":{"type":"UnaryExpression","start":14882,"end":14937,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":14883,"end":14937,"callee":{"type":"MemberExpression","start":14883,"end":14909,"object":{"type":"ThisExpression","start":14883,"end":14887},"property":{"type":"Identifier","start":14888,"end":14909,"name":"areSourcesNearlyEqual"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":14910,"end":14925,"name":"masterTransUnit"},{"type":"Identifier","start":14927,"end":14936,"name":"transUnit"}],"optional":false}}},"consequent":{"type":"BlockStatement","start":14939,"end":15701,"body":[{"type":"ExpressionStatement","start":14962,"end":15022,"expression":{"type":"CallExpression","start":14962,"end":15021,"callee":{"type":"MemberExpression","start":14962,"end":14988,"object":{"type":"Identifier","start":14962,"end":14971,"name":"transUnit"},"property":{"type":"Identifier","start":14972,"end":14988,"name":"setSourceContent"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":14989,"end":15020,"callee":{"type":"MemberExpression","start":14989,"end":15018,"object":{"type":"Identifier","start":14989,"end":15004,"name":"masterTransUnit"},"property":{"type":"Identifier","start":15005,"end":15018,"name":"sourceContent"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"IfStatement","start":15044,"end":15632,"test":{"type":"Identifier","start":15048,"end":15061,"name":"isDefaultLang"},"consequent":{"type":"BlockStatement","start":15063,"end":15319,"body":[{"type":"ExpressionStatement","start":15179,"end":15232,"expression":{"type":"CallExpression","start":15179,"end":15231,"callee":{"type":"MemberExpression","start":15179,"end":15198,"object":{"type":"Identifier","start":15179,"end":15188,"name":"transUnit"},"property":{"type":"Identifier","start":15189,"end":15198,"name":"translate"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":15199,"end":15230,"callee":{"type":"MemberExpression","start":15199,"end":15228,"object":{"type":"Identifier","start":15199,"end":15214,"name":"masterTransUnit"},"property":{"type":"Identifier","start":15215,"end":15228,"name":"sourceContent"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":15258,"end":15296,"expression":{"type":"CallExpression","start":15258,"end":15295,"callee":{"type":"MemberExpression","start":15258,"end":15282,"object":{"type":"Identifier","start":15258,"end":15267,"name":"transUnit"},"property":{"type":"Identifier","start":15268,"end":15282,"name":"setTargetState"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":15283,"end":15294,"name":"STATE_FINAL"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":15346,"end":15632,"body":[{"type":"IfStatement","start":15373,"end":15609,"test":{"type":"BinaryExpression","start":15377,"end":15416,"left":{"type":"CallExpression","start":15377,"end":15400,"callee":{"type":"MemberExpression","start":15377,"end":15398,"object":{"type":"Identifier","start":15377,"end":15386,"name":"transUnit"},"property":{"type":"Identifier","start":15387,"end":15398,"name":"targetState"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"===","right":{"type":"Identifier","start":15405,"end":15416,"name":"STATE_FINAL"}},"consequent":{"type":"BlockStatement","start":15418,"end":15609,"body":[{"type":"ExpressionStatement","start":15539,"end":15582,"expression":{"type":"CallExpression","start":15539,"end":15581,"callee":{"type":"MemberExpression","start":15539,"end":15563,"object":{"type":"Identifier","start":15539,"end":15548,"name":"transUnit"},"property":{"type":"Identifier","start":15549,"end":15563,"name":"setTargetState"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":15564,"end":15580,"name":"STATE_TRANSLATED"}],"optional":false}}]},"alternate":null}]}},{"type":"ExpressionStatement","start":15654,"end":15682,"expression":{"type":"UpdateExpression","start":15654,"end":15681,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":15654,"end":15679,"name":"correctSourceContentCount"}}}]},"alternate":null},{"type":"IfStatement","start":15800,"end":16120,"test":{"type":"LogicalExpression","start":15804,"end":15964,"left":{"type":"CallExpression","start":15804,"end":15843,"callee":{"type":"MemberExpression","start":15804,"end":15841,"object":{"type":"Identifier","start":15804,"end":15813,"name":"transUnit"},"property":{"type":"Identifier","start":15814,"end":15841,"name":"supportsSetSourceReferences"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"&&","right":{"type":"UnaryExpression","start":15868,"end":15964,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":15869,"end":15964,"callee":{"type":"MemberExpression","start":15869,"end":15898,"object":{"type":"ThisExpression","start":15869,"end":15873},"property":{"type":"Identifier","start":15874,"end":15898,"name":"areSourceReferencesEqual"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":15899,"end":15933,"callee":{"type":"MemberExpression","start":15899,"end":15931,"object":{"type":"Identifier","start":15899,"end":15914,"name":"masterTransUnit"},"property":{"type":"Identifier","start":15915,"end":15931,"name":"sourceReferences"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"CallExpression","start":15935,"end":15963,"callee":{"type":"MemberExpression","start":15935,"end":15961,"object":{"type":"Identifier","start":15935,"end":15944,"name":"transUnit"},"property":{"type":"Identifier","start":15945,"end":15961,"name":"sourceReferences"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}},"consequent":{"type":"BlockStatement","start":15966,"end":16120,"body":[{"type":"ExpressionStatement","start":15989,"end":16055,"expression":{"type":"CallExpression","start":15989,"end":16054,"callee":{"type":"MemberExpression","start":15989,"end":16018,"object":{"type":"Identifier","start":15989,"end":15998,"name":"transUnit"},"property":{"type":"Identifier","start":15999,"end":16018,"name":"setSourceReferences"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":16019,"end":16053,"callee":{"type":"MemberExpression","start":16019,"end":16051,"object":{"type":"Identifier","start":16019,"end":16034,"name":"masterTransUnit"},"property":{"type":"Identifier","start":16035,"end":16051,"name":"sourceReferences"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":16077,"end":16101,"expression":{"type":"UpdateExpression","start":16077,"end":16100,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":16077,"end":16098,"name":"correctSourceRefCount"}}}]},"alternate":null},{"type":"IfStatement","start":16199,"end":16879,"test":{"type":"CallExpression","start":16203,"end":16247,"callee":{"type":"MemberExpression","start":16203,"end":16245,"object":{"type":"Identifier","start":16203,"end":16212,"name":"transUnit"},"property":{"type":"Identifier","start":16213,"end":16245,"name":"supportsSetDescriptionAndMeaning"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":16249,"end":16879,"body":[{"type":"VariableDeclaration","start":16272,"end":16292,"declarations":[{"type":"VariableDeclarator","start":16276,"end":16291,"id":{"type":"Identifier","start":16276,"end":16283,"name":"changed"},"init":{"type":"Literal","start":16286,"end":16291,"value":false,"raw":"false"}}],"kind":"let"},{"type":"IfStatement","start":16314,"end":16524,"test":{"type":"BinaryExpression","start":16318,"end":16375,"left":{"type":"CallExpression","start":16318,"end":16341,"callee":{"type":"MemberExpression","start":16318,"end":16339,"object":{"type":"Identifier","start":16318,"end":16327,"name":"transUnit"},"property":{"type":"Identifier","start":16328,"end":16339,"name":"description"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"!==","right":{"type":"CallExpression","start":16346,"end":16375,"callee":{"type":"MemberExpression","start":16346,"end":16373,"object":{"type":"Identifier","start":16346,"end":16361,"name":"masterTransUnit"},"property":{"type":"Identifier","start":16362,"end":16373,"name":"description"},"computed":false,"optional":false},"arguments":[],"optional":false}},"consequent":{"type":"BlockStatement","start":16377,"end":16524,"body":[{"type":"ExpressionStatement","start":16404,"end":16460,"expression":{"type":"CallExpression","start":16404,"end":16459,"callee":{"type":"MemberExpression","start":16404,"end":16428,"object":{"type":"Identifier","start":16404,"end":16413,"name":"transUnit"},"property":{"type":"Identifier","start":16414,"end":16428,"name":"setDescription"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":16429,"end":16458,"callee":{"type":"MemberExpression","start":16429,"end":16456,"object":{"type":"Identifier","start":16429,"end":16444,"name":"masterTransUnit"},"property":{"type":"Identifier","start":16445,"end":16456,"name":"description"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":16486,"end":16501,"expression":{"type":"AssignmentExpression","start":16486,"end":16500,"operator":"=","left":{"type":"Identifier","start":16486,"end":16493,"name":"changed"},"right":{"type":"Literal","start":16496,"end":16500,"value":true,"raw":"true"}}}]},"alternate":null},{"type":"IfStatement","start":16546,"end":16740,"test":{"type":"BinaryExpression","start":16550,"end":16599,"left":{"type":"CallExpression","start":16550,"end":16569,"callee":{"type":"MemberExpression","start":16550,"end":16567,"object":{"type":"Identifier","start":16550,"end":16559,"name":"transUnit"},"property":{"type":"Identifier","start":16560,"end":16567,"name":"meaning"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"!==","right":{"type":"CallExpression","start":16574,"end":16599,"callee":{"type":"MemberExpression","start":16574,"end":16597,"object":{"type":"Identifier","start":16574,"end":16589,"name":"masterTransUnit"},"property":{"type":"Identifier","start":16590,"end":16597,"name":"meaning"},"computed":false,"optional":false},"arguments":[],"optional":false}},"consequent":{"type":"BlockStatement","start":16601,"end":16740,"body":[{"type":"ExpressionStatement","start":16628,"end":16676,"expression":{"type":"CallExpression","start":16628,"end":16675,"callee":{"type":"MemberExpression","start":16628,"end":16648,"object":{"type":"Identifier","start":16628,"end":16637,"name":"transUnit"},"property":{"type":"Identifier","start":16638,"end":16648,"name":"setMeaning"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":16649,"end":16674,"callee":{"type":"MemberExpression","start":16649,"end":16672,"object":{"type":"Identifier","start":16649,"end":16664,"name":"masterTransUnit"},"property":{"type":"Identifier","start":16665,"end":16672,"name":"meaning"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":16702,"end":16717,"expression":{"type":"AssignmentExpression","start":16702,"end":16716,"operator":"=","left":{"type":"Identifier","start":16702,"end":16709,"name":"changed"},"right":{"type":"Literal","start":16712,"end":16716,"value":true,"raw":"true"}}}]},"alternate":null},{"type":"IfStatement","start":16762,"end":16860,"test":{"type":"Identifier","start":16766,"end":16773,"name":"changed"},"consequent":{"type":"BlockStatement","start":16775,"end":16860,"body":[{"type":"ExpressionStatement","start":16802,"end":16837,"expression":{"type":"UpdateExpression","start":16802,"end":16836,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":16802,"end":16834,"name":"correctDescriptionOrMeaningCount"}}}]},"alternate":null}]},"alternate":null},{"type":"ExpressionStatement","start":16897,"end":16927,"expression":{"type":"AssignmentExpression","start":16897,"end":16926,"operator":"=","left":{"type":"Identifier","start":16897,"end":16914,"name":"lastProcessedUnit"},"right":{"type":"Identifier","start":16917,"end":16926,"name":"transUnit"}}}]}}]}}],"optional":false}},{"type":"IfStatement","start":16965,"end":17094,"test":{"type":"BinaryExpression","start":16969,"end":16981,"left":{"type":"Identifier","start":16969,"end":16977,"name":"newCount"},"operator":">","right":{"type":"Literal","start":16980,"end":16981,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":16983,"end":17094,"body":[{"type":"ExpressionStatement","start":16998,"end":17083,"expression":{"type":"CallExpression","start":16998,"end":17082,"callee":{"type":"MemberExpression","start":16998,"end":17021,"object":{"type":"MemberExpression","start":16998,"end":17016,"object":{"type":"ThisExpression","start":16998,"end":17002},"property":{"type":"Identifier","start":17003,"end":17016,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":17017,"end":17021,"name":"warn"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":17022,"end":17065,"value":"merged %s trans-units from master to \"%s\"","raw":"'merged %s trans-units from master to \"%s\"'"},{"type":"Identifier","start":17067,"end":17075,"name":"newCount"},{"type":"Identifier","start":17077,"end":17081,"name":"lang"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":17104,"end":17283,"test":{"type":"BinaryExpression","start":17108,"end":17137,"left":{"type":"Identifier","start":17108,"end":17133,"name":"correctSourceContentCount"},"operator":">","right":{"type":"Literal","start":17136,"end":17137,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":17139,"end":17283,"body":[{"type":"ExpressionStatement","start":17154,"end":17272,"expression":{"type":"CallExpression","start":17154,"end":17271,"callee":{"type":"MemberExpression","start":17154,"end":17177,"object":{"type":"MemberExpression","start":17154,"end":17172,"object":{"type":"ThisExpression","start":17154,"end":17158},"property":{"type":"Identifier","start":17159,"end":17172,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":17173,"end":17177,"name":"warn"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":17178,"end":17237,"value":"transferred %s changed source content from master to \"%s\"","raw":"'transferred %s changed source content from master to \"%s\"'"},{"type":"Identifier","start":17239,"end":17264,"name":"correctSourceContentCount"},{"type":"Identifier","start":17266,"end":17270,"name":"lang"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":17293,"end":17459,"test":{"type":"BinaryExpression","start":17297,"end":17322,"left":{"type":"Identifier","start":17297,"end":17318,"name":"correctSourceRefCount"},"operator":">","right":{"type":"Literal","start":17321,"end":17322,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":17324,"end":17459,"body":[{"type":"ExpressionStatement","start":17339,"end":17448,"expression":{"type":"CallExpression","start":17339,"end":17447,"callee":{"type":"MemberExpression","start":17339,"end":17362,"object":{"type":"MemberExpression","start":17339,"end":17357,"object":{"type":"ThisExpression","start":17339,"end":17343},"property":{"type":"Identifier","start":17344,"end":17357,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":17358,"end":17362,"name":"warn"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":17363,"end":17417,"value":"transferred %s source references from master to \"%s\"","raw":"'transferred %s source references from master to \"%s\"'"},{"type":"Identifier","start":17419,"end":17440,"name":"correctSourceRefCount"},{"type":"Identifier","start":17442,"end":17446,"name":"lang"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":17469,"end":17599,"test":{"type":"BinaryExpression","start":17473,"end":17491,"left":{"type":"Identifier","start":17473,"end":17487,"name":"idChangedCount"},"operator":">","right":{"type":"Literal","start":17490,"end":17491,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":17493,"end":17599,"body":[{"type":"ExpressionStatement","start":17508,"end":17588,"expression":{"type":"CallExpression","start":17508,"end":17587,"callee":{"type":"MemberExpression","start":17508,"end":17531,"object":{"type":"MemberExpression","start":17508,"end":17526,"object":{"type":"ThisExpression","start":17508,"end":17512},"property":{"type":"Identifier","start":17513,"end":17526,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":17527,"end":17531,"name":"warn"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":17532,"end":17564,"value":"found %s changed id's in \"%s\"","raw":"'found %s changed id\\'s in \"%s\"'"},{"type":"Identifier","start":17566,"end":17580,"name":"idChangedCount"},{"type":"Identifier","start":17582,"end":17586,"name":"lang"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":17609,"end":17809,"test":{"type":"BinaryExpression","start":17613,"end":17649,"left":{"type":"Identifier","start":17613,"end":17645,"name":"correctDescriptionOrMeaningCount"},"operator":">","right":{"type":"Literal","start":17648,"end":17649,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":17651,"end":17809,"body":[{"type":"ExpressionStatement","start":17666,"end":17798,"expression":{"type":"CallExpression","start":17666,"end":17797,"callee":{"type":"MemberExpression","start":17666,"end":17689,"object":{"type":"MemberExpression","start":17666,"end":17684,"object":{"type":"ThisExpression","start":17666,"end":17670},"property":{"type":"Identifier","start":17671,"end":17684,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":17685,"end":17689,"name":"warn"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":17690,"end":17756,"value":"transferred %s changed descriptions/meanings from master to \"%s\"","raw":"'transferred %s changed descriptions/meanings from master to \"%s\"'"},{"type":"Identifier","start":17758,"end":17790,"name":"correctDescriptionOrMeaningCount"},{"type":"Identifier","start":17792,"end":17796,"name":"lang"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":17875,"end":17895,"declarations":[{"type":"VariableDeclarator","start":17879,"end":17894,"id":{"type":"Identifier","start":17879,"end":17890,"name":"removeCount"},"init":{"type":"Literal","start":17893,"end":17894,"value":0,"raw":"0"}}],"kind":"let"},{"type":"ExpressionStatement","start":17905,"end":18326,"expression":{"type":"CallExpression","start":17905,"end":18325,"callee":{"type":"MemberExpression","start":17905,"end":17950,"object":{"type":"Identifier","start":17905,"end":17933,"name":"languageSpecificMessagesFile"},"property":{"type":"Identifier","start":17934,"end":17950,"name":"forEachTransUnit"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":17951,"end":18324,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17952,"end":17961,"name":"transUnit"}],"body":{"type":"BlockStatement","start":17966,"end":18324,"body":[{"type":"VariableDeclaration","start":17981,"end":18066,"declarations":[{"type":"VariableDeclarator","start":17987,"end":18065,"id":{"type":"Identifier","start":17987,"end":18001,"name":"existsInMaster"},"init":{"type":"UnaryExpression","start":18004,"end":18065,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":18005,"end":18065,"callee":{"type":"Identifier","start":18005,"end":18022,"name":"isNullOrUndefined"},"arguments":[{"type":"CallExpression","start":18023,"end":18064,"callee":{"type":"MemberExpression","start":18023,"end":18050,"object":{"type":"MemberExpression","start":18023,"end":18034,"object":{"type":"ThisExpression","start":18023,"end":18027},"property":{"type":"Identifier","start":18028,"end":18034,"name":"master"},"computed":false,"optional":false},"property":{"type":"Identifier","start":18035,"end":18050,"name":"transUnitWithId"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":18051,"end":18063,"object":{"type":"Identifier","start":18051,"end":18060,"name":"transUnit"},"property":{"type":"Identifier","start":18061,"end":18063,"name":"id"},"computed":false,"optional":false}],"optional":false}],"optional":false}}}],"kind":"const"},{"type":"IfStatement","start":18080,"end":18313,"test":{"type":"UnaryExpression","start":18084,"end":18099,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":18085,"end":18099,"name":"existsInMaster"}},"consequent":{"type":"BlockStatement","start":18101,"end":18313,"body":[{"type":"IfStatement","start":18120,"end":18266,"test":{"type":"CallExpression","start":18124,"end":18157,"callee":{"type":"MemberExpression","start":18124,"end":18155,"object":{"type":"MemberExpression","start":18124,"end":18139,"object":{"type":"ThisExpression","start":18124,"end":18128},"property":{"type":"Identifier","start":18129,"end":18139,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":18140,"end":18155,"name":"removeUnusedIds"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":18159,"end":18266,"body":[{"type":"ExpressionStatement","start":18182,"end":18247,"expression":{"type":"CallExpression","start":18182,"end":18246,"callee":{"type":"MemberExpression","start":18182,"end":18232,"object":{"type":"Identifier","start":18182,"end":18210,"name":"languageSpecificMessagesFile"},"property":{"type":"Identifier","start":18211,"end":18232,"name":"removeTransUnitWithId"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":18233,"end":18245,"object":{"type":"Identifier","start":18233,"end":18242,"name":"transUnit"},"property":{"type":"Identifier","start":18243,"end":18245,"name":"id"},"computed":false,"optional":false}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":18284,"end":18298,"expression":{"type":"UpdateExpression","start":18284,"end":18297,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":18284,"end":18295,"name":"removeCount"}}}]},"alternate":null}]}}],"optional":false}},{"type":"IfStatement","start":18336,"end":18711,"test":{"type":"BinaryExpression","start":18340,"end":18355,"left":{"type":"Identifier","start":18340,"end":18351,"name":"removeCount"},"operator":">","right":{"type":"Literal","start":18354,"end":18355,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":18357,"end":18711,"body":[{"type":"IfStatement","start":18372,"end":18700,"test":{"type":"CallExpression","start":18376,"end":18409,"callee":{"type":"MemberExpression","start":18376,"end":18407,"object":{"type":"MemberExpression","start":18376,"end":18391,"object":{"type":"ThisExpression","start":18376,"end":18380},"property":{"type":"Identifier","start":18381,"end":18391,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":18392,"end":18407,"name":"removeUnusedIds"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":18411,"end":18529,"body":[{"type":"ExpressionStatement","start":18430,"end":18514,"expression":{"type":"CallExpression","start":18430,"end":18513,"callee":{"type":"MemberExpression","start":18430,"end":18453,"object":{"type":"MemberExpression","start":18430,"end":18448,"object":{"type":"ThisExpression","start":18430,"end":18434},"property":{"type":"Identifier","start":18435,"end":18448,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":18449,"end":18453,"name":"warn"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":18454,"end":18493,"value":"removed %s unused trans-units in \"%s\"","raw":"'removed %s unused trans-units in \"%s\"'"},{"type":"Identifier","start":18495,"end":18506,"name":"removeCount"},{"type":"Identifier","start":18508,"end":18512,"name":"lang"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":18548,"end":18700,"body":[{"type":"ExpressionStatement","start":18567,"end":18685,"expression":{"type":"CallExpression","start":18567,"end":18684,"callee":{"type":"MemberExpression","start":18567,"end":18590,"object":{"type":"MemberExpression","start":18567,"end":18585,"object":{"type":"ThisExpression","start":18567,"end":18571},"property":{"type":"Identifier","start":18572,"end":18585,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":18586,"end":18590,"name":"warn"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":18591,"end":18664,"value":"keeping %s unused trans-units in \"%s\", because removeUnused is disabled","raw":"'keeping %s unused trans-units in \"%s\", because removeUnused is disabled'"},{"type":"Identifier","start":18666,"end":18677,"name":"removeCount"},{"type":"Identifier","start":18679,"end":18683,"name":"lang"}],"optional":false}}]}}]},"alternate":null},{"type":"IfStatement","start":18721,"end":19690,"test":{"type":"LogicalExpression","start":18725,"end":18881,"left":{"type":"LogicalExpression","start":18725,"end":18839,"left":{"type":"LogicalExpression","start":18725,"end":18795,"left":{"type":"LogicalExpression","start":18725,"end":18760,"left":{"type":"BinaryExpression","start":18725,"end":18739,"left":{"type":"Identifier","start":18725,"end":18733,"name":"newCount"},"operator":"===","right":{"type":"Literal","start":18738,"end":18739,"value":0,"raw":"0"}},"operator":"&&","right":{"type":"BinaryExpression","start":18743,"end":18760,"left":{"type":"Identifier","start":18743,"end":18754,"name":"removeCount"},"operator":"===","right":{"type":"Literal","start":18759,"end":18760,"value":0,"raw":"0"}}},"operator":"&&","right":{"type":"BinaryExpression","start":18764,"end":18795,"left":{"type":"Identifier","start":18764,"end":18789,"name":"correctSourceContentCount"},"operator":"===","right":{"type":"Literal","start":18794,"end":18795,"value":0,"raw":"0"}}},"operator":"&&","right":{"type":"BinaryExpression","start":18812,"end":18839,"left":{"type":"Identifier","start":18812,"end":18833,"name":"correctSourceRefCount"},"operator":"===","right":{"type":"Literal","start":18838,"end":18839,"value":0,"raw":"0"}}},"operator":"&&","right":{"type":"BinaryExpression","start":18843,"end":18881,"left":{"type":"Identifier","start":18843,"end":18875,"name":"correctDescriptionOrMeaningCount"},"operator":"===","right":{"type":"Literal","start":18880,"end":18881,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":18883,"end":19001,"body":[{"type":"ExpressionStatement","start":18898,"end":18960,"expression":{"type":"CallExpression","start":18898,"end":18959,"callee":{"type":"MemberExpression","start":18898,"end":18921,"object":{"type":"MemberExpression","start":18898,"end":18916,"object":{"type":"ThisExpression","start":18898,"end":18902},"property":{"type":"Identifier","start":18903,"end":18916,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":18917,"end":18921,"name":"info"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":18922,"end":18952,"value":"file for \"%s\" was up to date","raw":"'file for \"%s\" was up to date'"},{"type":"Identifier","start":18954,"end":18958,"name":"lang"}],"optional":false}},{"type":"ReturnStatement","start":18974,"end":18990,"argument":{"type":"CallExpression","start":18981,"end":18989,"callee":{"type":"Identifier","start":18981,"end":18983,"name":"of"},"arguments":[{"type":"Literal","start":18984,"end":18988,"value":null,"raw":"null"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":19016,"end":19690,"body":[{"type":"ReturnStatement","start":19031,"end":19679,"argument":{"type":"CallExpression","start":19038,"end":19678,"callee":{"type":"MemberExpression","start":19038,"end":19145,"object":{"type":"CallExpression","start":19038,"end":19122,"callee":{"type":"MemberExpression","start":19038,"end":19056,"object":{"type":"ThisExpression","start":19038,"end":19042},"property":{"type":"Identifier","start":19043,"end":19056,"name":"autoTranslate"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":19057,"end":19085,"callee":{"type":"MemberExpression","start":19057,"end":19083,"object":{"type":"MemberExpression","start":19057,"end":19068,"object":{"type":"ThisExpression","start":19057,"end":19061},"property":{"type":"Identifier","start":19062,"end":19068,"name":"master"},"computed":false,"optional":false},"property":{"type":"Identifier","start":19069,"end":19083,"name":"sourceLanguage"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"Identifier","start":19087,"end":19091,"name":"lang"},{"type":"Identifier","start":19093,"end":19121,"name":"languageSpecificMessagesFile"}],"optional":false},"property":{"type":"Identifier","start":19141,"end":19145,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":19146,"end":19677,"callee":{"type":"Identifier","start":19146,"end":19149,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":19150,"end":19676,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":19156,"end":19676,"body":[{"type":"ExpressionStatement","start":19212,"end":19311,"expression":{"type":"CallExpression","start":19212,"end":19310,"callee":{"type":"MemberExpression","start":19212,"end":19246,"object":{"type":"Identifier","start":19212,"end":19241,"name":"TranslationMessagesFileReader"},"property":{"type":"Identifier","start":19242,"end":19246,"name":"save"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":19247,"end":19275,"name":"languageSpecificMessagesFile"},{"type":"CallExpression","start":19277,"end":19309,"callee":{"type":"MemberExpression","start":19277,"end":19307,"object":{"type":"MemberExpression","start":19277,"end":19292,"object":{"type":"ThisExpression","start":19277,"end":19281},"property":{"type":"Identifier","start":19282,"end":19292,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":19293,"end":19307,"name":"beautifyOutput"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":19329,"end":19428,"expression":{"type":"CallExpression","start":19329,"end":19427,"callee":{"type":"MemberExpression","start":19329,"end":19352,"object":{"type":"MemberExpression","start":19329,"end":19347,"object":{"type":"ThisExpression","start":19329,"end":19333},"property":{"type":"Identifier","start":19334,"end":19347,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":19348,"end":19352,"name":"info"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":19353,"end":19397,"value":"updated file \"%s\" for target-language=\"%s\"","raw":"'updated file \"%s\" for target-language=\"%s\"'"},{"type":"Identifier","start":19399,"end":19420,"name":"languageXliffFilePath"},{"type":"Identifier","start":19422,"end":19426,"name":"lang"}],"optional":false}},{"type":"IfStatement","start":19446,"end":19631,"test":{"type":"LogicalExpression","start":19450,"end":19480,"left":{"type":"BinaryExpression","start":19450,"end":19462,"left":{"type":"Identifier","start":19450,"end":19458,"name":"newCount"},"operator":">","right":{"type":"Literal","start":19461,"end":19462,"value":0,"raw":"0"}},"operator":"&&","right":{"type":"UnaryExpression","start":19466,"end":19480,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":19467,"end":19480,"name":"isDefaultLang"}}},"consequent":{"type":"BlockStatement","start":19482,"end":19631,"body":[{"type":"ExpressionStatement","start":19505,"end":19612,"expression":{"type":"CallExpression","start":19505,"end":19611,"callee":{"type":"MemberExpression","start":19505,"end":19528,"object":{"type":"MemberExpression","start":19505,"end":19523,"object":{"type":"ThisExpression","start":19505,"end":19509},"property":{"type":"Identifier","start":19510,"end":19523,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":19524,"end":19528,"name":"warn"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":19529,"end":19581,"value":"please translate file \"%s\" to target-language=\"%s\"","raw":"'please translate file \"%s\" to target-language=\"%s\"'"},{"type":"Identifier","start":19583,"end":19604,"name":"languageXliffFilePath"},{"type":"Identifier","start":19606,"end":19610,"name":"lang"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":19649,"end":19661,"argument":{"type":"Literal","start":19656,"end":19660,"value":null,"raw":"null"}}]}}],"optional":false}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":20087,"end":21047,"static":false,"computed":false,"key":{"type":"Identifier","start":20087,"end":20107,"name":"processChangedIdUnit"},"kind":"method","value":{"type":"FunctionExpression","start":20107,"end":21047,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":20108,"end":20123,"name":"masterTransUnit"},{"type":"Identifier","start":20125,"end":20153,"name":"languageSpecificMessagesFile"},{"type":"Identifier","start":20155,"end":20172,"name":"lastProcessedUnit"}],"body":{"type":"BlockStatement","start":20174,"end":21047,"body":[{"type":"VariableDeclaration","start":20185,"end":20213,"declarations":[{"type":"VariableDeclarator","start":20189,"end":20212,"id":{"type":"Identifier","start":20189,"end":20205,"name":"changedTransUnit"},"init":{"type":"Literal","start":20208,"end":20212,"value":null,"raw":"null"}}],"kind":"let"},{"type":"ExpressionStatement","start":20223,"end":20459,"expression":{"type":"CallExpression","start":20223,"end":20458,"callee":{"type":"MemberExpression","start":20223,"end":20268,"object":{"type":"Identifier","start":20223,"end":20251,"name":"languageSpecificMessagesFile"},"property":{"type":"Identifier","start":20252,"end":20268,"name":"forEachTransUnit"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":20269,"end":20457,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":20270,"end":20287,"name":"languageTransUnit"}],"body":{"type":"BlockStatement","start":20292,"end":20457,"body":[{"type":"IfStatement","start":20307,"end":20446,"test":{"type":"CallExpression","start":20311,"end":20373,"callee":{"type":"MemberExpression","start":20311,"end":20337,"object":{"type":"ThisExpression","start":20311,"end":20315},"property":{"type":"Identifier","start":20316,"end":20337,"name":"areSourcesNearlyEqual"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20338,"end":20355,"name":"languageTransUnit"},{"type":"Identifier","start":20357,"end":20372,"name":"masterTransUnit"}],"optional":false},"consequent":{"type":"BlockStatement","start":20375,"end":20446,"body":[{"type":"ExpressionStatement","start":20394,"end":20431,"expression":{"type":"AssignmentExpression","start":20394,"end":20430,"operator":"=","left":{"type":"Identifier","start":20394,"end":20410,"name":"changedTransUnit"},"right":{"type":"Identifier","start":20413,"end":20430,"name":"languageTransUnit"}}}]},"alternate":null}]}}],"optional":false}},{"type":"IfStatement","start":20469,"end":20530,"test":{"type":"UnaryExpression","start":20473,"end":20490,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":20474,"end":20490,"name":"changedTransUnit"}},"consequent":{"type":"BlockStatement","start":20492,"end":20530,"body":[{"type":"ReturnStatement","start":20507,"end":20519,"argument":{"type":"Literal","start":20514,"end":20518,"value":null,"raw":"null"}}]},"alternate":null},{"type":"VariableDeclaration","start":20540,"end":20710,"declarations":[{"type":"VariableDeclarator","start":20546,"end":20709,"id":{"type":"Identifier","start":20546,"end":20561,"name":"mergedTransUnit"},"init":{"type":"CallExpression","start":20564,"end":20709,"callee":{"type":"MemberExpression","start":20564,"end":20611,"object":{"type":"Identifier","start":20564,"end":20592,"name":"languageSpecificMessagesFile"},"property":{"type":"Identifier","start":20593,"end":20611,"name":"importNewTransUnit"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20612,"end":20627,"name":"masterTransUnit"},{"type":"Literal","start":20629,"end":20634,"value":false,"raw":"false"},{"type":"Literal","start":20636,"end":20641,"value":false,"raw":"false"},{"type":"ConditionalExpression","start":20643,"end":20708,"test":{"type":"CallExpression","start":20644,"end":20675,"callee":{"type":"MemberExpression","start":20644,"end":20673,"object":{"type":"MemberExpression","start":20644,"end":20659,"object":{"type":"ThisExpression","start":20644,"end":20648},"property":{"type":"Identifier","start":20649,"end":20659,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":20660,"end":20673,"name":"preserveOrder"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"Identifier","start":20679,"end":20696,"name":"lastProcessedUnit"},"alternate":{"type":"Identifier","start":20699,"end":20708,"name":"undefined"}}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":20720,"end":20779,"declarations":[{"type":"VariableDeclarator","start":20726,"end":20778,"id":{"type":"Identifier","start":20726,"end":20743,"name":"translatedContent"},"init":{"type":"CallExpression","start":20746,"end":20778,"callee":{"type":"MemberExpression","start":20746,"end":20776,"object":{"type":"Identifier","start":20746,"end":20762,"name":"changedTransUnit"},"property":{"type":"Identifier","start":20763,"end":20776,"name":"targetContent"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":20789,"end":21007,"test":{"type":"Identifier","start":20793,"end":20810,"name":"translatedContent"},"consequent":{"type":"BlockStatement","start":20812,"end":21007,"body":[{"type":"ExpressionStatement","start":20888,"end":20933,"expression":{"type":"CallExpression","start":20888,"end":20932,"callee":{"type":"MemberExpression","start":20888,"end":20913,"object":{"type":"Identifier","start":20888,"end":20903,"name":"mergedTransUnit"},"property":{"type":"Identifier","start":20904,"end":20913,"name":"translate"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20914,"end":20931,"name":"translatedContent"}],"optional":false}},{"type":"ExpressionStatement","start":20947,"end":20996,"expression":{"type":"CallExpression","start":20947,"end":20995,"callee":{"type":"MemberExpression","start":20947,"end":20977,"object":{"type":"Identifier","start":20947,"end":20962,"name":"mergedTransUnit"},"property":{"type":"Identifier","start":20963,"end":20977,"name":"setTargetState"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":20978,"end":20994,"name":"STATE_TRANSLATED"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":21017,"end":21040,"argument":{"type":"Identifier","start":21024,"end":21039,"name":"mergedTransUnit"}}]}}},{"type":"MethodDefinition","start":21199,"end":22408,"static":false,"computed":false,"key":{"type":"Identifier","start":21199,"end":21220,"name":"areSourcesNearlyEqual"},"kind":"method","value":{"type":"FunctionExpression","start":21220,"end":22408,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":21221,"end":21224,"name":"tu1"},{"type":"Identifier","start":21226,"end":21229,"name":"tu2"}],"body":{"type":"BlockStatement","start":21231,"end":22408,"body":[{"type":"IfStatement","start":21242,"end":21317,"test":{"type":"LogicalExpression","start":21246,"end":21276,"left":{"type":"LogicalExpression","start":21247,"end":21258,"left":{"type":"Identifier","start":21247,"end":21250,"name":"tu1"},"operator":"&&","right":{"type":"UnaryExpression","start":21254,"end":21258,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":21255,"end":21258,"name":"tu2"}}},"operator":"||","right":{"type":"LogicalExpression","start":21264,"end":21275,"left":{"type":"Identifier","start":21264,"end":21267,"name":"tu2"},"operator":"&&","right":{"type":"UnaryExpression","start":21271,"end":21275,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":21272,"end":21275,"name":"tu1"}}}},"consequent":{"type":"BlockStatement","start":21278,"end":21317,"body":[{"type":"ReturnStatement","start":21293,"end":21306,"argument":{"type":"Literal","start":21300,"end":21305,"value":false,"raw":"false"}}]},"alternate":null},{"type":"VariableDeclaration","start":21327,"end":21379,"declarations":[{"type":"VariableDeclarator","start":21333,"end":21378,"id":{"type":"Identifier","start":21333,"end":21346,"name":"tu1Normalized"},"init":{"type":"CallExpression","start":21349,"end":21378,"callee":{"type":"MemberExpression","start":21349,"end":21376,"object":{"type":"Identifier","start":21349,"end":21352,"name":"tu1"},"property":{"type":"Identifier","start":21353,"end":21376,"name":"sourceContentNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":21389,"end":21441,"declarations":[{"type":"VariableDeclarator","start":21395,"end":21440,"id":{"type":"Identifier","start":21395,"end":21408,"name":"tu2Normalized"},"init":{"type":"CallExpression","start":21411,"end":21440,"callee":{"type":"MemberExpression","start":21411,"end":21438,"object":{"type":"Identifier","start":21411,"end":21414,"name":"tu2"},"property":{"type":"Identifier","start":21415,"end":21438,"name":"sourceContentNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":21451,"end":21876,"test":{"type":"CallExpression","start":21455,"end":21483,"callee":{"type":"MemberExpression","start":21455,"end":21481,"object":{"type":"Identifier","start":21455,"end":21468,"name":"tu1Normalized"},"property":{"type":"Identifier","start":21469,"end":21481,"name":"isICUMessage"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":21485,"end":21876,"body":[{"type":"IfStatement","start":21500,"end":21865,"test":{"type":"CallExpression","start":21504,"end":21532,"callee":{"type":"MemberExpression","start":21504,"end":21530,"object":{"type":"Identifier","start":21504,"end":21517,"name":"tu2Normalized"},"property":{"type":"Identifier","start":21518,"end":21530,"name":"isICUMessage"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":21534,"end":21799,"body":[{"type":"VariableDeclaration","start":21553,"end":21630,"declarations":[{"type":"VariableDeclarator","start":21559,"end":21629,"id":{"type":"Identifier","start":21559,"end":21573,"name":"icu1Normalized"},"init":{"type":"CallExpression","start":21576,"end":21629,"callee":{"type":"MemberExpression","start":21576,"end":21627,"object":{"type":"CallExpression","start":21576,"end":21622,"callee":{"type":"MemberExpression","start":21576,"end":21620,"object":{"type":"CallExpression","start":21576,"end":21605,"callee":{"type":"MemberExpression","start":21576,"end":21603,"object":{"type":"Identifier","start":21576,"end":21589,"name":"tu1Normalized"},"property":{"type":"Identifier","start":21590,"end":21603,"name":"getICUMessage"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":21606,"end":21620,"name":"asNativeString"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":21623,"end":21627,"name":"trim"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":21648,"end":21725,"declarations":[{"type":"VariableDeclarator","start":21654,"end":21724,"id":{"type":"Identifier","start":21654,"end":21668,"name":"icu2Normalized"},"init":{"type":"CallExpression","start":21671,"end":21724,"callee":{"type":"MemberExpression","start":21671,"end":21722,"object":{"type":"CallExpression","start":21671,"end":21717,"callee":{"type":"MemberExpression","start":21671,"end":21715,"object":{"type":"CallExpression","start":21671,"end":21700,"callee":{"type":"MemberExpression","start":21671,"end":21698,"object":{"type":"Identifier","start":21671,"end":21684,"name":"tu2Normalized"},"property":{"type":"Identifier","start":21685,"end":21698,"name":"getICUMessage"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":21701,"end":21715,"name":"asNativeString"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":21718,"end":21722,"name":"trim"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":21743,"end":21784,"argument":{"type":"BinaryExpression","start":21750,"end":21783,"left":{"type":"Identifier","start":21750,"end":21764,"name":"icu1Normalized"},"operator":"===","right":{"type":"Identifier","start":21769,"end":21783,"name":"icu2Normalized"}}}]},"alternate":{"type":"BlockStatement","start":21818,"end":21865,"body":[{"type":"ReturnStatement","start":21837,"end":21850,"argument":{"type":"Literal","start":21844,"end":21849,"value":false,"raw":"false"}}]}}]},"alternate":null},{"type":"IfStatement","start":21886,"end":22158,"test":{"type":"CallExpression","start":21890,"end":21927,"callee":{"type":"MemberExpression","start":21890,"end":21925,"object":{"type":"Identifier","start":21890,"end":21903,"name":"tu1Normalized"},"property":{"type":"Identifier","start":21904,"end":21925,"name":"containsICUMessageRef"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":21929,"end":22158,"body":[{"type":"VariableDeclaration","start":21944,"end":22008,"declarations":[{"type":"VariableDeclarator","start":21950,"end":22007,"id":{"type":"Identifier","start":21950,"end":21967,"name":"icuref1Normalized"},"init":{"type":"CallExpression","start":21970,"end":22007,"callee":{"type":"MemberExpression","start":21970,"end":22005,"object":{"type":"CallExpression","start":21970,"end":22000,"callee":{"type":"MemberExpression","start":21970,"end":21998,"object":{"type":"Identifier","start":21970,"end":21983,"name":"tu1Normalized"},"property":{"type":"Identifier","start":21984,"end":21998,"name":"asNativeString"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":22001,"end":22005,"name":"trim"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":22022,"end":22086,"declarations":[{"type":"VariableDeclarator","start":22028,"end":22085,"id":{"type":"Identifier","start":22028,"end":22045,"name":"icuref2Normalized"},"init":{"type":"CallExpression","start":22048,"end":22085,"callee":{"type":"MemberExpression","start":22048,"end":22083,"object":{"type":"CallExpression","start":22048,"end":22078,"callee":{"type":"MemberExpression","start":22048,"end":22076,"object":{"type":"Identifier","start":22048,"end":22061,"name":"tu2Normalized"},"property":{"type":"Identifier","start":22062,"end":22076,"name":"asNativeString"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":22079,"end":22083,"name":"trim"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":22100,"end":22147,"argument":{"type":"BinaryExpression","start":22107,"end":22146,"left":{"type":"Identifier","start":22107,"end":22124,"name":"icuref1Normalized"},"operator":"===","right":{"type":"Identifier","start":22129,"end":22146,"name":"icuref2Normalized"}}}]},"alternate":null},{"type":"VariableDeclaration","start":22168,"end":22256,"declarations":[{"type":"VariableDeclarator","start":22174,"end":22255,"id":{"type":"Identifier","start":22174,"end":22186,"name":"s1Normalized"},"init":{"type":"CallExpression","start":22189,"end":22255,"callee":{"type":"MemberExpression","start":22189,"end":22253,"object":{"type":"CallExpression","start":22189,"end":22248,"callee":{"type":"MemberExpression","start":22189,"end":22218,"object":{"type":"Identifier","start":22189,"end":22202,"name":"tu1Normalized"},"property":{"type":"Identifier","start":22203,"end":22218,"name":"asDisplayString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22219,"end":22247,"name":"NORMALIZATION_FORMAT_DEFAULT"}],"optional":false},"property":{"type":"Identifier","start":22249,"end":22253,"name":"trim"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":22266,"end":22354,"declarations":[{"type":"VariableDeclarator","start":22272,"end":22353,"id":{"type":"Identifier","start":22272,"end":22284,"name":"s2Normalized"},"init":{"type":"CallExpression","start":22287,"end":22353,"callee":{"type":"MemberExpression","start":22287,"end":22351,"object":{"type":"CallExpression","start":22287,"end":22346,"callee":{"type":"MemberExpression","start":22287,"end":22316,"object":{"type":"Identifier","start":22287,"end":22300,"name":"tu2Normalized"},"property":{"type":"Identifier","start":22301,"end":22316,"name":"asDisplayString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":22317,"end":22345,"name":"NORMALIZATION_FORMAT_DEFAULT"}],"optional":false},"property":{"type":"Identifier","start":22347,"end":22351,"name":"trim"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":22364,"end":22401,"argument":{"type":"BinaryExpression","start":22371,"end":22400,"left":{"type":"Identifier","start":22371,"end":22383,"name":"s1Normalized"},"operator":"===","right":{"type":"Identifier","start":22388,"end":22400,"name":"s2Normalized"}}}]}}},{"type":"MethodDefinition","start":22414,"end":23287,"static":false,"computed":false,"key":{"type":"Identifier","start":22414,"end":22438,"name":"areSourceReferencesEqual"},"kind":"method","value":{"type":"FunctionExpression","start":22438,"end":23287,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":22439,"end":22443,"name":"ref1"},{"type":"Identifier","start":22445,"end":22449,"name":"ref2"}],"body":{"type":"BlockStatement","start":22451,"end":23287,"body":[{"type":"IfStatement","start":22462,"end":22617,"test":{"type":"LogicalExpression","start":22466,"end":22576,"left":{"type":"LogicalExpression","start":22467,"end":22518,"left":{"type":"CallExpression","start":22467,"end":22490,"callee":{"type":"Identifier","start":22467,"end":22484,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":22485,"end":22489,"name":"ref1"}],"optional":false},"operator":"&&","right":{"type":"UnaryExpression","start":22494,"end":22518,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":22495,"end":22518,"callee":{"type":"Identifier","start":22495,"end":22512,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":22513,"end":22517,"name":"ref2"}],"optional":false}}},"operator":"||","right":{"type":"LogicalExpression","start":22524,"end":22575,"left":{"type":"CallExpression","start":22524,"end":22547,"callee":{"type":"Identifier","start":22524,"end":22541,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":22542,"end":22546,"name":"ref2"}],"optional":false},"operator":"&&","right":{"type":"UnaryExpression","start":22551,"end":22575,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":22552,"end":22575,"callee":{"type":"Identifier","start":22552,"end":22569,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":22570,"end":22574,"name":"ref1"}],"optional":false}}}},"consequent":{"type":"BlockStatement","start":22578,"end":22617,"body":[{"type":"ReturnStatement","start":22593,"end":22606,"argument":{"type":"Literal","start":22600,"end":22605,"value":false,"raw":"false"}}]},"alternate":null},{"type":"IfStatement","start":22627,"end":22721,"test":{"type":"LogicalExpression","start":22631,"end":22681,"left":{"type":"CallExpression","start":22631,"end":22654,"callee":{"type":"Identifier","start":22631,"end":22648,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":22649,"end":22653,"name":"ref1"}],"optional":false},"operator":"&&","right":{"type":"CallExpression","start":22658,"end":22681,"callee":{"type":"Identifier","start":22658,"end":22675,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":22676,"end":22680,"name":"ref2"}],"optional":false}},"consequent":{"type":"BlockStatement","start":22683,"end":22721,"body":[{"type":"ReturnStatement","start":22698,"end":22710,"argument":{"type":"Literal","start":22705,"end":22709,"value":true,"raw":"true"}}]},"alternate":null},{"type":"VariableDeclaration","start":22796,"end":22819,"declarations":[{"type":"VariableDeclarator","start":22802,"end":22818,"id":{"type":"Identifier","start":22802,"end":22806,"name":"set1"},"init":{"type":"NewExpression","start":22809,"end":22818,"callee":{"type":"Identifier","start":22813,"end":22816,"name":"Set"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":22829,"end":22905,"expression":{"type":"CallExpression","start":22829,"end":22904,"callee":{"type":"MemberExpression","start":22829,"end":22841,"object":{"type":"Identifier","start":22829,"end":22833,"name":"ref1"},"property":{"type":"Identifier","start":22834,"end":22841,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":22842,"end":22903,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":22843,"end":22846,"name":"ref"}],"body":{"type":"BlockStatement","start":22851,"end":22903,"body":[{"type":"ExpressionStatement","start":22853,"end":22901,"expression":{"type":"CallExpression","start":22853,"end":22900,"callee":{"type":"MemberExpression","start":22853,"end":22861,"object":{"type":"Identifier","start":22853,"end":22857,"name":"set1"},"property":{"type":"Identifier","start":22858,"end":22861,"name":"add"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":22862,"end":22899,"left":{"type":"BinaryExpression","start":22862,"end":22882,"left":{"type":"MemberExpression","start":22862,"end":22876,"object":{"type":"Identifier","start":22862,"end":22865,"name":"ref"},"property":{"type":"Identifier","start":22866,"end":22876,"name":"sourcefile"},"computed":false,"optional":false},"operator":"+","right":{"type":"Literal","start":22879,"end":22882,"value":":","raw":"':'"}},"operator":"+","right":{"type":"MemberExpression","start":22885,"end":22899,"object":{"type":"Identifier","start":22885,"end":22888,"name":"ref"},"property":{"type":"Identifier","start":22889,"end":22899,"name":"linenumber"},"computed":false,"optional":false}}],"optional":false}}]}}],"optional":false}},{"type":"VariableDeclaration","start":22915,"end":22938,"declarations":[{"type":"VariableDeclarator","start":22921,"end":22937,"id":{"type":"Identifier","start":22921,"end":22925,"name":"set2"},"init":{"type":"NewExpression","start":22928,"end":22937,"callee":{"type":"Identifier","start":22932,"end":22935,"name":"Set"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":22948,"end":23024,"expression":{"type":"CallExpression","start":22948,"end":23023,"callee":{"type":"MemberExpression","start":22948,"end":22960,"object":{"type":"Identifier","start":22948,"end":22952,"name":"ref2"},"property":{"type":"Identifier","start":22953,"end":22960,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":22961,"end":23022,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":22962,"end":22965,"name":"ref"}],"body":{"type":"BlockStatement","start":22970,"end":23022,"body":[{"type":"ExpressionStatement","start":22972,"end":23020,"expression":{"type":"CallExpression","start":22972,"end":23019,"callee":{"type":"MemberExpression","start":22972,"end":22980,"object":{"type":"Identifier","start":22972,"end":22976,"name":"set2"},"property":{"type":"Identifier","start":22977,"end":22980,"name":"add"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":22981,"end":23018,"left":{"type":"BinaryExpression","start":22981,"end":23001,"left":{"type":"MemberExpression","start":22981,"end":22995,"object":{"type":"Identifier","start":22981,"end":22984,"name":"ref"},"property":{"type":"Identifier","start":22985,"end":22995,"name":"sourcefile"},"computed":false,"optional":false},"operator":"+","right":{"type":"Literal","start":22998,"end":23001,"value":":","raw":"':'"}},"operator":"+","right":{"type":"MemberExpression","start":23004,"end":23018,"object":{"type":"Identifier","start":23004,"end":23007,"name":"ref"},"property":{"type":"Identifier","start":23008,"end":23018,"name":"linenumber"},"computed":false,"optional":false}}],"optional":false}}]}}],"optional":false}},{"type":"IfStatement","start":23034,"end":23102,"test":{"type":"BinaryExpression","start":23038,"end":23061,"left":{"type":"MemberExpression","start":23038,"end":23047,"object":{"type":"Identifier","start":23038,"end":23042,"name":"set1"},"property":{"type":"Identifier","start":23043,"end":23047,"name":"size"},"computed":false,"optional":false},"operator":"!==","right":{"type":"MemberExpression","start":23052,"end":23061,"object":{"type":"Identifier","start":23052,"end":23056,"name":"set2"},"property":{"type":"Identifier","start":23057,"end":23061,"name":"size"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":23063,"end":23102,"body":[{"type":"ReturnStatement","start":23078,"end":23091,"argument":{"type":"Literal","start":23085,"end":23090,"value":false,"raw":"false"}}]},"alternate":null},{"type":"VariableDeclaration","start":23112,"end":23129,"declarations":[{"type":"VariableDeclarator","start":23116,"end":23128,"id":{"type":"Identifier","start":23116,"end":23121,"name":"match"},"init":{"type":"Literal","start":23124,"end":23128,"value":true,"raw":"true"}}],"kind":"let"},{"type":"ExpressionStatement","start":23139,"end":23257,"expression":{"type":"CallExpression","start":23139,"end":23256,"callee":{"type":"MemberExpression","start":23139,"end":23151,"object":{"type":"Identifier","start":23139,"end":23143,"name":"set2"},"property":{"type":"Identifier","start":23144,"end":23151,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":23152,"end":23255,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23153,"end":23156,"name":"ref"}],"body":{"type":"BlockStatement","start":23161,"end":23255,"body":[{"type":"IfStatement","start":23176,"end":23244,"test":{"type":"UnaryExpression","start":23180,"end":23194,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":23181,"end":23194,"callee":{"type":"MemberExpression","start":23181,"end":23189,"object":{"type":"Identifier","start":23181,"end":23185,"name":"set1"},"property":{"type":"Identifier","start":23186,"end":23189,"name":"has"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":23190,"end":23193,"name":"ref"}],"optional":false}},"consequent":{"type":"BlockStatement","start":23196,"end":23244,"body":[{"type":"ExpressionStatement","start":23215,"end":23229,"expression":{"type":"AssignmentExpression","start":23215,"end":23228,"operator":"=","left":{"type":"Identifier","start":23215,"end":23220,"name":"match"},"right":{"type":"Literal","start":23223,"end":23228,"value":false,"raw":"false"}}}]},"alternate":null}]}}],"optional":false}},{"type":"ReturnStatement","start":23267,"end":23280,"argument":{"type":"Identifier","start":23274,"end":23279,"name":"match"}}]}}},{"type":"MethodDefinition","start":23599,"end":24432,"static":false,"computed":false,"key":{"type":"Identifier","start":23599,"end":23612,"name":"autoTranslate"},"kind":"method","value":{"type":"FunctionExpression","start":23612,"end":24432,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":23613,"end":23617,"name":"from"},{"type":"Identifier","start":23619,"end":23621,"name":"to"},{"type":"Identifier","start":23623,"end":23651,"name":"languageSpecificMessagesFile"}],"body":{"type":"BlockStatement","start":23653,"end":24432,"body":[{"type":"VariableDeclaration","start":23664,"end":23680,"declarations":[{"type":"VariableDeclarator","start":23668,"end":23679,"id":{"type":"Identifier","start":23668,"end":23679,"name":"serviceCall"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":23690,"end":23761,"declarations":[{"type":"VariableDeclarator","start":23696,"end":23760,"id":{"type":"Identifier","start":23696,"end":23716,"name":"autotranslateEnabled"},"init":{"type":"CallExpression","start":23719,"end":23760,"callee":{"type":"MemberExpression","start":23719,"end":23756,"object":{"type":"MemberExpression","start":23719,"end":23734,"object":{"type":"ThisExpression","start":23719,"end":23723},"property":{"type":"Identifier","start":23724,"end":23734,"name":"parameters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":23735,"end":23756,"name":"autotranslateLanguage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":23757,"end":23759,"name":"to"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":23771,"end":24017,"test":{"type":"Identifier","start":23775,"end":23795,"name":"autotranslateEnabled"},"consequent":{"type":"BlockStatement","start":23797,"end":23917,"body":[{"type":"ExpressionStatement","start":23812,"end":23906,"expression":{"type":"AssignmentExpression","start":23812,"end":23905,"operator":"=","left":{"type":"Identifier","start":23812,"end":23823,"name":"serviceCall"},"right":{"type":"CallExpression","start":23826,"end":23905,"callee":{"type":"MemberExpression","start":23826,"end":23865,"object":{"type":"MemberExpression","start":23826,"end":23851,"object":{"type":"ThisExpression","start":23826,"end":23830},"property":{"type":"Identifier","start":23831,"end":23851,"name":"autoTranslateService"},"computed":false,"optional":false},"property":{"type":"Identifier","start":23852,"end":23865,"name":"autoTranslate"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":23866,"end":23870,"name":"from"},{"type":"Identifier","start":23872,"end":23874,"name":"to"},{"type":"Identifier","start":23876,"end":23904,"name":"languageSpecificMessagesFile"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":23932,"end":24017,"body":[{"type":"ExpressionStatement","start":23947,"end":24006,"expression":{"type":"AssignmentExpression","start":23947,"end":24005,"operator":"=","left":{"type":"Identifier","start":23947,"end":23958,"name":"serviceCall"},"right":{"type":"CallExpression","start":23961,"end":24005,"callee":{"type":"Identifier","start":23961,"end":23963,"name":"of"},"arguments":[{"type":"NewExpression","start":23964,"end":24004,"callee":{"type":"Identifier","start":23968,"end":23994,"name":"AutoTranslateSummaryReport"},"arguments":[{"type":"Identifier","start":23995,"end":23999,"name":"from"},{"type":"Identifier","start":24001,"end":24003,"name":"to"}]}],"optional":false}}}]}},{"type":"ReturnStatement","start":24027,"end":24425,"argument":{"type":"CallExpression","start":24034,"end":24424,"callee":{"type":"MemberExpression","start":24034,"end":24050,"object":{"type":"Identifier","start":24034,"end":24045,"name":"serviceCall"},"property":{"type":"Identifier","start":24046,"end":24050,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":24051,"end":24423,"callee":{"type":"Identifier","start":24051,"end":24054,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":24055,"end":24422,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":24056,"end":24063,"name":"summary"}],"body":{"type":"BlockStatement","start":24068,"end":24422,"body":[{"type":"IfStatement","start":24083,"end":24382,"test":{"type":"Identifier","start":24087,"end":24107,"name":"autotranslateEnabled"},"consequent":{"type":"BlockStatement","start":24109,"end":24382,"body":[{"type":"IfStatement","start":24128,"end":24367,"test":{"type":"LogicalExpression","start":24132,"end":24171,"left":{"type":"CallExpression","start":24132,"end":24147,"callee":{"type":"MemberExpression","start":24132,"end":24145,"object":{"type":"Identifier","start":24132,"end":24139,"name":"summary"},"property":{"type":"Identifier","start":24140,"end":24145,"name":"error"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"||","right":{"type":"BinaryExpression","start":24151,"end":24171,"left":{"type":"CallExpression","start":24151,"end":24167,"callee":{"type":"MemberExpression","start":24151,"end":24165,"object":{"type":"Identifier","start":24151,"end":24158,"name":"summary"},"property":{"type":"Identifier","start":24159,"end":24165,"name":"failed"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":">","right":{"type":"Literal","start":24170,"end":24171,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":24173,"end":24259,"body":[{"type":"ExpressionStatement","start":24196,"end":24240,"expression":{"type":"CallExpression","start":24196,"end":24239,"callee":{"type":"MemberExpression","start":24196,"end":24220,"object":{"type":"MemberExpression","start":24196,"end":24214,"object":{"type":"ThisExpression","start":24196,"end":24200},"property":{"type":"Identifier","start":24201,"end":24214,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":24215,"end":24220,"name":"error"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":24221,"end":24238,"callee":{"type":"MemberExpression","start":24221,"end":24236,"object":{"type":"Identifier","start":24221,"end":24228,"name":"summary"},"property":{"type":"Identifier","start":24229,"end":24236,"name":"content"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":24282,"end":24367,"body":[{"type":"ExpressionStatement","start":24305,"end":24348,"expression":{"type":"CallExpression","start":24305,"end":24347,"callee":{"type":"MemberExpression","start":24305,"end":24328,"object":{"type":"MemberExpression","start":24305,"end":24323,"object":{"type":"ThisExpression","start":24305,"end":24309},"property":{"type":"Identifier","start":24310,"end":24323,"name":"commandOutput"},"computed":false,"optional":false},"property":{"type":"Identifier","start":24324,"end":24328,"name":"warn"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":24329,"end":24346,"callee":{"type":"MemberExpression","start":24329,"end":24344,"object":{"type":"Identifier","start":24329,"end":24336,"name":"summary"},"property":{"type":"Identifier","start":24337,"end":24344,"name":"content"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}]}}]},"alternate":null},{"type":"ReturnStatement","start":24396,"end":24411,"argument":{"type":"Identifier","start":24403,"end":24410,"name":"summary"}}]}}],"optional":false}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":24437,"end":84363}]},"code":"import { CommandOutput } from '../common/command-output';\r\nimport { XliffMergeParameters } from './xliff-merge-parameters';\r\nimport { XliffMergeError } from './xliff-merge-error';\r\nimport { FileUtil } from '../common/file-util';\r\nimport { VERSION } from './version';\r\nimport { format } from 'util';\r\nimport { isNullOrUndefined } from '../common/util';\r\nimport { FORMAT_XMB, FORMAT_XTB, NORMALIZATION_FORMAT_DEFAULT, STATE_FINAL, STATE_TRANSLATED } from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport { NgxTranslateExtractor } from './ngx-translate-extractor';\r\nimport { TranslationMessagesFileReader } from './translation-messages-file-reader';\r\nimport { of, forkJoin } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { XliffMergeAutoTranslateService } from '../autotranslate/xliff-merge-auto-translate-service';\r\nimport { AutoTranslateSummaryReport } from '../autotranslate/auto-translate-summary-report';\r\n/**\r\n * Created by martin on 17.02.2017.\r\n * XliffMerge - read xliff or xmb file and put untranslated parts in language specific xliff or xmb files.\r\n *\r\n */\r\nexport class XliffMerge {\r\n    constructor(commandOutput, options) {\r\n        this.commandOutput = commandOutput;\r\n        this.options = options;\r\n        this.parameters = null;\r\n    }\r\n    static main(argv) {\r\n        const options = XliffMerge.parseArgs(argv);\r\n        if (options) {\r\n            new XliffMerge(new CommandOutput(process.stdout), options).run((result) => {\r\n                process.exit(result);\r\n            });\r\n        }\r\n    }\r\n    static parseArgs(argv) {\r\n        const options = {\r\n            languages: []\r\n        };\r\n        for (let i = 1; i < argv.length; i++) {\r\n            const arg = argv[i];\r\n            if (arg === '--version' || arg === '-version') {\r\n                console.log('xliffmerge ' + VERSION);\r\n            }\r\n            else if (arg === '--verbose' || arg === '-v') {\r\n                options.verbose = true;\r\n            }\r\n            else if (arg === '--profile' || arg === '-p') {\r\n                i++;\r\n                if (i >= argv.length) {\r\n                    console.log('missing config file');\r\n                    XliffMerge.showUsage();\r\n                    return null;\r\n                }\r\n                else {\r\n                    options.profilePath = argv[i];\r\n                }\r\n            }\r\n            else if (arg === '--quiet' || arg === '-q') {\r\n                options.quiet = true;\r\n            }\r\n            else if (arg === '--help' || arg === '-help' || arg === '-h') {\r\n                XliffMerge.showUsage();\r\n            }\r\n            else if (arg.length > 0 && arg.charAt(0) === '-') {\r\n                console.log('unknown option');\r\n                return null;\r\n            }\r\n            else {\r\n                options.languages.push(arg);\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n    static showUsage() {\r\n        console.log('usage: xliffmerge <option>* <language>*');\r\n        console.log('Options');\r\n        console.log('\\t-p|--profile a json configuration file containing all relevant parameters.');\r\n        console.log('\\t\\tfor details please consult the home page https://github.com/martinroob/ngx-i18nsupport');\r\n        console.log('\\t-v|--verbose show some output for debugging purposes');\r\n        console.log('\\t-q|--quiet only show errors, nothing else');\r\n        console.log('\\t-version|--version show version string');\r\n        console.log('');\r\n        console.log('\\t<language> has to be a valid language short string, e,g. \"en\", \"de\", \"de-ch\"');\r\n    }\r\n    /**\r\n     * For Tests, create instance with given profile\r\n     * @param commandOutput commandOutput\r\n     * @param options options\r\n     * @param profileContent profileContent\r\n     */\r\n    static createFromOptions(commandOutput, options, profileContent) {\r\n        const instance = new XliffMerge(commandOutput, options);\r\n        instance.parameters = XliffMergeParameters.createFromOptions(options, profileContent);\r\n        return instance;\r\n    }\r\n    /**\r\n     * Run the command.\r\n     * This runs async.\r\n     * @param callbackFunction when command is executed, called with the return code (0 for ok), if given.\r\n     * @param errorFunction callbackFunction for error handling\r\n     */\r\n    run(callbackFunction, errorFunction) {\r\n        this.runAsync()\r\n            .subscribe((retcode) => {\r\n            if (!isNullOrUndefined(callbackFunction)) {\r\n                callbackFunction(retcode);\r\n            }\r\n        }, (error) => {\r\n            if (!isNullOrUndefined(errorFunction)) {\r\n                errorFunction(error);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Execute merge-Process.\r\n     * @return Async operation, on completion returns retcode 0=ok, other = error.\r\n     */\r\n    runAsync() {\r\n        if (this.options && this.options.quiet) {\r\n            this.commandOutput.setQuiet();\r\n        }\r\n        if (this.options && this.options.verbose) {\r\n            this.commandOutput.setVerbose();\r\n        }\r\n        if (!this.parameters) {\r\n            this.parameters = XliffMergeParameters.createFromOptions(this.options);\r\n        }\r\n        this.commandOutput.info('xliffmerge version %s', VERSION);\r\n        if (this.parameters.verbose()) {\r\n            this.parameters.showAllParameters(this.commandOutput);\r\n        }\r\n        if (this.parameters.errorsFound.length > 0) {\r\n            for (const err of this.parameters.errorsFound) {\r\n                this.commandOutput.error(err.message);\r\n            }\r\n            return of(-1);\r\n        }\r\n        if (this.parameters.warningsFound.length > 0) {\r\n            for (const warn of this.parameters.warningsFound) {\r\n                this.commandOutput.warn(warn);\r\n            }\r\n        }\r\n        this.readMaster();\r\n        if (this.parameters.autotranslate()) {\r\n            this.autoTranslateService = new XliffMergeAutoTranslateService(this.parameters.apikey());\r\n        }\r\n        const executionForAllLanguages = [];\r\n        this.parameters.languages().forEach((lang) => {\r\n            executionForAllLanguages.push(this.processLanguage(lang));\r\n        });\r\n        return forkJoin(executionForAllLanguages).pipe(map((retcodes) => this.totalRetcode(retcodes)));\r\n    }\r\n    /**\r\n     * Give an array of retcodes for the different languages, return the total retcode.\r\n     * If all are 0, it is 0, otherwise the first non zero.\r\n     * @param retcodes retcodes\r\n     * @return number\r\n     */\r\n    totalRetcode(retcodes) {\r\n        for (let i = 0; i < retcodes.length; i++) {\r\n            if (retcodes[i] !== 0) {\r\n                return retcodes[i];\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Return the name of the generated file for given lang.\r\n     * @param lang language\r\n     * @return name of generated file\r\n     */\r\n    generatedI18nFile(lang) {\r\n        return this.parameters.generatedI18nFile(lang);\r\n    }\r\n    /**\r\n     * Return the name of the generated ngx-translation file for given lang.\r\n     * @param lang language\r\n     * @return name of translate file\r\n     */\r\n    generatedNgxTranslateFile(lang) {\r\n        return this.parameters.generatedNgxTranslateFile(lang);\r\n    }\r\n    /**\r\n     * Warnings found during the run.\r\n     * @return warnings\r\n     */\r\n    warnings() {\r\n        return this.parameters.warningsFound;\r\n    }\r\n    readMaster() {\r\n        try {\r\n            this.master = TranslationMessagesFileReader.fromFile(this.parameters.i18nFormat(), this.parameters.i18nFile(), this.parameters.encoding());\r\n            this.master.warnings().forEach((warning) => {\r\n                this.commandOutput.warn(warning);\r\n            });\r\n            const count = this.master.numberOfTransUnits();\r\n            const missingIdCount = this.master.numberOfTransUnitsWithMissingId();\r\n            this.commandOutput.info('master contains %s trans-units', count);\r\n            if (missingIdCount > 0) {\r\n                this.commandOutput.warn('master contains %s trans-units, but there are %s without id', count, missingIdCount);\r\n            }\r\n            const sourceLang = this.master.sourceLanguage();\r\n            if (sourceLang && sourceLang !== this.parameters.defaultLanguage()) {\r\n                this.commandOutput.warn('master says to have source-language=\"%s\", should be \"%s\" (your defaultLanguage)', sourceLang, this.parameters.defaultLanguage());\r\n                this.master.setSourceLanguage(this.parameters.defaultLanguage());\r\n                TranslationMessagesFileReader.save(this.master, this.parameters.beautifyOutput());\r\n                this.commandOutput.warn('changed master source-language=\"%s\" to \"%s\"', sourceLang, this.parameters.defaultLanguage());\r\n            }\r\n        }\r\n        catch (err) {\r\n            if (err instanceof XliffMergeError) {\r\n                this.commandOutput.error(err.message);\r\n                return of(-1);\r\n            }\r\n            else {\r\n                // unhandled\r\n                const currentFilename = this.parameters.i18nFile();\r\n                const filenameString = (currentFilename) ? format('file \"%s\", ', currentFilename) : '';\r\n                this.commandOutput.error(filenameString + 'oops ' + err);\r\n                throw err;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Process the given language.\r\n     * Async operation.\r\n     * @param lang language\r\n     * @return on completion 0 for ok, other for error\r\n     */\r\n    processLanguage(lang) {\r\n        this.commandOutput.debug('processing language %s', lang);\r\n        const languageXliffFile = this.parameters.generatedI18nFile(lang);\r\n        const currentFilename = languageXliffFile;\r\n        let result;\r\n        if (!FileUtil.exists(languageXliffFile)) {\r\n            result = this.createUntranslatedXliff(lang, languageXliffFile);\r\n        }\r\n        else {\r\n            result = this.mergeMasterTo(lang, languageXliffFile);\r\n        }\r\n        return result\r\n            .pipe(map(() => {\r\n            if (this.parameters.supportNgxTranslate()) {\r\n                const languageSpecificMessagesFile = TranslationMessagesFileReader.fromFile(this.translationFormat(this.parameters.i18nFormat()), languageXliffFile, this.parameters.encoding(), this.master.filename());\r\n                NgxTranslateExtractor.extract(languageSpecificMessagesFile, this.parameters.ngxTranslateExtractionPattern(), this.parameters.generatedNgxTranslateFile(lang));\r\n            }\r\n            return 0;\r\n        }), catchError((err) => {\r\n            if (err instanceof XliffMergeError) {\r\n                this.commandOutput.error(err.message);\r\n                return of(-1);\r\n            }\r\n            else {\r\n                // unhandled\r\n                const filenameString = (currentFilename) ? format('file \"%s\", ', currentFilename) : '';\r\n                this.commandOutput.error(filenameString + 'oops ' + err);\r\n                throw err;\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * create a new file for the language, which contains no translations, but all keys.\r\n     * in principle, this is just a copy of the master with target-language set.\r\n     * @param lang language\r\n     * @param languageXliffFilePath name of file\r\n     */\r\n    createUntranslatedXliff(lang, languageXliffFilePath) {\r\n        // copy master ...\r\n        // and set target-language\r\n        // and copy source to target if necessary\r\n        const isDefaultLang = (lang === this.parameters.defaultLanguage());\r\n        this.master.setNewTransUnitTargetPraefix(this.parameters.targetPraefix());\r\n        this.master.setNewTransUnitTargetSuffix(this.parameters.targetSuffix());\r\n        const languageSpecificMessagesFile = this.master.createTranslationFileForLang(lang, languageXliffFilePath, isDefaultLang, this.parameters.useSourceAsTarget());\r\n        return this.autoTranslate(this.master.sourceLanguage(), lang, languageSpecificMessagesFile).pipe(map(( /* summary */) => {\r\n            // write it to file\r\n            TranslationMessagesFileReader.save(languageSpecificMessagesFile, this.parameters.beautifyOutput());\r\n            this.commandOutput.info('created new file \"%s\" for target-language=\"%s\"', languageXliffFilePath, lang);\r\n            if (!isDefaultLang) {\r\n                this.commandOutput.warn('please translate file \"%s\" to target-language=\"%s\"', languageXliffFilePath, lang);\r\n            }\r\n            return null;\r\n        }));\r\n    }\r\n    /**\r\n     * Map the input format to the format of the translation.\r\n     * Normally they are the same but for xmb the translation format is xtb.\r\n     * @param i18nFormat format\r\n     */\r\n    translationFormat(i18nFormat) {\r\n        if (i18nFormat === FORMAT_XMB) {\r\n            return FORMAT_XTB;\r\n        }\r\n        else {\r\n            return i18nFormat;\r\n        }\r\n    }\r\n    /**\r\n     * Merge all\r\n     * @param lang language\r\n     * @param languageXliffFilePath filename\r\n     */\r\n    mergeMasterTo(lang, languageXliffFilePath) {\r\n        // read lang specific file\r\n        const languageSpecificMessagesFile = TranslationMessagesFileReader.fromFile(this.translationFormat(this.parameters.i18nFormat()), languageXliffFilePath, this.parameters.encoding());\r\n        const isDefaultLang = (lang === this.parameters.defaultLanguage());\r\n        let newCount = 0;\r\n        let correctSourceContentCount = 0;\r\n        let correctSourceRefCount = 0;\r\n        let correctDescriptionOrMeaningCount = 0;\r\n        let idChangedCount = 0;\r\n        languageSpecificMessagesFile.setNewTransUnitTargetPraefix(this.parameters.targetPraefix());\r\n        languageSpecificMessagesFile.setNewTransUnitTargetSuffix(this.parameters.targetSuffix());\r\n        let lastProcessedUnit = null;\r\n        this.master.forEachTransUnit((masterTransUnit) => {\r\n            const transUnit = languageSpecificMessagesFile.transUnitWithId(masterTransUnit.id);\r\n            if (!transUnit) {\r\n                // oops, no translation, must be a new key, so add it\r\n                let newUnit;\r\n                if (this.parameters.allowIdChange()\r\n                    && (newUnit = this.processChangedIdUnit(masterTransUnit, languageSpecificMessagesFile, lastProcessedUnit))) {\r\n                    lastProcessedUnit = newUnit;\r\n                    idChangedCount++;\r\n                }\r\n                else {\r\n                    lastProcessedUnit = languageSpecificMessagesFile.importNewTransUnit(masterTransUnit, isDefaultLang, this.parameters.useSourceAsTarget(), (this.parameters.preserveOrder()) ? lastProcessedUnit : undefined);\r\n                    newCount++;\r\n                }\r\n            }\r\n            else {\r\n                // check for changed source content and change it if needed\r\n                // (can only happen if ID is explicitely set, otherwise ID would change if source content is changed.\r\n                if (transUnit.supportsSetSourceContent() && !this.areSourcesNearlyEqual(masterTransUnit, transUnit)) {\r\n                    transUnit.setSourceContent(masterTransUnit.sourceContent());\r\n                    if (isDefaultLang) {\r\n                        // #81 changed source must be copied to target for default lang\r\n                        transUnit.translate(masterTransUnit.sourceContent());\r\n                        transUnit.setTargetState(STATE_FINAL);\r\n                    }\r\n                    else {\r\n                        if (transUnit.targetState() === STATE_FINAL) {\r\n                            // source is changed, so translation has to be checked again\r\n                            transUnit.setTargetState(STATE_TRANSLATED);\r\n                        }\r\n                    }\r\n                    correctSourceContentCount++;\r\n                }\r\n                // check for missing or changed source ref and add it if needed\r\n                if (transUnit.supportsSetSourceReferences()\r\n                    && !this.areSourceReferencesEqual(masterTransUnit.sourceReferences(), transUnit.sourceReferences())) {\r\n                    transUnit.setSourceReferences(masterTransUnit.sourceReferences());\r\n                    correctSourceRefCount++;\r\n                }\r\n                // check for changed description or meaning\r\n                if (transUnit.supportsSetDescriptionAndMeaning()) {\r\n                    let changed = false;\r\n                    if (transUnit.description() !== masterTransUnit.description()) {\r\n                        transUnit.setDescription(masterTransUnit.description());\r\n                        changed = true;\r\n                    }\r\n                    if (transUnit.meaning() !== masterTransUnit.meaning()) {\r\n                        transUnit.setMeaning(masterTransUnit.meaning());\r\n                        changed = true;\r\n                    }\r\n                    if (changed) {\r\n                        correctDescriptionOrMeaningCount++;\r\n                    }\r\n                }\r\n                lastProcessedUnit = transUnit;\r\n            }\r\n        });\r\n        if (newCount > 0) {\r\n            this.commandOutput.warn('merged %s trans-units from master to \"%s\"', newCount, lang);\r\n        }\r\n        if (correctSourceContentCount > 0) {\r\n            this.commandOutput.warn('transferred %s changed source content from master to \"%s\"', correctSourceContentCount, lang);\r\n        }\r\n        if (correctSourceRefCount > 0) {\r\n            this.commandOutput.warn('transferred %s source references from master to \"%s\"', correctSourceRefCount, lang);\r\n        }\r\n        if (idChangedCount > 0) {\r\n            this.commandOutput.warn('found %s changed id\\'s in \"%s\"', idChangedCount, lang);\r\n        }\r\n        if (correctDescriptionOrMeaningCount > 0) {\r\n            this.commandOutput.warn('transferred %s changed descriptions/meanings from master to \"%s\"', correctDescriptionOrMeaningCount, lang);\r\n        }\r\n        // remove all elements that are no longer used\r\n        let removeCount = 0;\r\n        languageSpecificMessagesFile.forEachTransUnit((transUnit) => {\r\n            const existsInMaster = !isNullOrUndefined(this.master.transUnitWithId(transUnit.id));\r\n            if (!existsInMaster) {\r\n                if (this.parameters.removeUnusedIds()) {\r\n                    languageSpecificMessagesFile.removeTransUnitWithId(transUnit.id);\r\n                }\r\n                removeCount++;\r\n            }\r\n        });\r\n        if (removeCount > 0) {\r\n            if (this.parameters.removeUnusedIds()) {\r\n                this.commandOutput.warn('removed %s unused trans-units in \"%s\"', removeCount, lang);\r\n            }\r\n            else {\r\n                this.commandOutput.warn('keeping %s unused trans-units in \"%s\", because removeUnused is disabled', removeCount, lang);\r\n            }\r\n        }\r\n        if (newCount === 0 && removeCount === 0 && correctSourceContentCount === 0\r\n            && correctSourceRefCount === 0 && correctDescriptionOrMeaningCount === 0) {\r\n            this.commandOutput.info('file for \"%s\" was up to date', lang);\r\n            return of(null);\r\n        }\r\n        else {\r\n            return this.autoTranslate(this.master.sourceLanguage(), lang, languageSpecificMessagesFile)\r\n                .pipe(map(() => {\r\n                // write it to file\r\n                TranslationMessagesFileReader.save(languageSpecificMessagesFile, this.parameters.beautifyOutput());\r\n                this.commandOutput.info('updated file \"%s\" for target-language=\"%s\"', languageXliffFilePath, lang);\r\n                if (newCount > 0 && !isDefaultLang) {\r\n                    this.commandOutput.warn('please translate file \"%s\" to target-language=\"%s\"', languageXliffFilePath, lang);\r\n                }\r\n                return null;\r\n            }));\r\n        }\r\n    }\r\n    /**\r\n     * Handle the case of changed id due to small white space changes.\r\n     * @param masterTransUnit unit in master file\r\n     * @param languageSpecificMessagesFile translation file\r\n     * @param lastProcessedUnit Unit before the one processed here. New unit will be inserted after this one.\r\n     * @return processed unit, if done, null if no changed unit found\r\n     */\r\n    processChangedIdUnit(masterTransUnit, languageSpecificMessagesFile, lastProcessedUnit) {\r\n        let changedTransUnit = null;\r\n        languageSpecificMessagesFile.forEachTransUnit((languageTransUnit) => {\r\n            if (this.areSourcesNearlyEqual(languageTransUnit, masterTransUnit)) {\r\n                changedTransUnit = languageTransUnit;\r\n            }\r\n        });\r\n        if (!changedTransUnit) {\r\n            return null;\r\n        }\r\n        const mergedTransUnit = languageSpecificMessagesFile.importNewTransUnit(masterTransUnit, false, false, (this.parameters.preserveOrder()) ? lastProcessedUnit : undefined);\r\n        const translatedContent = changedTransUnit.targetContent();\r\n        if (translatedContent) { // issue #68 set translated only, if it is really translated\r\n            mergedTransUnit.translate(translatedContent);\r\n            mergedTransUnit.setTargetState(STATE_TRANSLATED);\r\n        }\r\n        return mergedTransUnit;\r\n    }\r\n    /**\r\n     * test wether the sources of 2 trans units are equal ignoring white spaces.\r\n     * @param tu1 tu1\r\n     * @param tu2 tu2\r\n     */\r\n    areSourcesNearlyEqual(tu1, tu2) {\r\n        if ((tu1 && !tu2) || (tu2 && !tu1)) {\r\n            return false;\r\n        }\r\n        const tu1Normalized = tu1.sourceContentNormalized();\r\n        const tu2Normalized = tu2.sourceContentNormalized();\r\n        if (tu1Normalized.isICUMessage()) {\r\n            if (tu2Normalized.isICUMessage()) {\r\n                const icu1Normalized = tu1Normalized.getICUMessage().asNativeString().trim();\r\n                const icu2Normalized = tu2Normalized.getICUMessage().asNativeString().trim();\r\n                return icu1Normalized === icu2Normalized;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        if (tu1Normalized.containsICUMessageRef()) {\r\n            const icuref1Normalized = tu1Normalized.asNativeString().trim();\r\n            const icuref2Normalized = tu2Normalized.asNativeString().trim();\r\n            return icuref1Normalized === icuref2Normalized;\r\n        }\r\n        const s1Normalized = tu1Normalized.asDisplayString(NORMALIZATION_FORMAT_DEFAULT).trim();\r\n        const s2Normalized = tu2Normalized.asDisplayString(NORMALIZATION_FORMAT_DEFAULT).trim();\r\n        return s1Normalized === s2Normalized;\r\n    }\r\n    areSourceReferencesEqual(ref1, ref2) {\r\n        if ((isNullOrUndefined(ref1) && !isNullOrUndefined(ref2)) || (isNullOrUndefined(ref2) && !isNullOrUndefined(ref1))) {\r\n            return false;\r\n        }\r\n        if (isNullOrUndefined(ref1) && isNullOrUndefined(ref2)) {\r\n            return true;\r\n        }\r\n        // bot refs are set now, convert to set to compare them\r\n        const set1 = new Set();\r\n        ref1.forEach((ref) => { set1.add(ref.sourcefile + ':' + ref.linenumber); });\r\n        const set2 = new Set();\r\n        ref2.forEach((ref) => { set2.add(ref.sourcefile + ':' + ref.linenumber); });\r\n        if (set1.size !== set2.size) {\r\n            return false;\r\n        }\r\n        let match = true;\r\n        set2.forEach((ref) => {\r\n            if (!set1.has(ref)) {\r\n                match = false;\r\n            }\r\n        });\r\n        return match;\r\n    }\r\n    /**\r\n     * Auto translate file via Google Translate.\r\n     * Will translate all new units in file.\r\n     * @param from from\r\n     * @param to to\r\n     * @param languageSpecificMessagesFile languageSpecificMessagesFile\r\n     * @return a promise with the execution result as a summary report.\r\n     */\r\n    autoTranslate(from, to, languageSpecificMessagesFile) {\r\n        let serviceCall;\r\n        const autotranslateEnabled = this.parameters.autotranslateLanguage(to);\r\n        if (autotranslateEnabled) {\r\n            serviceCall = this.autoTranslateService.autoTranslate(from, to, languageSpecificMessagesFile);\r\n        }\r\n        else {\r\n            serviceCall = of(new AutoTranslateSummaryReport(from, to));\r\n        }\r\n        return serviceCall.pipe(map((summary) => {\r\n            if (autotranslateEnabled) {\r\n                if (summary.error() || summary.failed() > 0) {\r\n                    this.commandOutput.error(summary.content());\r\n                }\r\n                else {\r\n                    this.commandOutput.warn(summary.content());\r\n                }\r\n            }\r\n            return summary;\r\n        }));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\command-output.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\xliff-merge-parameters.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\xliff-merge-error.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\file-util.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\version.mjs","util","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\util.mjs","@ngx-i18nsupport/ngx-i18nsupport-lib","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\ngx-translate-extractor.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\translation-messages-file-reader.mjs","rxjs","rxjs/operators","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\autotranslate\\xliff-merge-auto-translate-service.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\autotranslate\\auto-translate-summary-report.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\xliff-merge.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { CommandOutput } from '../common/command-output';\r\nimport { XliffMergeParameters } from './xliff-merge-parameters';\r\nimport { XliffMergeError } from './xliff-merge-error';\r\nimport { FileUtil } from '../common/file-util';\r\nimport { VERSION } from './version';\r\nimport { format } from 'util';\r\nimport { isNullOrUndefined } from '../common/util';\r\nimport { FORMAT_XMB, FORMAT_XTB, NORMALIZATION_FORMAT_DEFAULT, STATE_FINAL, STATE_TRANSLATED } from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport { NgxTranslateExtractor } from './ngx-translate-extractor';\r\nimport { TranslationMessagesFileReader } from './translation-messages-file-reader';\r\nimport { of, forkJoin } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { XliffMergeAutoTranslateService } from '../autotranslate/xliff-merge-auto-translate-service';\r\nimport { AutoTranslateSummaryReport } from '../autotranslate/auto-translate-summary-report';\r\n/**\r\n * Created by martin on 17.02.2017.\r\n * XliffMerge - read xliff or xmb file and put untranslated parts in language specific xliff or xmb files.\r\n *\r\n */\r\nexport class XliffMerge {\r\n    constructor(commandOutput, options) {\r\n        this.commandOutput = commandOutput;\r\n        this.options = options;\r\n        this.parameters = null;\r\n    }\r\n    static main(argv) {\r\n        const options = XliffMerge.parseArgs(argv);\r\n        if (options) {\r\n            new XliffMerge(new CommandOutput(process.stdout), options).run((result) => {\r\n                process.exit(result);\r\n            });\r\n        }\r\n    }\r\n    static parseArgs(argv) {\r\n        const options = {\r\n            languages: []\r\n        };\r\n        for (let i = 1; i < argv.length; i++) {\r\n            const arg = argv[i];\r\n            if (arg === '--version' || arg === '-version') {\r\n                console.log('xliffmerge ' + VERSION);\r\n            }\r\n            else if (arg === '--verbose' || arg === '-v') {\r\n                options.verbose = true;\r\n            }\r\n            else if (arg === '--profile' || arg === '-p') {\r\n                i++;\r\n                if (i >= argv.length) {\r\n                    console.log('missing config file');\r\n                    XliffMerge.showUsage();\r\n                    return null;\r\n                }\r\n                else {\r\n                    options.profilePath = argv[i];\r\n                }\r\n            }\r\n            else if (arg === '--quiet' || arg === '-q') {\r\n                options.quiet = true;\r\n            }\r\n            else if (arg === '--help' || arg === '-help' || arg === '-h') {\r\n                XliffMerge.showUsage();\r\n            }\r\n            else if (arg.length > 0 && arg.charAt(0) === '-') {\r\n                console.log('unknown option');\r\n                return null;\r\n            }\r\n            else {\r\n                options.languages.push(arg);\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n    static showUsage() {\r\n        console.log('usage: xliffmerge <option>* <language>*');\r\n        console.log('Options');\r\n        console.log('\\t-p|--profile a json configuration file containing all relevant parameters.');\r\n        console.log('\\t\\tfor details please consult the home page https://github.com/martinroob/ngx-i18nsupport');\r\n        console.log('\\t-v|--verbose show some output for debugging purposes');\r\n        console.log('\\t-q|--quiet only show errors, nothing else');\r\n        console.log('\\t-version|--version show version string');\r\n        console.log('');\r\n        console.log('\\t<language> has to be a valid language short string, e,g. \"en\", \"de\", \"de-ch\"');\r\n    }\r\n    /**\r\n     * For Tests, create instance with given profile\r\n     * @param commandOutput commandOutput\r\n     * @param options options\r\n     * @param profileContent profileContent\r\n     */\r\n    static createFromOptions(commandOutput, options, profileContent) {\r\n        const instance = new XliffMerge(commandOutput, options);\r\n        instance.parameters = XliffMergeParameters.createFromOptions(options, profileContent);\r\n        return instance;\r\n    }\r\n    /**\r\n     * Run the command.\r\n     * This runs async.\r\n     * @param callbackFunction when command is executed, called with the return code (0 for ok), if given.\r\n     * @param errorFunction callbackFunction for error handling\r\n     */\r\n    run(callbackFunction, errorFunction) {\r\n        this.runAsync()\r\n            .subscribe((retcode) => {\r\n            if (!isNullOrUndefined(callbackFunction)) {\r\n                callbackFunction(retcode);\r\n            }\r\n        }, (error) => {\r\n            if (!isNullOrUndefined(errorFunction)) {\r\n                errorFunction(error);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Execute merge-Process.\r\n     * @return Async operation, on completion returns retcode 0=ok, other = error.\r\n     */\r\n    runAsync() {\r\n        if (this.options && this.options.quiet) {\r\n            this.commandOutput.setQuiet();\r\n        }\r\n        if (this.options && this.options.verbose) {\r\n            this.commandOutput.setVerbose();\r\n        }\r\n        if (!this.parameters) {\r\n            this.parameters = XliffMergeParameters.createFromOptions(this.options);\r\n        }\r\n        this.commandOutput.info('xliffmerge version %s', VERSION);\r\n        if (this.parameters.verbose()) {\r\n            this.parameters.showAllParameters(this.commandOutput);\r\n        }\r\n        if (this.parameters.errorsFound.length > 0) {\r\n            for (const err of this.parameters.errorsFound) {\r\n                this.commandOutput.error(err.message);\r\n            }\r\n            return of(-1);\r\n        }\r\n        if (this.parameters.warningsFound.length > 0) {\r\n            for (const warn of this.parameters.warningsFound) {\r\n                this.commandOutput.warn(warn);\r\n            }\r\n        }\r\n        this.readMaster();\r\n        if (this.parameters.autotranslate()) {\r\n            this.autoTranslateService = new XliffMergeAutoTranslateService(this.parameters.apikey());\r\n        }\r\n        const executionForAllLanguages = [];\r\n        this.parameters.languages().forEach((lang) => {\r\n            executionForAllLanguages.push(this.processLanguage(lang));\r\n        });\r\n        return forkJoin(executionForAllLanguages).pipe(map((retcodes) => this.totalRetcode(retcodes)));\r\n    }\r\n    /**\r\n     * Give an array of retcodes for the different languages, return the total retcode.\r\n     * If all are 0, it is 0, otherwise the first non zero.\r\n     * @param retcodes retcodes\r\n     * @return number\r\n     */\r\n    totalRetcode(retcodes) {\r\n        for (let i = 0; i < retcodes.length; i++) {\r\n            if (retcodes[i] !== 0) {\r\n                return retcodes[i];\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Return the name of the generated file for given lang.\r\n     * @param lang language\r\n     * @return name of generated file\r\n     */\r\n    generatedI18nFile(lang) {\r\n        return this.parameters.generatedI18nFile(lang);\r\n    }\r\n    /**\r\n     * Return the name of the generated ngx-translation file for given lang.\r\n     * @param lang language\r\n     * @return name of translate file\r\n     */\r\n    generatedNgxTranslateFile(lang) {\r\n        return this.parameters.generatedNgxTranslateFile(lang);\r\n    }\r\n    /**\r\n     * Warnings found during the run.\r\n     * @return warnings\r\n     */\r\n    warnings() {\r\n        return this.parameters.warningsFound;\r\n    }\r\n    readMaster() {\r\n        try {\r\n            this.master = TranslationMessagesFileReader.fromFile(this.parameters.i18nFormat(), this.parameters.i18nFile(), this.parameters.encoding());\r\n            this.master.warnings().forEach((warning) => {\r\n                this.commandOutput.warn(warning);\r\n            });\r\n            const count = this.master.numberOfTransUnits();\r\n            const missingIdCount = this.master.numberOfTransUnitsWithMissingId();\r\n            this.commandOutput.info('master contains %s trans-units', count);\r\n            if (missingIdCount > 0) {\r\n                this.commandOutput.warn('master contains %s trans-units, but there are %s without id', count, missingIdCount);\r\n            }\r\n            const sourceLang = this.master.sourceLanguage();\r\n            if (sourceLang && sourceLang !== this.parameters.defaultLanguage()) {\r\n                this.commandOutput.warn('master says to have source-language=\"%s\", should be \"%s\" (your defaultLanguage)', sourceLang, this.parameters.defaultLanguage());\r\n                this.master.setSourceLanguage(this.parameters.defaultLanguage());\r\n                TranslationMessagesFileReader.save(this.master, this.parameters.beautifyOutput());\r\n                this.commandOutput.warn('changed master source-language=\"%s\" to \"%s\"', sourceLang, this.parameters.defaultLanguage());\r\n            }\r\n        }\r\n        catch (err) {\r\n            if (err instanceof XliffMergeError) {\r\n                this.commandOutput.error(err.message);\r\n                return of(-1);\r\n            }\r\n            else {\r\n                // unhandled\r\n                const currentFilename = this.parameters.i18nFile();\r\n                const filenameString = (currentFilename) ? format('file \"%s\", ', currentFilename) : '';\r\n                this.commandOutput.error(filenameString + 'oops ' + err);\r\n                throw err;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Process the given language.\r\n     * Async operation.\r\n     * @param lang language\r\n     * @return on completion 0 for ok, other for error\r\n     */\r\n    processLanguage(lang) {\r\n        this.commandOutput.debug('processing language %s', lang);\r\n        const languageXliffFile = this.parameters.generatedI18nFile(lang);\r\n        const currentFilename = languageXliffFile;\r\n        let result;\r\n        if (!FileUtil.exists(languageXliffFile)) {\r\n            result = this.createUntranslatedXliff(lang, languageXliffFile);\r\n        }\r\n        else {\r\n            result = this.mergeMasterTo(lang, languageXliffFile);\r\n        }\r\n        return result\r\n            .pipe(map(() => {\r\n            if (this.parameters.supportNgxTranslate()) {\r\n                const languageSpecificMessagesFile = TranslationMessagesFileReader.fromFile(this.translationFormat(this.parameters.i18nFormat()), languageXliffFile, this.parameters.encoding(), this.master.filename());\r\n                NgxTranslateExtractor.extract(languageSpecificMessagesFile, this.parameters.ngxTranslateExtractionPattern(), this.parameters.generatedNgxTranslateFile(lang));\r\n            }\r\n            return 0;\r\n        }), catchError((err) => {\r\n            if (err instanceof XliffMergeError) {\r\n                this.commandOutput.error(err.message);\r\n                return of(-1);\r\n            }\r\n            else {\r\n                // unhandled\r\n                const filenameString = (currentFilename) ? format('file \"%s\", ', currentFilename) : '';\r\n                this.commandOutput.error(filenameString + 'oops ' + err);\r\n                throw err;\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * create a new file for the language, which contains no translations, but all keys.\r\n     * in principle, this is just a copy of the master with target-language set.\r\n     * @param lang language\r\n     * @param languageXliffFilePath name of file\r\n     */\r\n    createUntranslatedXliff(lang, languageXliffFilePath) {\r\n        // copy master ...\r\n        // and set target-language\r\n        // and copy source to target if necessary\r\n        const isDefaultLang = (lang === this.parameters.defaultLanguage());\r\n        this.master.setNewTransUnitTargetPraefix(this.parameters.targetPraefix());\r\n        this.master.setNewTransUnitTargetSuffix(this.parameters.targetSuffix());\r\n        const languageSpecificMessagesFile = this.master.createTranslationFileForLang(lang, languageXliffFilePath, isDefaultLang, this.parameters.useSourceAsTarget());\r\n        return this.autoTranslate(this.master.sourceLanguage(), lang, languageSpecificMessagesFile).pipe(map(( /* summary */) => {\r\n            // write it to file\r\n            TranslationMessagesFileReader.save(languageSpecificMessagesFile, this.parameters.beautifyOutput());\r\n            this.commandOutput.info('created new file \"%s\" for target-language=\"%s\"', languageXliffFilePath, lang);\r\n            if (!isDefaultLang) {\r\n                this.commandOutput.warn('please translate file \"%s\" to target-language=\"%s\"', languageXliffFilePath, lang);\r\n            }\r\n            return null;\r\n        }));\r\n    }\r\n    /**\r\n     * Map the input format to the format of the translation.\r\n     * Normally they are the same but for xmb the translation format is xtb.\r\n     * @param i18nFormat format\r\n     */\r\n    translationFormat(i18nFormat) {\r\n        if (i18nFormat === FORMAT_XMB) {\r\n            return FORMAT_XTB;\r\n        }\r\n        else {\r\n            return i18nFormat;\r\n        }\r\n    }\r\n    /**\r\n     * Merge all\r\n     * @param lang language\r\n     * @param languageXliffFilePath filename\r\n     */\r\n    mergeMasterTo(lang, languageXliffFilePath) {\r\n        // read lang specific file\r\n        const languageSpecificMessagesFile = TranslationMessagesFileReader.fromFile(this.translationFormat(this.parameters.i18nFormat()), languageXliffFilePath, this.parameters.encoding());\r\n        const isDefaultLang = (lang === this.parameters.defaultLanguage());\r\n        let newCount = 0;\r\n        let correctSourceContentCount = 0;\r\n        let correctSourceRefCount = 0;\r\n        let correctDescriptionOrMeaningCount = 0;\r\n        let idChangedCount = 0;\r\n        languageSpecificMessagesFile.setNewTransUnitTargetPraefix(this.parameters.targetPraefix());\r\n        languageSpecificMessagesFile.setNewTransUnitTargetSuffix(this.parameters.targetSuffix());\r\n        let lastProcessedUnit = null;\r\n        this.master.forEachTransUnit((masterTransUnit) => {\r\n            const transUnit = languageSpecificMessagesFile.transUnitWithId(masterTransUnit.id);\r\n            if (!transUnit) {\r\n                // oops, no translation, must be a new key, so add it\r\n                let newUnit;\r\n                if (this.parameters.allowIdChange()\r\n                    && (newUnit = this.processChangedIdUnit(masterTransUnit, languageSpecificMessagesFile, lastProcessedUnit))) {\r\n                    lastProcessedUnit = newUnit;\r\n                    idChangedCount++;\r\n                }\r\n                else {\r\n                    lastProcessedUnit = languageSpecificMessagesFile.importNewTransUnit(masterTransUnit, isDefaultLang, this.parameters.useSourceAsTarget(), (this.parameters.preserveOrder()) ? lastProcessedUnit : undefined);\r\n                    newCount++;\r\n                }\r\n            }\r\n            else {\r\n                // check for changed source content and change it if needed\r\n                // (can only happen if ID is explicitely set, otherwise ID would change if source content is changed.\r\n                if (transUnit.supportsSetSourceContent() && !this.areSourcesNearlyEqual(masterTransUnit, transUnit)) {\r\n                    transUnit.setSourceContent(masterTransUnit.sourceContent());\r\n                    if (isDefaultLang) {\r\n                        // #81 changed source must be copied to target for default lang\r\n                        transUnit.translate(masterTransUnit.sourceContent());\r\n                        transUnit.setTargetState(STATE_FINAL);\r\n                    }\r\n                    else {\r\n                        if (transUnit.targetState() === STATE_FINAL) {\r\n                            // source is changed, so translation has to be checked again\r\n                            transUnit.setTargetState(STATE_TRANSLATED);\r\n                        }\r\n                    }\r\n                    correctSourceContentCount++;\r\n                }\r\n                // check for missing or changed source ref and add it if needed\r\n                if (transUnit.supportsSetSourceReferences()\r\n                    && !this.areSourceReferencesEqual(masterTransUnit.sourceReferences(), transUnit.sourceReferences())) {\r\n                    transUnit.setSourceReferences(masterTransUnit.sourceReferences());\r\n                    correctSourceRefCount++;\r\n                }\r\n                // check for changed description or meaning\r\n                if (transUnit.supportsSetDescriptionAndMeaning()) {\r\n                    let changed = false;\r\n                    if (transUnit.description() !== masterTransUnit.description()) {\r\n                        transUnit.setDescription(masterTransUnit.description());\r\n                        changed = true;\r\n                    }\r\n                    if (transUnit.meaning() !== masterTransUnit.meaning()) {\r\n                        transUnit.setMeaning(masterTransUnit.meaning());\r\n                        changed = true;\r\n                    }\r\n                    if (changed) {\r\n                        correctDescriptionOrMeaningCount++;\r\n                    }\r\n                }\r\n                lastProcessedUnit = transUnit;\r\n            }\r\n        });\r\n        if (newCount > 0) {\r\n            this.commandOutput.warn('merged %s trans-units from master to \"%s\"', newCount, lang);\r\n        }\r\n        if (correctSourceContentCount > 0) {\r\n            this.commandOutput.warn('transferred %s changed source content from master to \"%s\"', correctSourceContentCount, lang);\r\n        }\r\n        if (correctSourceRefCount > 0) {\r\n            this.commandOutput.warn('transferred %s source references from master to \"%s\"', correctSourceRefCount, lang);\r\n        }\r\n        if (idChangedCount > 0) {\r\n            this.commandOutput.warn('found %s changed id\\'s in \"%s\"', idChangedCount, lang);\r\n        }\r\n        if (correctDescriptionOrMeaningCount > 0) {\r\n            this.commandOutput.warn('transferred %s changed descriptions/meanings from master to \"%s\"', correctDescriptionOrMeaningCount, lang);\r\n        }\r\n        // remove all elements that are no longer used\r\n        let removeCount = 0;\r\n        languageSpecificMessagesFile.forEachTransUnit((transUnit) => {\r\n            const existsInMaster = !isNullOrUndefined(this.master.transUnitWithId(transUnit.id));\r\n            if (!existsInMaster) {\r\n                if (this.parameters.removeUnusedIds()) {\r\n                    languageSpecificMessagesFile.removeTransUnitWithId(transUnit.id);\r\n                }\r\n                removeCount++;\r\n            }\r\n        });\r\n        if (removeCount > 0) {\r\n            if (this.parameters.removeUnusedIds()) {\r\n                this.commandOutput.warn('removed %s unused trans-units in \"%s\"', removeCount, lang);\r\n            }\r\n            else {\r\n                this.commandOutput.warn('keeping %s unused trans-units in \"%s\", because removeUnused is disabled', removeCount, lang);\r\n            }\r\n        }\r\n        if (newCount === 0 && removeCount === 0 && correctSourceContentCount === 0\r\n            && correctSourceRefCount === 0 && correctDescriptionOrMeaningCount === 0) {\r\n            this.commandOutput.info('file for \"%s\" was up to date', lang);\r\n            return of(null);\r\n        }\r\n        else {\r\n            return this.autoTranslate(this.master.sourceLanguage(), lang, languageSpecificMessagesFile)\r\n                .pipe(map(() => {\r\n                // write it to file\r\n                TranslationMessagesFileReader.save(languageSpecificMessagesFile, this.parameters.beautifyOutput());\r\n                this.commandOutput.info('updated file \"%s\" for target-language=\"%s\"', languageXliffFilePath, lang);\r\n                if (newCount > 0 && !isDefaultLang) {\r\n                    this.commandOutput.warn('please translate file \"%s\" to target-language=\"%s\"', languageXliffFilePath, lang);\r\n                }\r\n                return null;\r\n            }));\r\n        }\r\n    }\r\n    /**\r\n     * Handle the case of changed id due to small white space changes.\r\n     * @param masterTransUnit unit in master file\r\n     * @param languageSpecificMessagesFile translation file\r\n     * @param lastProcessedUnit Unit before the one processed here. New unit will be inserted after this one.\r\n     * @return processed unit, if done, null if no changed unit found\r\n     */\r\n    processChangedIdUnit(masterTransUnit, languageSpecificMessagesFile, lastProcessedUnit) {\r\n        let changedTransUnit = null;\r\n        languageSpecificMessagesFile.forEachTransUnit((languageTransUnit) => {\r\n            if (this.areSourcesNearlyEqual(languageTransUnit, masterTransUnit)) {\r\n                changedTransUnit = languageTransUnit;\r\n            }\r\n        });\r\n        if (!changedTransUnit) {\r\n            return null;\r\n        }\r\n        const mergedTransUnit = languageSpecificMessagesFile.importNewTransUnit(masterTransUnit, false, false, (this.parameters.preserveOrder()) ? lastProcessedUnit : undefined);\r\n        const translatedContent = changedTransUnit.targetContent();\r\n        if (translatedContent) { // issue #68 set translated only, if it is really translated\r\n            mergedTransUnit.translate(translatedContent);\r\n            mergedTransUnit.setTargetState(STATE_TRANSLATED);\r\n        }\r\n        return mergedTransUnit;\r\n    }\r\n    /**\r\n     * test wether the sources of 2 trans units are equal ignoring white spaces.\r\n     * @param tu1 tu1\r\n     * @param tu2 tu2\r\n     */\r\n    areSourcesNearlyEqual(tu1, tu2) {\r\n        if ((tu1 && !tu2) || (tu2 && !tu1)) {\r\n            return false;\r\n        }\r\n        const tu1Normalized = tu1.sourceContentNormalized();\r\n        const tu2Normalized = tu2.sourceContentNormalized();\r\n        if (tu1Normalized.isICUMessage()) {\r\n            if (tu2Normalized.isICUMessage()) {\r\n                const icu1Normalized = tu1Normalized.getICUMessage().asNativeString().trim();\r\n                const icu2Normalized = tu2Normalized.getICUMessage().asNativeString().trim();\r\n                return icu1Normalized === icu2Normalized;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        if (tu1Normalized.containsICUMessageRef()) {\r\n            const icuref1Normalized = tu1Normalized.asNativeString().trim();\r\n            const icuref2Normalized = tu2Normalized.asNativeString().trim();\r\n            return icuref1Normalized === icuref2Normalized;\r\n        }\r\n        const s1Normalized = tu1Normalized.asDisplayString(NORMALIZATION_FORMAT_DEFAULT).trim();\r\n        const s2Normalized = tu2Normalized.asDisplayString(NORMALIZATION_FORMAT_DEFAULT).trim();\r\n        return s1Normalized === s2Normalized;\r\n    }\r\n    areSourceReferencesEqual(ref1, ref2) {\r\n        if ((isNullOrUndefined(ref1) && !isNullOrUndefined(ref2)) || (isNullOrUndefined(ref2) && !isNullOrUndefined(ref1))) {\r\n            return false;\r\n        }\r\n        if (isNullOrUndefined(ref1) && isNullOrUndefined(ref2)) {\r\n            return true;\r\n        }\r\n        // bot refs are set now, convert to set to compare them\r\n        const set1 = new Set();\r\n        ref1.forEach((ref) => { set1.add(ref.sourcefile + ':' + ref.linenumber); });\r\n        const set2 = new Set();\r\n        ref2.forEach((ref) => { set2.add(ref.sourcefile + ':' + ref.linenumber); });\r\n        if (set1.size !== set2.size) {\r\n            return false;\r\n        }\r\n        let match = true;\r\n        set2.forEach((ref) => {\r\n            if (!set1.has(ref)) {\r\n                match = false;\r\n            }\r\n        });\r\n        return match;\r\n    }\r\n    /**\r\n     * Auto translate file via Google Translate.\r\n     * Will translate all new units in file.\r\n     * @param from from\r\n     * @param to to\r\n     * @param languageSpecificMessagesFile languageSpecificMessagesFile\r\n     * @return a promise with the execution result as a summary report.\r\n     */\r\n    autoTranslate(from, to, languageSpecificMessagesFile) {\r\n        let serviceCall;\r\n        const autotranslateEnabled = this.parameters.autotranslateLanguage(to);\r\n        if (autotranslateEnabled) {\r\n            serviceCall = this.autoTranslateService.autoTranslate(from, to, languageSpecificMessagesFile);\r\n        }\r\n        else {\r\n            serviceCall = of(new AutoTranslateSummaryReport(from, to));\r\n        }\r\n        return serviceCall.pipe(map((summary) => {\r\n            if (autotranslateEnabled) {\r\n                if (summary.error() || summary.failed() > 0) {\r\n                    this.commandOutput.error(summary.content());\r\n                }\r\n                else {\r\n                    this.commandOutput.warn(summary.content());\r\n                }\r\n            }\r\n            return summary;\r\n        }));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"xliff-merge.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/xliffmerge/xliff-merge.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[22,0,0,21],[24,0,0,22],[30,0,0,28],[56,0,0,54],[57,0,0,55]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[29,0,1,28],[31,0,1,29],[37,0,1,35],[63,0,1,61],[64,0,1,62]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[24,0,2,23],[26,0,2,24],[32,0,2,30],[53,0,2,51],[54,0,2,52]],[[0,0,3,0],[7,0,3,7],[9,0,3,8],[17,0,3,16],[19,0,3,17],[25,0,3,23],[46,0,3,44],[47,0,3,45]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[16,0,4,15],[18,0,4,16],[24,0,4,22],[35,0,4,33],[36,0,4,34]],[[0,0,5,0],[7,0,5,7],[9,0,5,8],[15,0,5,14],[17,0,5,15],[23,0,5,21],[29,0,5,27],[30,0,5,28]],[[0,0,6,0],[7,0,6,7],[9,0,6,8],[26,0,6,25],[28,0,6,26],[34,0,6,32],[50,0,6,48],[51,0,6,49]],[[0,0,7,0],[7,0,7,7],[9,0,8,4],[19,0,8,14],[21,0,8,16],[31,0,8,26],[33,0,9,4],[61,0,9,32],[63,0,9,34],[74,0,9,45],[76,0,9,47],[92,0,9,63],[94,0,9,64],[100,0,9,70],[138,0,9,108],[139,0,9,109]],[[0,0,11,0],[7,0,11,7],[9,0,11,8],[30,0,11,29],[32,0,11,30],[38,0,11,36],[65,0,11,63],[66,0,11,64]],[[0,0,12,0],[7,0,12,7],[9,0,12,8],[38,0,12,37],[40,0,12,38],[46,0,12,44],[82,0,12,80],[83,0,12,81]],[[0,0,13,0],[7,0,13,7],[9,0,13,20],[11,0,13,22],[13,0,13,24],[21,0,13,32],[23,0,13,33],[29,0,13,39],[35,0,13,45],[36,0,13,46]],[[0,0,14,0],[7,0,14,7],[9,0,14,8],[12,0,14,11],[14,0,14,13],[24,0,14,23],[26,0,14,24],[32,0,14,30],[48,0,14,46],[49,0,14,47]],[[0,0,15,0],[7,0,15,7],[9,0,15,8],[39,0,15,38],[41,0,15,39],[47,0,15,45],[100,0,15,98],[101,0,15,99]],[[0,0,16,0],[7,0,16,7],[9,0,16,8],[35,0,16,34],[37,0,16,35],[43,0,16,41],[91,0,16,89],[92,0,16,90]],[[0,0,18,0]],[],[],[],[[3,0,22,3]],[[0,0,24,0],[6,0,24,6],[13,0,24,13],[23,0,24,23]],[[4,0,105,4],[16,0,105,16],[29,0,105,44],[31,0,105,46],[38,0,105,69]],[[8,0,106,8],[12,0,106,12],[13,0,106,13],[26,0,106,26],[29,0,106,29],[42,0,106,42],[43,0,106,43]],[[8,0,107,8],[12,0,107,12],[13,0,107,13],[20,0,107,20],[23,0,107,23],[30,0,107,30],[31,0,107,31]],[[8,0,108,8],[12,0,108,12],[13,0,108,13],[23,0,108,23],[26,0,108,26],[30,0,108,30],[31,0,108,31]],[[4,0,109,4],[5,0,109,5]],[[4,0,39,4],[10,0,39,10],[11,0,39,11],[15,0,39,15],[16,0,39,16],[20,0,39,30]],[[8,0,40,8],[14,0,40,14],[21,0,40,21],[24,0,40,24],[34,0,40,34],[35,0,40,35],[44,0,40,44],[45,0,40,45],[49,0,40,49],[50,0,40,50],[51,0,40,51]],[[8,0,41,8],[12,0,41,12],[19,0,41,19],[21,0,41,21]],[[12,0,42,12],[16,0,42,16],[26,0,42,26],[27,0,42,27],[31,0,42,31],[44,0,42,44],[45,0,42,45],[52,0,42,52],[53,0,42,53],[59,0,42,59],[60,0,42,60],[62,0,42,62],[69,0,42,69],[70,0,42,70],[71,0,42,71],[74,0,42,74],[75,0,42,75],[76,0,42,76],[82,0,42,82],[84,0,42,84],[86,0,42,86]],[[16,0,43,16],[23,0,43,23],[24,0,43,24],[28,0,43,28],[29,0,43,29],[35,0,43,35],[36,0,43,36],[37,0,43,37]],[[12,0,44,12],[13,0,44,13],[14,0,44,14],[15,0,44,15]],[[9,0,45,9]],[[4,0,46,4],[5,0,46,5]],[[4,0,48,4],[10,0,48,10],[11,0,48,11],[20,0,48,20],[21,0,48,21],[25,0,48,35]],[[8,0,49,8],[14,0,49,14],[21,0,49,21],[24,0,49,40]],[[12,0,50,12],[21,0,50,21],[23,0,50,23],[25,0,50,25]],[[9,0,51,9],[10,0,51,10]],[[8,0,52,8],[13,0,52,13],[17,0,52,17],[18,0,52,18],[21,0,52,21],[22,0,52,22],[24,0,52,24],[25,0,52,25],[28,0,52,28],[32,0,52,32],[33,0,52,33],[39,0,52,39],[41,0,52,41],[42,0,52,42],[44,0,52,44],[46,0,52,46]],[[12,0,53,12],[18,0,53,18],[21,0,53,21],[24,0,53,24],[28,0,53,28],[29,0,53,29],[30,0,53,30],[31,0,53,31],[32,0,53,32]],[[12,0,54,12],[16,0,54,16],[19,0,54,19],[24,0,54,24],[35,0,54,35],[39,0,54,39],[42,0,54,42],[47,0,54,47],[57,0,54,57],[59,0,54,59]],[[16,0,55,16],[23,0,55,23],[24,0,55,24],[27,0,55,27],[28,0,55,28],[41,0,55,41],[44,0,55,44],[51,0,55,51],[52,0,55,52],[53,0,55,53]],[[13,0,56,13]],[[17,0,56,19],[21,0,56,23],[24,0,56,26],[29,0,56,31],[40,0,56,42],[44,0,56,46],[47,0,56,49],[52,0,56,54],[56,0,56,58],[58,0,56,60]],[[16,0,57,16],[23,0,57,23],[24,0,57,24],[31,0,57,31],[34,0,57,34],[38,0,57,38],[39,0,57,39]],[[13,0,58,13]],[[17,0,58,19],[21,0,58,23],[24,0,58,26],[29,0,58,31],[40,0,58,42],[44,0,58,46],[47,0,58,49],[52,0,58,54],[56,0,58,58],[58,0,58,60]],[[16,0,59,16],[17,0,59,17],[19,0,59,19],[20,0,59,20]],[[16,0,60,16],[20,0,60,20],[21,0,60,21],[25,0,60,25],[29,0,60,29],[30,0,60,30],[36,0,60,36],[38,0,60,38]],[[20,0,61,20],[27,0,61,27],[28,0,61,28],[31,0,61,31],[32,0,61,32],[53,0,61,53],[54,0,61,54],[55,0,61,55]],[[20,0,62,20],[30,0,62,30],[31,0,62,31],[40,0,62,40],[42,0,62,42],[43,0,62,43]],[[20,0,63,20],[27,0,63,27],[31,0,63,31],[32,0,63,32]],[[17,0,64,17]],[[21,0,64,23]],[[20,0,65,20],[27,0,65,27],[28,0,65,28],[39,0,65,39],[42,0,65,42],[46,0,65,46],[47,0,65,47],[48,0,65,48],[49,0,65,49],[50,0,65,50]],[[17,0,66,17]],[[13,0,67,13]],[[17,0,67,19],[21,0,67,23],[24,0,67,26],[29,0,67,31],[38,0,67,40],[42,0,67,44],[45,0,67,47],[50,0,67,52],[54,0,67,56],[56,0,67,58]],[[16,0,68,16],[23,0,68,23],[24,0,68,24],[29,0,68,29],[32,0,68,32],[36,0,68,36],[37,0,68,37]],[[13,0,69,13]],[[17,0,69,19],[21,0,69,23],[24,0,69,26],[29,0,69,31],[37,0,69,39],[41,0,69,43],[44,0,69,46],[49,0,69,51],[56,0,69,58],[60,0,69,62],[63,0,69,65],[68,0,69,70],[72,0,69,74],[74,0,69,76]],[[16,0,70,16],[26,0,70,26],[27,0,70,27],[36,0,70,36],[38,0,70,38],[39,0,70,39]],[[13,0,71,13]],[[17,0,71,19],[21,0,71,23],[24,0,71,26],[25,0,71,27],[31,0,71,33],[34,0,71,36],[35,0,71,37],[39,0,71,41],[42,0,71,44],[43,0,71,45],[49,0,71,51],[50,0,71,52],[51,0,71,53],[52,0,71,54],[57,0,71,59],[60,0,71,62],[62,0,71,64]],[[16,0,72,16],[23,0,72,23],[24,0,72,24],[27,0,72,27],[28,0,72,28],[44,0,72,44],[45,0,72,45],[46,0,72,46]],[[16,0,73,16],[23,0,73,23],[27,0,73,27],[28,0,73,28]],[[13,0,74,13]],[[17,0,74,19]],[[16,0,75,16],[23,0,75,23],[24,0,75,24],[33,0,75,33],[34,0,75,34],[38,0,75,38],[39,0,75,39],[42,0,75,42],[43,0,75,43],[44,0,75,44]],[[13,0,76,13]],[[9,0,77,9]],[[8,0,78,8],[15,0,78,15],[22,0,78,22],[23,0,78,23]],[[4,0,79,4],[5,0,79,5]],[[4,0,81,4],[10,0,81,10],[11,0,81,11],[20,0,81,20]],[[8,0,82,8],[15,0,82,15],[16,0,82,16],[19,0,82,19],[20,0,82,20],[61,0,82,61],[62,0,82,62],[63,0,82,63]],[[8,0,83,8],[15,0,83,15],[16,0,83,16],[19,0,83,19],[20,0,83,20],[29,0,83,29],[30,0,83,30],[31,0,83,31]],[[8,0,84,8],[15,0,84,15],[16,0,84,16],[19,0,84,19],[20,0,84,20],[98,0,84,98],[99,0,84,99],[100,0,84,100]],[[8,0,85,8],[15,0,85,15],[16,0,85,16],[19,0,85,19],[20,0,85,20],[112,0,85,112],[113,0,85,113],[114,0,85,114]],[[8,0,86,8],[15,0,86,15],[16,0,86,16],[19,0,86,19],[20,0,86,20],[76,0,86,76],[77,0,86,77],[78,0,86,78]],[[8,0,87,8],[15,0,87,15],[16,0,87,16],[19,0,87,19],[20,0,87,20],[65,0,87,65],[66,0,87,66],[67,0,87,67]],[[8,0,88,8],[15,0,88,15],[16,0,88,16],[19,0,88,19],[20,0,88,20],[62,0,88,62],[63,0,88,63],[64,0,88,64]],[[8,0,89,8],[15,0,89,15],[16,0,89,16],[19,0,89,19],[20,0,89,20],[22,0,89,22],[23,0,89,23],[24,0,89,24]],[[8,0,90,8],[15,0,90,15],[16,0,90,16],[19,0,90,19],[20,0,90,20],[100,0,90,100],[101,0,90,101],[102,0,90,102]],[[4,0,91,4],[5,0,91,5]],[[4,0,93,4]],[],[],[],[],[[7,0,98,7]],[[4,0,99,11],[10,0,99,17],[11,0,99,18],[28,0,99,35],[29,0,99,36],[42,0,99,64],[44,0,99,66],[51,0,99,89],[53,0,99,91],[67,0,99,119]],[[8,0,100,8],[14,0,100,14],[22,0,100,22],[25,0,100,25],[29,0,100,29],[39,0,100,39],[40,0,100,40],[53,0,100,53],[55,0,100,55],[62,0,100,62],[63,0,100,63],[64,0,100,64]],[[8,0,101,8],[16,0,101,16],[17,0,101,17],[27,0,101,27],[30,0,101,30],[50,0,101,50],[51,0,101,51],[68,0,101,68],[69,0,101,69],[76,0,101,76],[78,0,101,78],[92,0,101,92],[93,0,101,93],[94,0,101,94]],[[8,0,102,8],[15,0,102,15],[23,0,102,23],[24,0,102,24]],[[4,0,103,4],[5,0,103,5]],[[4,0,111,4]],[],[],[],[],[[7,0,116,7]],[[4,0,117,11],[7,0,117,14],[8,0,117,15],[24,0,117,60],[26,0,117,62],[39,0,117,99]],[[8,0,118,8],[12,0,118,12],[13,0,118,13],[21,0,118,21],[23,0,118,23]],[[13,0,119,13],[22,0,119,22],[23,0,119,23],[24,0,119,24],[31,0,119,39],[33,0,119,41],[35,0,119,43]],[[12,0,120,16],[16,0,120,20],[17,0,120,21],[34,0,120,38],[35,0,120,39],[51,0,120,55],[52,0,120,56],[54,0,120,58]],[[16,0,121,20],[32,0,121,36],[33,0,121,37],[40,0,121,44],[41,0,121,45],[42,0,121,46]],[[13,0,122,17]],[[8,0,123,12],[9,0,123,13],[11,0,123,15],[12,0,123,16],[17,0,123,21],[19,0,123,23],[21,0,123,25]],[[12,0,124,16],[16,0,124,20],[17,0,124,21],[34,0,124,38],[35,0,124,39],[48,0,124,52],[49,0,124,53],[51,0,124,55]],[[16,0,125,20],[29,0,125,33],[30,0,125,34],[35,0,125,39],[36,0,125,40],[37,0,125,41]],[[13,0,126,17]],[[8,0,127,12],[9,0,127,13],[10,0,127,14],[11,0,127,15]],[[4,0,128,4],[5,0,128,5]],[[4,0,130,4]],[],[],[[7,0,133,7]],[[4,0,134,11],[12,0,134,19]],[[8,0,135,8],[12,0,135,12],[16,0,135,16],[17,0,135,17],[24,0,135,24],[28,0,135,28],[32,0,135,32],[33,0,135,33],[40,0,135,40],[41,0,135,41],[46,0,135,46],[48,0,135,48]],[[12,0,136,12],[16,0,136,16],[17,0,136,17],[30,0,136,30],[31,0,136,31],[39,0,136,39],[41,0,136,41],[42,0,136,42]],[[9,0,137,9]],[[8,0,138,8],[12,0,138,12],[16,0,138,16],[17,0,138,17],[24,0,138,24],[28,0,138,28],[32,0,138,32],[33,0,138,33],[40,0,138,40],[41,0,138,41],[48,0,138,48],[50,0,138,50]],[[12,0,139,12],[16,0,139,16],[17,0,139,17],[30,0,139,30],[31,0,139,31],[41,0,139,41],[43,0,139,43],[44,0,139,44]],[[9,0,140,9]],[[8,0,141,8],[12,0,141,12],[13,0,141,13],[17,0,141,17],[18,0,141,18],[28,0,141,28],[30,0,141,30]],[[12,0,142,12],[16,0,142,16],[17,0,142,17],[27,0,142,27],[30,0,142,30],[50,0,142,50],[51,0,142,51],[68,0,142,68],[69,0,142,69],[73,0,142,73],[74,0,142,74],[81,0,142,81],[82,0,142,82],[83,0,142,83]],[[9,0,143,9]],[[8,0,144,8],[12,0,144,12],[13,0,144,13],[26,0,144,26],[27,0,144,27],[31,0,144,31],[32,0,144,32],[55,0,144,55],[57,0,144,57],[64,0,144,64],[65,0,144,65],[66,0,144,66]],[[8,0,145,8],[12,0,145,12],[16,0,145,16],[17,0,145,17],[27,0,145,27],[28,0,145,28],[35,0,145,35],[37,0,145,37],[39,0,145,39]],[[12,0,146,12],[16,0,146,16],[17,0,146,17],[27,0,146,27],[28,0,146,28],[45,0,146,45],[46,0,146,46],[50,0,146,50],[51,0,146,51],[64,0,146,64],[65,0,146,65],[66,0,146,66]],[[9,0,147,9]],[[8,0,148,8],[12,0,148,12],[16,0,148,16],[17,0,148,17],[27,0,148,27],[28,0,148,28],[39,0,148,39],[40,0,148,40],[46,0,148,46],[49,0,148,49],[50,0,148,50],[52,0,148,52]],[[12,0,149,12],[17,0,149,17],[23,0,149,23],[26,0,149,26],[30,0,149,30],[34,0,149,34],[35,0,149,35],[45,0,149,45],[46,0,149,46],[57,0,149,57],[59,0,149,59]],[[16,0,150,16],[20,0,150,20],[21,0,150,21],[34,0,150,34],[35,0,150,35],[40,0,150,40],[41,0,150,41],[44,0,150,44],[45,0,150,45],[52,0,150,52],[53,0,150,53],[54,0,150,54]],[[13,0,151,13]],[[12,0,152,12],[19,0,152,19],[21,0,152,21],[22,0,152,22],[23,0,152,23],[24,0,152,24],[25,0,152,25],[26,0,152,26]],[[9,0,153,9]],[[8,0,154,8],[12,0,154,12],[16,0,154,16],[17,0,154,17],[27,0,154,27],[28,0,154,28],[41,0,154,41],[42,0,154,42],[48,0,154,48],[51,0,154,51],[52,0,154,52],[54,0,154,54]],[[12,0,155,12],[17,0,155,17],[23,0,155,23],[27,0,155,27],[31,0,155,31],[35,0,155,35],[36,0,155,36],[46,0,155,46],[47,0,155,47],[60,0,155,60],[62,0,155,62]],[[16,0,156,16],[20,0,156,20],[21,0,156,21],[34,0,156,34],[35,0,156,35],[39,0,156,39],[40,0,156,40],[44,0,156,44],[45,0,156,45],[46,0,156,46]],[[13,0,157,13]],[[9,0,158,9]],[[8,0,159,8],[12,0,159,12],[13,0,159,13],[23,0,159,23],[25,0,159,25],[26,0,159,26]],[[8,0,160,8],[12,0,160,12],[16,0,160,16],[17,0,160,17],[27,0,160,27],[28,0,160,28],[41,0,160,41],[43,0,160,43],[45,0,160,45]],[[12,0,161,12],[16,0,161,16],[17,0,161,17],[37,0,161,37],[40,0,161,40],[44,0,161,44],[74,0,161,74],[75,0,161,75],[79,0,161,79],[80,0,161,80],[90,0,161,90],[91,0,161,91],[97,0,161,97],[99,0,161,99],[100,0,161,100],[101,0,161,101]],[[9,0,162,9]],[[8,0,163,8],[14,0,163,14],[38,0,163,38],[41,0,163,63],[43,0,163,65],[44,0,163,66]],[[8,0,164,8],[12,0,164,12],[13,0,164,13],[23,0,164,23],[24,0,164,24],[33,0,164,33],[35,0,164,35],[36,0,164,36],[43,0,164,43],[44,0,164,44],[45,0,164,45],[49,0,164,57],[51,0,164,59],[53,0,164,61]],[[12,0,165,12],[36,0,165,36],[37,0,165,37],[41,0,165,41],[42,0,165,42],[46,0,165,46],[47,0,165,47],[62,0,165,62],[63,0,165,63],[67,0,165,67],[68,0,165,68],[69,0,165,69],[70,0,165,70]],[[8,0,166,8],[9,0,166,9],[10,0,166,10],[11,0,166,11]],[[8,0,167,8],[15,0,167,15],[23,0,167,23],[24,0,167,24],[48,0,167,48],[49,0,167,49],[50,0,167,50],[54,0,167,54],[55,0,168,12],[58,0,168,15],[59,0,168,16],[60,0,168,17],[68,0,168,35],[70,0,168,37],[72,0,168,39],[73,0,168,40],[77,0,168,44],[78,0,168,45],[90,0,168,57],[91,0,168,58],[99,0,168,66],[100,0,168,67],[101,0,168,68],[102,0,168,69],[103,0,168,70]],[[4,0,169,4],[5,0,169,5]],[[4,0,171,4]],[],[],[],[],[[7,0,176,7]],[[4,0,177,12],[16,0,177,24],[17,0,177,25],[25,0,177,43]],[[8,0,178,8],[13,0,178,13],[17,0,178,17],[18,0,178,18],[21,0,178,21],[22,0,178,22],[24,0,178,24],[25,0,178,25],[28,0,178,28],[36,0,178,36],[37,0,178,37],[43,0,178,43],[45,0,178,45],[46,0,178,46],[48,0,178,48],[50,0,178,50]],[[12,0,179,12],[16,0,179,16],[24,0,179,24],[25,0,179,25],[26,0,179,26],[27,0,179,27],[32,0,179,32],[33,0,179,33],[35,0,179,35]],[[16,0,180,16],[23,0,180,23],[31,0,180,31],[32,0,180,32],[33,0,180,33],[34,0,180,34],[35,0,180,35]],[[13,0,181,13]],[[9,0,182,9]],[[8,0,183,8],[15,0,183,15],[16,0,183,16],[17,0,183,17]],[[4,0,184,4],[5,0,184,5]],[[4,0,186,4]],[],[],[],[[7,0,190,7]],[[4,0,191,11],[21,0,191,28],[22,0,191,29],[26,0,191,41]],[[8,0,192,8],[15,0,192,15],[19,0,192,19],[20,0,192,20],[30,0,192,30],[31,0,192,31],[48,0,192,48],[49,0,192,49],[53,0,192,53],[54,0,192,54],[55,0,192,55]],[[4,0,193,4],[5,0,193,5]],[[4,0,195,4]],[],[],[],[[7,0,199,7]],[[4,0,200,11],[29,0,200,36],[30,0,200,37],[34,0,200,49]],[[8,0,201,8],[15,0,201,15],[19,0,201,19],[20,0,201,20],[30,0,201,30],[31,0,201,31],[56,0,201,56],[57,0,201,57],[61,0,201,61],[62,0,201,62],[63,0,201,63]],[[4,0,202,4],[5,0,202,5]],[[4,0,204,4]],[],[],[[7,0,207,7]],[[4,0,208,11],[12,0,208,19]],[[8,0,209,8],[15,0,209,15],[19,0,209,19],[20,0,209,20],[30,0,209,30],[31,0,209,31],[44,0,209,44],[45,0,209,45]],[[4,0,210,4],[5,0,210,5]],[[4,0,212,12],[14,0,212,22]],[[8,0,213,8],[12,0,213,12]],[[12,0,214,12],[16,0,214,16],[17,0,214,17],[23,0,214,23],[26,0,214,26],[55,0,214,55],[56,0,214,56],[64,0,214,64],[65,0,215,16],[69,0,215,20],[70,0,215,21],[80,0,215,31],[81,0,215,32],[91,0,215,42],[93,0,215,44],[95,0,216,16],[99,0,216,20],[100,0,216,21],[110,0,216,31],[111,0,216,32],[119,0,216,40],[121,0,216,42],[123,0,217,16],[127,0,217,20],[128,0,217,21],[138,0,217,31],[139,0,217,32],[147,0,217,40],[149,0,217,60],[150,0,217,61],[151,0,217,62]],[[12,0,218,12],[16,0,218,16],[17,0,218,17],[23,0,218,23],[24,0,218,24],[32,0,218,32],[34,0,218,34],[35,0,218,35],[42,0,218,42],[43,0,218,43],[44,0,218,44],[51,0,218,59],[53,0,218,61],[55,0,218,63]],[[16,0,219,16],[20,0,219,20],[21,0,219,21],[34,0,219,34],[35,0,219,35],[39,0,219,39],[40,0,219,40],[47,0,219,47],[48,0,219,48],[49,0,219,49]],[[12,0,220,12],[13,0,220,13],[14,0,220,14],[15,0,220,15]],[[12,0,221,12],[18,0,221,18],[23,0,221,23],[26,0,221,26],[30,0,221,30],[31,0,221,31],[37,0,221,37],[38,0,221,38],[56,0,221,56],[58,0,221,58],[59,0,221,59]],[[12,0,222,12],[18,0,222,18],[32,0,222,32],[35,0,222,35],[39,0,222,39],[40,0,222,40],[46,0,222,46],[47,0,222,47],[78,0,222,78],[80,0,222,80],[81,0,222,81]],[[12,0,223,12],[16,0,223,16],[17,0,223,17],[30,0,223,30],[31,0,223,31],[35,0,223,35],[36,0,223,36],[68,0,223,68],[70,0,223,70],[75,0,223,75],[76,0,223,76],[77,0,223,77]],[[12,0,224,12],[16,0,224,16],[30,0,224,30],[33,0,224,33],[34,0,224,34],[36,0,224,36]],[[16,0,225,16],[20,0,225,20],[21,0,225,21],[34,0,225,34],[35,0,225,35],[39,0,225,39],[40,0,225,40],[101,0,225,101],[103,0,225,103],[108,0,225,108],[110,0,225,110],[124,0,225,124],[125,0,225,125],[126,0,225,126]],[[13,0,226,13]],[[12,0,227,12],[18,0,227,18],[28,0,227,28],[31,0,227,39],[35,0,227,43],[36,0,227,44],[42,0,227,50],[43,0,227,51],[57,0,227,65],[59,0,227,67],[60,0,227,68]],[[12,0,228,12],[16,0,228,16],[26,0,228,26],[30,0,228,30],[40,0,228,40],[45,0,228,45],[49,0,228,49],[50,0,228,50],[60,0,228,60],[61,0,228,61],[76,0,228,76],[78,0,228,78],[80,0,228,80]],[[16,0,229,16],[20,0,229,20],[21,0,229,21],[34,0,229,34],[35,0,229,35],[39,0,229,39],[40,0,230,20],[121,0,230,101],[123,0,231,20],[133,0,231,30],[135,0,232,20],[139,0,232,24],[140,0,232,25],[150,0,232,35],[151,0,232,36],[166,0,232,51],[168,0,232,53],[169,0,232,54],[170,0,232,55]],[[16,0,233,16],[20,0,233,20],[21,0,233,21],[27,0,233,27],[28,0,233,28],[45,0,233,45],[46,0,233,46],[50,0,233,50],[51,0,233,51],[61,0,233,61],[62,0,233,62],[77,0,233,77],[79,0,233,79],[80,0,233,80],[81,0,233,81]],[[16,0,234,16],[45,0,234,45],[46,0,234,46],[50,0,234,50],[51,0,234,51],[55,0,234,55],[56,0,234,56],[62,0,234,62],[64,0,234,64],[68,0,234,68],[69,0,234,69],[79,0,234,79],[80,0,234,80],[94,0,234,94],[96,0,234,96],[97,0,234,97],[98,0,234,98]],[[16,0,235,16],[20,0,235,20],[21,0,235,21],[34,0,235,34],[35,0,235,35],[39,0,235,39],[40,0,235,40],[85,0,235,85],[87,0,235,87],[97,0,235,97],[99,0,235,99],[103,0,235,103],[104,0,235,104],[114,0,235,114],[115,0,235,115],[130,0,235,130],[132,0,235,132],[133,0,235,133],[134,0,235,134]],[[13,0,236,13]],[[9,0,237,9]],[[8,0,237,10],[15,0,237,17],[18,0,237,20],[20,0,237,22]],[[12,0,238,12],[16,0,238,16],[19,0,238,19],[31,0,238,31],[46,0,238,46],[48,0,238,48]],[[16,0,239,16],[20,0,239,20],[21,0,239,21],[34,0,239,34],[35,0,239,35],[40,0,239,40],[41,0,239,41],[44,0,239,44],[45,0,239,45],[52,0,239,52],[53,0,239,53],[54,0,239,54]],[[16,0,240,16],[23,0,240,23],[25,0,240,25],[26,0,240,26],[27,0,240,27],[28,0,240,28],[29,0,240,29],[30,0,240,30]],[[13,0,241,13]],[[17,0,241,19]],[[16,0,242,16],[28,0,242,28]],[[16,0,243,16],[22,0,243,22],[37,0,243,37],[40,0,243,40],[44,0,243,44],[45,0,243,45],[55,0,243,55],[56,0,243,56],[64,0,243,64],[66,0,243,66],[67,0,243,67]],[[16,0,244,16],[22,0,244,22],[36,0,244,36],[39,0,244,39],[40,0,244,40],[55,0,244,55],[56,0,244,56],[57,0,244,57],[58,0,244,58],[59,0,244,59],[65,0,244,65],[66,0,244,66],[79,0,244,79],[81,0,244,81],[96,0,244,96],[97,0,244,97],[98,0,244,98],[99,0,244,99],[100,0,244,100],[102,0,244,102],[103,0,244,103]],[[16,0,245,16],[20,0,245,20],[21,0,245,21],[34,0,245,34],[35,0,245,35],[40,0,245,40],[41,0,245,41],[55,0,245,55],[58,0,245,58],[65,0,245,65],[68,0,245,68],[71,0,245,71],[72,0,245,72],[73,0,245,73]],[[16,0,246,16],[22,0,246,22],[25,0,246,25],[26,0,246,26]],[[13,0,247,13]],[[9,0,248,9]],[[4,0,249,4],[5,0,249,5]],[[4,0,251,4]],[],[],[],[],[[7,0,256,7]],[[4,0,257,12],[19,0,257,27],[20,0,257,28],[24,0,257,40]],[[8,0,258,8],[12,0,258,12],[13,0,258,13],[26,0,258,26],[27,0,258,27],[32,0,258,32],[33,0,258,33],[57,0,258,57],[59,0,258,59],[63,0,258,63],[64,0,258,64],[65,0,258,65]],[[8,0,259,8],[14,0,259,14],[31,0,259,31],[34,0,259,34],[38,0,259,38],[39,0,259,39],[49,0,259,49],[50,0,259,50],[67,0,259,67],[68,0,259,68],[72,0,259,72],[73,0,259,73],[74,0,259,74]],[[8,0,260,8],[14,0,260,14],[29,0,260,29],[32,0,260,32],[49,0,260,49],[50,0,260,50]],[[8,0,261,8],[12,0,261,12],[18,0,261,36],[19,0,261,37]],[[8,0,262,8],[12,0,262,12],[13,0,262,13],[21,0,262,21],[22,0,262,22],[28,0,262,28],[29,0,262,29],[46,0,262,46],[47,0,262,47],[49,0,262,49]],[[12,0,263,12],[18,0,263,18],[21,0,263,21],[25,0,263,25],[26,0,263,26],[49,0,263,49],[50,0,263,50],[54,0,263,54],[56,0,263,56],[73,0,263,73],[74,0,263,74],[75,0,263,75]],[[9,0,264,9]],[[13,0,264,15]],[[12,0,265,12],[18,0,265,18],[21,0,265,21],[25,0,265,25],[26,0,265,26],[39,0,265,39],[40,0,265,40],[44,0,265,44],[46,0,265,46],[63,0,265,63],[64,0,265,64],[65,0,265,65]],[[9,0,266,9]],[[8,0,267,8],[15,0,267,15],[21,0,267,21]],[[13,0,268,13],[17,0,268,17],[18,0,268,18],[21,0,268,21],[22,0,268,22],[25,0,268,25],[27,0,268,27]],[[12,0,269,16],[16,0,269,20],[20,0,269,24],[21,0,269,25],[31,0,269,35],[32,0,269,36],[51,0,269,55],[53,0,269,57],[55,0,269,59]],[[16,0,270,20],[22,0,270,26],[50,0,270,54],[53,0,271,24],[82,0,271,53],[83,0,271,54],[91,0,271,62],[92,0,272,28],[96,0,272,32],[97,0,272,33],[114,0,272,50],[115,0,272,51],[119,0,272,55],[120,0,272,56],[130,0,272,66],[131,0,272,67],[141,0,272,77],[143,0,272,79],[144,0,272,80],[146,0,273,28],[163,0,273,45],[165,0,274,28],[169,0,274,32],[170,0,274,33],[180,0,274,43],[181,0,274,44],[189,0,274,52],[191,0,274,54],[193,0,275,28],[197,0,275,32],[198,0,275,33],[204,0,275,39],[205,0,275,40],[213,0,275,48],[215,0,275,50],[216,0,275,51],[217,0,275,52]],[[16,0,276,20],[37,0,276,41],[38,0,276,42],[45,0,276,49],[46,0,277,24],[74,0,277,52],[76,0,278,24],[80,0,278,28],[81,0,278,29],[91,0,278,39],[92,0,278,40],[121,0,278,69],[123,0,278,71],[125,0,279,24],[129,0,279,28],[130,0,279,29],[140,0,279,39],[141,0,279,40],[166,0,279,65],[167,0,279,66],[171,0,279,70],[172,0,279,71],[173,0,279,72],[174,0,279,73]],[[13,0,280,17]],[[12,0,281,16],[19,0,281,23],[20,0,281,24],[21,0,281,25]],[[8,0,282,12],[9,0,282,13],[10,0,282,14],[12,0,282,16],[22,0,282,26],[23,0,282,27],[24,0,282,28],[27,0,282,31],[29,0,282,33],[31,0,282,35]],[[12,0,283,16],[16,0,283,20],[19,0,283,23],[31,0,283,35],[46,0,283,50],[48,0,283,52]],[[16,0,284,20],[20,0,284,24],[21,0,284,25],[34,0,284,38],[35,0,284,39],[40,0,284,44],[41,0,284,45],[44,0,284,48],[45,0,284,49],[52,0,284,56],[53,0,284,57],[54,0,284,58]],[[16,0,285,20],[23,0,285,27],[25,0,285,29],[26,0,285,30],[27,0,285,31],[28,0,285,32],[29,0,285,33],[30,0,285,34]],[[13,0,286,17]],[[17,0,286,23]],[[16,0,287,20],[28,0,287,32]],[[16,0,288,20],[22,0,288,26],[36,0,288,40],[39,0,288,43],[40,0,288,44],[55,0,288,59],[56,0,288,60],[57,0,288,61],[58,0,288,62],[59,0,288,63],[65,0,288,69],[66,0,288,70],[79,0,288,83],[81,0,288,85],[96,0,288,100],[97,0,288,101],[98,0,288,102],[99,0,288,103],[100,0,288,104],[102,0,288,106],[103,0,288,107]],[[16,0,289,20],[20,0,289,24],[21,0,289,25],[34,0,289,38],[35,0,289,39],[40,0,289,44],[41,0,289,45],[55,0,289,59],[58,0,289,62],[65,0,289,69],[68,0,289,72],[71,0,289,75],[72,0,289,76],[73,0,289,77]],[[16,0,290,20],[22,0,290,26],[25,0,290,29],[26,0,290,30]],[[13,0,291,17]],[[8,0,292,12],[9,0,292,13],[10,0,292,14],[11,0,292,15],[12,0,292,16]],[[4,0,293,4],[5,0,293,5]],[[4,0,295,4]],[],[],[],[],[[7,0,300,7]],[[4,0,301,12],[27,0,301,35],[28,0,301,36],[32,0,301,48],[34,0,301,50],[55,0,301,79]],[[8,0,302,8],[26,0,302,26]],[[8,0,303,8],[34,0,303,34]],[[8,0,304,8],[49,0,304,49]],[[8,0,305,8],[14,0,305,14],[27,0,305,27],[30,0,305,39],[31,0,305,40],[35,0,305,44],[40,0,305,49],[44,0,305,53],[45,0,305,54],[55,0,305,64],[56,0,305,65],[71,0,305,80],[73,0,305,82],[74,0,305,83],[75,0,305,84]],[[8,0,306,8],[12,0,306,12],[13,0,306,13],[19,0,306,19],[20,0,306,20],[48,0,306,48],[49,0,306,49],[53,0,306,53],[54,0,306,54],[64,0,306,64],[65,0,306,65],[78,0,306,78],[80,0,306,80],[81,0,306,81],[82,0,306,82]],[[8,0,307,8],[12,0,307,12],[13,0,307,13],[19,0,307,19],[20,0,307,20],[47,0,307,47],[48,0,307,48],[52,0,307,52],[53,0,307,53],[63,0,307,63],[64,0,307,64],[76,0,307,76],[78,0,307,78],[79,0,307,79],[80,0,307,80]],[[8,0,308,8],[14,0,308,14],[42,0,308,42],[45,0,309,12],[49,0,309,16],[50,0,309,17],[56,0,309,23],[57,0,309,24],[85,0,309,52],[86,0,309,53],[90,0,309,57],[92,0,309,59],[113,0,309,80],[115,0,309,82],[128,0,309,95],[130,0,309,97],[134,0,309,101],[135,0,309,102],[145,0,309,112],[146,0,309,113],[163,0,309,130],[165,0,309,132],[166,0,309,133],[167,0,309,134]],[[8,0,310,8],[15,0,310,15],[19,0,310,19],[20,0,310,20],[33,0,310,33],[34,0,310,34],[38,0,310,38],[39,0,310,39],[45,0,310,45],[46,0,310,46],[60,0,310,60],[62,0,310,62],[64,0,310,64],[68,0,310,68],[70,0,310,70],[98,0,310,98],[99,0,310,99],[100,0,310,100],[104,0,310,104],[105,0,311,12],[108,0,311,15],[109,0,311,16],[111,0,311,17],[124,0,311,30],[126,0,311,32],[128,0,311,34]],[[12,0,312,12],[31,0,312,31]],[[12,0,313,12],[41,0,313,41],[42,0,313,42],[46,0,313,46],[47,0,313,47],[75,0,313,75],[77,0,313,77],[81,0,313,81],[82,0,313,82],[92,0,313,92],[93,0,313,93],[107,0,313,107],[109,0,313,109],[110,0,313,110],[111,0,313,111]],[[12,0,314,12],[16,0,314,16],[17,0,314,17],[30,0,314,30],[31,0,314,31],[35,0,314,35],[36,0,314,36],[84,0,314,84],[86,0,314,86],[107,0,314,107],[109,0,314,109],[113,0,314,113],[114,0,314,114],[115,0,314,115]],[[12,0,315,12],[16,0,315,16],[17,0,315,17],[30,0,315,30],[32,0,315,32]],[[16,0,316,16],[20,0,316,20],[21,0,316,21],[34,0,316,34],[35,0,316,35],[39,0,316,39],[40,0,316,40],[92,0,316,92],[94,0,316,94],[115,0,316,115],[117,0,316,117],[121,0,316,121],[122,0,316,122],[123,0,316,123]],[[13,0,317,13]],[[12,0,318,12],[19,0,318,19],[23,0,318,23],[24,0,318,24]],[[8,0,319,8],[9,0,319,9],[10,0,319,10],[11,0,319,11],[12,0,319,12]],[[4,0,320,4],[5,0,320,5]],[[4,0,322,4]],[],[],[],[[7,0,326,7]],[[4,0,327,12],[21,0,327,29],[22,0,327,30],[32,0,327,48]],[[8,0,328,8],[12,0,328,12],[22,0,328,22],[27,0,328,27],[37,0,328,37],[39,0,328,39]],[[12,0,329,12],[19,0,329,19],[29,0,329,29],[30,0,329,30]],[[9,0,330,9]],[[13,0,330,15]],[[12,0,331,12],[19,0,331,19],[29,0,331,29],[30,0,331,30]],[[9,0,332,9]],[[4,0,333,4],[5,0,333,5]],[[4,0,335,4]],[],[],[],[[7,0,339,7]],[[4,0,340,12],[17,0,340,25],[18,0,340,26],[22,0,340,38],[24,0,340,40],[45,0,340,69]],[[8,0,341,8],[34,0,341,34]],[[8,0,342,8],[14,0,342,14],[42,0,342,42],[45,0,343,12],[74,0,343,41],[75,0,343,42],[83,0,343,50],[84,0,344,16],[88,0,344,20],[89,0,344,21],[106,0,344,38],[107,0,344,39],[111,0,344,43],[112,0,344,44],[122,0,344,54],[123,0,344,55],[133,0,344,65],[135,0,344,67],[136,0,344,68],[138,0,345,16],[159,0,345,37],[161,0,346,16],[165,0,346,20],[166,0,346,21],[176,0,346,31],[177,0,346,32],[185,0,346,40],[187,0,346,42],[188,0,346,43],[189,0,346,44]],[[8,0,347,8],[14,0,347,14],[27,0,347,27],[30,0,347,39],[31,0,347,40],[35,0,347,44],[40,0,347,49],[44,0,347,53],[45,0,347,54],[55,0,347,64],[56,0,347,65],[71,0,347,80],[73,0,347,82],[74,0,347,83],[75,0,347,84]],[[8,0,348,8],[12,0,348,12],[20,0,348,20],[23,0,348,23],[24,0,348,24],[25,0,348,25]],[[8,0,349,8],[12,0,349,12],[37,0,349,37],[40,0,349,40],[41,0,349,41],[42,0,349,42]],[[8,0,350,8],[12,0,350,12],[33,0,350,33],[36,0,350,36],[37,0,350,37],[38,0,350,38]],[[8,0,351,8],[12,0,351,12],[44,0,351,44],[47,0,351,47],[48,0,351,48],[49,0,351,49]],[[8,0,352,8],[12,0,352,12],[26,0,352,26],[29,0,352,29],[30,0,352,30],[31,0,352,31]],[[8,0,353,8],[36,0,353,36],[37,0,353,37],[65,0,353,65],[66,0,353,66],[70,0,353,70],[71,0,353,71],[81,0,353,81],[82,0,353,82],[95,0,353,95],[97,0,353,97],[98,0,353,98],[99,0,353,99]],[[8,0,354,8],[36,0,354,36],[37,0,354,37],[64,0,354,64],[65,0,354,65],[69,0,354,69],[70,0,354,70],[80,0,354,80],[81,0,354,81],[93,0,354,93],[95,0,354,95],[96,0,354,96],[97,0,354,97]],[[8,0,355,8],[12,0,355,12],[29,0,355,29],[32,0,355,44],[36,0,355,48],[37,0,355,49]],[[8,0,356,8],[12,0,356,12],[13,0,356,13],[19,0,356,19],[20,0,356,20],[36,0,356,36],[37,0,356,37],[38,0,356,38],[53,0,356,53],[55,0,356,55],[57,0,356,57]],[[12,0,357,12],[18,0,357,18],[27,0,357,27],[30,0,357,42],[58,0,357,70],[59,0,357,71],[74,0,357,86],[75,0,357,87],[90,0,357,102],[91,0,357,103],[93,0,357,105],[94,0,357,106],[95,0,357,107]],[[12,0,359,12],[16,0,359,16],[17,0,359,17],[26,0,359,26],[28,0,359,28]],[[16,0,360,16],[69,0,360,69]],[[16,0,361,16],[20,0,361,20],[27,0,361,27],[28,0,361,28]],[[16,0,362,16],[20,0,362,20],[24,0,362,24],[25,0,362,25],[35,0,362,35],[36,0,362,36],[49,0,362,49],[51,0,362,51]],[[23,0,363,23],[24,0,363,24],[31,0,363,31],[34,0,363,34],[38,0,363,38],[39,0,363,39],[59,0,363,59],[60,0,363,60],[75,0,363,75],[77,0,363,77],[105,0,363,105],[107,0,363,107],[124,0,363,124],[125,0,363,125],[126,0,363,126],[128,0,363,128]],[[20,0,364,20],[37,0,364,37],[40,0,364,40],[47,0,364,47],[48,0,364,48]],[[20,0,365,20],[34,0,365,34],[36,0,365,36],[37,0,365,37]],[[17,0,366,17]],[[21,0,366,23]],[[20,0,367,20],[37,0,367,37],[40,0,367,40],[68,0,367,68],[69,0,367,69],[87,0,367,87],[88,0,368,24],[103,0,368,39],[105,0,369,24],[118,0,369,37],[120,0,370,24],[124,0,370,28],[125,0,370,29],[135,0,370,39],[136,0,370,40],[153,0,370,57],[155,0,370,59],[157,0,371,24],[158,0,371,25],[162,0,371,29],[163,0,371,30],[173,0,371,40],[174,0,371,41],[187,0,371,54],[189,0,371,56],[190,0,371,57],[191,0,371,58],[192,0,371,59],[193,0,371,60],[210,0,371,77],[211,0,371,78],[212,0,371,79],[213,0,371,80],[222,0,371,89],[223,0,371,90],[224,0,371,91]],[[20,0,372,20],[28,0,372,28],[30,0,372,30],[31,0,372,31]],[[17,0,373,17]],[[13,0,374,13]],[[17,0,374,19]],[[16,0,375,16],[75,0,375,75]],[[16,0,376,16],[117,0,376,117]],[[16,0,377,16],[20,0,377,20],[29,0,377,29],[30,0,377,30],[54,0,377,54],[56,0,377,56],[60,0,377,60],[61,0,377,61],[65,0,377,65],[66,0,377,66],[87,0,377,87],[88,0,377,88],[103,0,377,103],[105,0,377,105],[114,0,377,114],[115,0,377,115],[117,0,377,117]],[[20,0,378,20],[29,0,378,29],[30,0,378,30],[46,0,378,46],[47,0,378,47],[62,0,378,62],[63,0,378,63],[76,0,378,76],[78,0,378,78],[79,0,378,79],[80,0,378,80]],[[20,0,379,20],[24,0,379,24],[37,0,379,37],[39,0,379,39]],[[24,0,380,24],[87,0,380,87]],[[24,0,381,24],[33,0,381,33],[34,0,381,34],[43,0,381,43],[44,0,381,44],[59,0,381,59],[60,0,381,60],[73,0,381,73],[75,0,381,75],[76,0,381,76],[77,0,381,77]],[[24,0,382,24],[33,0,382,33],[34,0,382,34],[48,0,382,48],[49,0,382,49],[60,0,382,60],[61,0,382,61],[62,0,382,62]],[[21,0,383,21]],[[25,0,383,27]],[[24,0,384,24],[28,0,384,28],[37,0,384,37],[38,0,384,38],[49,0,384,49],[51,0,384,51],[56,0,384,56],[67,0,384,67],[69,0,384,69]],[[28,0,385,28],[88,0,385,88]],[[28,0,386,28],[37,0,386,37],[38,0,386,38],[52,0,386,52],[53,0,386,53],[69,0,386,69],[70,0,386,70],[71,0,386,71]],[[25,0,387,25]],[[21,0,388,21]],[[20,0,389,20],[45,0,389,45],[47,0,389,47],[48,0,389,48]],[[17,0,390,17]],[[16,0,391,16],[79,0,391,79]],[[16,0,392,16],[20,0,392,20],[29,0,392,29],[30,0,392,30],[57,0,392,57],[59,0,392,59]],[[23,0,393,23],[24,0,393,24],[28,0,393,28],[29,0,393,29],[53,0,393,53],[54,0,393,54],[69,0,393,69],[70,0,393,70],[86,0,393,86],[88,0,393,88],[90,0,393,90],[99,0,393,99],[100,0,393,100],[116,0,393,116],[118,0,393,118],[119,0,393,119],[121,0,393,121]],[[20,0,394,20],[29,0,394,29],[30,0,394,30],[49,0,394,49],[50,0,394,50],[65,0,394,65],[66,0,394,66],[82,0,394,82],[84,0,394,84],[85,0,394,85],[86,0,394,86]],[[20,0,395,20],[41,0,395,41],[43,0,395,43],[44,0,395,44]],[[17,0,396,17]],[[16,0,397,16],[59,0,397,59]],[[16,0,398,16],[20,0,398,20],[29,0,398,29],[30,0,398,30],[62,0,398,62],[64,0,398,64],[66,0,398,66]],[[20,0,399,20],[24,0,399,24],[31,0,399,31],[34,0,399,34],[39,0,399,39],[40,0,399,40]],[[20,0,400,20],[24,0,400,24],[33,0,400,33],[34,0,400,34],[45,0,400,45],[47,0,400,47],[52,0,400,52],[67,0,400,67],[68,0,400,68],[79,0,400,79],[81,0,400,81],[83,0,400,83]],[[24,0,401,24],[33,0,401,33],[34,0,401,34],[48,0,401,48],[49,0,401,49],[64,0,401,64],[65,0,401,65],[76,0,401,76],[78,0,401,78],[79,0,401,79],[80,0,401,80]],[[24,0,402,24],[31,0,402,31],[34,0,402,34],[38,0,402,38],[39,0,402,39]],[[21,0,403,21]],[[20,0,404,20],[24,0,404,24],[33,0,404,33],[34,0,404,34],[41,0,404,41],[43,0,404,43],[48,0,404,48],[63,0,404,63],[64,0,404,64],[71,0,404,71],[73,0,404,73],[75,0,404,75]],[[24,0,405,24],[33,0,405,33],[34,0,405,34],[44,0,405,44],[45,0,405,45],[60,0,405,60],[61,0,405,61],[68,0,405,68],[70,0,405,70],[71,0,405,71],[72,0,405,72]],[[24,0,406,24],[31,0,406,31],[34,0,406,34],[38,0,406,38],[39,0,406,39]],[[21,0,407,21]],[[20,0,408,20],[24,0,408,24],[31,0,408,31],[33,0,408,33]],[[24,0,409,24],[56,0,409,56],[58,0,409,58],[59,0,409,59]],[[21,0,410,21]],[[17,0,411,17]],[[16,0,412,16],[33,0,412,33],[36,0,412,36],[45,0,412,45],[46,0,412,46]],[[13,0,413,13]],[[8,0,414,8],[9,0,414,9],[10,0,414,10],[11,0,414,11]],[[8,0,415,8],[12,0,415,12],[20,0,415,20],[23,0,415,23],[24,0,415,24],[26,0,415,26]],[[12,0,416,12],[16,0,416,16],[17,0,416,17],[30,0,416,30],[31,0,416,31],[35,0,416,35],[36,0,416,36],[79,0,416,79],[81,0,416,81],[89,0,416,89],[91,0,416,91],[95,0,416,95],[96,0,416,96],[97,0,416,97]],[[9,0,417,9]],[[8,0,418,8],[12,0,418,12],[37,0,418,37],[40,0,418,40],[41,0,418,41],[43,0,418,43]],[[12,0,419,12],[16,0,419,16],[17,0,419,17],[30,0,419,30],[31,0,419,31],[35,0,419,35],[36,0,419,36],[95,0,419,95],[97,0,419,97],[122,0,419,122],[124,0,419,124],[128,0,419,128],[129,0,419,129],[130,0,419,130]],[[9,0,420,9]],[[8,0,421,8],[12,0,421,12],[33,0,421,33],[36,0,421,36],[37,0,421,37],[39,0,421,39]],[[12,0,422,12],[16,0,422,16],[17,0,422,17],[30,0,422,30],[31,0,422,31],[35,0,422,35],[36,0,422,36],[90,0,422,90],[92,0,422,92],[113,0,422,113],[115,0,422,115],[119,0,422,119],[120,0,422,120],[121,0,422,121]],[[9,0,423,9]],[[8,0,424,8],[12,0,424,12],[26,0,424,26],[29,0,424,29],[30,0,424,30],[32,0,424,32]],[[12,0,425,12],[16,0,425,16],[17,0,425,17],[30,0,425,30],[31,0,425,31],[35,0,425,35],[36,0,425,36],[68,0,425,68],[70,0,425,70],[84,0,425,84],[86,0,425,86],[90,0,425,90],[91,0,425,91],[92,0,425,92]],[[9,0,426,9]],[[8,0,427,8],[12,0,427,12],[44,0,427,44],[47,0,427,47],[48,0,427,48],[50,0,427,50]],[[12,0,428,12],[16,0,428,16],[17,0,428,17],[30,0,428,30],[31,0,428,31],[35,0,428,35],[36,0,429,16],[102,0,429,82],[104,0,429,84],[136,0,429,116],[138,0,429,118],[142,0,429,122],[143,0,429,123],[144,0,429,124]],[[9,0,430,9]],[[8,0,432,8],[54,0,432,54]],[[8,0,433,8],[12,0,433,12],[23,0,433,23],[26,0,433,26],[27,0,433,27],[28,0,433,28]],[[8,0,434,8],[36,0,434,36],[37,0,434,37],[53,0,434,53],[54,0,434,54],[55,0,434,55],[64,0,434,76],[66,0,434,78],[68,0,434,80]],[[12,0,435,12],[18,0,435,18],[32,0,435,32],[35,0,435,35],[36,0,435,36],[53,0,435,53],[54,0,435,54],[58,0,435,58],[59,0,435,59],[65,0,435,65],[66,0,435,66],[81,0,435,81],[82,0,435,82],[91,0,435,91],[92,0,435,92],[94,0,435,94],[95,0,435,95],[96,0,435,96],[97,0,435,97]],[[12,0,436,12],[16,0,436,16],[17,0,436,17],[31,0,436,31],[33,0,436,33]],[[16,0,437,16],[20,0,437,20],[24,0,437,24],[25,0,437,25],[35,0,437,35],[36,0,437,36],[51,0,437,51],[53,0,437,53],[55,0,437,55]],[[20,0,438,20],[48,0,438,48],[49,0,438,49],[70,0,438,70],[71,0,438,71],[80,0,438,80],[81,0,438,81],[83,0,438,83],[84,0,438,84],[85,0,438,85]],[[17,0,439,17]],[[16,0,440,16],[27,0,440,27],[29,0,440,29],[30,0,440,30]],[[13,0,441,13]],[[8,0,442,8],[9,0,442,9],[10,0,442,10],[11,0,442,11]],[[8,0,443,8],[12,0,443,12],[23,0,443,23],[26,0,443,26],[27,0,443,27],[29,0,443,29]],[[12,0,444,12],[16,0,444,16],[20,0,444,20],[21,0,444,21],[31,0,444,31],[32,0,444,32],[47,0,444,47],[49,0,444,49],[51,0,444,51]],[[16,0,445,16],[20,0,445,20],[21,0,445,21],[34,0,445,34],[35,0,445,35],[39,0,445,39],[40,0,445,40],[79,0,445,79],[81,0,445,81],[92,0,445,92],[94,0,445,94],[98,0,445,98],[99,0,445,99],[100,0,445,100]],[[13,0,446,13]],[[17,0,446,19]],[[16,0,447,16],[20,0,447,20],[21,0,447,21],[34,0,447,34],[35,0,447,35],[39,0,447,39],[40,0,447,40],[113,0,447,113],[115,0,447,115],[126,0,447,126],[128,0,447,128],[132,0,447,132],[133,0,447,133],[134,0,447,134]],[[13,0,448,13]],[[9,0,449,9]],[[8,0,451,8],[12,0,451,12],[20,0,451,20],[25,0,451,25],[26,0,451,26],[30,0,451,30],[41,0,451,41],[46,0,451,46],[47,0,451,47],[51,0,451,51],[76,0,451,76],[81,0,451,81],[82,0,451,82]],[[15,0,452,15],[36,0,452,36],[41,0,452,41],[42,0,452,42],[46,0,452,46],[78,0,452,78],[83,0,452,83],[84,0,452,84],[86,0,452,86]],[[12,0,453,12],[16,0,453,16],[17,0,453,17],[30,0,453,30],[31,0,453,31],[35,0,453,35],[36,0,453,36],[66,0,453,66],[68,0,453,68],[72,0,453,72],[73,0,453,73],[74,0,453,74]],[[12,0,454,12],[19,0,454,19],[21,0,454,21],[22,0,454,22],[26,0,454,26],[27,0,454,27],[28,0,454,28]],[[9,0,455,9]],[[13,0,455,15]],[[12,0,456,12],[19,0,456,19],[23,0,456,23],[24,0,456,24],[37,0,456,37],[38,0,456,38],[42,0,456,42],[43,0,456,43],[49,0,456,49],[50,0,456,50],[64,0,456,64],[66,0,456,66],[68,0,456,68],[72,0,456,72],[74,0,456,74],[102,0,456,102],[103,0,456,103]],[[17,0,457,17],[21,0,457,21],[22,0,457,22],[25,0,457,25],[26,0,457,26],[29,0,457,29],[31,0,457,31]],[[16,0,458,20],[35,0,458,39]],[[16,0,459,20],[45,0,459,49],[46,0,459,50],[50,0,459,54],[51,0,459,55],[79,0,459,83],[81,0,459,85],[85,0,459,89],[86,0,459,90],[96,0,459,100],[97,0,459,101],[111,0,459,115],[113,0,459,117],[114,0,459,118],[115,0,459,119]],[[16,0,460,20],[20,0,460,24],[21,0,460,25],[34,0,460,38],[35,0,460,39],[39,0,460,43],[40,0,460,44],[84,0,460,88],[86,0,460,90],[107,0,460,111],[109,0,460,113],[113,0,460,117],[114,0,460,118],[115,0,460,119]],[[16,0,461,20],[20,0,461,24],[28,0,461,32],[31,0,461,35],[32,0,461,36],[36,0,461,40],[37,0,461,41],[50,0,461,54],[52,0,461,56]],[[20,0,462,24],[24,0,462,28],[25,0,462,29],[38,0,462,42],[39,0,462,43],[43,0,462,47],[44,0,462,48],[96,0,462,100],[98,0,462,102],[119,0,462,123],[121,0,462,125],[125,0,462,129],[126,0,462,130],[127,0,462,131]],[[17,0,463,21]],[[16,0,464,20],[23,0,464,27],[27,0,464,31],[28,0,464,32]],[[12,0,465,16],[13,0,465,17],[14,0,465,18],[15,0,465,19],[16,0,465,20]],[[9,0,466,9]],[[4,0,467,4],[5,0,467,5]],[[4,0,469,4]],[],[],[],[],[],[[7,0,475,7]],[[4,0,476,12],[24,0,476,32],[25,0,477,8],[40,0,477,35],[42,0,478,8],[70,0,478,62],[72,0,479,8],[89,0,479,37]],[[8,0,481,8],[12,0,481,12],[28,0,481,28],[31,0,481,43],[35,0,481,47],[36,0,481,48]],[[8,0,482,8],[36,0,482,36],[37,0,482,37],[53,0,482,53],[54,0,482,54],[55,0,482,55],[72,0,482,72],[74,0,482,74],[76,0,482,76]],[[12,0,483,13],[16,0,483,17],[20,0,483,21],[21,0,483,22],[42,0,483,43],[43,0,483,44],[60,0,483,61],[62,0,483,63],[77,0,483,78],[78,0,483,79],[80,0,483,81]],[[16,0,484,17],[32,0,484,33],[35,0,484,36],[52,0,484,53],[53,0,484,54]],[[13,0,485,14]],[[8,0,486,8],[9,0,486,9],[10,0,486,10],[11,0,486,11]],[[8,0,487,8],[12,0,487,12],[13,0,487,13],[29,0,487,29],[31,0,487,31]],[[12,0,488,12],[19,0,488,19],[23,0,488,23],[24,0,488,24]],[[9,0,489,9]],[[8,0,490,8],[14,0,490,14],[29,0,490,29],[32,0,490,32],[60,0,490,60],[61,0,490,61],[79,0,490,79],[80,0,491,12],[95,0,491,27],[97,0,492,12],[102,0,492,17],[104,0,493,12],[109,0,493,17],[111,0,494,12],[112,0,494,13],[116,0,494,17],[117,0,494,18],[127,0,494,28],[128,0,494,29],[141,0,494,42],[143,0,494,44],[144,0,494,45],[145,0,494,46],[146,0,494,47],[147,0,494,48],[164,0,494,65],[165,0,494,66],[166,0,494,67],[167,0,494,68],[176,0,494,77],[177,0,494,78],[178,0,494,79]],[[8,0,495,8],[14,0,495,14],[31,0,495,31],[34,0,495,34],[50,0,495,50],[51,0,495,51],[64,0,495,64],[66,0,495,66],[67,0,495,67]],[[8,0,496,8],[12,0,496,12],[29,0,496,29],[31,0,496,31],[33,0,496,33],[93,0,496,93]],[[12,0,497,12],[27,0,497,27],[28,0,497,28],[37,0,497,37],[38,0,497,38],[55,0,497,55],[56,0,497,56],[57,0,497,57]],[[12,0,498,12],[27,0,498,27],[28,0,498,28],[42,0,498,42],[43,0,498,43],[59,0,498,59],[60,0,498,60],[61,0,498,61]],[[9,0,499,9]],[[8,0,500,8],[15,0,500,15],[30,0,500,30],[31,0,500,31]],[[4,0,501,4],[5,0,501,5]],[[4,0,503,4]],[],[],[],[[7,0,507,7]],[[4,0,508,12],[25,0,508,33],[26,0,508,34],[29,0,508,49],[31,0,508,51],[34,0,508,66]],[[8,0,509,8],[12,0,509,12],[13,0,509,13],[16,0,509,16],[20,0,509,20],[21,0,509,21],[24,0,509,24],[25,0,509,25],[29,0,509,29],[30,0,509,30],[33,0,509,33],[37,0,509,37],[38,0,509,38],[41,0,509,41],[42,0,509,42],[44,0,509,44]],[[12,0,510,12],[19,0,510,19],[24,0,510,24],[25,0,510,25]],[[9,0,511,9]],[[8,0,512,8],[14,0,512,14],[27,0,512,27],[30,0,512,30],[33,0,512,33],[34,0,512,34],[57,0,512,57],[59,0,512,59],[60,0,512,60]],[[8,0,513,8],[14,0,513,14],[27,0,513,27],[30,0,513,30],[33,0,513,33],[34,0,513,34],[57,0,513,57],[59,0,513,59],[60,0,513,60]],[[8,0,514,8],[12,0,514,12],[25,0,514,25],[26,0,514,26],[38,0,514,38],[40,0,514,40],[42,0,514,42]],[[12,0,515,12],[16,0,515,16],[29,0,515,29],[30,0,515,30],[42,0,515,42],[44,0,515,44],[46,0,515,46]],[[16,0,516,16],[22,0,516,22],[36,0,516,36],[39,0,516,39],[52,0,516,52],[53,0,516,53],[66,0,516,66],[68,0,516,68],[69,0,516,69],[83,0,516,83],[85,0,516,85],[86,0,516,86],[90,0,516,90],[92,0,516,92],[93,0,516,93]],[[16,0,517,16],[22,0,517,22],[36,0,517,36],[39,0,517,39],[52,0,517,52],[53,0,517,53],[66,0,517,66],[68,0,517,68],[69,0,517,69],[83,0,517,83],[85,0,517,85],[86,0,517,86],[90,0,517,90],[92,0,517,92],[93,0,517,93]],[[16,0,518,16],[23,0,518,23],[37,0,518,37],[42,0,518,42],[56,0,518,56],[57,0,518,57]],[[13,0,519,13]],[[17,0,519,19]],[[16,0,520,16],[23,0,520,23],[28,0,520,28],[29,0,520,29]],[[13,0,521,13]],[[9,0,522,9]],[[8,0,523,8],[12,0,523,12],[25,0,523,25],[26,0,523,26],[47,0,523,47],[49,0,523,49],[51,0,523,51]],[[12,0,524,12],[18,0,524,18],[35,0,524,35],[38,0,524,38],[51,0,524,51],[52,0,524,52],[66,0,524,66],[68,0,524,68],[69,0,524,69],[73,0,524,73],[75,0,524,75],[76,0,524,76]],[[12,0,525,12],[18,0,525,18],[35,0,525,35],[38,0,525,38],[51,0,525,51],[52,0,525,52],[66,0,525,66],[68,0,525,68],[69,0,525,69],[73,0,525,73],[75,0,525,75],[76,0,525,76]],[[12,0,526,12],[19,0,526,19],[36,0,526,36],[41,0,526,41],[58,0,526,58],[59,0,526,59]],[[9,0,527,9]],[[8,0,528,8],[14,0,528,14],[26,0,528,26],[29,0,528,29],[42,0,528,42],[43,0,528,43],[58,0,528,58],[59,0,528,59],[87,0,528,87],[88,0,528,88],[89,0,528,89],[93,0,528,93],[95,0,528,95],[96,0,528,96]],[[8,0,529,8],[14,0,529,14],[26,0,529,26],[29,0,529,29],[42,0,529,42],[43,0,529,43],[58,0,529,58],[59,0,529,59],[87,0,529,87],[88,0,529,88],[89,0,529,89],[93,0,529,93],[95,0,529,95],[96,0,529,96]],[[8,0,530,8],[15,0,530,15],[27,0,530,27],[32,0,530,32],[44,0,530,44],[45,0,530,45]],[[4,0,531,4],[5,0,531,5]],[[4,0,533,12],[28,0,533,36],[29,0,534,8],[33,0,534,58],[35,0,535,8],[39,0,535,58]],[[8,0,537,8],[12,0,537,12],[13,0,537,13],[30,0,537,30],[31,0,537,31],[35,0,537,35],[36,0,537,36],[40,0,537,40],[41,0,537,41],[58,0,537,58],[59,0,537,59],[63,0,537,63],[64,0,537,64],[65,0,537,65],[69,0,537,69],[70,0,537,70],[87,0,537,87],[88,0,537,88],[92,0,537,92],[93,0,537,93],[97,0,537,97],[98,0,537,98],[115,0,537,115],[116,0,537,116],[120,0,537,120],[121,0,537,121],[122,0,537,122],[124,0,537,124]],[[12,0,538,12],[19,0,538,19],[24,0,538,24],[25,0,538,25]],[[9,0,539,9]],[[8,0,540,8],[12,0,540,12],[29,0,540,29],[30,0,540,30],[34,0,540,34],[35,0,540,35],[39,0,540,39],[56,0,540,56],[57,0,540,57],[61,0,540,61],[62,0,540,62],[64,0,540,64]],[[12,0,541,12],[19,0,541,19],[23,0,541,23],[24,0,541,24]],[[9,0,542,9]],[[8,0,543,8],[63,0,543,63]],[[8,0,544,8],[14,0,544,14],[18,0,544,18],[21,0,544,34],[25,0,544,38],[28,0,544,41],[30,0,544,51],[31,0,544,52]],[[8,0,545,8],[12,0,545,12],[13,0,545,13],[20,0,545,20],[21,0,545,21],[22,0,545,22],[25,0,545,25],[27,0,545,27],[29,0,545,29],[32,0,545,31],[36,0,545,35],[37,0,545,36],[40,0,545,39],[41,0,545,40],[44,0,545,43],[45,0,545,44],[55,0,545,54],[58,0,545,57],[61,0,545,60],[64,0,545,63],[67,0,545,66],[68,0,545,67],[78,0,545,77],[79,0,545,78],[80,0,545,79],[81,0,545,80],[82,0,545,81],[83,0,545,82],[84,0,545,83]],[[8,0,546,8],[14,0,546,14],[18,0,546,18],[21,0,546,34],[25,0,546,38],[28,0,546,41],[30,0,546,51],[31,0,546,52]],[[8,0,547,8],[12,0,547,12],[13,0,547,13],[20,0,547,20],[21,0,547,21],[22,0,547,22],[25,0,547,25],[27,0,547,27],[29,0,547,29],[32,0,547,31],[36,0,547,35],[37,0,547,36],[40,0,547,39],[41,0,547,40],[44,0,547,43],[45,0,547,44],[55,0,547,54],[58,0,547,57],[61,0,547,60],[64,0,547,63],[67,0,547,66],[68,0,547,67],[78,0,547,77],[79,0,547,78],[80,0,547,79],[81,0,547,80],[82,0,547,81],[83,0,547,82],[84,0,547,83]],[[8,0,548,8],[12,0,548,12],[16,0,548,16],[17,0,548,17],[21,0,548,21],[26,0,548,26],[30,0,548,30],[31,0,548,31],[35,0,548,35],[37,0,548,37]],[[12,0,549,12],[19,0,549,19],[24,0,549,24],[25,0,549,25]],[[9,0,550,9]],[[8,0,551,8],[12,0,551,12],[17,0,551,17],[20,0,551,20],[24,0,551,24],[25,0,551,25]],[[8,0,552,8],[12,0,552,12],[13,0,552,13],[20,0,552,20],[21,0,552,21],[22,0,552,22],[25,0,552,25],[27,0,552,27],[29,0,552,29]],[[12,0,553,12],[16,0,553,16],[17,0,553,17],[21,0,553,21],[22,0,553,22],[25,0,553,25],[26,0,553,26],[29,0,553,29],[30,0,553,30],[32,0,553,32]],[[16,0,554,16],[21,0,554,21],[24,0,554,24],[29,0,554,29],[30,0,554,30]],[[13,0,555,13]],[[8,0,556,8],[9,0,556,9],[10,0,556,10],[11,0,556,11]],[[8,0,557,8],[15,0,557,15],[20,0,557,20],[21,0,557,21]],[[4,0,558,4],[5,0,558,5]],[[4,0,560,4]],[],[],[],[],[],[],[[7,0,567,7]],[[4,0,568,12],[17,0,568,25],[18,0,569,8],[22,0,569,20],[24,0,570,8],[26,0,570,18],[28,0,571,8],[56,0,571,62]],[[8,0,573,8],[12,0,573,12],[23,0,573,63],[24,0,573,64]],[[8,0,574,8],[14,0,574,14],[34,0,574,34],[37,0,574,46],[41,0,574,50],[42,0,574,51],[52,0,574,61],[53,0,574,62],[74,0,574,83],[75,0,574,84],[77,0,574,86],[78,0,574,87],[79,0,574,88]],[[8,0,575,8],[12,0,575,12],[32,0,575,32],[34,0,575,34]],[[12,0,576,12],[23,0,576,23],[26,0,576,26],[30,0,576,30],[31,0,576,31],[51,0,576,51],[52,0,576,52],[65,0,576,65],[66,0,576,66],[70,0,576,70],[72,0,576,72],[74,0,576,74],[76,0,576,76],[104,0,576,104],[105,0,576,105],[106,0,576,106]],[[9,0,577,9]],[[13,0,577,15]],[[12,0,578,12],[23,0,578,23],[26,0,578,26],[28,0,578,28],[29,0,578,29],[33,0,578,33],[59,0,578,59],[60,0,578,60],[64,0,578,64],[66,0,578,66],[68,0,578,68],[69,0,578,69],[70,0,578,70],[71,0,578,71]],[[9,0,579,9]],[[8,0,580,8],[15,0,580,15],[26,0,580,26],[27,0,580,27],[31,0,580,31],[32,0,580,32],[35,0,580,35],[36,0,580,36],[37,0,580,37],[44,0,580,44],[46,0,580,46],[48,0,580,48]],[[12,0,581,12],[16,0,581,16],[36,0,581,36],[38,0,581,38]],[[16,0,582,16],[20,0,582,20],[27,0,582,27],[28,0,582,28],[33,0,582,33],[35,0,582,35],[39,0,582,39],[46,0,582,46],[47,0,582,47],[53,0,582,53],[55,0,582,55],[58,0,582,58],[59,0,582,59],[61,0,582,61]],[[20,0,583,20],[24,0,583,24],[25,0,583,25],[38,0,583,38],[39,0,583,39],[44,0,583,44],[45,0,583,45],[52,0,583,52],[53,0,583,53],[60,0,583,60],[62,0,583,62],[63,0,583,63],[64,0,583,64]],[[17,0,584,17]],[[21,0,584,23]],[[20,0,585,20],[24,0,585,24],[25,0,585,25],[38,0,585,38],[39,0,585,39],[43,0,585,43],[44,0,585,44],[51,0,585,51],[52,0,585,52],[59,0,585,59],[61,0,585,61],[62,0,585,62],[63,0,585,63]],[[17,0,586,17]],[[13,0,587,13]],[[12,0,588,12],[19,0,588,19],[26,0,588,26],[27,0,588,27]],[[8,0,589,8],[9,0,589,9],[10,0,589,10],[11,0,589,11],[12,0,589,12]],[[4,0,590,4],[5,0,590,5]],[[1,0,592,1]]],"sourcesContent":["import {CommandOutput} from '../common/command-output';\r\nimport {XliffMergeParameters} from './xliff-merge-parameters';\r\nimport {XliffMergeError} from './xliff-merge-error';\r\nimport {FileUtil} from '../common/file-util';\r\nimport {VERSION} from './version';\r\nimport {format} from 'util';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {ITranslationMessagesFile, ITransUnit,\r\n    FORMAT_XMB, FORMAT_XTB,\r\n    NORMALIZATION_FORMAT_DEFAULT, STATE_FINAL, STATE_TRANSLATED} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {ProgramOptions, IConfigFile} from './i-xliff-merge-options';\r\nimport {NgxTranslateExtractor} from './ngx-translate-extractor';\r\nimport {TranslationMessagesFileReader} from './translation-messages-file-reader';\r\nimport {Observable, of, forkJoin} from 'rxjs';\r\nimport {map, catchError} from 'rxjs/operators';\r\nimport {XliffMergeAutoTranslateService} from '../autotranslate/xliff-merge-auto-translate-service';\r\nimport {AutoTranslateSummaryReport} from '../autotranslate/auto-translate-summary-report';\r\n\r\n/**\r\n * Created by martin on 17.02.2017.\r\n * XliffMerge - read xliff or xmb file and put untranslated parts in language specific xliff or xmb files.\r\n *\r\n */\r\n\r\nexport class XliffMerge {\r\n\r\n    private readonly commandOutput: CommandOutput;\r\n\r\n    private readonly options: ProgramOptions;\r\n\r\n    private parameters: XliffMergeParameters;\r\n\r\n    /**\r\n     * The read master xlf file.\r\n     */\r\n    private master: ITranslationMessagesFile; // XliffFile or Xliff2File or XmbFile\r\n\r\n    private autoTranslateService: XliffMergeAutoTranslateService;\r\n\r\n    static main(argv: string[]) {\r\n        const options = XliffMerge.parseArgs(argv);\r\n        if (options) {\r\n            new XliffMerge(new CommandOutput(process.stdout), options).run((result) => {\r\n                process.exit(result);\r\n            });\r\n        }\r\n    }\r\n\r\n    static parseArgs(argv: string[]): ProgramOptions {\r\n        const options: ProgramOptions = {\r\n            languages: []\r\n        };\r\n        for (let i = 1; i < argv.length; i++) {\r\n            const arg = argv[i];\r\n            if (arg === '--version' || arg === '-version') {\r\n                console.log('xliffmerge ' + VERSION);\r\n            } else if (arg === '--verbose' || arg === '-v') {\r\n                options.verbose = true;\r\n            } else if (arg === '--profile' || arg === '-p') {\r\n                i++;\r\n                if (i >= argv.length) {\r\n                    console.log('missing config file');\r\n                    XliffMerge.showUsage();\r\n                    return null;\r\n                } else {\r\n                    options.profilePath = argv[i];\r\n                }\r\n            } else if (arg === '--quiet' || arg === '-q') {\r\n                options.quiet = true;\r\n            } else if (arg === '--help' || arg === '-help' || arg === '-h') {\r\n                XliffMerge.showUsage();\r\n            } else if (arg.length > 0 && arg.charAt(0) === '-') {\r\n                console.log('unknown option');\r\n                return null;\r\n            } else {\r\n                options.languages.push(arg);\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n\r\n    static showUsage() {\r\n        console.log('usage: xliffmerge <option>* <language>*');\r\n        console.log('Options');\r\n        console.log('\\t-p|--profile a json configuration file containing all relevant parameters.');\r\n        console.log('\\t\\tfor details please consult the home page https://github.com/martinroob/ngx-i18nsupport');\r\n        console.log('\\t-v|--verbose show some output for debugging purposes');\r\n        console.log('\\t-q|--quiet only show errors, nothing else');\r\n        console.log('\\t-version|--version show version string');\r\n        console.log('');\r\n        console.log('\\t<language> has to be a valid language short string, e,g. \"en\", \"de\", \"de-ch\"');\r\n    }\r\n\r\n    /**\r\n     * For Tests, create instance with given profile\r\n     * @param commandOutput commandOutput\r\n     * @param options options\r\n     * @param profileContent profileContent\r\n     */\r\n    public static createFromOptions(commandOutput: CommandOutput, options: ProgramOptions, profileContent?: IConfigFile) {\r\n        const instance = new XliffMerge(commandOutput, options);\r\n        instance.parameters = XliffMergeParameters.createFromOptions(options, profileContent);\r\n        return instance;\r\n    }\r\n\r\n    constructor(commandOutput: CommandOutput, options: ProgramOptions) {\r\n        this.commandOutput = commandOutput;\r\n        this.options = options;\r\n        this.parameters = null;\r\n    }\r\n\r\n    /**\r\n     * Run the command.\r\n     * This runs async.\r\n     * @param callbackFunction when command is executed, called with the return code (0 for ok), if given.\r\n     * @param errorFunction callbackFunction for error handling\r\n     */\r\n    public run(callbackFunction?: ((retcode: number) => any), errorFunction?: ((error: any) => any)) {\r\n        this.runAsync()\r\n            .subscribe((retcode: number) => {\r\n                if (!isNullOrUndefined(callbackFunction)) {\r\n                    callbackFunction(retcode);\r\n                }\r\n            }, (error) => {\r\n                if (!isNullOrUndefined(errorFunction)) {\r\n                    errorFunction(error);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Execute merge-Process.\r\n     * @return Async operation, on completion returns retcode 0=ok, other = error.\r\n     */\r\n    public runAsync(): Observable<number> {\r\n        if (this.options && this.options.quiet) {\r\n            this.commandOutput.setQuiet();\r\n        }\r\n        if (this.options && this.options.verbose) {\r\n            this.commandOutput.setVerbose();\r\n        }\r\n        if (!this.parameters) {\r\n            this.parameters = XliffMergeParameters.createFromOptions(this.options);\r\n        }\r\n        this.commandOutput.info('xliffmerge version %s', VERSION);\r\n        if (this.parameters.verbose()) {\r\n            this.parameters.showAllParameters(this.commandOutput);\r\n        }\r\n        if (this.parameters.errorsFound.length > 0) {\r\n            for (const err of this.parameters.errorsFound) {\r\n                this.commandOutput.error(err.message);\r\n            }\r\n            return of(-1);\r\n        }\r\n        if (this.parameters.warningsFound.length > 0) {\r\n            for (const warn of this.parameters.warningsFound) {\r\n                this.commandOutput.warn(warn);\r\n            }\r\n        }\r\n        this.readMaster();\r\n        if (this.parameters.autotranslate()) {\r\n            this.autoTranslateService = new XliffMergeAutoTranslateService(this.parameters.apikey());\r\n        }\r\n        const executionForAllLanguages: Observable<number>[] = [];\r\n        this.parameters.languages().forEach((lang: string) => {\r\n            executionForAllLanguages.push(this.processLanguage(lang));\r\n        });\r\n        return forkJoin(executionForAllLanguages).pipe(\r\n            map((retcodes: number[]) => this.totalRetcode(retcodes)));\r\n    }\r\n\r\n    /**\r\n     * Give an array of retcodes for the different languages, return the total retcode.\r\n     * If all are 0, it is 0, otherwise the first non zero.\r\n     * @param retcodes retcodes\r\n     * @return number\r\n     */\r\n    private totalRetcode(retcodes: number[]): number {\r\n        for (let i = 0; i < retcodes.length; i++) {\r\n            if (retcodes[i] !== 0) {\r\n                return retcodes[i];\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Return the name of the generated file for given lang.\r\n     * @param lang language\r\n     * @return name of generated file\r\n     */\r\n    public generatedI18nFile(lang: string): string {\r\n        return this.parameters.generatedI18nFile(lang);\r\n    }\r\n\r\n    /**\r\n     * Return the name of the generated ngx-translation file for given lang.\r\n     * @param lang language\r\n     * @return name of translate file\r\n     */\r\n    public generatedNgxTranslateFile(lang: string): string {\r\n        return this.parameters.generatedNgxTranslateFile(lang);\r\n    }\r\n\r\n    /**\r\n     * Warnings found during the run.\r\n     * @return warnings\r\n     */\r\n    public warnings(): string[] {\r\n        return this.parameters.warningsFound;\r\n    }\r\n\r\n    private readMaster() {\r\n        try {\r\n            this.master = TranslationMessagesFileReader.fromFile(\r\n                this.parameters.i18nFormat(),\r\n                this.parameters.i18nFile(),\r\n                this.parameters.encoding() as BufferEncoding);\r\n            this.master.warnings().forEach((warning: string) => {\r\n                this.commandOutput.warn(warning);\r\n            });\r\n            const count = this.master.numberOfTransUnits();\r\n            const missingIdCount = this.master.numberOfTransUnitsWithMissingId();\r\n            this.commandOutput.info('master contains %s trans-units', count);\r\n            if (missingIdCount > 0) {\r\n                this.commandOutput.warn('master contains %s trans-units, but there are %s without id', count, missingIdCount);\r\n            }\r\n            const sourceLang: string = this.master.sourceLanguage();\r\n            if (sourceLang && sourceLang !== this.parameters.defaultLanguage()) {\r\n                this.commandOutput.warn(\r\n                    'master says to have source-language=\"%s\", should be \"%s\" (your defaultLanguage)',\r\n                    sourceLang,\r\n                    this.parameters.defaultLanguage());\r\n                this.master.setSourceLanguage(this.parameters.defaultLanguage());\r\n                TranslationMessagesFileReader.save(this.master, this.parameters.beautifyOutput());\r\n                this.commandOutput.warn('changed master source-language=\"%s\" to \"%s\"', sourceLang, this.parameters.defaultLanguage());\r\n            }\r\n        } catch (err) {\r\n            if (err instanceof XliffMergeError) {\r\n                this.commandOutput.error(err.message);\r\n                return of(-1);\r\n            } else {\r\n                // unhandled\r\n                const currentFilename = this.parameters.i18nFile();\r\n                const filenameString = (currentFilename) ? format('file \"%s\", ', currentFilename) : '';\r\n                this.commandOutput.error(filenameString + 'oops ' + err);\r\n                throw err;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Process the given language.\r\n     * Async operation.\r\n     * @param lang language\r\n     * @return on completion 0 for ok, other for error\r\n     */\r\n    private processLanguage(lang: string): Observable<number> {\r\n        this.commandOutput.debug('processing language %s', lang);\r\n        const languageXliffFile = this.parameters.generatedI18nFile(lang);\r\n        const currentFilename = languageXliffFile;\r\n        let result: Observable<void>;\r\n        if (!FileUtil.exists(languageXliffFile)) {\r\n            result = this.createUntranslatedXliff(lang, languageXliffFile);\r\n        } else {\r\n            result = this.mergeMasterTo(lang, languageXliffFile);\r\n        }\r\n        return result\r\n            .pipe(map(() => {\r\n                if (this.parameters.supportNgxTranslate()) {\r\n                    const languageSpecificMessagesFile: ITranslationMessagesFile =\r\n                        TranslationMessagesFileReader.fromFile(\r\n                            this.translationFormat(this.parameters.i18nFormat()),\r\n                            languageXliffFile,\r\n                            this.parameters.encoding(),\r\n                            this.master.filename());\r\n                    NgxTranslateExtractor.extract(\r\n                        languageSpecificMessagesFile,\r\n                        this.parameters.ngxTranslateExtractionPattern(),\r\n                        this.parameters.generatedNgxTranslateFile(lang));\r\n                }\r\n                return 0;\r\n            }), catchError((err) => {\r\n                if (err instanceof XliffMergeError) {\r\n                    this.commandOutput.error(err.message);\r\n                    return of(-1);\r\n                } else {\r\n                    // unhandled\r\n                    const filenameString = (currentFilename) ? format('file \"%s\", ', currentFilename) : '';\r\n                    this.commandOutput.error(filenameString + 'oops ' + err);\r\n                    throw err;\r\n                }\r\n            }));\r\n    }\r\n\r\n    /**\r\n     * create a new file for the language, which contains no translations, but all keys.\r\n     * in principle, this is just a copy of the master with target-language set.\r\n     * @param lang language\r\n     * @param languageXliffFilePath name of file\r\n     */\r\n    private createUntranslatedXliff(lang: string, languageXliffFilePath: string): Observable<void> {\r\n        // copy master ...\r\n        // and set target-language\r\n        // and copy source to target if necessary\r\n        const isDefaultLang: boolean = (lang === this.parameters.defaultLanguage());\r\n        this.master.setNewTransUnitTargetPraefix(this.parameters.targetPraefix());\r\n        this.master.setNewTransUnitTargetSuffix(this.parameters.targetSuffix());\r\n        const languageSpecificMessagesFile: ITranslationMessagesFile =\r\n            this.master.createTranslationFileForLang(lang, languageXliffFilePath, isDefaultLang, this.parameters.useSourceAsTarget());\r\n        return this.autoTranslate(this.master.sourceLanguage(), lang, languageSpecificMessagesFile).pipe(\r\n            map((/* summary */) => {\r\n            // write it to file\r\n            TranslationMessagesFileReader.save(languageSpecificMessagesFile, this.parameters.beautifyOutput());\r\n            this.commandOutput.info('created new file \"%s\" for target-language=\"%s\"', languageXliffFilePath, lang);\r\n            if (!isDefaultLang) {\r\n                this.commandOutput.warn('please translate file \"%s\" to target-language=\"%s\"', languageXliffFilePath, lang);\r\n            }\r\n            return null;\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Map the input format to the format of the translation.\r\n     * Normally they are the same but for xmb the translation format is xtb.\r\n     * @param i18nFormat format\r\n     */\r\n    private translationFormat(i18nFormat: string): string {\r\n        if (i18nFormat === FORMAT_XMB) {\r\n            return FORMAT_XTB;\r\n        } else {\r\n            return i18nFormat;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Merge all\r\n     * @param lang language\r\n     * @param languageXliffFilePath filename\r\n     */\r\n    private mergeMasterTo(lang: string, languageXliffFilePath: string): Observable<void> {\r\n        // read lang specific file\r\n        const languageSpecificMessagesFile: ITranslationMessagesFile =\r\n            TranslationMessagesFileReader.fromFile(\r\n                this.translationFormat(this.parameters.i18nFormat()),\r\n                languageXliffFilePath,\r\n                this.parameters.encoding());\r\n        const isDefaultLang: boolean = (lang === this.parameters.defaultLanguage());\r\n        let newCount = 0;\r\n        let correctSourceContentCount = 0;\r\n        let correctSourceRefCount = 0;\r\n        let correctDescriptionOrMeaningCount = 0;\r\n        let idChangedCount = 0;\r\n        languageSpecificMessagesFile.setNewTransUnitTargetPraefix(this.parameters.targetPraefix());\r\n        languageSpecificMessagesFile.setNewTransUnitTargetSuffix(this.parameters.targetSuffix());\r\n        let lastProcessedUnit: ITransUnit = null;\r\n        this.master.forEachTransUnit((masterTransUnit) => {\r\n            const transUnit: ITransUnit = languageSpecificMessagesFile.transUnitWithId(masterTransUnit.id);\r\n\r\n            if (!transUnit) {\r\n                // oops, no translation, must be a new key, so add it\r\n                let newUnit;\r\n                if (this.parameters.allowIdChange()\r\n                    && (newUnit = this.processChangedIdUnit(masterTransUnit, languageSpecificMessagesFile, lastProcessedUnit))) {\r\n                    lastProcessedUnit = newUnit;\r\n                    idChangedCount++;\r\n                } else {\r\n                    lastProcessedUnit = languageSpecificMessagesFile.importNewTransUnit(\r\n                        masterTransUnit,\r\n                        isDefaultLang,\r\n                        this.parameters.useSourceAsTarget(),\r\n                        (this.parameters.preserveOrder()) ? lastProcessedUnit : undefined);\r\n                    newCount++;\r\n                }\r\n            } else {\r\n                // check for changed source content and change it if needed\r\n                // (can only happen if ID is explicitely set, otherwise ID would change if source content is changed.\r\n                if (transUnit.supportsSetSourceContent() && !this.areSourcesNearlyEqual(masterTransUnit, transUnit)) {\r\n                    transUnit.setSourceContent(masterTransUnit.sourceContent());\r\n                    if (isDefaultLang) {\r\n                        // #81 changed source must be copied to target for default lang\r\n                        transUnit.translate(masterTransUnit.sourceContent());\r\n                        transUnit.setTargetState(STATE_FINAL);\r\n                    } else {\r\n                        if (transUnit.targetState() === STATE_FINAL) {\r\n                            // source is changed, so translation has to be checked again\r\n                            transUnit.setTargetState(STATE_TRANSLATED);\r\n                        }\r\n                    }\r\n                    correctSourceContentCount++;\r\n                }\r\n                // check for missing or changed source ref and add it if needed\r\n                if (transUnit.supportsSetSourceReferences()\r\n                    && !this.areSourceReferencesEqual(masterTransUnit.sourceReferences(), transUnit.sourceReferences())) {\r\n                    transUnit.setSourceReferences(masterTransUnit.sourceReferences());\r\n                    correctSourceRefCount++;\r\n                }\r\n                // check for changed description or meaning\r\n                if (transUnit.supportsSetDescriptionAndMeaning()) {\r\n                    let changed = false;\r\n                    if (transUnit.description() !== masterTransUnit.description()) {\r\n                        transUnit.setDescription(masterTransUnit.description());\r\n                        changed = true;\r\n                    }\r\n                    if (transUnit.meaning() !== masterTransUnit.meaning()) {\r\n                        transUnit.setMeaning(masterTransUnit.meaning());\r\n                        changed = true;\r\n                    }\r\n                    if (changed) {\r\n                        correctDescriptionOrMeaningCount++;\r\n                    }\r\n                }\r\n                lastProcessedUnit = transUnit;\r\n            }\r\n        });\r\n        if (newCount > 0) {\r\n            this.commandOutput.warn('merged %s trans-units from master to \"%s\"', newCount, lang);\r\n        }\r\n        if (correctSourceContentCount > 0) {\r\n            this.commandOutput.warn('transferred %s changed source content from master to \"%s\"', correctSourceContentCount, lang);\r\n        }\r\n        if (correctSourceRefCount > 0) {\r\n            this.commandOutput.warn('transferred %s source references from master to \"%s\"', correctSourceRefCount, lang);\r\n        }\r\n        if (idChangedCount > 0) {\r\n            this.commandOutput.warn('found %s changed id\\'s in \"%s\"', idChangedCount, lang);\r\n        }\r\n        if (correctDescriptionOrMeaningCount > 0) {\r\n            this.commandOutput.warn(\r\n                'transferred %s changed descriptions/meanings from master to \"%s\"', correctDescriptionOrMeaningCount, lang);\r\n        }\r\n\r\n        // remove all elements that are no longer used\r\n        let removeCount = 0;\r\n        languageSpecificMessagesFile.forEachTransUnit((transUnit: ITransUnit) => {\r\n            const existsInMaster = !isNullOrUndefined(this.master.transUnitWithId(transUnit.id));\r\n            if (!existsInMaster) {\r\n                if (this.parameters.removeUnusedIds()) {\r\n                    languageSpecificMessagesFile.removeTransUnitWithId(transUnit.id);\r\n                }\r\n                removeCount++;\r\n            }\r\n        });\r\n        if (removeCount > 0) {\r\n            if (this.parameters.removeUnusedIds()) {\r\n                this.commandOutput.warn('removed %s unused trans-units in \"%s\"', removeCount, lang);\r\n            } else {\r\n                this.commandOutput.warn('keeping %s unused trans-units in \"%s\", because removeUnused is disabled', removeCount, lang);\r\n            }\r\n        }\r\n\r\n        if (newCount === 0 && removeCount === 0 && correctSourceContentCount === 0\r\n            && correctSourceRefCount === 0 && correctDescriptionOrMeaningCount === 0) {\r\n            this.commandOutput.info('file for \"%s\" was up to date', lang);\r\n            return of(null);\r\n        } else {\r\n            return this.autoTranslate(this.master.sourceLanguage(), lang, languageSpecificMessagesFile)\r\n                .pipe(map(() => {\r\n                    // write it to file\r\n                    TranslationMessagesFileReader.save(languageSpecificMessagesFile, this.parameters.beautifyOutput());\r\n                    this.commandOutput.info('updated file \"%s\" for target-language=\"%s\"', languageXliffFilePath, lang);\r\n                    if (newCount > 0 && !isDefaultLang) {\r\n                        this.commandOutput.warn('please translate file \"%s\" to target-language=\"%s\"', languageXliffFilePath, lang);\r\n                    }\r\n                    return null;\r\n                }));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle the case of changed id due to small white space changes.\r\n     * @param masterTransUnit unit in master file\r\n     * @param languageSpecificMessagesFile translation file\r\n     * @param lastProcessedUnit Unit before the one processed here. New unit will be inserted after this one.\r\n     * @return processed unit, if done, null if no changed unit found\r\n     */\r\n    private processChangedIdUnit(\r\n        masterTransUnit: ITransUnit,\r\n        languageSpecificMessagesFile: ITranslationMessagesFile,\r\n        lastProcessedUnit: ITransUnit): ITransUnit {\r\n\r\n        let changedTransUnit: ITransUnit = null;\r\n        languageSpecificMessagesFile.forEachTransUnit((languageTransUnit) => {\r\n             if (this.areSourcesNearlyEqual(languageTransUnit, masterTransUnit)) {\r\n                 changedTransUnit = languageTransUnit;\r\n             }\r\n        });\r\n        if (!changedTransUnit) {\r\n            return null;\r\n        }\r\n        const mergedTransUnit = languageSpecificMessagesFile.importNewTransUnit(\r\n            masterTransUnit,\r\n            false,\r\n            false,\r\n            (this.parameters.preserveOrder()) ? lastProcessedUnit : undefined);\r\n        const translatedContent = changedTransUnit.targetContent();\r\n        if (translatedContent) { // issue #68 set translated only, if it is really translated\r\n            mergedTransUnit.translate(translatedContent);\r\n            mergedTransUnit.setTargetState(STATE_TRANSLATED);\r\n        }\r\n        return mergedTransUnit;\r\n    }\r\n\r\n    /**\r\n     * test wether the sources of 2 trans units are equal ignoring white spaces.\r\n     * @param tu1 tu1\r\n     * @param tu2 tu2\r\n     */\r\n    private areSourcesNearlyEqual(tu1: ITransUnit, tu2: ITransUnit): boolean {\r\n        if ((tu1 && !tu2) || (tu2 && !tu1)) {\r\n            return false;\r\n        }\r\n        const tu1Normalized = tu1.sourceContentNormalized();\r\n        const tu2Normalized = tu2.sourceContentNormalized();\r\n        if (tu1Normalized.isICUMessage()) {\r\n            if (tu2Normalized.isICUMessage()) {\r\n                const icu1Normalized = tu1Normalized.getICUMessage().asNativeString().trim();\r\n                const icu2Normalized = tu2Normalized.getICUMessage().asNativeString().trim();\r\n                return icu1Normalized === icu2Normalized;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n        if (tu1Normalized.containsICUMessageRef()) {\r\n            const icuref1Normalized = tu1Normalized.asNativeString().trim();\r\n            const icuref2Normalized = tu2Normalized.asNativeString().trim();\r\n            return icuref1Normalized === icuref2Normalized;\r\n        }\r\n        const s1Normalized = tu1Normalized.asDisplayString(NORMALIZATION_FORMAT_DEFAULT).trim();\r\n        const s2Normalized = tu2Normalized.asDisplayString(NORMALIZATION_FORMAT_DEFAULT).trim();\r\n        return s1Normalized === s2Normalized;\r\n    }\r\n\r\n    private areSourceReferencesEqual(\r\n        ref1: {sourcefile: string; linenumber: number; }[],\r\n        ref2: {sourcefile: string; linenumber: number; }[]): boolean {\r\n\r\n        if ((isNullOrUndefined(ref1) && !isNullOrUndefined(ref2)) || (isNullOrUndefined(ref2) && !isNullOrUndefined(ref1))) {\r\n            return false;\r\n        }\r\n        if (isNullOrUndefined(ref1) && isNullOrUndefined(ref2)) {\r\n            return true;\r\n        }\r\n        // bot refs are set now, convert to set to compare them\r\n        const set1: Set<string> = new Set<string>();\r\n        ref1.forEach((ref) => {set1.add(ref.sourcefile + ':' + ref.linenumber); });\r\n        const set2: Set<string> = new Set<string>();\r\n        ref2.forEach((ref) => {set2.add(ref.sourcefile + ':' + ref.linenumber); });\r\n        if (set1.size !== set2.size) {\r\n            return false;\r\n        }\r\n        let match = true;\r\n        set2.forEach((ref) => {\r\n            if (!set1.has(ref)) {\r\n                match = false;\r\n            }\r\n        });\r\n        return match;\r\n    }\r\n\r\n    /**\r\n     * Auto translate file via Google Translate.\r\n     * Will translate all new units in file.\r\n     * @param from from\r\n     * @param to to\r\n     * @param languageSpecificMessagesFile languageSpecificMessagesFile\r\n     * @return a promise with the execution result as a summary report.\r\n     */\r\n    private autoTranslate(\r\n        from: string,\r\n        to: string,\r\n        languageSpecificMessagesFile: ITranslationMessagesFile): Observable<AutoTranslateSummaryReport> {\r\n\r\n        let serviceCall: Observable<AutoTranslateSummaryReport>;\r\n        const autotranslateEnabled: boolean = this.parameters.autotranslateLanguage(to);\r\n        if (autotranslateEnabled) {\r\n            serviceCall = this.autoTranslateService.autoTranslate(from, to, languageSpecificMessagesFile);\r\n        } else {\r\n            serviceCall = of(new AutoTranslateSummaryReport(from, to));\r\n        }\r\n        return serviceCall.pipe(map((summary) => {\r\n            if (autotranslateEnabled) {\r\n                if (summary.error() || summary.failed() > 0) {\r\n                    this.commandOutput.error(summary.content());\r\n                } else {\r\n                    this.commandOutput.warn(summary.content());\r\n                }\r\n            }\r\n            return summary;\r\n        }));\r\n    }\r\n\r\n}\r\n"]},"resolvedIds":{"util":{"external":true,"id":"util","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"@ngx-i18nsupport/ngx-i18nsupport-lib":{"external":true,"id":"@ngx-i18nsupport/ngx-i18nsupport-lib","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../common/command-output":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\command-output.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../common/util":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\util.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./xliff-merge-parameters":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\xliff-merge-parameters.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./xliff-merge-error":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\xliff-merge-error.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./version":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\version.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../common/file-util":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\file-util.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./ngx-translate-extractor":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\ngx-translate-extractor.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./translation-messages-file-reader":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\translation-messages-file-reader.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../autotranslate/xliff-merge-auto-translate-service":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\autotranslate\\xliff-merge-auto-translate-service.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../autotranslate/auto-translate-summary-report":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\autotranslate\\auto-translate-summary-report.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1780,"body":[{"type":"ExportAllDeclaration","start":261,"end":301,"exported":null,"source":{"type":"Literal","start":275,"end":300,"value":"./lib/xliffmerge.module","raw":"'./lib/xliffmerge.module'"}},{"type":"ExportNamedDeclaration","start":303,"end":362,"declaration":null,"specifiers":[{"type":"ExportSpecifier","start":312,"end":326,"local":{"type":"Identifier","start":312,"end":326,"name":"WriterToString"},"exported":{"type":"Identifier","start":312,"end":326,"name":"WriterToString"}}],"source":{"type":"Literal","start":334,"end":361,"value":"./common/writer-to-string","raw":"'./common/writer-to-string'"}},{"type":"ExportNamedDeclaration","start":364,"end":420,"declaration":null,"specifiers":[{"type":"ExportSpecifier","start":373,"end":386,"local":{"type":"Identifier","start":373,"end":386,"name":"CommandOutput"},"exported":{"type":"Identifier","start":373,"end":386,"name":"CommandOutput"}}],"source":{"type":"Literal","start":394,"end":419,"value":"./common/command-output","raw":"'./common/command-output'"}},{"type":"ExportNamedDeclaration","start":422,"end":476,"declaration":null,"specifiers":[{"type":"ExportSpecifier","start":431,"end":441,"local":{"type":"Identifier","start":431,"end":441,"name":"XliffMerge"},"exported":{"type":"Identifier","start":431,"end":441,"name":"XliffMerge"}}],"source":{"type":"Literal","start":449,"end":475,"value":"./xliffmerge/xliff-merge","raw":"'./xliffmerge/xliff-merge'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL3B1YmxpY19hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0dBS0c7QUFFSCxzREFBc0Q7QUFDdEQsY0FBYyx5QkFBeUIsQ0FBQztBQUV4QyxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDekQsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQ3RELE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiB4bGlmZm1lcmdlXHJcbiAqIEluIHByaW5jaXBsZSwgdGhlcmUgaXMgb25seSB0aGUgYmluIGZpbGUgeGxpZmZtZXJnZSxcclxuICogYmVjYXVzZSB0aGlzIGlzIG5vdCBtZW50aW9uZWQgYXMgYSBsaWJyYXJ5LlxyXG4gKiBCdXQgdGhlIHRvb2xpbmcgdXNlcyB0aGUgY29uZmlndXJhdGlvbiBmaWxlIHR5cGUuXHJcbiAqL1xyXG5cclxuLy8gVGhlIG1vZHVsZSBpcyBoZXJlIG9ubHkgYmVjYXVzZSBuZy1wYWNrYWdyIG5lZWRzIGl0XHJcbmV4cG9ydCAqIGZyb20gJy4vbGliL3hsaWZmbWVyZ2UubW9kdWxlJztcclxuZXhwb3J0IHtJWGxpZmZNZXJnZU9wdGlvbnMsIElDb25maWdGaWxlLCBQcm9ncmFtT3B0aW9uc30gZnJvbSAnLi94bGlmZm1lcmdlL2kteGxpZmYtbWVyZ2Utb3B0aW9ucyc7XHJcbmV4cG9ydCB7V3JpdGVyVG9TdHJpbmd9IGZyb20gJy4vY29tbW9uL3dyaXRlci10by1zdHJpbmcnO1xyXG5leHBvcnQge0NvbW1hbmRPdXRwdXR9IGZyb20gJy4vY29tbW9uL2NvbW1hbmQtb3V0cHV0JztcclxuZXhwb3J0IHtYbGlmZk1lcmdlfSBmcm9tICcuL3hsaWZmbWVyZ2UveGxpZmYtbWVyZ2UnO1xyXG4iXX0=","start":478,"end":1780}]},"code":"/*\r\n * Public API Surface of xliffmerge\r\n * In principle, there is only the bin file xliffmerge,\r\n * because this is not mentioned as a library.\r\n * But the tooling uses the configuration file type.\r\n */\r\n// The module is here only because ng-packagr needs it\r\nexport * from './lib/xliffmerge.module';\r\nexport { WriterToString } from './common/writer-to-string';\r\nexport { CommandOutput } from './common/command-output';\r\nexport { XliffMerge } from './xliffmerge/xliff-merge';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL3B1YmxpY19hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0dBS0c7QUFFSCxzREFBc0Q7QUFDdEQsY0FBYyx5QkFBeUIsQ0FBQztBQUV4QyxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDekQsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQ3RELE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiB4bGlmZm1lcmdlXHJcbiAqIEluIHByaW5jaXBsZSwgdGhlcmUgaXMgb25seSB0aGUgYmluIGZpbGUgeGxpZmZtZXJnZSxcclxuICogYmVjYXVzZSB0aGlzIGlzIG5vdCBtZW50aW9uZWQgYXMgYSBsaWJyYXJ5LlxyXG4gKiBCdXQgdGhlIHRvb2xpbmcgdXNlcyB0aGUgY29uZmlndXJhdGlvbiBmaWxlIHR5cGUuXHJcbiAqL1xyXG5cclxuLy8gVGhlIG1vZHVsZSBpcyBoZXJlIG9ubHkgYmVjYXVzZSBuZy1wYWNrYWdyIG5lZWRzIGl0XHJcbmV4cG9ydCAqIGZyb20gJy4vbGliL3hsaWZmbWVyZ2UubW9kdWxlJztcclxuZXhwb3J0IHtJWGxpZmZNZXJnZU9wdGlvbnMsIElDb25maWdGaWxlLCBQcm9ncmFtT3B0aW9uc30gZnJvbSAnLi94bGlmZm1lcmdlL2kteGxpZmYtbWVyZ2Utb3B0aW9ucyc7XHJcbmV4cG9ydCB7V3JpdGVyVG9TdHJpbmd9IGZyb20gJy4vY29tbW9uL3dyaXRlci10by1zdHJpbmcnO1xyXG5leHBvcnQge0NvbW1hbmRPdXRwdXR9IGZyb20gJy4vY29tbW9uL2NvbW1hbmQtb3V0cHV0JztcclxuZXhwb3J0IHtYbGlmZk1lcmdlfSBmcm9tICcuL3hsaWZmbWVyZ2UveGxpZmYtbWVyZ2UnO1xyXG4iXX0=","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\lib\\xliffmerge.module.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\writer-to-string.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\command-output.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\xliff-merge.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\public_api.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/*\r\n * Public API Surface of xliffmerge\r\n * In principle, there is only the bin file xliffmerge,\r\n * because this is not mentioned as a library.\r\n * But the tooling uses the configuration file type.\r\n */\r\n// The module is here only because ng-packagr needs it\r\nexport * from './lib/xliffmerge.module';\r\nexport { WriterToString } from './common/writer-to-string';\r\nexport { CommandOutput } from './common/command-output';\r\nexport { XliffMerge } from './xliffmerge/xliff-merge';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL3B1YmxpY19hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0dBS0c7QUFFSCxzREFBc0Q7QUFDdEQsY0FBYyx5QkFBeUIsQ0FBQztBQUV4QyxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDekQsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQ3RELE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiB4bGlmZm1lcmdlXHJcbiAqIEluIHByaW5jaXBsZSwgdGhlcmUgaXMgb25seSB0aGUgYmluIGZpbGUgeGxpZmZtZXJnZSxcclxuICogYmVjYXVzZSB0aGlzIGlzIG5vdCBtZW50aW9uZWQgYXMgYSBsaWJyYXJ5LlxyXG4gKiBCdXQgdGhlIHRvb2xpbmcgdXNlcyB0aGUgY29uZmlndXJhdGlvbiBmaWxlIHR5cGUuXHJcbiAqL1xyXG5cclxuLy8gVGhlIG1vZHVsZSBpcyBoZXJlIG9ubHkgYmVjYXVzZSBuZy1wYWNrYWdyIG5lZWRzIGl0XHJcbmV4cG9ydCAqIGZyb20gJy4vbGliL3hsaWZmbWVyZ2UubW9kdWxlJztcclxuZXhwb3J0IHtJWGxpZmZNZXJnZU9wdGlvbnMsIElDb25maWdGaWxlLCBQcm9ncmFtT3B0aW9uc30gZnJvbSAnLi94bGlmZm1lcmdlL2kteGxpZmYtbWVyZ2Utb3B0aW9ucyc7XHJcbmV4cG9ydCB7V3JpdGVyVG9TdHJpbmd9IGZyb20gJy4vY29tbW9uL3dyaXRlci10by1zdHJpbmcnO1xyXG5leHBvcnQge0NvbW1hbmRPdXRwdXR9IGZyb20gJy4vY29tbW9uL2NvbW1hbmQtb3V0cHV0JztcclxuZXhwb3J0IHtYbGlmZk1lcmdlfSBmcm9tICcuL3hsaWZmbWVyZ2UveGxpZmYtbWVyZ2UnO1xyXG4iXX0=","originalSourcemap":{"version":3,"file":"public_api.js","sourceRoot":"","sources":["../../../projects/xliffmerge/src/public_api.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[[3,0,5,3]],[[0,0,7,0],[54,0,7,54]],[[0,0,8,0],[14,0,8,14],[39,0,8,39],[40,0,8,40]],[[0,0,10,0],[7,0,10,7],[9,0,10,8],[23,0,10,22],[25,0,10,23],[31,0,10,29],[58,0,10,56],[59,0,10,57]],[[0,0,11,0],[7,0,11,7],[9,0,11,8],[22,0,11,21],[24,0,11,22],[30,0,11,28],[55,0,11,53],[56,0,11,54]],[[0,0,12,0],[7,0,12,7],[9,0,12,8],[19,0,12,18],[21,0,12,19],[27,0,12,25],[53,0,12,51],[54,0,12,52]]],"sourcesContent":["/*\r\n * Public API Surface of xliffmerge\r\n * In principle, there is only the bin file xliffmerge,\r\n * because this is not mentioned as a library.\r\n * But the tooling uses the configuration file type.\r\n */\r\n\r\n// The module is here only because ng-packagr needs it\r\nexport * from './lib/xliffmerge.module';\r\nexport {IXliffMergeOptions, IConfigFile, ProgramOptions} from './xliffmerge/i-xliff-merge-options';\r\nexport {WriterToString} from './common/writer-to-string';\r\nexport {CommandOutput} from './common/command-output';\r\nexport {XliffMerge} from './xliffmerge/xliff-merge';\r\n"]},"resolvedIds":{"./lib/xliffmerge.module":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\lib\\xliffmerge.module.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./common/writer-to-string":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\writer-to-string.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./common/command-output":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\common\\command-output.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./xliffmerge/xliff-merge":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\xliffmerge\\xliff-merge.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":556,"body":[{"type":"ExportAllDeclaration","start":51,"end":80,"exported":null,"source":{"type":"Literal","start":65,"end":79,"value":"./public_api","raw":"'./public_api'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWkxOG5zdXBwb3J0LW5neC1pMThuc3VwcG9ydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL25neC1pMThuc3VwcG9ydC1uZ3gtaTE4bnN1cHBvcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWNfYXBpJztcbiJdfQ==","start":82,"end":556}]},"code":"/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public_api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWkxOG5zdXBwb3J0LW5neC1pMThuc3VwcG9ydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL25neC1pMThuc3VwcG9ydC1uZ3gtaTE4bnN1cHBvcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWNfYXBpJztcbiJdfQ==","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\public_api.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\ngx-i18nsupport-ngx-i18nsupport.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public_api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWkxOG5zdXBwb3J0LW5neC1pMThuc3VwcG9ydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL3hsaWZmbWVyZ2Uvc3JjL25neC1pMThuc3VwcG9ydC1uZ3gtaTE4bnN1cHBvcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWNfYXBpJztcbiJdfQ==","originalSourcemap":{"version":3,"file":"ngx-i18nsupport-ngx-i18nsupport.js","sourceRoot":"","sources":["../../../projects/xliffmerge/src/ngx-i18nsupport-ngx-i18nsupport.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[14,0,4,14],[28,0,4,28],[29,0,4,29]]],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"resolvedIds":{"./public_api":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport\\esm2020\\public_api.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]}],"plugins":{"node-resolve":{},"sourcemaps":{},"json":{}}}