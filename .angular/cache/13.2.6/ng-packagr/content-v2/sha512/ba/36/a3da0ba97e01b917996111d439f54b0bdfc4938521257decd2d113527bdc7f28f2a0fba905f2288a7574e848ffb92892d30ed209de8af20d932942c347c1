{"modules":[{"ast":{"type":"Program","start":0,"end":1707,"body":[{"type":"ImportDeclaration","start":0,"end":41,"specifiers":[{"type":"ImportSpecifier","start":9,"end":17,"imported":{"type":"Identifier","start":9,"end":17,"name":"NgModule"},"local":{"type":"Identifier","start":9,"end":17,"name":"NgModule"}}],"source":{"type":"Literal","start":25,"end":40,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":43,"end":79,"specifiers":[{"type":"ImportNamespaceSpecifier","start":50,"end":57,"local":{"type":"Identifier","start":55,"end":57,"name":"i0"}}],"source":{"type":"Literal","start":63,"end":78,"value":"@angular/core","raw":"\"@angular/core\""}},{"type":"ExportNamedDeclaration","start":81,"end":122,"declaration":{"type":"ClassDeclaration","start":88,"end":122,"id":{"type":"Identifier","start":94,"end":117,"name":"NgxI18nsupportLibModule"},"superClass":null,"body":{"type":"ClassBody","start":118,"end":122,"body":[]}},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":162,"end":286,"expression":{"type":"AssignmentExpression","start":162,"end":285,"operator":"=","left":{"type":"MemberExpression","start":162,"end":190,"object":{"type":"Identifier","start":162,"end":185,"name":"NgxI18nsupportLibModule"},"property":{"type":"Identifier","start":186,"end":190,"name":"ɵfac"},"computed":false,"optional":false},"right":{"type":"FunctionExpression","start":193,"end":285,"id":{"type":"Identifier","start":202,"end":233,"name":"NgxI18nsupportLibModule_Factory"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":234,"end":235,"name":"t"}],"body":{"type":"BlockStatement","start":237,"end":285,"body":[{"type":"ReturnStatement","start":239,"end":283,"argument":{"type":"NewExpression","start":246,"end":282,"callee":{"type":"LogicalExpression","start":251,"end":279,"left":{"type":"Identifier","start":251,"end":252,"name":"t"},"operator":"||","right":{"type":"Identifier","start":256,"end":279,"name":"NgxI18nsupportLibModule"}},"arguments":[]}}]}}}},{"type":"ExpressionStatement","start":326,"end":438,"expression":{"type":"AssignmentExpression","start":326,"end":437,"operator":"=","left":{"type":"MemberExpression","start":326,"end":354,"object":{"type":"Identifier","start":326,"end":349,"name":"NgxI18nsupportLibModule"},"property":{"type":"Identifier","start":350,"end":354,"name":"ɵmod"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":383,"end":437,"callee":{"type":"MemberExpression","start":383,"end":402,"object":{"type":"Identifier","start":383,"end":385,"name":"i0"},"property":{"type":"Identifier","start":386,"end":402,"name":"ɵɵdefineNgModule"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":403,"end":436,"properties":[{"type":"Property","start":405,"end":434,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":405,"end":409,"name":"type"},"value":{"type":"Identifier","start":411,"end":434,"name":"NgxI18nsupportLibModule"},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":478,"end":574,"expression":{"type":"AssignmentExpression","start":478,"end":573,"operator":"=","left":{"type":"MemberExpression","start":478,"end":506,"object":{"type":"Identifier","start":478,"end":501,"name":"NgxI18nsupportLibModule"},"property":{"type":"Identifier","start":502,"end":506,"name":"ɵinj"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":535,"end":573,"callee":{"type":"MemberExpression","start":535,"end":554,"object":{"type":"Identifier","start":535,"end":537,"name":"i0"},"property":{"type":"Identifier","start":538,"end":554,"name":"ɵɵdefineInjector"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":555,"end":572,"properties":[{"type":"Property","start":557,"end":570,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":557,"end":564,"name":"imports"},"value":{"type":"ArrayExpression","start":566,"end":570,"elements":[{"type":"ArrayExpression","start":567,"end":569,"elements":[]}]},"kind":"init"}]}],"optional":false}}},{"type":"ExpressionStatement","start":576,"end":871,"expression":{"type":"CallExpression","start":576,"end":870,"callee":{"type":"FunctionExpression","start":577,"end":867,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":589,"end":867,"body":[{"type":"ExpressionStatement","start":591,"end":865,"expression":{"type":"LogicalExpression","start":591,"end":864,"left":{"type":"LogicalExpression","start":592,"end":637,"left":{"type":"BinaryExpression","start":592,"end":624,"left":{"type":"UnaryExpression","start":592,"end":608,"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":599,"end":608,"name":"ngDevMode"}},"operator":"===","right":{"type":"Literal","start":613,"end":624,"value":"undefined","raw":"\"undefined\""}},"operator":"||","right":{"type":"Identifier","start":628,"end":637,"name":"ngDevMode"}},"operator":"&&","right":{"type":"CallExpression","start":642,"end":864,"callee":{"type":"MemberExpression","start":642,"end":662,"object":{"type":"Identifier","start":642,"end":644,"name":"i0"},"property":{"type":"Identifier","start":645,"end":662,"name":"ɵsetClassMetadata"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":663,"end":686,"name":"NgxI18nsupportLibModule"},{"type":"ArrayExpression","start":688,"end":851,"elements":[{"type":"ObjectExpression","start":689,"end":850,"properties":[{"type":"Property","start":700,"end":714,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":700,"end":704,"name":"type"},"value":{"type":"Identifier","start":706,"end":714,"name":"NgModule"},"kind":"init"},{"type":"Property","start":725,"end":843,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":725,"end":729,"name":"args"},"value":{"type":"ArrayExpression","start":731,"end":843,"elements":[{"type":"ObjectExpression","start":732,"end":842,"properties":[{"type":"Property","start":751,"end":762,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":751,"end":758,"name":"imports"},"value":{"type":"ArrayExpression","start":760,"end":762,"elements":[]},"kind":"init"},{"type":"Property","start":781,"end":797,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":781,"end":793,"name":"declarations"},"value":{"type":"ArrayExpression","start":795,"end":797,"elements":[]},"kind":"init"},{"type":"Property","start":816,"end":827,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":816,"end":823,"name":"exports"},"value":{"type":"ArrayExpression","start":825,"end":827,"elements":[]},"kind":"init"}]}]},"kind":"init"}]}]},{"type":"Literal","start":853,"end":857,"value":null,"raw":"null"},{"type":"Literal","start":859,"end":863,"value":null,"raw":"null"}],"optional":false}}}]}},"arguments":[],"optional":false}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWkxOG5zdXBwb3J0LWxpYi5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9saWIvbmd4LWkxOG5zdXBwb3J0LWxpYi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFRekMsTUFBTSxPQUFPLHVCQUF1Qjs7b0lBQXZCLHVCQUF1QjsySEFBdkIsdUJBQXVCOytIQUx6QixFQUNSO3VGQUlVLHVCQUF1QjtjQU5uQyxRQUFRO2VBQUM7Z0JBQ1IsT0FBTyxFQUFFLEVBQ1I7Z0JBQ0QsWUFBWSxFQUFFLEVBQUU7Z0JBQ2hCLE9BQU8sRUFBRSxFQUFFO2FBQ1oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgXSxcclxuICBkZWNsYXJhdGlvbnM6IFtdLFxyXG4gIGV4cG9ydHM6IFtdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3hJMThuc3VwcG9ydExpYk1vZHVsZSB7IH1cclxuIl19","start":873,"end":1707}]},"code":"import { NgModule } from '@angular/core';\r\nimport * as i0 from \"@angular/core\";\r\nexport class NgxI18nsupportLibModule {\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxI18nsupportLibModule.ɵfac = function NgxI18nsupportLibModule_Factory(t) { return new (t || NgxI18nsupportLibModule)(); };\r\n/** @nocollapse */ /** @nocollapse */ NgxI18nsupportLibModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: NgxI18nsupportLibModule });\r\n/** @nocollapse */ /** @nocollapse */ NgxI18nsupportLibModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({ imports: [[]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxI18nsupportLibModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [],\r\n                declarations: [],\r\n                exports: []\r\n            }]\r\n    }], null, null); })();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWkxOG5zdXBwb3J0LWxpYi5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9saWIvbmd4LWkxOG5zdXBwb3J0LWxpYi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFRekMsTUFBTSxPQUFPLHVCQUF1Qjs7b0lBQXZCLHVCQUF1QjsySEFBdkIsdUJBQXVCOytIQUx6QixFQUNSO3VGQUlVLHVCQUF1QjtjQU5uQyxRQUFRO2VBQUM7Z0JBQ1IsT0FBTyxFQUFFLEVBQ1I7Z0JBQ0QsWUFBWSxFQUFFLEVBQUU7Z0JBQ2hCLE9BQU8sRUFBRSxFQUFFO2FBQ1oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgXSxcclxuICBkZWNsYXJhdGlvbnM6IFtdLFxyXG4gIGV4cG9ydHM6IFtdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3hJMThuc3VwcG9ydExpYk1vZHVsZSB7IH1cclxuIl19","customTransformCache":false,"dependencies":["@angular/core"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\lib\\ngx-i18nsupport-lib.module.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { NgModule } from '@angular/core';\r\nimport * as i0 from \"@angular/core\";\r\nexport class NgxI18nsupportLibModule {\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxI18nsupportLibModule.ɵfac = function NgxI18nsupportLibModule_Factory(t) { return new (t || NgxI18nsupportLibModule)(); };\r\n/** @nocollapse */ /** @nocollapse */ NgxI18nsupportLibModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: NgxI18nsupportLibModule });\r\n/** @nocollapse */ /** @nocollapse */ NgxI18nsupportLibModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({ imports: [[]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxI18nsupportLibModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [],\r\n                declarations: [],\r\n                exports: []\r\n            }]\r\n    }], null, null); })();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWkxOG5zdXBwb3J0LWxpYi5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9saWIvbmd4LWkxOG5zdXBwb3J0LWxpYi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFRekMsTUFBTSxPQUFPLHVCQUF1Qjs7b0lBQXZCLHVCQUF1QjsySEFBdkIsdUJBQXVCOytIQUx6QixFQUNSO3VGQUlVLHVCQUF1QjtjQU5uQyxRQUFRO2VBQUM7Z0JBQ1IsT0FBTyxFQUFFLEVBQ1I7Z0JBQ0QsWUFBWSxFQUFFLEVBQUU7Z0JBQ2hCLE9BQU8sRUFBRSxFQUFFO2FBQ1oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgXSxcclxuICBkZWNsYXJhdGlvbnM6IFtdLFxyXG4gIGV4cG9ydHM6IFtdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3hJMThuc3VwcG9ydExpYk1vZHVsZSB7IH1cclxuIl19","originalSourcemap":{"version":3,"file":"ngx-i18nsupport-lib.module.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/lib/ngx-i18nsupport-lib.module.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[17,0,0,17],[19,0,0,19],[25,0,0,25],[40,0,0,40],[41,0,0,41]],[],[[0,0,8,0],[6,0,8,6],[13,0,8,13],[36,0,8,36]],[],[[132,0,8,13],[155,0,8,36]],[[123,0,8,13],[146,0,8,36]],[[127,0,3,11],[129,0,4,3]],[[87,0,8,13],[110,0,8,36]],[[14,0,2,1],[22,0,2,9]],[[15,0,2,10]],[[16,0,3,2],[23,0,3,9],[25,0,3,11],[27,0,4,3]],[[16,0,5,2],[28,0,5,14],[30,0,5,16],[32,0,5,18]],[[16,0,6,2],[23,0,6,9],[25,0,6,11],[27,0,6,13]],[[13,0,7,1]]],"sourcesContent":["import { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  declarations: [],\r\n  exports: []\r\n})\r\nexport class NgxI18nsupportLibModule { }\r\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":4331,"body":[{"type":"ExportNamedDeclaration","start":125,"end":161,"declaration":{"type":"VariableDeclaration","start":132,"end":161,"declarations":[{"type":"VariableDeclarator","start":138,"end":160,"id":{"type":"Identifier","start":138,"end":152,"name":"FORMAT_XLIFF12"},"init":{"type":"Literal","start":155,"end":160,"value":"xlf","raw":"'xlf'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":163,"end":200,"declaration":{"type":"VariableDeclaration","start":170,"end":200,"declarations":[{"type":"VariableDeclarator","start":176,"end":199,"id":{"type":"Identifier","start":176,"end":190,"name":"FORMAT_XLIFF20"},"init":{"type":"Literal","start":193,"end":199,"value":"xlf2","raw":"'xlf2'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":202,"end":234,"declaration":{"type":"VariableDeclaration","start":209,"end":234,"declarations":[{"type":"VariableDeclarator","start":215,"end":233,"id":{"type":"Identifier","start":215,"end":225,"name":"FORMAT_XMB"},"init":{"type":"Literal","start":228,"end":233,"value":"xmb","raw":"'xmb'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":236,"end":268,"declaration":{"type":"VariableDeclaration","start":243,"end":268,"declarations":[{"type":"VariableDeclarator","start":249,"end":267,"id":{"type":"Identifier","start":249,"end":259,"name":"FORMAT_XTB"},"init":{"type":"Literal","start":262,"end":267,"value":"xtb","raw":"'xtb'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":331,"end":375,"declaration":{"type":"VariableDeclaration","start":338,"end":375,"declarations":[{"type":"VariableDeclarator","start":344,"end":374,"id":{"type":"Identifier","start":344,"end":360,"name":"FILETYPE_XLIFF12"},"init":{"type":"Literal","start":363,"end":374,"value":"XLIFF 1.2","raw":"'XLIFF 1.2'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":377,"end":421,"declaration":{"type":"VariableDeclaration","start":384,"end":421,"declarations":[{"type":"VariableDeclarator","start":390,"end":420,"id":{"type":"Identifier","start":390,"end":406,"name":"FILETYPE_XLIFF20"},"init":{"type":"Literal","start":409,"end":420,"value":"XLIFF 2.0","raw":"'XLIFF 2.0'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":423,"end":457,"declaration":{"type":"VariableDeclaration","start":430,"end":457,"declarations":[{"type":"VariableDeclarator","start":436,"end":456,"id":{"type":"Identifier","start":436,"end":448,"name":"FILETYPE_XMB"},"init":{"type":"Literal","start":451,"end":456,"value":"XMB","raw":"'XMB'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":459,"end":493,"declaration":{"type":"VariableDeclaration","start":466,"end":493,"declarations":[{"type":"VariableDeclarator","start":472,"end":492,"id":{"type":"Identifier","start":472,"end":484,"name":"FILETYPE_XTB"},"init":{"type":"Literal","start":487,"end":492,"value":"XTB","raw":"'XTB'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":635,"end":666,"declaration":{"type":"VariableDeclaration","start":642,"end":666,"declarations":[{"type":"VariableDeclarator","start":648,"end":665,"id":{"type":"Identifier","start":648,"end":657,"name":"STATE_NEW"},"init":{"type":"Literal","start":660,"end":665,"value":"new","raw":"'new'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":763,"end":808,"declaration":{"type":"VariableDeclaration","start":770,"end":808,"declarations":[{"type":"VariableDeclarator","start":776,"end":807,"id":{"type":"Identifier","start":776,"end":792,"name":"STATE_TRANSLATED"},"init":{"type":"Literal","start":795,"end":807,"value":"translated","raw":"'translated'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":904,"end":939,"declaration":{"type":"VariableDeclaration","start":911,"end":939,"declarations":[{"type":"VariableDeclarator","start":917,"end":938,"id":{"type":"Identifier","start":917,"end":928,"name":"STATE_FINAL"},"init":{"type":"Literal","start":931,"end":938,"value":"final","raw":"'final'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1051,"end":1105,"declaration":{"type":"VariableDeclaration","start":1058,"end":1105,"declarations":[{"type":"VariableDeclarator","start":1064,"end":1104,"id":{"type":"Identifier","start":1064,"end":1092,"name":"NORMALIZATION_FORMAT_DEFAULT"},"init":{"type":"Literal","start":1095,"end":1104,"value":"default","raw":"'default'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":1219,"end":1283,"declaration":{"type":"VariableDeclaration","start":1226,"end":1283,"declarations":[{"type":"VariableDeclarator","start":1232,"end":1282,"id":{"type":"Identifier","start":1232,"end":1265,"name":"NORMALIZATION_FORMAT_NGXTRANSLATE"},"init":{"type":"Literal","start":1268,"end":1282,"value":"ngxtranslate","raw":"'ngxtranslate'"}}],"kind":"const"},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWkxOG5zdXBwb3J0LWxpYi9zcmMvYXBpL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7QUFFSDs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxLQUFLLENBQUM7QUFDcEMsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLE1BQU0sQ0FBQztBQUNyQyxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsS0FBSyxDQUFDO0FBQ2hDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxLQUFLLENBQUM7QUFFaEM7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsV0FBVyxDQUFDO0FBQzVDLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLFdBQVcsQ0FBQztBQUM1QyxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDO0FBQ2xDLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxLQUFLLENBQUM7QUFFbEM7OztHQUdHO0FBRUg7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQztBQUMvQjs7O0dBR0c7QUFDSCxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxZQUFZLENBQUM7QUFDN0M7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQztBQUVuQzs7R0FFRztBQUVIOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUcsU0FBUyxDQUFDO0FBRXREOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUFHLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IHJvb2JtIG9uIDA4LjA1LjIwMTcuXHJcbiAqIFNvbWUgY29uc3RhbnQgdmFsdWVzIHVzZWQgaW4gdGhlIEFQSS5cclxuICovXHJcblxyXG4vKipcclxuICogc3VwcG9ydGVkIGZpbGUgZm9ybWF0c1xyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEZPUk1BVF9YTElGRjEyID0gJ3hsZic7XHJcbmV4cG9ydCBjb25zdCBGT1JNQVRfWExJRkYyMCA9ICd4bGYyJztcclxuZXhwb3J0IGNvbnN0IEZPUk1BVF9YTUIgPSAneG1iJztcclxuZXhwb3J0IGNvbnN0IEZPUk1BVF9YVEIgPSAneHRiJztcclxuXHJcbi8qKlxyXG4gKiBGaWxlIHR5cGVzXHJcbiAqIChyZXR1cm5lZCBieSBmaWxlVHlwZSgpIG1ldGhvZClcclxuICovXHJcbmV4cG9ydCBjb25zdCBGSUxFVFlQRV9YTElGRjEyID0gJ1hMSUZGIDEuMic7XHJcbmV4cG9ydCBjb25zdCBGSUxFVFlQRV9YTElGRjIwID0gJ1hMSUZGIDIuMCc7XHJcbmV4cG9ydCBjb25zdCBGSUxFVFlQRV9YTUIgPSAnWE1CJztcclxuZXhwb3J0IGNvbnN0IEZJTEVUWVBFX1hUQiA9ICdYVEInO1xyXG5cclxuLyoqXHJcbiAqIGFic3RyYWN0IHN0YXRlIHZhbHVlLlxyXG4gKiBUaGVyZSBhcmUgb25seSAzIHN1cHBvcnRlZCBzdGF0ZSB2YWx1ZXMuXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIFN0YXRlIE5FVy5cclxuICogU2lnbmFscyBhbiB1bnRyYW5zbGF0ZWQgdW5pdC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBTVEFURV9ORVcgPSAnbmV3JztcclxuLyoqXHJcbiAqIFN0YXRlIFRSQU5TTEFURUQuXHJcbiAqIFNpZ25hbHMgYSB0cmFuc2xhdGVkIHVuaXQsIHRoYXQgaXMgbm90IHJldmlld2VkIHVudGlsIG5vdy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBTVEFURV9UUkFOU0xBVEVEID0gJ3RyYW5zbGF0ZWQnO1xyXG4vKipcclxuICogU3RhdGUgRklOQUwuXHJcbiAqIFNpZ25hbHMgYSB0cmFuc2xhdGVkIHVuaXQsIHRoYXQgaXMgcmV2aWV3ZWQgYW5kIHJlYWR5IGZvciB1c2UuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgU1RBVEVfRklOQUwgPSAnZmluYWwnO1xyXG5cclxuLyoqXHJcbiAqIE5vcm1hbGl6YXRvbiBtZXNzYWdlIGZvcm1hdHMuXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIERlZmF1bHQgZm9ybWF0LCBjb250YWlucyBwbGFjZWhvbGRlcnMsIGh0bWwgbWFya3VwLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IE5PUk1BTElaQVRJT05fRk9STUFUX0RFRkFVTFQgPSAnZGVmYXVsdCc7XHJcblxyXG4vKipcclxuICogRm9ybWF0IGZvciB1c2FnZSBpbiBuZ3h0cmFuc2xhdGUgbWVzc2FnZXMuXHJcbiAqIFBsYWNlaG9sZGVyIGFyZSBpbiB0aGUgZm9ybSB7e259fSwgbm8gaHRtbCBtYXJrdXAuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgTk9STUFMSVpBVElPTl9GT1JNQVRfTkdYVFJBTlNMQVRFID0gJ25neHRyYW5zbGF0ZSc7XHJcbiJdfQ==","start":1285,"end":4331}]},"code":"/**\r\n * Created by roobm on 08.05.2017.\r\n * Some constant values used in the API.\r\n */\r\n/**\r\n * supported file formats\r\n */\r\nexport const FORMAT_XLIFF12 = 'xlf';\r\nexport const FORMAT_XLIFF20 = 'xlf2';\r\nexport const FORMAT_XMB = 'xmb';\r\nexport const FORMAT_XTB = 'xtb';\r\n/**\r\n * File types\r\n * (returned by fileType() method)\r\n */\r\nexport const FILETYPE_XLIFF12 = 'XLIFF 1.2';\r\nexport const FILETYPE_XLIFF20 = 'XLIFF 2.0';\r\nexport const FILETYPE_XMB = 'XMB';\r\nexport const FILETYPE_XTB = 'XTB';\r\n/**\r\n * abstract state value.\r\n * There are only 3 supported state values.\r\n */\r\n/**\r\n * State NEW.\r\n * Signals an untranslated unit.\r\n */\r\nexport const STATE_NEW = 'new';\r\n/**\r\n * State TRANSLATED.\r\n * Signals a translated unit, that is not reviewed until now.\r\n */\r\nexport const STATE_TRANSLATED = 'translated';\r\n/**\r\n * State FINAL.\r\n * Signals a translated unit, that is reviewed and ready for use.\r\n */\r\nexport const STATE_FINAL = 'final';\r\n/**\r\n * Normalizaton message formats.\r\n */\r\n/**\r\n * Default format, contains placeholders, html markup.\r\n */\r\nexport const NORMALIZATION_FORMAT_DEFAULT = 'default';\r\n/**\r\n * Format for usage in ngxtranslate messages.\r\n * Placeholder are in the form {{n}}, no html markup.\r\n */\r\nexport const NORMALIZATION_FORMAT_NGXTRANSLATE = 'ngxtranslate';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWkxOG5zdXBwb3J0LWxpYi9zcmMvYXBpL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7QUFFSDs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxLQUFLLENBQUM7QUFDcEMsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLE1BQU0sQ0FBQztBQUNyQyxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsS0FBSyxDQUFDO0FBQ2hDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxLQUFLLENBQUM7QUFFaEM7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsV0FBVyxDQUFDO0FBQzVDLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLFdBQVcsQ0FBQztBQUM1QyxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDO0FBQ2xDLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxLQUFLLENBQUM7QUFFbEM7OztHQUdHO0FBRUg7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQztBQUMvQjs7O0dBR0c7QUFDSCxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxZQUFZLENBQUM7QUFDN0M7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQztBQUVuQzs7R0FFRztBQUVIOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUcsU0FBUyxDQUFDO0FBRXREOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUFHLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IHJvb2JtIG9uIDA4LjA1LjIwMTcuXHJcbiAqIFNvbWUgY29uc3RhbnQgdmFsdWVzIHVzZWQgaW4gdGhlIEFQSS5cclxuICovXHJcblxyXG4vKipcclxuICogc3VwcG9ydGVkIGZpbGUgZm9ybWF0c1xyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEZPUk1BVF9YTElGRjEyID0gJ3hsZic7XHJcbmV4cG9ydCBjb25zdCBGT1JNQVRfWExJRkYyMCA9ICd4bGYyJztcclxuZXhwb3J0IGNvbnN0IEZPUk1BVF9YTUIgPSAneG1iJztcclxuZXhwb3J0IGNvbnN0IEZPUk1BVF9YVEIgPSAneHRiJztcclxuXHJcbi8qKlxyXG4gKiBGaWxlIHR5cGVzXHJcbiAqIChyZXR1cm5lZCBieSBmaWxlVHlwZSgpIG1ldGhvZClcclxuICovXHJcbmV4cG9ydCBjb25zdCBGSUxFVFlQRV9YTElGRjEyID0gJ1hMSUZGIDEuMic7XHJcbmV4cG9ydCBjb25zdCBGSUxFVFlQRV9YTElGRjIwID0gJ1hMSUZGIDIuMCc7XHJcbmV4cG9ydCBjb25zdCBGSUxFVFlQRV9YTUIgPSAnWE1CJztcclxuZXhwb3J0IGNvbnN0IEZJTEVUWVBFX1hUQiA9ICdYVEInO1xyXG5cclxuLyoqXHJcbiAqIGFic3RyYWN0IHN0YXRlIHZhbHVlLlxyXG4gKiBUaGVyZSBhcmUgb25seSAzIHN1cHBvcnRlZCBzdGF0ZSB2YWx1ZXMuXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIFN0YXRlIE5FVy5cclxuICogU2lnbmFscyBhbiB1bnRyYW5zbGF0ZWQgdW5pdC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBTVEFURV9ORVcgPSAnbmV3JztcclxuLyoqXHJcbiAqIFN0YXRlIFRSQU5TTEFURUQuXHJcbiAqIFNpZ25hbHMgYSB0cmFuc2xhdGVkIHVuaXQsIHRoYXQgaXMgbm90IHJldmlld2VkIHVudGlsIG5vdy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBTVEFURV9UUkFOU0xBVEVEID0gJ3RyYW5zbGF0ZWQnO1xyXG4vKipcclxuICogU3RhdGUgRklOQUwuXHJcbiAqIFNpZ25hbHMgYSB0cmFuc2xhdGVkIHVuaXQsIHRoYXQgaXMgcmV2aWV3ZWQgYW5kIHJlYWR5IGZvciB1c2UuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgU1RBVEVfRklOQUwgPSAnZmluYWwnO1xyXG5cclxuLyoqXHJcbiAqIE5vcm1hbGl6YXRvbiBtZXNzYWdlIGZvcm1hdHMuXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIERlZmF1bHQgZm9ybWF0LCBjb250YWlucyBwbGFjZWhvbGRlcnMsIGh0bWwgbWFya3VwLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IE5PUk1BTElaQVRJT05fRk9STUFUX0RFRkFVTFQgPSAnZGVmYXVsdCc7XHJcblxyXG4vKipcclxuICogRm9ybWF0IGZvciB1c2FnZSBpbiBuZ3h0cmFuc2xhdGUgbWVzc2FnZXMuXHJcbiAqIFBsYWNlaG9sZGVyIGFyZSBpbiB0aGUgZm9ybSB7e259fSwgbm8gaHRtbCBtYXJrdXAuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgTk9STUFMSVpBVElPTl9GT1JNQVRfTkdYVFJBTlNMQVRFID0gJ25neHRyYW5zbGF0ZSc7XHJcbiJdfQ==","customTransformCache":false,"dependencies":[],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Created by roobm on 08.05.2017.\r\n * Some constant values used in the API.\r\n */\r\n/**\r\n * supported file formats\r\n */\r\nexport const FORMAT_XLIFF12 = 'xlf';\r\nexport const FORMAT_XLIFF20 = 'xlf2';\r\nexport const FORMAT_XMB = 'xmb';\r\nexport const FORMAT_XTB = 'xtb';\r\n/**\r\n * File types\r\n * (returned by fileType() method)\r\n */\r\nexport const FILETYPE_XLIFF12 = 'XLIFF 1.2';\r\nexport const FILETYPE_XLIFF20 = 'XLIFF 2.0';\r\nexport const FILETYPE_XMB = 'XMB';\r\nexport const FILETYPE_XTB = 'XTB';\r\n/**\r\n * abstract state value.\r\n * There are only 3 supported state values.\r\n */\r\n/**\r\n * State NEW.\r\n * Signals an untranslated unit.\r\n */\r\nexport const STATE_NEW = 'new';\r\n/**\r\n * State TRANSLATED.\r\n * Signals a translated unit, that is not reviewed until now.\r\n */\r\nexport const STATE_TRANSLATED = 'translated';\r\n/**\r\n * State FINAL.\r\n * Signals a translated unit, that is reviewed and ready for use.\r\n */\r\nexport const STATE_FINAL = 'final';\r\n/**\r\n * Normalizaton message formats.\r\n */\r\n/**\r\n * Default format, contains placeholders, html markup.\r\n */\r\nexport const NORMALIZATION_FORMAT_DEFAULT = 'default';\r\n/**\r\n * Format for usage in ngxtranslate messages.\r\n * Placeholder are in the form {{n}}, no html markup.\r\n */\r\nexport const NORMALIZATION_FORMAT_NGXTRANSLATE = 'ngxtranslate';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWkxOG5zdXBwb3J0LWxpYi9zcmMvYXBpL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7QUFFSDs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxLQUFLLENBQUM7QUFDcEMsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLE1BQU0sQ0FBQztBQUNyQyxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsS0FBSyxDQUFDO0FBQ2hDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxLQUFLLENBQUM7QUFFaEM7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsV0FBVyxDQUFDO0FBQzVDLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLFdBQVcsQ0FBQztBQUM1QyxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDO0FBQ2xDLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxLQUFLLENBQUM7QUFFbEM7OztHQUdHO0FBRUg7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQztBQUMvQjs7O0dBR0c7QUFDSCxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxZQUFZLENBQUM7QUFDN0M7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQztBQUVuQzs7R0FFRztBQUVIOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUcsU0FBUyxDQUFDO0FBRXREOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUFHLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IHJvb2JtIG9uIDA4LjA1LjIwMTcuXHJcbiAqIFNvbWUgY29uc3RhbnQgdmFsdWVzIHVzZWQgaW4gdGhlIEFQSS5cclxuICovXHJcblxyXG4vKipcclxuICogc3VwcG9ydGVkIGZpbGUgZm9ybWF0c1xyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEZPUk1BVF9YTElGRjEyID0gJ3hsZic7XHJcbmV4cG9ydCBjb25zdCBGT1JNQVRfWExJRkYyMCA9ICd4bGYyJztcclxuZXhwb3J0IGNvbnN0IEZPUk1BVF9YTUIgPSAneG1iJztcclxuZXhwb3J0IGNvbnN0IEZPUk1BVF9YVEIgPSAneHRiJztcclxuXHJcbi8qKlxyXG4gKiBGaWxlIHR5cGVzXHJcbiAqIChyZXR1cm5lZCBieSBmaWxlVHlwZSgpIG1ldGhvZClcclxuICovXHJcbmV4cG9ydCBjb25zdCBGSUxFVFlQRV9YTElGRjEyID0gJ1hMSUZGIDEuMic7XHJcbmV4cG9ydCBjb25zdCBGSUxFVFlQRV9YTElGRjIwID0gJ1hMSUZGIDIuMCc7XHJcbmV4cG9ydCBjb25zdCBGSUxFVFlQRV9YTUIgPSAnWE1CJztcclxuZXhwb3J0IGNvbnN0IEZJTEVUWVBFX1hUQiA9ICdYVEInO1xyXG5cclxuLyoqXHJcbiAqIGFic3RyYWN0IHN0YXRlIHZhbHVlLlxyXG4gKiBUaGVyZSBhcmUgb25seSAzIHN1cHBvcnRlZCBzdGF0ZSB2YWx1ZXMuXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIFN0YXRlIE5FVy5cclxuICogU2lnbmFscyBhbiB1bnRyYW5zbGF0ZWQgdW5pdC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBTVEFURV9ORVcgPSAnbmV3JztcclxuLyoqXHJcbiAqIFN0YXRlIFRSQU5TTEFURUQuXHJcbiAqIFNpZ25hbHMgYSB0cmFuc2xhdGVkIHVuaXQsIHRoYXQgaXMgbm90IHJldmlld2VkIHVudGlsIG5vdy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBTVEFURV9UUkFOU0xBVEVEID0gJ3RyYW5zbGF0ZWQnO1xyXG4vKipcclxuICogU3RhdGUgRklOQUwuXHJcbiAqIFNpZ25hbHMgYSB0cmFuc2xhdGVkIHVuaXQsIHRoYXQgaXMgcmV2aWV3ZWQgYW5kIHJlYWR5IGZvciB1c2UuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgU1RBVEVfRklOQUwgPSAnZmluYWwnO1xyXG5cclxuLyoqXHJcbiAqIE5vcm1hbGl6YXRvbiBtZXNzYWdlIGZvcm1hdHMuXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIERlZmF1bHQgZm9ybWF0LCBjb250YWlucyBwbGFjZWhvbGRlcnMsIGh0bWwgbWFya3VwLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IE5PUk1BTElaQVRJT05fRk9STUFUX0RFRkFVTFQgPSAnZGVmYXVsdCc7XHJcblxyXG4vKipcclxuICogRm9ybWF0IGZvciB1c2FnZSBpbiBuZ3h0cmFuc2xhdGUgbWVzc2FnZXMuXHJcbiAqIFBsYWNlaG9sZGVyIGFyZSBpbiB0aGUgZm9ybSB7e259fSwgbm8gaHRtbCBtYXJrdXAuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgTk9STUFMSVpBVElPTl9GT1JNQVRfTkdYVFJBTlNMQVRFID0gJ25neHRyYW5zbGF0ZSc7XHJcbiJdfQ==","originalSourcemap":{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/api/constants.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[[3,0,3,3]],[[0,0,5,0]],[],[[3,0,7,3]],[[0,0,8,0],[6,0,8,6],[7,0,8,7],[13,0,8,13],[27,0,8,27],[30,0,8,30],[35,0,8,35],[36,0,8,36]],[[0,0,9,0],[6,0,9,6],[7,0,9,7],[13,0,9,13],[27,0,9,27],[30,0,9,30],[36,0,9,36],[37,0,9,37]],[[0,0,10,0],[6,0,10,6],[7,0,10,7],[13,0,10,13],[23,0,10,23],[26,0,10,26],[31,0,10,31],[32,0,10,32]],[[0,0,11,0],[6,0,11,6],[7,0,11,7],[13,0,11,13],[23,0,11,23],[26,0,11,26],[31,0,11,31],[32,0,11,32]],[[0,0,13,0]],[],[],[[3,0,16,3]],[[0,0,17,0],[6,0,17,6],[7,0,17,7],[13,0,17,13],[29,0,17,29],[32,0,17,32],[43,0,17,43],[44,0,17,44]],[[0,0,18,0],[6,0,18,6],[7,0,18,7],[13,0,18,13],[29,0,18,29],[32,0,18,32],[43,0,18,43],[44,0,18,44]],[[0,0,19,0],[6,0,19,6],[7,0,19,7],[13,0,19,13],[25,0,19,25],[28,0,19,28],[33,0,19,33],[34,0,19,34]],[[0,0,20,0],[6,0,20,6],[7,0,20,7],[13,0,20,13],[25,0,20,25],[28,0,20,28],[33,0,20,33],[34,0,20,34]],[[0,0,22,0]],[],[],[[3,0,25,3]],[[0,0,27,0]],[],[],[[3,0,30,3]],[[0,0,31,0],[6,0,31,6],[7,0,31,7],[13,0,31,13],[22,0,31,22],[25,0,31,25],[30,0,31,30],[31,0,31,31]],[[0,0,32,0]],[],[],[[3,0,35,3]],[[0,0,36,0],[6,0,36,6],[7,0,36,7],[13,0,36,13],[29,0,36,29],[32,0,36,32],[44,0,36,44],[45,0,36,45]],[[0,0,37,0]],[],[],[[3,0,40,3]],[[0,0,41,0],[6,0,41,6],[7,0,41,7],[13,0,41,13],[24,0,41,24],[27,0,41,27],[34,0,41,34],[35,0,41,35]],[[0,0,43,0]],[],[[3,0,45,3]],[[0,0,47,0]],[],[[3,0,49,3]],[[0,0,50,0],[6,0,50,6],[7,0,50,7],[13,0,50,13],[41,0,50,41],[44,0,50,44],[53,0,50,53],[54,0,50,54]],[[0,0,52,0]],[],[],[[3,0,55,3]],[[0,0,56,0],[6,0,56,6],[7,0,56,7],[13,0,56,13],[46,0,56,46],[49,0,56,49],[63,0,56,63],[64,0,56,64]]],"sourcesContent":["/**\r\n * Created by roobm on 08.05.2017.\r\n * Some constant values used in the API.\r\n */\r\n\r\n/**\r\n * supported file formats\r\n */\r\nexport const FORMAT_XLIFF12 = 'xlf';\r\nexport const FORMAT_XLIFF20 = 'xlf2';\r\nexport const FORMAT_XMB = 'xmb';\r\nexport const FORMAT_XTB = 'xtb';\r\n\r\n/**\r\n * File types\r\n * (returned by fileType() method)\r\n */\r\nexport const FILETYPE_XLIFF12 = 'XLIFF 1.2';\r\nexport const FILETYPE_XLIFF20 = 'XLIFF 2.0';\r\nexport const FILETYPE_XMB = 'XMB';\r\nexport const FILETYPE_XTB = 'XTB';\r\n\r\n/**\r\n * abstract state value.\r\n * There are only 3 supported state values.\r\n */\r\n\r\n/**\r\n * State NEW.\r\n * Signals an untranslated unit.\r\n */\r\nexport const STATE_NEW = 'new';\r\n/**\r\n * State TRANSLATED.\r\n * Signals a translated unit, that is not reviewed until now.\r\n */\r\nexport const STATE_TRANSLATED = 'translated';\r\n/**\r\n * State FINAL.\r\n * Signals a translated unit, that is reviewed and ready for use.\r\n */\r\nexport const STATE_FINAL = 'final';\r\n\r\n/**\r\n * Normalizaton message formats.\r\n */\r\n\r\n/**\r\n * Default format, contains placeholders, html markup.\r\n */\r\nexport const NORMALIZATION_FORMAT_DEFAULT = 'default';\r\n\r\n/**\r\n * Format for usage in ngxtranslate messages.\r\n * Placeholder are in the form {{n}}, no html markup.\r\n */\r\nexport const NORMALIZATION_FORMAT_NGXTRANSLATE = 'ngxtranslate';\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":20814,"body":[{"type":"ImportDeclaration","start":0,"end":50,"specifiers":[{"type":"ImportSpecifier","start":9,"end":18,"imported":{"type":"Identifier","start":9,"end":18,"name":"DOMParser"},"local":{"type":"Identifier","start":9,"end":18,"name":"DOMParser"}},{"type":"ImportSpecifier","start":20,"end":33,"imported":{"type":"Identifier","start":20,"end":33,"name":"XMLSerializer"},"local":{"type":"Identifier","start":20,"end":33,"name":"XMLSerializer"}}],"source":{"type":"Literal","start":41,"end":49,"value":"xmldom","raw":"'xmldom'"}},{"type":"ExportNamedDeclaration","start":141,"end":6086,"declaration":{"type":"ClassDeclaration","start":148,"end":6086,"id":{"type":"Identifier","start":154,"end":166,"name":"DOMUtilities"},"superClass":null,"body":{"type":"ClassBody","start":167,"end":6086,"body":[{"type":"MethodDefinition","start":363,"end":668,"static":true,"computed":false,"key":{"type":"Identifier","start":370,"end":394,"name":"getFirstElementByTagName"},"kind":"method","value":{"type":"FunctionExpression","start":394,"end":668,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":395,"end":402,"name":"element"},{"type":"Identifier","start":404,"end":411,"name":"tagName"}],"body":{"type":"BlockStatement","start":413,"end":668,"body":[{"type":"VariableDeclaration","start":424,"end":487,"declarations":[{"type":"VariableDeclarator","start":430,"end":486,"id":{"type":"Identifier","start":430,"end":446,"name":"matchingElements"},"init":{"type":"CallExpression","start":449,"end":486,"callee":{"type":"MemberExpression","start":449,"end":477,"object":{"type":"Identifier","start":449,"end":456,"name":"element"},"property":{"type":"Identifier","start":457,"end":477,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":478,"end":485,"name":"tagName"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":497,"end":661,"test":{"type":"LogicalExpression","start":501,"end":548,"left":{"type":"Identifier","start":501,"end":517,"name":"matchingElements"},"operator":"&&","right":{"type":"BinaryExpression","start":521,"end":548,"left":{"type":"MemberExpression","start":521,"end":544,"object":{"type":"Identifier","start":521,"end":537,"name":"matchingElements"},"property":{"type":"Identifier","start":538,"end":544,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":547,"end":548,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":550,"end":608,"body":[{"type":"ReturnStatement","start":565,"end":597,"argument":{"type":"CallExpression","start":572,"end":596,"callee":{"type":"MemberExpression","start":572,"end":593,"object":{"type":"Identifier","start":572,"end":588,"name":"matchingElements"},"property":{"type":"Identifier","start":589,"end":593,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":594,"end":595,"value":0,"raw":"0"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":623,"end":661,"body":[{"type":"ReturnStatement","start":638,"end":650,"argument":{"type":"Literal","start":645,"end":649,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":891,"end":1367,"static":true,"computed":false,"key":{"type":"Identifier","start":898,"end":922,"name":"getElementByTagNameAndId"},"kind":"method","value":{"type":"FunctionExpression","start":922,"end":1367,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":923,"end":930,"name":"element"},{"type":"Identifier","start":932,"end":939,"name":"tagName"},{"type":"Identifier","start":941,"end":943,"name":"id"}],"body":{"type":"BlockStatement","start":945,"end":1367,"body":[{"type":"VariableDeclaration","start":956,"end":1019,"declarations":[{"type":"VariableDeclarator","start":962,"end":1018,"id":{"type":"Identifier","start":962,"end":978,"name":"matchingElements"},"init":{"type":"CallExpression","start":981,"end":1018,"callee":{"type":"MemberExpression","start":981,"end":1009,"object":{"type":"Identifier","start":981,"end":988,"name":"element"},"property":{"type":"Identifier","start":989,"end":1009,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1010,"end":1017,"name":"tagName"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1029,"end":1338,"test":{"type":"LogicalExpression","start":1033,"end":1080,"left":{"type":"Identifier","start":1033,"end":1049,"name":"matchingElements"},"operator":"&&","right":{"type":"BinaryExpression","start":1053,"end":1080,"left":{"type":"MemberExpression","start":1053,"end":1076,"object":{"type":"Identifier","start":1053,"end":1069,"name":"matchingElements"},"property":{"type":"Identifier","start":1070,"end":1076,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":1079,"end":1080,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":1082,"end":1338,"body":[{"type":"ForStatement","start":1097,"end":1327,"init":{"type":"VariableDeclaration","start":1102,"end":1111,"declarations":[{"type":"VariableDeclarator","start":1106,"end":1111,"id":{"type":"Identifier","start":1106,"end":1107,"name":"i"},"init":{"type":"Literal","start":1110,"end":1111,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":1113,"end":1140,"left":{"type":"Identifier","start":1113,"end":1114,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":1117,"end":1140,"object":{"type":"Identifier","start":1117,"end":1133,"name":"matchingElements"},"property":{"type":"Identifier","start":1134,"end":1140,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":1142,"end":1145,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":1142,"end":1143,"name":"i"}},"body":{"type":"BlockStatement","start":1147,"end":1327,"body":[{"type":"VariableDeclaration","start":1166,"end":1204,"declarations":[{"type":"VariableDeclarator","start":1172,"end":1203,"id":{"type":"Identifier","start":1172,"end":1176,"name":"node"},"init":{"type":"CallExpression","start":1179,"end":1203,"callee":{"type":"MemberExpression","start":1179,"end":1200,"object":{"type":"Identifier","start":1179,"end":1195,"name":"matchingElements"},"property":{"type":"Identifier","start":1196,"end":1200,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1201,"end":1202,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1222,"end":1312,"test":{"type":"BinaryExpression","start":1226,"end":1256,"left":{"type":"CallExpression","start":1226,"end":1249,"callee":{"type":"MemberExpression","start":1226,"end":1243,"object":{"type":"Identifier","start":1226,"end":1230,"name":"node"},"property":{"type":"Identifier","start":1231,"end":1243,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1244,"end":1248,"value":"id","raw":"'id'"}],"optional":false},"operator":"===","right":{"type":"Identifier","start":1254,"end":1256,"name":"id"}},"consequent":{"type":"BlockStatement","start":1258,"end":1312,"body":[{"type":"ReturnStatement","start":1281,"end":1293,"argument":{"type":"Identifier","start":1288,"end":1292,"name":"node"}}]},"alternate":null}]}}]},"alternate":null},{"type":"ReturnStatement","start":1348,"end":1360,"argument":{"type":"Literal","start":1355,"end":1359,"value":null,"raw":"null"}}]}}},{"type":"MethodDefinition","start":1468,"end":1797,"static":true,"computed":false,"key":{"type":"Identifier","start":1475,"end":1501,"name":"getElementFollowingSibling"},"kind":"method","value":{"type":"FunctionExpression","start":1501,"end":1797,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1502,"end":1509,"name":"element"}],"body":{"type":"BlockStatement","start":1511,"end":1797,"body":[{"type":"IfStatement","start":1522,"end":1574,"test":{"type":"UnaryExpression","start":1526,"end":1534,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":1527,"end":1534,"name":"element"}},"consequent":{"type":"BlockStatement","start":1536,"end":1574,"body":[{"type":"ReturnStatement","start":1551,"end":1563,"argument":{"type":"Literal","start":1558,"end":1562,"value":null,"raw":"null"}}]},"alternate":null},{"type":"VariableDeclaration","start":1584,"end":1612,"declarations":[{"type":"VariableDeclarator","start":1588,"end":1611,"id":{"type":"Identifier","start":1588,"end":1589,"name":"e"},"init":{"type":"MemberExpression","start":1592,"end":1611,"object":{"type":"Identifier","start":1592,"end":1599,"name":"element"},"property":{"type":"Identifier","start":1600,"end":1611,"name":"nextSibling"},"computed":false,"optional":false}}],"kind":"let"},{"type":"WhileStatement","start":1622,"end":1768,"test":{"type":"Identifier","start":1629,"end":1630,"name":"e"},"body":{"type":"BlockStatement","start":1632,"end":1768,"body":[{"type":"IfStatement","start":1647,"end":1725,"test":{"type":"BinaryExpression","start":1651,"end":1680,"left":{"type":"MemberExpression","start":1651,"end":1661,"object":{"type":"Identifier","start":1651,"end":1652,"name":"e"},"property":{"type":"Identifier","start":1653,"end":1661,"name":"nodeType"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":1666,"end":1680,"object":{"type":"Identifier","start":1666,"end":1667,"name":"e"},"property":{"type":"Identifier","start":1668,"end":1680,"name":"ELEMENT_NODE"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":1682,"end":1725,"body":[{"type":"ReturnStatement","start":1701,"end":1710,"argument":{"type":"Identifier","start":1708,"end":1709,"name":"e"}}]},"alternate":null},{"type":"ExpressionStatement","start":1739,"end":1757,"expression":{"type":"AssignmentExpression","start":1739,"end":1756,"operator":"=","left":{"type":"Identifier","start":1739,"end":1740,"name":"e"},"right":{"type":"MemberExpression","start":1743,"end":1756,"object":{"type":"Identifier","start":1743,"end":1744,"name":"e"},"property":{"type":"Identifier","start":1745,"end":1756,"name":"nextSibling"},"computed":false,"optional":false}}}]}},{"type":"ReturnStatement","start":1778,"end":1790,"argument":{"type":"Literal","start":1785,"end":1789,"value":null,"raw":"null"}}]}}},{"type":"MethodDefinition","start":1902,"end":2239,"static":true,"computed":false,"key":{"type":"Identifier","start":1909,"end":1935,"name":"getElementPrecedingSibling"},"kind":"method","value":{"type":"FunctionExpression","start":1935,"end":2239,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1936,"end":1943,"name":"element"}],"body":{"type":"BlockStatement","start":1945,"end":2239,"body":[{"type":"IfStatement","start":1956,"end":2008,"test":{"type":"UnaryExpression","start":1960,"end":1968,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":1961,"end":1968,"name":"element"}},"consequent":{"type":"BlockStatement","start":1970,"end":2008,"body":[{"type":"ReturnStatement","start":1985,"end":1997,"argument":{"type":"Literal","start":1992,"end":1996,"value":null,"raw":"null"}}]},"alternate":null},{"type":"VariableDeclaration","start":2018,"end":2050,"declarations":[{"type":"VariableDeclarator","start":2022,"end":2049,"id":{"type":"Identifier","start":2022,"end":2023,"name":"e"},"init":{"type":"MemberExpression","start":2026,"end":2049,"object":{"type":"Identifier","start":2026,"end":2033,"name":"element"},"property":{"type":"Identifier","start":2034,"end":2049,"name":"previousSibling"},"computed":false,"optional":false}}],"kind":"let"},{"type":"WhileStatement","start":2060,"end":2210,"test":{"type":"Identifier","start":2067,"end":2068,"name":"e"},"body":{"type":"BlockStatement","start":2070,"end":2210,"body":[{"type":"IfStatement","start":2085,"end":2163,"test":{"type":"BinaryExpression","start":2089,"end":2118,"left":{"type":"MemberExpression","start":2089,"end":2099,"object":{"type":"Identifier","start":2089,"end":2090,"name":"e"},"property":{"type":"Identifier","start":2091,"end":2099,"name":"nodeType"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":2104,"end":2118,"object":{"type":"Identifier","start":2104,"end":2105,"name":"e"},"property":{"type":"Identifier","start":2106,"end":2118,"name":"ELEMENT_NODE"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":2120,"end":2163,"body":[{"type":"ReturnStatement","start":2139,"end":2148,"argument":{"type":"Identifier","start":2146,"end":2147,"name":"e"}}]},"alternate":null},{"type":"ExpressionStatement","start":2177,"end":2199,"expression":{"type":"AssignmentExpression","start":2177,"end":2198,"operator":"=","left":{"type":"Identifier","start":2177,"end":2178,"name":"e"},"right":{"type":"MemberExpression","start":2181,"end":2198,"object":{"type":"Identifier","start":2181,"end":2182,"name":"e"},"property":{"type":"Identifier","start":2183,"end":2198,"name":"previousSibling"},"computed":false,"optional":false}}}]}},{"type":"ReturnStatement","start":2220,"end":2232,"argument":{"type":"Literal","start":2227,"end":2231,"value":null,"raw":"null"}}]}}},{"type":"MethodDefinition","start":2429,"end":2900,"static":true,"computed":false,"key":{"type":"Identifier","start":2436,"end":2449,"name":"getXMLContent"},"kind":"method","value":{"type":"FunctionExpression","start":2449,"end":2900,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2450,"end":2457,"name":"element"}],"body":{"type":"BlockStatement","start":2459,"end":2900,"body":[{"type":"IfStatement","start":2470,"end":2522,"test":{"type":"UnaryExpression","start":2474,"end":2482,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":2475,"end":2482,"name":"element"}},"consequent":{"type":"BlockStatement","start":2484,"end":2522,"body":[{"type":"ReturnStatement","start":2499,"end":2511,"argument":{"type":"Literal","start":2506,"end":2510,"value":null,"raw":"null"}}]},"alternate":null},{"type":"VariableDeclaration","start":2532,"end":2592,"declarations":[{"type":"VariableDeclarator","start":2536,"end":2591,"id":{"type":"Identifier","start":2536,"end":2542,"name":"result"},"init":{"type":"CallExpression","start":2545,"end":2591,"callee":{"type":"MemberExpression","start":2545,"end":2582,"object":{"type":"NewExpression","start":2545,"end":2564,"callee":{"type":"Identifier","start":2549,"end":2562,"name":"XMLSerializer"},"arguments":[]},"property":{"type":"Identifier","start":2565,"end":2582,"name":"serializeToString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2583,"end":2590,"name":"element"}],"optional":false}}],"kind":"let"},{"type":"VariableDeclaration","start":2602,"end":2635,"declarations":[{"type":"VariableDeclarator","start":2608,"end":2634,"id":{"type":"Identifier","start":2608,"end":2615,"name":"tagName"},"init":{"type":"MemberExpression","start":2618,"end":2634,"object":{"type":"Identifier","start":2618,"end":2625,"name":"element"},"property":{"type":"Identifier","start":2626,"end":2634,"name":"nodeName"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":2645,"end":2706,"declarations":[{"type":"VariableDeclarator","start":2651,"end":2705,"id":{"type":"Identifier","start":2651,"end":2661,"name":"reStartMsg"},"init":{"type":"NewExpression","start":2664,"end":2705,"callee":{"type":"Identifier","start":2668,"end":2674,"name":"RegExp"},"arguments":[{"type":"BinaryExpression","start":2675,"end":2699,"left":{"type":"BinaryExpression","start":2675,"end":2688,"left":{"type":"Literal","start":2675,"end":2678,"value":"<","raw":"'<'"},"operator":"+","right":{"type":"Identifier","start":2681,"end":2688,"name":"tagName"}},"operator":"+","right":{"type":"Literal","start":2691,"end":2699,"value":"[^>]*>","raw":"'[^>]*>'"}},{"type":"Literal","start":2701,"end":2704,"value":"g","raw":"'g'"}]}}],"kind":"const"},{"type":"ExpressionStatement","start":2716,"end":2756,"expression":{"type":"AssignmentExpression","start":2716,"end":2755,"operator":"=","left":{"type":"Identifier","start":2716,"end":2722,"name":"result"},"right":{"type":"CallExpression","start":2725,"end":2755,"callee":{"type":"MemberExpression","start":2725,"end":2739,"object":{"type":"Identifier","start":2725,"end":2731,"name":"result"},"property":{"type":"Identifier","start":2732,"end":2739,"name":"replace"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2740,"end":2750,"name":"reStartMsg"},{"type":"Literal","start":2752,"end":2754,"value":"","raw":"''"}],"optional":false}}},{"type":"VariableDeclaration","start":2766,"end":2821,"declarations":[{"type":"VariableDeclarator","start":2772,"end":2820,"id":{"type":"Identifier","start":2772,"end":2780,"name":"reEndMsg"},"init":{"type":"NewExpression","start":2783,"end":2820,"callee":{"type":"Identifier","start":2787,"end":2793,"name":"RegExp"},"arguments":[{"type":"BinaryExpression","start":2794,"end":2814,"left":{"type":"BinaryExpression","start":2794,"end":2808,"left":{"type":"Literal","start":2794,"end":2798,"value":"</","raw":"'</'"},"operator":"+","right":{"type":"Identifier","start":2801,"end":2808,"name":"tagName"}},"operator":"+","right":{"type":"Literal","start":2811,"end":2814,"value":">","raw":"'>'"}},{"type":"Literal","start":2816,"end":2819,"value":"g","raw":"'g'"}]}}],"kind":"const"},{"type":"ExpressionStatement","start":2831,"end":2869,"expression":{"type":"AssignmentExpression","start":2831,"end":2868,"operator":"=","left":{"type":"Identifier","start":2831,"end":2837,"name":"result"},"right":{"type":"CallExpression","start":2840,"end":2868,"callee":{"type":"MemberExpression","start":2840,"end":2854,"object":{"type":"Identifier","start":2840,"end":2846,"name":"result"},"property":{"type":"Identifier","start":2847,"end":2854,"name":"replace"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2855,"end":2863,"name":"reEndMsg"},{"type":"Literal","start":2865,"end":2867,"value":"","raw":"''"}],"optional":false}}},{"type":"ReturnStatement","start":2879,"end":2893,"argument":{"type":"Identifier","start":2886,"end":2892,"name":"result"}}]}}},{"type":"MethodDefinition","start":3040,"end":3545,"static":true,"computed":false,"key":{"type":"Identifier","start":3047,"end":3056,"name":"getPCDATA"},"kind":"method","value":{"type":"FunctionExpression","start":3056,"end":3545,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3057,"end":3064,"name":"element"}],"body":{"type":"BlockStatement","start":3066,"end":3545,"body":[{"type":"IfStatement","start":3077,"end":3129,"test":{"type":"UnaryExpression","start":3081,"end":3089,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":3082,"end":3089,"name":"element"}},"consequent":{"type":"BlockStatement","start":3091,"end":3129,"body":[{"type":"ReturnStatement","start":3106,"end":3118,"argument":{"type":"Literal","start":3113,"end":3117,"value":null,"raw":"null"}}]},"alternate":null},{"type":"VariableDeclaration","start":3139,"end":3155,"declarations":[{"type":"VariableDeclarator","start":3143,"end":3154,"id":{"type":"Identifier","start":3143,"end":3149,"name":"result"},"init":{"type":"Literal","start":3152,"end":3154,"value":"","raw":"''"}}],"kind":"let"},{"type":"VariableDeclaration","start":3165,"end":3203,"declarations":[{"type":"VariableDeclarator","start":3171,"end":3202,"id":{"type":"Identifier","start":3171,"end":3181,"name":"childNodes"},"init":{"type":"MemberExpression","start":3184,"end":3202,"object":{"type":"Identifier","start":3184,"end":3191,"name":"element"},"property":{"type":"Identifier","start":3192,"end":3202,"name":"childNodes"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ForStatement","start":3213,"end":3485,"init":{"type":"VariableDeclaration","start":3218,"end":3227,"declarations":[{"type":"VariableDeclarator","start":3222,"end":3227,"id":{"type":"Identifier","start":3222,"end":3223,"name":"i"},"init":{"type":"Literal","start":3226,"end":3227,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":3229,"end":3250,"left":{"type":"Identifier","start":3229,"end":3230,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":3233,"end":3250,"object":{"type":"Identifier","start":3233,"end":3243,"name":"childNodes"},"property":{"type":"Identifier","start":3244,"end":3250,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":3252,"end":3255,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":3252,"end":3253,"name":"i"}},"body":{"type":"BlockStatement","start":3257,"end":3485,"body":[{"type":"VariableDeclaration","start":3272,"end":3305,"declarations":[{"type":"VariableDeclarator","start":3278,"end":3304,"id":{"type":"Identifier","start":3278,"end":3283,"name":"child"},"init":{"type":"CallExpression","start":3286,"end":3304,"callee":{"type":"MemberExpression","start":3286,"end":3301,"object":{"type":"Identifier","start":3286,"end":3296,"name":"childNodes"},"property":{"type":"Identifier","start":3297,"end":3301,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3302,"end":3303,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3319,"end":3474,"test":{"type":"LogicalExpression","start":3323,"end":3404,"left":{"type":"BinaryExpression","start":3323,"end":3357,"left":{"type":"MemberExpression","start":3323,"end":3337,"object":{"type":"Identifier","start":3323,"end":3328,"name":"child"},"property":{"type":"Identifier","start":3329,"end":3337,"name":"nodeType"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":3342,"end":3357,"object":{"type":"Identifier","start":3342,"end":3347,"name":"child"},"property":{"type":"Identifier","start":3348,"end":3357,"name":"TEXT_NODE"},"computed":false,"optional":false}},"operator":"||","right":{"type":"BinaryExpression","start":3361,"end":3404,"left":{"type":"MemberExpression","start":3361,"end":3375,"object":{"type":"Identifier","start":3361,"end":3366,"name":"child"},"property":{"type":"Identifier","start":3367,"end":3375,"name":"nodeType"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":3380,"end":3404,"object":{"type":"Identifier","start":3380,"end":3385,"name":"child"},"property":{"type":"Identifier","start":3386,"end":3404,"name":"CDATA_SECTION_NODE"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":3406,"end":3474,"body":[{"type":"ExpressionStatement","start":3425,"end":3459,"expression":{"type":"AssignmentExpression","start":3425,"end":3458,"operator":"=","left":{"type":"Identifier","start":3425,"end":3431,"name":"result"},"right":{"type":"BinaryExpression","start":3434,"end":3458,"left":{"type":"Identifier","start":3434,"end":3440,"name":"result"},"operator":"+","right":{"type":"MemberExpression","start":3443,"end":3458,"object":{"type":"Identifier","start":3443,"end":3448,"name":"child"},"property":{"type":"Identifier","start":3449,"end":3458,"name":"nodeValue"},"computed":false,"optional":false}}}}]},"alternate":null}]}},{"type":"ReturnStatement","start":3495,"end":3538,"argument":{"type":"ConditionalExpression","start":3502,"end":3537,"test":{"type":"BinaryExpression","start":3502,"end":3521,"left":{"type":"MemberExpression","start":3502,"end":3515,"object":{"type":"Identifier","start":3502,"end":3508,"name":"result"},"property":{"type":"Identifier","start":3509,"end":3515,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":3520,"end":3521,"value":0,"raw":"0"}},"consequent":{"type":"Literal","start":3524,"end":3528,"value":null,"raw":"null"},"alternate":{"type":"Identifier","start":3531,"end":3537,"name":"result"}}}]}}},{"type":"MethodDefinition","start":3676,"end":4329,"static":true,"computed":false,"key":{"type":"Identifier","start":3683,"end":3711,"name":"replaceContentWithXMLContent"},"kind":"method","value":{"type":"FunctionExpression","start":3711,"end":4329,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3712,"end":3719,"name":"element"},{"type":"Identifier","start":3721,"end":3727,"name":"pcdata"}],"body":{"type":"BlockStatement","start":3729,"end":4329,"body":[{"type":"WhileStatement","start":3772,"end":3865,"test":{"type":"MemberExpression","start":3779,"end":3797,"object":{"type":"Identifier","start":3779,"end":3786,"name":"element"},"property":{"type":"Identifier","start":3787,"end":3797,"name":"firstChild"},"computed":false,"optional":false},"body":{"type":"BlockStatement","start":3799,"end":3865,"body":[{"type":"ExpressionStatement","start":3814,"end":3854,"expression":{"type":"CallExpression","start":3814,"end":3853,"callee":{"type":"MemberExpression","start":3814,"end":3833,"object":{"type":"Identifier","start":3814,"end":3821,"name":"element"},"property":{"type":"Identifier","start":3822,"end":3833,"name":"removeChild"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3834,"end":3852,"object":{"type":"Identifier","start":3834,"end":3841,"name":"element"},"property":{"type":"Identifier","start":3842,"end":3852,"name":"firstChild"},"computed":false,"optional":false}],"optional":false}}]}},{"type":"VariableDeclaration","start":3910,"end":4023,"declarations":[{"type":"VariableDeclarator","start":3916,"end":4022,"id":{"type":"Identifier","start":3916,"end":3930,"name":"pcdataFragment"},"init":{"type":"CallExpression","start":3933,"end":4022,"callee":{"type":"MemberExpression","start":3933,"end":3964,"object":{"type":"NewExpression","start":3933,"end":3948,"callee":{"type":"Identifier","start":3937,"end":3946,"name":"DOMParser"},"arguments":[]},"property":{"type":"Identifier","start":3949,"end":3964,"name":"parseFromString"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":3965,"end":4002,"left":{"type":"BinaryExpression","start":3965,"end":3986,"left":{"type":"Literal","start":3965,"end":3977,"value":"<fragment>","raw":"'<fragment>'"},"operator":"+","right":{"type":"Identifier","start":3980,"end":3986,"name":"pcdata"}},"operator":"+","right":{"type":"Literal","start":3989,"end":4002,"value":"</fragment>","raw":"'</fragment>'"}},{"type":"Literal","start":4004,"end":4021,"value":"application/xml","raw":"'application/xml'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":4033,"end":4120,"declarations":[{"type":"VariableDeclarator","start":4039,"end":4119,"id":{"type":"Identifier","start":4039,"end":4050,"name":"newChildren"},"init":{"type":"MemberExpression","start":4053,"end":4119,"object":{"type":"CallExpression","start":4053,"end":4108,"callee":{"type":"MemberExpression","start":4053,"end":4105,"object":{"type":"CallExpression","start":4053,"end":4100,"callee":{"type":"MemberExpression","start":4053,"end":4088,"object":{"type":"Identifier","start":4053,"end":4067,"name":"pcdataFragment"},"property":{"type":"Identifier","start":4068,"end":4088,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4089,"end":4099,"value":"fragment","raw":"'fragment'"}],"optional":false},"property":{"type":"Identifier","start":4101,"end":4105,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4106,"end":4107,"value":0,"raw":"0"}],"optional":false},"property":{"type":"Identifier","start":4109,"end":4119,"name":"childNodes"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ForStatement","start":4130,"end":4322,"init":{"type":"VariableDeclaration","start":4135,"end":4144,"declarations":[{"type":"VariableDeclarator","start":4139,"end":4144,"id":{"type":"Identifier","start":4139,"end":4140,"name":"j"},"init":{"type":"Literal","start":4143,"end":4144,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":4146,"end":4168,"left":{"type":"Identifier","start":4146,"end":4147,"name":"j"},"operator":"<","right":{"type":"MemberExpression","start":4150,"end":4168,"object":{"type":"Identifier","start":4150,"end":4161,"name":"newChildren"},"property":{"type":"Identifier","start":4162,"end":4168,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":4170,"end":4173,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":4170,"end":4171,"name":"j"}},"body":{"type":"BlockStatement","start":4175,"end":4322,"body":[{"type":"VariableDeclaration","start":4190,"end":4227,"declarations":[{"type":"VariableDeclarator","start":4196,"end":4226,"id":{"type":"Identifier","start":4196,"end":4204,"name":"newChild"},"init":{"type":"CallExpression","start":4207,"end":4226,"callee":{"type":"MemberExpression","start":4207,"end":4223,"object":{"type":"Identifier","start":4207,"end":4218,"name":"newChildren"},"property":{"type":"Identifier","start":4219,"end":4223,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4224,"end":4225,"name":"j"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":4241,"end":4311,"expression":{"type":"CallExpression","start":4241,"end":4310,"callee":{"type":"MemberExpression","start":4241,"end":4260,"object":{"type":"Identifier","start":4241,"end":4248,"name":"element"},"property":{"type":"Identifier","start":4249,"end":4260,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":4261,"end":4309,"callee":{"type":"MemberExpression","start":4261,"end":4293,"object":{"type":"MemberExpression","start":4261,"end":4282,"object":{"type":"Identifier","start":4261,"end":4268,"name":"element"},"property":{"type":"Identifier","start":4269,"end":4282,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4283,"end":4293,"name":"importNode"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4294,"end":4302,"name":"newChild"},{"type":"Literal","start":4304,"end":4308,"value":true,"raw":"true"}],"optional":false}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":4503,"end":4807,"static":true,"computed":false,"key":{"type":"Identifier","start":4510,"end":4535,"name":"getPreviousElementSibling"},"kind":"method","value":{"type":"FunctionExpression","start":4535,"end":4807,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4536,"end":4543,"name":"element"}],"body":{"type":"BlockStatement","start":4545,"end":4807,"body":[{"type":"VariableDeclaration","start":4556,"end":4591,"declarations":[{"type":"VariableDeclarator","start":4560,"end":4590,"id":{"type":"Identifier","start":4560,"end":4564,"name":"node"},"init":{"type":"MemberExpression","start":4567,"end":4590,"object":{"type":"Identifier","start":4567,"end":4574,"name":"element"},"property":{"type":"Identifier","start":4575,"end":4590,"name":"previousSibling"},"computed":false,"optional":false}}],"kind":"let"},{"type":"WhileStatement","start":4601,"end":4778,"test":{"type":"BinaryExpression","start":4608,"end":4621,"left":{"type":"Identifier","start":4608,"end":4612,"name":"node"},"operator":"!==","right":{"type":"Literal","start":4617,"end":4621,"value":null,"raw":"null"}},"body":{"type":"BlockStatement","start":4623,"end":4778,"body":[{"type":"IfStatement","start":4638,"end":4725,"test":{"type":"BinaryExpression","start":4642,"end":4677,"left":{"type":"MemberExpression","start":4642,"end":4655,"object":{"type":"Identifier","start":4642,"end":4646,"name":"node"},"property":{"type":"Identifier","start":4647,"end":4655,"name":"nodeType"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":4660,"end":4677,"object":{"type":"Identifier","start":4660,"end":4664,"name":"node"},"property":{"type":"Identifier","start":4665,"end":4677,"name":"ELEMENT_NODE"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":4679,"end":4725,"body":[{"type":"ReturnStatement","start":4698,"end":4710,"argument":{"type":"Identifier","start":4705,"end":4709,"name":"node"}}]},"alternate":null},{"type":"ExpressionStatement","start":4739,"end":4767,"expression":{"type":"AssignmentExpression","start":4739,"end":4766,"operator":"=","left":{"type":"Identifier","start":4739,"end":4743,"name":"node"},"right":{"type":"MemberExpression","start":4746,"end":4766,"object":{"type":"Identifier","start":4746,"end":4750,"name":"node"},"property":{"type":"Identifier","start":4751,"end":4766,"name":"previousSibling"},"computed":false,"optional":false}}}]}},{"type":"ReturnStatement","start":4788,"end":4800,"argument":{"type":"Literal","start":4795,"end":4799,"value":null,"raw":"null"}}]}}},{"type":"MethodDefinition","start":5034,"end":5275,"static":true,"computed":false,"key":{"type":"Identifier","start":5041,"end":5063,"name":"createFollowingSibling"},"kind":"method","value":{"type":"FunctionExpression","start":5063,"end":5275,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5064,"end":5083,"name":"elementNameToCreate"},{"type":"Identifier","start":5085,"end":5100,"name":"previousSibling"}],"body":{"type":"BlockStatement","start":5102,"end":5275,"body":[{"type":"VariableDeclaration","start":5113,"end":5197,"declarations":[{"type":"VariableDeclarator","start":5119,"end":5196,"id":{"type":"Identifier","start":5119,"end":5129,"name":"newElement"},"init":{"type":"CallExpression","start":5132,"end":5196,"callee":{"type":"MemberExpression","start":5132,"end":5175,"object":{"type":"MemberExpression","start":5132,"end":5161,"object":{"type":"Identifier","start":5132,"end":5147,"name":"previousSibling"},"property":{"type":"Identifier","start":5148,"end":5161,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5162,"end":5175,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5176,"end":5195,"name":"elementNameToCreate"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":5207,"end":5268,"argument":{"type":"CallExpression","start":5214,"end":5267,"callee":{"type":"MemberExpression","start":5214,"end":5238,"object":{"type":"Identifier","start":5214,"end":5226,"name":"DOMUtilities"},"property":{"type":"Identifier","start":5227,"end":5238,"name":"insertAfter"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5239,"end":5249,"name":"newElement"},{"type":"Identifier","start":5251,"end":5266,"name":"previousSibling"}],"optional":false}}]}}},{"type":"MethodDefinition","start":5441,"end":5776,"static":true,"computed":false,"key":{"type":"Identifier","start":5448,"end":5459,"name":"insertAfter"},"kind":"method","value":{"type":"FunctionExpression","start":5459,"end":5776,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5460,"end":5470,"name":"newElement"},{"type":"Identifier","start":5472,"end":5487,"name":"previousSibling"}],"body":{"type":"BlockStatement","start":5489,"end":5776,"body":[{"type":"IfStatement","start":5500,"end":5741,"test":{"type":"BinaryExpression","start":5504,"end":5540,"left":{"type":"MemberExpression","start":5504,"end":5531,"object":{"type":"Identifier","start":5504,"end":5519,"name":"previousSibling"},"property":{"type":"Identifier","start":5520,"end":5531,"name":"nextSibling"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Literal","start":5536,"end":5540,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":5542,"end":5649,"body":[{"type":"ExpressionStatement","start":5557,"end":5638,"expression":{"type":"CallExpression","start":5557,"end":5637,"callee":{"type":"MemberExpression","start":5557,"end":5596,"object":{"type":"MemberExpression","start":5557,"end":5583,"object":{"type":"Identifier","start":5557,"end":5572,"name":"previousSibling"},"property":{"type":"Identifier","start":5573,"end":5583,"name":"parentNode"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5584,"end":5596,"name":"insertBefore"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5597,"end":5607,"name":"newElement"},{"type":"MemberExpression","start":5609,"end":5636,"object":{"type":"Identifier","start":5609,"end":5624,"name":"previousSibling"},"property":{"type":"Identifier","start":5625,"end":5636,"name":"nextSibling"},"computed":false,"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":5664,"end":5741,"body":[{"type":"ExpressionStatement","start":5679,"end":5730,"expression":{"type":"CallExpression","start":5679,"end":5729,"callee":{"type":"MemberExpression","start":5679,"end":5717,"object":{"type":"MemberExpression","start":5679,"end":5705,"object":{"type":"Identifier","start":5679,"end":5694,"name":"previousSibling"},"property":{"type":"Identifier","start":5695,"end":5705,"name":"parentNode"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5706,"end":5717,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5718,"end":5728,"name":"newElement"}],"optional":false}}]}},{"type":"ReturnStatement","start":5751,"end":5769,"argument":{"type":"Identifier","start":5758,"end":5768,"name":"newElement"}}]}}},{"type":"MethodDefinition","start":5931,"end":6083,"static":true,"computed":false,"key":{"type":"Identifier","start":5938,"end":5950,"name":"insertBefore"},"kind":"method","value":{"type":"FunctionExpression","start":5950,"end":6083,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5951,"end":5961,"name":"newElement"},{"type":"Identifier","start":5963,"end":5974,"name":"nextSibling"}],"body":{"type":"BlockStatement","start":5976,"end":6083,"body":[{"type":"ExpressionStatement","start":5987,"end":6048,"expression":{"type":"CallExpression","start":5987,"end":6047,"callee":{"type":"MemberExpression","start":5987,"end":6022,"object":{"type":"MemberExpression","start":5987,"end":6009,"object":{"type":"Identifier","start":5987,"end":5998,"name":"nextSibling"},"property":{"type":"Identifier","start":5999,"end":6009,"name":"parentNode"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6010,"end":6022,"name":"insertBefore"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6023,"end":6033,"name":"newElement"},{"type":"Identifier","start":6035,"end":6046,"name":"nextSibling"}],"optional":false}},{"type":"ReturnStatement","start":6058,"end":6076,"argument":{"type":"Identifier","start":6065,"end":6075,"name":"newElement"}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":6088,"end":20814}]},"code":"import { DOMParser, XMLSerializer } from 'xmldom';\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * Some Tool functions for XML Handling.\r\n */\r\nexport class DOMUtilities {\r\n    /**\r\n     * return the first subelement with the given tag.\r\n     * @param element element\r\n     * @param tagName tagName\r\n     * @return subelement or null, if not existing.\r\n     */\r\n    static getFirstElementByTagName(element, tagName) {\r\n        const matchingElements = element.getElementsByTagName(tagName);\r\n        if (matchingElements && matchingElements.length > 0) {\r\n            return matchingElements.item(0);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * return an element with the given tag and id attribute.\r\n     * @param element element\r\n     * @param tagName tagName\r\n     * @param id id\r\n     * @return subelement or null, if not existing.\r\n     */\r\n    static getElementByTagNameAndId(element, tagName, id) {\r\n        const matchingElements = element.getElementsByTagName(tagName);\r\n        if (matchingElements && matchingElements.length > 0) {\r\n            for (let i = 0; i < matchingElements.length; i++) {\r\n                const node = matchingElements.item(i);\r\n                if (node.getAttribute('id') === id) {\r\n                    return node;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Get next sibling, that is an element.\r\n     * @param element element\r\n     */\r\n    static getElementFollowingSibling(element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        let e = element.nextSibling;\r\n        while (e) {\r\n            if (e.nodeType === e.ELEMENT_NODE) {\r\n                return e;\r\n            }\r\n            e = e.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Get previous sibling, that is an element.\r\n     * @param element element\r\n     */\r\n    static getElementPrecedingSibling(element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        let e = element.previousSibling;\r\n        while (e) {\r\n            if (e.nodeType === e.ELEMENT_NODE) {\r\n                return e;\r\n            }\r\n            e = e.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * return content of element as string, including all markup.\r\n     * @param element element\r\n     * @return content of element as string, including all markup.\r\n     */\r\n    static getXMLContent(element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        let result = new XMLSerializer().serializeToString(element);\r\n        const tagName = element.nodeName;\r\n        const reStartMsg = new RegExp('<' + tagName + '[^>]*>', 'g');\r\n        result = result.replace(reStartMsg, '');\r\n        const reEndMsg = new RegExp('</' + tagName + '>', 'g');\r\n        result = result.replace(reEndMsg, '');\r\n        return result;\r\n    }\r\n    /**\r\n     * return PCDATA content of element.\r\n     * @param element element\r\n     * @return PCDATA content of element.\r\n     */\r\n    static getPCDATA(element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        let result = '';\r\n        const childNodes = element.childNodes;\r\n        for (let i = 0; i < childNodes.length; i++) {\r\n            const child = childNodes.item(i);\r\n            if (child.nodeType === child.TEXT_NODE || child.nodeType === child.CDATA_SECTION_NODE) {\r\n                result = result + child.nodeValue;\r\n            }\r\n        }\r\n        return result.length === 0 ? null : result;\r\n    }\r\n    /**\r\n     * replace PCDATA content with a new one.\r\n     * @param element element\r\n     * @param pcdata pcdata\r\n     */\r\n    static replaceContentWithXMLContent(element, pcdata) {\r\n        // remove all children\r\n        while (element.firstChild) {\r\n            element.removeChild(element.firstChild);\r\n        }\r\n        // parseICUMessage pcdata\r\n        const pcdataFragment = new DOMParser().parseFromString('<fragment>' + pcdata + '</fragment>', 'application/xml');\r\n        const newChildren = pcdataFragment.getElementsByTagName('fragment').item(0).childNodes;\r\n        for (let j = 0; j < newChildren.length; j++) {\r\n            const newChild = newChildren.item(j);\r\n            element.appendChild(element.ownerDocument.importNode(newChild, true));\r\n        }\r\n    }\r\n    /**\r\n     * find the previous sibling that is an element.\r\n     * @param element element\r\n     * @return the previous sibling that is an element or null.\r\n     */\r\n    static getPreviousElementSibling(element) {\r\n        let node = element.previousSibling;\r\n        while (node !== null) {\r\n            if (node.nodeType === node.ELEMENT_NODE) {\r\n                return node;\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Create an Element Node that is the next sibling of a given node.\r\n     * @param elementNameToCreate elementNameToCreate\r\n     * @param previousSibling previousSibling\r\n     * @return new element\r\n     */\r\n    static createFollowingSibling(elementNameToCreate, previousSibling) {\r\n        const newElement = previousSibling.ownerDocument.createElement(elementNameToCreate);\r\n        return DOMUtilities.insertAfter(newElement, previousSibling);\r\n    }\r\n    /**\r\n     * Insert newElement directly after previousSibling.\r\n     * @param newElement newElement\r\n     * @param previousSibling previousSibling\r\n     */\r\n    static insertAfter(newElement, previousSibling) {\r\n        if (previousSibling.nextSibling !== null) {\r\n            previousSibling.parentNode.insertBefore(newElement, previousSibling.nextSibling);\r\n        }\r\n        else {\r\n            previousSibling.parentNode.appendChild(newElement);\r\n        }\r\n        return newElement;\r\n    }\r\n    /**\r\n     * Insert newElement directly before nextSibling.\r\n     * @param newElement newElement\r\n     * @param nextSibling nextSibling\r\n     */\r\n    static insertBefore(newElement, nextSibling) {\r\n        nextSibling.parentNode.insertBefore(newElement, nextSibling);\r\n        return newElement;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["xmldom"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { DOMParser, XMLSerializer } from 'xmldom';\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * Some Tool functions for XML Handling.\r\n */\r\nexport class DOMUtilities {\r\n    /**\r\n     * return the first subelement with the given tag.\r\n     * @param element element\r\n     * @param tagName tagName\r\n     * @return subelement or null, if not existing.\r\n     */\r\n    static getFirstElementByTagName(element, tagName) {\r\n        const matchingElements = element.getElementsByTagName(tagName);\r\n        if (matchingElements && matchingElements.length > 0) {\r\n            return matchingElements.item(0);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * return an element with the given tag and id attribute.\r\n     * @param element element\r\n     * @param tagName tagName\r\n     * @param id id\r\n     * @return subelement or null, if not existing.\r\n     */\r\n    static getElementByTagNameAndId(element, tagName, id) {\r\n        const matchingElements = element.getElementsByTagName(tagName);\r\n        if (matchingElements && matchingElements.length > 0) {\r\n            for (let i = 0; i < matchingElements.length; i++) {\r\n                const node = matchingElements.item(i);\r\n                if (node.getAttribute('id') === id) {\r\n                    return node;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Get next sibling, that is an element.\r\n     * @param element element\r\n     */\r\n    static getElementFollowingSibling(element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        let e = element.nextSibling;\r\n        while (e) {\r\n            if (e.nodeType === e.ELEMENT_NODE) {\r\n                return e;\r\n            }\r\n            e = e.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Get previous sibling, that is an element.\r\n     * @param element element\r\n     */\r\n    static getElementPrecedingSibling(element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        let e = element.previousSibling;\r\n        while (e) {\r\n            if (e.nodeType === e.ELEMENT_NODE) {\r\n                return e;\r\n            }\r\n            e = e.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * return content of element as string, including all markup.\r\n     * @param element element\r\n     * @return content of element as string, including all markup.\r\n     */\r\n    static getXMLContent(element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        let result = new XMLSerializer().serializeToString(element);\r\n        const tagName = element.nodeName;\r\n        const reStartMsg = new RegExp('<' + tagName + '[^>]*>', 'g');\r\n        result = result.replace(reStartMsg, '');\r\n        const reEndMsg = new RegExp('</' + tagName + '>', 'g');\r\n        result = result.replace(reEndMsg, '');\r\n        return result;\r\n    }\r\n    /**\r\n     * return PCDATA content of element.\r\n     * @param element element\r\n     * @return PCDATA content of element.\r\n     */\r\n    static getPCDATA(element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        let result = '';\r\n        const childNodes = element.childNodes;\r\n        for (let i = 0; i < childNodes.length; i++) {\r\n            const child = childNodes.item(i);\r\n            if (child.nodeType === child.TEXT_NODE || child.nodeType === child.CDATA_SECTION_NODE) {\r\n                result = result + child.nodeValue;\r\n            }\r\n        }\r\n        return result.length === 0 ? null : result;\r\n    }\r\n    /**\r\n     * replace PCDATA content with a new one.\r\n     * @param element element\r\n     * @param pcdata pcdata\r\n     */\r\n    static replaceContentWithXMLContent(element, pcdata) {\r\n        // remove all children\r\n        while (element.firstChild) {\r\n            element.removeChild(element.firstChild);\r\n        }\r\n        // parseICUMessage pcdata\r\n        const pcdataFragment = new DOMParser().parseFromString('<fragment>' + pcdata + '</fragment>', 'application/xml');\r\n        const newChildren = pcdataFragment.getElementsByTagName('fragment').item(0).childNodes;\r\n        for (let j = 0; j < newChildren.length; j++) {\r\n            const newChild = newChildren.item(j);\r\n            element.appendChild(element.ownerDocument.importNode(newChild, true));\r\n        }\r\n    }\r\n    /**\r\n     * find the previous sibling that is an element.\r\n     * @param element element\r\n     * @return the previous sibling that is an element or null.\r\n     */\r\n    static getPreviousElementSibling(element) {\r\n        let node = element.previousSibling;\r\n        while (node !== null) {\r\n            if (node.nodeType === node.ELEMENT_NODE) {\r\n                return node;\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Create an Element Node that is the next sibling of a given node.\r\n     * @param elementNameToCreate elementNameToCreate\r\n     * @param previousSibling previousSibling\r\n     * @return new element\r\n     */\r\n    static createFollowingSibling(elementNameToCreate, previousSibling) {\r\n        const newElement = previousSibling.ownerDocument.createElement(elementNameToCreate);\r\n        return DOMUtilities.insertAfter(newElement, previousSibling);\r\n    }\r\n    /**\r\n     * Insert newElement directly after previousSibling.\r\n     * @param newElement newElement\r\n     * @param previousSibling previousSibling\r\n     */\r\n    static insertAfter(newElement, previousSibling) {\r\n        if (previousSibling.nextSibling !== null) {\r\n            previousSibling.parentNode.insertBefore(newElement, previousSibling.nextSibling);\r\n        }\r\n        else {\r\n            previousSibling.parentNode.appendChild(newElement);\r\n        }\r\n        return newElement;\r\n    }\r\n    /**\r\n     * Insert newElement directly before nextSibling.\r\n     * @param newElement newElement\r\n     * @param nextSibling nextSibling\r\n     */\r\n    static insertBefore(newElement, nextSibling) {\r\n        nextSibling.parentNode.insertBefore(newElement, nextSibling);\r\n        return newElement;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"dom-utilities.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/dom-utilities.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[18,0,0,17],[20,0,0,19],[33,0,0,32],[35,0,0,33],[41,0,0,39],[49,0,0,47],[50,0,0,48]],[[0,0,1,0]],[],[],[[3,0,4,3]],[[0,0,6,0],[6,0,6,6],[13,0,6,13],[25,0,6,25]],[[4,0,8,4]],[],[],[],[],[[7,0,13,7]],[[4,0,14,11],[10,0,14,17],[11,0,14,18],[35,0,14,42],[36,0,14,43],[43,0,14,70],[45,0,14,72],[52,0,14,87]],[[8,0,15,8],[14,0,15,14],[30,0,15,30],[33,0,15,33],[40,0,15,40],[41,0,15,41],[61,0,15,61],[62,0,15,62],[69,0,15,69],[70,0,15,70],[71,0,15,71]],[[8,0,16,8],[12,0,16,12],[28,0,16,28],[32,0,16,32],[48,0,16,48],[49,0,16,49],[55,0,16,55],[58,0,16,58],[59,0,16,59],[61,0,16,61]],[[12,0,17,12],[19,0,17,19],[35,0,17,35],[36,0,17,36],[40,0,17,40],[41,0,17,41],[42,0,17,42],[43,0,17,43],[44,0,17,44]],[[9,0,18,9]],[[13,0,18,15]],[[12,0,19,12],[19,0,19,19],[23,0,19,23],[24,0,19,24]],[[9,0,20,9]],[[4,0,21,4],[5,0,21,5]],[[4,0,23,4]],[],[],[],[],[],[[7,0,29,7]],[[4,0,30,11],[10,0,30,17],[11,0,30,18],[35,0,30,42],[36,0,30,43],[43,0,30,70],[45,0,30,72],[52,0,30,87],[54,0,30,89],[56,0,30,99]],[[8,0,31,8],[14,0,31,14],[30,0,31,30],[33,0,31,33],[40,0,31,40],[41,0,31,41],[61,0,31,61],[62,0,31,62],[69,0,31,69],[70,0,31,70],[71,0,31,71]],[[8,0,32,8],[12,0,32,12],[28,0,32,28],[32,0,32,32],[48,0,32,48],[49,0,32,49],[55,0,32,55],[58,0,32,58],[59,0,32,59],[61,0,32,61]],[[12,0,33,12],[17,0,33,17],[21,0,33,21],[22,0,33,22],[25,0,33,25],[26,0,33,26],[28,0,33,28],[29,0,33,29],[32,0,33,32],[48,0,33,48],[49,0,33,49],[55,0,33,55],[57,0,33,57],[58,0,33,58],[60,0,33,60],[62,0,33,62]],[[16,0,34,16],[22,0,34,22],[26,0,34,26],[29,0,34,38],[45,0,34,54],[46,0,34,55],[50,0,34,59],[51,0,34,60],[52,0,34,61],[53,0,34,62],[54,0,34,63]],[[16,0,35,16],[20,0,35,20],[24,0,35,24],[25,0,35,25],[37,0,35,37],[38,0,35,38],[42,0,35,42],[43,0,35,43],[48,0,35,48],[50,0,35,50],[52,0,35,52]],[[20,0,36,20],[27,0,36,27],[31,0,36,31],[32,0,36,32]],[[17,0,37,17]],[[13,0,38,13]],[[9,0,39,9]],[[8,0,40,8],[15,0,40,15],[19,0,40,19],[20,0,40,20]],[[4,0,41,4],[5,0,41,5]],[[4,0,43,4]],[],[],[[7,0,46,7]],[[4,0,47,11],[10,0,47,17],[11,0,47,18],[37,0,47,44],[38,0,47,45],[45,0,47,61]],[[8,0,48,8],[12,0,48,12],[13,0,48,13],[20,0,48,20],[22,0,48,22]],[[12,0,49,12],[19,0,49,19],[23,0,49,23],[24,0,49,24]],[[9,0,50,9]],[[8,0,51,8],[12,0,51,12],[13,0,51,13],[16,0,51,16],[23,0,51,23],[24,0,51,24],[35,0,51,35],[36,0,51,36]],[[8,0,52,8],[15,0,52,15],[16,0,52,16],[18,0,52,18]],[[12,0,53,12],[16,0,53,16],[17,0,53,17],[18,0,53,18],[26,0,53,26],[31,0,53,31],[32,0,53,32],[33,0,53,33],[45,0,53,45],[47,0,53,47]],[[16,0,54,16],[23,0,54,33],[24,0,54,34],[25,0,54,35]],[[13,0,55,13]],[[12,0,56,12],[13,0,56,13],[16,0,56,16],[17,0,56,17],[18,0,56,18],[29,0,56,29],[30,0,56,30]],[[9,0,57,9]],[[8,0,58,8],[15,0,58,15],[19,0,58,19],[20,0,58,20]],[[4,0,59,4],[5,0,59,5]],[[4,0,61,4]],[],[],[[7,0,64,7]],[[4,0,65,11],[10,0,65,17],[11,0,65,18],[37,0,65,44],[38,0,65,45],[45,0,65,61]],[[8,0,66,8],[12,0,66,12],[13,0,66,13],[20,0,66,20],[22,0,66,22]],[[12,0,67,12],[19,0,67,19],[23,0,67,23],[24,0,67,24]],[[9,0,68,9]],[[8,0,69,8],[12,0,69,12],[13,0,69,13],[16,0,69,16],[23,0,69,23],[24,0,69,24],[39,0,69,39],[40,0,69,40]],[[8,0,70,8],[15,0,70,15],[16,0,70,16],[18,0,70,18]],[[12,0,71,12],[16,0,71,16],[17,0,71,17],[18,0,71,18],[26,0,71,26],[31,0,71,31],[32,0,71,32],[33,0,71,33],[45,0,71,45],[47,0,71,47]],[[16,0,72,16],[23,0,72,33],[24,0,72,34],[25,0,72,35]],[[13,0,73,13]],[[12,0,74,12],[13,0,74,13],[16,0,74,16],[17,0,74,17],[18,0,74,18],[33,0,74,33],[34,0,74,34]],[[9,0,75,9]],[[8,0,76,8],[15,0,76,15],[19,0,76,19],[20,0,76,20]],[[4,0,77,4],[5,0,77,5]],[[4,0,79,4]],[],[],[],[[7,0,83,7]],[[4,0,84,11],[10,0,84,17],[11,0,84,18],[24,0,84,31],[25,0,84,32],[32,0,84,48]],[[8,0,85,8],[12,0,85,12],[13,0,85,13],[20,0,85,20],[22,0,85,22]],[[12,0,86,12],[19,0,86,19],[23,0,86,23],[24,0,86,24]],[[9,0,87,9]],[[8,0,88,8],[12,0,88,12],[18,0,88,18],[21,0,88,21],[25,0,88,25],[38,0,88,38],[40,0,88,40],[41,0,88,41],[58,0,88,58],[59,0,88,59],[66,0,88,66],[67,0,88,67],[68,0,88,68]],[[8,0,89,8],[14,0,89,14],[21,0,89,21],[24,0,89,24],[31,0,89,31],[32,0,89,32],[40,0,89,40],[41,0,89,41]],[[8,0,90,8],[14,0,90,14],[24,0,90,24],[27,0,90,35],[31,0,90,39],[37,0,90,45],[38,0,90,46],[41,0,90,49],[44,0,90,52],[51,0,90,59],[54,0,90,62],[62,0,90,70],[64,0,90,72],[67,0,90,75],[68,0,90,76],[69,0,90,77]],[[8,0,91,8],[14,0,91,14],[17,0,91,17],[23,0,91,23],[24,0,91,24],[31,0,91,31],[32,0,91,32],[42,0,91,42],[44,0,91,44],[46,0,91,46],[47,0,91,47],[48,0,91,48]],[[8,0,92,8],[14,0,92,14],[22,0,92,22],[25,0,92,33],[29,0,92,37],[35,0,92,43],[36,0,92,44],[40,0,92,48],[43,0,92,51],[50,0,92,58],[53,0,92,61],[56,0,92,64],[58,0,92,66],[61,0,92,69],[62,0,92,70],[63,0,92,71]],[[8,0,93,8],[14,0,93,14],[17,0,93,17],[23,0,93,23],[24,0,93,24],[31,0,93,31],[32,0,93,32],[40,0,93,40],[42,0,93,42],[44,0,93,44],[45,0,93,45],[46,0,93,46]],[[8,0,94,8],[15,0,94,15],[21,0,94,21],[22,0,94,22]],[[4,0,95,4],[5,0,95,5]],[[4,0,97,4]],[],[],[],[[7,0,101,7]],[[4,0,102,11],[10,0,102,17],[11,0,102,18],[20,0,102,27],[21,0,102,28],[28,0,102,44]],[[8,0,103,8],[12,0,103,12],[13,0,103,13],[20,0,103,20],[22,0,103,22]],[[12,0,104,12],[19,0,104,19],[23,0,104,23],[24,0,104,24]],[[9,0,105,9]],[[8,0,106,8],[12,0,106,12],[18,0,106,18],[21,0,106,21],[23,0,106,23],[24,0,106,24]],[[8,0,107,8],[14,0,107,14],[24,0,107,24],[27,0,107,27],[34,0,107,34],[35,0,107,35],[45,0,107,45],[46,0,107,46]],[[8,0,108,8],[13,0,108,13],[17,0,108,17],[18,0,108,18],[21,0,108,21],[22,0,108,22],[24,0,108,24],[25,0,108,25],[28,0,108,28],[38,0,108,38],[39,0,108,39],[45,0,108,45],[47,0,108,47],[48,0,108,48],[50,0,108,50],[52,0,108,52]],[[12,0,109,12],[18,0,109,18],[23,0,109,23],[26,0,109,26],[36,0,109,36],[37,0,109,37],[41,0,109,41],[42,0,109,42],[43,0,109,43],[44,0,109,44],[45,0,109,45]],[[12,0,110,12],[16,0,110,16],[21,0,110,21],[22,0,110,22],[30,0,110,30],[35,0,110,35],[40,0,110,40],[41,0,110,41],[50,0,110,50],[54,0,110,54],[59,0,110,59],[60,0,110,60],[68,0,110,68],[73,0,110,73],[78,0,110,78],[79,0,110,79],[97,0,110,97],[99,0,110,99]],[[16,0,111,16],[22,0,111,22],[25,0,111,25],[31,0,111,31],[34,0,111,34],[39,0,111,39],[40,0,111,40],[49,0,111,49],[50,0,111,50]],[[13,0,112,13]],[[9,0,113,9]],[[8,0,114,8],[15,0,114,15],[21,0,114,21],[22,0,114,22],[28,0,114,28],[33,0,114,33],[34,0,114,34],[35,0,114,35],[36,0,114,36],[37,0,114,37],[41,0,114,41],[42,0,114,42],[43,0,114,43],[44,0,114,44],[50,0,114,50],[51,0,114,51]],[[4,0,115,4],[5,0,115,5]],[[4,0,117,4]],[],[],[],[[7,0,121,7]],[[4,0,122,11],[10,0,122,17],[11,0,122,18],[39,0,122,46],[40,0,122,47],[47,0,122,63],[49,0,122,65],[55,0,122,79]],[[8,0,123,8],[30,0,123,30]],[[8,0,124,8],[15,0,124,15],[22,0,124,22],[23,0,124,23],[33,0,124,33],[35,0,124,35]],[[12,0,125,12],[19,0,125,19],[20,0,125,20],[31,0,125,31],[32,0,125,32],[39,0,125,39],[40,0,125,40],[50,0,125,50],[51,0,125,51],[52,0,125,52]],[[9,0,126,9]],[[8,0,127,8],[33,0,127,33]],[[8,0,128,8],[14,0,128,14],[28,0,128,28],[31,0,128,41],[35,0,128,45],[44,0,128,54],[46,0,128,56],[47,0,128,57],[62,0,128,72],[63,0,128,73],[75,0,128,85],[78,0,128,88],[84,0,128,94],[87,0,128,97],[100,0,128,110],[102,0,128,112],[119,0,128,129],[120,0,128,130],[121,0,128,131]],[[8,0,129,8],[14,0,129,14],[25,0,129,25],[28,0,129,28],[42,0,129,42],[43,0,129,43],[63,0,129,63],[64,0,129,64],[74,0,129,74],[75,0,129,75],[76,0,129,76],[80,0,129,80],[81,0,129,81],[82,0,129,82],[83,0,129,83],[84,0,129,84],[94,0,129,94],[95,0,129,95]],[[8,0,130,8],[13,0,130,13],[17,0,130,17],[18,0,130,18],[21,0,130,21],[22,0,130,22],[24,0,130,24],[25,0,130,25],[28,0,130,28],[39,0,130,39],[40,0,130,40],[46,0,130,46],[48,0,130,48],[49,0,130,49],[51,0,130,51],[53,0,130,53]],[[12,0,131,12],[18,0,131,18],[26,0,131,26],[29,0,131,29],[40,0,131,40],[41,0,131,41],[45,0,131,45],[46,0,131,46],[47,0,131,47],[48,0,131,48],[49,0,131,49]],[[12,0,132,12],[19,0,132,19],[20,0,132,20],[31,0,132,31],[32,0,132,32],[39,0,132,39],[40,0,132,40],[53,0,132,53],[54,0,132,54],[64,0,132,64],[65,0,132,65],[73,0,132,73],[75,0,132,75],[79,0,132,79],[80,0,132,80],[81,0,132,81],[82,0,132,82]],[[9,0,133,9]],[[4,0,134,4],[5,0,134,5]],[[4,0,136,4]],[],[],[],[[7,0,140,7]],[[4,0,141,11],[10,0,141,17],[11,0,141,18],[36,0,141,43],[37,0,141,44],[44,0,141,57]],[[8,0,142,8],[12,0,142,12],[16,0,142,16],[19,0,142,19],[26,0,142,26],[27,0,142,27],[42,0,142,42],[43,0,142,43]],[[8,0,143,8],[15,0,143,15],[19,0,143,19],[24,0,143,24],[28,0,143,28],[30,0,143,30]],[[12,0,144,12],[16,0,144,16],[20,0,144,20],[21,0,144,21],[29,0,144,29],[34,0,144,34],[38,0,144,38],[39,0,144,39],[51,0,144,51],[53,0,144,53]],[[16,0,145,16],[23,0,145,33],[27,0,145,37],[28,0,145,38]],[[13,0,146,13]],[[12,0,147,12],[16,0,147,16],[19,0,147,19],[23,0,147,23],[24,0,147,24],[39,0,147,39],[40,0,147,40]],[[9,0,148,9]],[[8,0,149,8],[15,0,149,15],[19,0,149,19],[20,0,149,20]],[[4,0,150,4],[5,0,150,5]],[[4,0,152,4]],[],[],[],[],[[7,0,157,7]],[[4,0,158,11],[10,0,158,17],[11,0,158,18],[33,0,158,40],[34,0,158,41],[53,0,158,68],[55,0,158,70],[70,0,158,91]],[[8,0,159,8],[14,0,159,14],[24,0,159,24],[27,0,159,27],[42,0,159,42],[43,0,159,43],[56,0,159,56],[57,0,159,57],[70,0,159,70],[71,0,159,71],[90,0,159,90],[91,0,159,91],[92,0,159,92]],[[8,0,160,8],[15,0,160,25],[27,0,160,37],[28,0,160,38],[39,0,160,49],[40,0,160,50],[50,0,160,60],[52,0,160,62],[67,0,160,77],[68,0,160,78],[69,0,160,79]],[[4,0,161,4],[5,0,161,5]],[[4,0,163,4]],[],[],[],[[7,0,167,7]],[[4,0,168,11],[10,0,168,17],[11,0,168,18],[22,0,168,29],[23,0,168,30],[33,0,168,46],[35,0,168,48],[50,0,168,69]],[[8,0,169,8],[12,0,169,12],[27,0,169,27],[28,0,169,28],[39,0,169,39],[44,0,169,44],[48,0,169,48],[50,0,169,50]],[[12,0,170,12],[27,0,170,27],[28,0,170,28],[38,0,170,38],[39,0,170,39],[51,0,170,51],[52,0,170,52],[62,0,170,62],[64,0,170,64],[79,0,170,79],[80,0,170,80],[91,0,170,91],[92,0,170,92],[93,0,170,93]],[[9,0,171,9]],[[13,0,171,15]],[[12,0,172,12],[27,0,172,27],[28,0,172,28],[38,0,172,38],[39,0,172,39],[50,0,172,50],[51,0,172,51],[61,0,172,61],[62,0,172,62],[63,0,172,63]],[[9,0,173,9]],[[8,0,174,8],[15,0,174,15],[25,0,174,25],[26,0,174,26]],[[4,0,175,4],[5,0,175,5]],[[4,0,177,4]],[],[],[],[[7,0,181,7]],[[4,0,182,11],[10,0,182,17],[11,0,182,18],[23,0,182,30],[24,0,182,31],[34,0,182,47],[36,0,182,49],[47,0,182,66]],[[8,0,183,8],[19,0,183,19],[20,0,183,20],[30,0,183,30],[31,0,183,31],[43,0,183,43],[44,0,183,44],[54,0,183,54],[56,0,183,56],[67,0,183,67],[68,0,183,68],[69,0,183,69]],[[8,0,184,8],[15,0,184,15],[25,0,184,25],[26,0,184,26]],[[4,0,185,4],[5,0,185,5]],[[1,0,186,1]]],"sourcesContent":["import {DOMParser, XMLSerializer} from 'xmldom';\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * Some Tool functions for XML Handling.\r\n */\r\n\r\nexport class DOMUtilities {\r\n\r\n    /**\r\n     * return the first subelement with the given tag.\r\n     * @param element element\r\n     * @param tagName tagName\r\n     * @return subelement or null, if not existing.\r\n     */\r\n    public static getFirstElementByTagName(element: Element | Document, tagName: string): Element {\r\n        const matchingElements = element.getElementsByTagName(tagName);\r\n        if (matchingElements && matchingElements.length > 0) {\r\n            return matchingElements.item(0);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * return an element with the given tag and id attribute.\r\n     * @param element element\r\n     * @param tagName tagName\r\n     * @param id id\r\n     * @return subelement or null, if not existing.\r\n     */\r\n    public static getElementByTagNameAndId(element: Element | Document, tagName: string, id: string): Element {\r\n        const matchingElements = element.getElementsByTagName(tagName);\r\n        if (matchingElements && matchingElements.length > 0) {\r\n            for (let i = 0; i < matchingElements.length; i++) {\r\n                const node: Element = matchingElements.item(i);\r\n                if (node.getAttribute('id') === id) {\r\n                    return node;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Get next sibling, that is an element.\r\n     * @param element element\r\n     */\r\n    public static getElementFollowingSibling(element: Element): Element {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        let e = element.nextSibling;\r\n        while (e) {\r\n            if (e.nodeType === e.ELEMENT_NODE) {\r\n                return <Element> e;\r\n            }\r\n            e = e.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Get previous sibling, that is an element.\r\n     * @param element element\r\n     */\r\n    public static getElementPrecedingSibling(element: Element): Element {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        let e = element.previousSibling;\r\n        while (e) {\r\n            if (e.nodeType === e.ELEMENT_NODE) {\r\n                return <Element> e;\r\n            }\r\n            e = e.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * return content of element as string, including all markup.\r\n     * @param element element\r\n     * @return content of element as string, including all markup.\r\n     */\r\n    public static getXMLContent(element: Element): string {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        let result = new XMLSerializer().serializeToString(element);\r\n        const tagName = element.nodeName;\r\n        const reStartMsg: RegExp = new RegExp('<' + tagName + '[^>]*>', 'g');\r\n        result = result.replace(reStartMsg, '');\r\n        const reEndMsg: RegExp = new RegExp('</' + tagName + '>', 'g');\r\n        result = result.replace(reEndMsg, '');\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * return PCDATA content of element.\r\n     * @param element element\r\n     * @return PCDATA content of element.\r\n     */\r\n    public static getPCDATA(element: Element): string {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        let result = '';\r\n        const childNodes = element.childNodes;\r\n        for (let i = 0; i < childNodes.length; i++) {\r\n            const child = childNodes.item(i);\r\n            if (child.nodeType === child.TEXT_NODE || child.nodeType === child.CDATA_SECTION_NODE) {\r\n                result = result + child.nodeValue;\r\n            }\r\n        }\r\n        return result.length === 0 ? null : result;\r\n    }\r\n\r\n    /**\r\n     * replace PCDATA content with a new one.\r\n     * @param element element\r\n     * @param pcdata pcdata\r\n     */\r\n    public static replaceContentWithXMLContent(element: Element, pcdata: string) {\r\n        // remove all children\r\n        while (element.firstChild) {\r\n            element.removeChild(element.firstChild);\r\n        }\r\n        // parseICUMessage pcdata\r\n        const pcdataFragment: Document = new DOMParser().parseFromString('<fragment>' + pcdata + '</fragment>', 'application/xml');\r\n        const newChildren = pcdataFragment.getElementsByTagName('fragment').item(0).childNodes;\r\n        for (let j = 0; j < newChildren.length; j++) {\r\n            const newChild = newChildren.item(j);\r\n            element.appendChild(element.ownerDocument.importNode(newChild, true));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * find the previous sibling that is an element.\r\n     * @param element element\r\n     * @return the previous sibling that is an element or null.\r\n     */\r\n    public static getPreviousElementSibling(element: Node): Element {\r\n        let node = element.previousSibling;\r\n        while (node !== null) {\r\n            if (node.nodeType === node.ELEMENT_NODE) {\r\n                return <Element> node;\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Create an Element Node that is the next sibling of a given node.\r\n     * @param elementNameToCreate elementNameToCreate\r\n     * @param previousSibling previousSibling\r\n     * @return new element\r\n     */\r\n    public static createFollowingSibling(elementNameToCreate: string, previousSibling: Node): Element {\r\n        const newElement = previousSibling.ownerDocument.createElement(elementNameToCreate);\r\n        return <Element> DOMUtilities.insertAfter(newElement, previousSibling);\r\n    }\r\n\r\n    /**\r\n     * Insert newElement directly after previousSibling.\r\n     * @param newElement newElement\r\n     * @param previousSibling previousSibling\r\n     */\r\n    public static insertAfter(newElement: Node, previousSibling: Node): Node {\r\n        if (previousSibling.nextSibling !== null) {\r\n            previousSibling.parentNode.insertBefore(newElement, previousSibling.nextSibling);\r\n        } else {\r\n            previousSibling.parentNode.appendChild(newElement);\r\n        }\r\n        return newElement;\r\n    }\r\n\r\n    /**\r\n     * Insert newElement directly before nextSibling.\r\n     * @param newElement newElement\r\n     * @param nextSibling nextSibling\r\n     */\r\n    public static insertBefore(newElement: Node, nextSibling: Node): Node {\r\n        nextSibling.parentNode.insertBefore(newElement, nextSibling);\r\n        return newElement;\r\n    }\r\n}\r\n"]},"resolvedIds":{"xmldom":{"external":true,"id":"xmldom","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1085,"body":[{"type":"ExportAllDeclaration","start":0,"end":33,"exported":null,"source":{"type":"Literal","start":14,"end":32,"value":"../api/constants","raw":"'../api/constants'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJuYWxhcGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9pbXBsL2ludGVybmFsYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVVBLGNBQWMsa0JBQWtCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMTkuMDMuMjAxNy5cclxuICogSW50ZXJuYWwgQVBJIHVzZWQgYnkgaW1wbC5cclxuICogVGhpcyBkb2VzIG5vdCBpbmNsdWRlIHRoZSBmYWN0b3J5IHRvIGF2b2lkIGNpcmN1bGFyIGRlcGVuZGVuY2llcy5cclxuICovXHJcbmV4cG9ydCB7SVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlfSBmcm9tICcuLi9hcGkvaS10cmFuc2xhdGlvbi1tZXNzYWdlcy1maWxlJztcclxuZXhwb3J0IHtJVHJhbnNVbml0fSBmcm9tICcuLi9hcGkvaS10cmFucy11bml0JztcclxuZXhwb3J0IHtJTm9ybWFsaXplZE1lc3NhZ2UsIFZhbGlkYXRpb25FcnJvcnN9IGZyb20gJy4uL2FwaS9pLW5vcm1hbGl6ZWQtbWVzc2FnZSc7XHJcbmV4cG9ydCB7SUlDVU1lc3NhZ2UsIElJQ1VNZXNzYWdlQ2F0ZWdvcnksIElJQ1VNZXNzYWdlVHJhbnNsYXRpb259IGZyb20gJy4uL2FwaS9pLWljdS1tZXNzYWdlJztcclxuZXhwb3J0IHtJTm90ZX0gZnJvbSAnLi4vYXBpL2ktbm90ZSc7XHJcbmV4cG9ydCAqIGZyb20gJy4uL2FwaS9jb25zdGFudHMnO1xyXG4iXX0=","start":35,"end":1085}]},"code":"export * from '../api/constants';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJuYWxhcGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9pbXBsL2ludGVybmFsYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVVBLGNBQWMsa0JBQWtCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMTkuMDMuMjAxNy5cclxuICogSW50ZXJuYWwgQVBJIHVzZWQgYnkgaW1wbC5cclxuICogVGhpcyBkb2VzIG5vdCBpbmNsdWRlIHRoZSBmYWN0b3J5IHRvIGF2b2lkIGNpcmN1bGFyIGRlcGVuZGVuY2llcy5cclxuICovXHJcbmV4cG9ydCB7SVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlfSBmcm9tICcuLi9hcGkvaS10cmFuc2xhdGlvbi1tZXNzYWdlcy1maWxlJztcclxuZXhwb3J0IHtJVHJhbnNVbml0fSBmcm9tICcuLi9hcGkvaS10cmFucy11bml0JztcclxuZXhwb3J0IHtJTm9ybWFsaXplZE1lc3NhZ2UsIFZhbGlkYXRpb25FcnJvcnN9IGZyb20gJy4uL2FwaS9pLW5vcm1hbGl6ZWQtbWVzc2FnZSc7XHJcbmV4cG9ydCB7SUlDVU1lc3NhZ2UsIElJQ1VNZXNzYWdlQ2F0ZWdvcnksIElJQ1VNZXNzYWdlVHJhbnNsYXRpb259IGZyb20gJy4uL2FwaS9pLWljdS1tZXNzYWdlJztcclxuZXhwb3J0IHtJTm90ZX0gZnJvbSAnLi4vYXBpL2ktbm90ZSc7XHJcbmV4cG9ydCAqIGZyb20gJy4uL2FwaS9jb25zdGFudHMnO1xyXG4iXX0=","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\internalapi.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export * from '../api/constants';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJuYWxhcGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9pbXBsL2ludGVybmFsYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVVBLGNBQWMsa0JBQWtCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMTkuMDMuMjAxNy5cclxuICogSW50ZXJuYWwgQVBJIHVzZWQgYnkgaW1wbC5cclxuICogVGhpcyBkb2VzIG5vdCBpbmNsdWRlIHRoZSBmYWN0b3J5IHRvIGF2b2lkIGNpcmN1bGFyIGRlcGVuZGVuY2llcy5cclxuICovXHJcbmV4cG9ydCB7SVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlfSBmcm9tICcuLi9hcGkvaS10cmFuc2xhdGlvbi1tZXNzYWdlcy1maWxlJztcclxuZXhwb3J0IHtJVHJhbnNVbml0fSBmcm9tICcuLi9hcGkvaS10cmFucy11bml0JztcclxuZXhwb3J0IHtJTm9ybWFsaXplZE1lc3NhZ2UsIFZhbGlkYXRpb25FcnJvcnN9IGZyb20gJy4uL2FwaS9pLW5vcm1hbGl6ZWQtbWVzc2FnZSc7XHJcbmV4cG9ydCB7SUlDVU1lc3NhZ2UsIElJQ1VNZXNzYWdlQ2F0ZWdvcnksIElJQ1VNZXNzYWdlVHJhbnNsYXRpb259IGZyb20gJy4uL2FwaS9pLWljdS1tZXNzYWdlJztcclxuZXhwb3J0IHtJTm90ZX0gZnJvbSAnLi4vYXBpL2ktbm90ZSc7XHJcbmV4cG9ydCAqIGZyb20gJy4uL2FwaS9jb25zdGFudHMnO1xyXG4iXX0=","originalSourcemap":{"version":3,"file":"internalapi.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/internalapi.ts"],"names":[],"mappings":[[[0,0,10,0],[14,0,10,14],[32,0,10,32],[33,0,10,33]]],"sourcesContent":["/**\r\n * Created by martin on 19.03.2017.\r\n * Internal API used by impl.\r\n * This does not include the factory to avoid circular dependencies.\r\n */\r\nexport {ITranslationMessagesFile} from '../api/i-translation-messages-file';\r\nexport {ITransUnit} from '../api/i-trans-unit';\r\nexport {INormalizedMessage, ValidationErrors} from '../api/i-normalized-message';\r\nexport {IICUMessage, IICUMessageCategory, IICUMessageTranslation} from '../api/i-icu-message';\r\nexport {INote} from '../api/i-note';\r\nexport * from '../api/constants';\r\n"]},"resolvedIds":{"../api/constants":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":36609,"body":[{"type":"VariableDeclaration","start":601,"end":636,"declarations":[{"type":"VariableDeclarator","start":607,"end":635,"id":{"type":"Identifier","start":607,"end":628,"name":"DEFAULT_INDENT_STRING"},"init":{"type":"Literal","start":631,"end":635,"value":"  ","raw":"'  '"}}],"kind":"const"},{"type":"ExportNamedDeclaration","start":638,"end":10313,"declaration":{"type":"ClassDeclaration","start":645,"end":10313,"id":{"type":"Identifier","start":651,"end":664,"name":"XmlSerializer"},"superClass":null,"body":{"type":"ClassBody","start":665,"end":10313,"body":[{"type":"MethodDefinition","start":672,"end":694,"static":false,"computed":false,"key":{"type":"Identifier","start":672,"end":683,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":683,"end":694,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":686,"end":694,"body":[]}}},{"type":"MethodDefinition","start":856,"end":1809,"static":false,"computed":false,"key":{"type":"Identifier","start":856,"end":873,"name":"serializeToString"},"kind":"method","value":{"type":"FunctionExpression","start":873,"end":1809,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":874,"end":882,"name":"document"},{"type":"Identifier","start":884,"end":891,"name":"options"}],"body":{"type":"BlockStatement","start":893,"end":1809,"body":[{"type":"VariableDeclaration","start":904,"end":919,"declarations":[{"type":"VariableDeclarator","start":910,"end":918,"id":{"type":"Identifier","start":910,"end":913,"name":"buf"},"init":{"type":"ArrayExpression","start":916,"end":918,"elements":[]}}],"kind":"const"},{"type":"VariableDeclaration","start":929,"end":956,"declarations":[{"type":"VariableDeclarator","start":933,"end":955,"id":{"type":"Identifier","start":933,"end":950,"name":"visibleNamespaces"},"init":{"type":"ArrayExpression","start":953,"end":955,"elements":[]}}],"kind":"let"},{"type":"VariableDeclaration","start":966,"end":1007,"declarations":[{"type":"VariableDeclarator","start":972,"end":1006,"id":{"type":"Identifier","start":972,"end":979,"name":"refNode"},"init":{"type":"MemberExpression","start":982,"end":1006,"object":{"type":"Identifier","start":982,"end":990,"name":"document"},"property":{"type":"Identifier","start":991,"end":1006,"name":"documentElement"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1017,"end":1045,"declarations":[{"type":"VariableDeclarator","start":1021,"end":1044,"id":{"type":"Identifier","start":1021,"end":1027,"name":"prefix"},"init":{"type":"MemberExpression","start":1030,"end":1044,"object":{"type":"Identifier","start":1030,"end":1037,"name":"refNode"},"property":{"type":"Identifier","start":1038,"end":1044,"name":"prefix"},"computed":false,"optional":false}}],"kind":"let"},{"type":"VariableDeclaration","start":1055,"end":1088,"declarations":[{"type":"VariableDeclarator","start":1061,"end":1087,"id":{"type":"Identifier","start":1061,"end":1064,"name":"uri"},"init":{"type":"MemberExpression","start":1067,"end":1087,"object":{"type":"Identifier","start":1067,"end":1074,"name":"refNode"},"property":{"type":"Identifier","start":1075,"end":1087,"name":"namespaceURI"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1098,"end":1399,"test":{"type":"LogicalExpression","start":1102,"end":1123,"left":{"type":"Identifier","start":1102,"end":1105,"name":"uri"},"operator":"&&","right":{"type":"BinaryExpression","start":1109,"end":1123,"left":{"type":"Identifier","start":1109,"end":1115,"name":"prefix"},"operator":"==","right":{"type":"Literal","start":1119,"end":1123,"value":null,"raw":"null"}}},"consequent":{"type":"BlockStatement","start":1125,"end":1399,"body":[{"type":"ExpressionStatement","start":1140,"end":1175,"expression":{"type":"AssignmentExpression","start":1140,"end":1174,"operator":"=","left":{"type":"Identifier","start":1140,"end":1146,"name":"prefix"},"right":{"type":"CallExpression","start":1149,"end":1174,"callee":{"type":"MemberExpression","start":1149,"end":1169,"object":{"type":"Identifier","start":1149,"end":1156,"name":"refNode"},"property":{"type":"Identifier","start":1157,"end":1169,"name":"lookupPrefix"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1170,"end":1173,"name":"uri"}],"optional":false}}},{"type":"IfStatement","start":1189,"end":1388,"test":{"type":"BinaryExpression","start":1193,"end":1207,"left":{"type":"Identifier","start":1193,"end":1199,"name":"prefix"},"operator":"==","right":{"type":"Literal","start":1203,"end":1207,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":1209,"end":1388,"body":[{"type":"ExpressionStatement","start":1228,"end":1373,"expression":{"type":"AssignmentExpression","start":1228,"end":1372,"operator":"=","left":{"type":"Identifier","start":1228,"end":1245,"name":"visibleNamespaces"},"right":{"type":"ArrayExpression","start":1248,"end":1372,"elements":[{"type":"ObjectExpression","start":1271,"end":1303,"properties":[{"type":"Property","start":1273,"end":1287,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1273,"end":1282,"name":"namespace"},"value":{"type":"Identifier","start":1284,"end":1287,"name":"uri"},"kind":"init"},{"type":"Property","start":1289,"end":1301,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1289,"end":1295,"name":"prefix"},"value":{"type":"Literal","start":1297,"end":1301,"value":null,"raw":"null"},"kind":"init"}]}]}}}]},"alternate":null}]},"alternate":null},{"type":"IfStatement","start":1409,"end":1462,"test":{"type":"UnaryExpression","start":1413,"end":1421,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":1414,"end":1421,"name":"options"}},"consequent":{"type":"BlockStatement","start":1423,"end":1462,"body":[{"type":"ExpressionStatement","start":1438,"end":1451,"expression":{"type":"AssignmentExpression","start":1438,"end":1450,"operator":"=","left":{"type":"Identifier","start":1438,"end":1445,"name":"options"},"right":{"type":"ObjectExpression","start":1448,"end":1450,"properties":[]}}}]},"alternate":null},{"type":"IfStatement","start":1472,"end":1684,"test":{"type":"MemberExpression","start":1476,"end":1496,"object":{"type":"Identifier","start":1476,"end":1483,"name":"options"},"property":{"type":"Identifier","start":1484,"end":1496,"name":"indentString"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":1498,"end":1684,"body":[{"type":"IfStatement","start":1513,"end":1673,"test":{"type":"UnaryExpression","start":1517,"end":1567,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":1518,"end":1567,"callee":{"type":"MemberExpression","start":1518,"end":1545,"object":{"type":"ThisExpression","start":1518,"end":1522},"property":{"type":"Identifier","start":1523,"end":1545,"name":"containsOnlyWhiteSpace"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":1546,"end":1566,"object":{"type":"Identifier","start":1546,"end":1553,"name":"options"},"property":{"type":"Identifier","start":1554,"end":1566,"name":"indentString"},"computed":false,"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":1569,"end":1673,"body":[{"type":"ThrowStatement","start":1588,"end":1658,"argument":{"type":"NewExpression","start":1594,"end":1657,"callee":{"type":"Identifier","start":1598,"end":1603,"name":"Error"},"arguments":[{"type":"Literal","start":1604,"end":1656,"value":"indentString must not contain non white characters","raw":"'indentString must not contain non white characters'"}]}}]},"alternate":null}]},"alternate":null},{"type":"ExpressionStatement","start":1694,"end":1772,"expression":{"type":"CallExpression","start":1694,"end":1771,"callee":{"type":"MemberExpression","start":1694,"end":1718,"object":{"type":"ThisExpression","start":1694,"end":1698},"property":{"type":"Identifier","start":1699,"end":1718,"name":"doSerializeToString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1719,"end":1727,"name":"document"},{"type":"Identifier","start":1729,"end":1736,"name":"options"},{"type":"Identifier","start":1738,"end":1741,"name":"buf"},{"type":"Literal","start":1743,"end":1744,"value":0,"raw":"0"},{"type":"Literal","start":1746,"end":1751,"value":false,"raw":"false"},{"type":"Identifier","start":1753,"end":1770,"name":"visibleNamespaces"}],"optional":false}},{"type":"ReturnStatement","start":1782,"end":1802,"argument":{"type":"CallExpression","start":1789,"end":1801,"callee":{"type":"MemberExpression","start":1789,"end":1797,"object":{"type":"Identifier","start":1789,"end":1792,"name":"buf"},"property":{"type":"Identifier","start":1793,"end":1797,"name":"join"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1798,"end":1800,"value":"","raw":"''"}],"optional":false}}]}}},{"type":"MethodDefinition","start":2306,"end":8121,"static":false,"computed":false,"key":{"type":"Identifier","start":2306,"end":2325,"name":"doSerializeToString"},"kind":"method","value":{"type":"FunctionExpression","start":2325,"end":8121,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2326,"end":2330,"name":"node"},{"type":"Identifier","start":2332,"end":2339,"name":"options"},{"type":"Identifier","start":2341,"end":2344,"name":"buf"},{"type":"Identifier","start":2346,"end":2357,"name":"indentLevel"},{"type":"Identifier","start":2359,"end":2377,"name":"partOfMixedContent"},{"type":"Identifier","start":2379,"end":2396,"name":"visibleNamespaces"}],"body":{"type":"BlockStatement","start":2398,"end":8121,"body":[{"type":"VariableDeclaration","start":2409,"end":2419,"declarations":[{"type":"VariableDeclarator","start":2413,"end":2418,"id":{"type":"Identifier","start":2413,"end":2418,"name":"child"},"init":null}],"kind":"let"},{"type":"SwitchStatement","start":2429,"end":8114,"discriminant":{"type":"MemberExpression","start":2437,"end":2450,"object":{"type":"Identifier","start":2437,"end":2441,"name":"node"},"property":{"type":"Identifier","start":2442,"end":2450,"name":"nodeType"},"computed":false,"optional":false},"cases":[{"type":"SwitchCase","start":2467,"end":5739,"consequent":[{"type":"VariableDeclaration","start":2508,"end":2533,"declarations":[{"type":"VariableDeclarator","start":2514,"end":2532,"id":{"type":"Identifier","start":2514,"end":2525,"name":"elementNode"},"init":{"type":"Identifier","start":2528,"end":2532,"name":"node"}}],"kind":"const"},{"type":"VariableDeclaration","start":2551,"end":2588,"declarations":[{"type":"VariableDeclarator","start":2557,"end":2587,"id":{"type":"Identifier","start":2557,"end":2562,"name":"attrs"},"init":{"type":"MemberExpression","start":2565,"end":2587,"object":{"type":"Identifier","start":2565,"end":2576,"name":"elementNode"},"property":{"type":"Identifier","start":2577,"end":2587,"name":"attributes"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":2606,"end":2631,"declarations":[{"type":"VariableDeclarator","start":2612,"end":2630,"id":{"type":"Identifier","start":2612,"end":2615,"name":"len"},"init":{"type":"MemberExpression","start":2618,"end":2630,"object":{"type":"Identifier","start":2618,"end":2623,"name":"attrs"},"property":{"type":"Identifier","start":2624,"end":2630,"name":"length"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":2649,"end":2680,"expression":{"type":"AssignmentExpression","start":2649,"end":2679,"operator":"=","left":{"type":"Identifier","start":2649,"end":2654,"name":"child"},"right":{"type":"MemberExpression","start":2657,"end":2679,"object":{"type":"Identifier","start":2657,"end":2668,"name":"elementNode"},"property":{"type":"Identifier","start":2669,"end":2679,"name":"firstChild"},"computed":false,"optional":false}}},{"type":"VariableDeclaration","start":2698,"end":2735,"declarations":[{"type":"VariableDeclarator","start":2704,"end":2734,"id":{"type":"Identifier","start":2704,"end":2712,"name":"nodeName"},"init":{"type":"MemberExpression","start":2715,"end":2734,"object":{"type":"Identifier","start":2715,"end":2726,"name":"elementNode"},"property":{"type":"Identifier","start":2727,"end":2734,"name":"tagName"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":2753,"end":2830,"declarations":[{"type":"VariableDeclarator","start":2759,"end":2829,"id":{"type":"Identifier","start":2759,"end":2781,"name":"elementHasMixedContent"},"init":{"type":"CallExpression","start":2784,"end":2829,"callee":{"type":"MemberExpression","start":2784,"end":2810,"object":{"type":"ThisExpression","start":2784,"end":2788},"property":{"type":"Identifier","start":2789,"end":2810,"name":"isMixedContentElement"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2811,"end":2819,"name":"nodeName"},{"type":"Identifier","start":2821,"end":2828,"name":"options"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":2848,"end":3065,"test":{"type":"Identifier","start":2852,"end":2870,"name":"partOfMixedContent"},"consequent":{"type":"BlockStatement","start":2872,"end":2938,"body":[{"type":"ExpressionStatement","start":2895,"end":2919,"expression":{"type":"CallExpression","start":2895,"end":2918,"callee":{"type":"MemberExpression","start":2895,"end":2903,"object":{"type":"Identifier","start":2895,"end":2898,"name":"buf"},"property":{"type":"Identifier","start":2899,"end":2903,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2904,"end":2907,"value":"<","raw":"'<'"},{"type":"Identifier","start":2909,"end":2917,"name":"nodeName"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":2961,"end":3065,"body":[{"type":"ExpressionStatement","start":2984,"end":3046,"expression":{"type":"CallExpression","start":2984,"end":3045,"callee":{"type":"MemberExpression","start":2984,"end":3003,"object":{"type":"ThisExpression","start":2984,"end":2988},"property":{"type":"Identifier","start":2989,"end":3003,"name":"outputIndented"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3004,"end":3011,"name":"options"},{"type":"Identifier","start":3013,"end":3016,"name":"buf"},{"type":"Identifier","start":3018,"end":3029,"name":"indentLevel"},{"type":"Literal","start":3031,"end":3034,"value":"<","raw":"'<'"},{"type":"Identifier","start":3036,"end":3044,"name":"nodeName"}],"optional":false}}]}},{"type":"ForStatement","start":3083,"end":3581,"init":{"type":"VariableDeclaration","start":3088,"end":3097,"declarations":[{"type":"VariableDeclarator","start":3092,"end":3097,"id":{"type":"Identifier","start":3092,"end":3093,"name":"i"},"init":{"type":"Literal","start":3096,"end":3097,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":3099,"end":3106,"left":{"type":"Identifier","start":3099,"end":3100,"name":"i"},"operator":"<","right":{"type":"Identifier","start":3103,"end":3106,"name":"len"}},"update":{"type":"UpdateExpression","start":3108,"end":3111,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":3108,"end":3109,"name":"i"}},"body":{"type":"BlockStatement","start":3113,"end":3581,"body":[{"type":"VariableDeclaration","start":3190,"end":3217,"declarations":[{"type":"VariableDeclarator","start":3196,"end":3216,"id":{"type":"Identifier","start":3196,"end":3200,"name":"attr"},"init":{"type":"CallExpression","start":3203,"end":3216,"callee":{"type":"MemberExpression","start":3203,"end":3213,"object":{"type":"Identifier","start":3203,"end":3208,"name":"attrs"},"property":{"type":"Identifier","start":3209,"end":3213,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3214,"end":3215,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3239,"end":3562,"test":{"type":"BinaryExpression","start":3243,"end":3266,"left":{"type":"MemberExpression","start":3243,"end":3254,"object":{"type":"Identifier","start":3243,"end":3247,"name":"attr"},"property":{"type":"Identifier","start":3248,"end":3254,"name":"prefix"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":3259,"end":3266,"value":"xmlns","raw":"'xmlns'"}},"consequent":{"type":"BlockStatement","start":3268,"end":3392,"body":[{"type":"ExpressionStatement","start":3295,"end":3369,"expression":{"type":"CallExpression","start":3295,"end":3368,"callee":{"type":"MemberExpression","start":3295,"end":3317,"object":{"type":"Identifier","start":3295,"end":3312,"name":"visibleNamespaces"},"property":{"type":"Identifier","start":3313,"end":3317,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":3318,"end":3367,"properties":[{"type":"Property","start":3320,"end":3342,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":3320,"end":3326,"name":"prefix"},"value":{"type":"MemberExpression","start":3328,"end":3342,"object":{"type":"Identifier","start":3328,"end":3332,"name":"attr"},"property":{"type":"Identifier","start":3333,"end":3342,"name":"localName"},"computed":false,"optional":false},"kind":"init"},{"type":"Property","start":3344,"end":3365,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":3344,"end":3353,"name":"namespace"},"value":{"type":"MemberExpression","start":3355,"end":3365,"object":{"type":"Identifier","start":3355,"end":3359,"name":"attr"},"property":{"type":"Identifier","start":3360,"end":3365,"name":"value"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}]},"alternate":{"type":"IfStatement","start":3419,"end":3562,"test":{"type":"BinaryExpression","start":3423,"end":3448,"left":{"type":"MemberExpression","start":3423,"end":3436,"object":{"type":"Identifier","start":3423,"end":3427,"name":"attr"},"property":{"type":"Identifier","start":3428,"end":3436,"name":"nodeName"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":3441,"end":3448,"value":"xmlns","raw":"'xmlns'"}},"consequent":{"type":"BlockStatement","start":3450,"end":3562,"body":[{"type":"ExpressionStatement","start":3477,"end":3539,"expression":{"type":"CallExpression","start":3477,"end":3538,"callee":{"type":"MemberExpression","start":3477,"end":3499,"object":{"type":"Identifier","start":3477,"end":3494,"name":"visibleNamespaces"},"property":{"type":"Identifier","start":3495,"end":3499,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":3500,"end":3537,"properties":[{"type":"Property","start":3502,"end":3512,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":3502,"end":3508,"name":"prefix"},"value":{"type":"Literal","start":3510,"end":3512,"value":"","raw":"''"},"kind":"init"},{"type":"Property","start":3514,"end":3535,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":3514,"end":3523,"name":"namespace"},"value":{"type":"MemberExpression","start":3525,"end":3535,"object":{"type":"Identifier","start":3525,"end":3529,"name":"attr"},"property":{"type":"Identifier","start":3530,"end":3535,"name":"value"},"computed":false,"optional":false},"kind":"init"}]}],"optional":false}}]},"alternate":null}}]}},{"type":"ForStatement","start":3599,"end":4236,"init":{"type":"VariableDeclaration","start":3604,"end":3613,"declarations":[{"type":"VariableDeclarator","start":3608,"end":3613,"id":{"type":"Identifier","start":3608,"end":3609,"name":"i"},"init":{"type":"Literal","start":3612,"end":3613,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":3615,"end":3622,"left":{"type":"Identifier","start":3615,"end":3616,"name":"i"},"operator":"<","right":{"type":"Identifier","start":3619,"end":3622,"name":"len"}},"update":{"type":"UpdateExpression","start":3624,"end":3627,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":3624,"end":3625,"name":"i"}},"body":{"type":"BlockStatement","start":3629,"end":4236,"body":[{"type":"VariableDeclaration","start":3652,"end":3679,"declarations":[{"type":"VariableDeclarator","start":3658,"end":3678,"id":{"type":"Identifier","start":3658,"end":3662,"name":"attr"},"init":{"type":"CallExpression","start":3665,"end":3678,"callee":{"type":"MemberExpression","start":3665,"end":3675,"object":{"type":"Identifier","start":3665,"end":3670,"name":"attrs"},"property":{"type":"Identifier","start":3671,"end":3675,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3676,"end":3677,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3701,"end":4111,"test":{"type":"CallExpression","start":3705,"end":3754,"callee":{"type":"MemberExpression","start":3705,"end":3729,"object":{"type":"ThisExpression","start":3705,"end":3709},"property":{"type":"Identifier","start":3710,"end":3729,"name":"needNamespaceDefine"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3730,"end":3734,"name":"attr"},{"type":"Identifier","start":3736,"end":3753,"name":"visibleNamespaces"}],"optional":false},"consequent":{"type":"BlockStatement","start":3756,"end":4111,"body":[{"type":"VariableDeclaration","start":3783,"end":3816,"declarations":[{"type":"VariableDeclarator","start":3789,"end":3815,"id":{"type":"Identifier","start":3789,"end":3795,"name":"prefix"},"init":{"type":"LogicalExpression","start":3798,"end":3815,"left":{"type":"MemberExpression","start":3798,"end":3809,"object":{"type":"Identifier","start":3798,"end":3802,"name":"attr"},"property":{"type":"Identifier","start":3803,"end":3809,"name":"prefix"},"computed":false,"optional":false},"operator":"||","right":{"type":"Literal","start":3813,"end":3815,"value":"","raw":"''"}}}],"kind":"const"},{"type":"VariableDeclaration","start":3842,"end":3872,"declarations":[{"type":"VariableDeclarator","start":3848,"end":3871,"id":{"type":"Identifier","start":3848,"end":3851,"name":"uri"},"init":{"type":"MemberExpression","start":3854,"end":3871,"object":{"type":"Identifier","start":3854,"end":3858,"name":"attr"},"property":{"type":"Identifier","start":3859,"end":3871,"name":"namespaceURI"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":3898,"end":3948,"declarations":[{"type":"VariableDeclarator","start":3904,"end":3947,"id":{"type":"Identifier","start":3904,"end":3906,"name":"ns"},"init":{"type":"ConditionalExpression","start":3909,"end":3947,"test":{"type":"Identifier","start":3909,"end":3915,"name":"prefix"},"consequent":{"type":"BinaryExpression","start":3918,"end":3936,"left":{"type":"Literal","start":3918,"end":3927,"value":" xmlns:","raw":"' xmlns:'"},"operator":"+","right":{"type":"Identifier","start":3930,"end":3936,"name":"prefix"}},"alternate":{"type":"Literal","start":3939,"end":3947,"value":" xmlns","raw":"' xmlns'"}}}],"kind":"const"},{"type":"ExpressionStatement","start":3974,"end":4003,"expression":{"type":"CallExpression","start":3974,"end":4002,"callee":{"type":"MemberExpression","start":3974,"end":3982,"object":{"type":"Identifier","start":3974,"end":3977,"name":"buf"},"property":{"type":"Identifier","start":3978,"end":3982,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3983,"end":3985,"name":"ns"},{"type":"Literal","start":3987,"end":3991,"value":"=\"","raw":"'=\"'"},{"type":"Identifier","start":3993,"end":3996,"name":"uri"},{"type":"Literal","start":3998,"end":4001,"value":"\"","raw":"'\"'"}],"optional":false}},{"type":"ExpressionStatement","start":4029,"end":4088,"expression":{"type":"CallExpression","start":4029,"end":4087,"callee":{"type":"MemberExpression","start":4029,"end":4051,"object":{"type":"Identifier","start":4029,"end":4046,"name":"visibleNamespaces"},"property":{"type":"Identifier","start":4047,"end":4051,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":4052,"end":4086,"properties":[{"type":"Property","start":4054,"end":4068,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":4054,"end":4060,"name":"prefix"},"value":{"type":"Identifier","start":4062,"end":4068,"name":"prefix"},"kind":"init"},{"type":"Property","start":4070,"end":4084,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":4070,"end":4079,"name":"namespace"},"value":{"type":"Identifier","start":4081,"end":4084,"name":"uri"},"kind":"init"}]}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":4133,"end":4217,"expression":{"type":"CallExpression","start":4133,"end":4216,"callee":{"type":"MemberExpression","start":4133,"end":4157,"object":{"type":"ThisExpression","start":4133,"end":4137},"property":{"type":"Identifier","start":4138,"end":4157,"name":"doSerializeToString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4158,"end":4162,"name":"attr"},{"type":"Identifier","start":4164,"end":4171,"name":"options"},{"type":"Identifier","start":4173,"end":4176,"name":"buf"},{"type":"Identifier","start":4178,"end":4189,"name":"indentLevel"},{"type":"Literal","start":4191,"end":4196,"value":false,"raw":"false"},{"type":"Identifier","start":4198,"end":4215,"name":"visibleNamespaces"}],"optional":false}}]}},{"type":"IfStatement","start":4305,"end":4712,"test":{"type":"CallExpression","start":4309,"end":4365,"callee":{"type":"MemberExpression","start":4309,"end":4333,"object":{"type":"ThisExpression","start":4309,"end":4313},"property":{"type":"Identifier","start":4314,"end":4333,"name":"needNamespaceDefine"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4334,"end":4345,"name":"elementNode"},{"type":"Identifier","start":4347,"end":4364,"name":"visibleNamespaces"}],"optional":false},"consequent":{"type":"BlockStatement","start":4367,"end":4712,"body":[{"type":"VariableDeclaration","start":4390,"end":4430,"declarations":[{"type":"VariableDeclarator","start":4396,"end":4429,"id":{"type":"Identifier","start":4396,"end":4402,"name":"prefix"},"init":{"type":"LogicalExpression","start":4405,"end":4429,"left":{"type":"MemberExpression","start":4405,"end":4423,"object":{"type":"Identifier","start":4405,"end":4416,"name":"elementNode"},"property":{"type":"Identifier","start":4417,"end":4423,"name":"prefix"},"computed":false,"optional":false},"operator":"||","right":{"type":"Literal","start":4427,"end":4429,"value":"","raw":"''"}}}],"kind":"const"},{"type":"VariableDeclaration","start":4452,"end":4489,"declarations":[{"type":"VariableDeclarator","start":4458,"end":4488,"id":{"type":"Identifier","start":4458,"end":4461,"name":"uri"},"init":{"type":"MemberExpression","start":4464,"end":4488,"object":{"type":"Identifier","start":4464,"end":4475,"name":"elementNode"},"property":{"type":"Identifier","start":4476,"end":4488,"name":"namespaceURI"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":4511,"end":4561,"declarations":[{"type":"VariableDeclarator","start":4517,"end":4560,"id":{"type":"Identifier","start":4517,"end":4519,"name":"ns"},"init":{"type":"ConditionalExpression","start":4522,"end":4560,"test":{"type":"Identifier","start":4522,"end":4528,"name":"prefix"},"consequent":{"type":"BinaryExpression","start":4531,"end":4549,"left":{"type":"Literal","start":4531,"end":4540,"value":" xmlns:","raw":"' xmlns:'"},"operator":"+","right":{"type":"Identifier","start":4543,"end":4549,"name":"prefix"}},"alternate":{"type":"Literal","start":4552,"end":4560,"value":" xmlns","raw":"' xmlns'"}}}],"kind":"const"},{"type":"ExpressionStatement","start":4583,"end":4612,"expression":{"type":"CallExpression","start":4583,"end":4611,"callee":{"type":"MemberExpression","start":4583,"end":4591,"object":{"type":"Identifier","start":4583,"end":4586,"name":"buf"},"property":{"type":"Identifier","start":4587,"end":4591,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4592,"end":4594,"name":"ns"},{"type":"Literal","start":4596,"end":4600,"value":"=\"","raw":"'=\"'"},{"type":"Identifier","start":4602,"end":4605,"name":"uri"},{"type":"Literal","start":4607,"end":4610,"value":"\"","raw":"'\"'"}],"optional":false}},{"type":"ExpressionStatement","start":4634,"end":4693,"expression":{"type":"CallExpression","start":4634,"end":4692,"callee":{"type":"MemberExpression","start":4634,"end":4656,"object":{"type":"Identifier","start":4634,"end":4651,"name":"visibleNamespaces"},"property":{"type":"Identifier","start":4652,"end":4656,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":4657,"end":4691,"properties":[{"type":"Property","start":4659,"end":4673,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":4659,"end":4665,"name":"prefix"},"value":{"type":"Identifier","start":4667,"end":4673,"name":"prefix"},"kind":"init"},{"type":"Property","start":4675,"end":4689,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":4675,"end":4684,"name":"namespace"},"value":{"type":"Identifier","start":4686,"end":4689,"name":"uri"},"kind":"init"}]}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":4730,"end":5714,"test":{"type":"Identifier","start":4734,"end":4739,"name":"child"},"consequent":{"type":"BlockStatement","start":4741,"end":5634,"body":[{"type":"ExpressionStatement","start":4764,"end":4778,"expression":{"type":"CallExpression","start":4764,"end":4777,"callee":{"type":"MemberExpression","start":4764,"end":4772,"object":{"type":"Identifier","start":4764,"end":4767,"name":"buf"},"property":{"type":"Identifier","start":4768,"end":4772,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4773,"end":4776,"value":">","raw":"'>'"}],"optional":false}},{"type":"VariableDeclaration","start":4847,"end":4877,"declarations":[{"type":"VariableDeclarator","start":4851,"end":4876,"id":{"type":"Identifier","start":4851,"end":4868,"name":"hasComplexContent"},"init":{"type":"Literal","start":4871,"end":4876,"value":false,"raw":"false"}}],"kind":"let"},{"type":"WhileStatement","start":4899,"end":5295,"test":{"type":"Identifier","start":4906,"end":4911,"name":"child"},"body":{"type":"BlockStatement","start":4913,"end":5295,"body":[{"type":"IfStatement","start":4940,"end":5066,"test":{"type":"BinaryExpression","start":4944,"end":4981,"left":{"type":"MemberExpression","start":4944,"end":4958,"object":{"type":"Identifier","start":4944,"end":4949,"name":"child"},"property":{"type":"Identifier","start":4950,"end":4958,"name":"nodeType"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":4963,"end":4981,"object":{"type":"Identifier","start":4963,"end":4968,"name":"child"},"property":{"type":"Identifier","start":4969,"end":4981,"name":"ELEMENT_NODE"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":4983,"end":5066,"body":[{"type":"ExpressionStatement","start":5014,"end":5039,"expression":{"type":"AssignmentExpression","start":5014,"end":5038,"operator":"=","left":{"type":"Identifier","start":5014,"end":5031,"name":"hasComplexContent"},"right":{"type":"Literal","start":5034,"end":5038,"value":true,"raw":"true"}}}]},"alternate":null},{"type":"ExpressionStatement","start":5092,"end":5220,"expression":{"type":"CallExpression","start":5092,"end":5219,"callee":{"type":"MemberExpression","start":5092,"end":5116,"object":{"type":"ThisExpression","start":5092,"end":5096},"property":{"type":"Identifier","start":5097,"end":5116,"name":"doSerializeToString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5117,"end":5122,"name":"child"},{"type":"Identifier","start":5124,"end":5131,"name":"options"},{"type":"Identifier","start":5133,"end":5136,"name":"buf"},{"type":"BinaryExpression","start":5138,"end":5153,"left":{"type":"Identifier","start":5138,"end":5149,"name":"indentLevel"},"operator":"+","right":{"type":"Literal","start":5152,"end":5153,"value":1,"raw":"1"}},{"type":"LogicalExpression","start":5155,"end":5199,"left":{"type":"Identifier","start":5155,"end":5173,"name":"partOfMixedContent"},"operator":"||","right":{"type":"Identifier","start":5177,"end":5199,"name":"elementHasMixedContent"}},{"type":"Identifier","start":5201,"end":5218,"name":"visibleNamespaces"}],"optional":false}},{"type":"ExpressionStatement","start":5246,"end":5272,"expression":{"type":"AssignmentExpression","start":5246,"end":5271,"operator":"=","left":{"type":"Identifier","start":5246,"end":5251,"name":"child"},"right":{"type":"MemberExpression","start":5254,"end":5271,"object":{"type":"Identifier","start":5254,"end":5259,"name":"child"},"property":{"type":"Identifier","start":5260,"end":5271,"name":"nextSibling"},"computed":false,"optional":false}}}]}},{"type":"IfStatement","start":5317,"end":5615,"test":{"type":"LogicalExpression","start":5321,"end":5388,"left":{"type":"LogicalExpression","start":5321,"end":5367,"left":{"type":"UnaryExpression","start":5321,"end":5340,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":5322,"end":5340,"name":"partOfMixedContent"}},"operator":"&&","right":{"type":"UnaryExpression","start":5344,"end":5367,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":5345,"end":5367,"name":"elementHasMixedContent"}}},"operator":"&&","right":{"type":"Identifier","start":5371,"end":5388,"name":"hasComplexContent"}},"consequent":{"type":"BlockStatement","start":5390,"end":5508,"body":[{"type":"ExpressionStatement","start":5417,"end":5485,"expression":{"type":"CallExpression","start":5417,"end":5484,"callee":{"type":"MemberExpression","start":5417,"end":5436,"object":{"type":"ThisExpression","start":5417,"end":5421},"property":{"type":"Identifier","start":5422,"end":5436,"name":"outputIndented"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5437,"end":5444,"name":"options"},{"type":"Identifier","start":5446,"end":5449,"name":"buf"},{"type":"Identifier","start":5451,"end":5462,"name":"indentLevel"},{"type":"Literal","start":5464,"end":5468,"value":"</","raw":"'</'"},{"type":"Identifier","start":5470,"end":5478,"name":"nodeName"},{"type":"Literal","start":5480,"end":5483,"value":">","raw":"'>'"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":5535,"end":5615,"body":[{"type":"ExpressionStatement","start":5562,"end":5592,"expression":{"type":"CallExpression","start":5562,"end":5591,"callee":{"type":"MemberExpression","start":5562,"end":5570,"object":{"type":"Identifier","start":5562,"end":5565,"name":"buf"},"property":{"type":"Identifier","start":5566,"end":5570,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5571,"end":5575,"value":"</","raw":"'</'"},{"type":"Identifier","start":5577,"end":5585,"name":"nodeName"},{"type":"Literal","start":5587,"end":5590,"value":">","raw":"'>'"}],"optional":false}}]}}]},"alternate":{"type":"BlockStatement","start":5657,"end":5714,"body":[{"type":"ExpressionStatement","start":5680,"end":5695,"expression":{"type":"CallExpression","start":5680,"end":5694,"callee":{"type":"MemberExpression","start":5680,"end":5688,"object":{"type":"Identifier","start":5680,"end":5683,"name":"buf"},"property":{"type":"Identifier","start":5684,"end":5688,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5689,"end":5693,"value":"/>","raw":"'/>'"}],"optional":false}}]}},{"type":"ReturnStatement","start":5732,"end":5739,"argument":null}],"test":{"type":"MemberExpression","start":2472,"end":2489,"object":{"type":"Identifier","start":2472,"end":2476,"name":"node"},"property":{"type":"Identifier","start":2477,"end":2489,"name":"ELEMENT_NODE"},"computed":false,"optional":false}},{"type":"SwitchCase","start":5753,"end":5777,"consequent":[],"test":{"type":"MemberExpression","start":5758,"end":5776,"object":{"type":"Identifier","start":5758,"end":5762,"name":"node"},"property":{"type":"Identifier","start":5763,"end":5776,"name":"DOCUMENT_NODE"},"computed":false,"optional":false}},{"type":"SwitchCase","start":5791,"end":6098,"consequent":[{"type":"ExpressionStatement","start":5842,"end":5866,"expression":{"type":"AssignmentExpression","start":5842,"end":5865,"operator":"=","left":{"type":"Identifier","start":5842,"end":5847,"name":"child"},"right":{"type":"MemberExpression","start":5850,"end":5865,"object":{"type":"Identifier","start":5850,"end":5854,"name":"node"},"property":{"type":"Identifier","start":5855,"end":5865,"name":"firstChild"},"computed":false,"optional":false}}},{"type":"WhileStatement","start":5884,"end":6073,"test":{"type":"Identifier","start":5891,"end":5896,"name":"child"},"body":{"type":"BlockStatement","start":5898,"end":6073,"body":[{"type":"ExpressionStatement","start":5921,"end":6006,"expression":{"type":"CallExpression","start":5921,"end":6005,"callee":{"type":"MemberExpression","start":5921,"end":5945,"object":{"type":"ThisExpression","start":5921,"end":5925},"property":{"type":"Identifier","start":5926,"end":5945,"name":"doSerializeToString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5946,"end":5951,"name":"child"},{"type":"Identifier","start":5953,"end":5960,"name":"options"},{"type":"Identifier","start":5962,"end":5965,"name":"buf"},{"type":"Identifier","start":5967,"end":5978,"name":"indentLevel"},{"type":"Literal","start":5980,"end":5985,"value":false,"raw":"false"},{"type":"Identifier","start":5987,"end":6004,"name":"visibleNamespaces"}],"optional":false}},{"type":"ExpressionStatement","start":6028,"end":6054,"expression":{"type":"AssignmentExpression","start":6028,"end":6053,"operator":"=","left":{"type":"Identifier","start":6028,"end":6033,"name":"child"},"right":{"type":"MemberExpression","start":6036,"end":6053,"object":{"type":"Identifier","start":6036,"end":6041,"name":"child"},"property":{"type":"Identifier","start":6042,"end":6053,"name":"nextSibling"},"computed":false,"optional":false}}}]}},{"type":"ReturnStatement","start":6091,"end":6098,"argument":null}],"test":{"type":"MemberExpression","start":5796,"end":5823,"object":{"type":"Identifier","start":5796,"end":5800,"name":"node"},"property":{"type":"Identifier","start":5801,"end":5823,"name":"DOCUMENT_FRAGMENT_NODE"},"computed":false,"optional":false}},{"type":"SwitchCase","start":6112,"end":6294,"consequent":[{"type":"VariableDeclaration","start":6155,"end":6177,"declarations":[{"type":"VariableDeclarator","start":6161,"end":6176,"id":{"type":"Identifier","start":6161,"end":6169,"name":"attrNode"},"init":{"type":"Identifier","start":6172,"end":6176,"name":"node"}}],"kind":"const"},{"type":"ReturnStatement","start":6195,"end":6294,"argument":{"type":"CallExpression","start":6202,"end":6293,"callee":{"type":"MemberExpression","start":6202,"end":6210,"object":{"type":"Identifier","start":6202,"end":6205,"name":"buf"},"property":{"type":"Identifier","start":6206,"end":6210,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6211,"end":6214,"value":" ","raw":"' '"},{"type":"MemberExpression","start":6216,"end":6229,"object":{"type":"Identifier","start":6216,"end":6224,"name":"attrNode"},"property":{"type":"Identifier","start":6225,"end":6229,"name":"name"},"computed":false,"optional":false},{"type":"Literal","start":6231,"end":6235,"value":"=\"","raw":"'=\"'"},{"type":"CallExpression","start":6237,"end":6287,"callee":{"type":"MemberExpression","start":6237,"end":6259,"object":{"type":"MemberExpression","start":6237,"end":6251,"object":{"type":"Identifier","start":6237,"end":6245,"name":"attrNode"},"property":{"type":"Identifier","start":6246,"end":6251,"name":"value"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6252,"end":6259,"name":"replace"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6260,"end":6268,"value":{},"raw":"/[<&\"]/g","regex":{"pattern":"[<&\"]","flags":"g"}},{"type":"MemberExpression","start":6270,"end":6286,"object":{"type":"ThisExpression","start":6270,"end":6274},"property":{"type":"Identifier","start":6275,"end":6286,"name":"_xmlEncoder"},"computed":false,"optional":false}],"optional":false},{"type":"Literal","start":6289,"end":6292,"value":"\"","raw":"'\"'"}],"optional":false}}],"test":{"type":"MemberExpression","start":6117,"end":6136,"object":{"type":"Identifier","start":6117,"end":6121,"name":"node"},"property":{"type":"Identifier","start":6122,"end":6136,"name":"ATTRIBUTE_NODE"},"computed":false,"optional":false}},{"type":"SwitchCase","start":6308,"end":6611,"consequent":[{"type":"VariableDeclaration","start":6346,"end":6368,"declarations":[{"type":"VariableDeclarator","start":6352,"end":6367,"id":{"type":"Identifier","start":6352,"end":6360,"name":"textNode"},"init":{"type":"Identifier","start":6363,"end":6367,"name":"node"}}],"kind":"const"},{"type":"IfStatement","start":6386,"end":6586,"test":{"type":"LogicalExpression","start":6390,"end":6476,"left":{"type":"LogicalExpression","start":6390,"end":6429,"left":{"type":"UnaryExpression","start":6390,"end":6407,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":6391,"end":6407,"object":{"type":"Identifier","start":6391,"end":6398,"name":"options"},"property":{"type":"Identifier","start":6399,"end":6407,"name":"beautify"},"computed":false,"optional":false}},"operator":"||","right":{"type":"Identifier","start":6411,"end":6429,"name":"partOfMixedContent"}},"operator":"||","right":{"type":"UnaryExpression","start":6433,"end":6476,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":6434,"end":6476,"callee":{"type":"MemberExpression","start":6434,"end":6461,"object":{"type":"ThisExpression","start":6434,"end":6438},"property":{"type":"Identifier","start":6439,"end":6461,"name":"containsOnlyWhiteSpace"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6462,"end":6475,"object":{"type":"Identifier","start":6462,"end":6470,"name":"textNode"},"property":{"type":"Identifier","start":6471,"end":6475,"name":"data"},"computed":false,"optional":false}],"optional":false}}},"consequent":{"type":"BlockStatement","start":6478,"end":6586,"body":[{"type":"ReturnStatement","start":6501,"end":6567,"argument":{"type":"CallExpression","start":6508,"end":6566,"callee":{"type":"MemberExpression","start":6508,"end":6516,"object":{"type":"Identifier","start":6508,"end":6511,"name":"buf"},"property":{"type":"Identifier","start":6512,"end":6516,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6517,"end":6565,"callee":{"type":"MemberExpression","start":6517,"end":6538,"object":{"type":"MemberExpression","start":6517,"end":6530,"object":{"type":"Identifier","start":6517,"end":6525,"name":"textNode"},"property":{"type":"Identifier","start":6526,"end":6530,"name":"data"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6531,"end":6538,"name":"replace"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6539,"end":6546,"value":{},"raw":"/[<&]/g","regex":{"pattern":"[<&]","flags":"g"}},{"type":"MemberExpression","start":6548,"end":6564,"object":{"type":"ThisExpression","start":6548,"end":6552},"property":{"type":"Identifier","start":6553,"end":6564,"name":"_xmlEncoder"},"computed":false,"optional":false}],"optional":false}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":6604,"end":6611,"argument":null}],"test":{"type":"MemberExpression","start":6313,"end":6327,"object":{"type":"Identifier","start":6313,"end":6317,"name":"node"},"property":{"type":"Identifier","start":6318,"end":6327,"name":"TEXT_NODE"},"computed":false,"optional":false}},{"type":"SwitchCase","start":6625,"end":6779,"consequent":[{"type":"VariableDeclaration","start":6672,"end":6702,"declarations":[{"type":"VariableDeclarator","start":6678,"end":6701,"id":{"type":"Identifier","start":6678,"end":6694,"name":"cdatasectionNode"},"init":{"type":"Identifier","start":6697,"end":6701,"name":"node"}}],"kind":"const"},{"type":"ReturnStatement","start":6720,"end":6779,"argument":{"type":"CallExpression","start":6727,"end":6778,"callee":{"type":"MemberExpression","start":6727,"end":6735,"object":{"type":"Identifier","start":6727,"end":6730,"name":"buf"},"property":{"type":"Identifier","start":6731,"end":6735,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6736,"end":6747,"value":"<![CDATA[","raw":"'<![CDATA['"},{"type":"MemberExpression","start":6749,"end":6770,"object":{"type":"Identifier","start":6749,"end":6765,"name":"cdatasectionNode"},"property":{"type":"Identifier","start":6766,"end":6770,"name":"data"},"computed":false,"optional":false},{"type":"Literal","start":6772,"end":6777,"value":"]]>","raw":"']]>'"}],"optional":false}}],"test":{"type":"MemberExpression","start":6630,"end":6653,"object":{"type":"Identifier","start":6630,"end":6634,"name":"node"},"property":{"type":"Identifier","start":6635,"end":6653,"name":"CDATA_SECTION_NODE"},"computed":false,"optional":false}},{"type":"SwitchCase","start":6793,"end":6926,"consequent":[{"type":"VariableDeclaration","start":6834,"end":6859,"declarations":[{"type":"VariableDeclarator","start":6840,"end":6858,"id":{"type":"Identifier","start":6840,"end":6851,"name":"commentNode"},"init":{"type":"Identifier","start":6854,"end":6858,"name":"node"}}],"kind":"const"},{"type":"ReturnStatement","start":6877,"end":6926,"argument":{"type":"CallExpression","start":6884,"end":6925,"callee":{"type":"MemberExpression","start":6884,"end":6892,"object":{"type":"Identifier","start":6884,"end":6887,"name":"buf"},"property":{"type":"Identifier","start":6888,"end":6892,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6893,"end":6899,"value":"<!--","raw":"'<!--'"},{"type":"MemberExpression","start":6901,"end":6917,"object":{"type":"Identifier","start":6901,"end":6912,"name":"commentNode"},"property":{"type":"Identifier","start":6913,"end":6917,"name":"data"},"computed":false,"optional":false},{"type":"Literal","start":6919,"end":6924,"value":"-->","raw":"'-->'"}],"optional":false}}],"test":{"type":"MemberExpression","start":6798,"end":6815,"object":{"type":"Identifier","start":6798,"end":6802,"name":"node"},"property":{"type":"Identifier","start":6803,"end":6815,"name":"COMMENT_NODE"},"computed":false,"optional":false}},{"type":"SwitchCase","start":6940,"end":7689,"consequent":[{"type":"VariableDeclaration","start":6987,"end":7017,"declarations":[{"type":"VariableDeclarator","start":6993,"end":7016,"id":{"type":"Identifier","start":6993,"end":7009,"name":"documenttypeNode"},"init":{"type":"Identifier","start":7012,"end":7016,"name":"node"}}],"kind":"const"},{"type":"VariableDeclaration","start":7035,"end":7075,"declarations":[{"type":"VariableDeclarator","start":7041,"end":7074,"id":{"type":"Identifier","start":7041,"end":7046,"name":"pubid"},"init":{"type":"MemberExpression","start":7049,"end":7074,"object":{"type":"Identifier","start":7049,"end":7065,"name":"documenttypeNode"},"property":{"type":"Identifier","start":7066,"end":7074,"name":"publicId"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":7093,"end":7133,"declarations":[{"type":"VariableDeclarator","start":7099,"end":7132,"id":{"type":"Identifier","start":7099,"end":7104,"name":"sysid"},"init":{"type":"MemberExpression","start":7107,"end":7132,"object":{"type":"Identifier","start":7107,"end":7123,"name":"documenttypeNode"},"property":{"type":"Identifier","start":7124,"end":7132,"name":"systemId"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7151,"end":7197,"expression":{"type":"CallExpression","start":7151,"end":7196,"callee":{"type":"MemberExpression","start":7151,"end":7159,"object":{"type":"Identifier","start":7151,"end":7154,"name":"buf"},"property":{"type":"Identifier","start":7155,"end":7159,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7160,"end":7172,"value":"<!DOCTYPE ","raw":"'<!DOCTYPE '"},{"type":"MemberExpression","start":7174,"end":7195,"object":{"type":"Identifier","start":7174,"end":7190,"name":"documenttypeNode"},"property":{"type":"Identifier","start":7191,"end":7195,"name":"name"},"computed":false,"optional":false}],"optional":false}},{"type":"IfStatement","start":7215,"end":7664,"test":{"type":"Identifier","start":7219,"end":7224,"name":"pubid"},"consequent":{"type":"BlockStatement","start":7226,"end":7457,"body":[{"type":"ExpressionStatement","start":7249,"end":7278,"expression":{"type":"CallExpression","start":7249,"end":7277,"callee":{"type":"MemberExpression","start":7249,"end":7257,"object":{"type":"Identifier","start":7249,"end":7252,"name":"buf"},"property":{"type":"Identifier","start":7253,"end":7257,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7258,"end":7269,"value":" PUBLIC \"","raw":"' PUBLIC \"'"},{"type":"Identifier","start":7271,"end":7276,"name":"pubid"}],"optional":false}},{"type":"IfStatement","start":7300,"end":7401,"test":{"type":"LogicalExpression","start":7304,"end":7326,"left":{"type":"Identifier","start":7304,"end":7309,"name":"sysid"},"operator":"&&","right":{"type":"BinaryExpression","start":7313,"end":7326,"left":{"type":"Identifier","start":7313,"end":7318,"name":"sysid"},"operator":"!==","right":{"type":"Literal","start":7323,"end":7326,"value":".","raw":"'.'"}}},"consequent":{"type":"BlockStatement","start":7328,"end":7401,"body":[{"type":"ExpressionStatement","start":7355,"end":7378,"expression":{"type":"CallExpression","start":7355,"end":7377,"callee":{"type":"MemberExpression","start":7355,"end":7363,"object":{"type":"Identifier","start":7355,"end":7358,"name":"buf"},"property":{"type":"Identifier","start":7359,"end":7363,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7364,"end":7369,"value":"\" \"","raw":"'\" \"'"},{"type":"Identifier","start":7371,"end":7376,"name":"sysid"}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":7423,"end":7438,"expression":{"type":"CallExpression","start":7423,"end":7437,"callee":{"type":"MemberExpression","start":7423,"end":7431,"object":{"type":"Identifier","start":7423,"end":7426,"name":"buf"},"property":{"type":"Identifier","start":7427,"end":7431,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7432,"end":7436,"value":"\">","raw":"'\">'"}],"optional":false}}]},"alternate":{"type":"IfStatement","start":7480,"end":7664,"test":{"type":"LogicalExpression","start":7484,"end":7506,"left":{"type":"Identifier","start":7484,"end":7489,"name":"sysid"},"operator":"&&","right":{"type":"BinaryExpression","start":7493,"end":7506,"left":{"type":"Identifier","start":7493,"end":7498,"name":"sysid"},"operator":"!==","right":{"type":"Literal","start":7503,"end":7506,"value":".","raw":"'.'"}}},"consequent":{"type":"BlockStatement","start":7508,"end":7585,"body":[{"type":"ExpressionStatement","start":7531,"end":7566,"expression":{"type":"CallExpression","start":7531,"end":7565,"callee":{"type":"MemberExpression","start":7531,"end":7539,"object":{"type":"Identifier","start":7531,"end":7534,"name":"buf"},"property":{"type":"Identifier","start":7535,"end":7539,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7540,"end":7551,"value":" SYSTEM \"","raw":"' SYSTEM \"'"},{"type":"Identifier","start":7553,"end":7558,"name":"sysid"},{"type":"Literal","start":7560,"end":7564,"value":"\">","raw":"'\">'"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":7608,"end":7664,"body":[{"type":"ExpressionStatement","start":7631,"end":7645,"expression":{"type":"CallExpression","start":7631,"end":7644,"callee":{"type":"MemberExpression","start":7631,"end":7639,"object":{"type":"Identifier","start":7631,"end":7634,"name":"buf"},"property":{"type":"Identifier","start":7635,"end":7639,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7640,"end":7643,"value":">","raw":"'>'"}],"optional":false}}]}}},{"type":"ReturnStatement","start":7682,"end":7689,"argument":null}],"test":{"type":"MemberExpression","start":6945,"end":6968,"object":{"type":"Identifier","start":6945,"end":6949,"name":"node"},"property":{"type":"Identifier","start":6950,"end":6968,"name":"DOCUMENT_TYPE_NODE"},"computed":false,"optional":false}},{"type":"SwitchCase","start":7703,"end":7858,"consequent":[{"type":"VariableDeclaration","start":7759,"end":7779,"declarations":[{"type":"VariableDeclarator","start":7765,"end":7778,"id":{"type":"Identifier","start":7765,"end":7771,"name":"piNode"},"init":{"type":"Identifier","start":7774,"end":7778,"name":"node"}}],"kind":"const"},{"type":"ReturnStatement","start":7797,"end":7858,"argument":{"type":"CallExpression","start":7804,"end":7857,"callee":{"type":"MemberExpression","start":7804,"end":7812,"object":{"type":"Identifier","start":7804,"end":7807,"name":"buf"},"property":{"type":"Identifier","start":7808,"end":7812,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7813,"end":7817,"value":"<?","raw":"'<?'"},{"type":"MemberExpression","start":7819,"end":7832,"object":{"type":"Identifier","start":7819,"end":7825,"name":"piNode"},"property":{"type":"Identifier","start":7826,"end":7832,"name":"target"},"computed":false,"optional":false},{"type":"Literal","start":7834,"end":7837,"value":" ","raw":"' '"},{"type":"MemberExpression","start":7839,"end":7850,"object":{"type":"Identifier","start":7839,"end":7845,"name":"piNode"},"property":{"type":"Identifier","start":7846,"end":7850,"name":"data"},"computed":false,"optional":false},{"type":"Literal","start":7852,"end":7856,"value":"?>","raw":"'?>'"}],"optional":false}}],"test":{"type":"MemberExpression","start":7708,"end":7740,"object":{"type":"Identifier","start":7708,"end":7712,"name":"node"},"property":{"type":"Identifier","start":7713,"end":7740,"name":"PROCESSING_INSTRUCTION_NODE"},"computed":false,"optional":false}},{"type":"SwitchCase","start":7872,"end":7963,"consequent":[{"type":"ReturnStatement","start":7922,"end":7963,"argument":{"type":"CallExpression","start":7929,"end":7962,"callee":{"type":"MemberExpression","start":7929,"end":7937,"object":{"type":"Identifier","start":7929,"end":7932,"name":"buf"},"property":{"type":"Identifier","start":7933,"end":7937,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7938,"end":7941,"value":"&","raw":"'&'"},{"type":"MemberExpression","start":7943,"end":7956,"object":{"type":"Identifier","start":7943,"end":7947,"name":"node"},"property":{"type":"Identifier","start":7948,"end":7956,"name":"nodeName"},"computed":false,"optional":false},{"type":"Literal","start":7958,"end":7961,"value":";","raw":"';'"}],"optional":false}}],"test":{"type":"MemberExpression","start":7877,"end":7903,"object":{"type":"Identifier","start":7877,"end":7881,"name":"node"},"property":{"type":"Identifier","start":7882,"end":7903,"name":"ENTITY_REFERENCE_NODE"},"computed":false,"optional":false}},{"type":"SwitchCase","start":8047,"end":8103,"consequent":[{"type":"ExpressionStatement","start":8073,"end":8103,"expression":{"type":"CallExpression","start":8073,"end":8102,"callee":{"type":"MemberExpression","start":8073,"end":8081,"object":{"type":"Identifier","start":8073,"end":8076,"name":"buf"},"property":{"type":"Identifier","start":8077,"end":8081,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8082,"end":8086,"value":"??","raw":"'??'"},{"type":"MemberExpression","start":8088,"end":8101,"object":{"type":"Identifier","start":8088,"end":8092,"name":"node"},"property":{"type":"Identifier","start":8093,"end":8101,"name":"nodeName"},"computed":false,"optional":false}],"optional":false}}],"test":null}]}]}}},{"type":"MethodDefinition","start":8127,"end":8794,"static":false,"computed":false,"key":{"type":"Identifier","start":8127,"end":8146,"name":"needNamespaceDefine"},"kind":"method","value":{"type":"FunctionExpression","start":8146,"end":8794,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8147,"end":8151,"name":"node"},{"type":"Identifier","start":8153,"end":8170,"name":"visibleNamespaces"}],"body":{"type":"BlockStatement","start":8172,"end":8794,"body":[{"type":"VariableDeclaration","start":8183,"end":8216,"declarations":[{"type":"VariableDeclarator","start":8189,"end":8215,"id":{"type":"Identifier","start":8189,"end":8195,"name":"prefix"},"init":{"type":"LogicalExpression","start":8198,"end":8215,"left":{"type":"MemberExpression","start":8198,"end":8209,"object":{"type":"Identifier","start":8198,"end":8202,"name":"node"},"property":{"type":"Identifier","start":8203,"end":8209,"name":"prefix"},"computed":false,"optional":false},"operator":"||","right":{"type":"Literal","start":8213,"end":8215,"value":"","raw":"''"}}}],"kind":"const"},{"type":"VariableDeclaration","start":8226,"end":8256,"declarations":[{"type":"VariableDeclarator","start":8232,"end":8255,"id":{"type":"Identifier","start":8232,"end":8235,"name":"uri"},"init":{"type":"MemberExpression","start":8238,"end":8255,"object":{"type":"Identifier","start":8238,"end":8242,"name":"node"},"property":{"type":"Identifier","start":8243,"end":8255,"name":"namespaceURI"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":8266,"end":8326,"test":{"type":"LogicalExpression","start":8270,"end":8285,"left":{"type":"UnaryExpression","start":8270,"end":8277,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":8271,"end":8277,"name":"prefix"}},"operator":"&&","right":{"type":"UnaryExpression","start":8281,"end":8285,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":8282,"end":8285,"name":"uri"}}},"consequent":{"type":"BlockStatement","start":8287,"end":8326,"body":[{"type":"ReturnStatement","start":8302,"end":8315,"argument":{"type":"Literal","start":8309,"end":8314,"value":false,"raw":"false"}}]},"alternate":null},{"type":"IfStatement","start":8336,"end":8503,"test":{"type":"LogicalExpression","start":8340,"end":8462,"left":{"type":"LogicalExpression","start":8340,"end":8406,"left":{"type":"BinaryExpression","start":8340,"end":8356,"left":{"type":"Identifier","start":8340,"end":8346,"name":"prefix"},"operator":"===","right":{"type":"Literal","start":8351,"end":8356,"value":"xml","raw":"'xml'"}},"operator":"&&","right":{"type":"BinaryExpression","start":8360,"end":8406,"left":{"type":"Identifier","start":8360,"end":8363,"name":"uri"},"operator":"===","right":{"type":"Literal","start":8368,"end":8406,"value":"http://www.w3.org/XML/1998/namespace","raw":"'http://www.w3.org/XML/1998/namespace'"}}},"operator":"||","right":{"type":"BinaryExpression","start":8423,"end":8462,"left":{"type":"Identifier","start":8423,"end":8426,"name":"uri"},"operator":"===","right":{"type":"Literal","start":8431,"end":8462,"value":"http://www.w3.org/2000/xmlns/","raw":"'http://www.w3.org/2000/xmlns/'"}}},"consequent":{"type":"BlockStatement","start":8464,"end":8503,"body":[{"type":"ReturnStatement","start":8479,"end":8492,"argument":{"type":"Literal","start":8486,"end":8491,"value":false,"raw":"false"}}]},"alternate":null},{"type":"VariableDeclaration","start":8513,"end":8546,"declarations":[{"type":"VariableDeclarator","start":8517,"end":8545,"id":{"type":"Identifier","start":8517,"end":8518,"name":"i"},"init":{"type":"MemberExpression","start":8521,"end":8545,"object":{"type":"Identifier","start":8521,"end":8538,"name":"visibleNamespaces"},"property":{"type":"Identifier","start":8539,"end":8545,"name":"length"},"computed":false,"optional":false}}],"kind":"let"},{"type":"WhileStatement","start":8556,"end":8765,"test":{"type":"UpdateExpression","start":8563,"end":8566,"operator":"--","prefix":false,"argument":{"type":"Identifier","start":8563,"end":8564,"name":"i"}},"body":{"type":"BlockStatement","start":8568,"end":8765,"body":[{"type":"VariableDeclaration","start":8583,"end":8615,"declarations":[{"type":"VariableDeclarator","start":8589,"end":8614,"id":{"type":"Identifier","start":8589,"end":8591,"name":"ns"},"init":{"type":"MemberExpression","start":8594,"end":8614,"object":{"type":"Identifier","start":8594,"end":8611,"name":"visibleNamespaces"},"property":{"type":"Identifier","start":8612,"end":8613,"name":"i"},"computed":true,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":8666,"end":8754,"test":{"type":"BinaryExpression","start":8670,"end":8690,"left":{"type":"MemberExpression","start":8670,"end":8679,"object":{"type":"Identifier","start":8670,"end":8672,"name":"ns"},"property":{"type":"Identifier","start":8673,"end":8679,"name":"prefix"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":8684,"end":8690,"name":"prefix"}},"consequent":{"type":"BlockStatement","start":8692,"end":8754,"body":[{"type":"ReturnStatement","start":8711,"end":8739,"argument":{"type":"BinaryExpression","start":8718,"end":8738,"left":{"type":"MemberExpression","start":8718,"end":8730,"object":{"type":"Identifier","start":8718,"end":8720,"name":"ns"},"property":{"type":"Identifier","start":8721,"end":8730,"name":"namespace"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":8735,"end":8738,"name":"uri"}}}]},"alternate":null}]}},{"type":"ReturnStatement","start":8775,"end":8787,"argument":{"type":"Literal","start":8782,"end":8786,"value":true,"raw":"true"}}]}}},{"type":"MethodDefinition","start":8800,"end":9016,"static":false,"computed":false,"key":{"type":"Identifier","start":8800,"end":8811,"name":"_xmlEncoder"},"kind":"method","value":{"type":"FunctionExpression","start":8811,"end":9016,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8812,"end":8813,"name":"c"}],"body":{"type":"BlockStatement","start":8815,"end":9016,"body":[{"type":"ReturnStatement","start":8826,"end":9009,"argument":{"type":"LogicalExpression","start":8833,"end":9008,"left":{"type":"LogicalExpression","start":8833,"end":8963,"left":{"type":"LogicalExpression","start":8833,"end":8925,"left":{"type":"LogicalExpression","start":8833,"end":8888,"left":{"type":"LogicalExpression","start":8833,"end":8852,"left":{"type":"BinaryExpression","start":8833,"end":8842,"left":{"type":"Identifier","start":8833,"end":8834,"name":"c"},"operator":"===","right":{"type":"Literal","start":8839,"end":8842,"value":"<","raw":"'<'"}},"operator":"&&","right":{"type":"Literal","start":8846,"end":8852,"value":"&lt;","raw":"'&lt;'"}},"operator":"||","right":{"type":"LogicalExpression","start":8869,"end":8888,"left":{"type":"BinaryExpression","start":8869,"end":8878,"left":{"type":"Identifier","start":8869,"end":8870,"name":"c"},"operator":"===","right":{"type":"Literal","start":8875,"end":8878,"value":">","raw":"'>'"}},"operator":"&&","right":{"type":"Literal","start":8882,"end":8888,"value":"&gt;","raw":"'&gt;'"}}},"operator":"||","right":{"type":"LogicalExpression","start":8905,"end":8925,"left":{"type":"BinaryExpression","start":8905,"end":8914,"left":{"type":"Identifier","start":8905,"end":8906,"name":"c"},"operator":"===","right":{"type":"Literal","start":8911,"end":8914,"value":"&","raw":"'&'"}},"operator":"&&","right":{"type":"Literal","start":8918,"end":8925,"value":"&amp;","raw":"'&amp;'"}}},"operator":"||","right":{"type":"LogicalExpression","start":8942,"end":8963,"left":{"type":"BinaryExpression","start":8942,"end":8951,"left":{"type":"Identifier","start":8942,"end":8943,"name":"c"},"operator":"===","right":{"type":"Literal","start":8948,"end":8951,"value":"\"","raw":"'\"'"}},"operator":"&&","right":{"type":"Literal","start":8955,"end":8963,"value":"&quot;","raw":"'&quot;'"}}},"operator":"||","right":{"type":"BinaryExpression","start":8980,"end":9008,"left":{"type":"BinaryExpression","start":8980,"end":9002,"left":{"type":"Literal","start":8980,"end":8984,"value":"&#","raw":"'&#'"},"operator":"+","right":{"type":"CallExpression","start":8987,"end":9002,"callee":{"type":"MemberExpression","start":8987,"end":8999,"object":{"type":"Identifier","start":8987,"end":8988,"name":"c"},"property":{"type":"Identifier","start":8989,"end":8999,"name":"charCodeAt"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9000,"end":9001,"value":0,"raw":"0"}],"optional":false}},"operator":"+","right":{"type":"Literal","start":9005,"end":9008,"value":";","raw":"';'"}}}}]}}},{"type":"MethodDefinition","start":9022,"end":9320,"static":false,"computed":false,"key":{"type":"Identifier","start":9022,"end":9036,"name":"outputIndented"},"kind":"method","value":{"type":"FunctionExpression","start":9036,"end":9320,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9037,"end":9044,"name":"options"},{"type":"Identifier","start":9046,"end":9049,"name":"buf"},{"type":"Identifier","start":9051,"end":9062,"name":"indentLevel"},{"type":"RestElement","start":9064,"end":9078,"argument":{"type":"Identifier","start":9067,"end":9078,"name":"outputParts"}}],"body":{"type":"BlockStatement","start":9080,"end":9320,"body":[{"type":"IfStatement","start":9091,"end":9278,"test":{"type":"MemberExpression","start":9095,"end":9111,"object":{"type":"Identifier","start":9095,"end":9102,"name":"options"},"property":{"type":"Identifier","start":9103,"end":9111,"name":"beautify"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":9113,"end":9278,"body":[{"type":"ExpressionStatement","start":9128,"end":9143,"expression":{"type":"CallExpression","start":9128,"end":9142,"callee":{"type":"MemberExpression","start":9128,"end":9136,"object":{"type":"Identifier","start":9128,"end":9131,"name":"buf"},"property":{"type":"Identifier","start":9132,"end":9136,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9137,"end":9141,"value":"\n","raw":"'\\n'"}],"optional":false}},{"type":"IfStatement","start":9157,"end":9267,"test":{"type":"BinaryExpression","start":9161,"end":9176,"left":{"type":"Identifier","start":9161,"end":9172,"name":"indentLevel"},"operator":">","right":{"type":"Literal","start":9175,"end":9176,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":9178,"end":9267,"body":[{"type":"ExpressionStatement","start":9197,"end":9252,"expression":{"type":"CallExpression","start":9197,"end":9251,"callee":{"type":"MemberExpression","start":9197,"end":9205,"object":{"type":"Identifier","start":9197,"end":9200,"name":"buf"},"property":{"type":"Identifier","start":9201,"end":9205,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9206,"end":9250,"callee":{"type":"MemberExpression","start":9206,"end":9228,"object":{"type":"ThisExpression","start":9206,"end":9210},"property":{"type":"Identifier","start":9211,"end":9228,"name":"indentationString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9229,"end":9236,"name":"options"},{"type":"Identifier","start":9238,"end":9249,"name":"indentLevel"}],"optional":false}],"optional":false}}]},"alternate":null}]},"alternate":null},{"type":"ExpressionStatement","start":9288,"end":9313,"expression":{"type":"CallExpression","start":9288,"end":9312,"callee":{"type":"MemberExpression","start":9288,"end":9296,"object":{"type":"Identifier","start":9288,"end":9291,"name":"buf"},"property":{"type":"Identifier","start":9292,"end":9296,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"SpreadElement","start":9297,"end":9311,"argument":{"type":"Identifier","start":9300,"end":9311,"name":"outputParts"}}],"optional":false}}]}}},{"type":"MethodDefinition","start":9326,"end":9618,"static":false,"computed":false,"key":{"type":"Identifier","start":9326,"end":9343,"name":"indentationString"},"kind":"method","value":{"type":"FunctionExpression","start":9343,"end":9618,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9344,"end":9351,"name":"options"},{"type":"Identifier","start":9353,"end":9364,"name":"indentLevel"}],"body":{"type":"BlockStatement","start":9366,"end":9618,"body":[{"type":"VariableDeclaration","start":9377,"end":9462,"declarations":[{"type":"VariableDeclarator","start":9383,"end":9461,"id":{"type":"Identifier","start":9383,"end":9389,"name":"indent"},"init":{"type":"ConditionalExpression","start":9392,"end":9461,"test":{"type":"MemberExpression","start":9393,"end":9413,"object":{"type":"Identifier","start":9393,"end":9400,"name":"options"},"property":{"type":"Identifier","start":9401,"end":9413,"name":"indentString"},"computed":false,"optional":false},"consequent":{"type":"MemberExpression","start":9417,"end":9437,"object":{"type":"Identifier","start":9417,"end":9424,"name":"options"},"property":{"type":"Identifier","start":9425,"end":9437,"name":"indentString"},"computed":false,"optional":false},"alternate":{"type":"Identifier","start":9440,"end":9461,"name":"DEFAULT_INDENT_STRING"}}}],"kind":"const"},{"type":"VariableDeclaration","start":9472,"end":9488,"declarations":[{"type":"VariableDeclarator","start":9476,"end":9487,"id":{"type":"Identifier","start":9476,"end":9482,"name":"result"},"init":{"type":"Literal","start":9485,"end":9487,"value":"","raw":"''"}}],"kind":"let"},{"type":"ForStatement","start":9498,"end":9587,"init":{"type":"VariableDeclaration","start":9503,"end":9512,"declarations":[{"type":"VariableDeclarator","start":9507,"end":9512,"id":{"type":"Identifier","start":9507,"end":9508,"name":"i"},"init":{"type":"Literal","start":9511,"end":9512,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":9514,"end":9529,"left":{"type":"Identifier","start":9514,"end":9515,"name":"i"},"operator":"<","right":{"type":"Identifier","start":9518,"end":9529,"name":"indentLevel"}},"update":{"type":"UpdateExpression","start":9531,"end":9534,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":9531,"end":9532,"name":"i"}},"body":{"type":"BlockStatement","start":9536,"end":9587,"body":[{"type":"ExpressionStatement","start":9551,"end":9576,"expression":{"type":"AssignmentExpression","start":9551,"end":9575,"operator":"=","left":{"type":"Identifier","start":9551,"end":9557,"name":"result"},"right":{"type":"BinaryExpression","start":9560,"end":9575,"left":{"type":"Identifier","start":9560,"end":9566,"name":"result"},"operator":"+","right":{"type":"Identifier","start":9569,"end":9575,"name":"indent"}}}}]}},{"type":"ReturnStatement","start":9597,"end":9611,"argument":{"type":"Identifier","start":9604,"end":9610,"name":"result"}}]}}},{"type":"MethodDefinition","start":9773,"end":10025,"static":false,"computed":false,"key":{"type":"Identifier","start":9773,"end":9794,"name":"isMixedContentElement"},"kind":"method","value":{"type":"FunctionExpression","start":9794,"end":10025,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9795,"end":9802,"name":"tagName"},{"type":"Identifier","start":9804,"end":9811,"name":"options"}],"body":{"type":"BlockStatement","start":9813,"end":10025,"body":[{"type":"IfStatement","start":9824,"end":10018,"test":{"type":"LogicalExpression","start":9828,"end":9867,"left":{"type":"Identifier","start":9828,"end":9835,"name":"options"},"operator":"&&","right":{"type":"MemberExpression","start":9839,"end":9867,"object":{"type":"Identifier","start":9839,"end":9846,"name":"options"},"property":{"type":"Identifier","start":9847,"end":9867,"name":"mixedContentElements"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":9869,"end":9964,"body":[{"type":"ReturnStatement","start":9884,"end":9953,"argument":{"type":"UnaryExpression","start":9891,"end":9952,"operator":"!","prefix":true,"argument":{"type":"UnaryExpression","start":9892,"end":9952,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":9893,"end":9952,"callee":{"type":"MemberExpression","start":9893,"end":9926,"object":{"type":"MemberExpression","start":9893,"end":9921,"object":{"type":"Identifier","start":9893,"end":9900,"name":"options"},"property":{"type":"Identifier","start":9901,"end":9921,"name":"mixedContentElements"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9922,"end":9926,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":9927,"end":9951,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":9928,"end":9931,"name":"tag"}],"body":{"type":"BinaryExpression","start":9936,"end":9951,"left":{"type":"Identifier","start":9936,"end":9939,"name":"tag"},"operator":"===","right":{"type":"Identifier","start":9944,"end":9951,"name":"tagName"}}}],"optional":false}}}}]},"alternate":{"type":"BlockStatement","start":9979,"end":10018,"body":[{"type":"ReturnStatement","start":9994,"end":10007,"argument":{"type":"Literal","start":10001,"end":10006,"value":false,"raw":"false"}}]}}]}}},{"type":"MethodDefinition","start":10031,"end":10310,"static":false,"computed":false,"key":{"type":"Identifier","start":10031,"end":10053,"name":"containsOnlyWhiteSpace"},"kind":"method","value":{"type":"FunctionExpression","start":10053,"end":10310,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":10054,"end":10058,"name":"text"}],"body":{"type":"BlockStatement","start":10060,"end":10310,"body":[{"type":"ForStatement","start":10071,"end":10281,"init":{"type":"VariableDeclaration","start":10076,"end":10085,"declarations":[{"type":"VariableDeclarator","start":10080,"end":10085,"id":{"type":"Identifier","start":10080,"end":10081,"name":"i"},"init":{"type":"Literal","start":10084,"end":10085,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":10087,"end":10102,"left":{"type":"Identifier","start":10087,"end":10088,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":10091,"end":10102,"object":{"type":"Identifier","start":10091,"end":10095,"name":"text"},"property":{"type":"Identifier","start":10096,"end":10102,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":10104,"end":10107,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":10104,"end":10105,"name":"i"}},"body":{"type":"BlockStatement","start":10109,"end":10281,"body":[{"type":"VariableDeclaration","start":10124,"end":10149,"declarations":[{"type":"VariableDeclarator","start":10130,"end":10148,"id":{"type":"Identifier","start":10130,"end":10131,"name":"c"},"init":{"type":"CallExpression","start":10134,"end":10148,"callee":{"type":"MemberExpression","start":10134,"end":10145,"object":{"type":"Identifier","start":10134,"end":10138,"name":"text"},"property":{"type":"Identifier","start":10139,"end":10145,"name":"charAt"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10146,"end":10147,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":10163,"end":10270,"test":{"type":"UnaryExpression","start":10167,"end":10221,"operator":"!","prefix":true,"argument":{"type":"LogicalExpression","start":10169,"end":10220,"left":{"type":"LogicalExpression","start":10169,"end":10206,"left":{"type":"LogicalExpression","start":10169,"end":10192,"left":{"type":"BinaryExpression","start":10169,"end":10178,"left":{"type":"Identifier","start":10169,"end":10170,"name":"c"},"operator":"===","right":{"type":"Literal","start":10175,"end":10178,"value":" ","raw":"' '"}},"operator":"||","right":{"type":"BinaryExpression","start":10182,"end":10192,"left":{"type":"Identifier","start":10182,"end":10183,"name":"c"},"operator":"===","right":{"type":"Literal","start":10188,"end":10192,"value":"\t","raw":"'\\t'"}}},"operator":"||","right":{"type":"BinaryExpression","start":10196,"end":10206,"left":{"type":"Identifier","start":10196,"end":10197,"name":"c"},"operator":"===","right":{"type":"Literal","start":10202,"end":10206,"value":"\r","raw":"'\\r'"}}},"operator":"||","right":{"type":"BinaryExpression","start":10210,"end":10220,"left":{"type":"Identifier","start":10210,"end":10211,"name":"c"},"operator":"===","right":{"type":"Literal","start":10216,"end":10220,"value":"\n","raw":"'\\n'"}}}},"consequent":{"type":"BlockStatement","start":10223,"end":10270,"body":[{"type":"ReturnStatement","start":10242,"end":10255,"argument":{"type":"Literal","start":10249,"end":10254,"value":false,"raw":"false"}}]},"alternate":null}]}},{"type":"ReturnStatement","start":10291,"end":10303,"argument":{"type":"Literal","start":10298,"end":10302,"value":true,"raw":"true"}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":10315,"end":36609}]},"code":"/**\r\n * An XmlSerializer that supports formatting.\r\n * Original code is based on [xmldom](https://www.npmjs.com/package/xmldom)\r\n * It is extended to support formatting including handling of elements with mixed content.\r\n * Example formatted output:\r\n * <pre>\r\n *     <doc>\r\n *         <element>An element with\r\n *             <b>mixed</b>\r\n *              content\r\n *         </element>\r\n *     </doc>\r\n * </pre>\r\n * Same when \"element\" is indicated as \"mixedContentElement\":\r\n * <pre>\r\n *     <doc>\r\n *         <element>An element with <b>mixed</b> content</element>\r\n *     </doc>\r\n * </pre>\r\n */\r\nconst DEFAULT_INDENT_STRING = '  ';\r\nexport class XmlSerializer {\r\n    constructor() {\r\n    }\r\n    /**\r\n     * Serialze xml document to string.\r\n     * @param document the document\r\n     * @param options can be used to activate beautifying.\r\n     */\r\n    serializeToString(document, options) {\r\n        const buf = [];\r\n        let visibleNamespaces = [];\r\n        const refNode = document.documentElement;\r\n        let prefix = refNode.prefix;\r\n        const uri = refNode.namespaceURI;\r\n        if (uri && prefix == null) {\r\n            prefix = refNode.lookupPrefix(uri);\r\n            if (prefix == null) {\r\n                visibleNamespaces = [\r\n                    { namespace: uri, prefix: null }\r\n                    // {namespace:uri,prefix:''}\r\n                ];\r\n            }\r\n        }\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        if (options.indentString) {\r\n            if (!this.containsOnlyWhiteSpace(options.indentString)) {\r\n                throw new Error('indentString must not contain non white characters');\r\n            }\r\n        }\r\n        this.doSerializeToString(document, options, buf, 0, false, visibleNamespaces);\r\n        return buf.join('');\r\n    }\r\n    /**\r\n     * Main format method that does all the work.\r\n     * Outputs a node to the outputbuffer.\r\n     * @param node the node to be formatted.\r\n     * @param options options\r\n     * @param buf outputbuffer, new output will be appended to this array.\r\n     * @param indentLevel Lever of indentation for formatted output.\r\n     * @param partOfMixedContent true, if node is a subelement of an element containind mixed content.\r\n     * @param visibleNamespaces visibleNamespaces\r\n     */\r\n    doSerializeToString(node, options, buf, indentLevel, partOfMixedContent, visibleNamespaces) {\r\n        let child;\r\n        switch (node.nodeType) {\r\n            case node.ELEMENT_NODE:\r\n                const elementNode = node;\r\n                const attrs = elementNode.attributes;\r\n                const len = attrs.length;\r\n                child = elementNode.firstChild;\r\n                const nodeName = elementNode.tagName;\r\n                const elementHasMixedContent = this.isMixedContentElement(nodeName, options);\r\n                if (partOfMixedContent) {\r\n                    buf.push('<', nodeName);\r\n                }\r\n                else {\r\n                    this.outputIndented(options, buf, indentLevel, '<', nodeName);\r\n                }\r\n                for (let i = 0; i < len; i++) {\r\n                    // add namespaces for attributes\r\n                    const attr = attrs.item(i);\r\n                    if (attr.prefix === 'xmlns') {\r\n                        visibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\r\n                    }\r\n                    else if (attr.nodeName === 'xmlns') {\r\n                        visibleNamespaces.push({ prefix: '', namespace: attr.value });\r\n                    }\r\n                }\r\n                for (let i = 0; i < len; i++) {\r\n                    const attr = attrs.item(i);\r\n                    if (this.needNamespaceDefine(attr, visibleNamespaces)) {\r\n                        const prefix = attr.prefix || '';\r\n                        const uri = attr.namespaceURI;\r\n                        const ns = prefix ? ' xmlns:' + prefix : ' xmlns';\r\n                        buf.push(ns, '=\"', uri, '\"');\r\n                        visibleNamespaces.push({ prefix: prefix, namespace: uri });\r\n                    }\r\n                    this.doSerializeToString(attr, options, buf, indentLevel, false, visibleNamespaces);\r\n                }\r\n                // add namespace for current node\r\n                if (this.needNamespaceDefine(elementNode, visibleNamespaces)) {\r\n                    const prefix = elementNode.prefix || '';\r\n                    const uri = elementNode.namespaceURI;\r\n                    const ns = prefix ? ' xmlns:' + prefix : ' xmlns';\r\n                    buf.push(ns, '=\"', uri, '\"');\r\n                    visibleNamespaces.push({ prefix: prefix, namespace: uri });\r\n                }\r\n                if (child) {\r\n                    buf.push('>');\r\n                    // if is cdata child node\r\n                    let hasComplexContent = false;\r\n                    while (child) {\r\n                        if (child.nodeType === child.ELEMENT_NODE) {\r\n                            hasComplexContent = true;\r\n                        }\r\n                        this.doSerializeToString(child, options, buf, indentLevel + 1, partOfMixedContent || elementHasMixedContent, visibleNamespaces);\r\n                        child = child.nextSibling;\r\n                    }\r\n                    if (!partOfMixedContent && !elementHasMixedContent && hasComplexContent) {\r\n                        this.outputIndented(options, buf, indentLevel, '</', nodeName, '>');\r\n                    }\r\n                    else {\r\n                        buf.push('</', nodeName, '>');\r\n                    }\r\n                }\r\n                else {\r\n                    buf.push('/>');\r\n                }\r\n                return;\r\n            case node.DOCUMENT_NODE:\r\n            case node.DOCUMENT_FRAGMENT_NODE:\r\n                child = node.firstChild;\r\n                while (child) {\r\n                    this.doSerializeToString(child, options, buf, indentLevel, false, visibleNamespaces);\r\n                    child = child.nextSibling;\r\n                }\r\n                return;\r\n            case node.ATTRIBUTE_NODE:\r\n                const attrNode = node;\r\n                return buf.push(' ', attrNode.name, '=\"', attrNode.value.replace(/[<&\"]/g, this._xmlEncoder), '\"');\r\n            case node.TEXT_NODE:\r\n                const textNode = node;\r\n                if (!options.beautify || partOfMixedContent || !this.containsOnlyWhiteSpace(textNode.data)) {\r\n                    return buf.push(textNode.data.replace(/[<&]/g, this._xmlEncoder));\r\n                }\r\n                return;\r\n            case node.CDATA_SECTION_NODE:\r\n                const cdatasectionNode = node;\r\n                return buf.push('<![CDATA[', cdatasectionNode.data, ']]>');\r\n            case node.COMMENT_NODE:\r\n                const commentNode = node;\r\n                return buf.push('<!--', commentNode.data, '-->');\r\n            case node.DOCUMENT_TYPE_NODE:\r\n                const documenttypeNode = node;\r\n                const pubid = documenttypeNode.publicId;\r\n                const sysid = documenttypeNode.systemId;\r\n                buf.push('<!DOCTYPE ', documenttypeNode.name);\r\n                if (pubid) {\r\n                    buf.push(' PUBLIC \"', pubid);\r\n                    if (sysid && sysid !== '.') {\r\n                        buf.push('\" \"', sysid);\r\n                    }\r\n                    buf.push('\">');\r\n                }\r\n                else if (sysid && sysid !== '.') {\r\n                    buf.push(' SYSTEM \"', sysid, '\">');\r\n                }\r\n                else {\r\n                    buf.push('>');\r\n                }\r\n                return;\r\n            case node.PROCESSING_INSTRUCTION_NODE:\r\n                const piNode = node;\r\n                return buf.push('<?', piNode.target, ' ', piNode.data, '?>');\r\n            case node.ENTITY_REFERENCE_NODE:\r\n                return buf.push('&', node.nodeName, ';');\r\n            // case ENTITY_NODE:\r\n            // case NOTATION_NODE:\r\n            default:\r\n                buf.push('??', node.nodeName);\r\n        }\r\n    }\r\n    needNamespaceDefine(node, visibleNamespaces) {\r\n        const prefix = node.prefix || '';\r\n        const uri = node.namespaceURI;\r\n        if (!prefix && !uri) {\r\n            return false;\r\n        }\r\n        if (prefix === 'xml' && uri === 'http://www.w3.org/XML/1998/namespace'\r\n            || uri === 'http://www.w3.org/2000/xmlns/') {\r\n            return false;\r\n        }\r\n        let i = visibleNamespaces.length;\r\n        while (i--) {\r\n            const ns = visibleNamespaces[i];\r\n            // get namespace prefix\r\n            if (ns.prefix === prefix) {\r\n                return ns.namespace !== uri;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    _xmlEncoder(c) {\r\n        return c === '<' && '&lt;' ||\r\n            c === '>' && '&gt;' ||\r\n            c === '&' && '&amp;' ||\r\n            c === '\"' && '&quot;' ||\r\n            '&#' + c.charCodeAt(0) + ';';\r\n    }\r\n    outputIndented(options, buf, indentLevel, ...outputParts) {\r\n        if (options.beautify) {\r\n            buf.push('\\n');\r\n            if (indentLevel > 0) {\r\n                buf.push(this.indentationString(options, indentLevel));\r\n            }\r\n        }\r\n        buf.push(...outputParts);\r\n    }\r\n    indentationString(options, indentLevel) {\r\n        const indent = (options.indentString) ? options.indentString : DEFAULT_INDENT_STRING;\r\n        let result = '';\r\n        for (let i = 0; i < indentLevel; i++) {\r\n            result = result + indent;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Test, wether tagName is an element containing mixed content.\r\n     * @param tagName tagName\r\n     * @param options options\r\n     */\r\n    isMixedContentElement(tagName, options) {\r\n        if (options && options.mixedContentElements) {\r\n            return !!options.mixedContentElements.find((tag) => tag === tagName);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    containsOnlyWhiteSpace(text) {\r\n        for (let i = 0; i < text.length; i++) {\r\n            const c = text.charAt(i);\r\n            if (!(c === ' ' || c === '\\t' || c === '\\r' || c === '\\n')) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":[],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xml-serializer.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * An XmlSerializer that supports formatting.\r\n * Original code is based on [xmldom](https://www.npmjs.com/package/xmldom)\r\n * It is extended to support formatting including handling of elements with mixed content.\r\n * Example formatted output:\r\n * <pre>\r\n *     <doc>\r\n *         <element>An element with\r\n *             <b>mixed</b>\r\n *              content\r\n *         </element>\r\n *     </doc>\r\n * </pre>\r\n * Same when \"element\" is indicated as \"mixedContentElement\":\r\n * <pre>\r\n *     <doc>\r\n *         <element>An element with <b>mixed</b> content</element>\r\n *     </doc>\r\n * </pre>\r\n */\r\nconst DEFAULT_INDENT_STRING = '  ';\r\nexport class XmlSerializer {\r\n    constructor() {\r\n    }\r\n    /**\r\n     * Serialze xml document to string.\r\n     * @param document the document\r\n     * @param options can be used to activate beautifying.\r\n     */\r\n    serializeToString(document, options) {\r\n        const buf = [];\r\n        let visibleNamespaces = [];\r\n        const refNode = document.documentElement;\r\n        let prefix = refNode.prefix;\r\n        const uri = refNode.namespaceURI;\r\n        if (uri && prefix == null) {\r\n            prefix = refNode.lookupPrefix(uri);\r\n            if (prefix == null) {\r\n                visibleNamespaces = [\r\n                    { namespace: uri, prefix: null }\r\n                    // {namespace:uri,prefix:''}\r\n                ];\r\n            }\r\n        }\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        if (options.indentString) {\r\n            if (!this.containsOnlyWhiteSpace(options.indentString)) {\r\n                throw new Error('indentString must not contain non white characters');\r\n            }\r\n        }\r\n        this.doSerializeToString(document, options, buf, 0, false, visibleNamespaces);\r\n        return buf.join('');\r\n    }\r\n    /**\r\n     * Main format method that does all the work.\r\n     * Outputs a node to the outputbuffer.\r\n     * @param node the node to be formatted.\r\n     * @param options options\r\n     * @param buf outputbuffer, new output will be appended to this array.\r\n     * @param indentLevel Lever of indentation for formatted output.\r\n     * @param partOfMixedContent true, if node is a subelement of an element containind mixed content.\r\n     * @param visibleNamespaces visibleNamespaces\r\n     */\r\n    doSerializeToString(node, options, buf, indentLevel, partOfMixedContent, visibleNamespaces) {\r\n        let child;\r\n        switch (node.nodeType) {\r\n            case node.ELEMENT_NODE:\r\n                const elementNode = node;\r\n                const attrs = elementNode.attributes;\r\n                const len = attrs.length;\r\n                child = elementNode.firstChild;\r\n                const nodeName = elementNode.tagName;\r\n                const elementHasMixedContent = this.isMixedContentElement(nodeName, options);\r\n                if (partOfMixedContent) {\r\n                    buf.push('<', nodeName);\r\n                }\r\n                else {\r\n                    this.outputIndented(options, buf, indentLevel, '<', nodeName);\r\n                }\r\n                for (let i = 0; i < len; i++) {\r\n                    // add namespaces for attributes\r\n                    const attr = attrs.item(i);\r\n                    if (attr.prefix === 'xmlns') {\r\n                        visibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\r\n                    }\r\n                    else if (attr.nodeName === 'xmlns') {\r\n                        visibleNamespaces.push({ prefix: '', namespace: attr.value });\r\n                    }\r\n                }\r\n                for (let i = 0; i < len; i++) {\r\n                    const attr = attrs.item(i);\r\n                    if (this.needNamespaceDefine(attr, visibleNamespaces)) {\r\n                        const prefix = attr.prefix || '';\r\n                        const uri = attr.namespaceURI;\r\n                        const ns = prefix ? ' xmlns:' + prefix : ' xmlns';\r\n                        buf.push(ns, '=\"', uri, '\"');\r\n                        visibleNamespaces.push({ prefix: prefix, namespace: uri });\r\n                    }\r\n                    this.doSerializeToString(attr, options, buf, indentLevel, false, visibleNamespaces);\r\n                }\r\n                // add namespace for current node\r\n                if (this.needNamespaceDefine(elementNode, visibleNamespaces)) {\r\n                    const prefix = elementNode.prefix || '';\r\n                    const uri = elementNode.namespaceURI;\r\n                    const ns = prefix ? ' xmlns:' + prefix : ' xmlns';\r\n                    buf.push(ns, '=\"', uri, '\"');\r\n                    visibleNamespaces.push({ prefix: prefix, namespace: uri });\r\n                }\r\n                if (child) {\r\n                    buf.push('>');\r\n                    // if is cdata child node\r\n                    let hasComplexContent = false;\r\n                    while (child) {\r\n                        if (child.nodeType === child.ELEMENT_NODE) {\r\n                            hasComplexContent = true;\r\n                        }\r\n                        this.doSerializeToString(child, options, buf, indentLevel + 1, partOfMixedContent || elementHasMixedContent, visibleNamespaces);\r\n                        child = child.nextSibling;\r\n                    }\r\n                    if (!partOfMixedContent && !elementHasMixedContent && hasComplexContent) {\r\n                        this.outputIndented(options, buf, indentLevel, '</', nodeName, '>');\r\n                    }\r\n                    else {\r\n                        buf.push('</', nodeName, '>');\r\n                    }\r\n                }\r\n                else {\r\n                    buf.push('/>');\r\n                }\r\n                return;\r\n            case node.DOCUMENT_NODE:\r\n            case node.DOCUMENT_FRAGMENT_NODE:\r\n                child = node.firstChild;\r\n                while (child) {\r\n                    this.doSerializeToString(child, options, buf, indentLevel, false, visibleNamespaces);\r\n                    child = child.nextSibling;\r\n                }\r\n                return;\r\n            case node.ATTRIBUTE_NODE:\r\n                const attrNode = node;\r\n                return buf.push(' ', attrNode.name, '=\"', attrNode.value.replace(/[<&\"]/g, this._xmlEncoder), '\"');\r\n            case node.TEXT_NODE:\r\n                const textNode = node;\r\n                if (!options.beautify || partOfMixedContent || !this.containsOnlyWhiteSpace(textNode.data)) {\r\n                    return buf.push(textNode.data.replace(/[<&]/g, this._xmlEncoder));\r\n                }\r\n                return;\r\n            case node.CDATA_SECTION_NODE:\r\n                const cdatasectionNode = node;\r\n                return buf.push('<![CDATA[', cdatasectionNode.data, ']]>');\r\n            case node.COMMENT_NODE:\r\n                const commentNode = node;\r\n                return buf.push('<!--', commentNode.data, '-->');\r\n            case node.DOCUMENT_TYPE_NODE:\r\n                const documenttypeNode = node;\r\n                const pubid = documenttypeNode.publicId;\r\n                const sysid = documenttypeNode.systemId;\r\n                buf.push('<!DOCTYPE ', documenttypeNode.name);\r\n                if (pubid) {\r\n                    buf.push(' PUBLIC \"', pubid);\r\n                    if (sysid && sysid !== '.') {\r\n                        buf.push('\" \"', sysid);\r\n                    }\r\n                    buf.push('\">');\r\n                }\r\n                else if (sysid && sysid !== '.') {\r\n                    buf.push(' SYSTEM \"', sysid, '\">');\r\n                }\r\n                else {\r\n                    buf.push('>');\r\n                }\r\n                return;\r\n            case node.PROCESSING_INSTRUCTION_NODE:\r\n                const piNode = node;\r\n                return buf.push('<?', piNode.target, ' ', piNode.data, '?>');\r\n            case node.ENTITY_REFERENCE_NODE:\r\n                return buf.push('&', node.nodeName, ';');\r\n            // case ENTITY_NODE:\r\n            // case NOTATION_NODE:\r\n            default:\r\n                buf.push('??', node.nodeName);\r\n        }\r\n    }\r\n    needNamespaceDefine(node, visibleNamespaces) {\r\n        const prefix = node.prefix || '';\r\n        const uri = node.namespaceURI;\r\n        if (!prefix && !uri) {\r\n            return false;\r\n        }\r\n        if (prefix === 'xml' && uri === 'http://www.w3.org/XML/1998/namespace'\r\n            || uri === 'http://www.w3.org/2000/xmlns/') {\r\n            return false;\r\n        }\r\n        let i = visibleNamespaces.length;\r\n        while (i--) {\r\n            const ns = visibleNamespaces[i];\r\n            // get namespace prefix\r\n            if (ns.prefix === prefix) {\r\n                return ns.namespace !== uri;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    _xmlEncoder(c) {\r\n        return c === '<' && '&lt;' ||\r\n            c === '>' && '&gt;' ||\r\n            c === '&' && '&amp;' ||\r\n            c === '\"' && '&quot;' ||\r\n            '&#' + c.charCodeAt(0) + ';';\r\n    }\r\n    outputIndented(options, buf, indentLevel, ...outputParts) {\r\n        if (options.beautify) {\r\n            buf.push('\\n');\r\n            if (indentLevel > 0) {\r\n                buf.push(this.indentationString(options, indentLevel));\r\n            }\r\n        }\r\n        buf.push(...outputParts);\r\n    }\r\n    indentationString(options, indentLevel) {\r\n        const indent = (options.indentString) ? options.indentString : DEFAULT_INDENT_STRING;\r\n        let result = '';\r\n        for (let i = 0; i < indentLevel; i++) {\r\n            result = result + indent;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Test, wether tagName is an element containing mixed content.\r\n     * @param tagName tagName\r\n     * @param options options\r\n     */\r\n    isMixedContentElement(tagName, options) {\r\n        if (options && options.mixedContentElements) {\r\n            return !!options.mixedContentElements.find((tag) => tag === tagName);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    containsOnlyWhiteSpace(text) {\r\n        for (let i = 0; i < text.length; i++) {\r\n            const c = text.charAt(i);\r\n            if (!(c === ' ' || c === '\\t' || c === '\\r' || c === '\\n')) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"xml-serializer.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/xml-serializer.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[3,0,19,3]],[[0,0,35,0],[6,0,35,6],[27,0,35,27],[30,0,35,30],[34,0,35,34],[35,0,35,35]],[[0,0,37,0],[6,0,37,6],[13,0,37,13],[26,0,37,26]],[[4,0,39,4]],[[4,0,41,4],[5,0,41,5]],[[4,0,43,4]],[],[],[],[[7,0,47,7]],[[4,0,48,4],[21,0,48,21],[22,0,48,22],[30,0,48,40],[32,0,48,42],[39,0,48,72]],[[8,0,49,8],[14,0,49,14],[17,0,49,17],[20,0,49,20],[22,0,49,22],[23,0,49,23]],[[8,0,50,8],[12,0,50,12],[29,0,50,29],[32,0,50,45],[34,0,50,47],[35,0,50,48]],[[8,0,51,8],[14,0,51,14],[21,0,51,21],[24,0,51,24],[32,0,51,32],[33,0,51,33],[48,0,51,48],[49,0,51,49]],[[8,0,52,8],[12,0,52,12],[18,0,52,18],[21,0,52,21],[28,0,52,28],[29,0,52,29],[35,0,52,35],[36,0,52,36]],[[8,0,53,8],[14,0,53,14],[17,0,53,17],[20,0,53,20],[27,0,53,27],[28,0,53,28],[40,0,53,40],[41,0,53,41]],[[8,0,55,8],[12,0,55,12],[15,0,55,15],[19,0,55,19],[25,0,55,25],[29,0,55,29],[33,0,55,33],[35,0,55,35]],[[12,0,56,12],[18,0,56,18],[21,0,56,21],[28,0,56,28],[29,0,56,29],[41,0,56,41],[42,0,56,42],[45,0,56,45],[46,0,56,46],[47,0,56,47]],[[12,0,57,12],[16,0,57,16],[22,0,57,22],[26,0,57,26],[30,0,57,30],[32,0,57,32]],[[16,0,58,16],[33,0,58,33],[36,0,58,36]],[[20,0,59,20],[22,0,59,21],[31,0,59,30],[33,0,59,32],[36,0,59,35],[38,0,59,37],[44,0,59,43],[46,0,59,45],[50,0,59,49],[52,0,59,50]],[[20,0,60,20],[48,0,60,48]],[[17,0,61,17],[18,0,61,18]],[[13,0,62,13]],[[9,0,63,9]],[[8,0,64,8],[12,0,64,12],[13,0,64,13],[20,0,64,20],[22,0,64,22]],[[12,0,65,12],[19,0,65,19],[22,0,65,22],[24,0,65,24],[25,0,65,25]],[[9,0,66,9]],[[8,0,67,8],[12,0,67,12],[19,0,67,19],[20,0,67,20],[32,0,67,32],[34,0,67,34]],[[12,0,68,12],[16,0,68,16],[17,0,68,17],[21,0,68,21],[22,0,68,22],[44,0,68,44],[45,0,68,45],[52,0,68,52],[53,0,68,53],[65,0,68,65],[66,0,68,66],[68,0,68,68]],[[16,0,69,16],[22,0,69,22],[26,0,69,26],[31,0,69,31],[32,0,69,32],[84,0,69,84],[85,0,69,85],[86,0,69,86]],[[13,0,70,13]],[[9,0,71,9]],[[8,0,72,8],[12,0,72,12],[13,0,72,13],[32,0,72,32],[33,0,72,33],[41,0,72,41],[43,0,72,43],[50,0,72,50],[52,0,72,52],[55,0,72,55],[57,0,72,57],[58,0,72,58],[60,0,72,60],[65,0,72,65],[67,0,72,67],[84,0,72,84],[85,0,72,85],[86,0,72,86]],[[8,0,73,8],[15,0,73,15],[18,0,73,18],[19,0,73,19],[23,0,73,23],[24,0,73,24],[26,0,73,26],[27,0,73,27],[28,0,73,28]],[[4,0,74,4],[5,0,74,5]],[[4,0,76,4]],[],[],[],[],[],[],[],[],[[7,0,85,7]],[[4,0,86,12],[23,0,86,31],[24,0,86,32],[28,0,86,42],[30,0,86,44],[37,0,86,73],[39,0,86,75],[42,0,86,88],[44,0,87,32],[55,0,87,51],[57,0,87,53],[75,0,87,80],[77,0,87,82],[94,0,87,112]],[[8,0,88,8],[12,0,88,12],[17,0,88,23],[18,0,88,24]],[[8,0,89,8],[16,0,89,16],[20,0,89,20],[21,0,89,21],[29,0,89,29],[31,0,89,31]],[[12,0,90,12],[17,0,90,17],[21,0,90,21],[22,0,90,22],[34,0,90,34]],[[16,0,91,16],[22,0,91,22],[33,0,91,33],[36,0,91,55],[40,0,91,59],[41,0,91,60]],[[16,0,92,16],[22,0,92,22],[27,0,92,27],[30,0,92,30],[41,0,92,41],[42,0,92,42],[52,0,92,52],[53,0,92,53]],[[16,0,93,16],[22,0,93,22],[25,0,93,25],[28,0,93,28],[33,0,93,33],[34,0,93,34],[40,0,93,40],[41,0,93,41]],[[16,0,94,16],[21,0,94,21],[24,0,94,24],[35,0,94,35],[36,0,94,36],[46,0,94,46],[47,0,94,47]],[[16,0,95,16],[22,0,95,22],[30,0,95,30],[33,0,95,33],[44,0,95,44],[45,0,95,45],[52,0,95,52],[53,0,95,53]],[[16,0,96,16],[22,0,96,22],[44,0,96,44],[47,0,96,47],[51,0,96,51],[52,0,96,52],[73,0,96,73],[74,0,96,74],[82,0,96,82],[84,0,96,84],[91,0,96,91],[92,0,96,92],[93,0,96,93]],[[16,0,97,16],[20,0,97,20],[38,0,97,38],[40,0,97,40]],[[20,0,98,20],[23,0,98,23],[24,0,98,24],[28,0,98,28],[29,0,98,29],[32,0,98,32],[34,0,98,35],[42,0,98,43],[43,0,98,44],[44,0,98,45]],[[17,0,99,17]],[[21,0,99,23]],[[20,0,100,20],[24,0,100,24],[25,0,100,25],[39,0,100,39],[40,0,100,40],[47,0,100,47],[49,0,100,49],[52,0,100,52],[54,0,100,54],[65,0,100,65],[67,0,100,67],[70,0,100,70],[72,0,100,73],[80,0,100,81],[81,0,100,82],[82,0,100,83]],[[17,0,101,17]],[[16,0,103,16],[21,0,103,21],[25,0,103,25],[26,0,103,26],[29,0,103,29],[30,0,103,30],[32,0,103,32],[33,0,103,33],[36,0,103,36],[39,0,103,39],[41,0,103,41],[42,0,103,42],[44,0,103,44],[46,0,103,46]],[[20,0,104,20],[52,0,104,52]],[[20,0,105,20],[26,0,105,26],[30,0,105,30],[33,0,105,33],[38,0,105,38],[39,0,105,39],[43,0,105,43],[44,0,105,44],[45,0,105,45],[46,0,105,46],[47,0,105,47]],[[20,0,106,20],[24,0,106,24],[28,0,106,28],[29,0,106,29],[35,0,106,35],[40,0,106,40],[47,0,106,47],[49,0,106,49]],[[24,0,107,24],[41,0,107,41],[42,0,107,42],[46,0,107,46],[47,0,107,47],[49,0,107,48],[55,0,107,54],[57,0,107,56],[61,0,107,60],[62,0,107,61],[71,0,107,70],[73,0,107,72],[82,0,107,81],[84,0,107,83],[88,0,107,87],[89,0,107,88],[94,0,107,93],[96,0,107,94],[97,0,107,95],[98,0,107,96]],[[21,0,108,21]],[[25,0,108,27],[29,0,108,31],[33,0,108,35],[34,0,108,36],[42,0,108,44],[47,0,108,49],[54,0,108,56],[56,0,108,58]],[[24,0,109,24],[41,0,109,41],[42,0,109,42],[46,0,109,46],[47,0,109,47],[49,0,109,48],[55,0,109,54],[57,0,109,56],[59,0,109,58],[61,0,109,60],[70,0,109,69],[72,0,109,71],[76,0,109,75],[77,0,109,76],[82,0,109,81],[84,0,109,82],[85,0,109,83],[86,0,109,84]],[[21,0,110,21]],[[17,0,111,17]],[[16,0,112,16],[21,0,112,21],[25,0,112,25],[26,0,112,26],[29,0,112,29],[30,0,112,30],[32,0,112,32],[33,0,112,33],[36,0,112,36],[39,0,112,39],[41,0,112,41],[42,0,112,42],[44,0,112,44],[46,0,112,46]],[[20,0,113,20],[26,0,113,26],[30,0,113,30],[33,0,113,33],[38,0,113,38],[39,0,113,39],[43,0,113,43],[44,0,113,44],[45,0,113,45],[46,0,113,46],[47,0,113,47]],[[20,0,114,20],[24,0,114,24],[28,0,114,28],[29,0,114,29],[48,0,114,48],[49,0,114,49],[53,0,114,53],[55,0,114,55],[72,0,114,72],[73,0,114,73],[75,0,114,75]],[[24,0,115,24],[30,0,115,30],[36,0,115,36],[39,0,115,39],[43,0,115,43],[44,0,115,44],[50,0,115,50],[54,0,115,54],[56,0,115,56],[57,0,115,57]],[[24,0,116,24],[30,0,116,30],[33,0,116,33],[36,0,116,36],[40,0,116,40],[41,0,116,41],[53,0,116,53],[54,0,116,54]],[[24,0,117,24],[30,0,117,30],[32,0,117,32],[35,0,117,35],[41,0,117,41],[42,0,117,42],[43,0,117,43],[44,0,117,44],[53,0,117,53],[56,0,117,56],[62,0,117,62],[63,0,117,63],[64,0,117,64],[65,0,117,65],[73,0,117,73],[74,0,117,74]],[[24,0,118,24],[27,0,118,27],[28,0,118,28],[32,0,118,32],[33,0,118,33],[35,0,118,35],[37,0,118,37],[41,0,118,41],[43,0,118,43],[46,0,118,46],[48,0,118,48],[51,0,118,51],[52,0,118,52],[53,0,118,53]],[[24,0,119,24],[41,0,119,41],[42,0,119,42],[46,0,119,46],[47,0,119,47],[49,0,119,48],[55,0,119,54],[57,0,119,56],[63,0,119,62],[65,0,119,64],[74,0,119,73],[76,0,119,75],[79,0,119,78],[81,0,119,79],[82,0,119,80],[83,0,119,81]],[[21,0,120,21]],[[20,0,121,20],[24,0,121,24],[25,0,121,25],[44,0,121,44],[45,0,121,45],[49,0,121,49],[51,0,121,51],[58,0,121,58],[60,0,121,60],[63,0,121,63],[65,0,121,65],[76,0,121,76],[78,0,121,78],[83,0,121,83],[85,0,121,85],[102,0,121,102],[103,0,121,103],[104,0,121,104]],[[17,0,122,17]],[[16,0,123,16],[49,0,123,49]],[[16,0,124,16],[20,0,124,20],[24,0,124,24],[25,0,124,25],[44,0,124,44],[45,0,124,45],[56,0,124,56],[58,0,124,58],[75,0,124,75],[76,0,124,76],[78,0,124,78]],[[20,0,125,20],[26,0,125,26],[32,0,125,32],[35,0,125,35],[46,0,125,46],[47,0,125,47],[53,0,125,53],[57,0,125,57],[59,0,125,59],[60,0,125,60]],[[20,0,126,20],[26,0,126,26],[29,0,126,29],[32,0,126,32],[43,0,126,43],[44,0,126,44],[56,0,126,56],[57,0,126,57]],[[20,0,127,20],[26,0,127,26],[28,0,127,28],[31,0,127,31],[37,0,127,37],[38,0,127,38],[39,0,127,39],[40,0,127,40],[49,0,127,49],[52,0,127,52],[58,0,127,58],[59,0,127,59],[60,0,127,60],[61,0,127,61],[69,0,127,69],[70,0,127,70]],[[20,0,128,20],[23,0,128,23],[24,0,128,24],[28,0,128,28],[29,0,128,29],[31,0,128,31],[33,0,128,33],[37,0,128,37],[39,0,128,39],[42,0,128,42],[44,0,128,44],[47,0,128,47],[48,0,128,48],[49,0,128,49]],[[20,0,129,20],[37,0,129,37],[38,0,129,38],[42,0,129,42],[43,0,129,43],[45,0,129,44],[51,0,129,50],[53,0,129,52],[59,0,129,58],[61,0,129,60],[70,0,129,69],[72,0,129,71],[75,0,129,74],[77,0,129,75],[78,0,129,76],[79,0,129,77]],[[17,0,130,17]],[[16,0,132,16],[20,0,132,20],[25,0,132,25],[27,0,132,27]],[[20,0,133,20],[23,0,133,23],[24,0,133,24],[28,0,133,28],[29,0,133,29],[32,0,133,32],[33,0,133,33],[34,0,133,34]],[[20,0,134,20],[45,0,134,45]],[[20,0,135,20],[24,0,135,24],[41,0,135,41],[44,0,135,44],[49,0,135,49],[50,0,135,50]],[[20,0,136,20],[27,0,136,27],[32,0,136,32],[34,0,136,34]],[[24,0,137,24],[28,0,137,28],[33,0,137,33],[34,0,137,34],[42,0,137,42],[47,0,137,47],[52,0,137,52],[53,0,137,53],[65,0,137,65],[67,0,137,67]],[[28,0,138,28],[45,0,138,45],[48,0,138,48],[52,0,138,52],[53,0,138,53]],[[25,0,139,25]],[[24,0,140,24],[28,0,140,28],[29,0,140,29],[48,0,140,48],[49,0,140,49],[54,0,140,54],[56,0,140,56],[63,0,140,63],[65,0,140,65],[68,0,140,68],[70,0,140,70],[81,0,140,81],[84,0,140,84],[85,0,140,85],[87,0,141,28],[105,0,141,46],[109,0,141,50],[131,0,141,72],[133,0,141,74],[150,0,141,91],[151,0,141,92],[152,0,141,93]],[[24,0,142,24],[29,0,142,29],[32,0,142,32],[37,0,142,37],[38,0,142,38],[49,0,142,49],[50,0,142,50]],[[21,0,143,21]],[[20,0,144,20],[24,0,144,24],[25,0,144,25],[43,0,144,43],[47,0,144,47],[48,0,144,48],[70,0,144,70],[74,0,144,74],[91,0,144,91],[93,0,144,93]],[[24,0,145,24],[28,0,145,28],[29,0,145,29],[43,0,145,43],[44,0,145,44],[51,0,145,51],[53,0,145,53],[56,0,145,56],[58,0,145,58],[69,0,145,69],[71,0,145,71],[75,0,145,75],[77,0,145,77],[85,0,145,85],[87,0,145,87],[90,0,145,90],[91,0,145,91],[92,0,145,92]],[[21,0,146,21]],[[25,0,146,27]],[[24,0,147,24],[27,0,147,27],[28,0,147,28],[32,0,147,32],[33,0,147,33],[37,0,147,37],[39,0,147,39],[47,0,147,47],[49,0,147,49],[52,0,147,52],[53,0,147,53],[54,0,147,54]],[[21,0,148,21]],[[17,0,149,17]],[[21,0,149,23]],[[20,0,150,20],[23,0,150,23],[24,0,150,24],[28,0,150,28],[29,0,150,29],[33,0,150,33],[34,0,150,34],[35,0,150,35]],[[17,0,151,17]],[[16,0,152,16],[23,0,152,23]],[[12,0,153,12],[17,0,153,17],[21,0,153,21],[22,0,153,22],[35,0,153,35],[36,0,153,36]],[[12,0,154,12],[17,0,154,17],[21,0,154,21],[22,0,154,22],[44,0,154,44]],[[16,0,155,16],[21,0,155,21],[24,0,155,24],[28,0,155,28],[29,0,155,29],[39,0,155,39],[40,0,155,40]],[[16,0,156,16],[23,0,156,23],[28,0,156,28],[30,0,156,30]],[[20,0,157,20],[24,0,157,24],[25,0,157,25],[44,0,157,44],[45,0,157,45],[50,0,157,50],[52,0,157,52],[59,0,157,59],[61,0,157,61],[64,0,157,64],[66,0,157,66],[77,0,157,77],[79,0,157,79],[84,0,157,84],[86,0,157,86],[103,0,157,103],[104,0,157,104],[105,0,157,105]],[[20,0,158,20],[25,0,158,25],[28,0,158,28],[33,0,158,33],[34,0,158,34],[45,0,158,45],[46,0,158,46]],[[17,0,159,17]],[[16,0,160,16],[23,0,160,23]],[[12,0,161,12],[17,0,161,17],[21,0,161,21],[22,0,161,22],[36,0,161,36]],[[16,0,162,16],[22,0,162,22],[30,0,162,30],[33,0,162,40],[37,0,162,44],[38,0,162,45]],[[16,0,163,16],[23,0,163,23],[26,0,163,26],[27,0,163,27],[31,0,163,31],[32,0,163,32],[35,0,163,35],[37,0,163,37],[45,0,163,45],[46,0,163,46],[50,0,163,50],[52,0,163,52],[56,0,163,56],[58,0,163,58],[66,0,163,66],[67,0,163,67],[72,0,163,72],[73,0,163,73],[80,0,163,80],[81,0,163,81],[89,0,163,89],[91,0,163,91],[95,0,163,95],[96,0,163,96],[107,0,163,107],[108,0,163,108],[110,0,163,110],[113,0,163,113],[114,0,163,114],[115,0,163,115]],[[12,0,164,12],[17,0,164,17],[21,0,164,21],[22,0,164,22],[31,0,164,31]],[[16,0,165,16],[22,0,165,22],[30,0,165,30],[33,0,165,40],[37,0,165,44],[38,0,165,45]],[[16,0,166,16],[20,0,166,20],[21,0,166,21],[28,0,166,28],[29,0,166,29],[37,0,166,37],[41,0,166,41],[59,0,166,59],[63,0,166,63],[64,0,166,64],[68,0,166,68],[69,0,166,69],[91,0,166,91],[92,0,166,92],[100,0,166,100],[101,0,166,101],[105,0,166,105],[106,0,166,106],[108,0,166,108]],[[20,0,167,20],[27,0,167,27],[30,0,167,30],[31,0,167,31],[35,0,167,35],[36,0,167,36],[44,0,167,44],[45,0,167,45],[49,0,167,49],[50,0,167,50],[57,0,167,57],[58,0,167,58],[65,0,167,65],[67,0,167,67],[71,0,167,71],[72,0,167,72],[83,0,167,83],[84,0,167,84],[85,0,167,85],[86,0,167,86]],[[17,0,168,17]],[[16,0,169,16],[23,0,169,23]],[[12,0,170,12],[17,0,170,17],[21,0,170,21],[22,0,170,22],[40,0,170,40]],[[16,0,171,16],[22,0,171,22],[38,0,171,38],[41,0,171,56],[45,0,171,60],[46,0,171,61]],[[16,0,172,16],[23,0,172,23],[26,0,172,26],[27,0,172,27],[31,0,172,31],[32,0,172,32],[43,0,172,43],[45,0,172,45],[61,0,172,61],[62,0,172,62],[66,0,172,66],[68,0,172,68],[73,0,172,73],[74,0,172,74],[75,0,172,75]],[[12,0,173,12],[17,0,173,17],[21,0,173,21],[22,0,173,22],[34,0,173,34]],[[16,0,174,16],[22,0,174,22],[33,0,174,33],[36,0,174,46],[40,0,174,50],[41,0,174,51]],[[16,0,175,16],[23,0,175,23],[26,0,175,26],[27,0,175,27],[31,0,175,31],[32,0,175,32],[38,0,175,38],[40,0,175,40],[51,0,175,51],[52,0,175,52],[56,0,175,56],[58,0,175,58],[63,0,175,63],[64,0,175,64],[65,0,175,65]],[[12,0,176,12],[17,0,176,17],[21,0,176,21],[22,0,176,22],[40,0,176,40]],[[16,0,177,16],[22,0,177,22],[38,0,177,38],[41,0,177,56],[45,0,177,60],[46,0,177,61]],[[16,0,178,16],[22,0,178,22],[27,0,178,27],[30,0,178,30],[46,0,178,46],[47,0,178,47],[55,0,178,55],[56,0,178,56]],[[16,0,179,16],[22,0,179,22],[27,0,179,27],[30,0,179,30],[46,0,179,46],[47,0,179,47],[55,0,179,55],[56,0,179,56]],[[16,0,180,16],[19,0,180,19],[20,0,180,20],[24,0,180,24],[25,0,180,25],[37,0,180,37],[39,0,180,39],[55,0,180,55],[56,0,180,56],[60,0,180,60],[61,0,180,61],[62,0,180,62]],[[16,0,181,16],[20,0,181,20],[25,0,181,25],[27,0,181,27]],[[20,0,182,20],[23,0,182,23],[24,0,182,24],[28,0,182,28],[29,0,182,29],[40,0,182,40],[42,0,182,42],[47,0,182,47],[48,0,182,48],[49,0,182,49]],[[20,0,183,20],[24,0,183,24],[29,0,183,29],[33,0,183,33],[38,0,183,38],[43,0,183,43],[46,0,183,46],[48,0,183,48]],[[24,0,184,24],[27,0,184,27],[28,0,184,28],[32,0,184,32],[33,0,184,33],[38,0,184,38],[40,0,184,40],[45,0,184,45],[46,0,184,46],[47,0,184,47]],[[21,0,185,21]],[[20,0,186,20],[23,0,186,23],[24,0,186,24],[28,0,186,28],[29,0,186,29],[33,0,186,33],[34,0,186,34],[35,0,186,35]],[[17,0,187,17]],[[21,0,187,23],[25,0,187,27],[30,0,187,32],[34,0,187,36],[39,0,187,41],[44,0,187,46],[47,0,187,49],[49,0,187,51]],[[20,0,188,20],[23,0,188,23],[24,0,188,24],[28,0,188,28],[29,0,188,29],[40,0,188,40],[42,0,188,42],[47,0,188,47],[49,0,188,49],[53,0,188,53],[54,0,188,54],[55,0,188,55]],[[17,0,189,17]],[[21,0,189,23]],[[20,0,190,20],[23,0,190,23],[24,0,190,24],[28,0,190,28],[29,0,190,29],[32,0,190,32],[33,0,190,33],[34,0,190,34]],[[17,0,191,17]],[[16,0,192,16],[23,0,192,23]],[[12,0,193,12],[17,0,193,17],[21,0,193,21],[22,0,193,22],[49,0,193,49]],[[16,0,194,16],[22,0,194,22],[28,0,194,28],[31,0,194,55],[35,0,194,59],[36,0,194,60]],[[16,0,195,16],[23,0,195,23],[26,0,195,26],[27,0,195,27],[31,0,195,31],[32,0,195,33],[36,0,195,37],[38,0,195,39],[44,0,195,45],[45,0,195,46],[51,0,195,52],[53,0,195,54],[56,0,195,57],[58,0,195,59],[64,0,195,65],[65,0,195,66],[69,0,195,70],[71,0,195,72],[75,0,195,76],[76,0,195,77],[77,0,195,78]],[[12,0,196,12],[17,0,196,17],[21,0,196,21],[22,0,196,22],[43,0,196,43]],[[16,0,197,16],[23,0,197,23],[26,0,197,26],[27,0,197,27],[31,0,197,31],[32,0,197,32],[35,0,197,35],[37,0,197,37],[41,0,197,41],[42,0,197,42],[50,0,197,50],[52,0,197,52],[55,0,197,55],[56,0,197,56],[57,0,197,57]],[[12,0,198,12],[32,0,198,32]],[[12,0,199,12],[34,0,199,34]],[[12,0,200,12]],[[16,0,201,16],[19,0,201,19],[20,0,201,20],[24,0,201,24],[25,0,201,25],[29,0,201,29],[31,0,201,31],[35,0,201,35],[36,0,201,36],[44,0,201,44],[45,0,201,45],[46,0,201,46]],[[9,0,202,9]],[[4,0,203,4],[5,0,203,5]],[[4,0,205,12],[23,0,205,31],[24,0,205,32],[28,0,205,52],[30,0,205,54],[47,0,205,84]],[[8,0,206,8],[14,0,206,14],[20,0,206,20],[23,0,206,23],[27,0,206,27],[28,0,206,28],[34,0,206,34],[38,0,206,38],[40,0,206,40],[41,0,206,41]],[[8,0,207,8],[14,0,207,14],[17,0,207,17],[20,0,207,20],[24,0,207,24],[25,0,207,25],[37,0,207,37],[38,0,207,38]],[[8,0,208,8],[12,0,208,12],[13,0,208,13],[19,0,208,19],[23,0,208,23],[24,0,208,24],[27,0,208,27],[29,0,208,29]],[[12,0,209,12],[19,0,209,19],[24,0,209,24],[25,0,209,25]],[[9,0,210,9]],[[8,0,211,8],[12,0,211,12],[18,0,211,18],[23,0,211,23],[28,0,211,28],[32,0,211,32],[35,0,211,35],[40,0,211,40],[78,0,211,78]],[[15,0,212,15],[18,0,212,18],[23,0,212,23],[54,0,212,54],[56,0,212,56]],[[12,0,213,12],[19,0,213,19],[24,0,213,24],[25,0,213,25]],[[9,0,214,9]],[[8,0,216,8],[12,0,216,12],[13,0,216,13],[16,0,216,16],[33,0,216,33],[34,0,216,34],[40,0,216,40],[41,0,216,41]],[[8,0,217,8],[15,0,217,15],[16,0,217,16],[18,0,217,18],[20,0,217,20]],[[12,0,218,12],[18,0,218,18],[20,0,218,20],[23,0,218,23],[40,0,218,40],[41,0,218,41],[42,0,218,42],[43,0,218,43],[44,0,218,44]],[[12,0,219,12],[35,0,219,35]],[[12,0,220,12],[16,0,220,16],[18,0,220,18],[19,0,220,19],[25,0,220,25],[30,0,220,30],[36,0,220,36],[38,0,220,38]],[[16,0,221,16],[23,0,221,23],[25,0,221,25],[26,0,221,26],[35,0,221,35],[40,0,221,40],[43,0,221,43],[44,0,221,44]],[[13,0,222,13]],[[9,0,223,9]],[[8,0,224,8],[15,0,224,15],[19,0,224,19],[20,0,224,20]],[[4,0,225,4],[5,0,225,5]],[[4,0,227,12],[15,0,227,23],[16,0,227,24],[17,0,227,33]],[[8,0,228,8],[15,0,228,15],[16,0,228,16],[21,0,228,21],[24,0,228,24],[28,0,228,28],[34,0,228,34]],[[12,0,229,12],[13,0,229,13],[18,0,229,18],[21,0,229,21],[25,0,229,25],[31,0,229,31]],[[12,0,230,12],[13,0,230,13],[18,0,230,18],[21,0,230,21],[25,0,230,25],[32,0,230,32]],[[12,0,231,12],[13,0,231,13],[18,0,231,18],[21,0,231,21],[25,0,231,25],[33,0,231,33]],[[12,0,232,12],[16,0,232,16],[19,0,232,19],[20,0,232,20],[21,0,232,21],[31,0,232,31],[32,0,232,32],[33,0,232,33],[34,0,232,34],[37,0,232,37],[40,0,232,40],[41,0,232,41]],[[4,0,233,4],[5,0,233,5]],[[4,0,235,12],[18,0,235,26],[19,0,235,27],[26,0,235,56],[28,0,235,58],[31,0,235,71],[33,0,235,73],[44,0,235,92],[46,0,235,94],[49,0,235,97],[60,0,235,118]],[[8,0,236,8],[12,0,236,12],[19,0,236,19],[20,0,236,20],[28,0,236,28],[30,0,236,30]],[[12,0,237,12],[15,0,237,15],[16,0,237,16],[20,0,237,20],[21,0,237,21],[25,0,237,25],[26,0,237,26],[27,0,237,27]],[[12,0,238,12],[16,0,238,16],[27,0,238,27],[30,0,238,30],[31,0,238,31],[33,0,238,33]],[[16,0,239,16],[19,0,239,19],[20,0,239,20],[24,0,239,24],[25,0,239,25],[29,0,239,29],[30,0,239,30],[47,0,239,47],[48,0,239,48],[55,0,239,55],[57,0,239,57],[68,0,239,68],[69,0,239,69],[70,0,239,70],[71,0,239,71]],[[13,0,240,13]],[[9,0,241,9]],[[8,0,242,8],[11,0,242,11],[12,0,242,12],[16,0,242,16],[17,0,242,17],[20,0,242,20],[31,0,242,31],[32,0,242,32],[33,0,242,33]],[[4,0,243,4],[5,0,243,5]],[[4,0,245,12],[21,0,245,29],[22,0,245,30],[29,0,245,59],[31,0,245,61],[42,0,245,80]],[[8,0,246,8],[14,0,246,14],[20,0,246,20],[23,0,246,23],[24,0,246,24],[31,0,246,31],[32,0,246,32],[44,0,246,44],[45,0,246,45],[46,0,246,46],[47,0,246,47],[48,0,246,48],[55,0,246,55],[56,0,246,56],[68,0,246,68],[69,0,246,69],[70,0,246,70],[71,0,246,71],[92,0,246,92],[93,0,246,93]],[[8,0,247,8],[12,0,247,12],[18,0,247,18],[21,0,247,21],[23,0,247,23],[24,0,247,24]],[[8,0,248,8],[13,0,248,13],[17,0,248,17],[18,0,248,18],[21,0,248,21],[22,0,248,22],[24,0,248,24],[25,0,248,25],[28,0,248,28],[39,0,248,39],[41,0,248,41],[42,0,248,42],[44,0,248,44],[46,0,248,46]],[[12,0,249,12],[18,0,249,18],[21,0,249,21],[27,0,249,27],[30,0,249,30],[36,0,249,36],[37,0,249,37]],[[9,0,250,9]],[[8,0,251,8],[15,0,251,15],[21,0,251,21],[22,0,251,22]],[[4,0,252,4],[5,0,252,5]],[[4,0,254,4]],[],[],[],[[7,0,258,7]],[[4,0,259,12],[25,0,259,33],[26,0,259,34],[33,0,259,49],[35,0,259,51],[42,0,259,80]],[[8,0,260,8],[12,0,260,12],[19,0,260,19],[23,0,260,23],[30,0,260,30],[31,0,260,31],[51,0,260,51],[53,0,260,53]],[[12,0,261,12],[19,0,261,19],[20,0,261,20],[21,0,261,21],[28,0,261,28],[29,0,261,29],[49,0,261,49],[50,0,261,50],[54,0,261,54],[55,0,261,55],[56,0,261,56],[59,0,261,59],[61,0,261,61],[63,0,261,63],[64,0,261,64],[67,0,261,67],[72,0,261,72],[79,0,261,79],[80,0,261,80],[81,0,261,81]],[[9,0,262,9]],[[13,0,262,15]],[[12,0,263,12],[19,0,263,19],[24,0,263,24],[25,0,263,25]],[[9,0,264,9]],[[4,0,265,4],[5,0,265,5]],[[4,0,267,12],[26,0,267,34],[27,0,267,35],[31,0,267,47]],[[8,0,268,8],[13,0,268,13],[17,0,268,17],[18,0,268,18],[21,0,268,21],[22,0,268,22],[24,0,268,24],[25,0,268,25],[28,0,268,28],[32,0,268,32],[33,0,268,33],[39,0,268,39],[41,0,268,41],[42,0,268,42],[44,0,268,44],[46,0,268,46]],[[12,0,269,12],[18,0,269,18],[19,0,269,19],[22,0,269,22],[26,0,269,26],[27,0,269,27],[33,0,269,33],[34,0,269,34],[35,0,269,35],[36,0,269,36],[37,0,269,37]],[[12,0,270,12],[16,0,270,16],[17,0,270,17],[18,0,270,18],[19,0,270,19],[24,0,270,24],[27,0,270,27],[31,0,270,31],[32,0,270,32],[37,0,270,37],[41,0,270,41],[45,0,270,45],[46,0,270,46],[51,0,270,51],[55,0,270,55],[59,0,270,59],[60,0,270,60],[65,0,270,65],[69,0,270,69],[70,0,270,70],[72,0,270,72]],[[16,0,271,16],[23,0,271,23],[28,0,271,28],[29,0,271,29]],[[13,0,272,13]],[[9,0,273,9]],[[8,0,274,8],[15,0,274,15],[19,0,274,19],[20,0,274,20]],[[4,0,275,4],[5,0,275,5]],[[1,0,276,1]]],"sourcesContent":["/**\r\n * An XmlSerializer that supports formatting.\r\n * Original code is based on [xmldom](https://www.npmjs.com/package/xmldom)\r\n * It is extended to support formatting including handling of elements with mixed content.\r\n * Example formatted output:\r\n * <pre>\r\n *     <doc>\r\n *         <element>An element with\r\n *             <b>mixed</b>\r\n *              content\r\n *         </element>\r\n *     </doc>\r\n * </pre>\r\n * Same when \"element\" is indicated as \"mixedContentElement\":\r\n * <pre>\r\n *     <doc>\r\n *         <element>An element with <b>mixed</b> content</element>\r\n *     </doc>\r\n * </pre>\r\n */\r\n\r\ninterface Namespace {\r\n    prefix: string;\r\n    namespace: string;\r\n}\r\n\r\n/**\r\n * Options used to control the formatting\r\n */\r\nexport interface XmlSerializerOptions {\r\n    beautify?: boolean; // set to activate beautify\r\n    indentString?: string; // Sequence uses for indentation, must only contain white space chars, e.g. \"  \" or \"    \" or \"\\t\"\r\n    mixedContentElements?: string[]; // Names of elements containing mixed content (these are not beautified)\r\n}\r\n\r\nconst DEFAULT_INDENT_STRING = '  ';\r\n\r\nexport class XmlSerializer {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * Serialze xml document to string.\r\n     * @param document the document\r\n     * @param options can be used to activate beautifying.\r\n     */\r\n    serializeToString(document: Document, options?: XmlSerializerOptions): string {\r\n        const buf = [];\r\n        let visibleNamespaces: Namespace[] = [];\r\n        const refNode = document.documentElement;\r\n        let prefix = refNode.prefix;\r\n        const uri = refNode.namespaceURI;\r\n\r\n        if (uri && prefix == null) {\r\n            prefix = refNode.lookupPrefix(uri);\r\n            if (prefix == null) {\r\n                visibleNamespaces = [\r\n                    {namespace: uri, prefix: null}\r\n                    // {namespace:uri,prefix:''}\r\n                ];\r\n            }\r\n        }\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        if (options.indentString) {\r\n            if (!this.containsOnlyWhiteSpace(options.indentString)) {\r\n                throw new Error('indentString must not contain non white characters');\r\n            }\r\n        }\r\n        this.doSerializeToString(document, options, buf, 0, false, visibleNamespaces);\r\n        return buf.join('');\r\n    }\r\n\r\n    /**\r\n     * Main format method that does all the work.\r\n     * Outputs a node to the outputbuffer.\r\n     * @param node the node to be formatted.\r\n     * @param options options\r\n     * @param buf outputbuffer, new output will be appended to this array.\r\n     * @param indentLevel Lever of indentation for formatted output.\r\n     * @param partOfMixedContent true, if node is a subelement of an element containind mixed content.\r\n     * @param visibleNamespaces visibleNamespaces\r\n     */\r\n    private doSerializeToString(node: Node, options: XmlSerializerOptions, buf: string[],\r\n                                indentLevel: number, partOfMixedContent: boolean, visibleNamespaces: Namespace[]) {\r\n        let child: Node;\r\n        switch (node.nodeType) {\r\n            case node.ELEMENT_NODE:\r\n                const elementNode: Element = <Element> node;\r\n                const attrs = elementNode.attributes;\r\n                const len = attrs.length;\r\n                child = elementNode.firstChild;\r\n                const nodeName = elementNode.tagName;\r\n                const elementHasMixedContent = this.isMixedContentElement(nodeName, options);\r\n                if (partOfMixedContent) {\r\n                    buf.push('<' , nodeName);\r\n                } else {\r\n                    this.outputIndented(options, buf, indentLevel, '<' , nodeName);\r\n                }\r\n\r\n                for (let i = 0; i < len; i++) {\r\n                    // add namespaces for attributes\r\n                    const attr = attrs.item(i);\r\n                    if (attr.prefix === 'xmlns') {\r\n                        visibleNamespaces.push({prefix: attr.localName, namespace: attr.value});\r\n                    } else if (attr.nodeName === 'xmlns') {\r\n                        visibleNamespaces.push({prefix: '', namespace: attr.value});\r\n                    }\r\n                }\r\n                for (let i = 0; i < len; i++) {\r\n                    const attr = attrs.item(i);\r\n                    if (this.needNamespaceDefine(attr, visibleNamespaces)) {\r\n                        const prefix = attr.prefix || '';\r\n                        const uri = attr.namespaceURI;\r\n                        const ns = prefix ? ' xmlns:' + prefix : ' xmlns';\r\n                        buf.push(ns, '=\"', uri, '\"');\r\n                        visibleNamespaces.push({prefix: prefix, namespace: uri});\r\n                    }\r\n                    this.doSerializeToString(attr, options, buf, indentLevel, false, visibleNamespaces);\r\n                }\r\n                // add namespace for current node\r\n                if (this.needNamespaceDefine(elementNode, visibleNamespaces)) {\r\n                    const prefix = elementNode.prefix || '';\r\n                    const uri = elementNode.namespaceURI;\r\n                    const ns = prefix ? ' xmlns:' + prefix : ' xmlns';\r\n                    buf.push(ns, '=\"', uri, '\"');\r\n                    visibleNamespaces.push({prefix: prefix, namespace: uri});\r\n                }\r\n\r\n                if (child) {\r\n                    buf.push('>');\r\n                    // if is cdata child node\r\n                    let hasComplexContent = false;\r\n                    while (child) {\r\n                        if (child.nodeType === child.ELEMENT_NODE) {\r\n                            hasComplexContent = true;\r\n                        }\r\n                        this.doSerializeToString(child, options, buf, indentLevel + 1,\r\n                            partOfMixedContent || elementHasMixedContent, visibleNamespaces);\r\n                        child = child.nextSibling;\r\n                    }\r\n                    if (!partOfMixedContent && !elementHasMixedContent && hasComplexContent) {\r\n                        this.outputIndented(options, buf, indentLevel, '</', nodeName, '>');\r\n                    } else {\r\n                        buf.push('</', nodeName, '>');\r\n                    }\r\n                } else {\r\n                    buf.push('/>');\r\n                }\r\n                return;\r\n            case node.DOCUMENT_NODE:\r\n            case node.DOCUMENT_FRAGMENT_NODE:\r\n                child = node.firstChild;\r\n                while (child) {\r\n                    this.doSerializeToString(child, options, buf, indentLevel, false, visibleNamespaces);\r\n                    child = child.nextSibling;\r\n                }\r\n                return;\r\n            case node.ATTRIBUTE_NODE:\r\n                const attrNode = <Attr> node;\r\n                return buf.push(' ', attrNode.name, '=\"', attrNode.value.replace(/[<&\"]/g, this._xmlEncoder), '\"');\r\n            case node.TEXT_NODE:\r\n                const textNode = <Text> node;\r\n                if (!options.beautify || partOfMixedContent || !this.containsOnlyWhiteSpace(textNode.data)) {\r\n                    return buf.push(textNode.data.replace(/[<&]/g, this._xmlEncoder));\r\n                }\r\n                return;\r\n            case node.CDATA_SECTION_NODE:\r\n                const cdatasectionNode = <CDATASection> node;\r\n                return buf.push('<![CDATA[', cdatasectionNode.data, ']]>');\r\n            case node.COMMENT_NODE:\r\n                const commentNode = <Comment> node;\r\n                return buf.push('<!--', commentNode.data, '-->');\r\n            case node.DOCUMENT_TYPE_NODE:\r\n                const documenttypeNode = <DocumentType> node;\r\n                const pubid = documenttypeNode.publicId;\r\n                const sysid = documenttypeNode.systemId;\r\n                buf.push('<!DOCTYPE ', documenttypeNode.name);\r\n                if (pubid) {\r\n                    buf.push(' PUBLIC \"', pubid);\r\n                    if (sysid && sysid !== '.') {\r\n                        buf.push('\" \"', sysid);\r\n                    }\r\n                    buf.push('\">');\r\n                } else if (sysid && sysid !== '.') {\r\n                    buf.push(' SYSTEM \"', sysid, '\">');\r\n                } else {\r\n                    buf.push('>');\r\n                }\r\n                return;\r\n            case node.PROCESSING_INSTRUCTION_NODE:\r\n                const piNode = <ProcessingInstruction> node;\r\n                return buf.push( '<?', piNode.target, ' ', piNode.data, '?>');\r\n            case node.ENTITY_REFERENCE_NODE:\r\n                return buf.push('&', node.nodeName, ';');\r\n            // case ENTITY_NODE:\r\n            // case NOTATION_NODE:\r\n            default:\r\n                buf.push('??', node.nodeName);\r\n        }\r\n    }\r\n\r\n    private needNamespaceDefine(node: Element | Attr, visibleNamespaces: Namespace[]): boolean {\r\n        const prefix = node.prefix || '';\r\n        const uri = node.namespaceURI;\r\n        if (!prefix && !uri) {\r\n            return false;\r\n        }\r\n        if (prefix === 'xml' && uri === 'http://www.w3.org/XML/1998/namespace'\r\n            || uri === 'http://www.w3.org/2000/xmlns/') {\r\n            return false;\r\n        }\r\n\r\n        let i = visibleNamespaces.length;\r\n        while (i--) {\r\n            const ns = visibleNamespaces[i];\r\n            // get namespace prefix\r\n            if (ns.prefix === prefix) {\r\n                return ns.namespace !== uri;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private _xmlEncoder(c: string): string {\r\n        return c === '<' && '&lt;' ||\r\n            c === '>' && '&gt;' ||\r\n            c === '&' && '&amp;' ||\r\n            c === '\"' && '&quot;' ||\r\n            '&#' + c.charCodeAt(0) + ';';\r\n    }\r\n\r\n    private outputIndented(options: XmlSerializerOptions, buf: string[], indentLevel: number, ...outputParts: string[]) {\r\n        if (options.beautify) {\r\n            buf.push('\\n');\r\n            if (indentLevel > 0) {\r\n                buf.push(this.indentationString(options, indentLevel));\r\n            }\r\n        }\r\n        buf.push(...outputParts);\r\n    }\r\n\r\n    private indentationString(options: XmlSerializerOptions, indentLevel: number): string {\r\n        const indent = (options.indentString) ? options.indentString : DEFAULT_INDENT_STRING;\r\n        let result = '';\r\n        for (let i = 0; i < indentLevel; i++) {\r\n            result = result + indent;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Test, wether tagName is an element containing mixed content.\r\n     * @param tagName tagName\r\n     * @param options options\r\n     */\r\n    private isMixedContentElement(tagName: string, options: XmlSerializerOptions): boolean {\r\n        if (options && options.mixedContentElements) {\r\n            return !!options.mixedContentElements.find((tag) => tag === tagName);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private containsOnlyWhiteSpace(text: string): boolean {\r\n        for (let i = 0; i < text.length; i++) {\r\n            const c = text.charAt(i);\r\n            if (!(c === ' ' || c === '\\t' || c === '\\r' || c === '\\n')) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":26823,"body":[{"type":"ImportDeclaration","start":0,"end":63,"specifiers":[{"type":"ImportSpecifier","start":9,"end":18,"imported":{"type":"Identifier","start":9,"end":18,"name":"STATE_NEW"},"local":{"type":"Identifier","start":9,"end":18,"name":"STATE_NEW"}},{"type":"ImportSpecifier","start":20,"end":36,"imported":{"type":"Identifier","start":20,"end":36,"name":"STATE_TRANSLATED"},"local":{"type":"Identifier","start":20,"end":36,"name":"STATE_TRANSLATED"}}],"source":{"type":"Literal","start":44,"end":62,"value":"../api/constants","raw":"'../api/constants'"}},{"type":"ImportDeclaration","start":65,"end":109,"specifiers":[{"type":"ImportSpecifier","start":74,"end":91,"imported":{"type":"Identifier","start":74,"end":91,"name":"isNullOrUndefined"},"local":{"type":"Identifier","start":74,"end":91,"name":"isNullOrUndefined"}}],"source":{"type":"Literal","start":99,"end":108,"value":"is-what","raw":"'is-what'"}},{"type":"ImportDeclaration","start":111,"end":146,"specifiers":[{"type":"ImportSpecifier","start":120,"end":129,"imported":{"type":"Identifier","start":120,"end":129,"name":"DOMParser"},"local":{"type":"Identifier","start":120,"end":129,"name":"DOMParser"}}],"source":{"type":"Literal","start":137,"end":145,"value":"xmldom","raw":"'xmldom'"}},{"type":"ImportDeclaration","start":148,"end":197,"specifiers":[{"type":"ImportSpecifier","start":157,"end":170,"imported":{"type":"Identifier","start":157,"end":170,"name":"XmlSerializer"},"local":{"type":"Identifier","start":157,"end":170,"name":"XmlSerializer"}}],"source":{"type":"Literal","start":178,"end":196,"value":"./xml-serializer","raw":"'./xml-serializer'"}},{"type":"ExportNamedDeclaration","start":322,"end":6291,"declaration":{"type":"ClassDeclaration","start":329,"end":6291,"id":{"type":"Identifier","start":335,"end":366,"name":"AbstractTranslationMessagesFile"},"superClass":null,"body":{"type":"ClassBody","start":367,"end":6291,"body":[{"type":"MethodDefinition","start":374,"end":459,"static":false,"computed":false,"key":{"type":"Identifier","start":374,"end":385,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":385,"end":459,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":388,"end":459,"body":[{"type":"ExpressionStatement","start":399,"end":422,"expression":{"type":"AssignmentExpression","start":399,"end":421,"operator":"=","left":{"type":"MemberExpression","start":399,"end":414,"object":{"type":"ThisExpression","start":399,"end":403},"property":{"type":"Identifier","start":404,"end":414,"name":"transUnits"},"computed":false,"optional":false},"right":{"type":"Literal","start":417,"end":421,"value":null,"raw":"null"}}},{"type":"ExpressionStatement","start":432,"end":452,"expression":{"type":"AssignmentExpression","start":432,"end":451,"operator":"=","left":{"type":"MemberExpression","start":432,"end":446,"object":{"type":"ThisExpression","start":432,"end":436},"property":{"type":"Identifier","start":437,"end":446,"name":"_warnings"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":449,"end":451,"elements":[]}}}]}}},{"type":"MethodDefinition","start":707,"end":986,"static":false,"computed":false,"key":{"type":"Identifier","start":707,"end":719,"name":"parseContent"},"kind":"method","value":{"type":"FunctionExpression","start":719,"end":986,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":720,"end":729,"name":"xmlString"},{"type":"Identifier","start":731,"end":735,"name":"path"},{"type":"Identifier","start":737,"end":745,"name":"encoding"},{"type":"Identifier","start":747,"end":761,"name":"optionalMaster"}],"body":{"type":"BlockStatement","start":763,"end":986,"body":[{"type":"ExpressionStatement","start":774,"end":796,"expression":{"type":"AssignmentExpression","start":774,"end":795,"operator":"=","left":{"type":"MemberExpression","start":774,"end":788,"object":{"type":"ThisExpression","start":774,"end":778},"property":{"type":"Identifier","start":779,"end":788,"name":"_filename"},"computed":false,"optional":false},"right":{"type":"Identifier","start":791,"end":795,"name":"path"}}},{"type":"ExpressionStatement","start":806,"end":832,"expression":{"type":"AssignmentExpression","start":806,"end":831,"operator":"=","left":{"type":"MemberExpression","start":806,"end":820,"object":{"type":"ThisExpression","start":806,"end":810},"property":{"type":"Identifier","start":811,"end":820,"name":"_encoding"},"computed":false,"optional":false},"right":{"type":"Identifier","start":823,"end":831,"name":"encoding"}}},{"type":"ExpressionStatement","start":842,"end":920,"expression":{"type":"AssignmentExpression","start":842,"end":919,"operator":"=","left":{"type":"MemberExpression","start":842,"end":862,"object":{"type":"ThisExpression","start":842,"end":846},"property":{"type":"Identifier","start":847,"end":862,"name":"_parsedDocument"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":865,"end":919,"callee":{"type":"MemberExpression","start":865,"end":896,"object":{"type":"NewExpression","start":865,"end":880,"callee":{"type":"Identifier","start":869,"end":878,"name":"DOMParser"},"arguments":[]},"property":{"type":"Identifier","start":881,"end":896,"name":"parseFromString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":897,"end":906,"name":"xmlString"},{"type":"Literal","start":908,"end":918,"value":"text/xml","raw":"'text/xml'"}],"optional":false}}},{"type":"ExpressionStatement","start":930,"end":979,"expression":{"type":"AssignmentExpression","start":930,"end":978,"operator":"=","left":{"type":"MemberExpression","start":930,"end":951,"object":{"type":"ThisExpression","start":930,"end":934},"property":{"type":"Identifier","start":935,"end":951,"name":"_fileEndsWithEOL"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":954,"end":978,"callee":{"type":"MemberExpression","start":954,"end":972,"object":{"type":"Identifier","start":954,"end":963,"name":"xmlString"},"property":{"type":"Identifier","start":964,"end":972,"name":"endsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":973,"end":977,"value":"\n","raw":"'\\n'"}],"optional":false}}}]}}},{"type":"MethodDefinition","start":992,"end":1165,"static":false,"computed":false,"key":{"type":"Identifier","start":992,"end":1016,"name":"lazyInitializeTransUnits"},"kind":"method","value":{"type":"FunctionExpression","start":1016,"end":1165,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1019,"end":1165,"body":[{"type":"IfStatement","start":1030,"end":1158,"test":{"type":"CallExpression","start":1034,"end":1068,"callee":{"type":"Identifier","start":1034,"end":1051,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":1052,"end":1067,"object":{"type":"ThisExpression","start":1052,"end":1056},"property":{"type":"Identifier","start":1057,"end":1067,"name":"transUnits"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":1070,"end":1158,"body":[{"type":"ExpressionStatement","start":1085,"end":1113,"expression":{"type":"CallExpression","start":1085,"end":1112,"callee":{"type":"MemberExpression","start":1085,"end":1110,"object":{"type":"ThisExpression","start":1085,"end":1089},"property":{"type":"Identifier","start":1090,"end":1110,"name":"initializeTransUnits"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ExpressionStatement","start":1127,"end":1147,"expression":{"type":"CallExpression","start":1127,"end":1146,"callee":{"type":"MemberExpression","start":1127,"end":1144,"object":{"type":"ThisExpression","start":1127,"end":1131},"property":{"type":"Identifier","start":1132,"end":1144,"name":"countNumbers"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":1238,"end":1899,"static":false,"computed":false,"key":{"type":"Identifier","start":1238,"end":1250,"name":"countNumbers"},"kind":"method","value":{"type":"FunctionExpression","start":1250,"end":1899,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1253,"end":1899,"body":[{"type":"ExpressionStatement","start":1264,"end":1306,"expression":{"type":"AssignmentExpression","start":1264,"end":1305,"operator":"=","left":{"type":"MemberExpression","start":1264,"end":1301,"object":{"type":"ThisExpression","start":1264,"end":1268},"property":{"type":"Identifier","start":1269,"end":1301,"name":"_numberOfTransUnitsWithMissingId"},"computed":false,"optional":false},"right":{"type":"Literal","start":1304,"end":1305,"value":0,"raw":"0"}}},{"type":"ExpressionStatement","start":1316,"end":1357,"expression":{"type":"AssignmentExpression","start":1316,"end":1356,"operator":"=","left":{"type":"MemberExpression","start":1316,"end":1352,"object":{"type":"ThisExpression","start":1316,"end":1320},"property":{"type":"Identifier","start":1321,"end":1352,"name":"_numberOfUntranslatedTransUnits"},"computed":false,"optional":false},"right":{"type":"Literal","start":1355,"end":1356,"value":0,"raw":"0"}}},{"type":"ExpressionStatement","start":1367,"end":1404,"expression":{"type":"AssignmentExpression","start":1367,"end":1403,"operator":"=","left":{"type":"MemberExpression","start":1367,"end":1399,"object":{"type":"ThisExpression","start":1367,"end":1371},"property":{"type":"Identifier","start":1372,"end":1399,"name":"_numberOfReviewedTransUnits"},"computed":false,"optional":false},"right":{"type":"Literal","start":1402,"end":1403,"value":0,"raw":"0"}}},{"type":"ExpressionStatement","start":1414,"end":1892,"expression":{"type":"CallExpression","start":1414,"end":1891,"callee":{"type":"MemberExpression","start":1414,"end":1435,"object":{"type":"ThisExpression","start":1414,"end":1418},"property":{"type":"Identifier","start":1419,"end":1435,"name":"forEachTransUnit"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":1436,"end":1890,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1437,"end":1439,"name":"tu"}],"body":{"type":"BlockStatement","start":1444,"end":1890,"body":[{"type":"IfStatement","start":1459,"end":1579,"test":{"type":"LogicalExpression","start":1463,"end":1503,"left":{"type":"CallExpression","start":1463,"end":1487,"callee":{"type":"Identifier","start":1463,"end":1480,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":1481,"end":1486,"object":{"type":"Identifier","start":1481,"end":1483,"name":"tu"},"property":{"type":"Identifier","start":1484,"end":1486,"name":"id"},"computed":false,"optional":false}],"optional":false},"operator":"||","right":{"type":"BinaryExpression","start":1491,"end":1503,"left":{"type":"MemberExpression","start":1491,"end":1496,"object":{"type":"Identifier","start":1491,"end":1493,"name":"tu"},"property":{"type":"Identifier","start":1494,"end":1496,"name":"id"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":1501,"end":1503,"value":"","raw":"''"}}},"consequent":{"type":"BlockStatement","start":1505,"end":1579,"body":[{"type":"ExpressionStatement","start":1524,"end":1564,"expression":{"type":"UpdateExpression","start":1524,"end":1563,"operator":"++","prefix":false,"argument":{"type":"MemberExpression","start":1524,"end":1561,"object":{"type":"ThisExpression","start":1524,"end":1528},"property":{"type":"Identifier","start":1529,"end":1561,"name":"_numberOfTransUnitsWithMissingId"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"VariableDeclaration","start":1593,"end":1624,"declarations":[{"type":"VariableDeclarator","start":1599,"end":1623,"id":{"type":"Identifier","start":1599,"end":1604,"name":"state"},"init":{"type":"CallExpression","start":1607,"end":1623,"callee":{"type":"MemberExpression","start":1607,"end":1621,"object":{"type":"Identifier","start":1607,"end":1609,"name":"tu"},"property":{"type":"Identifier","start":1610,"end":1621,"name":"targetState"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1638,"end":1764,"test":{"type":"LogicalExpression","start":1642,"end":1689,"left":{"type":"CallExpression","start":1642,"end":1666,"callee":{"type":"Identifier","start":1642,"end":1659,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":1660,"end":1665,"name":"state"}],"optional":false},"operator":"||","right":{"type":"BinaryExpression","start":1670,"end":1689,"left":{"type":"Identifier","start":1670,"end":1675,"name":"state"},"operator":"===","right":{"type":"Identifier","start":1680,"end":1689,"name":"STATE_NEW"}}},"consequent":{"type":"BlockStatement","start":1691,"end":1764,"body":[{"type":"ExpressionStatement","start":1710,"end":1749,"expression":{"type":"UpdateExpression","start":1710,"end":1748,"operator":"++","prefix":false,"argument":{"type":"MemberExpression","start":1710,"end":1746,"object":{"type":"ThisExpression","start":1710,"end":1714},"property":{"type":"Identifier","start":1715,"end":1746,"name":"_numberOfUntranslatedTransUnits"},"computed":false,"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":1778,"end":1879,"test":{"type":"BinaryExpression","start":1782,"end":1808,"left":{"type":"Identifier","start":1782,"end":1787,"name":"state"},"operator":"===","right":{"type":"Identifier","start":1792,"end":1808,"name":"STATE_TRANSLATED"}},"consequent":{"type":"BlockStatement","start":1810,"end":1879,"body":[{"type":"ExpressionStatement","start":1829,"end":1864,"expression":{"type":"UpdateExpression","start":1829,"end":1863,"operator":"++","prefix":false,"argument":{"type":"MemberExpression","start":1829,"end":1861,"object":{"type":"ThisExpression","start":1829,"end":1833},"property":{"type":"Identifier","start":1834,"end":1861,"name":"_numberOfReviewedTransUnits"},"computed":false,"optional":false}}}]},"alternate":null}]}}],"optional":false}}]}}},{"type":"MethodDefinition","start":1905,"end":1998,"static":false,"computed":false,"key":{"type":"Identifier","start":1905,"end":1913,"name":"warnings"},"kind":"method","value":{"type":"FunctionExpression","start":1913,"end":1998,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1916,"end":1998,"body":[{"type":"ExpressionStatement","start":1927,"end":1959,"expression":{"type":"CallExpression","start":1927,"end":1958,"callee":{"type":"MemberExpression","start":1927,"end":1956,"object":{"type":"ThisExpression","start":1927,"end":1931},"property":{"type":"Identifier","start":1932,"end":1956,"name":"lazyInitializeTransUnits"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ReturnStatement","start":1969,"end":1991,"argument":{"type":"MemberExpression","start":1976,"end":1990,"object":{"type":"ThisExpression","start":1976,"end":1980},"property":{"type":"Identifier","start":1981,"end":1990,"name":"_warnings"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":2083,"end":2194,"static":false,"computed":false,"key":{"type":"Identifier","start":2083,"end":2101,"name":"numberOfTransUnits"},"kind":"method","value":{"type":"FunctionExpression","start":2101,"end":2194,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2104,"end":2194,"body":[{"type":"ExpressionStatement","start":2115,"end":2147,"expression":{"type":"CallExpression","start":2115,"end":2146,"callee":{"type":"MemberExpression","start":2115,"end":2144,"object":{"type":"ThisExpression","start":2115,"end":2119},"property":{"type":"Identifier","start":2120,"end":2144,"name":"lazyInitializeTransUnits"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ReturnStatement","start":2157,"end":2187,"argument":{"type":"MemberExpression","start":2164,"end":2186,"object":{"type":"MemberExpression","start":2164,"end":2179,"object":{"type":"ThisExpression","start":2164,"end":2168},"property":{"type":"Identifier","start":2169,"end":2179,"name":"transUnits"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2180,"end":2186,"name":"length"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":2338,"end":2475,"static":false,"computed":false,"key":{"type":"Identifier","start":2338,"end":2368,"name":"numberOfUntranslatedTransUnits"},"kind":"method","value":{"type":"FunctionExpression","start":2368,"end":2475,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2371,"end":2475,"body":[{"type":"ExpressionStatement","start":2382,"end":2414,"expression":{"type":"CallExpression","start":2382,"end":2413,"callee":{"type":"MemberExpression","start":2382,"end":2411,"object":{"type":"ThisExpression","start":2382,"end":2386},"property":{"type":"Identifier","start":2387,"end":2411,"name":"lazyInitializeTransUnits"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ReturnStatement","start":2424,"end":2468,"argument":{"type":"MemberExpression","start":2431,"end":2467,"object":{"type":"ThisExpression","start":2431,"end":2435},"property":{"type":"Identifier","start":2436,"end":2467,"name":"_numberOfUntranslatedTransUnits"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":2555,"end":2684,"static":false,"computed":false,"key":{"type":"Identifier","start":2555,"end":2581,"name":"numberOfReviewedTransUnits"},"kind":"method","value":{"type":"FunctionExpression","start":2581,"end":2684,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2584,"end":2684,"body":[{"type":"ExpressionStatement","start":2595,"end":2627,"expression":{"type":"CallExpression","start":2595,"end":2626,"callee":{"type":"MemberExpression","start":2595,"end":2624,"object":{"type":"ThisExpression","start":2595,"end":2599},"property":{"type":"Identifier","start":2600,"end":2624,"name":"lazyInitializeTransUnits"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ReturnStatement","start":2637,"end":2677,"argument":{"type":"MemberExpression","start":2644,"end":2676,"object":{"type":"ThisExpression","start":2644,"end":2648},"property":{"type":"Identifier","start":2649,"end":2676,"name":"_numberOfReviewedTransUnits"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":2828,"end":2967,"static":false,"computed":false,"key":{"type":"Identifier","start":2828,"end":2859,"name":"numberOfTransUnitsWithMissingId"},"kind":"method","value":{"type":"FunctionExpression","start":2859,"end":2967,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2862,"end":2967,"body":[{"type":"ExpressionStatement","start":2873,"end":2905,"expression":{"type":"CallExpression","start":2873,"end":2904,"callee":{"type":"MemberExpression","start":2873,"end":2902,"object":{"type":"ThisExpression","start":2873,"end":2877},"property":{"type":"Identifier","start":2878,"end":2902,"name":"lazyInitializeTransUnits"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ReturnStatement","start":2915,"end":2960,"argument":{"type":"MemberExpression","start":2922,"end":2959,"object":{"type":"ThisExpression","start":2922,"end":2926},"property":{"type":"Identifier","start":2927,"end":2959,"name":"_numberOfTransUnitsWithMissingId"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":3065,"end":3198,"static":false,"computed":false,"key":{"type":"Identifier","start":3065,"end":3081,"name":"forEachTransUnit"},"kind":"method","value":{"type":"FunctionExpression","start":3081,"end":3198,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3082,"end":3090,"name":"callback"}],"body":{"type":"BlockStatement","start":3092,"end":3198,"body":[{"type":"ExpressionStatement","start":3103,"end":3135,"expression":{"type":"CallExpression","start":3103,"end":3134,"callee":{"type":"MemberExpression","start":3103,"end":3132,"object":{"type":"ThisExpression","start":3103,"end":3107},"property":{"type":"Identifier","start":3108,"end":3132,"name":"lazyInitializeTransUnits"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ExpressionStatement","start":3145,"end":3191,"expression":{"type":"CallExpression","start":3145,"end":3190,"callee":{"type":"MemberExpression","start":3145,"end":3168,"object":{"type":"MemberExpression","start":3145,"end":3160,"object":{"type":"ThisExpression","start":3145,"end":3149},"property":{"type":"Identifier","start":3150,"end":3160,"name":"transUnits"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3161,"end":3168,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":3169,"end":3189,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":3170,"end":3172,"name":"tu"}],"body":{"type":"CallExpression","start":3177,"end":3189,"callee":{"type":"Identifier","start":3177,"end":3185,"name":"callback"},"arguments":[{"type":"Identifier","start":3186,"end":3188,"name":"tu"}],"optional":false}}],"optional":false}}]}}},{"type":"MethodDefinition","start":3323,"end":3453,"static":false,"computed":false,"key":{"type":"Identifier","start":3323,"end":3338,"name":"transUnitWithId"},"kind":"method","value":{"type":"FunctionExpression","start":3338,"end":3453,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3339,"end":3341,"name":"id"}],"body":{"type":"BlockStatement","start":3343,"end":3453,"body":[{"type":"ExpressionStatement","start":3354,"end":3386,"expression":{"type":"CallExpression","start":3354,"end":3385,"callee":{"type":"MemberExpression","start":3354,"end":3383,"object":{"type":"ThisExpression","start":3354,"end":3358},"property":{"type":"Identifier","start":3359,"end":3383,"name":"lazyInitializeTransUnits"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ReturnStatement","start":3396,"end":3446,"argument":{"type":"CallExpression","start":3403,"end":3445,"callee":{"type":"MemberExpression","start":3403,"end":3423,"object":{"type":"MemberExpression","start":3403,"end":3418,"object":{"type":"ThisExpression","start":3403,"end":3407},"property":{"type":"Identifier","start":3408,"end":3418,"name":"transUnits"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3419,"end":3423,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":3424,"end":3444,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":3425,"end":3427,"name":"tu"}],"body":{"type":"BinaryExpression","start":3432,"end":3444,"left":{"type":"MemberExpression","start":3432,"end":3437,"object":{"type":"Identifier","start":3432,"end":3434,"name":"tu"},"property":{"type":"Identifier","start":3435,"end":3437,"name":"id"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":3442,"end":3444,"name":"id"}}}],"optional":false}}]}}},{"type":"MethodDefinition","start":3687,"end":3784,"static":false,"computed":false,"key":{"type":"Identifier","start":3687,"end":3715,"name":"setNewTransUnitTargetPraefix"},"kind":"method","value":{"type":"FunctionExpression","start":3715,"end":3784,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3716,"end":3729,"name":"targetPraefix"}],"body":{"type":"BlockStatement","start":3731,"end":3784,"body":[{"type":"ExpressionStatement","start":3742,"end":3777,"expression":{"type":"AssignmentExpression","start":3742,"end":3776,"operator":"=","left":{"type":"MemberExpression","start":3742,"end":3760,"object":{"type":"ThisExpression","start":3742,"end":3746},"property":{"type":"Identifier","start":3747,"end":3760,"name":"targetPraefix"},"computed":false,"optional":false},"right":{"type":"Identifier","start":3763,"end":3776,"name":"targetPraefix"}}}]}}},{"type":"MethodDefinition","start":3954,"end":4074,"static":false,"computed":false,"key":{"type":"Identifier","start":3954,"end":3982,"name":"getNewTransUnitTargetPraefix"},"kind":"method","value":{"type":"FunctionExpression","start":3982,"end":4074,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":3985,"end":4074,"body":[{"type":"ReturnStatement","start":3996,"end":4067,"argument":{"type":"ConditionalExpression","start":4003,"end":4066,"test":{"type":"CallExpression","start":4003,"end":4040,"callee":{"type":"Identifier","start":4003,"end":4020,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":4021,"end":4039,"object":{"type":"ThisExpression","start":4021,"end":4025},"property":{"type":"Identifier","start":4026,"end":4039,"name":"targetPraefix"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"Literal","start":4043,"end":4045,"value":"","raw":"''"},"alternate":{"type":"MemberExpression","start":4048,"end":4066,"object":{"type":"ThisExpression","start":4048,"end":4052},"property":{"type":"Identifier","start":4053,"end":4066,"name":"targetPraefix"},"computed":false,"optional":false}}}]}}},{"type":"MethodDefinition","start":4305,"end":4398,"static":false,"computed":false,"key":{"type":"Identifier","start":4305,"end":4332,"name":"setNewTransUnitTargetSuffix"},"kind":"method","value":{"type":"FunctionExpression","start":4332,"end":4398,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4333,"end":4345,"name":"targetSuffix"}],"body":{"type":"BlockStatement","start":4347,"end":4398,"body":[{"type":"ExpressionStatement","start":4358,"end":4391,"expression":{"type":"AssignmentExpression","start":4358,"end":4390,"operator":"=","left":{"type":"MemberExpression","start":4358,"end":4375,"object":{"type":"ThisExpression","start":4358,"end":4362},"property":{"type":"Identifier","start":4363,"end":4375,"name":"targetSuffix"},"computed":false,"optional":false},"right":{"type":"Identifier","start":4378,"end":4390,"name":"targetSuffix"}}}]}}},{"type":"MethodDefinition","start":4566,"end":4683,"static":false,"computed":false,"key":{"type":"Identifier","start":4566,"end":4593,"name":"getNewTransUnitTargetSuffix"},"kind":"method","value":{"type":"FunctionExpression","start":4593,"end":4683,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":4596,"end":4683,"body":[{"type":"ReturnStatement","start":4607,"end":4676,"argument":{"type":"ConditionalExpression","start":4614,"end":4675,"test":{"type":"CallExpression","start":4614,"end":4650,"callee":{"type":"Identifier","start":4614,"end":4631,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":4632,"end":4649,"object":{"type":"ThisExpression","start":4632,"end":4636},"property":{"type":"Identifier","start":4637,"end":4649,"name":"targetSuffix"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"Literal","start":4653,"end":4655,"value":"","raw":"''"},"alternate":{"type":"MemberExpression","start":4658,"end":4675,"object":{"type":"ThisExpression","start":4658,"end":4662},"property":{"type":"Identifier","start":4663,"end":4675,"name":"targetSuffix"},"computed":false,"optional":false}}}]}}},{"type":"MethodDefinition","start":4777,"end":5119,"static":false,"computed":false,"key":{"type":"Identifier","start":4777,"end":4798,"name":"removeTransUnitWithId"},"kind":"method","value":{"type":"FunctionExpression","start":4798,"end":5119,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4799,"end":4801,"name":"id"}],"body":{"type":"BlockStatement","start":4803,"end":5119,"body":[{"type":"VariableDeclaration","start":4814,"end":4869,"declarations":[{"type":"VariableDeclarator","start":4820,"end":4868,"id":{"type":"Identifier","start":4820,"end":4826,"name":"tuNode"},"init":{"type":"CallExpression","start":4829,"end":4868,"callee":{"type":"MemberExpression","start":4829,"end":4864,"object":{"type":"MemberExpression","start":4829,"end":4849,"object":{"type":"ThisExpression","start":4829,"end":4833},"property":{"type":"Identifier","start":4834,"end":4849,"name":"_parsedDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4850,"end":4864,"name":"getElementById"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4865,"end":4867,"name":"id"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":4879,"end":5112,"test":{"type":"Identifier","start":4883,"end":4889,"name":"tuNode"},"consequent":{"type":"BlockStatement","start":4891,"end":5112,"body":[{"type":"ExpressionStatement","start":4906,"end":4944,"expression":{"type":"CallExpression","start":4906,"end":4943,"callee":{"type":"MemberExpression","start":4906,"end":4935,"object":{"type":"MemberExpression","start":4906,"end":4923,"object":{"type":"Identifier","start":4906,"end":4912,"name":"tuNode"},"property":{"type":"Identifier","start":4913,"end":4923,"name":"parentNode"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4924,"end":4935,"name":"removeChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4936,"end":4942,"name":"tuNode"}],"optional":false}},{"type":"ExpressionStatement","start":4958,"end":4990,"expression":{"type":"CallExpression","start":4958,"end":4989,"callee":{"type":"MemberExpression","start":4958,"end":4987,"object":{"type":"ThisExpression","start":4958,"end":4962},"property":{"type":"Identifier","start":4963,"end":4987,"name":"lazyInitializeTransUnits"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ExpressionStatement","start":5004,"end":5067,"expression":{"type":"AssignmentExpression","start":5004,"end":5066,"operator":"=","left":{"type":"MemberExpression","start":5004,"end":5019,"object":{"type":"ThisExpression","start":5004,"end":5008},"property":{"type":"Identifier","start":5009,"end":5019,"name":"transUnits"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":5022,"end":5066,"callee":{"type":"MemberExpression","start":5022,"end":5044,"object":{"type":"MemberExpression","start":5022,"end":5037,"object":{"type":"ThisExpression","start":5022,"end":5026},"property":{"type":"Identifier","start":5027,"end":5037,"name":"transUnits"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5038,"end":5044,"name":"filter"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":5045,"end":5065,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":5046,"end":5048,"name":"tu"}],"body":{"type":"BinaryExpression","start":5053,"end":5065,"left":{"type":"MemberExpression","start":5053,"end":5058,"object":{"type":"Identifier","start":5053,"end":5055,"name":"tu"},"property":{"type":"Identifier","start":5056,"end":5058,"name":"id"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":5063,"end":5065,"name":"id"}}}],"optional":false}}},{"type":"ExpressionStatement","start":5081,"end":5101,"expression":{"type":"CallExpression","start":5081,"end":5100,"callee":{"type":"MemberExpression","start":5081,"end":5098,"object":{"type":"ThisExpression","start":5081,"end":5085},"property":{"type":"Identifier","start":5086,"end":5098,"name":"countNumbers"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":5193,"end":5244,"static":false,"computed":false,"key":{"type":"Identifier","start":5193,"end":5201,"name":"filename"},"kind":"method","value":{"type":"FunctionExpression","start":5201,"end":5244,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":5204,"end":5244,"body":[{"type":"ReturnStatement","start":5215,"end":5237,"argument":{"type":"MemberExpression","start":5222,"end":5236,"object":{"type":"ThisExpression","start":5222,"end":5226},"property":{"type":"Identifier","start":5227,"end":5236,"name":"_filename"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":5333,"end":5384,"static":false,"computed":false,"key":{"type":"Identifier","start":5333,"end":5341,"name":"encoding"},"kind":"method","value":{"type":"FunctionExpression","start":5341,"end":5384,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":5344,"end":5384,"body":[{"type":"ReturnStatement","start":5355,"end":5377,"argument":{"type":"MemberExpression","start":5362,"end":5376,"object":{"type":"ThisExpression","start":5362,"end":5366},"property":{"type":"Identifier","start":5367,"end":5376,"name":"_encoding"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":5720,"end":6288,"static":false,"computed":false,"key":{"type":"Identifier","start":5720,"end":5733,"name":"editedContent"},"kind":"method","value":{"type":"FunctionExpression","start":5733,"end":6288,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5734,"end":5748,"name":"beautifyOutput"}],"body":{"type":"BlockStatement","start":5750,"end":6288,"body":[{"type":"VariableDeclaration","start":5761,"end":5780,"declarations":[{"type":"VariableDeclarator","start":5767,"end":5779,"id":{"type":"Identifier","start":5767,"end":5774,"name":"options"},"init":{"type":"ObjectExpression","start":5777,"end":5779,"properties":[]}}],"kind":"const"},{"type":"IfStatement","start":5790,"end":5988,"test":{"type":"BinaryExpression","start":5794,"end":5817,"left":{"type":"Identifier","start":5794,"end":5808,"name":"beautifyOutput"},"operator":"===","right":{"type":"Literal","start":5813,"end":5817,"value":true,"raw":"true"}},"consequent":{"type":"BlockStatement","start":5819,"end":5988,"body":[{"type":"ExpressionStatement","start":5834,"end":5858,"expression":{"type":"AssignmentExpression","start":5834,"end":5857,"operator":"=","left":{"type":"MemberExpression","start":5834,"end":5850,"object":{"type":"Identifier","start":5834,"end":5841,"name":"options"},"property":{"type":"Identifier","start":5842,"end":5850,"name":"beautify"},"computed":false,"optional":false},"right":{"type":"Literal","start":5853,"end":5857,"value":true,"raw":"true"}}},{"type":"ExpressionStatement","start":5872,"end":5900,"expression":{"type":"AssignmentExpression","start":5872,"end":5899,"operator":"=","left":{"type":"MemberExpression","start":5872,"end":5892,"object":{"type":"Identifier","start":5872,"end":5879,"name":"options"},"property":{"type":"Identifier","start":5880,"end":5892,"name":"indentString"},"computed":false,"optional":false},"right":{"type":"Literal","start":5895,"end":5899,"value":"  ","raw":"'  '"}}},{"type":"ExpressionStatement","start":5914,"end":5977,"expression":{"type":"AssignmentExpression","start":5914,"end":5976,"operator":"=","left":{"type":"MemberExpression","start":5914,"end":5942,"object":{"type":"Identifier","start":5914,"end":5921,"name":"options"},"property":{"type":"Identifier","start":5922,"end":5942,"name":"mixedContentElements"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":5945,"end":5976,"callee":{"type":"MemberExpression","start":5945,"end":5974,"object":{"type":"ThisExpression","start":5945,"end":5949},"property":{"type":"Identifier","start":5950,"end":5974,"name":"elementsWithMixedContent"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":null},{"type":"VariableDeclaration","start":5998,"end":6082,"declarations":[{"type":"VariableDeclarator","start":6004,"end":6081,"id":{"type":"Identifier","start":6004,"end":6010,"name":"result"},"init":{"type":"CallExpression","start":6013,"end":6081,"callee":{"type":"MemberExpression","start":6013,"end":6050,"object":{"type":"NewExpression","start":6013,"end":6032,"callee":{"type":"Identifier","start":6017,"end":6030,"name":"XmlSerializer"},"arguments":[]},"property":{"type":"Identifier","start":6033,"end":6050,"name":"serializeToString"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6051,"end":6071,"object":{"type":"ThisExpression","start":6051,"end":6055},"property":{"type":"Identifier","start":6056,"end":6071,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Identifier","start":6073,"end":6080,"name":"options"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":6092,"end":6281,"test":{"type":"MemberExpression","start":6096,"end":6117,"object":{"type":"ThisExpression","start":6096,"end":6100},"property":{"type":"Identifier","start":6101,"end":6117,"name":"_fileEndsWithEOL"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":6119,"end":6226,"body":[{"type":"ReturnStatement","start":6194,"end":6215,"argument":{"type":"BinaryExpression","start":6201,"end":6214,"left":{"type":"Identifier","start":6201,"end":6207,"name":"result"},"operator":"+","right":{"type":"Literal","start":6210,"end":6214,"value":"\n","raw":"'\\n'"}}}]},"alternate":{"type":"BlockStatement","start":6241,"end":6281,"body":[{"type":"ReturnStatement","start":6256,"end":6270,"argument":{"type":"Identifier","start":6263,"end":6269,"name":"result"}}]}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":6293,"end":26823}]},"code":"import { STATE_NEW, STATE_TRANSLATED } from '../api/constants';\r\nimport { isNullOrUndefined } from 'is-what';\r\nimport { DOMParser } from 'xmldom';\r\nimport { XmlSerializer } from './xml-serializer';\r\n/**\r\n * Created by roobm on 09.05.2017.\r\n * Abstract superclass for all implementations of ITranslationMessagesFile.\r\n */\r\nexport class AbstractTranslationMessagesFile {\r\n    constructor() {\r\n        this.transUnits = null;\r\n        this._warnings = [];\r\n    }\r\n    /**\r\n     * Parse file content.\r\n     * Sets _parsedDocument, line ending, encoding, etc.\r\n     * @param xmlString xmlString\r\n     * @param path path\r\n     * @param encoding encoding\r\n     * @param optionalMaster optionalMaster\r\n     */\r\n    parseContent(xmlString, path, encoding, optionalMaster) {\r\n        this._filename = path;\r\n        this._encoding = encoding;\r\n        this._parsedDocument = new DOMParser().parseFromString(xmlString, 'text/xml');\r\n        this._fileEndsWithEOL = xmlString.endsWith('\\n');\r\n    }\r\n    lazyInitializeTransUnits() {\r\n        if (isNullOrUndefined(this.transUnits)) {\r\n            this.initializeTransUnits();\r\n            this.countNumbers();\r\n        }\r\n    }\r\n    /**\r\n     * count units after changes of trans units\r\n     */\r\n    countNumbers() {\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this._numberOfUntranslatedTransUnits = 0;\r\n        this._numberOfReviewedTransUnits = 0;\r\n        this.forEachTransUnit((tu) => {\r\n            if (isNullOrUndefined(tu.id) || tu.id === '') {\r\n                this._numberOfTransUnitsWithMissingId++;\r\n            }\r\n            const state = tu.targetState();\r\n            if (isNullOrUndefined(state) || state === STATE_NEW) {\r\n                this._numberOfUntranslatedTransUnits++;\r\n            }\r\n            if (state === STATE_TRANSLATED) {\r\n                this._numberOfReviewedTransUnits++;\r\n            }\r\n        });\r\n    }\r\n    warnings() {\r\n        this.lazyInitializeTransUnits();\r\n        return this._warnings;\r\n    }\r\n    /**\r\n     * Total number of translation units found in the file.\r\n     */\r\n    numberOfTransUnits() {\r\n        this.lazyInitializeTransUnits();\r\n        return this.transUnits.length;\r\n    }\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     */\r\n    numberOfUntranslatedTransUnits() {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfUntranslatedTransUnits;\r\n    }\r\n    /**\r\n     * Number of translation units with state 'final'.\r\n     */\r\n    numberOfReviewedTransUnits() {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfReviewedTransUnits;\r\n    }\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     */\r\n    numberOfTransUnitsWithMissingId() {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfTransUnitsWithMissingId;\r\n    }\r\n    /**\r\n     * Loop over all Translation Units.\r\n     * @param callback callback\r\n     */\r\n    forEachTransUnit(callback) {\r\n        this.lazyInitializeTransUnits();\r\n        this.transUnits.forEach((tu) => callback(tu));\r\n    }\r\n    /**\r\n     * Get trans-unit with given id.\r\n     * @param id id\r\n     * @return trans-unit with given id.\r\n     */\r\n    transUnitWithId(id) {\r\n        this.lazyInitializeTransUnits();\r\n        return this.transUnits.find((tu) => tu.id === id);\r\n    }\r\n    /**\r\n     * Set the praefix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param targetPraefix targetPraefix\r\n     */\r\n    setNewTransUnitTargetPraefix(targetPraefix) {\r\n        this.targetPraefix = targetPraefix;\r\n    }\r\n    /**\r\n     * Get the praefix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return the praefix used when copying source to target.\r\n     */\r\n    getNewTransUnitTargetPraefix() {\r\n        return isNullOrUndefined(this.targetPraefix) ? '' : this.targetPraefix;\r\n    }\r\n    /**\r\n     * Set the suffix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param targetSuffix targetSuffix\r\n     */\r\n    setNewTransUnitTargetSuffix(targetSuffix) {\r\n        this.targetSuffix = targetSuffix;\r\n    }\r\n    /**\r\n     * Get the suffix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return the suffix used when copying source to target.\r\n     */\r\n    getNewTransUnitTargetSuffix() {\r\n        return isNullOrUndefined(this.targetSuffix) ? '' : this.targetSuffix;\r\n    }\r\n    /**\r\n     * Remove the trans-unit with the given id.\r\n     * @param id id\r\n     */\r\n    removeTransUnitWithId(id) {\r\n        const tuNode = this._parsedDocument.getElementById(id);\r\n        if (tuNode) {\r\n            tuNode.parentNode.removeChild(tuNode);\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits = this.transUnits.filter((tu) => tu.id !== id);\r\n            this.countNumbers();\r\n        }\r\n    }\r\n    /**\r\n     * The filename where the data is read from.\r\n     */\r\n    filename() {\r\n        return this._filename;\r\n    }\r\n    /**\r\n     * The encoding if the xml content (UTF-8, ISO-8859-1, ...)\r\n     */\r\n    encoding() {\r\n        return this._encoding;\r\n    }\r\n    /**\r\n     * The xml content to be saved after changes are made.\r\n     * @param beautifyOutput Flag whether to use pretty-data to format the output.\r\n     * XMLSerializer produces some correct but strangely formatted output, which pretty-data can correct.\r\n     * See issue #64 for details.\r\n     * Default is false.\r\n     */\r\n    editedContent(beautifyOutput) {\r\n        const options = {};\r\n        if (beautifyOutput === true) {\r\n            options.beautify = true;\r\n            options.indentString = '  ';\r\n            options.mixedContentElements = this.elementsWithMixedContent();\r\n        }\r\n        const result = new XmlSerializer().serializeToString(this._parsedDocument, options);\r\n        if (this._fileEndsWithEOL) {\r\n            // add eol if there was eol in original source\r\n            return result + '\\n';\r\n        }\r\n        else {\r\n            return result;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","is-what","xmldom","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xml-serializer.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-translation-messages-file.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { STATE_NEW, STATE_TRANSLATED } from '../api/constants';\r\nimport { isNullOrUndefined } from 'is-what';\r\nimport { DOMParser } from 'xmldom';\r\nimport { XmlSerializer } from './xml-serializer';\r\n/**\r\n * Created by roobm on 09.05.2017.\r\n * Abstract superclass for all implementations of ITranslationMessagesFile.\r\n */\r\nexport class AbstractTranslationMessagesFile {\r\n    constructor() {\r\n        this.transUnits = null;\r\n        this._warnings = [];\r\n    }\r\n    /**\r\n     * Parse file content.\r\n     * Sets _parsedDocument, line ending, encoding, etc.\r\n     * @param xmlString xmlString\r\n     * @param path path\r\n     * @param encoding encoding\r\n     * @param optionalMaster optionalMaster\r\n     */\r\n    parseContent(xmlString, path, encoding, optionalMaster) {\r\n        this._filename = path;\r\n        this._encoding = encoding;\r\n        this._parsedDocument = new DOMParser().parseFromString(xmlString, 'text/xml');\r\n        this._fileEndsWithEOL = xmlString.endsWith('\\n');\r\n    }\r\n    lazyInitializeTransUnits() {\r\n        if (isNullOrUndefined(this.transUnits)) {\r\n            this.initializeTransUnits();\r\n            this.countNumbers();\r\n        }\r\n    }\r\n    /**\r\n     * count units after changes of trans units\r\n     */\r\n    countNumbers() {\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this._numberOfUntranslatedTransUnits = 0;\r\n        this._numberOfReviewedTransUnits = 0;\r\n        this.forEachTransUnit((tu) => {\r\n            if (isNullOrUndefined(tu.id) || tu.id === '') {\r\n                this._numberOfTransUnitsWithMissingId++;\r\n            }\r\n            const state = tu.targetState();\r\n            if (isNullOrUndefined(state) || state === STATE_NEW) {\r\n                this._numberOfUntranslatedTransUnits++;\r\n            }\r\n            if (state === STATE_TRANSLATED) {\r\n                this._numberOfReviewedTransUnits++;\r\n            }\r\n        });\r\n    }\r\n    warnings() {\r\n        this.lazyInitializeTransUnits();\r\n        return this._warnings;\r\n    }\r\n    /**\r\n     * Total number of translation units found in the file.\r\n     */\r\n    numberOfTransUnits() {\r\n        this.lazyInitializeTransUnits();\r\n        return this.transUnits.length;\r\n    }\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     */\r\n    numberOfUntranslatedTransUnits() {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfUntranslatedTransUnits;\r\n    }\r\n    /**\r\n     * Number of translation units with state 'final'.\r\n     */\r\n    numberOfReviewedTransUnits() {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfReviewedTransUnits;\r\n    }\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     */\r\n    numberOfTransUnitsWithMissingId() {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfTransUnitsWithMissingId;\r\n    }\r\n    /**\r\n     * Loop over all Translation Units.\r\n     * @param callback callback\r\n     */\r\n    forEachTransUnit(callback) {\r\n        this.lazyInitializeTransUnits();\r\n        this.transUnits.forEach((tu) => callback(tu));\r\n    }\r\n    /**\r\n     * Get trans-unit with given id.\r\n     * @param id id\r\n     * @return trans-unit with given id.\r\n     */\r\n    transUnitWithId(id) {\r\n        this.lazyInitializeTransUnits();\r\n        return this.transUnits.find((tu) => tu.id === id);\r\n    }\r\n    /**\r\n     * Set the praefix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param targetPraefix targetPraefix\r\n     */\r\n    setNewTransUnitTargetPraefix(targetPraefix) {\r\n        this.targetPraefix = targetPraefix;\r\n    }\r\n    /**\r\n     * Get the praefix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return the praefix used when copying source to target.\r\n     */\r\n    getNewTransUnitTargetPraefix() {\r\n        return isNullOrUndefined(this.targetPraefix) ? '' : this.targetPraefix;\r\n    }\r\n    /**\r\n     * Set the suffix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param targetSuffix targetSuffix\r\n     */\r\n    setNewTransUnitTargetSuffix(targetSuffix) {\r\n        this.targetSuffix = targetSuffix;\r\n    }\r\n    /**\r\n     * Get the suffix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return the suffix used when copying source to target.\r\n     */\r\n    getNewTransUnitTargetSuffix() {\r\n        return isNullOrUndefined(this.targetSuffix) ? '' : this.targetSuffix;\r\n    }\r\n    /**\r\n     * Remove the trans-unit with the given id.\r\n     * @param id id\r\n     */\r\n    removeTransUnitWithId(id) {\r\n        const tuNode = this._parsedDocument.getElementById(id);\r\n        if (tuNode) {\r\n            tuNode.parentNode.removeChild(tuNode);\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits = this.transUnits.filter((tu) => tu.id !== id);\r\n            this.countNumbers();\r\n        }\r\n    }\r\n    /**\r\n     * The filename where the data is read from.\r\n     */\r\n    filename() {\r\n        return this._filename;\r\n    }\r\n    /**\r\n     * The encoding if the xml content (UTF-8, ISO-8859-1, ...)\r\n     */\r\n    encoding() {\r\n        return this._encoding;\r\n    }\r\n    /**\r\n     * The xml content to be saved after changes are made.\r\n     * @param beautifyOutput Flag whether to use pretty-data to format the output.\r\n     * XMLSerializer produces some correct but strangely formatted output, which pretty-data can correct.\r\n     * See issue #64 for details.\r\n     * Default is false.\r\n     */\r\n    editedContent(beautifyOutput) {\r\n        const options = {};\r\n        if (beautifyOutput === true) {\r\n            options.beautify = true;\r\n            options.indentString = '  ';\r\n            options.mixedContentElements = this.elementsWithMixedContent();\r\n        }\r\n        const result = new XmlSerializer().serializeToString(this._parsedDocument, options);\r\n        if (this._fileEndsWithEOL) {\r\n            // add eol if there was eol in original source\r\n            return result + '\\n';\r\n        }\r\n        else {\r\n            return result;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"abstract-translation-messages-file.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/abstract-translation-messages-file.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[18,0,0,17],[20,0,0,19],[36,0,0,35],[38,0,0,36],[44,0,0,42],[62,0,0,60],[63,0,0,61]],[[0,0,3,0],[7,0,3,7],[9,0,3,8],[26,0,3,25],[28,0,3,26],[34,0,3,32],[43,0,3,41],[44,0,3,42]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[18,0,4,17],[20,0,4,18],[26,0,4,24],[34,0,4,32],[35,0,4,33]],[[0,0,5,0],[7,0,5,7],[9,0,5,8],[22,0,5,21],[24,0,5,44],[30,0,5,50],[48,0,5,68],[49,0,5,69]],[[0,0,6,0]],[],[],[[3,0,9,3]],[[0,0,11,0],[6,0,11,6],[13,0,11,22],[44,0,11,53]],[[4,0,36,4]],[[8,0,37,8],[12,0,37,12],[13,0,37,13],[23,0,37,23],[26,0,37,26],[30,0,37,30],[31,0,37,31]],[[8,0,38,8],[12,0,38,12],[13,0,38,13],[22,0,38,22],[25,0,38,25],[27,0,38,27],[28,0,38,28]],[[4,0,39,4],[5,0,39,5]],[[4,0,41,4]],[],[],[],[],[],[],[[7,0,48,7]],[[4,0,49,14],[16,0,49,26],[17,0,50,8],[26,0,50,25],[28,0,51,8],[32,0,51,20],[34,0,51,22],[42,0,51,46],[44,0,52,8],[58,0,52,88]],[[8,0,54,8],[12,0,54,12],[13,0,54,13],[22,0,54,22],[25,0,54,25],[29,0,54,29],[30,0,54,30]],[[8,0,55,8],[12,0,55,12],[13,0,55,13],[22,0,55,22],[25,0,55,25],[33,0,55,33],[34,0,55,34]],[[8,0,56,8],[12,0,56,12],[13,0,56,13],[28,0,56,28],[31,0,56,31],[35,0,56,35],[44,0,56,44],[46,0,56,46],[47,0,56,47],[62,0,56,62],[63,0,56,63],[72,0,56,72],[74,0,56,74],[84,0,56,84],[85,0,56,85],[86,0,56,86]],[[8,0,57,8],[12,0,57,12],[13,0,57,13],[29,0,57,29],[32,0,57,32],[41,0,57,41],[42,0,57,42],[50,0,57,50],[51,0,57,51],[55,0,57,55],[56,0,57,56],[57,0,57,57]],[[4,0,58,4],[5,0,58,5]],[[4,0,78,14],[28,0,78,38]],[[8,0,79,8],[12,0,79,12],[29,0,79,29],[30,0,79,30],[34,0,79,34],[35,0,79,35],[45,0,79,45],[46,0,79,46],[48,0,79,48]],[[12,0,80,12],[16,0,80,16],[17,0,80,17],[37,0,80,37],[39,0,80,39],[40,0,80,40]],[[12,0,81,12],[16,0,81,16],[17,0,81,17],[29,0,81,29],[31,0,81,31],[32,0,81,32]],[[9,0,82,9]],[[4,0,83,4],[5,0,83,5]],[[4,0,85,4]],[],[[7,0,87,7]],[[4,0,88,11],[16,0,88,23]],[[8,0,89,8],[12,0,89,12],[13,0,89,13],[45,0,89,45],[48,0,89,48],[49,0,89,49],[50,0,89,50]],[[8,0,90,8],[12,0,90,12],[13,0,90,13],[44,0,90,44],[47,0,90,47],[48,0,90,48],[49,0,90,49]],[[8,0,91,8],[12,0,91,12],[13,0,91,13],[40,0,91,40],[43,0,91,43],[44,0,91,44],[45,0,91,45]],[[8,0,92,8],[12,0,92,12],[13,0,92,13],[29,0,92,29],[30,0,92,30],[31,0,92,31],[33,0,92,45],[35,0,92,47],[37,0,92,49]],[[12,0,93,12],[16,0,93,16],[33,0,93,33],[34,0,93,34],[36,0,93,36],[37,0,93,37],[39,0,93,39],[40,0,93,40],[44,0,93,44],[46,0,93,46],[47,0,93,47],[49,0,93,49],[54,0,93,54],[56,0,93,56],[58,0,93,58]],[[16,0,94,16],[20,0,94,20],[21,0,94,21],[53,0,94,53],[55,0,94,55],[56,0,94,56]],[[13,0,95,13]],[[12,0,96,12],[18,0,96,18],[23,0,96,23],[26,0,96,26],[28,0,96,28],[29,0,96,29],[40,0,96,40],[42,0,96,42],[43,0,96,43]],[[12,0,97,12],[16,0,97,16],[33,0,97,33],[34,0,97,34],[39,0,97,39],[40,0,97,40],[44,0,97,44],[49,0,97,49],[54,0,97,54],[63,0,97,63],[65,0,97,65]],[[16,0,98,16],[20,0,98,20],[21,0,98,21],[52,0,98,52],[54,0,98,54],[55,0,98,55]],[[13,0,99,13]],[[12,0,100,12],[16,0,100,16],[21,0,100,21],[26,0,100,26],[42,0,100,42],[44,0,100,44]],[[16,0,101,16],[20,0,101,20],[21,0,101,21],[48,0,101,48],[50,0,101,50],[51,0,101,51]],[[13,0,102,13]],[[8,0,103,8],[9,0,103,9],[10,0,103,10],[11,0,103,11]],[[4,0,104,4],[5,0,104,5]],[[4,0,106,11],[12,0,106,19]],[[8,0,107,8],[12,0,107,12],[13,0,107,13],[37,0,107,37],[39,0,107,39],[40,0,107,40]],[[8,0,108,8],[15,0,108,15],[19,0,108,19],[20,0,108,20],[29,0,108,29],[30,0,108,30]],[[4,0,109,4],[5,0,109,5]],[[4,0,111,4]],[],[[7,0,113,7]],[[4,0,114,11],[22,0,114,29]],[[8,0,115,8],[12,0,115,12],[13,0,115,13],[37,0,115,37],[39,0,115,39],[40,0,115,40]],[[8,0,116,8],[15,0,116,15],[19,0,116,19],[20,0,116,20],[30,0,116,30],[31,0,116,31],[37,0,116,37],[38,0,116,38]],[[4,0,117,4],[5,0,117,5]],[[4,0,119,4]],[],[],[[7,0,122,7]],[[4,0,123,4],[34,0,123,34]],[[8,0,124,8],[12,0,124,12],[13,0,124,13],[37,0,124,37],[39,0,124,39],[40,0,124,40]],[[8,0,125,8],[15,0,125,15],[19,0,125,19],[20,0,125,20],[51,0,125,51],[52,0,125,52]],[[4,0,126,4],[5,0,126,5]],[[4,0,128,4]],[],[[7,0,130,7]],[[4,0,131,4],[30,0,131,30]],[[8,0,132,8],[12,0,132,12],[13,0,132,13],[37,0,132,37],[39,0,132,39],[40,0,132,40]],[[8,0,133,8],[15,0,133,15],[19,0,133,19],[20,0,133,20],[47,0,133,47],[48,0,133,48]],[[4,0,134,4],[5,0,134,5]],[[4,0,136,4]],[],[],[[7,0,139,7]],[[4,0,140,11],[35,0,140,42]],[[8,0,141,8],[12,0,141,12],[13,0,141,13],[37,0,141,37],[39,0,141,39],[40,0,141,40]],[[8,0,142,8],[15,0,142,15],[19,0,142,19],[20,0,142,20],[52,0,142,52],[53,0,142,53]],[[4,0,143,4],[5,0,143,5]],[[4,0,157,4]],[],[],[[7,0,160,7]],[[4,0,161,11],[20,0,161,27],[21,0,161,28],[29,0,161,71]],[[8,0,162,8],[12,0,162,12],[13,0,162,13],[37,0,162,37],[39,0,162,39],[40,0,162,40]],[[8,0,163,8],[12,0,163,12],[13,0,163,13],[23,0,163,23],[24,0,163,24],[31,0,163,31],[32,0,163,32],[33,0,163,33],[35,0,163,35],[37,0,163,37],[39,0,163,39],[40,0,163,40],[48,0,163,48],[49,0,163,49],[51,0,163,51],[52,0,163,52],[53,0,163,53],[54,0,163,54]],[[4,0,164,4],[5,0,164,5]],[[4,0,166,4]],[],[],[],[[7,0,170,7]],[[4,0,171,11],[19,0,171,26],[20,0,171,27],[22,0,171,37]],[[8,0,172,8],[12,0,172,12],[13,0,172,13],[37,0,172,37],[39,0,172,39],[40,0,172,40]],[[8,0,173,8],[15,0,173,15],[19,0,173,19],[20,0,173,20],[30,0,173,30],[31,0,173,31],[35,0,173,35],[36,0,173,36],[37,0,173,37],[39,0,173,39],[41,0,173,41],[43,0,173,43],[44,0,173,44],[46,0,173,46],[47,0,173,47],[49,0,173,49],[54,0,173,54],[56,0,173,56],[57,0,173,57],[58,0,173,58]],[[4,0,174,4],[5,0,174,5]],[[4,0,192,4]],[],[],[],[],[[7,0,197,7]],[[4,0,198,11],[32,0,198,39],[33,0,198,40],[46,0,198,61]],[[8,0,199,8],[12,0,199,12],[13,0,199,13],[26,0,199,26],[29,0,199,29],[42,0,199,42],[43,0,199,43]],[[4,0,200,4],[5,0,200,5]],[[4,0,202,4]],[],[],[],[[7,0,206,7]],[[4,0,207,4],[32,0,207,32]],[[8,0,208,8],[15,0,208,15],[32,0,208,32],[33,0,208,33],[37,0,208,37],[38,0,208,38],[51,0,208,51],[52,0,208,52],[53,0,208,53],[54,0,208,54],[55,0,208,55],[57,0,208,57],[58,0,208,58],[59,0,208,59],[60,0,208,60],[64,0,208,64],[65,0,208,65],[78,0,208,78],[79,0,208,79]],[[4,0,209,4],[5,0,209,5]],[[4,0,211,4]],[],[],[],[],[[7,0,216,7]],[[4,0,217,11],[31,0,217,38],[32,0,217,39],[44,0,217,59]],[[8,0,218,8],[12,0,218,12],[13,0,218,13],[25,0,218,25],[28,0,218,28],[40,0,218,40],[41,0,218,41]],[[4,0,219,4],[5,0,219,5]],[[4,0,221,4]],[],[],[],[[7,0,225,7]],[[4,0,226,4],[31,0,226,31]],[[8,0,227,8],[15,0,227,15],[32,0,227,32],[33,0,227,33],[37,0,227,37],[38,0,227,38],[50,0,227,50],[51,0,227,51],[52,0,227,52],[53,0,227,53],[54,0,227,54],[56,0,227,56],[57,0,227,57],[58,0,227,58],[59,0,227,59],[63,0,227,63],[64,0,227,64],[76,0,227,76],[77,0,227,77]],[[4,0,228,4],[5,0,228,5]],[[4,0,255,4]],[],[],[[7,0,258,7]],[[4,0,259,11],[25,0,259,32],[26,0,259,33],[28,0,259,43]],[[8,0,260,8],[14,0,260,14],[20,0,260,20],[23,0,260,29],[27,0,260,33],[28,0,260,34],[43,0,260,49],[44,0,260,50],[58,0,260,64],[59,0,260,65],[61,0,260,67],[62,0,260,68],[63,0,260,69]],[[8,0,261,8],[12,0,261,12],[18,0,261,18],[20,0,261,20]],[[12,0,262,12],[18,0,262,18],[19,0,262,19],[29,0,262,29],[30,0,262,30],[41,0,262,41],[42,0,262,42],[48,0,262,48],[49,0,262,49],[50,0,262,50]],[[12,0,263,12],[16,0,263,16],[17,0,263,17],[41,0,263,41],[43,0,263,43],[44,0,263,44]],[[12,0,264,12],[16,0,264,16],[17,0,264,17],[27,0,264,27],[30,0,264,30],[34,0,264,34],[35,0,264,35],[45,0,264,45],[46,0,264,46],[52,0,264,52],[53,0,264,53],[54,0,264,54],[56,0,264,56],[58,0,264,58],[60,0,264,60],[61,0,264,61],[63,0,264,63],[64,0,264,64],[66,0,264,66],[71,0,264,71],[73,0,264,73],[74,0,264,74],[75,0,264,75]],[[12,0,265,12],[16,0,265,16],[17,0,265,17],[29,0,265,29],[31,0,265,31],[32,0,265,32]],[[9,0,266,9]],[[4,0,267,4],[5,0,267,5]],[[4,0,269,4]],[],[[7,0,271,7]],[[4,0,272,11],[12,0,272,19]],[[8,0,273,8],[15,0,273,15],[19,0,273,19],[20,0,273,20],[29,0,273,29],[30,0,273,30]],[[4,0,274,4],[5,0,274,5]],[[4,0,276,4]],[],[[7,0,278,7]],[[4,0,279,11],[12,0,279,19]],[[8,0,280,8],[15,0,280,15],[19,0,280,19],[20,0,280,20],[29,0,280,29],[30,0,280,30]],[[4,0,281,4],[5,0,281,5]],[[4,0,283,4]],[],[],[],[],[],[[7,0,289,7]],[[4,0,290,11],[17,0,290,24],[18,0,290,25],[32,0,290,49]],[[8,0,291,8],[14,0,291,14],[21,0,291,21],[24,0,291,46],[26,0,291,48],[27,0,291,49]],[[8,0,292,8],[12,0,292,12],[26,0,292,26],[31,0,292,31],[35,0,292,35],[37,0,292,37]],[[12,0,293,11],[19,0,293,18],[20,0,293,19],[28,0,293,27],[31,0,293,30],[35,0,293,34],[36,0,293,35]],[[12,0,294,11],[19,0,294,18],[20,0,294,19],[32,0,294,31],[35,0,294,34],[39,0,294,38],[40,0,294,39]],[[12,0,295,11],[19,0,295,18],[20,0,295,19],[40,0,295,39],[43,0,295,42],[47,0,295,46],[48,0,295,47],[72,0,295,71],[74,0,295,73],[75,0,295,74]],[[9,0,296,9]],[[8,0,297,8],[14,0,297,14],[20,0,297,20],[23,0,297,23],[27,0,297,27],[40,0,297,40],[42,0,297,42],[43,0,297,43],[60,0,297,60],[61,0,297,61],[65,0,297,65],[66,0,297,66],[81,0,297,81],[83,0,297,83],[90,0,297,90],[91,0,297,91],[92,0,297,92]],[[8,0,298,8],[12,0,298,12],[16,0,298,16],[17,0,298,17],[33,0,298,33],[35,0,298,35]],[[12,0,299,12],[58,0,299,58]],[[12,0,300,12],[19,0,300,19],[25,0,300,25],[28,0,300,28],[32,0,300,32],[33,0,300,33]],[[9,0,301,9]],[[13,0,301,15]],[[12,0,302,12],[19,0,302,19],[25,0,302,25],[26,0,302,26]],[[9,0,303,9]],[[4,0,304,4],[5,0,304,5]],[[1,0,322,1]]],"sourcesContent":["import {STATE_NEW, STATE_TRANSLATED} from '../api/constants';\r\nimport {ITranslationMessagesFile} from '../api/i-translation-messages-file';\r\nimport {ITransUnit} from '../api/i-trans-unit';\r\nimport {isNullOrUndefined} from 'is-what';\r\nimport {DOMParser} from 'xmldom';\r\nimport {XmlSerializer, XmlSerializerOptions} from './xml-serializer';\r\n/**\r\n * Created by roobm on 09.05.2017.\r\n * Abstract superclass for all implementations of ITranslationMessagesFile.\r\n */\r\n\r\nexport abstract class AbstractTranslationMessagesFile implements ITranslationMessagesFile {\r\n\r\n    protected _filename: string;\r\n\r\n    protected _encoding: BufferEncoding ;\r\n\r\n    protected _parsedDocument: Document;\r\n\r\n    protected _fileEndsWithEOL: boolean;\r\n\r\n    // trans-unit elements and their id from the file\r\n    protected transUnits: ITransUnit[];\r\n\r\n    protected _warnings: string[];\r\n\r\n    protected _numberOfTransUnitsWithMissingId: number;\r\n\r\n    protected _numberOfUntranslatedTransUnits: number;\r\n\r\n    protected _numberOfReviewedTransUnits: number;\r\n\r\n    protected targetPraefix: string;\r\n\r\n    protected targetSuffix: string;\r\n\r\n    protected constructor() {\r\n        this.transUnits = null;\r\n        this._warnings = [];\r\n    }\r\n\r\n    /**\r\n     * Parse file content.\r\n     * Sets _parsedDocument, line ending, encoding, etc.\r\n     * @param xmlString xmlString\r\n     * @param path path\r\n     * @param encoding encoding\r\n     * @param optionalMaster optionalMaster\r\n     */\r\n    protected parseContent(\r\n        xmlString: string,\r\n        path: string, encoding: BufferEncoding ,\r\n        optionalMaster?: { xmlContent: string, path: string, encoding: BufferEncoding  })\r\n        : void {\r\n        this._filename = path;\r\n        this._encoding = encoding;\r\n        this._parsedDocument = new DOMParser().parseFromString(xmlString, 'text/xml');\r\n        this._fileEndsWithEOL = xmlString.endsWith('\\n');\r\n    }\r\n\r\n    abstract i18nFormat(): string;\r\n\r\n    abstract fileType(): string;\r\n\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    protected abstract elementsWithMixedContent(): string[];\r\n\r\n    /**\r\n     * Read all trans units from xml content.\r\n     * Puts the found units into transUnits.\r\n     * Puts warnings for missing ids.\r\n     */\r\n    protected abstract initializeTransUnits();\r\n\r\n    protected lazyInitializeTransUnits() {\r\n        if (isNullOrUndefined(this.transUnits)) {\r\n            this.initializeTransUnits();\r\n            this.countNumbers();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * count units after changes of trans units\r\n     */\r\n    public countNumbers() {\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this._numberOfUntranslatedTransUnits = 0;\r\n        this._numberOfReviewedTransUnits = 0;\r\n        this.forEachTransUnit((tu: ITransUnit) => {\r\n            if (isNullOrUndefined(tu.id) || tu.id === '') {\r\n                this._numberOfTransUnitsWithMissingId++;\r\n            }\r\n            const state = tu.targetState();\r\n            if (isNullOrUndefined(state) || state === STATE_NEW) {\r\n                this._numberOfUntranslatedTransUnits++;\r\n            }\r\n            if (state === STATE_TRANSLATED) {\r\n                this._numberOfReviewedTransUnits++;\r\n            }\r\n        });\r\n    }\r\n\r\n    public warnings(): string[] {\r\n        this.lazyInitializeTransUnits();\r\n        return this._warnings;\r\n    }\r\n\r\n    /**\r\n     * Total number of translation units found in the file.\r\n     */\r\n    public numberOfTransUnits(): number {\r\n        this.lazyInitializeTransUnits();\r\n        return this.transUnits.length;\r\n    }\r\n\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     */\r\n    numberOfUntranslatedTransUnits(): number {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfUntranslatedTransUnits;\r\n    }\r\n\r\n    /**\r\n     * Number of translation units with state 'final'.\r\n     */\r\n    numberOfReviewedTransUnits(): number {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfReviewedTransUnits;\r\n    }\r\n\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     */\r\n    public numberOfTransUnitsWithMissingId(): number {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfTransUnitsWithMissingId;\r\n    }\r\n\r\n    /**\r\n     * Get source language.\r\n     * @return source language.\r\n     */\r\n    abstract sourceLanguage(): string;\r\n\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    abstract targetLanguage(): string;\r\n\r\n    /**\r\n     * Loop over all Translation Units.\r\n     * @param callback callback\r\n     */\r\n    public forEachTransUnit(callback: ((transunit: ITransUnit) => void)) {\r\n        this.lazyInitializeTransUnits();\r\n        this.transUnits.forEach((tu) => callback(tu));\r\n    }\r\n\r\n    /**\r\n     * Get trans-unit with given id.\r\n     * @param id id\r\n     * @return trans-unit with given id.\r\n     */\r\n    public transUnitWithId(id: string): ITransUnit {\r\n        this.lazyInitializeTransUnits();\r\n        return this.transUnits.find((tu) => tu.id === id);\r\n    }\r\n\r\n    /**\r\n     * Edit functions following her\r\n     */\r\n\r\n    /**\r\n     * Edit the source language.\r\n     * @param language language\r\n     */\r\n    abstract setSourceLanguage(language: string);\r\n\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    abstract setTargetLanguage(language: string);\r\n\r\n    /**\r\n     * Set the praefix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param targetPraefix targetPraefix\r\n     */\r\n    public setNewTransUnitTargetPraefix(targetPraefix: string) {\r\n        this.targetPraefix = targetPraefix;\r\n    }\r\n\r\n    /**\r\n     * Get the praefix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return the praefix used when copying source to target.\r\n     */\r\n    getNewTransUnitTargetPraefix(): string {\r\n        return isNullOrUndefined(this.targetPraefix) ? '' : this.targetPraefix;\r\n    }\r\n\r\n    /**\r\n     * Set the suffix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param targetSuffix targetSuffix\r\n     */\r\n    public setNewTransUnitTargetSuffix(targetSuffix: string) {\r\n        this.targetSuffix = targetSuffix;\r\n    }\r\n\r\n    /**\r\n     * Get the suffix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return the suffix used when copying source to target.\r\n     */\r\n    getNewTransUnitTargetSuffix(): string {\r\n        return isNullOrUndefined(this.targetSuffix) ? '' : this.targetSuffix;\r\n    }\r\n\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    abstract importNewTransUnit(foreignTransUnit: ITransUnit, isDefaultLang: boolean, copyContent: boolean, importAfterElement?: ITransUnit)\r\n        : ITransUnit;\r\n\r\n    /**\r\n     * Remove the trans-unit with the given id.\r\n     * @param id id\r\n     */\r\n    public removeTransUnitWithId(id: string) {\r\n        const tuNode: Node = this._parsedDocument.getElementById(id);\r\n        if (tuNode) {\r\n            tuNode.parentNode.removeChild(tuNode);\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits = this.transUnits.filter((tu) => tu.id !== id);\r\n            this.countNumbers();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The filename where the data is read from.\r\n     */\r\n    public filename(): string {\r\n        return this._filename;\r\n    }\r\n\r\n    /**\r\n     * The encoding if the xml content (UTF-8, ISO-8859-1, ...)\r\n     */\r\n    public encoding(): BufferEncoding {\r\n        return this._encoding;\r\n    }\r\n\r\n    /**\r\n     * The xml content to be saved after changes are made.\r\n     * @param beautifyOutput Flag whether to use pretty-data to format the output.\r\n     * XMLSerializer produces some correct but strangely formatted output, which pretty-data can correct.\r\n     * See issue #64 for details.\r\n     * Default is false.\r\n     */\r\n    public editedContent(beautifyOutput?: boolean): string {\r\n        const options: XmlSerializerOptions = {};\r\n        if (beautifyOutput === true) {\r\n           options.beautify = true;\r\n           options.indentString = '  ';\r\n           options.mixedContentElements = this.elementsWithMixedContent();\r\n        }\r\n        const result = new XmlSerializer().serializeToString(this._parsedDocument, options);\r\n        if (this._fileEndsWithEOL) {\r\n            // add eol if there was eol in original source\r\n            return result + '\\n';\r\n        } else {\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    abstract createTranslationFileForLang(lang: string, filename: string, isDefaultLang: boolean, copyContent: boolean)\r\n        : ITranslationMessagesFile;\r\n}\r\n"]},"resolvedIds":{"is-what":{"external":true,"id":"is-what","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"xmldom":{"external":true,"id":"xmldom","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../api/constants":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./xml-serializer":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xml-serializer.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":21287,"body":[{"type":"ImportDeclaration","start":0,"end":49,"specifiers":[{"type":"ImportSpecifier","start":9,"end":25,"imported":{"type":"Identifier","start":9,"end":25,"name":"STATE_TRANSLATED"},"local":{"type":"Identifier","start":9,"end":25,"name":"STATE_TRANSLATED"}}],"source":{"type":"Literal","start":33,"end":48,"value":"./internalapi","raw":"'./internalapi'"}},{"type":"ImportDeclaration","start":51,"end":138,"specifiers":[{"type":"ImportSpecifier","start":60,"end":91,"imported":{"type":"Identifier","start":60,"end":91,"name":"AbstractTranslationMessagesFile"},"local":{"type":"Identifier","start":60,"end":91,"name":"AbstractTranslationMessagesFile"}}],"source":{"type":"Literal","start":99,"end":137,"value":"./abstract-translation-messages-file","raw":"'./abstract-translation-messages-file'"}},{"type":"ImportDeclaration","start":140,"end":194,"specifiers":[{"type":"ImportSpecifier","start":149,"end":166,"imported":{"type":"Identifier","start":149,"end":166,"name":"isNullOrUndefined"},"local":{"type":"Identifier","start":149,"end":166,"name":"isNullOrUndefined"}},{"type":"ImportSpecifier","start":168,"end":176,"imported":{"type":"Identifier","start":168,"end":176,"name":"isString"},"local":{"type":"Identifier","start":168,"end":176,"name":"isString"}}],"source":{"type":"Literal","start":184,"end":193,"value":"is-what","raw":"'is-what'"}},{"type":"ExportNamedDeclaration","start":305,"end":4287,"declaration":{"type":"ClassDeclaration","start":312,"end":4287,"id":{"type":"Identifier","start":318,"end":335,"name":"AbstractTransUnit"},"superClass":null,"body":{"type":"ClassBody","start":336,"end":4287,"body":[{"type":"MethodDefinition","start":343,"end":531,"static":false,"computed":false,"key":{"type":"Identifier","start":343,"end":354,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":354,"end":531,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":355,"end":363,"name":"_element"},{"type":"Identifier","start":365,"end":368,"name":"_id"},{"type":"Identifier","start":370,"end":394,"name":"_translationMessagesFile"}],"body":{"type":"BlockStatement","start":396,"end":531,"body":[{"type":"ExpressionStatement","start":407,"end":432,"expression":{"type":"AssignmentExpression","start":407,"end":431,"operator":"=","left":{"type":"MemberExpression","start":407,"end":420,"object":{"type":"ThisExpression","start":407,"end":411},"property":{"type":"Identifier","start":412,"end":420,"name":"_element"},"computed":false,"optional":false},"right":{"type":"Identifier","start":423,"end":431,"name":"_element"}}},{"type":"ExpressionStatement","start":442,"end":457,"expression":{"type":"AssignmentExpression","start":442,"end":456,"operator":"=","left":{"type":"MemberExpression","start":442,"end":450,"object":{"type":"ThisExpression","start":442,"end":446},"property":{"type":"Identifier","start":447,"end":450,"name":"_id"},"computed":false,"optional":false},"right":{"type":"Identifier","start":453,"end":456,"name":"_id"}}},{"type":"ExpressionStatement","start":467,"end":524,"expression":{"type":"AssignmentExpression","start":467,"end":523,"operator":"=","left":{"type":"MemberExpression","start":467,"end":496,"object":{"type":"ThisExpression","start":467,"end":471},"property":{"type":"Identifier","start":472,"end":496,"name":"_translationMessagesFile"},"computed":false,"optional":false},"right":{"type":"Identifier","start":499,"end":523,"name":"_translationMessagesFile"}}}]}}},{"type":"MethodDefinition","start":537,"end":580,"static":false,"computed":false,"key":{"type":"Identifier","start":541,"end":543,"name":"id"},"kind":"get","value":{"type":"FunctionExpression","start":543,"end":580,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":546,"end":580,"body":[{"type":"ReturnStatement","start":557,"end":573,"argument":{"type":"MemberExpression","start":564,"end":572,"object":{"type":"ThisExpression","start":564,"end":568},"property":{"type":"Identifier","start":569,"end":572,"name":"_id"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":643,"end":724,"static":false,"computed":false,"key":{"type":"Identifier","start":643,"end":666,"name":"translationMessagesFile"},"kind":"method","value":{"type":"FunctionExpression","start":666,"end":724,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":669,"end":724,"body":[{"type":"ReturnStatement","start":680,"end":717,"argument":{"type":"MemberExpression","start":687,"end":716,"object":{"type":"ThisExpression","start":687,"end":691},"property":{"type":"Identifier","start":692,"end":716,"name":"_translationMessagesFile"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":930,"end":987,"static":false,"computed":false,"key":{"type":"Identifier","start":930,"end":954,"name":"supportsSetSourceContent"},"kind":"method","value":{"type":"FunctionExpression","start":954,"end":987,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":957,"end":987,"body":[{"type":"ReturnStatement","start":968,"end":980,"argument":{"type":"Literal","start":975,"end":979,"value":true,"raw":"true"}}]}}},{"type":"MethodDefinition","start":1093,"end":1333,"static":false,"computed":false,"key":{"type":"Identifier","start":1093,"end":1116,"name":"sourceContentNormalized"},"kind":"method","value":{"type":"FunctionExpression","start":1116,"end":1333,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1119,"end":1333,"body":[{"type":"IfStatement","start":1130,"end":1279,"test":{"type":"CallExpression","start":1134,"end":1182,"callee":{"type":"Identifier","start":1134,"end":1151,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":1152,"end":1181,"object":{"type":"ThisExpression","start":1152,"end":1156},"property":{"type":"Identifier","start":1157,"end":1181,"name":"_sourceContentNormalized"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":1184,"end":1279,"body":[{"type":"ExpressionStatement","start":1199,"end":1268,"expression":{"type":"AssignmentExpression","start":1199,"end":1267,"operator":"=","left":{"type":"MemberExpression","start":1199,"end":1228,"object":{"type":"ThisExpression","start":1199,"end":1203},"property":{"type":"Identifier","start":1204,"end":1228,"name":"_sourceContentNormalized"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1231,"end":1267,"callee":{"type":"MemberExpression","start":1231,"end":1265,"object":{"type":"ThisExpression","start":1231,"end":1235},"property":{"type":"Identifier","start":1236,"end":1265,"name":"createSourceContentNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":null},{"type":"ReturnStatement","start":1289,"end":1326,"argument":{"type":"MemberExpression","start":1296,"end":1325,"object":{"type":"ThisExpression","start":1296,"end":1300},"property":{"type":"Identifier","start":1301,"end":1325,"name":"_sourceContentNormalized"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":1487,"end":1621,"static":false,"computed":false,"key":{"type":"Identifier","start":1487,"end":1498,"name":"targetState"},"kind":"method","value":{"type":"FunctionExpression","start":1498,"end":1621,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1501,"end":1621,"body":[{"type":"VariableDeclaration","start":1512,"end":1557,"declarations":[{"type":"VariableDeclarator","start":1518,"end":1556,"id":{"type":"Identifier","start":1518,"end":1529,"name":"nativeState"},"init":{"type":"CallExpression","start":1532,"end":1556,"callee":{"type":"MemberExpression","start":1532,"end":1554,"object":{"type":"ThisExpression","start":1532,"end":1536},"property":{"type":"Identifier","start":1537,"end":1554,"name":"nativeTargetState"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":1567,"end":1614,"argument":{"type":"CallExpression","start":1574,"end":1613,"callee":{"type":"MemberExpression","start":1574,"end":1600,"object":{"type":"ThisExpression","start":1574,"end":1578},"property":{"type":"Identifier","start":1579,"end":1600,"name":"mapNativeStateToState"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1601,"end":1612,"name":"nativeState"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1828,"end":2096,"static":false,"computed":false,"key":{"type":"Identifier","start":1828,"end":1842,"name":"setTargetState"},"kind":"method","value":{"type":"FunctionExpression","start":1842,"end":2096,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1843,"end":1851,"name":"newState"}],"body":{"type":"BlockStatement","start":1853,"end":2096,"body":[{"type":"ExpressionStatement","start":1864,"end":1928,"expression":{"type":"CallExpression","start":1864,"end":1927,"callee":{"type":"MemberExpression","start":1864,"end":1889,"object":{"type":"ThisExpression","start":1864,"end":1868},"property":{"type":"Identifier","start":1869,"end":1889,"name":"setNativeTargetState"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1890,"end":1926,"callee":{"type":"MemberExpression","start":1890,"end":1916,"object":{"type":"ThisExpression","start":1890,"end":1894},"property":{"type":"Identifier","start":1895,"end":1916,"name":"mapStateToNativeState"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1917,"end":1925,"name":"newState"}],"optional":false}],"optional":false}},{"type":"IfStatement","start":1938,"end":2089,"test":{"type":"BinaryExpression","start":1942,"end":2015,"left":{"type":"CallExpression","start":1942,"end":1972,"callee":{"type":"MemberExpression","start":1942,"end":1970,"object":{"type":"ThisExpression","start":1942,"end":1946},"property":{"type":"Identifier","start":1947,"end":1970,"name":"translationMessagesFile"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"instanceof","right":{"type":"Identifier","start":1984,"end":2015,"name":"AbstractTranslationMessagesFile"}},"consequent":{"type":"BlockStatement","start":2017,"end":2089,"body":[{"type":"ExpressionStatement","start":2032,"end":2078,"expression":{"type":"CallExpression","start":2032,"end":2077,"callee":{"type":"MemberExpression","start":2032,"end":2075,"object":{"type":"CallExpression","start":2032,"end":2062,"callee":{"type":"MemberExpression","start":2032,"end":2060,"object":{"type":"ThisExpression","start":2032,"end":2036},"property":{"type":"Identifier","start":2037,"end":2060,"name":"translationMessagesFile"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":2063,"end":2075,"name":"countNumbers"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":2288,"end":2348,"static":false,"computed":false,"key":{"type":"Identifier","start":2288,"end":2315,"name":"supportsSetSourceReferences"},"kind":"method","value":{"type":"FunctionExpression","start":2315,"end":2348,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2318,"end":2348,"body":[{"type":"ReturnStatement","start":2329,"end":2341,"argument":{"type":"Literal","start":2336,"end":2340,"value":true,"raw":"true"}}]}}},{"type":"MethodDefinition","start":2562,"end":2627,"static":false,"computed":false,"key":{"type":"Identifier","start":2562,"end":2594,"name":"supportsSetDescriptionAndMeaning"},"kind":"method","value":{"type":"FunctionExpression","start":2594,"end":2627,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2597,"end":2627,"body":[{"type":"ReturnStatement","start":2608,"end":2620,"argument":{"type":"Literal","start":2615,"end":2619,"value":true,"raw":"true"}}]}}},{"type":"MethodDefinition","start":2801,"end":3128,"static":false,"computed":false,"key":{"type":"Identifier","start":2801,"end":2811,"name":"checkNotes"},"kind":"method","value":{"type":"FunctionExpression","start":2811,"end":3128,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2812,"end":2820,"name":"newNotes"}],"body":{"type":"BlockStatement","start":2822,"end":3128,"body":[{"type":"VariableDeclaration","start":2863,"end":2967,"declarations":[{"type":"VariableDeclarator","start":2869,"end":2966,"id":{"type":"Identifier","start":2869,"end":2884,"name":"errorInFromNote"},"init":{"type":"CallExpression","start":2887,"end":2966,"callee":{"type":"MemberExpression","start":2887,"end":2900,"object":{"type":"Identifier","start":2887,"end":2895,"name":"newNotes"},"property":{"type":"Identifier","start":2896,"end":2900,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":2901,"end":2965,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":2902,"end":2906,"name":"note"}],"body":{"type":"LogicalExpression","start":2911,"end":2965,"left":{"type":"BinaryExpression","start":2911,"end":2938,"left":{"type":"MemberExpression","start":2911,"end":2920,"object":{"type":"Identifier","start":2911,"end":2915,"name":"note"},"property":{"type":"Identifier","start":2916,"end":2920,"name":"from"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":2925,"end":2938,"value":"description","raw":"'description'"}},"operator":"||","right":{"type":"BinaryExpression","start":2942,"end":2965,"left":{"type":"MemberExpression","start":2942,"end":2951,"object":{"type":"Identifier","start":2942,"end":2946,"name":"note"},"property":{"type":"Identifier","start":2947,"end":2951,"name":"from"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":2956,"end":2965,"value":"meaning","raw":"'meaning'"}}}}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":2977,"end":3121,"test":{"type":"UnaryExpression","start":2981,"end":3016,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":2982,"end":3016,"callee":{"type":"Identifier","start":2982,"end":2999,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":3000,"end":3015,"name":"errorInFromNote"}],"optional":false}},"consequent":{"type":"BlockStatement","start":3018,"end":3121,"body":[{"type":"ThrowStatement","start":3033,"end":3110,"argument":{"type":"NewExpression","start":3039,"end":3109,"callee":{"type":"Identifier","start":3043,"end":3048,"name":"Error"},"arguments":[{"type":"Literal","start":3049,"end":3108,"value":"description or meaning are not allowed as from atttribute","raw":"'description or meaning are not allowed as from atttribute'"}]}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":3327,"end":3381,"static":false,"computed":false,"key":{"type":"Identifier","start":3327,"end":3339,"name":"asXmlElement"},"kind":"method","value":{"type":"FunctionExpression","start":3339,"end":3381,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":3342,"end":3381,"body":[{"type":"ReturnStatement","start":3353,"end":3374,"argument":{"type":"MemberExpression","start":3360,"end":3373,"object":{"type":"ThisExpression","start":3360,"end":3364},"property":{"type":"Identifier","start":3365,"end":3373,"name":"_element"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":3680,"end":4026,"static":false,"computed":false,"key":{"type":"Identifier","start":3680,"end":3689,"name":"translate"},"kind":"method","value":{"type":"FunctionExpression","start":3689,"end":4026,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3690,"end":3701,"name":"translation"}],"body":{"type":"BlockStatement","start":3703,"end":4026,"body":[{"type":"VariableDeclaration","start":3714,"end":3736,"declarations":[{"type":"VariableDeclarator","start":3718,"end":3735,"id":{"type":"Identifier","start":3718,"end":3735,"name":"translationNative"},"init":null}],"kind":"let"},{"type":"IfStatement","start":3746,"end":3921,"test":{"type":"CallExpression","start":3750,"end":3771,"callee":{"type":"Identifier","start":3750,"end":3758,"name":"isString"},"arguments":[{"type":"Identifier","start":3759,"end":3770,"name":"translation"}],"optional":false},"consequent":{"type":"BlockStatement","start":3773,"end":3831,"body":[{"type":"ExpressionStatement","start":3788,"end":3820,"expression":{"type":"AssignmentExpression","start":3788,"end":3819,"operator":"=","left":{"type":"Identifier","start":3788,"end":3805,"name":"translationNative"},"right":{"type":"Identifier","start":3808,"end":3819,"name":"translation"}}}]},"alternate":{"type":"BlockStatement","start":3846,"end":3921,"body":[{"type":"ExpressionStatement","start":3861,"end":3910,"expression":{"type":"AssignmentExpression","start":3861,"end":3909,"operator":"=","left":{"type":"Identifier","start":3861,"end":3878,"name":"translationNative"},"right":{"type":"CallExpression","start":3881,"end":3909,"callee":{"type":"MemberExpression","start":3881,"end":3907,"object":{"type":"Identifier","start":3881,"end":3892,"name":"translation"},"property":{"type":"Identifier","start":3893,"end":3907,"name":"asNativeString"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]}},{"type":"ExpressionStatement","start":3931,"end":3971,"expression":{"type":"CallExpression","start":3931,"end":3970,"callee":{"type":"MemberExpression","start":3931,"end":3951,"object":{"type":"ThisExpression","start":3931,"end":3935},"property":{"type":"Identifier","start":3936,"end":3951,"name":"translateNative"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3952,"end":3969,"name":"translationNative"}],"optional":false}},{"type":"ExpressionStatement","start":3981,"end":4019,"expression":{"type":"CallExpression","start":3981,"end":4018,"callee":{"type":"MemberExpression","start":3981,"end":4000,"object":{"type":"ThisExpression","start":3981,"end":3985},"property":{"type":"Identifier","start":3986,"end":4000,"name":"setTargetState"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4001,"end":4017,"name":"STATE_TRANSLATED"}],"optional":false}}]}}},{"type":"MethodDefinition","start":4189,"end":4284,"static":false,"computed":false,"key":{"type":"Identifier","start":4189,"end":4201,"name":"isICUMessage"},"kind":"method","value":{"type":"FunctionExpression","start":4201,"end":4284,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4202,"end":4209,"name":"message"}],"body":{"type":"BlockStatement","start":4211,"end":4284,"body":[{"type":"ReturnStatement","start":4222,"end":4277,"argument":{"type":"CallExpression","start":4229,"end":4276,"callee":{"type":"MemberExpression","start":4229,"end":4267,"object":{"type":"CallExpression","start":4229,"end":4249,"callee":{"type":"MemberExpression","start":4229,"end":4247,"object":{"type":"ThisExpression","start":4229,"end":4233},"property":{"type":"Identifier","start":4234,"end":4247,"name":"messageParser"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":4250,"end":4267,"name":"isICUMessageStart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4268,"end":4275,"name":"message"}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":4289,"end":21287}]},"code":"import { STATE_TRANSLATED } from './internalapi';\r\nimport { AbstractTranslationMessagesFile } from './abstract-translation-messages-file';\r\nimport { isNullOrUndefined, isString } from 'is-what';\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * Abstract superclass for all implementations of ITransUnit.\r\n */\r\nexport class AbstractTransUnit {\r\n    constructor(_element, _id, _translationMessagesFile) {\r\n        this._element = _element;\r\n        this._id = _id;\r\n        this._translationMessagesFile = _translationMessagesFile;\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    /**\r\n     * The file the unit belongs to.,\r\n     */\r\n    translationMessagesFile() {\r\n        return this._translationMessagesFile;\r\n    }\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetSourceContent() {\r\n        return true;\r\n    }\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    sourceContentNormalized() {\r\n        if (isNullOrUndefined(this._sourceContentNormalized)) {\r\n            this._sourceContentNormalized = this.createSourceContentNormalized();\r\n        }\r\n        return this._sourceContentNormalized;\r\n    }\r\n    /**\r\n     * State of the translation.\r\n     * (on of new, translated, final)\r\n     * Return values are defined as Constants STATE_...\r\n     */\r\n    targetState() {\r\n        const nativeState = this.nativeTargetState();\r\n        return this.mapNativeStateToState(nativeState);\r\n    }\r\n    /**\r\n     * Modify the target state.\r\n     * @param newState one of the 3 allowed target states new, translated, final.\r\n     * Constants STATE_...\r\n     * Invalid states throw an error.\r\n     */\r\n    setTargetState(newState) {\r\n        this.setNativeTargetState(this.mapStateToNativeState(newState));\r\n        if (this.translationMessagesFile() instanceof AbstractTranslationMessagesFile) {\r\n            this.translationMessagesFile().countNumbers();\r\n        }\r\n    }\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetSourceReferences() {\r\n        return true;\r\n    }\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetDescriptionAndMeaning() {\r\n        return true;\r\n    }\r\n    /**\r\n     * Check notes\r\n     * @param newNotes the notes to add.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     */\r\n    checkNotes(newNotes) {\r\n        // check from values\r\n        const errorInFromNote = newNotes.find((note) => note.from === 'description' || note.from === 'meaning');\r\n        if (!isNullOrUndefined(errorInFromNote)) {\r\n            throw new Error('description or meaning are not allowed as from atttribute');\r\n        }\r\n    }\r\n    /**\r\n     * The real xml element used for the trans unit.\r\n     * (internal usage only, a client should never need this)\r\n     * @return real xml element used for the trans unit.\r\n     */\r\n    asXmlElement() {\r\n        return this._element;\r\n    }\r\n    /**\r\n     * Translate the trans unit.\r\n     * @param translation the translated string or (preferred) a normalized message.\r\n     * The pure string can contain any markup and will not be checked.\r\n     * So it can damage the document.\r\n     * A normalized message prevents this.\r\n     */\r\n    translate(translation) {\r\n        let translationNative;\r\n        if (isString(translation)) {\r\n            translationNative = translation;\r\n        }\r\n        else {\r\n            translationNative = translation.asNativeString();\r\n        }\r\n        this.translateNative(translationNative);\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    }\r\n    /**\r\n     * Test, wether message looks like ICU message.\r\n     * @param message message\r\n     * @return wether message looks like ICU message.\r\n     */\r\n    isICUMessage(message) {\r\n        return this.messageParser().isICUMessageStart(message);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\internalapi.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-translation-messages-file.mjs","is-what"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-trans-unit.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { STATE_TRANSLATED } from './internalapi';\r\nimport { AbstractTranslationMessagesFile } from './abstract-translation-messages-file';\r\nimport { isNullOrUndefined, isString } from 'is-what';\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * Abstract superclass for all implementations of ITransUnit.\r\n */\r\nexport class AbstractTransUnit {\r\n    constructor(_element, _id, _translationMessagesFile) {\r\n        this._element = _element;\r\n        this._id = _id;\r\n        this._translationMessagesFile = _translationMessagesFile;\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    /**\r\n     * The file the unit belongs to.,\r\n     */\r\n    translationMessagesFile() {\r\n        return this._translationMessagesFile;\r\n    }\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetSourceContent() {\r\n        return true;\r\n    }\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    sourceContentNormalized() {\r\n        if (isNullOrUndefined(this._sourceContentNormalized)) {\r\n            this._sourceContentNormalized = this.createSourceContentNormalized();\r\n        }\r\n        return this._sourceContentNormalized;\r\n    }\r\n    /**\r\n     * State of the translation.\r\n     * (on of new, translated, final)\r\n     * Return values are defined as Constants STATE_...\r\n     */\r\n    targetState() {\r\n        const nativeState = this.nativeTargetState();\r\n        return this.mapNativeStateToState(nativeState);\r\n    }\r\n    /**\r\n     * Modify the target state.\r\n     * @param newState one of the 3 allowed target states new, translated, final.\r\n     * Constants STATE_...\r\n     * Invalid states throw an error.\r\n     */\r\n    setTargetState(newState) {\r\n        this.setNativeTargetState(this.mapStateToNativeState(newState));\r\n        if (this.translationMessagesFile() instanceof AbstractTranslationMessagesFile) {\r\n            this.translationMessagesFile().countNumbers();\r\n        }\r\n    }\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetSourceReferences() {\r\n        return true;\r\n    }\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetDescriptionAndMeaning() {\r\n        return true;\r\n    }\r\n    /**\r\n     * Check notes\r\n     * @param newNotes the notes to add.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     */\r\n    checkNotes(newNotes) {\r\n        // check from values\r\n        const errorInFromNote = newNotes.find((note) => note.from === 'description' || note.from === 'meaning');\r\n        if (!isNullOrUndefined(errorInFromNote)) {\r\n            throw new Error('description or meaning are not allowed as from atttribute');\r\n        }\r\n    }\r\n    /**\r\n     * The real xml element used for the trans unit.\r\n     * (internal usage only, a client should never need this)\r\n     * @return real xml element used for the trans unit.\r\n     */\r\n    asXmlElement() {\r\n        return this._element;\r\n    }\r\n    /**\r\n     * Translate the trans unit.\r\n     * @param translation the translated string or (preferred) a normalized message.\r\n     * The pure string can contain any markup and will not be checked.\r\n     * So it can damage the document.\r\n     * A normalized message prevents this.\r\n     */\r\n    translate(translation) {\r\n        let translationNative;\r\n        if (isString(translation)) {\r\n            translationNative = translation;\r\n        }\r\n        else {\r\n            translationNative = translation.asNativeString();\r\n        }\r\n        this.translateNative(translationNative);\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    }\r\n    /**\r\n     * Test, wether message looks like ICU message.\r\n     * @param message message\r\n     * @return wether message looks like ICU message.\r\n     */\r\n    isICUMessage(message) {\r\n        return this.messageParser().isICUMessageStart(message);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzdHJhY3QtdHJhbnMtdW5pdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1pMThuc3VwcG9ydC1saWIvc3JjL2ltcGwvYWJzdHJhY3QtdHJhbnMtdW5pdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsZ0JBQWdCLEVBQWtFLE1BQU0sZUFBZSxDQUFDO0FBQ2hILE9BQU8sRUFBQywrQkFBK0IsRUFBQyxNQUFNLHNDQUFzQyxDQUFDO0FBQ3JGLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSxRQUFRLEVBQUMsTUFBTSxTQUFTLENBQUM7QUFHcEQ7OztHQUdHO0FBRUgsTUFBTSxPQUFnQixpQkFBaUI7SUFJbkMsWUFBZ0MsUUFBaUIsRUFDakIsR0FBVyxFQUNYLHdCQUFrRDtRQUZsRCxhQUFRLEdBQVIsUUFBUSxDQUFTO1FBQ2pCLFFBQUcsR0FBSCxHQUFHLENBQVE7UUFDWCw2QkFBd0IsR0FBeEIsd0JBQXdCLENBQTBCO0lBQ2xGLENBQUM7SUFFRCxJQUFXLEVBQUU7UUFDVCxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDcEIsQ0FBQztJQUVEOztPQUVHO0lBQ0gsdUJBQXVCO1FBQ25CLE9BQU8sSUFBSSxDQUFDLHdCQUF3QixDQUFDO0lBQ3pDLENBQUM7SUFRRDs7OztPQUlHO0lBQ0gsd0JBQXdCO1FBQ3BCLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFVRDs7T0FFRztJQUNJLHVCQUF1QjtRQUMxQixJQUFJLGlCQUFpQixDQUFDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxFQUFFO1lBQ2xELElBQUksQ0FBQyx3QkFBd0IsR0FBRyxJQUFJLENBQUMsNkJBQTZCLEVBQUUsQ0FBQztTQUN4RTtRQUNELE9BQU8sSUFBSSxDQUFDLHdCQUF3QixDQUFDO0lBQ3pDLENBQUM7SUF5QkQ7Ozs7T0FJRztJQUNJLFdBQVc7UUFDZCxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUM3QyxPQUFPLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNuRCxDQUFDO0lBd0JEOzs7OztPQUtHO0lBQ0gsY0FBYyxDQUFDLFFBQWdCO1FBQzNCLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUNoRSxJQUFJLElBQUksQ0FBQyx1QkFBdUIsRUFBRSxZQUFZLCtCQUErQixFQUFFO1lBQ3hDLElBQUksQ0FBQyx1QkFBdUIsRUFBRyxDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ3JGO0lBQ0wsQ0FBQztJQVlEOzs7O09BSUc7SUFDSSwyQkFBMkI7UUFDOUIsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQXVCRDs7OztPQUlHO0lBQ0ksZ0NBQWdDO1FBQ25DLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFtQ0Q7Ozs7T0FJRztJQUNPLFVBQVUsQ0FBQyxRQUFpQjtRQUNsQyxvQkFBb0I7UUFDcEIsTUFBTSxlQUFlLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksS0FBSyxhQUFhLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxTQUFTLENBQUMsQ0FBQztRQUN4RyxJQUFJLENBQUMsaUJBQWlCLENBQUMsZUFBZSxDQUFDLEVBQUU7WUFDckMsTUFBTSxJQUFJLEtBQUssQ0FBQywyREFBMkQsQ0FBQyxDQUFDO1NBQ2hGO0lBQ0wsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxZQUFZO1FBQ2YsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFnQkQ7Ozs7OztPQU1HO0lBQ0ksU0FBUyxDQUFDLFdBQXdDO1FBQ3JELElBQUksaUJBQXlCLENBQUM7UUFDOUIsSUFBSSxRQUFRLENBQUMsV0FBVyxDQUFDLEVBQUU7WUFDdkIsaUJBQWlCLEdBQVksV0FBVyxDQUFDO1NBQzVDO2FBQU07WUFDSCxpQkFBaUIsR0FBeUIsV0FBWSxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQzNFO1FBQ0QsSUFBSSxDQUFDLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxjQUFjLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBT0Q7Ozs7T0FJRztJQUNJLFlBQVksQ0FBQyxPQUFlO1FBQy9CLE9BQU8sSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzNELENBQUM7Q0FPSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7U1RBVEVfVFJBTlNMQVRFRCwgSVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlLCBJTm9ybWFsaXplZE1lc3NhZ2UsIElUcmFuc1VuaXQsIElOb3RlfSBmcm9tICcuL2ludGVybmFsYXBpJztcclxuaW1wb3J0IHtBYnN0cmFjdFRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlfSBmcm9tICcuL2Fic3RyYWN0LXRyYW5zbGF0aW9uLW1lc3NhZ2VzLWZpbGUnO1xyXG5pbXBvcnQge2lzTnVsbE9yVW5kZWZpbmVkLCBpc1N0cmluZ30gZnJvbSAnaXMtd2hhdCc7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZSc7XHJcbmltcG9ydCB7QWJzdHJhY3RNZXNzYWdlUGFyc2VyfSBmcm9tICcuL2Fic3RyYWN0LW1lc3NhZ2UtcGFyc2VyJztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgcm9vYm0gb24gMTAuMDUuMjAxNy5cclxuICogQWJzdHJhY3Qgc3VwZXJjbGFzcyBmb3IgYWxsIGltcGxlbWVudGF0aW9ucyBvZiBJVHJhbnNVbml0LlxyXG4gKi9cclxuXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBBYnN0cmFjdFRyYW5zVW5pdCBpbXBsZW1lbnRzIElUcmFuc1VuaXQge1xyXG5cclxuICAgIHByaXZhdGUgX3NvdXJjZUNvbnRlbnROb3JtYWxpemVkOiBQYXJzZWRNZXNzYWdlO1xyXG5cclxuICAgIHByb3RlY3RlZCBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgX2VsZW1lbnQ6IEVsZW1lbnQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvdGVjdGVkIF9pZDogc3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHByb3RlY3RlZCBfdHJhbnNsYXRpb25NZXNzYWdlc0ZpbGU6IElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSkge1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgaWQoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faWQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgZmlsZSB0aGUgdW5pdCBiZWxvbmdzIHRvLixcclxuICAgICAqL1xyXG4gICAgdHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUoKTogSVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdHJhbnNsYXRpb25NZXNzYWdlc0ZpbGU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgb3JpZ2luYWwgdGV4dCB2YWx1ZSwgdGhhdCBpcyB0byBiZSB0cmFuc2xhdGVkLlxyXG4gICAgICogQ29udGFpbnMgYWxsIG1hcmt1cCwgZGVwZW5kcyBvbiB0aGUgY29uY3JldGUgZm9ybWF0IHVzZWQuXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IHNvdXJjZUNvbnRlbnQoKTogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGVzdCwgd2V0aGVyIHNldHRpbmcgb2Ygc291cmNlIGNvbnRlbnQgaXMgc3VwcG9ydGVkLlxyXG4gICAgICogSWYgbm90LCBzZXRTb3VyY2VDb250ZW50IGluIHRyYW5zLXVuaXQgd2lsbCBkbyBub3RoaW5nLlxyXG4gICAgICogeHRiIGRvZXMgbm90IHN1cHBvcnQgdGhpcywgYWxsIG90aGVyIGZvcm1hdHMgZG8uXHJcbiAgICAgKi9cclxuICAgIHN1cHBvcnRzU2V0U291cmNlQ29udGVudCgpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldCBuZXcgc291cmNlIGNvbnRlbnQgaW4gdGhlIHRyYW5zdW5pdC5cclxuICAgICAqIE5vcm1hbGx5LCB0aGlzIGlzIGRvbmUgYnkgbmctZXh0cmFjdC5cclxuICAgICAqIE1ldGhvZCBvbmx5IGV4aXN0cyB0byBhbGxvdyB4bGlmZm1lcmdlIHRvIG1lcmdlIG1pc3NpbmcgY2hhbmdlZCBzb3VyY2UgY29udGVudC5cclxuICAgICAqIEBwYXJhbSBuZXdDb250ZW50IHRoZSBuZXcgY29udGVudC5cclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3Qgc2V0U291cmNlQ29udGVudChuZXdDb250ZW50OiBzdHJpbmcpO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIG9yaWdpbmFsIHRleHQgdmFsdWUsIHRoYXQgaXMgdG8gYmUgdHJhbnNsYXRlZCwgYXMgbm9ybWFsaXplZCBtZXNzYWdlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc291cmNlQ29udGVudE5vcm1hbGl6ZWQoKTogUGFyc2VkTWVzc2FnZSB7XHJcbiAgICAgICAgaWYgKGlzTnVsbE9yVW5kZWZpbmVkKHRoaXMuX3NvdXJjZUNvbnRlbnROb3JtYWxpemVkKSkge1xyXG4gICAgICAgICAgICB0aGlzLl9zb3VyY2VDb250ZW50Tm9ybWFsaXplZCA9IHRoaXMuY3JlYXRlU291cmNlQ29udGVudE5vcm1hbGl6ZWQoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NvdXJjZUNvbnRlbnROb3JtYWxpemVkO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIG9yaWdpbmFsIHRleHQgdmFsdWUsIHRoYXQgaXMgdG8gYmUgdHJhbnNsYXRlZCwgYXMgbm9ybWFsaXplZCBtZXNzYWdlLlxyXG4gICAgICovXHJcbiAgICBhYnN0cmFjdCBjcmVhdGVTb3VyY2VDb250ZW50Tm9ybWFsaXplZCgpOiBQYXJzZWRNZXNzYWdlO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIHRyYW5zbGF0ZWQgdmFsdWUuXHJcbiAgICAgKiBDb250YWlucyBhbGwgbWFya3VwLCBkZXBlbmRzIG9uIHRoZSBjb25jcmV0ZSBmb3JtYXQgdXNlZC5cclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3QgdGFyZ2V0Q29udGVudCgpOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgdHJhbnNsYXRlZCB2YWx1ZSBhcyBub3JtYWxpemVkIG1lc3NhZ2UuXHJcbiAgICAgKiBBbGwgcGxhY2Vob2xkZXJzIGFyZSByZXBsYWNlZCB3aXRoIHt7bn19IChzdGFydGluZyBhdCAwKVxyXG4gICAgICogYW5kIGFsbCBlbWJlZGRlZCBodG1sIGlzIHJlcGxhY2VkIGJ5IGRpcmVjdCBodG1sIG1hcmt1cC5cclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3QgdGFyZ2V0Q29udGVudE5vcm1hbGl6ZWQoKTogSU5vcm1hbGl6ZWRNZXNzYWdlO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogU3RhdGUgb2YgdGhlIHRyYW5zbGF0aW9uIGFzIHN0b3JlZCBpbiB0aGUgeG1sLlxyXG4gICAgICovXHJcbiAgICBhYnN0cmFjdCBuYXRpdmVUYXJnZXRTdGF0ZSgpOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTdGF0ZSBvZiB0aGUgdHJhbnNsYXRpb24uXHJcbiAgICAgKiAob24gb2YgbmV3LCB0cmFuc2xhdGVkLCBmaW5hbClcclxuICAgICAqIFJldHVybiB2YWx1ZXMgYXJlIGRlZmluZWQgYXMgQ29uc3RhbnRzIFNUQVRFXy4uLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgdGFyZ2V0U3RhdGUoKTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCBuYXRpdmVTdGF0ZSA9IHRoaXMubmF0aXZlVGFyZ2V0U3RhdGUoKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5tYXBOYXRpdmVTdGF0ZVRvU3RhdGUobmF0aXZlU3RhdGUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTWFwIGFuIGFic3RyYWN0IHN0YXRlIChuZXcsIHRyYW5zbGF0ZWQsIGZpbmFsKSB0byBhIGNvbmNyZXRlIHN0YXRlIHVzZWQgaW4gdGhlIHhtbC5cclxuICAgICAqIFJldHVybnMgdGhlIHN0YXRlIHRvIGJlIHVzZWQgaW4gdGhlIHhtbC5cclxuICAgICAqIEBwYXJhbSBzdGF0ZSBvbmUgb2YgQ29uc3RhbnRzLlNUQVRFLi4uXHJcbiAgICAgKiBAcmV0dXJucyBhIG5hdGl2ZSBzdGF0ZSAoZGVwZW5kcyBvbiBjb25jcmV0ZSBmb3JtYXQpXHJcbiAgICAgKiBAdGhyb3dzIGVycm9yLCBpZiBzdGF0ZSBpcyBpbnZhbGlkLlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgYWJzdHJhY3QgbWFwU3RhdGVUb05hdGl2ZVN0YXRlKHN0YXRlOiBzdHJpbmcpOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNYXAgYSBuYXRpdmUgc3RhdGUgKGZvdW5kIGluIHRoZSBkb2N1bWVudCkgdG8gYW4gYWJzdHJhY3Qgc3RhdGUgKG5ldywgdHJhbnNsYXRlZCwgZmluYWwpLlxyXG4gICAgICogUmV0dXJucyB0aGUgYWJzdHJhY3Qgc3RhdGUuXHJcbiAgICAgKiBAcGFyYW0gbmF0aXZlU3RhdGUgbmF0aXZlU3RhdGVcclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IG1hcE5hdGl2ZVN0YXRlVG9TdGF0ZShuYXRpdmVTdGF0ZTogc3RyaW5nKTogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogc2V0IHN0YXRlIGluIHhtbC5cclxuICAgICAqIEBwYXJhbSBuYXRpdmVTdGF0ZSBuYXRpdmVTdGF0ZVxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgYWJzdHJhY3Qgc2V0TmF0aXZlVGFyZ2V0U3RhdGUobmF0aXZlU3RhdGU6IHN0cmluZyk7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNb2RpZnkgdGhlIHRhcmdldCBzdGF0ZS5cclxuICAgICAqIEBwYXJhbSBuZXdTdGF0ZSBvbmUgb2YgdGhlIDMgYWxsb3dlZCB0YXJnZXQgc3RhdGVzIG5ldywgdHJhbnNsYXRlZCwgZmluYWwuXHJcbiAgICAgKiBDb25zdGFudHMgU1RBVEVfLi4uXHJcbiAgICAgKiBJbnZhbGlkIHN0YXRlcyB0aHJvdyBhbiBlcnJvci5cclxuICAgICAqL1xyXG4gICAgc2V0VGFyZ2V0U3RhdGUobmV3U3RhdGU6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMuc2V0TmF0aXZlVGFyZ2V0U3RhdGUodGhpcy5tYXBTdGF0ZVRvTmF0aXZlU3RhdGUobmV3U3RhdGUpKTtcclxuICAgICAgICBpZiAodGhpcy50cmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSgpIGluc3RhbmNlb2YgQWJzdHJhY3RUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSkge1xyXG4gICAgICAgICAgICAoPEFic3RyYWN0VHJhbnNsYXRpb25NZXNzYWdlc0ZpbGU+IHRoaXMudHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUoKSkuY291bnROdW1iZXJzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQWxsIHRoZSBzb3VyY2UgZWxlbWVudHMgaW4gdGhlIHRyYW5zIHVuaXQuXHJcbiAgICAgKiBUaGUgc291cmNlIGVsZW1lbnQgaXMgYSByZWZlcmVuY2UgdG8gdGhlIG9yaWdpbmFsIHRlbXBsYXRlLlxyXG4gICAgICogSXQgY29udGFpbnMgdGhlIG5hbWUgb2YgdGhlIHRlbXBsYXRlIGZpbGUgYW5kIGEgbGluZSBudW1iZXIgd2l0aCB0aGUgcG9zaXRpb24gaW5zaWRlIHRoZSB0ZW1wbGF0ZS5cclxuICAgICAqIEl0IGlzIGp1c3QgYSBoZWxwIGZvciB0cmFuc2xhdG9ycyB0byBmaW5kIHRoZSBjb250ZXh0IGZvciB0aGUgdHJhbnNsYXRpb24uXHJcbiAgICAgKiBUaGlzIGlzIHNldCB3aGVuIHVzaW5nIEFuZ3VsYXIgNC4wIG9yIGdyZWF0ZXIuXHJcbiAgICAgKiBPdGhlcndpc2UgaXQganVzdCByZXR1cm5zIGFuIGVtcHR5IGFycmF5LlxyXG4gICAgICovXHJcbiAgICBhYnN0cmFjdCBzb3VyY2VSZWZlcmVuY2VzKCk6IHtzb3VyY2VmaWxlOiBzdHJpbmcsIGxpbmVudW1iZXI6IG51bWJlcn1bXTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3QsIHdldGhlciBzZXR0aW5nIG9mIHNvdXJjZSByZWZzIGlzIHN1cHBvcnRlZC5cclxuICAgICAqIElmIG5vdCwgc2V0U291cmNlUmVmZXJlbmNlcyB3aWxsIGRvIG5vdGhpbmcuXHJcbiAgICAgKiB4dGIgZG9lcyBub3Qgc3VwcG9ydCB0aGlzLCBhbGwgb3RoZXIgZm9ybWF0cyBkby5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHN1cHBvcnRzU2V0U291cmNlUmVmZXJlbmNlcygpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldCBzb3VyY2UgcmVmIGVsZW1lbnRzIGluIHRoZSB0cmFuc3VuaXQuXHJcbiAgICAgKiBOb3JtYWxseSwgdGhpcyBpcyBkb25lIGJ5IG5nLWV4dHJhY3QuXHJcbiAgICAgKiBNZXRob2Qgb25seSBleGlzdHMgdG8gYWxsb3cgeGxpZmZtZXJnZSB0byBtZXJnZSBtaXNzaW5nIHNvdXJjZSByZWZzLlxyXG4gICAgICogQHBhcmFtIHNvdXJjZVJlZnMgdGhlIHNvdXJjZXJlZnMgdG8gc2V0LiBPbGQgb25lcyBhcmUgcmVtb3ZlZC5cclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3Qgc2V0U291cmNlUmVmZXJlbmNlcyhzb3VyY2VSZWZzOiB7c291cmNlZmlsZTogc3RyaW5nLCBsaW5lbnVtYmVyOiBudW1iZXJ9W10pO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIGRlc2NyaXB0aW9uIHNldCBpbiB0aGUgdGVtcGxhdGUgYXMgdmFsdWUgb2YgdGhlIGkxOG4tYXR0cmlidXRlLlxyXG4gICAgICogZS5nLiBpMThuPVwibXlkZXNjcmlwdGlvblwiLlxyXG4gICAgICovXHJcbiAgICBhYnN0cmFjdCBkZXNjcmlwdGlvbigpOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgbWVhbmluZyAoaW50ZW50KSBzZXQgaW4gdGhlIHRlbXBsYXRlIGFzIHZhbHVlIG9mIHRoZSBpMThuLWF0dHJpYnV0ZS5cclxuICAgICAqIFRoaXMgaXMgdGhlIHBhcnQgaW4gZnJvbnQgb2YgdGhlIHwgc3ltYm9sLlxyXG4gICAgICogZS5nLiBpMThuPVwibWVhbmluZ3xteWRlc2NyaXB0aW9uXCIuXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IG1lYW5pbmcoKTogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGVzdCwgd2V0aGVyIHNldHRpbmcgb2YgZGVzY3JpcHRpb24gYW5kIG1lYW5pbmcgaXMgc3VwcG9ydGVkLlxyXG4gICAgICogSWYgbm90LCBzZXREZXNjcmlwdGlvbiBhbmQgc2V0TWVhbmluZyB3aWxsIGRvIG5vdGhpbmcuXHJcbiAgICAgKiB4dGIgZG9lcyBub3Qgc3VwcG9ydCB0aGlzLCBhbGwgb3RoZXIgZm9ybWF0cyBkby5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHN1cHBvcnRzU2V0RGVzY3JpcHRpb25BbmRNZWFuaW5nKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hhbmdlIGRlc2NyaXB0aW9uIHByb3BlcnR5IG9mIHRyYW5zLXVuaXQuXHJcbiAgICAgKiBAcGFyYW0gZGVzY3JpcHRpb24gZGVzY3JpcHRpb25cclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3Qgc2V0RGVzY3JpcHRpb24oZGVzY3JpcHRpb246IHN0cmluZyk7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGFuZ2UgbWVhbmluZyBwcm9wZXJ0eSBvZiB0cmFucy11bml0LlxyXG4gICAgICogQHBhcmFtIG1lYW5pbmcgbWVhbmluZ1xyXG4gICAgICovXHJcbiAgICBhYnN0cmFjdCBzZXRNZWFuaW5nKG1lYW5pbmc6IHN0cmluZyk7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgYWxsIG5vdGVzIG9mIHRoZSB0cmFucy11bml0LlxyXG4gICAgICogTm90ZXMgYXJlIHJlbWFya3MgbWFkZSBieSBhIHRyYW5zbGF0b3IuXHJcbiAgICAgKiAoZGVzY3JpcHRpb24gYW5kIG1lYW5pbmcgYXJlIG5vdCBpbmNsdWRlZCBoZXJlISlcclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3Qgbm90ZXMoKTogSU5vdGVbXTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3QsIHdldGhlciBzZXR0aW5nIG9mIG5vdGVzIGlzIHN1cHBvcnRlZC5cclxuICAgICAqIElmIG5vdCwgc2V0Tm90ZXMgd2lsbCBkbyBub3RoaW5nLlxyXG4gICAgICogeHRiIGRvZXMgbm90IHN1cHBvcnQgdGhpcywgYWxsIG90aGVyIGZvcm1hdHMgZG8uXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IHN1cHBvcnRzU2V0Tm90ZXMoKTogYm9vbGVhbjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEFkZCBub3RlcyB0byB0cmFucyB1bml0LlxyXG4gICAgICogQHBhcmFtIG5ld05vdGVzIHRoZSBub3RlcyB0byBhZGQuXHJcbiAgICAgKiBAdGhyb3dzIGFuIEVycm9yIGlmIGFueSBub3RlIGNvbnRhaW5zIGRlc2NwcmlwdGlvbiBvciBtZWFuaW5nIGFzIGZyb20gYXR0cmlidXRlLlxyXG4gICAgICovXHJcbiAgICBhYnN0cmFjdCBzZXROb3RlcyhuZXdOb3RlczogSU5vdGVbXSk7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVjayBub3Rlc1xyXG4gICAgICogQHBhcmFtIG5ld05vdGVzIHRoZSBub3RlcyB0byBhZGQuXHJcbiAgICAgKiBAdGhyb3dzIGFuIEVycm9yIGlmIGFueSBub3RlIGNvbnRhaW5zIGRlc2NyaXB0aW9uIG9yIG1lYW5pbmcgYXMgZnJvbSBhdHRyaWJ1dGUuXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBjaGVja05vdGVzKG5ld05vdGVzOiBJTm90ZVtdKSB7XHJcbiAgICAgICAgLy8gY2hlY2sgZnJvbSB2YWx1ZXNcclxuICAgICAgICBjb25zdCBlcnJvckluRnJvbU5vdGUgPSBuZXdOb3Rlcy5maW5kKChub3RlKSA9PiBub3RlLmZyb20gPT09ICdkZXNjcmlwdGlvbicgfHwgbm90ZS5mcm9tID09PSAnbWVhbmluZycpO1xyXG4gICAgICAgIGlmICghaXNOdWxsT3JVbmRlZmluZWQoZXJyb3JJbkZyb21Ob3RlKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2Rlc2NyaXB0aW9uIG9yIG1lYW5pbmcgYXJlIG5vdCBhbGxvd2VkIGFzIGZyb20gYXR0dHJpYnV0ZScpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSByZWFsIHhtbCBlbGVtZW50IHVzZWQgZm9yIHRoZSB0cmFucyB1bml0LlxyXG4gICAgICogKGludGVybmFsIHVzYWdlIG9ubHksIGEgY2xpZW50IHNob3VsZCBuZXZlciBuZWVkIHRoaXMpXHJcbiAgICAgKiBAcmV0dXJuIHJlYWwgeG1sIGVsZW1lbnQgdXNlZCBmb3IgdGhlIHRyYW5zIHVuaXQuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBhc1htbEVsZW1lbnQoKTogRWxlbWVudCB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDb3B5IHNvdXJjZSB0byB0YXJnZXQgdG8gdXNlIGl0IGFzIGR1bW15IHRyYW5zbGF0aW9uLlxyXG4gICAgICogUmV0dXJucyBhIGNoYW5nZWQgY29weSBvZiB0aGlzIHRyYW5zIHVuaXQuXHJcbiAgICAgKiByZWNlaXZlciBpcyBub3QgY2hhbmdlZC5cclxuICAgICAqIChpbnRlcm5hbCB1c2FnZSBvbmx5LCBhIGNsaWVudCBzaG91bGQgY2FsbCBpbXBvcnROZXdUcmFuc1VuaXQgb24gSVRyYW5zbGF0aW9uTWVzc2FnZUZpbGUpXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IGNsb25lV2l0aFNvdXJjZUFzVGFyZ2V0KGlzRGVmYXVsdExhbmc6IGJvb2xlYW4sIGNvcHlDb250ZW50OiBib29sZWFuLCB0YXJnZXRGaWxlOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUpOiBBYnN0cmFjdFRyYW5zVW5pdDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENvcHkgc291cmNlIHRvIHRhcmdldCB0byB1c2UgaXQgYXMgZHVtbXkgdHJhbnNsYXRpb24uXHJcbiAgICAgKiAoaW50ZXJuYWwgdXNhZ2Ugb25seSwgYSBjbGllbnQgc2hvdWxkIGNhbGwgY3JlYXRlVHJhbnNsYXRpb25GaWxlRm9yTGFuZyBvbiBJVHJhbnNsYXRpb25NZXNzYWdlRmlsZSlcclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3QgdXNlU291cmNlQXNUYXJnZXQoaXNEZWZhdWx0TGFuZzogYm9vbGVhbiwgY29weUNvbnRlbnQ6IGJvb2xlYW4pO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVHJhbnNsYXRlIHRoZSB0cmFucyB1bml0LlxyXG4gICAgICogQHBhcmFtIHRyYW5zbGF0aW9uIHRoZSB0cmFuc2xhdGVkIHN0cmluZyBvciAocHJlZmVycmVkKSBhIG5vcm1hbGl6ZWQgbWVzc2FnZS5cclxuICAgICAqIFRoZSBwdXJlIHN0cmluZyBjYW4gY29udGFpbiBhbnkgbWFya3VwIGFuZCB3aWxsIG5vdCBiZSBjaGVja2VkLlxyXG4gICAgICogU28gaXQgY2FuIGRhbWFnZSB0aGUgZG9jdW1lbnQuXHJcbiAgICAgKiBBIG5vcm1hbGl6ZWQgbWVzc2FnZSBwcmV2ZW50cyB0aGlzLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgdHJhbnNsYXRlKHRyYW5zbGF0aW9uOiBzdHJpbmcgfCBJTm9ybWFsaXplZE1lc3NhZ2UpIHtcclxuICAgICAgICBsZXQgdHJhbnNsYXRpb25OYXRpdmU6IHN0cmluZztcclxuICAgICAgICBpZiAoaXNTdHJpbmcodHJhbnNsYXRpb24pKSB7XHJcbiAgICAgICAgICAgIHRyYW5zbGF0aW9uTmF0aXZlID0gPHN0cmluZz4gdHJhbnNsYXRpb247XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdHJhbnNsYXRpb25OYXRpdmUgPSAoPElOb3JtYWxpemVkTWVzc2FnZT4gdHJhbnNsYXRpb24pLmFzTmF0aXZlU3RyaW5nKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMudHJhbnNsYXRlTmF0aXZlKHRyYW5zbGF0aW9uTmF0aXZlKTtcclxuICAgICAgICB0aGlzLnNldFRhcmdldFN0YXRlKFNUQVRFX1RSQU5TTEFURUQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJuIGEgcGFyc2VyIHVzZWQgZm9yIG5vcm1hbGl6ZWQgbWVzc2FnZXMuXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBhYnN0cmFjdCBtZXNzYWdlUGFyc2VyKCk6IEFic3RyYWN0TWVzc2FnZVBhcnNlcjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3QsIHdldGhlciBtZXNzYWdlIGxvb2tzIGxpa2UgSUNVIG1lc3NhZ2UuXHJcbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBtZXNzYWdlXHJcbiAgICAgKiBAcmV0dXJuIHdldGhlciBtZXNzYWdlIGxvb2tzIGxpa2UgSUNVIG1lc3NhZ2UuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBpc0lDVU1lc3NhZ2UobWVzc2FnZTogc3RyaW5nKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubWVzc2FnZVBhcnNlcigpLmlzSUNVTWVzc2FnZVN0YXJ0KG1lc3NhZ2UpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0IHRoZSB0cmFuc2xhdGlvbiB0byBhIGdpdmVuIHN0cmluZyAoaW5jbHVkaW5nIG1hcmt1cCkuXHJcbiAgICAgKiBAcGFyYW0gdHJhbnNsYXRpb24gdHJhbnNsYXRpb25cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IHRyYW5zbGF0ZU5hdGl2ZSh0cmFuc2xhdGlvbjogc3RyaW5nKTtcclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"abstract-trans-unit.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/abstract-trans-unit.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[25,0,0,24],[27,0,0,90],[33,0,0,96],[48,0,0,111],[49,0,0,112]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[40,0,1,39],[42,0,1,40],[48,0,1,46],[86,0,1,84],[87,0,1,85]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[26,0,2,25],[28,0,2,27],[36,0,2,35],[38,0,2,36],[44,0,2,42],[53,0,2,51],[54,0,2,52]],[[0,0,5,0]],[],[],[[3,0,8,3]],[[0,0,10,0],[6,0,10,6],[13,0,10,22],[30,0,10,39]],[[4,0,14,4],[16,0,14,36],[24,0,14,53],[26,0,15,36],[29,0,15,47],[31,0,16,36],[55,0,16,86]],[[8,0,14,36],[21,0,14,44],[24,0,14,36],[32,0,14,44],[33,0,14,53]],[[8,0,15,36],[16,0,15,39],[19,0,15,36],[22,0,15,39],[23,0,15,47]],[[8,0,16,36],[37,0,16,60],[40,0,16,36],[64,0,16,60],[65,0,16,86]],[[4,0,17,4],[5,0,17,5]],[[4,0,19,4],[8,0,19,15],[10,0,19,17]],[[8,0,20,8],[15,0,20,15],[19,0,20,19],[20,0,20,20],[23,0,20,23],[24,0,20,24]],[[4,0,21,4],[5,0,21,5]],[[4,0,23,4]],[],[[7,0,25,7]],[[4,0,26,4],[27,0,26,27]],[[8,0,27,8],[15,0,27,15],[19,0,27,19],[20,0,27,20],[44,0,27,44],[45,0,27,45]],[[4,0,28,4],[5,0,28,5]],[[4,0,36,4]],[],[],[],[[7,0,40,7]],[[4,0,41,4],[28,0,41,28]],[[8,0,42,8],[15,0,42,15],[19,0,42,19],[20,0,42,20]],[[4,0,43,4],[5,0,43,5]],[[4,0,53,4]],[],[[7,0,55,7]],[[4,0,56,11],[27,0,56,34]],[[8,0,57,8],[12,0,57,12],[29,0,57,29],[30,0,57,30],[34,0,57,34],[35,0,57,35],[59,0,57,59],[60,0,57,60],[62,0,57,62]],[[12,0,58,12],[16,0,58,16],[17,0,58,17],[41,0,58,41],[44,0,58,44],[48,0,58,48],[49,0,58,49],[78,0,58,78],[80,0,58,80],[81,0,58,81]],[[9,0,59,9]],[[8,0,60,8],[15,0,60,15],[19,0,60,19],[20,0,60,20],[44,0,60,44],[45,0,60,45]],[[4,0,61,4],[5,0,61,5]],[[4,0,86,4]],[],[],[],[[7,0,90,7]],[[4,0,91,11],[15,0,91,22]],[[8,0,92,8],[14,0,92,14],[25,0,92,25],[28,0,92,28],[32,0,92,32],[33,0,92,33],[50,0,92,50],[52,0,92,52],[53,0,92,53]],[[8,0,93,8],[15,0,93,15],[19,0,93,19],[20,0,93,20],[41,0,93,41],[42,0,93,42],[53,0,93,53],[54,0,93,54],[55,0,93,55]],[[4,0,94,4],[5,0,94,5]],[[4,0,118,4]],[],[],[],[],[[7,0,123,7]],[[4,0,124,4],[18,0,124,18],[19,0,124,19],[27,0,124,35]],[[8,0,125,8],[12,0,125,12],[13,0,125,13],[33,0,125,33],[34,0,125,34],[38,0,125,38],[39,0,125,39],[60,0,125,60],[61,0,125,61],[69,0,125,69],[70,0,125,70],[71,0,125,71],[72,0,125,72]],[[8,0,126,8],[12,0,126,12],[16,0,126,16],[17,0,126,17],[40,0,126,40],[42,0,126,42],[54,0,126,54],[85,0,126,85],[87,0,126,87]],[[12,0,127,47],[16,0,127,51],[17,0,127,52],[40,0,127,75],[42,0,127,78],[43,0,127,79],[55,0,127,91],[57,0,127,93],[58,0,127,94]],[[9,0,128,9]],[[4,0,129,4],[5,0,129,5]],[[4,0,141,4]],[],[],[],[[7,0,145,7]],[[4,0,146,11],[31,0,146,38]],[[8,0,147,8],[15,0,147,15],[19,0,147,19],[20,0,147,20]],[[4,0,148,4],[5,0,148,5]],[[4,0,171,4]],[],[],[],[[7,0,175,7]],[[4,0,176,11],[36,0,176,43]],[[8,0,177,8],[15,0,177,15],[19,0,177,19],[20,0,177,20]],[[4,0,178,4],[5,0,178,5]],[[4,0,213,4]],[],[],[],[[7,0,217,7]],[[4,0,218,14],[14,0,218,24],[15,0,218,25],[23,0,218,42]],[[8,0,219,8],[28,0,219,28]],[[8,0,220,8],[14,0,220,14],[29,0,220,29],[32,0,220,32],[40,0,220,40],[41,0,220,41],[45,0,220,45],[46,0,220,46],[47,0,220,47],[51,0,220,51],[53,0,220,53],[55,0,220,55],[56,0,220,56],[60,0,220,60],[61,0,220,61],[65,0,220,65],[70,0,220,70],[83,0,220,83],[87,0,220,87],[91,0,220,91],[92,0,220,92],[96,0,220,96],[101,0,220,101],[110,0,220,110],[111,0,220,111],[112,0,220,112]],[[8,0,221,8],[12,0,221,12],[13,0,221,13],[30,0,221,30],[31,0,221,31],[46,0,221,46],[47,0,221,47],[49,0,221,49]],[[12,0,222,12],[18,0,222,18],[22,0,222,22],[27,0,222,27],[28,0,222,28],[87,0,222,87],[88,0,222,88],[89,0,222,89]],[[9,0,223,9]],[[4,0,224,4],[5,0,224,5]],[[4,0,226,4]],[],[],[],[[7,0,230,7]],[[4,0,231,11],[16,0,231,23]],[[8,0,232,8],[15,0,232,15],[19,0,232,19],[20,0,232,20],[28,0,232,28],[29,0,232,29]],[[4,0,233,4],[5,0,233,5]],[[4,0,249,4]],[],[],[],[],[],[[7,0,255,7]],[[4,0,256,11],[13,0,256,20],[14,0,256,21],[25,0,256,61]],[[8,0,257,8],[12,0,257,12],[29,0,257,37],[30,0,257,38]],[[8,0,258,8],[12,0,258,12],[20,0,258,20],[21,0,258,21],[32,0,258,32],[33,0,258,33],[35,0,258,35]],[[12,0,259,12],[29,0,259,29],[32,0,259,41],[43,0,259,52],[44,0,259,53]],[[9,0,260,9]],[[13,0,260,15]],[[12,0,261,12],[29,0,261,29],[32,0,261,54],[43,0,261,66],[44,0,261,67],[58,0,261,81],[60,0,261,83],[61,0,261,84]],[[9,0,262,9]],[[8,0,263,8],[12,0,263,12],[13,0,263,13],[28,0,263,28],[29,0,263,29],[46,0,263,46],[47,0,263,47],[48,0,263,48]],[[8,0,264,8],[12,0,264,12],[13,0,264,13],[27,0,264,27],[28,0,264,28],[44,0,264,44],[45,0,264,45],[46,0,264,46]],[[4,0,265,4],[5,0,265,5]],[[4,0,272,4]],[],[],[],[[7,0,276,7]],[[4,0,277,11],[16,0,277,23],[17,0,277,24],[24,0,277,39]],[[8,0,278,8],[15,0,278,15],[19,0,278,19],[20,0,278,20],[33,0,278,33],[35,0,278,35],[36,0,278,36],[53,0,278,53],[54,0,278,54],[61,0,278,61],[62,0,278,62],[63,0,278,63]],[[4,0,279,4],[5,0,279,5]],[[1,0,286,1]]],"sourcesContent":["import {STATE_TRANSLATED, ITranslationMessagesFile, INormalizedMessage, ITransUnit, INote} from './internalapi';\r\nimport {AbstractTranslationMessagesFile} from './abstract-translation-messages-file';\r\nimport {isNullOrUndefined, isString} from 'is-what';\r\nimport {ParsedMessage} from './parsed-message';\r\nimport {AbstractMessageParser} from './abstract-message-parser';\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * Abstract superclass for all implementations of ITransUnit.\r\n */\r\n\r\nexport abstract class AbstractTransUnit implements ITransUnit {\r\n\r\n    private _sourceContentNormalized: ParsedMessage;\r\n\r\n    protected constructor(protected _element: Element,\r\n                          protected _id: string,\r\n                          protected _translationMessagesFile: ITranslationMessagesFile) {\r\n    }\r\n\r\n    public get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * The file the unit belongs to.,\r\n     */\r\n    translationMessagesFile(): ITranslationMessagesFile {\r\n        return this._translationMessagesFile;\r\n    }\r\n\r\n    /**\r\n     * The original text value, that is to be translated.\r\n     * Contains all markup, depends on the concrete format used.\r\n     */\r\n    abstract sourceContent(): string;\r\n\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetSourceContent(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    abstract setSourceContent(newContent: string);\r\n\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    public sourceContentNormalized(): ParsedMessage {\r\n        if (isNullOrUndefined(this._sourceContentNormalized)) {\r\n            this._sourceContentNormalized = this.createSourceContentNormalized();\r\n        }\r\n        return this._sourceContentNormalized;\r\n    }\r\n\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    abstract createSourceContentNormalized(): ParsedMessage;\r\n\r\n    /**\r\n     * The translated value.\r\n     * Contains all markup, depends on the concrete format used.\r\n     */\r\n    abstract targetContent(): string;\r\n\r\n    /**\r\n     * The translated value as normalized message.\r\n     * All placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    abstract targetContentNormalized(): INormalizedMessage;\r\n\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     */\r\n    abstract nativeTargetState(): string;\r\n\r\n    /**\r\n     * State of the translation.\r\n     * (on of new, translated, final)\r\n     * Return values are defined as Constants STATE_...\r\n     */\r\n    public targetState(): string {\r\n        const nativeState = this.nativeTargetState();\r\n        return this.mapNativeStateToState(nativeState);\r\n    }\r\n\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    protected abstract mapStateToNativeState(state: string): string;\r\n\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    protected abstract mapNativeStateToState(nativeState: string): string;\r\n\r\n    /**\r\n     * set state in xml.\r\n     * @param nativeState nativeState\r\n     */\r\n    protected abstract setNativeTargetState(nativeState: string);\r\n\r\n    /**\r\n     * Modify the target state.\r\n     * @param newState one of the 3 allowed target states new, translated, final.\r\n     * Constants STATE_...\r\n     * Invalid states throw an error.\r\n     */\r\n    setTargetState(newState: string) {\r\n        this.setNativeTargetState(this.mapStateToNativeState(newState));\r\n        if (this.translationMessagesFile() instanceof AbstractTranslationMessagesFile) {\r\n            (<AbstractTranslationMessagesFile> this.translationMessagesFile()).countNumbers();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    abstract sourceReferences(): {sourcefile: string, linenumber: number}[];\r\n\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    public supportsSetSourceReferences(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    abstract setSourceReferences(sourceRefs: {sourcefile: string, linenumber: number}[]);\r\n\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     */\r\n    abstract description(): string;\r\n\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     */\r\n    abstract meaning(): string;\r\n\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    public supportsSetDescriptionAndMeaning(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    abstract setDescription(description: string);\r\n\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    abstract setMeaning(meaning: string);\r\n\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     */\r\n    abstract notes(): INote[];\r\n\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    abstract supportsSetNotes(): boolean;\r\n\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * @throws an Error if any note contains descpription or meaning as from attribute.\r\n     */\r\n    abstract setNotes(newNotes: INote[]);\r\n\r\n    /**\r\n     * Check notes\r\n     * @param newNotes the notes to add.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     */\r\n    protected checkNotes(newNotes: INote[]) {\r\n        // check from values\r\n        const errorInFromNote = newNotes.find((note) => note.from === 'description' || note.from === 'meaning');\r\n        if (!isNullOrUndefined(errorInFromNote)) {\r\n            throw new Error('description or meaning are not allowed as from atttribute');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The real xml element used for the trans unit.\r\n     * (internal usage only, a client should never need this)\r\n     * @return real xml element used for the trans unit.\r\n     */\r\n    public asXmlElement(): Element {\r\n        return this._element;\r\n    }\r\n\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     */\r\n    abstract cloneWithSourceAsTarget(isDefaultLang: boolean, copyContent: boolean, targetFile: ITranslationMessagesFile): AbstractTransUnit;\r\n\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    abstract useSourceAsTarget(isDefaultLang: boolean, copyContent: boolean);\r\n\r\n    /**\r\n     * Translate the trans unit.\r\n     * @param translation the translated string or (preferred) a normalized message.\r\n     * The pure string can contain any markup and will not be checked.\r\n     * So it can damage the document.\r\n     * A normalized message prevents this.\r\n     */\r\n    public translate(translation: string | INormalizedMessage) {\r\n        let translationNative: string;\r\n        if (isString(translation)) {\r\n            translationNative = <string> translation;\r\n        } else {\r\n            translationNative = (<INormalizedMessage> translation).asNativeString();\r\n        }\r\n        this.translateNative(translationNative);\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    }\r\n\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    protected abstract messageParser(): AbstractMessageParser;\r\n\r\n    /**\r\n     * Test, wether message looks like ICU message.\r\n     * @param message message\r\n     * @return wether message looks like ICU message.\r\n     */\r\n    public isICUMessage(message: string): boolean {\r\n        return this.messageParser().isICUMessageStart(message);\r\n    }\r\n\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    protected abstract translateNative(translation: string);\r\n}\r\n"]},"resolvedIds":{"is-what":{"external":true,"id":"is-what","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./abstract-translation-messages-file":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-translation-messages-file.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./internalapi":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\internalapi.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2585,"body":[{"type":"ExportNamedDeclaration","start":119,"end":152,"declaration":{"type":"VariableDeclaration","start":126,"end":152,"declarations":[{"type":"VariableDeclarator","start":130,"end":151,"id":{"type":"Identifier","start":130,"end":151,"name":"ParsedMessagePartType"},"init":null}],"kind":"var"},"specifiers":[],"source":null},{"type":"ExpressionStatement","start":154,"end":829,"expression":{"type":"CallExpression","start":154,"end":828,"callee":{"type":"FunctionExpression","start":155,"end":772,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":165,"end":186,"name":"ParsedMessagePartType"}],"body":{"type":"BlockStatement","start":188,"end":772,"body":[{"type":"ExpressionStatement","start":195,"end":261,"expression":{"type":"AssignmentExpression","start":195,"end":260,"operator":"=","left":{"type":"MemberExpression","start":195,"end":251,"object":{"type":"Identifier","start":195,"end":216,"name":"ParsedMessagePartType"},"property":{"type":"AssignmentExpression","start":217,"end":250,"operator":"=","left":{"type":"MemberExpression","start":217,"end":246,"object":{"type":"Identifier","start":217,"end":238,"name":"ParsedMessagePartType"},"property":{"type":"Literal","start":239,"end":245,"value":"TEXT","raw":"\"TEXT\""},"computed":true,"optional":false},"right":{"type":"Literal","start":249,"end":250,"value":0,"raw":"0"}},"computed":true,"optional":false},"right":{"type":"Literal","start":254,"end":260,"value":"TEXT","raw":"\"TEXT\""}}},{"type":"ExpressionStatement","start":267,"end":347,"expression":{"type":"AssignmentExpression","start":267,"end":346,"operator":"=","left":{"type":"MemberExpression","start":267,"end":330,"object":{"type":"Identifier","start":267,"end":288,"name":"ParsedMessagePartType"},"property":{"type":"AssignmentExpression","start":289,"end":329,"operator":"=","left":{"type":"MemberExpression","start":289,"end":325,"object":{"type":"Identifier","start":289,"end":310,"name":"ParsedMessagePartType"},"property":{"type":"Literal","start":311,"end":324,"value":"PLACEHOLDER","raw":"\"PLACEHOLDER\""},"computed":true,"optional":false},"right":{"type":"Literal","start":328,"end":329,"value":1,"raw":"1"}},"computed":true,"optional":false},"right":{"type":"Literal","start":333,"end":346,"value":"PLACEHOLDER","raw":"\"PLACEHOLDER\""}}},{"type":"ExpressionStatement","start":353,"end":429,"expression":{"type":"AssignmentExpression","start":353,"end":428,"operator":"=","left":{"type":"MemberExpression","start":353,"end":414,"object":{"type":"Identifier","start":353,"end":374,"name":"ParsedMessagePartType"},"property":{"type":"AssignmentExpression","start":375,"end":413,"operator":"=","left":{"type":"MemberExpression","start":375,"end":409,"object":{"type":"Identifier","start":375,"end":396,"name":"ParsedMessagePartType"},"property":{"type":"Literal","start":397,"end":408,"value":"START_TAG","raw":"\"START_TAG\""},"computed":true,"optional":false},"right":{"type":"Literal","start":412,"end":413,"value":2,"raw":"2"}},"computed":true,"optional":false},"right":{"type":"Literal","start":417,"end":428,"value":"START_TAG","raw":"\"START_TAG\""}}},{"type":"ExpressionStatement","start":435,"end":507,"expression":{"type":"AssignmentExpression","start":435,"end":506,"operator":"=","left":{"type":"MemberExpression","start":435,"end":494,"object":{"type":"Identifier","start":435,"end":456,"name":"ParsedMessagePartType"},"property":{"type":"AssignmentExpression","start":457,"end":493,"operator":"=","left":{"type":"MemberExpression","start":457,"end":489,"object":{"type":"Identifier","start":457,"end":478,"name":"ParsedMessagePartType"},"property":{"type":"Literal","start":479,"end":488,"value":"END_TAG","raw":"\"END_TAG\""},"computed":true,"optional":false},"right":{"type":"Literal","start":492,"end":493,"value":3,"raw":"3"}},"computed":true,"optional":false},"right":{"type":"Literal","start":497,"end":506,"value":"END_TAG","raw":"\"END_TAG\""}}},{"type":"ExpressionStatement","start":513,"end":589,"expression":{"type":"AssignmentExpression","start":513,"end":588,"operator":"=","left":{"type":"MemberExpression","start":513,"end":574,"object":{"type":"Identifier","start":513,"end":534,"name":"ParsedMessagePartType"},"property":{"type":"AssignmentExpression","start":535,"end":573,"operator":"=","left":{"type":"MemberExpression","start":535,"end":569,"object":{"type":"Identifier","start":535,"end":556,"name":"ParsedMessagePartType"},"property":{"type":"Literal","start":557,"end":568,"value":"EMPTY_TAG","raw":"\"EMPTY_TAG\""},"computed":true,"optional":false},"right":{"type":"Literal","start":572,"end":573,"value":4,"raw":"4"}},"computed":true,"optional":false},"right":{"type":"Literal","start":577,"end":588,"value":"EMPTY_TAG","raw":"\"EMPTY_TAG\""}}},{"type":"ExpressionStatement","start":595,"end":675,"expression":{"type":"AssignmentExpression","start":595,"end":674,"operator":"=","left":{"type":"MemberExpression","start":595,"end":658,"object":{"type":"Identifier","start":595,"end":616,"name":"ParsedMessagePartType"},"property":{"type":"AssignmentExpression","start":617,"end":657,"operator":"=","left":{"type":"MemberExpression","start":617,"end":653,"object":{"type":"Identifier","start":617,"end":638,"name":"ParsedMessagePartType"},"property":{"type":"Literal","start":639,"end":652,"value":"ICU_MESSAGE","raw":"\"ICU_MESSAGE\""},"computed":true,"optional":false},"right":{"type":"Literal","start":656,"end":657,"value":5,"raw":"5"}},"computed":true,"optional":false},"right":{"type":"Literal","start":661,"end":674,"value":"ICU_MESSAGE","raw":"\"ICU_MESSAGE\""}}},{"type":"ExpressionStatement","start":681,"end":769,"expression":{"type":"AssignmentExpression","start":681,"end":768,"operator":"=","left":{"type":"MemberExpression","start":681,"end":748,"object":{"type":"Identifier","start":681,"end":702,"name":"ParsedMessagePartType"},"property":{"type":"AssignmentExpression","start":703,"end":747,"operator":"=","left":{"type":"MemberExpression","start":703,"end":743,"object":{"type":"Identifier","start":703,"end":724,"name":"ParsedMessagePartType"},"property":{"type":"Literal","start":725,"end":742,"value":"ICU_MESSAGE_REF","raw":"\"ICU_MESSAGE_REF\""},"computed":true,"optional":false},"right":{"type":"Literal","start":746,"end":747,"value":6,"raw":"6"}},"computed":true,"optional":false},"right":{"type":"Literal","start":751,"end":768,"value":"ICU_MESSAGE_REF","raw":"\"ICU_MESSAGE_REF\""}}}]}},"arguments":[{"type":"LogicalExpression","start":774,"end":827,"left":{"type":"Identifier","start":774,"end":795,"name":"ParsedMessagePartType"},"operator":"||","right":{"type":"AssignmentExpression","start":800,"end":826,"operator":"=","left":{"type":"Identifier","start":800,"end":821,"name":"ParsedMessagePartType"},"right":{"type":"ObjectExpression","start":824,"end":826,"properties":[]}}}],"optional":false}},{"type":"ExportNamedDeclaration","start":831,"end":925,"declaration":{"type":"ClassDeclaration","start":838,"end":925,"id":{"type":"Identifier","start":844,"end":861,"name":"ParsedMessagePart"},"superClass":null,"body":{"type":"ClassBody","start":862,"end":925,"body":[{"type":"MethodDefinition","start":869,"end":922,"static":false,"computed":false,"key":{"type":"Identifier","start":869,"end":880,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":880,"end":922,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":881,"end":885,"name":"type"}],"body":{"type":"BlockStatement","start":887,"end":922,"body":[{"type":"ExpressionStatement","start":898,"end":915,"expression":{"type":"AssignmentExpression","start":898,"end":914,"operator":"=","left":{"type":"MemberExpression","start":898,"end":907,"object":{"type":"ThisExpression","start":898,"end":902},"property":{"type":"Identifier","start":903,"end":907,"name":"type"},"computed":false,"optional":false},"right":{"type":"Identifier","start":910,"end":914,"name":"type"}}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1pMThuc3VwcG9ydC1saWIvc3JjL2ltcGwvcGFyc2VkLW1lc3NhZ2UtcGFydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsTUFBTSxDQUFOLElBQVkscUJBUVg7QUFSRCxXQUFZLHFCQUFxQjtJQUM3QixpRUFBSSxDQUFBO0lBQ0osK0VBQVcsQ0FBQTtJQUNYLDJFQUFTLENBQUE7SUFDVCx1RUFBTyxDQUFBO0lBQ1AsMkVBQVMsQ0FBQTtJQUNULCtFQUFXLENBQUE7SUFDWCx1RkFBZSxDQUFBO0FBQ25CLENBQUMsRUFSVyxxQkFBcUIsS0FBckIscUJBQXFCLFFBUWhDO0FBRUQsTUFBTSxPQUFnQixpQkFBaUI7SUFFbkMsWUFBbUIsSUFBMkI7UUFBM0IsU0FBSSxHQUFKLElBQUksQ0FBdUI7SUFFOUMsQ0FBQztDQVNKIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDA1LjA1LjIwMTcuXHJcbiAqIEEgcGFydCBvZiBhIHBhcnNlZCBtZXNzYWdlLlxyXG4gKiBDYW4gYmUgYSB0ZXh0LCBhIHBsYWNlaG9sZGVyLCBhIHRhZ1xyXG4gKi9cclxuXHJcbmV4cG9ydCBlbnVtIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZSB7XHJcbiAgICBURVhULFxyXG4gICAgUExBQ0VIT0xERVIsXHJcbiAgICBTVEFSVF9UQUcsXHJcbiAgICBFTkRfVEFHLFxyXG4gICAgRU1QVFlfVEFHLFxyXG4gICAgSUNVX01FU1NBR0UsXHJcbiAgICBJQ1VfTUVTU0FHRV9SRUZcclxufVxyXG5cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFBhcnNlZE1lc3NhZ2VQYXJ0IHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdHlwZTogUGFyc2VkTWVzc2FnZVBhcnRUeXBlKSB7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBwYXJ0LlxyXG4gICAgICogQHBhcmFtIGZvcm1hdCBvcHRpb25hbCB3YXkgdG8gZGV0ZXJtaW5lIHRoZSBleGFjdCBzeW50YXguXHJcbiAgICAgKiBBbGxvd2VkIGZvcm1hdHMgYXJlIGRlZmluZWQgYXMgY29uc3RhbnRzIE5PUk1BTElaQVRJT05fRk9STUFULi4uXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBhYnN0cmFjdCBhc0Rpc3BsYXlTdHJpbmcoZm9ybWF0Pzogc3RyaW5nKTogc3RyaW5nO1xyXG5cclxufVxyXG4iXX0=","start":927,"end":2585}]},"code":"/**\r\n * Created by martin on 05.05.2017.\r\n * A part of a parsed message.\r\n * Can be a text, a placeholder, a tag\r\n */\r\nexport var ParsedMessagePartType;\r\n(function (ParsedMessagePartType) {\r\n    ParsedMessagePartType[ParsedMessagePartType[\"TEXT\"] = 0] = \"TEXT\";\r\n    ParsedMessagePartType[ParsedMessagePartType[\"PLACEHOLDER\"] = 1] = \"PLACEHOLDER\";\r\n    ParsedMessagePartType[ParsedMessagePartType[\"START_TAG\"] = 2] = \"START_TAG\";\r\n    ParsedMessagePartType[ParsedMessagePartType[\"END_TAG\"] = 3] = \"END_TAG\";\r\n    ParsedMessagePartType[ParsedMessagePartType[\"EMPTY_TAG\"] = 4] = \"EMPTY_TAG\";\r\n    ParsedMessagePartType[ParsedMessagePartType[\"ICU_MESSAGE\"] = 5] = \"ICU_MESSAGE\";\r\n    ParsedMessagePartType[ParsedMessagePartType[\"ICU_MESSAGE_REF\"] = 6] = \"ICU_MESSAGE_REF\";\r\n})(ParsedMessagePartType || (ParsedMessagePartType = {}));\r\nexport class ParsedMessagePart {\r\n    constructor(type) {\r\n        this.type = type;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1pMThuc3VwcG9ydC1saWIvc3JjL2ltcGwvcGFyc2VkLW1lc3NhZ2UtcGFydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsTUFBTSxDQUFOLElBQVkscUJBUVg7QUFSRCxXQUFZLHFCQUFxQjtJQUM3QixpRUFBSSxDQUFBO0lBQ0osK0VBQVcsQ0FBQTtJQUNYLDJFQUFTLENBQUE7SUFDVCx1RUFBTyxDQUFBO0lBQ1AsMkVBQVMsQ0FBQTtJQUNULCtFQUFXLENBQUE7SUFDWCx1RkFBZSxDQUFBO0FBQ25CLENBQUMsRUFSVyxxQkFBcUIsS0FBckIscUJBQXFCLFFBUWhDO0FBRUQsTUFBTSxPQUFnQixpQkFBaUI7SUFFbkMsWUFBbUIsSUFBMkI7UUFBM0IsU0FBSSxHQUFKLElBQUksQ0FBdUI7SUFFOUMsQ0FBQztDQVNKIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDA1LjA1LjIwMTcuXHJcbiAqIEEgcGFydCBvZiBhIHBhcnNlZCBtZXNzYWdlLlxyXG4gKiBDYW4gYmUgYSB0ZXh0LCBhIHBsYWNlaG9sZGVyLCBhIHRhZ1xyXG4gKi9cclxuXHJcbmV4cG9ydCBlbnVtIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZSB7XHJcbiAgICBURVhULFxyXG4gICAgUExBQ0VIT0xERVIsXHJcbiAgICBTVEFSVF9UQUcsXHJcbiAgICBFTkRfVEFHLFxyXG4gICAgRU1QVFlfVEFHLFxyXG4gICAgSUNVX01FU1NBR0UsXHJcbiAgICBJQ1VfTUVTU0FHRV9SRUZcclxufVxyXG5cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFBhcnNlZE1lc3NhZ2VQYXJ0IHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdHlwZTogUGFyc2VkTWVzc2FnZVBhcnRUeXBlKSB7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBwYXJ0LlxyXG4gICAgICogQHBhcmFtIGZvcm1hdCBvcHRpb25hbCB3YXkgdG8gZGV0ZXJtaW5lIHRoZSBleGFjdCBzeW50YXguXHJcbiAgICAgKiBBbGxvd2VkIGZvcm1hdHMgYXJlIGRlZmluZWQgYXMgY29uc3RhbnRzIE5PUk1BTElaQVRJT05fRk9STUFULi4uXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBhYnN0cmFjdCBhc0Rpc3BsYXlTdHJpbmcoZm9ybWF0Pzogc3RyaW5nKTogc3RyaW5nO1xyXG5cclxufVxyXG4iXX0=","customTransformCache":false,"dependencies":[],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Created by martin on 05.05.2017.\r\n * A part of a parsed message.\r\n * Can be a text, a placeholder, a tag\r\n */\r\nexport var ParsedMessagePartType;\r\n(function (ParsedMessagePartType) {\r\n    ParsedMessagePartType[ParsedMessagePartType[\"TEXT\"] = 0] = \"TEXT\";\r\n    ParsedMessagePartType[ParsedMessagePartType[\"PLACEHOLDER\"] = 1] = \"PLACEHOLDER\";\r\n    ParsedMessagePartType[ParsedMessagePartType[\"START_TAG\"] = 2] = \"START_TAG\";\r\n    ParsedMessagePartType[ParsedMessagePartType[\"END_TAG\"] = 3] = \"END_TAG\";\r\n    ParsedMessagePartType[ParsedMessagePartType[\"EMPTY_TAG\"] = 4] = \"EMPTY_TAG\";\r\n    ParsedMessagePartType[ParsedMessagePartType[\"ICU_MESSAGE\"] = 5] = \"ICU_MESSAGE\";\r\n    ParsedMessagePartType[ParsedMessagePartType[\"ICU_MESSAGE_REF\"] = 6] = \"ICU_MESSAGE_REF\";\r\n})(ParsedMessagePartType || (ParsedMessagePartType = {}));\r\nexport class ParsedMessagePart {\r\n    constructor(type) {\r\n        this.type = type;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1pMThuc3VwcG9ydC1saWIvc3JjL2ltcGwvcGFyc2VkLW1lc3NhZ2UtcGFydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsTUFBTSxDQUFOLElBQVkscUJBUVg7QUFSRCxXQUFZLHFCQUFxQjtJQUM3QixpRUFBSSxDQUFBO0lBQ0osK0VBQVcsQ0FBQTtJQUNYLDJFQUFTLENBQUE7SUFDVCx1RUFBTyxDQUFBO0lBQ1AsMkVBQVMsQ0FBQTtJQUNULCtFQUFXLENBQUE7SUFDWCx1RkFBZSxDQUFBO0FBQ25CLENBQUMsRUFSVyxxQkFBcUIsS0FBckIscUJBQXFCLFFBUWhDO0FBRUQsTUFBTSxPQUFnQixpQkFBaUI7SUFFbkMsWUFBbUIsSUFBMkI7UUFBM0IsU0FBSSxHQUFKLElBQUksQ0FBdUI7SUFFOUMsQ0FBQztDQVNKIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDA1LjA1LjIwMTcuXHJcbiAqIEEgcGFydCBvZiBhIHBhcnNlZCBtZXNzYWdlLlxyXG4gKiBDYW4gYmUgYSB0ZXh0LCBhIHBsYWNlaG9sZGVyLCBhIHRhZ1xyXG4gKi9cclxuXHJcbmV4cG9ydCBlbnVtIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZSB7XHJcbiAgICBURVhULFxyXG4gICAgUExBQ0VIT0xERVIsXHJcbiAgICBTVEFSVF9UQUcsXHJcbiAgICBFTkRfVEFHLFxyXG4gICAgRU1QVFlfVEFHLFxyXG4gICAgSUNVX01FU1NBR0UsXHJcbiAgICBJQ1VfTUVTU0FHRV9SRUZcclxufVxyXG5cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFBhcnNlZE1lc3NhZ2VQYXJ0IHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdHlwZTogUGFyc2VkTWVzc2FnZVBhcnRUeXBlKSB7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBwYXJ0LlxyXG4gICAgICogQHBhcmFtIGZvcm1hdCBvcHRpb25hbCB3YXkgdG8gZGV0ZXJtaW5lIHRoZSBleGFjdCBzeW50YXguXHJcbiAgICAgKiBBbGxvd2VkIGZvcm1hdHMgYXJlIGRlZmluZWQgYXMgY29uc3RhbnRzIE5PUk1BTElaQVRJT05fRk9STUFULi4uXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBhYnN0cmFjdCBhc0Rpc3BsYXlTdHJpbmcoZm9ybWF0Pzogc3RyaW5nKTogc3RyaW5nO1xyXG5cclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"parsed-message-part.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/parsed-message-part.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[[3,0,4,3]],[[0,0,6,0],[6,0,6,6],[7,0,6,0],[11,0,6,12],[32,0,14,1]],[[0,0,6,0],[11,0,6,12],[32,0,6,33]],[[4,0,7,4],[69,0,7,8],[70,0,7,8]],[[4,0,8,4],[83,0,8,15],[84,0,8,15]],[[4,0,9,4],[79,0,9,13],[80,0,9,13]],[[4,0,10,4],[75,0,10,11],[76,0,10,11]],[[4,0,11,4],[79,0,11,13],[80,0,11,13]],[[4,0,12,4],[83,0,12,15],[84,0,12,15]],[[4,0,13,4],[91,0,13,19],[92,0,13,19]],[[0,0,14,0],[1,0,14,1],[3,0,6,12],[24,0,6,33],[29,0,6,12],[50,0,6,33],[58,0,14,1]],[[0,0,16,0],[6,0,16,6],[13,0,16,22],[30,0,16,39]],[[4,0,18,4],[16,0,18,23],[20,0,18,50]],[[8,0,18,23],[17,0,18,27],[20,0,18,23],[24,0,18,27],[25,0,18,50]],[[4,0,20,4],[5,0,20,5]],[[1,0,29,1]]],"sourcesContent":["/**\r\n * Created by martin on 05.05.2017.\r\n * A part of a parsed message.\r\n * Can be a text, a placeholder, a tag\r\n */\r\n\r\nexport enum ParsedMessagePartType {\r\n    TEXT,\r\n    PLACEHOLDER,\r\n    START_TAG,\r\n    END_TAG,\r\n    EMPTY_TAG,\r\n    ICU_MESSAGE,\r\n    ICU_MESSAGE_REF\r\n}\r\n\r\nexport abstract class ParsedMessagePart {\r\n\r\n    constructor(public type: ParsedMessagePartType) {\r\n\r\n    }\r\n\r\n    /**\r\n     * String representation of the part.\r\n     * @param format optional way to determine the exact syntax.\r\n     * Allowed formats are defined as constants NORMALIZATION_FORMAT...\r\n     */\r\n    public abstract asDisplayString(format?: string): string;\r\n\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1790,"body":[{"type":"ImportDeclaration","start":0,"end":81,"specifiers":[{"type":"ImportSpecifier","start":9,"end":26,"imported":{"type":"Identifier","start":9,"end":26,"name":"ParsedMessagePart"},"local":{"type":"Identifier","start":9,"end":26,"name":"ParsedMessagePart"}},{"type":"ImportSpecifier","start":28,"end":49,"imported":{"type":"Identifier","start":28,"end":49,"name":"ParsedMessagePartType"},"local":{"type":"Identifier","start":28,"end":49,"name":"ParsedMessagePartType"}}],"source":{"type":"Literal","start":57,"end":80,"value":"./parsed-message-part","raw":"'./parsed-message-part'"}},{"type":"ExportNamedDeclaration","start":181,"end":414,"declaration":{"type":"ClassDeclaration","start":188,"end":414,"id":{"type":"Identifier","start":194,"end":215,"name":"ParsedMessagePartText"},"superClass":{"type":"Identifier","start":224,"end":241,"name":"ParsedMessagePart"},"body":{"type":"ClassBody","start":242,"end":414,"body":[{"type":"MethodDefinition","start":249,"end":346,"static":false,"computed":false,"key":{"type":"Identifier","start":249,"end":260,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":260,"end":346,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":261,"end":265,"name":"text"}],"body":{"type":"BlockStatement","start":267,"end":346,"body":[{"type":"ExpressionStatement","start":278,"end":312,"expression":{"type":"CallExpression","start":278,"end":311,"callee":{"type":"Super","start":278,"end":283},"arguments":[{"type":"MemberExpression","start":284,"end":310,"object":{"type":"Identifier","start":284,"end":305,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":306,"end":310,"name":"TEXT"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":322,"end":339,"expression":{"type":"AssignmentExpression","start":322,"end":338,"operator":"=","left":{"type":"MemberExpression","start":322,"end":331,"object":{"type":"ThisExpression","start":322,"end":326},"property":{"type":"Identifier","start":327,"end":331,"name":"text"},"computed":false,"optional":false},"right":{"type":"Identifier","start":334,"end":338,"name":"text"}}}]}}},{"type":"MethodDefinition","start":352,"end":411,"static":false,"computed":false,"key":{"type":"Identifier","start":352,"end":367,"name":"asDisplayString"},"kind":"method","value":{"type":"FunctionExpression","start":367,"end":411,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":368,"end":374,"name":"format"}],"body":{"type":"BlockStatement","start":376,"end":411,"body":[{"type":"ReturnStatement","start":387,"end":404,"argument":{"type":"MemberExpression","start":394,"end":403,"object":{"type":"ThisExpression","start":394,"end":398},"property":{"type":"Identifier","start":399,"end":403,"name":"text"},"computed":false,"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC10ZXh0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWkxOG5zdXBwb3J0LWxpYi9zcmMvaW1wbC9wYXJzZWQtbWVzc2FnZS1wYXJ0LXRleHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLGlCQUFpQixFQUFFLHFCQUFxQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDL0U7OztHQUdHO0FBRUgsTUFBTSxPQUFPLHFCQUFzQixTQUFRLGlCQUFpQjtJQUl4RCxZQUFZLElBQVk7UUFDcEIsS0FBSyxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ3JCLENBQUM7SUFFTSxlQUFlLENBQUMsTUFBZTtRQUNsQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDckIsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydCwgUGFyc2VkTWVzc2FnZVBhcnRUeXBlfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMDUuMDUuMjAxNy5cclxuICogQSBtZXNzYWdlIHBhcnQgY29uc2lzdGluZyBvZiBqdXN0IHNpbXBsZSB0ZXh0LlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBQYXJzZWRNZXNzYWdlUGFydFRleHQgZXh0ZW5kcyBQYXJzZWRNZXNzYWdlUGFydCB7XHJcblxyXG4gICAgcHJpdmF0ZSB0ZXh0OiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IodGV4dDogc3RyaW5nKSB7XHJcbiAgICAgICAgc3VwZXIoUGFyc2VkTWVzc2FnZVBhcnRUeXBlLlRFWFQpO1xyXG4gICAgICAgIHRoaXMudGV4dCA9IHRleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzRGlzcGxheVN0cmluZyhmb3JtYXQ/OiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy50ZXh0O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==","start":416,"end":1790}]},"code":"import { ParsedMessagePart, ParsedMessagePartType } from './parsed-message-part';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of just simple text.\r\n */\r\nexport class ParsedMessagePartText extends ParsedMessagePart {\r\n    constructor(text) {\r\n        super(ParsedMessagePartType.TEXT);\r\n        this.text = text;\r\n    }\r\n    asDisplayString(format) {\r\n        return this.text;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC10ZXh0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWkxOG5zdXBwb3J0LWxpYi9zcmMvaW1wbC9wYXJzZWQtbWVzc2FnZS1wYXJ0LXRleHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLGlCQUFpQixFQUFFLHFCQUFxQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDL0U7OztHQUdHO0FBRUgsTUFBTSxPQUFPLHFCQUFzQixTQUFRLGlCQUFpQjtJQUl4RCxZQUFZLElBQVk7UUFDcEIsS0FBSyxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ3JCLENBQUM7SUFFTSxlQUFlLENBQUMsTUFBZTtRQUNsQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDckIsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydCwgUGFyc2VkTWVzc2FnZVBhcnRUeXBlfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMDUuMDUuMjAxNy5cclxuICogQSBtZXNzYWdlIHBhcnQgY29uc2lzdGluZyBvZiBqdXN0IHNpbXBsZSB0ZXh0LlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBQYXJzZWRNZXNzYWdlUGFydFRleHQgZXh0ZW5kcyBQYXJzZWRNZXNzYWdlUGFydCB7XHJcblxyXG4gICAgcHJpdmF0ZSB0ZXh0OiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IodGV4dDogc3RyaW5nKSB7XHJcbiAgICAgICAgc3VwZXIoUGFyc2VkTWVzc2FnZVBhcnRUeXBlLlRFWFQpO1xyXG4gICAgICAgIHRoaXMudGV4dCA9IHRleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzRGlzcGxheVN0cmluZyhmb3JtYXQ/OiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy50ZXh0O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-text.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { ParsedMessagePart, ParsedMessagePartType } from './parsed-message-part';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of just simple text.\r\n */\r\nexport class ParsedMessagePartText extends ParsedMessagePart {\r\n    constructor(text) {\r\n        super(ParsedMessagePartType.TEXT);\r\n        this.text = text;\r\n    }\r\n    asDisplayString(format) {\r\n        return this.text;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC10ZXh0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWkxOG5zdXBwb3J0LWxpYi9zcmMvaW1wbC9wYXJzZWQtbWVzc2FnZS1wYXJ0LXRleHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLGlCQUFpQixFQUFFLHFCQUFxQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDL0U7OztHQUdHO0FBRUgsTUFBTSxPQUFPLHFCQUFzQixTQUFRLGlCQUFpQjtJQUl4RCxZQUFZLElBQVk7UUFDcEIsS0FBSyxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ3JCLENBQUM7SUFFTSxlQUFlLENBQUMsTUFBZTtRQUNsQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDckIsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydCwgUGFyc2VkTWVzc2FnZVBhcnRUeXBlfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMDUuMDUuMjAxNy5cclxuICogQSBtZXNzYWdlIHBhcnQgY29uc2lzdGluZyBvZiBqdXN0IHNpbXBsZSB0ZXh0LlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBQYXJzZWRNZXNzYWdlUGFydFRleHQgZXh0ZW5kcyBQYXJzZWRNZXNzYWdlUGFydCB7XHJcblxyXG4gICAgcHJpdmF0ZSB0ZXh0OiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IodGV4dDogc3RyaW5nKSB7XHJcbiAgICAgICAgc3VwZXIoUGFyc2VkTWVzc2FnZVBhcnRUeXBlLlRFWFQpO1xyXG4gICAgICAgIHRoaXMudGV4dCA9IHRleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzRGlzcGxheVN0cmluZyhmb3JtYXQ/OiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy50ZXh0O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==","originalSourcemap":{"version":3,"file":"parsed-message-part-text.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/parsed-message-part-text.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[26,0,0,25],[28,0,0,27],[49,0,0,48],[51,0,0,49],[57,0,0,55],[80,0,0,78],[81,0,0,79]],[[0,0,1,0]],[],[],[[3,0,4,3]],[[0,0,6,0],[6,0,6,6],[13,0,6,13],[34,0,6,35],[43,0,6,43],[60,0,6,60]],[[4,0,10,4],[16,0,10,16],[20,0,10,28]],[[8,0,11,8],[13,0,11,13],[14,0,11,14],[35,0,11,35],[36,0,11,36],[40,0,11,40],[41,0,11,41],[42,0,11,42]],[[8,0,12,8],[12,0,12,12],[13,0,12,13],[17,0,12,17],[20,0,12,20],[24,0,12,24],[25,0,12,25]],[[4,0,13,4],[5,0,13,5]],[[4,0,15,11],[19,0,15,26],[20,0,15,27],[26,0,15,42]],[[8,0,16,8],[15,0,16,15],[19,0,16,19],[20,0,16,20],[24,0,16,24],[25,0,16,25]],[[4,0,17,4],[5,0,17,5]],[[1,0,18,1]]],"sourcesContent":["import {ParsedMessagePart, ParsedMessagePartType} from './parsed-message-part';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of just simple text.\r\n */\r\n\r\nexport class ParsedMessagePartText extends ParsedMessagePart {\r\n\r\n    private text: string;\r\n\r\n    constructor(text: string) {\r\n        super(ParsedMessagePartType.TEXT);\r\n        this.text = text;\r\n    }\r\n\r\n    public asDisplayString(format?: string) {\r\n        return this.text;\r\n    }\r\n}\r\n"]},"resolvedIds":{"./parsed-message-part":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":3400,"body":[{"type":"ImportDeclaration","start":0,"end":81,"specifiers":[{"type":"ImportSpecifier","start":9,"end":26,"imported":{"type":"Identifier","start":9,"end":26,"name":"ParsedMessagePart"},"local":{"type":"Identifier","start":9,"end":26,"name":"ParsedMessagePart"}},{"type":"ImportSpecifier","start":28,"end":49,"imported":{"type":"Identifier","start":28,"end":49,"name":"ParsedMessagePartType"},"local":{"type":"Identifier","start":28,"end":49,"name":"ParsedMessagePartType"}}],"source":{"type":"Literal","start":57,"end":80,"value":"./parsed-message-part","raw":"'./parsed-message-part'"}},{"type":"ImportDeclaration","start":83,"end":152,"specifiers":[{"type":"ImportSpecifier","start":92,"end":125,"imported":{"type":"Identifier","start":92,"end":125,"name":"NORMALIZATION_FORMAT_NGXTRANSLATE"},"local":{"type":"Identifier","start":92,"end":125,"name":"NORMALIZATION_FORMAT_NGXTRANSLATE"}}],"source":{"type":"Literal","start":133,"end":151,"value":"../api/constants","raw":"'../api/constants'"}},{"type":"ExportNamedDeclaration","start":292,"end":812,"declaration":{"type":"ClassDeclaration","start":299,"end":812,"id":{"type":"Identifier","start":305,"end":333,"name":"ParsedMessagePartPlaceholder"},"superClass":{"type":"Identifier","start":342,"end":359,"name":"ParsedMessagePart"},"body":{"type":"ClassBody","start":360,"end":812,"body":[{"type":"MethodDefinition","start":367,"end":509,"static":false,"computed":false,"key":{"type":"Identifier","start":367,"end":378,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":378,"end":509,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":379,"end":384,"name":"index"},{"type":"Identifier","start":386,"end":390,"name":"disp"}],"body":{"type":"BlockStatement","start":392,"end":509,"body":[{"type":"ExpressionStatement","start":403,"end":444,"expression":{"type":"CallExpression","start":403,"end":443,"callee":{"type":"Super","start":403,"end":408},"arguments":[{"type":"MemberExpression","start":409,"end":442,"object":{"type":"Identifier","start":409,"end":430,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":431,"end":442,"name":"PLACEHOLDER"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":454,"end":474,"expression":{"type":"AssignmentExpression","start":454,"end":473,"operator":"=","left":{"type":"MemberExpression","start":454,"end":465,"object":{"type":"ThisExpression","start":454,"end":458},"property":{"type":"Identifier","start":459,"end":465,"name":"_index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":468,"end":473,"name":"index"}}},{"type":"ExpressionStatement","start":484,"end":502,"expression":{"type":"AssignmentExpression","start":484,"end":501,"operator":"=","left":{"type":"MemberExpression","start":484,"end":494,"object":{"type":"ThisExpression","start":484,"end":488},"property":{"type":"Identifier","start":489,"end":494,"name":"_disp"},"computed":false,"optional":false},"right":{"type":"Identifier","start":497,"end":501,"name":"disp"}}}]}}},{"type":"MethodDefinition","start":515,"end":709,"static":false,"computed":false,"key":{"type":"Identifier","start":515,"end":530,"name":"asDisplayString"},"kind":"method","value":{"type":"FunctionExpression","start":530,"end":709,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":531,"end":537,"name":"format"}],"body":{"type":"BlockStatement","start":539,"end":709,"body":[{"type":"IfStatement","start":550,"end":659,"test":{"type":"BinaryExpression","start":554,"end":598,"left":{"type":"Identifier","start":554,"end":560,"name":"format"},"operator":"===","right":{"type":"Identifier","start":565,"end":598,"name":"NORMALIZATION_FORMAT_NGXTRANSLATE"}},"consequent":{"type":"BlockStatement","start":600,"end":659,"body":[{"type":"ReturnStatement","start":615,"end":648,"argument":{"type":"BinaryExpression","start":622,"end":647,"left":{"type":"BinaryExpression","start":622,"end":640,"left":{"type":"Literal","start":622,"end":626,"value":"{{","raw":"'{{'"},"operator":"+","right":{"type":"MemberExpression","start":629,"end":640,"object":{"type":"ThisExpression","start":629,"end":633},"property":{"type":"Identifier","start":634,"end":640,"name":"_index"},"computed":false,"optional":false}},"operator":"+","right":{"type":"Literal","start":643,"end":647,"value":"}}","raw":"'}}'"}}}]},"alternate":null},{"type":"ReturnStatement","start":669,"end":702,"argument":{"type":"BinaryExpression","start":676,"end":701,"left":{"type":"BinaryExpression","start":676,"end":694,"left":{"type":"Literal","start":676,"end":680,"value":"{{","raw":"'{{'"},"operator":"+","right":{"type":"MemberExpression","start":683,"end":694,"object":{"type":"ThisExpression","start":683,"end":687},"property":{"type":"Identifier","start":688,"end":694,"name":"_index"},"computed":false,"optional":false}},"operator":"+","right":{"type":"Literal","start":697,"end":701,"value":"}}","raw":"'}}'"}}}]}}},{"type":"MethodDefinition","start":715,"end":760,"static":false,"computed":false,"key":{"type":"Identifier","start":715,"end":720,"name":"index"},"kind":"method","value":{"type":"FunctionExpression","start":720,"end":760,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":723,"end":760,"body":[{"type":"ReturnStatement","start":734,"end":753,"argument":{"type":"MemberExpression","start":741,"end":752,"object":{"type":"ThisExpression","start":741,"end":745},"property":{"type":"Identifier","start":746,"end":752,"name":"_index"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":766,"end":809,"static":false,"computed":false,"key":{"type":"Identifier","start":766,"end":770,"name":"disp"},"kind":"method","value":{"type":"FunctionExpression","start":770,"end":809,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":773,"end":809,"body":[{"type":"ReturnStatement","start":784,"end":802,"argument":{"type":"MemberExpression","start":791,"end":801,"object":{"type":"ThisExpression","start":791,"end":795},"property":{"type":"Identifier","start":796,"end":801,"name":"_disp"},"computed":false,"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC1wbGFjZWhvbGRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1pMThuc3VwcG9ydC1saWIvc3JjL2ltcGwvcGFyc2VkLW1lc3NhZ2UtcGFydC1wbGFjZWhvbGRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsaUJBQWlCLEVBQUUscUJBQXFCLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUMvRSxPQUFPLEVBQUMsaUNBQWlDLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUNuRTs7OztHQUlHO0FBRUgsTUFBTSxPQUFPLDRCQUE2QixTQUFRLGlCQUFpQjtJQU8vRCxZQUFZLEtBQWEsRUFBRSxJQUFZO1FBQ25DLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztJQUN0QixDQUFDO0lBRU0sZUFBZSxDQUFDLE1BQWU7UUFDbEMsSUFBSSxNQUFNLEtBQUssaUNBQWlDLEVBQUU7WUFDOUMsT0FBTyxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7U0FDcEM7UUFDRCxPQUFPLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztJQUNyQyxDQUFDO0lBQ00sS0FBSztRQUNSLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN2QixDQUFDO0lBRU0sSUFBSTtRQUNQLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN0QixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0LCBQYXJzZWRNZXNzYWdlUGFydFR5cGV9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydCc7XHJcbmltcG9ydCB7Tk9STUFMSVpBVElPTl9GT1JNQVRfTkdYVFJBTlNMQVRFfSBmcm9tICcuLi9hcGkvY29uc3RhbnRzJztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDA1LjA1LjIwMTcuXHJcbiAqIEEgbWVzc2FnZSBwYXJ0IGNvbnNpc3Rpbmcgb2YgYSBwbGFjZWhvbGRlci5cclxuICogUGxhY2Vob2xkZXJzIGFyZSBudW1iZXJlZCBmcm9tIDAgdG8gbi5cclxuICovXHJcblxyXG5leHBvcnQgY2xhc3MgUGFyc2VkTWVzc2FnZVBhcnRQbGFjZWhvbGRlciBleHRlbmRzIFBhcnNlZE1lc3NhZ2VQYXJ0IHtcclxuXHJcbiAgICAvLyBpbmRleCAwIC4uIG5cclxuICAgIHByaXZhdGUgX2luZGV4OiBudW1iZXI7XHJcbiAgICAvLyBvcHRpb25hbCBkaXNwLUF0dHJpYnV0ZSB2YWx1ZSwgY29udGFpbnMgdGhlIG9yaWdpbmFsIGV4cHJlc3Npb24uXHJcbiAgICBwcml2YXRlIF9kaXNwPzogc3RyaW5nO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGluZGV4OiBudW1iZXIsIGRpc3A6IHN0cmluZykge1xyXG4gICAgICAgIHN1cGVyKFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5QTEFDRUhPTERFUik7XHJcbiAgICAgICAgdGhpcy5faW5kZXggPSBpbmRleDtcclxuICAgICAgICB0aGlzLl9kaXNwID0gZGlzcDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXNEaXNwbGF5U3RyaW5nKGZvcm1hdD86IHN0cmluZykge1xyXG4gICAgICAgIGlmIChmb3JtYXQgPT09IE5PUk1BTElaQVRJT05fRk9STUFUX05HWFRSQU5TTEFURSkge1xyXG4gICAgICAgICAgICByZXR1cm4gJ3t7JyArIHRoaXMuX2luZGV4ICsgJ319JztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuICd7eycgKyB0aGlzLl9pbmRleCArICd9fSc7XHJcbiAgICB9XHJcbiAgICBwdWJsaWMgaW5kZXgoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faW5kZXg7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGRpc3AoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZGlzcDtcclxuICAgIH1cclxufVxyXG4iXX0=","start":814,"end":3400}]},"code":"import { ParsedMessagePart, ParsedMessagePartType } from './parsed-message-part';\r\nimport { NORMALIZATION_FORMAT_NGXTRANSLATE } from '../api/constants';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a placeholder.\r\n * Placeholders are numbered from 0 to n.\r\n */\r\nexport class ParsedMessagePartPlaceholder extends ParsedMessagePart {\r\n    constructor(index, disp) {\r\n        super(ParsedMessagePartType.PLACEHOLDER);\r\n        this._index = index;\r\n        this._disp = disp;\r\n    }\r\n    asDisplayString(format) {\r\n        if (format === NORMALIZATION_FORMAT_NGXTRANSLATE) {\r\n            return '{{' + this._index + '}}';\r\n        }\r\n        return '{{' + this._index + '}}';\r\n    }\r\n    index() {\r\n        return this._index;\r\n    }\r\n    disp() {\r\n        return this._disp;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC1wbGFjZWhvbGRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1pMThuc3VwcG9ydC1saWIvc3JjL2ltcGwvcGFyc2VkLW1lc3NhZ2UtcGFydC1wbGFjZWhvbGRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsaUJBQWlCLEVBQUUscUJBQXFCLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUMvRSxPQUFPLEVBQUMsaUNBQWlDLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUNuRTs7OztHQUlHO0FBRUgsTUFBTSxPQUFPLDRCQUE2QixTQUFRLGlCQUFpQjtJQU8vRCxZQUFZLEtBQWEsRUFBRSxJQUFZO1FBQ25DLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztJQUN0QixDQUFDO0lBRU0sZUFBZSxDQUFDLE1BQWU7UUFDbEMsSUFBSSxNQUFNLEtBQUssaUNBQWlDLEVBQUU7WUFDOUMsT0FBTyxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7U0FDcEM7UUFDRCxPQUFPLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztJQUNyQyxDQUFDO0lBQ00sS0FBSztRQUNSLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN2QixDQUFDO0lBRU0sSUFBSTtRQUNQLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN0QixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0LCBQYXJzZWRNZXNzYWdlUGFydFR5cGV9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydCc7XHJcbmltcG9ydCB7Tk9STUFMSVpBVElPTl9GT1JNQVRfTkdYVFJBTlNMQVRFfSBmcm9tICcuLi9hcGkvY29uc3RhbnRzJztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDA1LjA1LjIwMTcuXHJcbiAqIEEgbWVzc2FnZSBwYXJ0IGNvbnNpc3Rpbmcgb2YgYSBwbGFjZWhvbGRlci5cclxuICogUGxhY2Vob2xkZXJzIGFyZSBudW1iZXJlZCBmcm9tIDAgdG8gbi5cclxuICovXHJcblxyXG5leHBvcnQgY2xhc3MgUGFyc2VkTWVzc2FnZVBhcnRQbGFjZWhvbGRlciBleHRlbmRzIFBhcnNlZE1lc3NhZ2VQYXJ0IHtcclxuXHJcbiAgICAvLyBpbmRleCAwIC4uIG5cclxuICAgIHByaXZhdGUgX2luZGV4OiBudW1iZXI7XHJcbiAgICAvLyBvcHRpb25hbCBkaXNwLUF0dHJpYnV0ZSB2YWx1ZSwgY29udGFpbnMgdGhlIG9yaWdpbmFsIGV4cHJlc3Npb24uXHJcbiAgICBwcml2YXRlIF9kaXNwPzogc3RyaW5nO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGluZGV4OiBudW1iZXIsIGRpc3A6IHN0cmluZykge1xyXG4gICAgICAgIHN1cGVyKFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5QTEFDRUhPTERFUik7XHJcbiAgICAgICAgdGhpcy5faW5kZXggPSBpbmRleDtcclxuICAgICAgICB0aGlzLl9kaXNwID0gZGlzcDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXNEaXNwbGF5U3RyaW5nKGZvcm1hdD86IHN0cmluZykge1xyXG4gICAgICAgIGlmIChmb3JtYXQgPT09IE5PUk1BTElaQVRJT05fRk9STUFUX05HWFRSQU5TTEFURSkge1xyXG4gICAgICAgICAgICByZXR1cm4gJ3t7JyArIHRoaXMuX2luZGV4ICsgJ319JztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuICd7eycgKyB0aGlzLl9pbmRleCArICd9fSc7XHJcbiAgICB9XHJcbiAgICBwdWJsaWMgaW5kZXgoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faW5kZXg7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGRpc3AoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZGlzcDtcclxuICAgIH1cclxufVxyXG4iXX0=","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-placeholder.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { ParsedMessagePart, ParsedMessagePartType } from './parsed-message-part';\r\nimport { NORMALIZATION_FORMAT_NGXTRANSLATE } from '../api/constants';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a placeholder.\r\n * Placeholders are numbered from 0 to n.\r\n */\r\nexport class ParsedMessagePartPlaceholder extends ParsedMessagePart {\r\n    constructor(index, disp) {\r\n        super(ParsedMessagePartType.PLACEHOLDER);\r\n        this._index = index;\r\n        this._disp = disp;\r\n    }\r\n    asDisplayString(format) {\r\n        if (format === NORMALIZATION_FORMAT_NGXTRANSLATE) {\r\n            return '{{' + this._index + '}}';\r\n        }\r\n        return '{{' + this._index + '}}';\r\n    }\r\n    index() {\r\n        return this._index;\r\n    }\r\n    disp() {\r\n        return this._disp;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC1wbGFjZWhvbGRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1pMThuc3VwcG9ydC1saWIvc3JjL2ltcGwvcGFyc2VkLW1lc3NhZ2UtcGFydC1wbGFjZWhvbGRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsaUJBQWlCLEVBQUUscUJBQXFCLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUMvRSxPQUFPLEVBQUMsaUNBQWlDLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUNuRTs7OztHQUlHO0FBRUgsTUFBTSxPQUFPLDRCQUE2QixTQUFRLGlCQUFpQjtJQU8vRCxZQUFZLEtBQWEsRUFBRSxJQUFZO1FBQ25DLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztJQUN0QixDQUFDO0lBRU0sZUFBZSxDQUFDLE1BQWU7UUFDbEMsSUFBSSxNQUFNLEtBQUssaUNBQWlDLEVBQUU7WUFDOUMsT0FBTyxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7U0FDcEM7UUFDRCxPQUFPLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztJQUNyQyxDQUFDO0lBQ00sS0FBSztRQUNSLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN2QixDQUFDO0lBRU0sSUFBSTtRQUNQLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN0QixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0LCBQYXJzZWRNZXNzYWdlUGFydFR5cGV9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydCc7XHJcbmltcG9ydCB7Tk9STUFMSVpBVElPTl9GT1JNQVRfTkdYVFJBTlNMQVRFfSBmcm9tICcuLi9hcGkvY29uc3RhbnRzJztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDA1LjA1LjIwMTcuXHJcbiAqIEEgbWVzc2FnZSBwYXJ0IGNvbnNpc3Rpbmcgb2YgYSBwbGFjZWhvbGRlci5cclxuICogUGxhY2Vob2xkZXJzIGFyZSBudW1iZXJlZCBmcm9tIDAgdG8gbi5cclxuICovXHJcblxyXG5leHBvcnQgY2xhc3MgUGFyc2VkTWVzc2FnZVBhcnRQbGFjZWhvbGRlciBleHRlbmRzIFBhcnNlZE1lc3NhZ2VQYXJ0IHtcclxuXHJcbiAgICAvLyBpbmRleCAwIC4uIG5cclxuICAgIHByaXZhdGUgX2luZGV4OiBudW1iZXI7XHJcbiAgICAvLyBvcHRpb25hbCBkaXNwLUF0dHJpYnV0ZSB2YWx1ZSwgY29udGFpbnMgdGhlIG9yaWdpbmFsIGV4cHJlc3Npb24uXHJcbiAgICBwcml2YXRlIF9kaXNwPzogc3RyaW5nO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGluZGV4OiBudW1iZXIsIGRpc3A6IHN0cmluZykge1xyXG4gICAgICAgIHN1cGVyKFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5QTEFDRUhPTERFUik7XHJcbiAgICAgICAgdGhpcy5faW5kZXggPSBpbmRleDtcclxuICAgICAgICB0aGlzLl9kaXNwID0gZGlzcDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXNEaXNwbGF5U3RyaW5nKGZvcm1hdD86IHN0cmluZykge1xyXG4gICAgICAgIGlmIChmb3JtYXQgPT09IE5PUk1BTElaQVRJT05fRk9STUFUX05HWFRSQU5TTEFURSkge1xyXG4gICAgICAgICAgICByZXR1cm4gJ3t7JyArIHRoaXMuX2luZGV4ICsgJ319JztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuICd7eycgKyB0aGlzLl9pbmRleCArICd9fSc7XHJcbiAgICB9XHJcbiAgICBwdWJsaWMgaW5kZXgoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faW5kZXg7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGRpc3AoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZGlzcDtcclxuICAgIH1cclxufVxyXG4iXX0=","originalSourcemap":{"version":3,"file":"parsed-message-part-placeholder.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/parsed-message-part-placeholder.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[26,0,0,25],[28,0,0,27],[49,0,0,48],[51,0,0,49],[57,0,0,55],[80,0,0,78],[81,0,0,79]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[42,0,1,41],[44,0,1,42],[50,0,1,48],[68,0,1,66],[69,0,1,67]],[[0,0,2,0]],[],[],[],[[3,0,6,3]],[[0,0,8,0],[6,0,8,6],[13,0,8,13],[41,0,8,42],[50,0,8,50],[67,0,8,67]],[[4,0,15,4],[16,0,15,16],[21,0,15,29],[23,0,15,31],[27,0,15,43]],[[8,0,16,8],[13,0,16,13],[14,0,16,14],[35,0,16,35],[36,0,16,36],[47,0,16,47],[48,0,16,48],[49,0,16,49]],[[8,0,17,8],[12,0,17,12],[13,0,17,13],[19,0,17,19],[22,0,17,22],[27,0,17,27],[28,0,17,28]],[[8,0,18,8],[12,0,18,12],[13,0,18,13],[18,0,18,18],[21,0,18,21],[25,0,18,25],[26,0,18,26]],[[4,0,19,4],[5,0,19,5]],[[4,0,21,11],[19,0,21,26],[20,0,21,27],[26,0,21,42]],[[8,0,22,8],[12,0,22,12],[18,0,22,18],[23,0,22,23],[56,0,22,56],[58,0,22,58]],[[12,0,23,12],[19,0,23,19],[23,0,23,23],[26,0,23,26],[30,0,23,30],[31,0,23,31],[37,0,23,37],[40,0,23,40],[44,0,23,44],[45,0,23,45]],[[9,0,24,9]],[[8,0,25,8],[15,0,25,15],[19,0,25,19],[22,0,25,22],[26,0,25,26],[27,0,25,27],[33,0,25,33],[36,0,25,36],[40,0,25,40],[41,0,25,41]],[[4,0,26,4],[5,0,26,5]],[[4,0,27,11],[9,0,27,16]],[[8,0,28,8],[15,0,28,15],[19,0,28,19],[20,0,28,20],[26,0,28,26],[27,0,28,27]],[[4,0,29,4],[5,0,29,5]],[[4,0,31,11],[8,0,31,15]],[[8,0,32,8],[15,0,32,15],[19,0,32,19],[20,0,32,20],[25,0,32,25],[26,0,32,26]],[[4,0,33,4],[5,0,33,5]],[[1,0,34,1]]],"sourcesContent":["import {ParsedMessagePart, ParsedMessagePartType} from './parsed-message-part';\r\nimport {NORMALIZATION_FORMAT_NGXTRANSLATE} from '../api/constants';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a placeholder.\r\n * Placeholders are numbered from 0 to n.\r\n */\r\n\r\nexport class ParsedMessagePartPlaceholder extends ParsedMessagePart {\r\n\r\n    // index 0 .. n\r\n    private _index: number;\r\n    // optional disp-Attribute value, contains the original expression.\r\n    private _disp?: string;\r\n\r\n    constructor(index: number, disp: string) {\r\n        super(ParsedMessagePartType.PLACEHOLDER);\r\n        this._index = index;\r\n        this._disp = disp;\r\n    }\r\n\r\n    public asDisplayString(format?: string) {\r\n        if (format === NORMALIZATION_FORMAT_NGXTRANSLATE) {\r\n            return '{{' + this._index + '}}';\r\n        }\r\n        return '{{' + this._index + '}}';\r\n    }\r\n    public index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    public disp(): string {\r\n        return this._disp;\r\n    }\r\n}\r\n"]},"resolvedIds":{"../api/constants":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./parsed-message-part":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":3263,"body":[{"type":"ImportDeclaration","start":0,"end":81,"specifiers":[{"type":"ImportSpecifier","start":9,"end":26,"imported":{"type":"Identifier","start":9,"end":26,"name":"ParsedMessagePart"},"local":{"type":"Identifier","start":9,"end":26,"name":"ParsedMessagePart"}},{"type":"ImportSpecifier","start":28,"end":49,"imported":{"type":"Identifier","start":28,"end":49,"name":"ParsedMessagePartType"},"local":{"type":"Identifier","start":28,"end":49,"name":"ParsedMessagePartType"}}],"source":{"type":"Literal","start":57,"end":80,"value":"./parsed-message-part","raw":"'./parsed-message-part'"}},{"type":"ExportNamedDeclaration","start":201,"end":799,"declaration":{"type":"ClassDeclaration","start":208,"end":799,"id":{"type":"Identifier","start":214,"end":239,"name":"ParsedMessagePartStartTag"},"superClass":{"type":"Identifier","start":248,"end":265,"name":"ParsedMessagePart"},"body":{"type":"ClassBody","start":266,"end":799,"body":[{"type":"MethodDefinition","start":273,"end":434,"static":false,"computed":false,"key":{"type":"Identifier","start":273,"end":284,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":284,"end":434,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":285,"end":292,"name":"tagname"},{"type":"Identifier","start":294,"end":303,"name":"idcounter"}],"body":{"type":"BlockStatement","start":305,"end":434,"body":[{"type":"ExpressionStatement","start":316,"end":355,"expression":{"type":"CallExpression","start":316,"end":354,"callee":{"type":"Super","start":316,"end":321},"arguments":[{"type":"MemberExpression","start":322,"end":353,"object":{"type":"Identifier","start":322,"end":343,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":344,"end":353,"name":"START_TAG"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":365,"end":389,"expression":{"type":"AssignmentExpression","start":365,"end":388,"operator":"=","left":{"type":"MemberExpression","start":365,"end":378,"object":{"type":"ThisExpression","start":365,"end":369},"property":{"type":"Identifier","start":370,"end":378,"name":"_tagname"},"computed":false,"optional":false},"right":{"type":"Identifier","start":381,"end":388,"name":"tagname"}}},{"type":"ExpressionStatement","start":399,"end":427,"expression":{"type":"AssignmentExpression","start":399,"end":426,"operator":"=","left":{"type":"MemberExpression","start":399,"end":414,"object":{"type":"ThisExpression","start":399,"end":403},"property":{"type":"Identifier","start":404,"end":414,"name":"_idcounter"},"computed":false,"optional":false},"right":{"type":"Identifier","start":417,"end":426,"name":"idcounter"}}}]}}},{"type":"MethodDefinition","start":440,"end":682,"static":false,"computed":false,"key":{"type":"Identifier","start":440,"end":455,"name":"asDisplayString"},"kind":"method","value":{"type":"FunctionExpression","start":455,"end":682,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":456,"end":462,"name":"format"}],"body":{"type":"BlockStatement","start":464,"end":682,"body":[{"type":"IfStatement","start":475,"end":675,"test":{"type":"BinaryExpression","start":479,"end":500,"left":{"type":"MemberExpression","start":479,"end":494,"object":{"type":"ThisExpression","start":479,"end":483},"property":{"type":"Identifier","start":484,"end":494,"name":"_idcounter"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":499,"end":500,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":502,"end":561,"body":[{"type":"ReturnStatement","start":517,"end":550,"argument":{"type":"BinaryExpression","start":524,"end":549,"left":{"type":"BinaryExpression","start":524,"end":543,"left":{"type":"Literal","start":524,"end":527,"value":"<","raw":"'<'"},"operator":"+","right":{"type":"MemberExpression","start":530,"end":543,"object":{"type":"ThisExpression","start":530,"end":534},"property":{"type":"Identifier","start":535,"end":543,"name":"_tagname"},"computed":false,"optional":false}},"operator":"+","right":{"type":"Literal","start":546,"end":549,"value":">","raw":"'>'"}}}]},"alternate":{"type":"BlockStatement","start":576,"end":675,"body":[{"type":"ReturnStatement","start":591,"end":664,"argument":{"type":"BinaryExpression","start":598,"end":663,"left":{"type":"BinaryExpression","start":598,"end":656,"left":{"type":"BinaryExpression","start":598,"end":627,"left":{"type":"BinaryExpression","start":598,"end":617,"left":{"type":"Literal","start":598,"end":601,"value":"<","raw":"'<'"},"operator":"+","right":{"type":"MemberExpression","start":604,"end":617,"object":{"type":"ThisExpression","start":604,"end":608},"property":{"type":"Identifier","start":609,"end":617,"name":"_tagname"},"computed":false,"optional":false}},"operator":"+","right":{"type":"Literal","start":620,"end":627,"value":" id=\"","raw":"' id=\"'"}},"operator":"+","right":{"type":"CallExpression","start":630,"end":656,"callee":{"type":"MemberExpression","start":630,"end":654,"object":{"type":"MemberExpression","start":630,"end":645,"object":{"type":"ThisExpression","start":630,"end":634},"property":{"type":"Identifier","start":635,"end":645,"name":"_idcounter"},"computed":false,"optional":false},"property":{"type":"Identifier","start":646,"end":654,"name":"toString"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"+","right":{"type":"Literal","start":659,"end":663,"value":"\">","raw":"'\">'"}}}]}}]}}},{"type":"MethodDefinition","start":688,"end":737,"static":false,"computed":false,"key":{"type":"Identifier","start":688,"end":695,"name":"tagName"},"kind":"method","value":{"type":"FunctionExpression","start":695,"end":737,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":698,"end":737,"body":[{"type":"ReturnStatement","start":709,"end":730,"argument":{"type":"MemberExpression","start":716,"end":729,"object":{"type":"ThisExpression","start":716,"end":720},"property":{"type":"Identifier","start":721,"end":729,"name":"_tagname"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":743,"end":796,"static":false,"computed":false,"key":{"type":"Identifier","start":743,"end":752,"name":"idCounter"},"kind":"method","value":{"type":"FunctionExpression","start":752,"end":796,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":755,"end":796,"body":[{"type":"ReturnStatement","start":766,"end":789,"argument":{"type":"MemberExpression","start":773,"end":788,"object":{"type":"ThisExpression","start":773,"end":777},"property":{"type":"Identifier","start":778,"end":788,"name":"_idcounter"},"computed":false,"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC1zdGFydC10YWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9pbXBsL3BhcnNlZC1tZXNzYWdlLXBhcnQtc3RhcnQtdGFnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSxxQkFBcUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQy9FOzs7R0FHRztBQUVILE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxpQkFBaUI7SUFLNUQsWUFBWSxPQUFlLEVBQUUsU0FBaUI7UUFDMUMsS0FBSyxDQUFDLHFCQUFxQixDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO0lBQ2hDLENBQUM7SUFFTSxlQUFlLENBQUMsTUFBZTtRQUNsQyxJQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssQ0FBQyxFQUFFO1lBQ3ZCLE9BQU8sR0FBRyxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDO1NBQ3BDO2FBQU07WUFDSCxPQUFPLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxHQUFHLElBQUksQ0FBQztTQUM1RTtJQUNMLENBQUM7SUFFTSxPQUFPO1FBQ1YsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFFTSxTQUFTO1FBQ1osT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQzNCLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnQsIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0JztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDA1LjA1LjIwMTcuXHJcbiAqIEEgbWVzc2FnZSBwYXJ0IGNvbnNpc3Rpbmcgb2YgYW4gb3BlbmluZyB0YWcgbGlrZSA8Yj4gb3IgPHN0cmFuZ2U+LlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBQYXJzZWRNZXNzYWdlUGFydFN0YXJ0VGFnIGV4dGVuZHMgUGFyc2VkTWVzc2FnZVBhcnQge1xyXG5cclxuICAgIHByaXZhdGUgX3RhZ25hbWU6IHN0cmluZztcclxuICAgIHByaXZhdGUgX2lkY291bnRlcjogbnVtYmVyO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHRhZ25hbWU6IHN0cmluZywgaWRjb3VudGVyOiBudW1iZXIpIHtcclxuICAgICAgICBzdXBlcihQYXJzZWRNZXNzYWdlUGFydFR5cGUuU1RBUlRfVEFHKTtcclxuICAgICAgICB0aGlzLl90YWduYW1lID0gdGFnbmFtZTtcclxuICAgICAgICB0aGlzLl9pZGNvdW50ZXIgPSBpZGNvdW50ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzRGlzcGxheVN0cmluZyhmb3JtYXQ/OiBzdHJpbmcpIHtcclxuICAgICAgICBpZiAodGhpcy5faWRjb3VudGVyID09PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnPCcgKyB0aGlzLl90YWduYW1lICsgJz4nO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnPCcgKyB0aGlzLl90YWduYW1lICsgJyBpZD1cIicgKyB0aGlzLl9pZGNvdW50ZXIudG9TdHJpbmcoKSArICdcIj4nO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdGFnTmFtZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl90YWduYW1lO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBpZENvdW50ZXIoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faWRjb3VudGVyO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==","start":801,"end":3263}]},"code":"import { ParsedMessagePart, ParsedMessagePartType } from './parsed-message-part';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of an opening tag like <b> or <strange>.\r\n */\r\nexport class ParsedMessagePartStartTag extends ParsedMessagePart {\r\n    constructor(tagname, idcounter) {\r\n        super(ParsedMessagePartType.START_TAG);\r\n        this._tagname = tagname;\r\n        this._idcounter = idcounter;\r\n    }\r\n    asDisplayString(format) {\r\n        if (this._idcounter === 0) {\r\n            return '<' + this._tagname + '>';\r\n        }\r\n        else {\r\n            return '<' + this._tagname + ' id=\"' + this._idcounter.toString() + '\">';\r\n        }\r\n    }\r\n    tagName() {\r\n        return this._tagname;\r\n    }\r\n    idCounter() {\r\n        return this._idcounter;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC1zdGFydC10YWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9pbXBsL3BhcnNlZC1tZXNzYWdlLXBhcnQtc3RhcnQtdGFnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSxxQkFBcUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQy9FOzs7R0FHRztBQUVILE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxpQkFBaUI7SUFLNUQsWUFBWSxPQUFlLEVBQUUsU0FBaUI7UUFDMUMsS0FBSyxDQUFDLHFCQUFxQixDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO0lBQ2hDLENBQUM7SUFFTSxlQUFlLENBQUMsTUFBZTtRQUNsQyxJQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssQ0FBQyxFQUFFO1lBQ3ZCLE9BQU8sR0FBRyxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDO1NBQ3BDO2FBQU07WUFDSCxPQUFPLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxHQUFHLElBQUksQ0FBQztTQUM1RTtJQUNMLENBQUM7SUFFTSxPQUFPO1FBQ1YsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFFTSxTQUFTO1FBQ1osT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQzNCLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnQsIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0JztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDA1LjA1LjIwMTcuXHJcbiAqIEEgbWVzc2FnZSBwYXJ0IGNvbnNpc3Rpbmcgb2YgYW4gb3BlbmluZyB0YWcgbGlrZSA8Yj4gb3IgPHN0cmFuZ2U+LlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBQYXJzZWRNZXNzYWdlUGFydFN0YXJ0VGFnIGV4dGVuZHMgUGFyc2VkTWVzc2FnZVBhcnQge1xyXG5cclxuICAgIHByaXZhdGUgX3RhZ25hbWU6IHN0cmluZztcclxuICAgIHByaXZhdGUgX2lkY291bnRlcjogbnVtYmVyO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHRhZ25hbWU6IHN0cmluZywgaWRjb3VudGVyOiBudW1iZXIpIHtcclxuICAgICAgICBzdXBlcihQYXJzZWRNZXNzYWdlUGFydFR5cGUuU1RBUlRfVEFHKTtcclxuICAgICAgICB0aGlzLl90YWduYW1lID0gdGFnbmFtZTtcclxuICAgICAgICB0aGlzLl9pZGNvdW50ZXIgPSBpZGNvdW50ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzRGlzcGxheVN0cmluZyhmb3JtYXQ/OiBzdHJpbmcpIHtcclxuICAgICAgICBpZiAodGhpcy5faWRjb3VudGVyID09PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnPCcgKyB0aGlzLl90YWduYW1lICsgJz4nO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnPCcgKyB0aGlzLl90YWduYW1lICsgJyBpZD1cIicgKyB0aGlzLl9pZGNvdW50ZXIudG9TdHJpbmcoKSArICdcIj4nO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdGFnTmFtZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl90YWduYW1lO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBpZENvdW50ZXIoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faWRjb3VudGVyO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-start-tag.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { ParsedMessagePart, ParsedMessagePartType } from './parsed-message-part';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of an opening tag like <b> or <strange>.\r\n */\r\nexport class ParsedMessagePartStartTag extends ParsedMessagePart {\r\n    constructor(tagname, idcounter) {\r\n        super(ParsedMessagePartType.START_TAG);\r\n        this._tagname = tagname;\r\n        this._idcounter = idcounter;\r\n    }\r\n    asDisplayString(format) {\r\n        if (this._idcounter === 0) {\r\n            return '<' + this._tagname + '>';\r\n        }\r\n        else {\r\n            return '<' + this._tagname + ' id=\"' + this._idcounter.toString() + '\">';\r\n        }\r\n    }\r\n    tagName() {\r\n        return this._tagname;\r\n    }\r\n    idCounter() {\r\n        return this._idcounter;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC1zdGFydC10YWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9pbXBsL3BhcnNlZC1tZXNzYWdlLXBhcnQtc3RhcnQtdGFnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSxxQkFBcUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQy9FOzs7R0FHRztBQUVILE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxpQkFBaUI7SUFLNUQsWUFBWSxPQUFlLEVBQUUsU0FBaUI7UUFDMUMsS0FBSyxDQUFDLHFCQUFxQixDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO0lBQ2hDLENBQUM7SUFFTSxlQUFlLENBQUMsTUFBZTtRQUNsQyxJQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssQ0FBQyxFQUFFO1lBQ3ZCLE9BQU8sR0FBRyxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDO1NBQ3BDO2FBQU07WUFDSCxPQUFPLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxHQUFHLElBQUksQ0FBQztTQUM1RTtJQUNMLENBQUM7SUFFTSxPQUFPO1FBQ1YsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFFTSxTQUFTO1FBQ1osT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQzNCLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnQsIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0JztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDA1LjA1LjIwMTcuXHJcbiAqIEEgbWVzc2FnZSBwYXJ0IGNvbnNpc3Rpbmcgb2YgYW4gb3BlbmluZyB0YWcgbGlrZSA8Yj4gb3IgPHN0cmFuZ2U+LlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBQYXJzZWRNZXNzYWdlUGFydFN0YXJ0VGFnIGV4dGVuZHMgUGFyc2VkTWVzc2FnZVBhcnQge1xyXG5cclxuICAgIHByaXZhdGUgX3RhZ25hbWU6IHN0cmluZztcclxuICAgIHByaXZhdGUgX2lkY291bnRlcjogbnVtYmVyO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHRhZ25hbWU6IHN0cmluZywgaWRjb3VudGVyOiBudW1iZXIpIHtcclxuICAgICAgICBzdXBlcihQYXJzZWRNZXNzYWdlUGFydFR5cGUuU1RBUlRfVEFHKTtcclxuICAgICAgICB0aGlzLl90YWduYW1lID0gdGFnbmFtZTtcclxuICAgICAgICB0aGlzLl9pZGNvdW50ZXIgPSBpZGNvdW50ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzRGlzcGxheVN0cmluZyhmb3JtYXQ/OiBzdHJpbmcpIHtcclxuICAgICAgICBpZiAodGhpcy5faWRjb3VudGVyID09PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnPCcgKyB0aGlzLl90YWduYW1lICsgJz4nO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnPCcgKyB0aGlzLl90YWduYW1lICsgJyBpZD1cIicgKyB0aGlzLl9pZGNvdW50ZXIudG9TdHJpbmcoKSArICdcIj4nO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdGFnTmFtZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl90YWduYW1lO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBpZENvdW50ZXIoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faWRjb3VudGVyO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==","originalSourcemap":{"version":3,"file":"parsed-message-part-start-tag.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/parsed-message-part-start-tag.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[26,0,0,25],[28,0,0,27],[49,0,0,48],[51,0,0,49],[57,0,0,55],[80,0,0,78],[81,0,0,79]],[[0,0,1,0]],[],[],[[3,0,4,3]],[[0,0,6,0],[6,0,6,6],[13,0,6,13],[38,0,6,39],[47,0,6,47],[64,0,6,64]],[[4,0,11,4],[16,0,11,16],[23,0,11,31],[25,0,11,33],[34,0,11,50]],[[8,0,12,8],[13,0,12,13],[14,0,12,14],[35,0,12,35],[36,0,12,36],[45,0,12,45],[46,0,12,46],[47,0,12,47]],[[8,0,13,8],[12,0,13,12],[13,0,13,13],[21,0,13,21],[24,0,13,24],[31,0,13,31],[32,0,13,32]],[[8,0,14,8],[12,0,14,12],[13,0,14,13],[23,0,14,23],[26,0,14,26],[35,0,14,35],[36,0,14,36]],[[4,0,15,4],[5,0,15,5]],[[4,0,17,11],[19,0,17,26],[20,0,17,27],[26,0,17,42]],[[8,0,18,8],[12,0,18,12],[16,0,18,16],[17,0,18,17],[27,0,18,27],[32,0,18,32],[33,0,18,33],[35,0,18,35]],[[12,0,19,12],[19,0,19,19],[22,0,19,22],[25,0,19,25],[29,0,19,29],[30,0,19,30],[38,0,19,38],[41,0,19,41],[44,0,19,44],[45,0,19,45]],[[9,0,20,9]],[[13,0,20,15]],[[12,0,21,12],[19,0,21,19],[22,0,21,22],[25,0,21,25],[29,0,21,29],[30,0,21,30],[38,0,21,38],[41,0,21,41],[48,0,21,48],[51,0,21,51],[55,0,21,55],[56,0,21,56],[66,0,21,66],[67,0,21,67],[75,0,21,75],[77,0,21,77],[80,0,21,80],[84,0,21,84],[85,0,21,85]],[[9,0,22,9]],[[4,0,23,4],[5,0,23,5]],[[4,0,25,11],[11,0,25,18]],[[8,0,26,8],[15,0,26,15],[19,0,26,19],[20,0,26,20],[28,0,26,28],[29,0,26,29]],[[4,0,27,4],[5,0,27,5]],[[4,0,29,11],[13,0,29,20]],[[8,0,30,8],[15,0,30,15],[19,0,30,19],[20,0,30,20],[30,0,30,30],[31,0,30,31]],[[4,0,31,4],[5,0,31,5]],[[1,0,32,1]]],"sourcesContent":["import {ParsedMessagePart, ParsedMessagePartType} from './parsed-message-part';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of an opening tag like <b> or <strange>.\r\n */\r\n\r\nexport class ParsedMessagePartStartTag extends ParsedMessagePart {\r\n\r\n    private _tagname: string;\r\n    private _idcounter: number;\r\n\r\n    constructor(tagname: string, idcounter: number) {\r\n        super(ParsedMessagePartType.START_TAG);\r\n        this._tagname = tagname;\r\n        this._idcounter = idcounter;\r\n    }\r\n\r\n    public asDisplayString(format?: string) {\r\n        if (this._idcounter === 0) {\r\n            return '<' + this._tagname + '>';\r\n        } else {\r\n            return '<' + this._tagname + ' id=\"' + this._idcounter.toString() + '\">';\r\n        }\r\n    }\r\n\r\n    public tagName(): string {\r\n        return this._tagname;\r\n    }\r\n\r\n    public idCounter(): number {\r\n        return this._idcounter;\r\n    }\r\n}\r\n"]},"resolvedIds":{"./parsed-message-part":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2186,"body":[{"type":"ImportDeclaration","start":0,"end":81,"specifiers":[{"type":"ImportSpecifier","start":9,"end":26,"imported":{"type":"Identifier","start":9,"end":26,"name":"ParsedMessagePart"},"local":{"type":"Identifier","start":9,"end":26,"name":"ParsedMessagePart"}},{"type":"ImportSpecifier","start":28,"end":49,"imported":{"type":"Identifier","start":28,"end":49,"name":"ParsedMessagePartType"},"local":{"type":"Identifier","start":28,"end":49,"name":"ParsedMessagePartType"}}],"source":{"type":"Literal","start":57,"end":80,"value":"./parsed-message-part","raw":"'./parsed-message-part'"}},{"type":"ExportNamedDeclaration","start":202,"end":522,"declaration":{"type":"ClassDeclaration","start":209,"end":522,"id":{"type":"Identifier","start":215,"end":238,"name":"ParsedMessagePartEndTag"},"superClass":{"type":"Identifier","start":247,"end":264,"name":"ParsedMessagePart"},"body":{"type":"ClassBody","start":265,"end":522,"body":[{"type":"MethodDefinition","start":272,"end":382,"static":false,"computed":false,"key":{"type":"Identifier","start":272,"end":283,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":283,"end":382,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":284,"end":291,"name":"tagname"}],"body":{"type":"BlockStatement","start":293,"end":382,"body":[{"type":"ExpressionStatement","start":304,"end":341,"expression":{"type":"CallExpression","start":304,"end":340,"callee":{"type":"Super","start":304,"end":309},"arguments":[{"type":"MemberExpression","start":310,"end":339,"object":{"type":"Identifier","start":310,"end":331,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":332,"end":339,"name":"END_TAG"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":351,"end":375,"expression":{"type":"AssignmentExpression","start":351,"end":374,"operator":"=","left":{"type":"MemberExpression","start":351,"end":364,"object":{"type":"ThisExpression","start":351,"end":355},"property":{"type":"Identifier","start":356,"end":364,"name":"_tagname"},"computed":false,"optional":false},"right":{"type":"Identifier","start":367,"end":374,"name":"tagname"}}}]}}},{"type":"MethodDefinition","start":388,"end":464,"static":false,"computed":false,"key":{"type":"Identifier","start":388,"end":403,"name":"asDisplayString"},"kind":"method","value":{"type":"FunctionExpression","start":403,"end":464,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":404,"end":410,"name":"format"}],"body":{"type":"BlockStatement","start":412,"end":464,"body":[{"type":"ReturnStatement","start":423,"end":457,"argument":{"type":"BinaryExpression","start":430,"end":456,"left":{"type":"BinaryExpression","start":430,"end":450,"left":{"type":"Literal","start":430,"end":434,"value":"</","raw":"'</'"},"operator":"+","right":{"type":"MemberExpression","start":437,"end":450,"object":{"type":"ThisExpression","start":437,"end":441},"property":{"type":"Identifier","start":442,"end":450,"name":"_tagname"},"computed":false,"optional":false}},"operator":"+","right":{"type":"Literal","start":453,"end":456,"value":">","raw":"'>'"}}}]}}},{"type":"MethodDefinition","start":470,"end":519,"static":false,"computed":false,"key":{"type":"Identifier","start":470,"end":477,"name":"tagName"},"kind":"method","value":{"type":"FunctionExpression","start":477,"end":519,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":480,"end":519,"body":[{"type":"ReturnStatement","start":491,"end":512,"argument":{"type":"MemberExpression","start":498,"end":511,"object":{"type":"ThisExpression","start":498,"end":502},"property":{"type":"Identifier","start":503,"end":511,"name":"_tagname"},"computed":false,"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC1lbmQtdGFnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWkxOG5zdXBwb3J0LWxpYi9zcmMvaW1wbC9wYXJzZWQtbWVzc2FnZS1wYXJ0LWVuZC10YWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLGlCQUFpQixFQUFFLHFCQUFxQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDL0U7OztHQUdHO0FBRUgsTUFBTSxPQUFPLHVCQUF3QixTQUFRLGlCQUFpQjtJQUkxRCxZQUFZLE9BQWU7UUFDdkIsS0FBSyxDQUFDLHFCQUFxQixDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO0lBQzVCLENBQUM7SUFFTSxlQUFlLENBQUMsTUFBZTtRQUNsQyxPQUFPLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQztJQUN0QyxDQUFDO0lBRU0sT0FBTztRQUNWLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN6QixDQUFDO0NBRUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0LCBQYXJzZWRNZXNzYWdlUGFydFR5cGV9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydCc7XHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAwNS4wNS4yMDE3LlxyXG4gKiBBIG1lc3NhZ2UgcGFydCBjb25zaXN0aW5nIG9mIGEgY2xvc2luZyB0YWcgbGlrZSA8L2I+IG9yIDwvc3RyYW5nZT4uXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFBhcnNlZE1lc3NhZ2VQYXJ0RW5kVGFnIGV4dGVuZHMgUGFyc2VkTWVzc2FnZVBhcnQge1xyXG5cclxuICAgIHByaXZhdGUgX3RhZ25hbWU6IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcih0YWduYW1lOiBzdHJpbmcpIHtcclxuICAgICAgICBzdXBlcihQYXJzZWRNZXNzYWdlUGFydFR5cGUuRU5EX1RBRyk7XHJcbiAgICAgICAgdGhpcy5fdGFnbmFtZSA9IHRhZ25hbWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzRGlzcGxheVN0cmluZyhmb3JtYXQ/OiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gJzwvJyArIHRoaXMuX3RhZ25hbWUgKyAnPic7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHRhZ05hbWUoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdGFnbmFtZTtcclxuICAgIH1cclxuXHJcbn1cclxuIl19","start":524,"end":2186}]},"code":"import { ParsedMessagePart, ParsedMessagePartType } from './parsed-message-part';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a closing tag like </b> or </strange>.\r\n */\r\nexport class ParsedMessagePartEndTag extends ParsedMessagePart {\r\n    constructor(tagname) {\r\n        super(ParsedMessagePartType.END_TAG);\r\n        this._tagname = tagname;\r\n    }\r\n    asDisplayString(format) {\r\n        return '</' + this._tagname + '>';\r\n    }\r\n    tagName() {\r\n        return this._tagname;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC1lbmQtdGFnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWkxOG5zdXBwb3J0LWxpYi9zcmMvaW1wbC9wYXJzZWQtbWVzc2FnZS1wYXJ0LWVuZC10YWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLGlCQUFpQixFQUFFLHFCQUFxQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDL0U7OztHQUdHO0FBRUgsTUFBTSxPQUFPLHVCQUF3QixTQUFRLGlCQUFpQjtJQUkxRCxZQUFZLE9BQWU7UUFDdkIsS0FBSyxDQUFDLHFCQUFxQixDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO0lBQzVCLENBQUM7SUFFTSxlQUFlLENBQUMsTUFBZTtRQUNsQyxPQUFPLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQztJQUN0QyxDQUFDO0lBRU0sT0FBTztRQUNWLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN6QixDQUFDO0NBRUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0LCBQYXJzZWRNZXNzYWdlUGFydFR5cGV9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydCc7XHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAwNS4wNS4yMDE3LlxyXG4gKiBBIG1lc3NhZ2UgcGFydCBjb25zaXN0aW5nIG9mIGEgY2xvc2luZyB0YWcgbGlrZSA8L2I+IG9yIDwvc3RyYW5nZT4uXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFBhcnNlZE1lc3NhZ2VQYXJ0RW5kVGFnIGV4dGVuZHMgUGFyc2VkTWVzc2FnZVBhcnQge1xyXG5cclxuICAgIHByaXZhdGUgX3RhZ25hbWU6IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcih0YWduYW1lOiBzdHJpbmcpIHtcclxuICAgICAgICBzdXBlcihQYXJzZWRNZXNzYWdlUGFydFR5cGUuRU5EX1RBRyk7XHJcbiAgICAgICAgdGhpcy5fdGFnbmFtZSA9IHRhZ25hbWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzRGlzcGxheVN0cmluZyhmb3JtYXQ/OiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gJzwvJyArIHRoaXMuX3RhZ25hbWUgKyAnPic7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHRhZ05hbWUoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdGFnbmFtZTtcclxuICAgIH1cclxuXHJcbn1cclxuIl19","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-end-tag.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { ParsedMessagePart, ParsedMessagePartType } from './parsed-message-part';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a closing tag like </b> or </strange>.\r\n */\r\nexport class ParsedMessagePartEndTag extends ParsedMessagePart {\r\n    constructor(tagname) {\r\n        super(ParsedMessagePartType.END_TAG);\r\n        this._tagname = tagname;\r\n    }\r\n    asDisplayString(format) {\r\n        return '</' + this._tagname + '>';\r\n    }\r\n    tagName() {\r\n        return this._tagname;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC1lbmQtdGFnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWkxOG5zdXBwb3J0LWxpYi9zcmMvaW1wbC9wYXJzZWQtbWVzc2FnZS1wYXJ0LWVuZC10YWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLGlCQUFpQixFQUFFLHFCQUFxQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDL0U7OztHQUdHO0FBRUgsTUFBTSxPQUFPLHVCQUF3QixTQUFRLGlCQUFpQjtJQUkxRCxZQUFZLE9BQWU7UUFDdkIsS0FBSyxDQUFDLHFCQUFxQixDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO0lBQzVCLENBQUM7SUFFTSxlQUFlLENBQUMsTUFBZTtRQUNsQyxPQUFPLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQztJQUN0QyxDQUFDO0lBRU0sT0FBTztRQUNWLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN6QixDQUFDO0NBRUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0LCBQYXJzZWRNZXNzYWdlUGFydFR5cGV9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydCc7XHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAwNS4wNS4yMDE3LlxyXG4gKiBBIG1lc3NhZ2UgcGFydCBjb25zaXN0aW5nIG9mIGEgY2xvc2luZyB0YWcgbGlrZSA8L2I+IG9yIDwvc3RyYW5nZT4uXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFBhcnNlZE1lc3NhZ2VQYXJ0RW5kVGFnIGV4dGVuZHMgUGFyc2VkTWVzc2FnZVBhcnQge1xyXG5cclxuICAgIHByaXZhdGUgX3RhZ25hbWU6IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcih0YWduYW1lOiBzdHJpbmcpIHtcclxuICAgICAgICBzdXBlcihQYXJzZWRNZXNzYWdlUGFydFR5cGUuRU5EX1RBRyk7XHJcbiAgICAgICAgdGhpcy5fdGFnbmFtZSA9IHRhZ25hbWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzRGlzcGxheVN0cmluZyhmb3JtYXQ/OiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gJzwvJyArIHRoaXMuX3RhZ25hbWUgKyAnPic7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHRhZ05hbWUoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdGFnbmFtZTtcclxuICAgIH1cclxuXHJcbn1cclxuIl19","originalSourcemap":{"version":3,"file":"parsed-message-part-end-tag.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/parsed-message-part-end-tag.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[26,0,0,25],[28,0,0,27],[49,0,0,48],[51,0,0,49],[57,0,0,55],[80,0,0,78],[81,0,0,79]],[[0,0,1,0]],[],[],[[3,0,4,3]],[[0,0,6,0],[6,0,6,6],[13,0,6,13],[36,0,6,37],[45,0,6,45],[62,0,6,62]],[[4,0,10,4],[16,0,10,16],[23,0,10,31]],[[8,0,11,8],[13,0,11,13],[14,0,11,14],[35,0,11,35],[36,0,11,36],[43,0,11,43],[44,0,11,44],[45,0,11,45]],[[8,0,12,8],[12,0,12,12],[13,0,12,13],[21,0,12,21],[24,0,12,24],[31,0,12,31],[32,0,12,32]],[[4,0,13,4],[5,0,13,5]],[[4,0,15,11],[19,0,15,26],[20,0,15,27],[26,0,15,42]],[[8,0,16,8],[15,0,16,15],[19,0,16,19],[22,0,16,22],[26,0,16,26],[27,0,16,27],[35,0,16,35],[38,0,16,38],[41,0,16,41],[42,0,16,42]],[[4,0,17,4],[5,0,17,5]],[[4,0,19,11],[11,0,19,18]],[[8,0,20,8],[15,0,20,15],[19,0,20,19],[20,0,20,20],[28,0,20,28],[29,0,20,29]],[[4,0,21,4],[5,0,21,5]],[[1,0,23,1]]],"sourcesContent":["import {ParsedMessagePart, ParsedMessagePartType} from './parsed-message-part';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a closing tag like </b> or </strange>.\r\n */\r\n\r\nexport class ParsedMessagePartEndTag extends ParsedMessagePart {\r\n\r\n    private _tagname: string;\r\n\r\n    constructor(tagname: string) {\r\n        super(ParsedMessagePartType.END_TAG);\r\n        this._tagname = tagname;\r\n    }\r\n\r\n    public asDisplayString(format?: string) {\r\n        return '</' + this._tagname + '>';\r\n    }\r\n\r\n    public tagName(): string {\r\n        return this._tagname;\r\n    }\r\n\r\n}\r\n"]},"resolvedIds":{"./parsed-message-part":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":17028,"body":[{"type":"ImportDeclaration","start":0,"end":32,"specifiers":[{"type":"ImportDefaultSpecifier","start":7,"end":15,"local":{"type":"Identifier","start":7,"end":15,"name":"Tokenizr"}}],"source":{"type":"Literal","start":21,"end":31,"value":"tokenizr","raw":"'tokenizr'"}},{"type":"ExportNamedDeclaration","start":126,"end":153,"declaration":{"type":"VariableDeclaration","start":133,"end":153,"declarations":[{"type":"VariableDeclarator","start":139,"end":152,"id":{"type":"Identifier","start":139,"end":143,"name":"TEXT"},"init":{"type":"Literal","start":146,"end":152,"value":"TEXT","raw":"'TEXT'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":155,"end":206,"declaration":{"type":"VariableDeclaration","start":162,"end":206,"declarations":[{"type":"VariableDeclarator","start":168,"end":205,"id":{"type":"Identifier","start":168,"end":184,"name":"CURLY_BRACE_OPEN"},"init":{"type":"Literal","start":187,"end":205,"value":"CURLY_BRACE_OPEN","raw":"'CURLY_BRACE_OPEN'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":208,"end":261,"declaration":{"type":"VariableDeclaration","start":215,"end":261,"declarations":[{"type":"VariableDeclarator","start":221,"end":260,"id":{"type":"Identifier","start":221,"end":238,"name":"CURLY_BRACE_CLOSE"},"init":{"type":"Literal","start":241,"end":260,"value":"CURLY_BRACE_CLOSE","raw":"'CURLY_BRACE_CLOSE'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":263,"end":292,"declaration":{"type":"VariableDeclaration","start":270,"end":292,"declarations":[{"type":"VariableDeclarator","start":276,"end":291,"id":{"type":"Identifier","start":276,"end":281,"name":"COMMA"},"init":{"type":"Literal","start":284,"end":291,"value":"COMMA","raw":"'COMMA'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":294,"end":325,"declaration":{"type":"VariableDeclaration","start":301,"end":325,"declarations":[{"type":"VariableDeclarator","start":307,"end":324,"id":{"type":"Identifier","start":307,"end":313,"name":"PLURAL"},"init":{"type":"Literal","start":316,"end":324,"value":"PLURAL","raw":"'PLURAL'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":327,"end":358,"declaration":{"type":"VariableDeclaration","start":334,"end":358,"declarations":[{"type":"VariableDeclarator","start":340,"end":357,"id":{"type":"Identifier","start":340,"end":346,"name":"SELECT"},"init":{"type":"Literal","start":349,"end":357,"value":"SELECT","raw":"'SELECT'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"VariableDeclaration","start":398,"end":430,"declarations":[{"type":"VariableDeclarator","start":404,"end":429,"id":{"type":"Identifier","start":404,"end":417,"name":"STATE_DEFAULT"},"init":{"type":"Literal","start":420,"end":429,"value":"default","raw":"'default'"}}],"kind":"const"},{"type":"VariableDeclaration","start":432,"end":462,"declarations":[{"type":"VariableDeclarator","start":438,"end":461,"id":{"type":"Identifier","start":438,"end":450,"name":"STATE_NORMAL"},"init":{"type":"Literal","start":453,"end":461,"value":"normal","raw":"'normal'"}}],"kind":"const"},{"type":"VariableDeclaration","start":464,"end":502,"declarations":[{"type":"VariableDeclarator","start":470,"end":501,"id":{"type":"Identifier","start":470,"end":486,"name":"STATE_IN_MESSAGE"},"init":{"type":"Literal","start":489,"end":501,"value":"in_message","raw":"'in_message'"}}],"kind":"const"},{"type":"ExportNamedDeclaration","start":504,"end":4396,"declaration":{"type":"ClassDeclaration","start":511,"end":4396,"id":{"type":"Identifier","start":517,"end":536,"name":"ICUMessageTokenizer"},"superClass":null,"body":{"type":"ClassBody","start":537,"end":4396,"body":[{"type":"MethodDefinition","start":544,"end":3784,"static":false,"computed":false,"key":{"type":"Identifier","start":544,"end":552,"name":"getLexer"},"kind":"method","value":{"type":"FunctionExpression","start":552,"end":3784,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":555,"end":3784,"body":[{"type":"VariableDeclaration","start":566,"end":595,"declarations":[{"type":"VariableDeclarator","start":572,"end":594,"id":{"type":"Identifier","start":572,"end":577,"name":"lexer"},"init":{"type":"NewExpression","start":580,"end":594,"callee":{"type":"Identifier","start":584,"end":592,"name":"Tokenizr"},"arguments":[]}}],"kind":"const"},{"type":"VariableDeclaration","start":605,"end":624,"declarations":[{"type":"VariableDeclarator","start":609,"end":623,"id":{"type":"Identifier","start":609,"end":618,"name":"plaintext"},"init":{"type":"Literal","start":621,"end":623,"value":"","raw":"''"}}],"kind":"let"},{"type":"VariableDeclaration","start":634,"end":673,"declarations":[{"type":"VariableDeclarator","start":638,"end":672,"id":{"type":"Identifier","start":638,"end":668,"name":"openedCurlyBracesInTextCounter"},"init":{"type":"Literal","start":671,"end":672,"value":0,"raw":"0"}}],"kind":"let"},{"type":"ExpressionStatement","start":683,"end":1032,"expression":{"type":"CallExpression","start":683,"end":1031,"callee":{"type":"MemberExpression","start":683,"end":695,"object":{"type":"Identifier","start":683,"end":688,"name":"lexer"},"property":{"type":"Identifier","start":689,"end":695,"name":"before"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":696,"end":1030,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":697,"end":700,"name":"ctx"},{"type":"Identifier","start":702,"end":707,"name":"match"},{"type":"Identifier","start":709,"end":713,"name":"rule"}],"body":{"type":"BlockStatement","start":718,"end":1030,"body":[{"type":"IfStatement","start":733,"end":1019,"test":{"type":"BinaryExpression","start":737,"end":755,"left":{"type":"MemberExpression","start":737,"end":746,"object":{"type":"Identifier","start":737,"end":741,"name":"rule"},"property":{"type":"Identifier","start":742,"end":746,"name":"name"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":751,"end":755,"name":"TEXT"}},"consequent":{"type":"BlockStatement","start":757,"end":1019,"body":[{"type":"IfStatement","start":776,"end":1004,"test":{"type":"CallExpression","start":780,"end":817,"callee":{"type":"MemberExpression","start":780,"end":806,"object":{"type":"ThisExpression","start":780,"end":784},"property":{"type":"Identifier","start":785,"end":806,"name":"containsNonWhiteSpace"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":807,"end":816,"name":"plaintext"}],"optional":false},"consequent":{"type":"BlockStatement","start":819,"end":926,"body":[{"type":"ExpressionStatement","start":842,"end":870,"expression":{"type":"CallExpression","start":842,"end":869,"callee":{"type":"MemberExpression","start":842,"end":852,"object":{"type":"Identifier","start":842,"end":845,"name":"ctx"},"property":{"type":"Identifier","start":846,"end":852,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":853,"end":857,"name":"TEXT"},{"type":"Identifier","start":859,"end":868,"name":"plaintext"}],"optional":false}},{"type":"ExpressionStatement","start":892,"end":907,"expression":{"type":"AssignmentExpression","start":892,"end":906,"operator":"=","left":{"type":"Identifier","start":892,"end":901,"name":"plaintext"},"right":{"type":"Literal","start":904,"end":906,"value":"","raw":"''"}}}]},"alternate":{"type":"BlockStatement","start":949,"end":1004,"body":[{"type":"ExpressionStatement","start":972,"end":985,"expression":{"type":"CallExpression","start":972,"end":984,"callee":{"type":"MemberExpression","start":972,"end":982,"object":{"type":"Identifier","start":972,"end":975,"name":"ctx"},"property":{"type":"Identifier","start":976,"end":982,"name":"ignore"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}]},"alternate":null}]}}],"optional":false}},{"type":"ExpressionStatement","start":1042,"end":1197,"expression":{"type":"CallExpression","start":1042,"end":1196,"callee":{"type":"MemberExpression","start":1042,"end":1054,"object":{"type":"Identifier","start":1042,"end":1047,"name":"lexer"},"property":{"type":"Identifier","start":1048,"end":1054,"name":"finish"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":1055,"end":1195,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1056,"end":1059,"name":"ctx"}],"body":{"type":"BlockStatement","start":1064,"end":1195,"body":[{"type":"IfStatement","start":1079,"end":1184,"test":{"type":"CallExpression","start":1083,"end":1120,"callee":{"type":"MemberExpression","start":1083,"end":1109,"object":{"type":"ThisExpression","start":1083,"end":1087},"property":{"type":"Identifier","start":1088,"end":1109,"name":"containsNonWhiteSpace"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1110,"end":1119,"name":"plaintext"}],"optional":false},"consequent":{"type":"BlockStatement","start":1122,"end":1184,"body":[{"type":"ExpressionStatement","start":1141,"end":1169,"expression":{"type":"CallExpression","start":1141,"end":1168,"callee":{"type":"MemberExpression","start":1141,"end":1151,"object":{"type":"Identifier","start":1141,"end":1144,"name":"ctx"},"property":{"type":"Identifier","start":1145,"end":1151,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1152,"end":1156,"name":"TEXT"},{"type":"Identifier","start":1158,"end":1167,"name":"plaintext"}],"optional":false}}]},"alternate":null}]}}],"optional":false}},{"type":"ExpressionStatement","start":1231,"end":1400,"expression":{"type":"CallExpression","start":1231,"end":1399,"callee":{"type":"MemberExpression","start":1231,"end":1241,"object":{"type":"Identifier","start":1231,"end":1236,"name":"lexer"},"property":{"type":"Identifier","start":1237,"end":1241,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1242,"end":1255,"name":"STATE_DEFAULT"},{"type":"Literal","start":1257,"end":1260,"value":{},"raw":"/{/","regex":{"pattern":"{","flags":""}},{"type":"ArrowFunctionExpression","start":1262,"end":1380,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1263,"end":1266,"name":"ctx"},{"type":"Identifier","start":1268,"end":1273,"name":"match"}],"body":{"type":"BlockStatement","start":1278,"end":1380,"body":[{"type":"ExpressionStatement","start":1293,"end":1332,"expression":{"type":"CallExpression","start":1293,"end":1331,"callee":{"type":"MemberExpression","start":1293,"end":1303,"object":{"type":"Identifier","start":1293,"end":1296,"name":"ctx"},"property":{"type":"Identifier","start":1297,"end":1303,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1304,"end":1320,"name":"CURLY_BRACE_OPEN"},{"type":"MemberExpression","start":1322,"end":1330,"object":{"type":"Identifier","start":1322,"end":1327,"name":"match"},"property":{"type":"Literal","start":1328,"end":1329,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":1346,"end":1369,"expression":{"type":"CallExpression","start":1346,"end":1368,"callee":{"type":"MemberExpression","start":1346,"end":1354,"object":{"type":"Identifier","start":1346,"end":1349,"name":"ctx"},"property":{"type":"Identifier","start":1350,"end":1354,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1355,"end":1367,"name":"STATE_NORMAL"}],"optional":false}}]}},{"type":"Identifier","start":1382,"end":1398,"name":"CURLY_BRACE_OPEN"}],"optional":false}},{"type":"ExpressionStatement","start":1410,"end":1582,"expression":{"type":"CallExpression","start":1410,"end":1581,"callee":{"type":"MemberExpression","start":1410,"end":1420,"object":{"type":"Identifier","start":1410,"end":1415,"name":"lexer"},"property":{"type":"Identifier","start":1416,"end":1420,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1421,"end":1433,"name":"STATE_NORMAL"},{"type":"Literal","start":1435,"end":1438,"value":{},"raw":"/{/","regex":{"pattern":"{","flags":""}},{"type":"ArrowFunctionExpression","start":1440,"end":1562,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1441,"end":1444,"name":"ctx"},{"type":"Identifier","start":1446,"end":1451,"name":"match"}],"body":{"type":"BlockStatement","start":1456,"end":1562,"body":[{"type":"ExpressionStatement","start":1471,"end":1510,"expression":{"type":"CallExpression","start":1471,"end":1509,"callee":{"type":"MemberExpression","start":1471,"end":1481,"object":{"type":"Identifier","start":1471,"end":1474,"name":"ctx"},"property":{"type":"Identifier","start":1475,"end":1481,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1482,"end":1498,"name":"CURLY_BRACE_OPEN"},{"type":"MemberExpression","start":1500,"end":1508,"object":{"type":"Identifier","start":1500,"end":1505,"name":"match"},"property":{"type":"Literal","start":1506,"end":1507,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":1524,"end":1551,"expression":{"type":"CallExpression","start":1524,"end":1550,"callee":{"type":"MemberExpression","start":1524,"end":1532,"object":{"type":"Identifier","start":1524,"end":1527,"name":"ctx"},"property":{"type":"Identifier","start":1528,"end":1532,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1533,"end":1549,"name":"STATE_IN_MESSAGE"}],"optional":false}}]}},{"type":"Identifier","start":1564,"end":1580,"name":"CURLY_BRACE_OPEN"}],"optional":false}},{"type":"ExpressionStatement","start":1592,"end":1749,"expression":{"type":"CallExpression","start":1592,"end":1748,"callee":{"type":"MemberExpression","start":1592,"end":1602,"object":{"type":"Identifier","start":1592,"end":1597,"name":"lexer"},"property":{"type":"Identifier","start":1598,"end":1602,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1603,"end":1615,"name":"STATE_NORMAL"},{"type":"Literal","start":1617,"end":1620,"value":{},"raw":"/}/","regex":{"pattern":"}","flags":""}},{"type":"ArrowFunctionExpression","start":1622,"end":1728,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1623,"end":1626,"name":"ctx"},{"type":"Identifier","start":1628,"end":1633,"name":"match"}],"body":{"type":"BlockStatement","start":1638,"end":1728,"body":[{"type":"ExpressionStatement","start":1653,"end":1663,"expression":{"type":"CallExpression","start":1653,"end":1662,"callee":{"type":"MemberExpression","start":1653,"end":1660,"object":{"type":"Identifier","start":1653,"end":1656,"name":"ctx"},"property":{"type":"Identifier","start":1657,"end":1660,"name":"pop"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ExpressionStatement","start":1677,"end":1717,"expression":{"type":"CallExpression","start":1677,"end":1716,"callee":{"type":"MemberExpression","start":1677,"end":1687,"object":{"type":"Identifier","start":1677,"end":1680,"name":"ctx"},"property":{"type":"Identifier","start":1681,"end":1687,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1688,"end":1705,"name":"CURLY_BRACE_CLOSE"},{"type":"MemberExpression","start":1707,"end":1715,"object":{"type":"Identifier","start":1707,"end":1712,"name":"match"},"property":{"type":"Literal","start":1713,"end":1714,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]}},{"type":"Identifier","start":1730,"end":1747,"name":"CURLY_BRACE_CLOSE"}],"optional":false}},{"type":"ExpressionStatement","start":1788,"end":2174,"expression":{"type":"CallExpression","start":1788,"end":2173,"callee":{"type":"MemberExpression","start":1788,"end":1798,"object":{"type":"Identifier","start":1788,"end":1793,"name":"lexer"},"property":{"type":"Identifier","start":1794,"end":1798,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1799,"end":1815,"name":"STATE_IN_MESSAGE"},{"type":"Literal","start":1817,"end":1826,"value":{},"raw":"/'[{}]?'/","regex":{"pattern":"'[{}]?'","flags":""}},{"type":"ArrowFunctionExpression","start":1828,"end":2166,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1829,"end":1832,"name":"ctx"},{"type":"Identifier","start":1834,"end":1839,"name":"match"}],"body":{"type":"BlockStatement","start":1844,"end":2166,"body":[{"type":"IfStatement","start":1859,"end":2128,"test":{"type":"BinaryExpression","start":1863,"end":1882,"left":{"type":"MemberExpression","start":1863,"end":1871,"object":{"type":"Identifier","start":1863,"end":1868,"name":"match"},"property":{"type":"Literal","start":1869,"end":1870,"value":0,"raw":"0"},"computed":true,"optional":false},"operator":"===","right":{"type":"Literal","start":1876,"end":1882,"value":"''","raw":"'\\'\\''"}},"consequent":{"type":"BlockStatement","start":1884,"end":1936,"body":[{"type":"ExpressionStatement","start":1903,"end":1921,"expression":{"type":"AssignmentExpression","start":1903,"end":1920,"operator":"+=","left":{"type":"Identifier","start":1903,"end":1912,"name":"plaintext"},"right":{"type":"Literal","start":1916,"end":1920,"value":"'","raw":"'\\''"}}}]},"alternate":{"type":"IfStatement","start":1955,"end":2128,"test":{"type":"BinaryExpression","start":1959,"end":1979,"left":{"type":"MemberExpression","start":1959,"end":1967,"object":{"type":"Identifier","start":1959,"end":1964,"name":"match"},"property":{"type":"Literal","start":1965,"end":1966,"value":0,"raw":"0"},"computed":true,"optional":false},"operator":"===","right":{"type":"Literal","start":1972,"end":1979,"value":"'{'","raw":"'\\'{\\''"}},"consequent":{"type":"BlockStatement","start":1981,"end":2032,"body":[{"type":"ExpressionStatement","start":2000,"end":2017,"expression":{"type":"AssignmentExpression","start":2000,"end":2016,"operator":"+=","left":{"type":"Identifier","start":2000,"end":2009,"name":"plaintext"},"right":{"type":"Literal","start":2013,"end":2016,"value":"{","raw":"'{'"}}}]},"alternate":{"type":"IfStatement","start":2051,"end":2128,"test":{"type":"BinaryExpression","start":2055,"end":2075,"left":{"type":"MemberExpression","start":2055,"end":2063,"object":{"type":"Identifier","start":2055,"end":2060,"name":"match"},"property":{"type":"Literal","start":2061,"end":2062,"value":0,"raw":"0"},"computed":true,"optional":false},"operator":"===","right":{"type":"Literal","start":2068,"end":2075,"value":"'}'","raw":"'\\'}\\''"}},"consequent":{"type":"BlockStatement","start":2077,"end":2128,"body":[{"type":"ExpressionStatement","start":2096,"end":2113,"expression":{"type":"AssignmentExpression","start":2096,"end":2112,"operator":"+=","left":{"type":"Identifier","start":2096,"end":2105,"name":"plaintext"},"right":{"type":"Literal","start":2109,"end":2112,"value":"}","raw":"'}'"}}}]},"alternate":null}}},{"type":"ExpressionStatement","start":2142,"end":2155,"expression":{"type":"CallExpression","start":2142,"end":2154,"callee":{"type":"MemberExpression","start":2142,"end":2152,"object":{"type":"Identifier","start":2142,"end":2145,"name":"ctx"},"property":{"type":"Identifier","start":2146,"end":2152,"name":"ignore"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}},{"type":"Identifier","start":2168,"end":2172,"name":"TEXT"}],"optional":false}},{"type":"ExpressionStatement","start":2184,"end":3055,"expression":{"type":"CallExpression","start":2184,"end":3054,"callee":{"type":"MemberExpression","start":2184,"end":2194,"object":{"type":"Identifier","start":2184,"end":2189,"name":"lexer"},"property":{"type":"Identifier","start":2190,"end":2194,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2195,"end":2211,"name":"STATE_IN_MESSAGE"},{"type":"Literal","start":2213,"end":2216,"value":{},"raw":"/./","regex":{"pattern":".","flags":""}},{"type":"ArrowFunctionExpression","start":2218,"end":3047,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2219,"end":2222,"name":"ctx"},{"type":"Identifier","start":2224,"end":2229,"name":"match"}],"body":{"type":"BlockStatement","start":2234,"end":3047,"body":[{"type":"VariableDeclaration","start":2249,"end":2271,"declarations":[{"type":"VariableDeclarator","start":2255,"end":2270,"id":{"type":"Identifier","start":2255,"end":2259,"name":"char"},"init":{"type":"MemberExpression","start":2262,"end":2270,"object":{"type":"Identifier","start":2262,"end":2267,"name":"match"},"property":{"type":"Literal","start":2268,"end":2269,"value":0,"raw":"0"},"computed":true,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":2285,"end":3036,"test":{"type":"BinaryExpression","start":2289,"end":2301,"left":{"type":"Identifier","start":2289,"end":2293,"name":"char"},"operator":"===","right":{"type":"Literal","start":2298,"end":2301,"value":"{","raw":"'{'"}},"consequent":{"type":"BlockStatement","start":2303,"end":2441,"body":[{"type":"ExpressionStatement","start":2322,"end":2355,"expression":{"type":"UpdateExpression","start":2322,"end":2354,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":2322,"end":2352,"name":"openedCurlyBracesInTextCounter"}}},{"type":"ExpressionStatement","start":2373,"end":2395,"expression":{"type":"AssignmentExpression","start":2373,"end":2394,"operator":"+=","left":{"type":"Identifier","start":2373,"end":2382,"name":"plaintext"},"right":{"type":"MemberExpression","start":2386,"end":2394,"object":{"type":"Identifier","start":2386,"end":2391,"name":"match"},"property":{"type":"Literal","start":2392,"end":2393,"value":0,"raw":"0"},"computed":true,"optional":false}}},{"type":"ExpressionStatement","start":2413,"end":2426,"expression":{"type":"CallExpression","start":2413,"end":2425,"callee":{"type":"MemberExpression","start":2413,"end":2423,"object":{"type":"Identifier","start":2413,"end":2416,"name":"ctx"},"property":{"type":"Identifier","start":2417,"end":2423,"name":"ignore"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":{"type":"IfStatement","start":2460,"end":3036,"test":{"type":"BinaryExpression","start":2464,"end":2476,"left":{"type":"Identifier","start":2464,"end":2468,"name":"char"},"operator":"===","right":{"type":"Literal","start":2473,"end":2476,"value":"}","raw":"'}'"}},"consequent":{"type":"BlockStatement","start":2478,"end":2930,"body":[{"type":"IfStatement","start":2497,"end":2915,"test":{"type":"BinaryExpression","start":2501,"end":2535,"left":{"type":"Identifier","start":2501,"end":2531,"name":"openedCurlyBracesInTextCounter"},"operator":">","right":{"type":"Literal","start":2534,"end":2535,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":2537,"end":2691,"body":[{"type":"ExpressionStatement","start":2560,"end":2593,"expression":{"type":"UpdateExpression","start":2560,"end":2592,"operator":"--","prefix":false,"argument":{"type":"Identifier","start":2560,"end":2590,"name":"openedCurlyBracesInTextCounter"}}},{"type":"ExpressionStatement","start":2615,"end":2637,"expression":{"type":"AssignmentExpression","start":2615,"end":2636,"operator":"+=","left":{"type":"Identifier","start":2615,"end":2624,"name":"plaintext"},"right":{"type":"MemberExpression","start":2628,"end":2636,"object":{"type":"Identifier","start":2628,"end":2633,"name":"match"},"property":{"type":"Literal","start":2634,"end":2635,"value":0,"raw":"0"},"computed":true,"optional":false}}},{"type":"ExpressionStatement","start":2659,"end":2672,"expression":{"type":"CallExpression","start":2659,"end":2671,"callee":{"type":"MemberExpression","start":2659,"end":2669,"object":{"type":"Identifier","start":2659,"end":2662,"name":"ctx"},"property":{"type":"Identifier","start":2663,"end":2669,"name":"ignore"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":{"type":"BlockStatement","start":2714,"end":2915,"body":[{"type":"ExpressionStatement","start":2737,"end":2747,"expression":{"type":"CallExpression","start":2737,"end":2746,"callee":{"type":"MemberExpression","start":2737,"end":2744,"object":{"type":"Identifier","start":2737,"end":2740,"name":"ctx"},"property":{"type":"Identifier","start":2741,"end":2744,"name":"pop"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ExpressionStatement","start":2769,"end":2797,"expression":{"type":"CallExpression","start":2769,"end":2796,"callee":{"type":"MemberExpression","start":2769,"end":2779,"object":{"type":"Identifier","start":2769,"end":2772,"name":"ctx"},"property":{"type":"Identifier","start":2773,"end":2779,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2780,"end":2784,"name":"TEXT"},{"type":"Identifier","start":2786,"end":2795,"name":"plaintext"}],"optional":false}},{"type":"ExpressionStatement","start":2819,"end":2834,"expression":{"type":"AssignmentExpression","start":2819,"end":2833,"operator":"=","left":{"type":"Identifier","start":2819,"end":2828,"name":"plaintext"},"right":{"type":"Literal","start":2831,"end":2833,"value":"","raw":"''"}}},{"type":"ExpressionStatement","start":2856,"end":2896,"expression":{"type":"CallExpression","start":2856,"end":2895,"callee":{"type":"MemberExpression","start":2856,"end":2866,"object":{"type":"Identifier","start":2856,"end":2859,"name":"ctx"},"property":{"type":"Identifier","start":2860,"end":2866,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2867,"end":2884,"name":"CURLY_BRACE_CLOSE"},{"type":"MemberExpression","start":2886,"end":2894,"object":{"type":"Identifier","start":2886,"end":2891,"name":"match"},"property":{"type":"Literal","start":2892,"end":2893,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]}}]},"alternate":{"type":"BlockStatement","start":2949,"end":3036,"body":[{"type":"ExpressionStatement","start":2968,"end":2990,"expression":{"type":"AssignmentExpression","start":2968,"end":2989,"operator":"+=","left":{"type":"Identifier","start":2968,"end":2977,"name":"plaintext"},"right":{"type":"MemberExpression","start":2981,"end":2989,"object":{"type":"Identifier","start":2981,"end":2986,"name":"match"},"property":{"type":"Literal","start":2987,"end":2988,"value":0,"raw":"0"},"computed":true,"optional":false}}},{"type":"ExpressionStatement","start":3008,"end":3021,"expression":{"type":"CallExpression","start":3008,"end":3020,"callee":{"type":"MemberExpression","start":3008,"end":3018,"object":{"type":"Identifier","start":3008,"end":3011,"name":"ctx"},"property":{"type":"Identifier","start":3012,"end":3018,"name":"ignore"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}}]}},{"type":"Identifier","start":3049,"end":3053,"name":"TEXT"}],"optional":false}},{"type":"ExpressionStatement","start":3083,"end":3192,"expression":{"type":"CallExpression","start":3083,"end":3191,"callee":{"type":"MemberExpression","start":3083,"end":3093,"object":{"type":"Identifier","start":3083,"end":3088,"name":"lexer"},"property":{"type":"Identifier","start":3089,"end":3093,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3094,"end":3106,"name":"STATE_NORMAL"},{"type":"Literal","start":3108,"end":3111,"value":{},"raw":"/,/","regex":{"pattern":",","flags":""}},{"type":"ArrowFunctionExpression","start":3113,"end":3183,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3114,"end":3117,"name":"ctx"},{"type":"Identifier","start":3119,"end":3124,"name":"match"}],"body":{"type":"BlockStatement","start":3129,"end":3183,"body":[{"type":"ExpressionStatement","start":3144,"end":3172,"expression":{"type":"CallExpression","start":3144,"end":3171,"callee":{"type":"MemberExpression","start":3144,"end":3154,"object":{"type":"Identifier","start":3144,"end":3147,"name":"ctx"},"property":{"type":"Identifier","start":3148,"end":3154,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3155,"end":3160,"name":"COMMA"},{"type":"MemberExpression","start":3162,"end":3170,"object":{"type":"Identifier","start":3162,"end":3167,"name":"match"},"property":{"type":"Literal","start":3168,"end":3169,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]}},{"type":"Identifier","start":3185,"end":3190,"name":"COMMA"}],"optional":false}},{"type":"ExpressionStatement","start":3241,"end":3357,"expression":{"type":"CallExpression","start":3241,"end":3356,"callee":{"type":"MemberExpression","start":3241,"end":3251,"object":{"type":"Identifier","start":3241,"end":3246,"name":"lexer"},"property":{"type":"Identifier","start":3247,"end":3251,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3252,"end":3264,"name":"STATE_NORMAL"},{"type":"Literal","start":3266,"end":3274,"value":{},"raw":"/plural/","regex":{"pattern":"plural","flags":""}},{"type":"ArrowFunctionExpression","start":3276,"end":3347,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3277,"end":3280,"name":"ctx"},{"type":"Identifier","start":3282,"end":3287,"name":"match"}],"body":{"type":"BlockStatement","start":3292,"end":3347,"body":[{"type":"ExpressionStatement","start":3307,"end":3336,"expression":{"type":"CallExpression","start":3307,"end":3335,"callee":{"type":"MemberExpression","start":3307,"end":3317,"object":{"type":"Identifier","start":3307,"end":3310,"name":"ctx"},"property":{"type":"Identifier","start":3311,"end":3317,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3318,"end":3324,"name":"PLURAL"},{"type":"MemberExpression","start":3326,"end":3334,"object":{"type":"Identifier","start":3326,"end":3331,"name":"match"},"property":{"type":"Literal","start":3332,"end":3333,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]}},{"type":"Identifier","start":3349,"end":3355,"name":"PLURAL"}],"optional":false}},{"type":"ExpressionStatement","start":3367,"end":3483,"expression":{"type":"CallExpression","start":3367,"end":3482,"callee":{"type":"MemberExpression","start":3367,"end":3377,"object":{"type":"Identifier","start":3367,"end":3372,"name":"lexer"},"property":{"type":"Identifier","start":3373,"end":3377,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3378,"end":3390,"name":"STATE_NORMAL"},{"type":"Literal","start":3392,"end":3400,"value":{},"raw":"/select/","regex":{"pattern":"select","flags":""}},{"type":"ArrowFunctionExpression","start":3402,"end":3473,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3403,"end":3406,"name":"ctx"},{"type":"Identifier","start":3408,"end":3413,"name":"match"}],"body":{"type":"BlockStatement","start":3418,"end":3473,"body":[{"type":"ExpressionStatement","start":3433,"end":3462,"expression":{"type":"CallExpression","start":3433,"end":3461,"callee":{"type":"MemberExpression","start":3433,"end":3443,"object":{"type":"Identifier","start":3433,"end":3436,"name":"ctx"},"property":{"type":"Identifier","start":3437,"end":3443,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3444,"end":3450,"name":"SELECT"},{"type":"MemberExpression","start":3452,"end":3460,"object":{"type":"Identifier","start":3452,"end":3457,"name":"match"},"property":{"type":"Literal","start":3458,"end":3459,"value":0,"raw":"0"},"computed":true,"optional":false}],"optional":false}}]}},{"type":"Identifier","start":3475,"end":3481,"name":"SELECT"}],"optional":false}},{"type":"ExpressionStatement","start":3510,"end":3625,"expression":{"type":"CallExpression","start":3510,"end":3624,"callee":{"type":"MemberExpression","start":3510,"end":3520,"object":{"type":"Identifier","start":3510,"end":3515,"name":"lexer"},"property":{"type":"Identifier","start":3516,"end":3520,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3521,"end":3524,"value":{},"raw":"/./","regex":{"pattern":".","flags":""}},{"type":"ArrowFunctionExpression","start":3526,"end":3617,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3527,"end":3530,"name":"ctx"},{"type":"Identifier","start":3532,"end":3537,"name":"match"}],"body":{"type":"BlockStatement","start":3542,"end":3617,"body":[{"type":"ExpressionStatement","start":3557,"end":3579,"expression":{"type":"AssignmentExpression","start":3557,"end":3578,"operator":"+=","left":{"type":"Identifier","start":3557,"end":3566,"name":"plaintext"},"right":{"type":"MemberExpression","start":3570,"end":3578,"object":{"type":"Identifier","start":3570,"end":3575,"name":"match"},"property":{"type":"Literal","start":3576,"end":3577,"value":0,"raw":"0"},"computed":true,"optional":false}}},{"type":"ExpressionStatement","start":3593,"end":3606,"expression":{"type":"CallExpression","start":3593,"end":3605,"callee":{"type":"MemberExpression","start":3593,"end":3603,"object":{"type":"Identifier","start":3593,"end":3596,"name":"ctx"},"property":{"type":"Identifier","start":3597,"end":3603,"name":"ignore"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}},{"type":"Identifier","start":3619,"end":3623,"name":"TEXT"}],"optional":false}},{"type":"ExpressionStatement","start":3635,"end":3754,"expression":{"type":"CallExpression","start":3635,"end":3753,"callee":{"type":"MemberExpression","start":3635,"end":3645,"object":{"type":"Identifier","start":3635,"end":3640,"name":"lexer"},"property":{"type":"Identifier","start":3641,"end":3645,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3646,"end":3653,"value":{},"raw":"/[\\s]+/","regex":{"pattern":"[\\s]+","flags":""}},{"type":"ArrowFunctionExpression","start":3655,"end":3746,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3656,"end":3659,"name":"ctx"},{"type":"Identifier","start":3661,"end":3666,"name":"match"}],"body":{"type":"BlockStatement","start":3671,"end":3746,"body":[{"type":"ExpressionStatement","start":3686,"end":3708,"expression":{"type":"AssignmentExpression","start":3686,"end":3707,"operator":"+=","left":{"type":"Identifier","start":3686,"end":3695,"name":"plaintext"},"right":{"type":"MemberExpression","start":3699,"end":3707,"object":{"type":"Identifier","start":3699,"end":3704,"name":"match"},"property":{"type":"Literal","start":3705,"end":3706,"value":0,"raw":"0"},"computed":true,"optional":false}}},{"type":"ExpressionStatement","start":3722,"end":3735,"expression":{"type":"CallExpression","start":3722,"end":3734,"callee":{"type":"MemberExpression","start":3722,"end":3732,"object":{"type":"Identifier","start":3722,"end":3725,"name":"ctx"},"property":{"type":"Identifier","start":3726,"end":3732,"name":"ignore"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}},{"type":"Identifier","start":3748,"end":3752,"name":"TEXT"}],"optional":false}},{"type":"ReturnStatement","start":3764,"end":3777,"argument":{"type":"Identifier","start":3771,"end":3776,"name":"lexer"}}]}}},{"type":"MethodDefinition","start":3790,"end":4001,"static":false,"computed":false,"key":{"type":"Identifier","start":3790,"end":3811,"name":"containsNonWhiteSpace"},"kind":"method","value":{"type":"FunctionExpression","start":3811,"end":4001,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3812,"end":3816,"name":"text"}],"body":{"type":"BlockStatement","start":3818,"end":4001,"body":[{"type":"ForStatement","start":3829,"end":3971,"init":{"type":"VariableDeclaration","start":3834,"end":3843,"declarations":[{"type":"VariableDeclarator","start":3838,"end":3843,"id":{"type":"Identifier","start":3838,"end":3839,"name":"i"},"init":{"type":"Literal","start":3842,"end":3843,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":3845,"end":3860,"left":{"type":"Identifier","start":3845,"end":3846,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":3849,"end":3860,"object":{"type":"Identifier","start":3849,"end":3853,"name":"text"},"property":{"type":"Identifier","start":3854,"end":3860,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":3862,"end":3865,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":3862,"end":3863,"name":"i"}},"body":{"type":"BlockStatement","start":3867,"end":3971,"body":[{"type":"IfStatement","start":3882,"end":3960,"test":{"type":"UnaryExpression","start":3886,"end":3912,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":3887,"end":3912,"callee":{"type":"MemberExpression","start":3887,"end":3896,"object":{"type":"Literal","start":3887,"end":3891,"value":{},"raw":"/\\s/","regex":{"pattern":"\\s","flags":""}},"property":{"type":"Identifier","start":3892,"end":3896,"name":"test"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3897,"end":3911,"callee":{"type":"MemberExpression","start":3897,"end":3908,"object":{"type":"Identifier","start":3897,"end":3901,"name":"text"},"property":{"type":"Identifier","start":3902,"end":3908,"name":"charAt"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3909,"end":3910,"name":"i"}],"optional":false}],"optional":false}},"consequent":{"type":"BlockStatement","start":3914,"end":3960,"body":[{"type":"ReturnStatement","start":3933,"end":3945,"argument":{"type":"Literal","start":3940,"end":3944,"value":true,"raw":"true"}}]},"alternate":null}]}},{"type":"ReturnStatement","start":3981,"end":3994,"argument":{"type":"Literal","start":3988,"end":3993,"value":false,"raw":"false"}}]}}},{"type":"MethodDefinition","start":4007,"end":4156,"static":false,"computed":false,"key":{"type":"Identifier","start":4007,"end":4015,"name":"tokenize"},"kind":"method","value":{"type":"FunctionExpression","start":4015,"end":4156,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4016,"end":4033,"name":"normalizedMessage"}],"body":{"type":"BlockStatement","start":4035,"end":4156,"body":[{"type":"VariableDeclaration","start":4046,"end":4076,"declarations":[{"type":"VariableDeclarator","start":4052,"end":4075,"id":{"type":"Identifier","start":4052,"end":4057,"name":"lexer"},"init":{"type":"CallExpression","start":4060,"end":4075,"callee":{"type":"MemberExpression","start":4060,"end":4073,"object":{"type":"ThisExpression","start":4060,"end":4064},"property":{"type":"Identifier","start":4065,"end":4073,"name":"getLexer"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":4086,"end":4117,"expression":{"type":"CallExpression","start":4086,"end":4116,"callee":{"type":"MemberExpression","start":4086,"end":4097,"object":{"type":"Identifier","start":4086,"end":4091,"name":"lexer"},"property":{"type":"Identifier","start":4092,"end":4097,"name":"input"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4098,"end":4115,"name":"normalizedMessage"}],"optional":false}},{"type":"ReturnStatement","start":4127,"end":4149,"argument":{"type":"CallExpression","start":4134,"end":4148,"callee":{"type":"MemberExpression","start":4134,"end":4146,"object":{"type":"Identifier","start":4134,"end":4139,"name":"lexer"},"property":{"type":"Identifier","start":4140,"end":4146,"name":"tokens"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}},{"type":"MethodDefinition","start":4162,"end":4280,"static":false,"computed":false,"key":{"type":"Identifier","start":4162,"end":4167,"name":"input"},"kind":"method","value":{"type":"FunctionExpression","start":4167,"end":4280,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4168,"end":4185,"name":"normalizedMessage"}],"body":{"type":"BlockStatement","start":4187,"end":4280,"body":[{"type":"ExpressionStatement","start":4198,"end":4227,"expression":{"type":"AssignmentExpression","start":4198,"end":4226,"operator":"=","left":{"type":"MemberExpression","start":4198,"end":4208,"object":{"type":"ThisExpression","start":4198,"end":4202},"property":{"type":"Identifier","start":4203,"end":4208,"name":"lexer"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":4211,"end":4226,"callee":{"type":"MemberExpression","start":4211,"end":4224,"object":{"type":"ThisExpression","start":4211,"end":4215},"property":{"type":"Identifier","start":4216,"end":4224,"name":"getLexer"},"computed":false,"optional":false},"arguments":[],"optional":false}}},{"type":"ExpressionStatement","start":4237,"end":4273,"expression":{"type":"CallExpression","start":4237,"end":4272,"callee":{"type":"MemberExpression","start":4237,"end":4253,"object":{"type":"MemberExpression","start":4237,"end":4247,"object":{"type":"ThisExpression","start":4237,"end":4241},"property":{"type":"Identifier","start":4242,"end":4247,"name":"lexer"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4248,"end":4253,"name":"input"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4254,"end":4271,"name":"normalizedMessage"}],"optional":false}}]}}},{"type":"MethodDefinition","start":4286,"end":4337,"static":false,"computed":false,"key":{"type":"Identifier","start":4286,"end":4290,"name":"next"},"kind":"method","value":{"type":"FunctionExpression","start":4290,"end":4337,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":4293,"end":4337,"body":[{"type":"ReturnStatement","start":4304,"end":4330,"argument":{"type":"CallExpression","start":4311,"end":4329,"callee":{"type":"MemberExpression","start":4311,"end":4327,"object":{"type":"MemberExpression","start":4311,"end":4321,"object":{"type":"ThisExpression","start":4311,"end":4315},"property":{"type":"Identifier","start":4316,"end":4321,"name":"lexer"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4322,"end":4327,"name":"token"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}},{"type":"MethodDefinition","start":4343,"end":4393,"static":false,"computed":false,"key":{"type":"Identifier","start":4343,"end":4347,"name":"peek"},"kind":"method","value":{"type":"FunctionExpression","start":4347,"end":4393,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":4350,"end":4393,"body":[{"type":"ReturnStatement","start":4361,"end":4386,"argument":{"type":"CallExpression","start":4368,"end":4385,"callee":{"type":"MemberExpression","start":4368,"end":4383,"object":{"type":"MemberExpression","start":4368,"end":4378,"object":{"type":"ThisExpression","start":4368,"end":4372},"property":{"type":"Identifier","start":4373,"end":4378,"name":"lexer"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4379,"end":4383,"name":"peek"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":4398,"end":17028}]},"code":"import Tokenizr from 'tokenizr';\r\n/**\r\n * Created by martin on 04.06.2017.\r\n * A tokenizer for ICU messages.\r\n */\r\n// Tokens\r\nexport const TEXT = 'TEXT';\r\nexport const CURLY_BRACE_OPEN = 'CURLY_BRACE_OPEN';\r\nexport const CURLY_BRACE_CLOSE = 'CURLY_BRACE_CLOSE';\r\nexport const COMMA = 'COMMA';\r\nexport const PLURAL = 'PLURAL';\r\nexport const SELECT = 'SELECT';\r\n// states: default normal in_message\r\nconst STATE_DEFAULT = 'default';\r\nconst STATE_NORMAL = 'normal';\r\nconst STATE_IN_MESSAGE = 'in_message';\r\nexport class ICUMessageTokenizer {\r\n    getLexer() {\r\n        const lexer = new Tokenizr();\r\n        let plaintext = '';\r\n        let openedCurlyBracesInTextCounter = 0;\r\n        lexer.before((ctx, match, rule) => {\r\n            if (rule.name !== TEXT) {\r\n                if (this.containsNonWhiteSpace(plaintext)) {\r\n                    ctx.accept(TEXT, plaintext);\r\n                    plaintext = '';\r\n                }\r\n                else {\r\n                    ctx.ignore();\r\n                }\r\n            }\r\n        });\r\n        lexer.finish((ctx) => {\r\n            if (this.containsNonWhiteSpace(plaintext)) {\r\n                ctx.accept(TEXT, plaintext);\r\n            }\r\n        });\r\n        // curly brace\r\n        lexer.rule(STATE_DEFAULT, /{/, (ctx, match) => {\r\n            ctx.accept(CURLY_BRACE_OPEN, match[0]);\r\n            ctx.push(STATE_NORMAL);\r\n        }, CURLY_BRACE_OPEN);\r\n        lexer.rule(STATE_NORMAL, /{/, (ctx, match) => {\r\n            ctx.accept(CURLY_BRACE_OPEN, match[0]);\r\n            ctx.push(STATE_IN_MESSAGE);\r\n        }, CURLY_BRACE_OPEN);\r\n        lexer.rule(STATE_NORMAL, /}/, (ctx, match) => {\r\n            ctx.pop();\r\n            ctx.accept(CURLY_BRACE_CLOSE, match[0]);\r\n        }, CURLY_BRACE_CLOSE);\r\n        // masked ' { and }\r\n        lexer.rule(STATE_IN_MESSAGE, /'[{}]?'/, (ctx, match) => {\r\n            if (match[0] === '\\'\\'') {\r\n                plaintext += '\\'';\r\n            }\r\n            else if (match[0] === '\\'{\\'') {\r\n                plaintext += '{';\r\n            }\r\n            else if (match[0] === '\\'}\\'') {\r\n                plaintext += '}';\r\n            }\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        lexer.rule(STATE_IN_MESSAGE, /./, (ctx, match) => {\r\n            const char = match[0];\r\n            if (char === '{') {\r\n                openedCurlyBracesInTextCounter++;\r\n                plaintext += match[0];\r\n                ctx.ignore();\r\n            }\r\n            else if (char === '}') {\r\n                if (openedCurlyBracesInTextCounter > 0) {\r\n                    openedCurlyBracesInTextCounter--;\r\n                    plaintext += match[0];\r\n                    ctx.ignore();\r\n                }\r\n                else {\r\n                    ctx.pop();\r\n                    ctx.accept(TEXT, plaintext);\r\n                    plaintext = '';\r\n                    ctx.accept(CURLY_BRACE_CLOSE, match[0]);\r\n                }\r\n            }\r\n            else {\r\n                plaintext += match[0];\r\n                ctx.ignore();\r\n            }\r\n        }, TEXT);\r\n        // comma\r\n        lexer.rule(STATE_NORMAL, /,/, (ctx, match) => {\r\n            ctx.accept(COMMA, match[0]);\r\n        }, COMMA);\r\n        // keywords plural and select\r\n        lexer.rule(STATE_NORMAL, /plural/, (ctx, match) => {\r\n            ctx.accept(PLURAL, match[0]);\r\n        }, PLURAL);\r\n        lexer.rule(STATE_NORMAL, /select/, (ctx, match) => {\r\n            ctx.accept(SELECT, match[0]);\r\n        }, SELECT);\r\n        // text\r\n        lexer.rule(/./, (ctx, match) => {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        lexer.rule(/[\\s]+/, (ctx, match) => {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        return lexer;\r\n    }\r\n    containsNonWhiteSpace(text) {\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (!/\\s/.test(text.charAt(i))) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    tokenize(normalizedMessage) {\r\n        const lexer = this.getLexer();\r\n        lexer.input(normalizedMessage);\r\n        return lexer.tokens();\r\n    }\r\n    input(normalizedMessage) {\r\n        this.lexer = this.getLexer();\r\n        this.lexer.input(normalizedMessage);\r\n    }\r\n    next() {\r\n        return this.lexer.token();\r\n    }\r\n    peek() {\r\n        return this.lexer.peek();\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["tokenizr"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\icu-message-tokenizer.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import Tokenizr from 'tokenizr';\r\n/**\r\n * Created by martin on 04.06.2017.\r\n * A tokenizer for ICU messages.\r\n */\r\n// Tokens\r\nexport const TEXT = 'TEXT';\r\nexport const CURLY_BRACE_OPEN = 'CURLY_BRACE_OPEN';\r\nexport const CURLY_BRACE_CLOSE = 'CURLY_BRACE_CLOSE';\r\nexport const COMMA = 'COMMA';\r\nexport const PLURAL = 'PLURAL';\r\nexport const SELECT = 'SELECT';\r\n// states: default normal in_message\r\nconst STATE_DEFAULT = 'default';\r\nconst STATE_NORMAL = 'normal';\r\nconst STATE_IN_MESSAGE = 'in_message';\r\nexport class ICUMessageTokenizer {\r\n    getLexer() {\r\n        const lexer = new Tokenizr();\r\n        let plaintext = '';\r\n        let openedCurlyBracesInTextCounter = 0;\r\n        lexer.before((ctx, match, rule) => {\r\n            if (rule.name !== TEXT) {\r\n                if (this.containsNonWhiteSpace(plaintext)) {\r\n                    ctx.accept(TEXT, plaintext);\r\n                    plaintext = '';\r\n                }\r\n                else {\r\n                    ctx.ignore();\r\n                }\r\n            }\r\n        });\r\n        lexer.finish((ctx) => {\r\n            if (this.containsNonWhiteSpace(plaintext)) {\r\n                ctx.accept(TEXT, plaintext);\r\n            }\r\n        });\r\n        // curly brace\r\n        lexer.rule(STATE_DEFAULT, /{/, (ctx, match) => {\r\n            ctx.accept(CURLY_BRACE_OPEN, match[0]);\r\n            ctx.push(STATE_NORMAL);\r\n        }, CURLY_BRACE_OPEN);\r\n        lexer.rule(STATE_NORMAL, /{/, (ctx, match) => {\r\n            ctx.accept(CURLY_BRACE_OPEN, match[0]);\r\n            ctx.push(STATE_IN_MESSAGE);\r\n        }, CURLY_BRACE_OPEN);\r\n        lexer.rule(STATE_NORMAL, /}/, (ctx, match) => {\r\n            ctx.pop();\r\n            ctx.accept(CURLY_BRACE_CLOSE, match[0]);\r\n        }, CURLY_BRACE_CLOSE);\r\n        // masked ' { and }\r\n        lexer.rule(STATE_IN_MESSAGE, /'[{}]?'/, (ctx, match) => {\r\n            if (match[0] === '\\'\\'') {\r\n                plaintext += '\\'';\r\n            }\r\n            else if (match[0] === '\\'{\\'') {\r\n                plaintext += '{';\r\n            }\r\n            else if (match[0] === '\\'}\\'') {\r\n                plaintext += '}';\r\n            }\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        lexer.rule(STATE_IN_MESSAGE, /./, (ctx, match) => {\r\n            const char = match[0];\r\n            if (char === '{') {\r\n                openedCurlyBracesInTextCounter++;\r\n                plaintext += match[0];\r\n                ctx.ignore();\r\n            }\r\n            else if (char === '}') {\r\n                if (openedCurlyBracesInTextCounter > 0) {\r\n                    openedCurlyBracesInTextCounter--;\r\n                    plaintext += match[0];\r\n                    ctx.ignore();\r\n                }\r\n                else {\r\n                    ctx.pop();\r\n                    ctx.accept(TEXT, plaintext);\r\n                    plaintext = '';\r\n                    ctx.accept(CURLY_BRACE_CLOSE, match[0]);\r\n                }\r\n            }\r\n            else {\r\n                plaintext += match[0];\r\n                ctx.ignore();\r\n            }\r\n        }, TEXT);\r\n        // comma\r\n        lexer.rule(STATE_NORMAL, /,/, (ctx, match) => {\r\n            ctx.accept(COMMA, match[0]);\r\n        }, COMMA);\r\n        // keywords plural and select\r\n        lexer.rule(STATE_NORMAL, /plural/, (ctx, match) => {\r\n            ctx.accept(PLURAL, match[0]);\r\n        }, PLURAL);\r\n        lexer.rule(STATE_NORMAL, /select/, (ctx, match) => {\r\n            ctx.accept(SELECT, match[0]);\r\n        }, SELECT);\r\n        // text\r\n        lexer.rule(/./, (ctx, match) => {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        lexer.rule(/[\\s]+/, (ctx, match) => {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        return lexer;\r\n    }\r\n    containsNonWhiteSpace(text) {\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (!/\\s/.test(text.charAt(i))) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    tokenize(normalizedMessage) {\r\n        const lexer = this.getLexer();\r\n        lexer.input(normalizedMessage);\r\n        return lexer.tokens();\r\n    }\r\n    input(normalizedMessage) {\r\n        this.lexer = this.getLexer();\r\n        this.lexer.input(normalizedMessage);\r\n    }\r\n    next() {\r\n        return this.lexer.token();\r\n    }\r\n    peek() {\r\n        return this.lexer.peek();\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"icu-message-tokenizer.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/icu-message-tokenizer.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[15,0,0,15],[21,0,0,21],[31,0,0,31],[32,0,0,32]],[[0,0,2,0]],[],[],[[3,0,5,3]],[[0,0,7,0],[9,0,7,9]],[[0,0,8,0],[6,0,8,6],[7,0,8,7],[13,0,8,13],[17,0,8,17],[20,0,8,20],[26,0,8,26],[27,0,8,27]],[[0,0,9,0],[6,0,9,6],[7,0,9,7],[13,0,9,13],[29,0,9,29],[32,0,9,32],[50,0,9,50],[51,0,9,51]],[[0,0,10,0],[6,0,10,6],[7,0,10,7],[13,0,10,13],[30,0,10,30],[33,0,10,33],[52,0,10,52],[53,0,10,53]],[[0,0,11,0],[6,0,11,6],[7,0,11,7],[13,0,11,13],[18,0,11,18],[21,0,11,21],[28,0,11,28],[29,0,11,29]],[[0,0,12,0],[6,0,12,6],[7,0,12,7],[13,0,12,13],[19,0,12,19],[22,0,12,22],[30,0,12,30],[31,0,12,31]],[[0,0,13,0],[6,0,13,6],[7,0,13,7],[13,0,13,13],[19,0,13,19],[22,0,13,22],[30,0,13,30],[31,0,13,31]],[[0,0,20,0],[36,0,20,36]],[[0,0,21,0],[6,0,21,6],[19,0,21,19],[22,0,21,22],[31,0,21,31],[32,0,21,32]],[[0,0,22,0],[6,0,22,6],[18,0,22,18],[21,0,22,21],[29,0,22,29],[30,0,22,30]],[[0,0,23,0],[6,0,23,6],[22,0,23,22],[25,0,23,25],[37,0,23,37],[38,0,23,38]],[[0,0,25,0],[6,0,25,6],[13,0,25,13],[32,0,25,32]],[[4,0,28,12],[12,0,28,20]],[[8,0,29,8],[14,0,29,14],[19,0,29,19],[22,0,29,22],[26,0,29,26],[34,0,29,34],[36,0,29,36],[37,0,29,37]],[[8,0,30,8],[12,0,30,12],[21,0,30,21],[24,0,30,24],[26,0,30,26],[27,0,30,27]],[[8,0,31,8],[12,0,31,12],[42,0,31,42],[45,0,31,45],[46,0,31,46],[47,0,31,47]],[[8,0,32,8],[13,0,32,13],[14,0,32,14],[20,0,32,20],[21,0,32,21],[22,0,32,22],[25,0,32,25],[27,0,32,27],[32,0,32,32],[34,0,32,34],[38,0,32,38],[40,0,32,40],[42,0,32,42]],[[12,0,33,12],[16,0,33,16],[20,0,33,20],[21,0,33,21],[25,0,33,25],[30,0,33,30],[34,0,33,34],[36,0,33,36]],[[16,0,34,16],[20,0,34,20],[24,0,34,24],[25,0,34,25],[46,0,34,46],[47,0,34,47],[56,0,34,56],[57,0,34,57],[59,0,34,59]],[[20,0,35,20],[23,0,35,23],[24,0,35,24],[30,0,35,30],[31,0,35,31],[35,0,35,35],[37,0,35,37],[46,0,35,46],[47,0,35,47],[48,0,35,48]],[[20,0,36,20],[29,0,36,29],[32,0,36,32],[34,0,36,34],[35,0,36,35]],[[17,0,37,17]],[[21,0,37,23]],[[20,0,38,20],[23,0,38,23],[24,0,38,24],[30,0,38,30],[32,0,38,32],[33,0,38,33]],[[17,0,39,17]],[[13,0,40,13]],[[8,0,41,8],[9,0,41,9],[10,0,41,10],[11,0,41,11]],[[8,0,42,8],[13,0,42,13],[14,0,42,14],[20,0,42,20],[21,0,42,21],[22,0,42,22],[25,0,42,25],[27,0,42,27],[29,0,42,29]],[[12,0,43,12],[16,0,43,16],[20,0,43,20],[21,0,43,21],[42,0,43,42],[43,0,43,43],[52,0,43,52],[53,0,43,53],[55,0,43,55]],[[16,0,44,16],[19,0,44,19],[20,0,44,20],[26,0,44,26],[27,0,44,27],[31,0,44,31],[33,0,44,33],[42,0,44,42],[43,0,44,43],[44,0,44,44]],[[13,0,45,13]],[[8,0,46,9],[9,0,46,10],[10,0,46,11],[11,0,46,12]],[[8,0,47,8],[22,0,47,22]],[[8,0,48,8],[13,0,48,13],[14,0,48,14],[18,0,48,18],[19,0,48,19],[32,0,48,32],[34,0,48,34],[37,0,48,37],[39,0,48,39],[40,0,48,40],[43,0,48,43],[45,0,48,45],[50,0,48,50],[52,0,48,52],[54,0,48,54]],[[12,0,49,12],[15,0,49,15],[16,0,49,16],[22,0,49,22],[23,0,49,23],[39,0,49,39],[41,0,49,41],[46,0,49,46],[47,0,49,47],[48,0,49,48],[49,0,49,49],[50,0,49,50],[51,0,49,51]],[[12,0,50,12],[15,0,50,15],[16,0,50,16],[20,0,50,20],[21,0,50,21],[33,0,50,33],[34,0,50,34],[35,0,50,35]],[[8,0,51,8],[9,0,51,9],[11,0,51,11],[27,0,51,27],[28,0,51,28],[29,0,51,29]],[[8,0,52,8],[13,0,52,13],[14,0,52,14],[18,0,52,18],[19,0,52,19],[31,0,52,31],[33,0,52,33],[36,0,52,36],[38,0,52,38],[39,0,52,39],[42,0,52,42],[44,0,52,44],[49,0,52,49],[51,0,52,51],[53,0,52,53]],[[12,0,53,12],[15,0,53,15],[16,0,53,16],[22,0,53,22],[23,0,53,23],[39,0,53,39],[41,0,53,41],[46,0,53,46],[47,0,53,47],[48,0,53,48],[49,0,53,49],[50,0,53,50],[51,0,53,51]],[[12,0,54,12],[15,0,54,15],[16,0,54,16],[20,0,54,20],[21,0,54,21],[37,0,54,37],[38,0,54,38],[39,0,54,39]],[[8,0,55,8],[9,0,55,9],[11,0,55,11],[27,0,55,27],[28,0,55,28],[29,0,55,29]],[[8,0,56,8],[13,0,56,13],[14,0,56,14],[18,0,56,18],[19,0,56,19],[31,0,56,31],[33,0,56,33],[36,0,56,36],[38,0,56,38],[39,0,56,39],[42,0,56,42],[44,0,56,44],[49,0,56,49],[51,0,56,51],[53,0,56,53]],[[12,0,57,12],[15,0,57,15],[16,0,57,16],[19,0,57,19],[21,0,57,21],[22,0,57,22]],[[12,0,58,12],[15,0,58,15],[16,0,58,16],[22,0,58,22],[23,0,58,23],[40,0,58,40],[42,0,58,42],[47,0,58,47],[48,0,58,48],[49,0,58,49],[50,0,58,50],[51,0,58,51],[52,0,58,52]],[[8,0,59,8],[9,0,59,9],[11,0,59,11],[28,0,59,28],[29,0,59,29],[30,0,59,30]],[[8,0,60,8],[27,0,60,27]],[[8,0,61,8],[13,0,61,13],[14,0,61,14],[18,0,61,18],[19,0,61,19],[35,0,61,35],[37,0,61,37],[46,0,61,46],[48,0,61,48],[49,0,61,49],[52,0,61,52],[54,0,61,54],[59,0,61,59],[61,0,61,61],[63,0,61,63]],[[12,0,62,12],[16,0,62,16],[21,0,62,21],[22,0,62,22],[23,0,62,23],[24,0,62,24],[29,0,62,29],[35,0,62,35],[37,0,62,37]],[[16,0,63,16],[25,0,63,25],[29,0,63,29],[33,0,63,33],[34,0,63,34]],[[13,0,64,13]],[[17,0,64,19],[21,0,64,23],[26,0,64,28],[27,0,64,29],[28,0,64,30],[29,0,64,31],[34,0,64,36],[41,0,64,43],[43,0,64,45]],[[16,0,65,16],[25,0,65,25],[29,0,65,29],[32,0,65,32],[33,0,65,33]],[[13,0,66,13]],[[17,0,66,19],[21,0,66,23],[26,0,66,28],[27,0,66,29],[28,0,66,30],[29,0,66,31],[34,0,66,36],[41,0,66,43],[43,0,66,45]],[[16,0,67,16],[25,0,67,25],[29,0,67,29],[32,0,67,32],[33,0,67,33]],[[13,0,68,13]],[[12,0,69,12],[15,0,69,15],[16,0,69,16],[22,0,69,22],[24,0,69,24],[25,0,69,25]],[[8,0,70,8],[9,0,70,9],[11,0,70,11],[15,0,70,15],[16,0,70,16],[17,0,70,17]],[[8,0,71,8],[13,0,71,13],[14,0,71,14],[18,0,71,18],[19,0,71,19],[35,0,71,35],[37,0,71,37],[40,0,71,40],[42,0,71,42],[43,0,71,43],[46,0,71,46],[48,0,71,48],[53,0,71,53],[55,0,71,55],[57,0,71,57]],[[12,0,72,12],[18,0,72,18],[22,0,72,22],[25,0,72,25],[30,0,72,30],[31,0,72,31],[32,0,72,32],[33,0,72,33],[34,0,72,34]],[[12,0,73,12],[16,0,73,16],[20,0,73,20],[25,0,73,25],[28,0,73,28],[30,0,73,30]],[[16,0,74,16],[46,0,74,46],[48,0,74,48],[49,0,74,49]],[[16,0,75,16],[25,0,75,25],[29,0,75,29],[34,0,75,34],[35,0,75,35],[36,0,75,36],[37,0,75,37],[38,0,75,38]],[[16,0,76,16],[19,0,76,19],[20,0,76,20],[26,0,76,26],[28,0,76,28],[29,0,76,29]],[[13,0,77,13]],[[17,0,77,19],[21,0,77,23],[25,0,77,27],[30,0,77,32],[33,0,77,35],[35,0,77,37]],[[16,0,78,16],[20,0,78,20],[50,0,78,50],[53,0,78,53],[54,0,78,54],[56,0,78,56]],[[20,0,79,20],[50,0,79,50],[52,0,79,52],[53,0,79,53]],[[20,0,80,20],[29,0,80,29],[33,0,80,33],[38,0,80,38],[39,0,80,39],[40,0,80,40],[41,0,80,41],[42,0,80,42]],[[20,0,81,20],[23,0,81,23],[24,0,81,24],[30,0,81,30],[32,0,81,32],[33,0,81,33]],[[17,0,82,17]],[[21,0,82,23]],[[20,0,83,20],[23,0,83,23],[24,0,83,24],[27,0,83,27],[29,0,83,29],[30,0,83,30]],[[20,0,84,20],[23,0,84,23],[24,0,84,24],[30,0,84,30],[31,0,84,31],[35,0,84,35],[37,0,84,37],[46,0,84,46],[47,0,84,47],[48,0,84,48]],[[20,0,85,20],[29,0,85,29],[32,0,85,32],[34,0,85,34],[35,0,85,35]],[[20,0,86,20],[23,0,86,23],[24,0,86,24],[30,0,86,30],[31,0,86,31],[48,0,86,48],[50,0,86,50],[55,0,86,55],[56,0,86,56],[57,0,86,57],[58,0,86,58],[59,0,86,59],[60,0,86,60]],[[17,0,87,17]],[[13,0,88,13]],[[17,0,88,19]],[[16,0,89,16],[25,0,89,25],[29,0,89,29],[34,0,89,34],[35,0,89,35],[36,0,89,36],[37,0,89,37],[38,0,89,38]],[[16,0,90,16],[19,0,90,19],[20,0,90,20],[26,0,90,26],[28,0,90,28],[29,0,90,29]],[[13,0,91,13]],[[8,0,92,8],[9,0,92,9],[11,0,92,11],[15,0,92,15],[16,0,92,16],[17,0,92,17]],[[8,0,93,8],[16,0,93,16]],[[8,0,94,8],[13,0,94,13],[14,0,94,14],[18,0,94,18],[19,0,94,19],[31,0,94,31],[33,0,94,33],[36,0,94,36],[38,0,94,38],[39,0,94,39],[42,0,94,42],[44,0,94,44],[49,0,94,49],[51,0,94,51],[53,0,94,53]],[[12,0,95,12],[15,0,95,15],[16,0,95,16],[22,0,95,22],[23,0,95,23],[28,0,95,28],[30,0,95,30],[35,0,95,35],[36,0,95,36],[37,0,95,37],[38,0,95,38],[39,0,95,39],[40,0,95,40]],[[8,0,96,8],[9,0,96,9],[11,0,96,11],[16,0,96,16],[17,0,96,17],[18,0,96,18]],[[8,0,97,8],[37,0,97,37]],[[8,0,98,8],[13,0,98,13],[14,0,98,14],[18,0,98,18],[19,0,98,19],[31,0,98,31],[33,0,98,33],[41,0,98,41],[43,0,98,43],[44,0,98,44],[47,0,98,47],[49,0,98,49],[54,0,98,54],[56,0,98,56],[58,0,98,58]],[[12,0,99,12],[15,0,99,15],[16,0,99,16],[22,0,99,22],[23,0,99,23],[29,0,99,29],[31,0,99,31],[36,0,99,36],[37,0,99,37],[38,0,99,38],[39,0,99,39],[40,0,99,40],[41,0,99,41]],[[8,0,100,8],[9,0,100,9],[11,0,100,11],[17,0,100,17],[18,0,100,18],[19,0,100,19]],[[8,0,101,8],[13,0,101,13],[14,0,101,14],[18,0,101,18],[19,0,101,19],[31,0,101,31],[33,0,101,33],[41,0,101,41],[43,0,101,43],[44,0,101,44],[47,0,101,47],[49,0,101,49],[54,0,101,54],[56,0,101,56],[58,0,101,58]],[[12,0,102,12],[15,0,102,15],[16,0,102,16],[22,0,102,22],[23,0,102,23],[29,0,102,29],[31,0,102,31],[36,0,102,36],[37,0,102,37],[38,0,102,38],[39,0,102,39],[40,0,102,40],[41,0,102,41]],[[8,0,103,8],[9,0,103,9],[11,0,103,11],[17,0,103,17],[18,0,103,18],[19,0,103,19]],[[8,0,104,8],[15,0,104,15]],[[8,0,105,8],[13,0,105,13],[14,0,105,14],[18,0,105,18],[19,0,105,19],[22,0,105,22],[24,0,105,24],[25,0,105,25],[28,0,105,28],[30,0,105,30],[35,0,105,35],[37,0,105,37],[39,0,105,39]],[[12,0,106,12],[21,0,106,21],[25,0,106,25],[30,0,106,30],[31,0,106,31],[32,0,106,32],[33,0,106,33],[34,0,106,34]],[[12,0,107,12],[15,0,107,15],[16,0,107,16],[22,0,107,22],[24,0,107,24],[25,0,107,25]],[[8,0,108,8],[9,0,108,9],[11,0,108,11],[15,0,108,15],[16,0,108,16],[17,0,108,17]],[[8,0,109,8],[13,0,109,13],[14,0,109,14],[18,0,109,18],[19,0,109,19],[26,0,109,26],[28,0,109,28],[29,0,109,29],[32,0,109,32],[34,0,109,34],[39,0,109,39],[41,0,109,41],[43,0,109,43]],[[12,0,110,12],[21,0,110,21],[25,0,110,25],[30,0,110,30],[31,0,110,31],[32,0,110,32],[33,0,110,33],[34,0,110,34]],[[12,0,111,12],[15,0,111,15],[16,0,111,16],[22,0,111,22],[24,0,111,24],[25,0,111,25]],[[8,0,112,8],[9,0,112,9],[11,0,112,11],[15,0,112,15],[16,0,112,16],[17,0,112,17]],[[8,0,113,8],[15,0,113,15],[20,0,113,20],[21,0,113,21]],[[4,0,114,4],[5,0,114,5]],[[4,0,116,12],[25,0,116,33],[26,0,116,34],[30,0,116,46]],[[8,0,117,8],[13,0,117,13],[17,0,117,17],[18,0,117,18],[21,0,117,21],[22,0,117,22],[24,0,117,24],[25,0,117,25],[28,0,117,28],[32,0,117,32],[33,0,117,33],[39,0,117,39],[41,0,117,41],[42,0,117,42],[44,0,117,44],[46,0,117,46]],[[12,0,118,12],[16,0,118,16],[17,0,118,17],[21,0,118,21],[22,0,118,22],[26,0,118,26],[27,0,118,27],[31,0,118,31],[32,0,118,32],[38,0,118,38],[39,0,118,39],[40,0,118,40],[41,0,118,41],[42,0,118,42],[44,0,118,44]],[[16,0,119,16],[23,0,119,23],[27,0,119,27],[28,0,119,28]],[[13,0,120,13]],[[9,0,121,9]],[[8,0,122,8],[15,0,122,15],[20,0,122,20],[21,0,122,21]],[[4,0,123,4],[5,0,123,5]],[[4,0,125,4],[12,0,125,12],[13,0,125,13],[30,0,125,38]],[[8,0,126,8],[14,0,126,14],[19,0,126,19],[22,0,126,32],[26,0,126,36],[27,0,126,37],[35,0,126,45],[37,0,126,47],[38,0,126,48]],[[8,0,127,8],[13,0,127,13],[14,0,127,14],[19,0,127,19],[20,0,127,20],[37,0,127,37],[38,0,127,38],[39,0,127,39]],[[8,0,128,8],[15,0,128,15],[20,0,128,20],[21,0,128,21],[27,0,128,27],[29,0,128,29],[30,0,128,30]],[[4,0,129,4],[5,0,129,5]],[[4,0,131,4],[9,0,131,9],[10,0,131,10],[27,0,131,35]],[[8,0,132,8],[12,0,132,12],[13,0,132,13],[18,0,132,18],[21,0,132,21],[25,0,132,25],[26,0,132,26],[34,0,132,34],[36,0,132,36],[37,0,132,37]],[[8,0,133,8],[12,0,133,12],[13,0,133,13],[18,0,133,18],[19,0,133,19],[24,0,133,24],[25,0,133,25],[42,0,133,42],[43,0,133,43],[44,0,133,44]],[[4,0,134,4],[5,0,134,5]],[[4,0,136,4],[8,0,136,8]],[[8,0,137,8],[15,0,137,15],[19,0,137,19],[20,0,137,20],[25,0,137,25],[26,0,137,26],[31,0,137,31],[33,0,137,33],[34,0,137,34]],[[4,0,138,4],[5,0,138,5]],[[4,0,140,4],[8,0,140,8]],[[8,0,141,8],[15,0,141,15],[19,0,141,19],[20,0,141,20],[25,0,141,25],[26,0,141,26],[30,0,141,30],[32,0,141,32],[33,0,141,33]],[[4,0,142,4],[5,0,142,5]],[[1,0,143,1]]],"sourcesContent":["import Tokenizr from 'tokenizr';\r\n\r\n/**\r\n * Created by martin on 04.06.2017.\r\n * A tokenizer for ICU messages.\r\n */\r\n\r\n// Tokens\r\nexport const TEXT = 'TEXT';\r\nexport const CURLY_BRACE_OPEN = 'CURLY_BRACE_OPEN';\r\nexport const CURLY_BRACE_CLOSE = 'CURLY_BRACE_CLOSE';\r\nexport const COMMA = 'COMMA';\r\nexport const PLURAL = 'PLURAL';\r\nexport const SELECT = 'SELECT';\r\n\r\nexport interface ICUToken {\r\n    type: string;\r\n    value: any;\r\n}\r\n\r\n// states: default normal in_message\r\nconst STATE_DEFAULT = 'default';\r\nconst STATE_NORMAL = 'normal';\r\nconst STATE_IN_MESSAGE = 'in_message';\r\n\r\nexport class ICUMessageTokenizer {\r\n    private lexer: Tokenizr;\r\n\r\n    private getLexer(): Tokenizr {\r\n        const lexer = new Tokenizr();\r\n        let plaintext = '';\r\n        let openedCurlyBracesInTextCounter = 0;\r\n        lexer.before((ctx, match, rule) => {\r\n            if (rule.name !== TEXT) {\r\n                if (this.containsNonWhiteSpace(plaintext)) {\r\n                    ctx.accept(TEXT, plaintext);\r\n                    plaintext = '';\r\n                } else {\r\n                    ctx.ignore();\r\n                }\r\n            }\r\n        });\r\n        lexer.finish((ctx) => {\r\n            if (this.containsNonWhiteSpace(plaintext)) {\r\n                ctx.accept(TEXT, plaintext);\r\n            }\r\n         });\r\n        // curly brace\r\n        lexer.rule(STATE_DEFAULT, /{/, (ctx, match) => {\r\n            ctx.accept(CURLY_BRACE_OPEN, match[0]);\r\n            ctx.push(STATE_NORMAL);\r\n        }, CURLY_BRACE_OPEN);\r\n        lexer.rule(STATE_NORMAL, /{/, (ctx, match) => {\r\n            ctx.accept(CURLY_BRACE_OPEN, match[0]);\r\n            ctx.push(STATE_IN_MESSAGE);\r\n        }, CURLY_BRACE_OPEN);\r\n        lexer.rule(STATE_NORMAL, /}/, (ctx, match) => {\r\n            ctx.pop();\r\n            ctx.accept(CURLY_BRACE_CLOSE, match[0]);\r\n        }, CURLY_BRACE_CLOSE);\r\n        // masked ' { and }\r\n        lexer.rule(STATE_IN_MESSAGE, /'[{}]?'/, (ctx, match) => {\r\n            if (match[0] === '\\'\\'') {\r\n                plaintext += '\\'';\r\n            } else if (match[0] === '\\'{\\'') {\r\n                plaintext += '{';\r\n            } else if (match[0] === '\\'}\\'') {\r\n                plaintext += '}';\r\n            }\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        lexer.rule(STATE_IN_MESSAGE, /./, (ctx, match) => {\r\n            const char = match[0];\r\n            if (char === '{') {\r\n                openedCurlyBracesInTextCounter++;\r\n                plaintext += match[0];\r\n                ctx.ignore();\r\n            } else if (char === '}') {\r\n                if (openedCurlyBracesInTextCounter > 0) {\r\n                    openedCurlyBracesInTextCounter--;\r\n                    plaintext += match[0];\r\n                    ctx.ignore();\r\n                } else {\r\n                    ctx.pop();\r\n                    ctx.accept(TEXT, plaintext);\r\n                    plaintext = '';\r\n                    ctx.accept(CURLY_BRACE_CLOSE, match[0]);\r\n                }\r\n            } else {\r\n                plaintext += match[0];\r\n                ctx.ignore();\r\n            }\r\n        }, TEXT);\r\n        // comma\r\n        lexer.rule(STATE_NORMAL, /,/, (ctx, match) => {\r\n            ctx.accept(COMMA, match[0]);\r\n        }, COMMA);\r\n        // keywords plural and select\r\n        lexer.rule(STATE_NORMAL, /plural/, (ctx, match) => {\r\n            ctx.accept(PLURAL, match[0]);\r\n        }, PLURAL);\r\n        lexer.rule(STATE_NORMAL, /select/, (ctx, match) => {\r\n            ctx.accept(SELECT, match[0]);\r\n        }, SELECT);\r\n        // text\r\n        lexer.rule(/./, (ctx, match) => {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        lexer.rule(/[\\s]+/, (ctx, match) => {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        return lexer;\r\n    }\r\n\r\n    private containsNonWhiteSpace(text: string): boolean {\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (!/\\s/.test(text.charAt(i))) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    tokenize(normalizedMessage: string): ICUToken[] {\r\n        const lexer: Tokenizr = this.getLexer();\r\n        lexer.input(normalizedMessage);\r\n        return lexer.tokens();\r\n    }\r\n\r\n    input(normalizedMessage: string) {\r\n        this.lexer = this.getLexer();\r\n        this.lexer.input(normalizedMessage);\r\n    }\r\n\r\n    next(): ICUToken {\r\n        return this.lexer.token();\r\n    }\r\n\r\n    peek(): ICUToken {\r\n        return this.lexer.peek();\r\n    }\r\n}\r\n"]},"resolvedIds":{"tokenizr":{"external":true,"id":"tokenizr","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":16445,"body":[{"type":"ImportDeclaration","start":0,"end":30,"specifiers":[{"type":"ImportSpecifier","start":9,"end":15,"imported":{"type":"Identifier","start":9,"end":15,"name":"format"},"local":{"type":"Identifier","start":9,"end":15,"name":"format"}}],"source":{"type":"Literal","start":23,"end":29,"value":"util","raw":"'util'"}},{"type":"ImportDeclaration","start":32,"end":86,"specifiers":[{"type":"ImportSpecifier","start":41,"end":58,"imported":{"type":"Identifier","start":41,"end":58,"name":"isNullOrUndefined"},"local":{"type":"Identifier","start":41,"end":58,"name":"isNullOrUndefined"}},{"type":"ImportSpecifier","start":60,"end":68,"imported":{"type":"Identifier","start":60,"end":68,"name":"isString"},"local":{"type":"Identifier","start":60,"end":68,"name":"isString"}}],"source":{"type":"Literal","start":76,"end":85,"value":"is-what","raw":"'is-what'"}},{"type":"ClassDeclaration","start":88,"end":361,"id":{"type":"Identifier","start":94,"end":109,"name":"MessageCategory"},"superClass":null,"body":{"type":"ClassBody","start":110,"end":361,"body":[{"type":"MethodDefinition","start":117,"end":230,"static":false,"computed":false,"key":{"type":"Identifier","start":117,"end":128,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":128,"end":230,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":129,"end":138,"name":"_category"},{"type":"Identifier","start":140,"end":148,"name":"_message"}],"body":{"type":"BlockStatement","start":150,"end":230,"body":[{"type":"ExpressionStatement","start":161,"end":188,"expression":{"type":"AssignmentExpression","start":161,"end":187,"operator":"=","left":{"type":"MemberExpression","start":161,"end":175,"object":{"type":"ThisExpression","start":161,"end":165},"property":{"type":"Identifier","start":166,"end":175,"name":"_category"},"computed":false,"optional":false},"right":{"type":"Identifier","start":178,"end":187,"name":"_category"}}},{"type":"ExpressionStatement","start":198,"end":223,"expression":{"type":"AssignmentExpression","start":198,"end":222,"operator":"=","left":{"type":"MemberExpression","start":198,"end":211,"object":{"type":"ThisExpression","start":198,"end":202},"property":{"type":"Identifier","start":203,"end":211,"name":"_message"},"computed":false,"optional":false},"right":{"type":"Identifier","start":214,"end":222,"name":"_message"}}}]}}},{"type":"MethodDefinition","start":236,"end":290,"static":false,"computed":false,"key":{"type":"Identifier","start":236,"end":247,"name":"getCategory"},"kind":"method","value":{"type":"FunctionExpression","start":247,"end":290,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":250,"end":290,"body":[{"type":"ReturnStatement","start":261,"end":283,"argument":{"type":"MemberExpression","start":268,"end":282,"object":{"type":"ThisExpression","start":268,"end":272},"property":{"type":"Identifier","start":273,"end":282,"name":"_category"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":296,"end":358,"static":false,"computed":false,"key":{"type":"Identifier","start":296,"end":316,"name":"getMessageNormalized"},"kind":"method","value":{"type":"FunctionExpression","start":316,"end":358,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":319,"end":358,"body":[{"type":"ReturnStatement","start":330,"end":351,"argument":{"type":"MemberExpression","start":337,"end":350,"object":{"type":"ThisExpression","start":337,"end":341},"property":{"type":"Identifier","start":342,"end":350,"name":"_message"},"computed":false,"optional":false}}]}}}]}},{"type":"ExportNamedDeclaration","start":448,"end":4757,"declaration":{"type":"ClassDeclaration","start":455,"end":4757,"id":{"type":"Identifier","start":461,"end":471,"name":"ICUMessage"},"superClass":null,"body":{"type":"ClassBody","start":472,"end":4757,"body":[{"type":"MethodDefinition","start":479,"end":640,"static":false,"computed":false,"key":{"type":"Identifier","start":479,"end":490,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":490,"end":640,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":491,"end":498,"name":"_parser"},{"type":"Identifier","start":500,"end":515,"name":"isPluralMessage"}],"body":{"type":"BlockStatement","start":517,"end":640,"body":[{"type":"ExpressionStatement","start":528,"end":551,"expression":{"type":"AssignmentExpression","start":528,"end":550,"operator":"=","left":{"type":"MemberExpression","start":528,"end":540,"object":{"type":"ThisExpression","start":528,"end":532},"property":{"type":"Identifier","start":533,"end":540,"name":"_parser"},"computed":false,"optional":false},"right":{"type":"Identifier","start":543,"end":550,"name":"_parser"}}},{"type":"ExpressionStatement","start":561,"end":601,"expression":{"type":"AssignmentExpression","start":561,"end":600,"operator":"=","left":{"type":"MemberExpression","start":561,"end":582,"object":{"type":"ThisExpression","start":561,"end":565},"property":{"type":"Identifier","start":566,"end":582,"name":"_isPluralMessage"},"computed":false,"optional":false},"right":{"type":"Identifier","start":585,"end":600,"name":"isPluralMessage"}}},{"type":"ExpressionStatement","start":611,"end":633,"expression":{"type":"AssignmentExpression","start":611,"end":632,"operator":"=","left":{"type":"MemberExpression","start":611,"end":627,"object":{"type":"ThisExpression","start":611,"end":615},"property":{"type":"Identifier","start":616,"end":627,"name":"_categories"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":630,"end":632,"elements":[]}}}]}}},{"type":"MethodDefinition","start":646,"end":757,"static":false,"computed":false,"key":{"type":"Identifier","start":646,"end":657,"name":"addCategory"},"kind":"method","value":{"type":"FunctionExpression","start":657,"end":757,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":658,"end":666,"name":"category"},{"type":"Identifier","start":668,"end":675,"name":"message"}],"body":{"type":"BlockStatement","start":677,"end":757,"body":[{"type":"ExpressionStatement","start":688,"end":750,"expression":{"type":"CallExpression","start":688,"end":749,"callee":{"type":"MemberExpression","start":688,"end":709,"object":{"type":"MemberExpression","start":688,"end":704,"object":{"type":"ThisExpression","start":688,"end":692},"property":{"type":"Identifier","start":693,"end":704,"name":"_categories"},"computed":false,"optional":false},"property":{"type":"Identifier","start":705,"end":709,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":710,"end":748,"callee":{"type":"Identifier","start":714,"end":729,"name":"MessageCategory"},"arguments":[{"type":"Identifier","start":730,"end":738,"name":"category"},{"type":"Identifier","start":740,"end":747,"name":"message"}]}],"optional":false}}]}}},{"type":"MethodDefinition","start":937,"end":1413,"static":false,"computed":false,"key":{"type":"Identifier","start":937,"end":951,"name":"asNativeString"},"kind":"method","value":{"type":"FunctionExpression","start":951,"end":1413,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":954,"end":1413,"body":[{"type":"VariableDeclaration","start":965,"end":1036,"declarations":[{"type":"VariableDeclarator","start":971,"end":1035,"id":{"type":"Identifier","start":971,"end":978,"name":"varname"},"init":{"type":"ConditionalExpression","start":981,"end":1035,"test":{"type":"CallExpression","start":982,"end":1004,"callee":{"type":"MemberExpression","start":982,"end":1002,"object":{"type":"ThisExpression","start":982,"end":986},"property":{"type":"Identifier","start":987,"end":1002,"name":"isPluralMessage"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"Literal","start":1008,"end":1020,"value":"VAR_PLURAL","raw":"'VAR_PLURAL'"},"alternate":{"type":"Literal","start":1023,"end":1035,"value":"VAR_SELECT","raw":"'VAR_SELECT'"}}}],"kind":"const"},{"type":"VariableDeclaration","start":1046,"end":1106,"declarations":[{"type":"VariableDeclarator","start":1052,"end":1105,"id":{"type":"Identifier","start":1052,"end":1056,"name":"type"},"init":{"type":"ConditionalExpression","start":1059,"end":1105,"test":{"type":"CallExpression","start":1060,"end":1082,"callee":{"type":"MemberExpression","start":1060,"end":1080,"object":{"type":"ThisExpression","start":1060,"end":1064},"property":{"type":"Identifier","start":1065,"end":1080,"name":"isPluralMessage"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"Literal","start":1086,"end":1094,"value":"plural","raw":"'plural'"},"alternate":{"type":"Literal","start":1097,"end":1105,"value":"select","raw":"'select'"}}}],"kind":"const"},{"type":"VariableDeclaration","start":1116,"end":1138,"declarations":[{"type":"VariableDeclarator","start":1120,"end":1137,"id":{"type":"Identifier","start":1120,"end":1132,"name":"choiceString"},"init":{"type":"Literal","start":1135,"end":1137,"value":"","raw":"''"}}],"kind":"let"},{"type":"ExpressionStatement","start":1148,"end":1338,"expression":{"type":"CallExpression","start":1148,"end":1337,"callee":{"type":"MemberExpression","start":1148,"end":1172,"object":{"type":"MemberExpression","start":1148,"end":1164,"object":{"type":"ThisExpression","start":1148,"end":1152},"property":{"type":"Identifier","start":1153,"end":1164,"name":"_categories"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1165,"end":1172,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":1173,"end":1336,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1174,"end":1182,"name":"category"}],"body":{"type":"BlockStatement","start":1187,"end":1336,"body":[{"type":"ExpressionStatement","start":1202,"end":1325,"expression":{"type":"AssignmentExpression","start":1202,"end":1324,"operator":"=","left":{"type":"Identifier","start":1202,"end":1214,"name":"choiceString"},"right":{"type":"BinaryExpression","start":1217,"end":1324,"left":{"type":"Identifier","start":1217,"end":1229,"name":"choiceString"},"operator":"+","right":{"type":"CallExpression","start":1232,"end":1324,"callee":{"type":"Identifier","start":1232,"end":1238,"name":"format"},"arguments":[{"type":"Literal","start":1239,"end":1249,"value":" %s {%s}","raw":"' %s {%s}'"},{"type":"CallExpression","start":1251,"end":1273,"callee":{"type":"MemberExpression","start":1251,"end":1271,"object":{"type":"Identifier","start":1251,"end":1259,"name":"category"},"property":{"type":"Identifier","start":1260,"end":1271,"name":"getCategory"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"CallExpression","start":1275,"end":1323,"callee":{"type":"MemberExpression","start":1275,"end":1321,"object":{"type":"CallExpression","start":1275,"end":1306,"callee":{"type":"MemberExpression","start":1275,"end":1304,"object":{"type":"Identifier","start":1275,"end":1283,"name":"category"},"property":{"type":"Identifier","start":1284,"end":1304,"name":"getMessageNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":1307,"end":1321,"name":"asNativeString"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}}}]}}],"optional":false}},{"type":"ReturnStatement","start":1348,"end":1406,"argument":{"type":"CallExpression","start":1355,"end":1405,"callee":{"type":"Identifier","start":1355,"end":1361,"name":"format"},"arguments":[{"type":"Literal","start":1362,"end":1375,"value":"{%s, %s,%s}","raw":"'{%s, %s,%s}'"},{"type":"Identifier","start":1377,"end":1384,"name":"varname"},{"type":"Identifier","start":1386,"end":1390,"name":"type"},{"type":"Identifier","start":1392,"end":1404,"name":"choiceString"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1469,"end":1534,"static":false,"computed":false,"key":{"type":"Identifier","start":1469,"end":1484,"name":"isPluralMessage"},"kind":"method","value":{"type":"FunctionExpression","start":1484,"end":1534,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1487,"end":1534,"body":[{"type":"ReturnStatement","start":1498,"end":1527,"argument":{"type":"MemberExpression","start":1505,"end":1526,"object":{"type":"ThisExpression","start":1505,"end":1509},"property":{"type":"Identifier","start":1510,"end":1526,"name":"_isPluralMessage"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":1590,"end":1656,"static":false,"computed":false,"key":{"type":"Identifier","start":1590,"end":1605,"name":"isSelectMessage"},"kind":"method","value":{"type":"FunctionExpression","start":1605,"end":1656,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1608,"end":1656,"body":[{"type":"ReturnStatement","start":1619,"end":1649,"argument":{"type":"UnaryExpression","start":1626,"end":1648,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":1627,"end":1648,"object":{"type":"ThisExpression","start":1627,"end":1631},"property":{"type":"Identifier","start":1632,"end":1648,"name":"_isPluralMessage"},"computed":false,"optional":false}}}]}}},{"type":"MethodDefinition","start":1900,"end":1958,"static":false,"computed":false,"key":{"type":"Identifier","start":1900,"end":1913,"name":"getCategories"},"kind":"method","value":{"type":"FunctionExpression","start":1913,"end":1958,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1916,"end":1958,"body":[{"type":"ReturnStatement","start":1927,"end":1951,"argument":{"type":"MemberExpression","start":1934,"end":1950,"object":{"type":"ThisExpression","start":1934,"end":1938},"property":{"type":"Identifier","start":1939,"end":1950,"name":"_categories"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":2339,"end":4078,"static":false,"computed":false,"key":{"type":"Identifier","start":2339,"end":2348,"name":"translate"},"kind":"method","value":{"type":"FunctionExpression","start":2348,"end":4078,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2349,"end":2360,"name":"translation"}],"body":{"type":"BlockStatement","start":2362,"end":4078,"body":[{"type":"VariableDeclaration","start":2373,"end":2442,"declarations":[{"type":"VariableDeclarator","start":2379,"end":2441,"id":{"type":"Identifier","start":2379,"end":2386,"name":"message"},"init":{"type":"NewExpression","start":2389,"end":2441,"callee":{"type":"Identifier","start":2393,"end":2403,"name":"ICUMessage"},"arguments":[{"type":"MemberExpression","start":2404,"end":2416,"object":{"type":"ThisExpression","start":2404,"end":2408},"property":{"type":"Identifier","start":2409,"end":2416,"name":"_parser"},"computed":false,"optional":false},{"type":"CallExpression","start":2418,"end":2440,"callee":{"type":"MemberExpression","start":2418,"end":2438,"object":{"type":"ThisExpression","start":2418,"end":2422},"property":{"type":"Identifier","start":2423,"end":2438,"name":"isPluralMessage"},"computed":false,"optional":false},"arguments":[],"optional":false}]}}],"kind":"const"},{"type":"VariableDeclaration","start":2452,"end":2491,"declarations":[{"type":"VariableDeclarator","start":2458,"end":2490,"id":{"type":"Identifier","start":2458,"end":2478,"name":"translatedCategories"},"init":{"type":"NewExpression","start":2481,"end":2490,"callee":{"type":"Identifier","start":2485,"end":2488,"name":"Set"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":2501,"end":3262,"expression":{"type":"CallExpression","start":2501,"end":3261,"callee":{"type":"MemberExpression","start":2501,"end":2525,"object":{"type":"MemberExpression","start":2501,"end":2517,"object":{"type":"ThisExpression","start":2501,"end":2505},"property":{"type":"Identifier","start":2506,"end":2517,"name":"_categories"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2518,"end":2525,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":2526,"end":3260,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2527,"end":2535,"name":"category"}],"body":{"type":"BlockStatement","start":2540,"end":3260,"body":[{"type":"VariableDeclaration","start":2555,"end":2577,"declarations":[{"type":"VariableDeclarator","start":2559,"end":2576,"id":{"type":"Identifier","start":2559,"end":2576,"name":"translatedMessage"},"init":null}],"kind":"let"},{"type":"VariableDeclaration","start":2591,"end":2658,"declarations":[{"type":"VariableDeclarator","start":2597,"end":2657,"id":{"type":"Identifier","start":2597,"end":2619,"name":"translationForCategory"},"init":{"type":"MemberExpression","start":2622,"end":2657,"object":{"type":"Identifier","start":2622,"end":2633,"name":"translation"},"property":{"type":"CallExpression","start":2634,"end":2656,"callee":{"type":"MemberExpression","start":2634,"end":2654,"object":{"type":"Identifier","start":2634,"end":2642,"name":"category"},"property":{"type":"Identifier","start":2643,"end":2654,"name":"getCategory"},"computed":false,"optional":false},"arguments":[],"optional":false},"computed":true,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":2672,"end":3172,"test":{"type":"CallExpression","start":2676,"end":2717,"callee":{"type":"Identifier","start":2676,"end":2693,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":2694,"end":2716,"name":"translationForCategory"}],"optional":false},"consequent":{"type":"BlockStatement","start":2719,"end":2805,"body":[{"type":"ExpressionStatement","start":2738,"end":2790,"expression":{"type":"AssignmentExpression","start":2738,"end":2789,"operator":"=","left":{"type":"Identifier","start":2738,"end":2755,"name":"translatedMessage"},"right":{"type":"CallExpression","start":2758,"end":2789,"callee":{"type":"MemberExpression","start":2758,"end":2787,"object":{"type":"Identifier","start":2758,"end":2766,"name":"category"},"property":{"type":"Identifier","start":2767,"end":2787,"name":"getMessageNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":{"type":"IfStatement","start":2824,"end":3172,"test":{"type":"CallExpression","start":2828,"end":2860,"callee":{"type":"Identifier","start":2828,"end":2836,"name":"isString"},"arguments":[{"type":"Identifier","start":2837,"end":2859,"name":"translationForCategory"}],"optional":false},"consequent":{"type":"BlockStatement","start":2862,"end":3048,"body":[{"type":"ExpressionStatement","start":2881,"end":2930,"expression":{"type":"CallExpression","start":2881,"end":2929,"callee":{"type":"MemberExpression","start":2881,"end":2905,"object":{"type":"Identifier","start":2881,"end":2901,"name":"translatedCategories"},"property":{"type":"Identifier","start":2902,"end":2905,"name":"add"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2906,"end":2928,"callee":{"type":"MemberExpression","start":2906,"end":2926,"object":{"type":"Identifier","start":2906,"end":2914,"name":"category"},"property":{"type":"Identifier","start":2915,"end":2926,"name":"getCategory"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":2948,"end":3033,"expression":{"type":"AssignmentExpression","start":2948,"end":3032,"operator":"=","left":{"type":"Identifier","start":2948,"end":2965,"name":"translatedMessage"},"right":{"type":"CallExpression","start":2968,"end":3032,"callee":{"type":"MemberExpression","start":2968,"end":3002,"object":{"type":"MemberExpression","start":2968,"end":2980,"object":{"type":"ThisExpression","start":2968,"end":2972},"property":{"type":"Identifier","start":2973,"end":2980,"name":"_parser"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2981,"end":3002,"name":"parseNormalizedString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3003,"end":3025,"name":"translationForCategory"},{"type":"Literal","start":3027,"end":3031,"value":null,"raw":"null"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":3067,"end":3172,"body":[{"type":"ExpressionStatement","start":3132,"end":3157,"expression":{"type":"AssignmentExpression","start":3132,"end":3156,"operator":"=","left":{"type":"Identifier","start":3132,"end":3149,"name":"translatedMessage"},"right":{"type":"Literal","start":3152,"end":3156,"value":null,"raw":"null"}}}]}}},{"type":"ExpressionStatement","start":3186,"end":3249,"expression":{"type":"CallExpression","start":3186,"end":3248,"callee":{"type":"MemberExpression","start":3186,"end":3205,"object":{"type":"Identifier","start":3186,"end":3193,"name":"message"},"property":{"type":"Identifier","start":3194,"end":3205,"name":"addCategory"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3206,"end":3228,"callee":{"type":"MemberExpression","start":3206,"end":3226,"object":{"type":"Identifier","start":3206,"end":3214,"name":"category"},"property":{"type":"Identifier","start":3215,"end":3226,"name":"getCategory"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"Identifier","start":3230,"end":3247,"name":"translatedMessage"}],"optional":false}}]}}],"optional":false}},{"type":"ExpressionStatement","start":3343,"end":4046,"expression":{"type":"CallExpression","start":3343,"end":4045,"callee":{"type":"MemberExpression","start":3343,"end":3375,"object":{"type":"CallExpression","start":3343,"end":3367,"callee":{"type":"MemberExpression","start":3343,"end":3354,"object":{"type":"Identifier","start":3343,"end":3349,"name":"Object"},"property":{"type":"Identifier","start":3350,"end":3354,"name":"keys"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3355,"end":3366,"name":"translation"}],"optional":false},"property":{"type":"Identifier","start":3368,"end":3375,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":3376,"end":4044,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3377,"end":3389,"name":"categoryName"}],"body":{"type":"BlockStatement","start":3394,"end":4044,"body":[{"type":"IfStatement","start":3409,"end":4033,"test":{"type":"UnaryExpression","start":3413,"end":3452,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":3414,"end":3452,"callee":{"type":"MemberExpression","start":3414,"end":3438,"object":{"type":"Identifier","start":3414,"end":3434,"name":"translatedCategories"},"property":{"type":"Identifier","start":3435,"end":3438,"name":"has"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3439,"end":3451,"name":"categoryName"}],"optional":false}},"consequent":{"type":"BlockStatement","start":3454,"end":4033,"body":[{"type":"IfStatement","start":3473,"end":4018,"test":{"type":"CallExpression","start":3477,"end":3499,"callee":{"type":"MemberExpression","start":3477,"end":3497,"object":{"type":"ThisExpression","start":3477,"end":3481},"property":{"type":"Identifier","start":3482,"end":3497,"name":"isSelectMessage"},"computed":false,"optional":false},"arguments":[],"optional":false},"consequent":{"type":"BlockStatement","start":3501,"end":3668,"body":[{"type":"ThrowStatement","start":3524,"end":3649,"argument":{"type":"NewExpression","start":3530,"end":3648,"callee":{"type":"Identifier","start":3534,"end":3539,"name":"Error"},"arguments":[{"type":"CallExpression","start":3540,"end":3647,"callee":{"type":"Identifier","start":3540,"end":3546,"name":"format"},"arguments":[{"type":"Literal","start":3547,"end":3632,"value":"adding a new category not allowed for select messages (\"%s\" is not part of message)","raw":"'adding a new category not allowed for select messages (\"%s\" is not part of message)'"},{"type":"Identifier","start":3634,"end":3646,"name":"categoryName"}],"optional":false}]}}]},"alternate":{"type":"BlockStatement","start":3691,"end":4018,"body":[{"type":"ExpressionStatement","start":3714,"end":3758,"expression":{"type":"CallExpression","start":3714,"end":3757,"callee":{"type":"MemberExpression","start":3714,"end":3743,"object":{"type":"ThisExpression","start":3714,"end":3718},"property":{"type":"Identifier","start":3719,"end":3743,"name":"checkValidPluralCategory"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3744,"end":3756,"name":"categoryName"}],"optional":false}},{"type":"VariableDeclaration","start":3830,"end":3924,"declarations":[{"type":"VariableDeclarator","start":3836,"end":3923,"id":{"type":"Identifier","start":3836,"end":3853,"name":"translatedMessage"},"init":{"type":"CallExpression","start":3856,"end":3923,"callee":{"type":"MemberExpression","start":3856,"end":3890,"object":{"type":"MemberExpression","start":3856,"end":3868,"object":{"type":"ThisExpression","start":3856,"end":3860},"property":{"type":"Identifier","start":3861,"end":3868,"name":"_parser"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3869,"end":3890,"name":"parseNormalizedString"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3891,"end":3916,"object":{"type":"Identifier","start":3891,"end":3902,"name":"translation"},"property":{"type":"Identifier","start":3903,"end":3915,"name":"categoryName"},"computed":true,"optional":false},{"type":"Literal","start":3918,"end":3922,"value":null,"raw":"null"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":3946,"end":3999,"expression":{"type":"CallExpression","start":3946,"end":3998,"callee":{"type":"MemberExpression","start":3946,"end":3965,"object":{"type":"Identifier","start":3946,"end":3953,"name":"message"},"property":{"type":"Identifier","start":3954,"end":3965,"name":"addCategory"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3966,"end":3978,"name":"categoryName"},{"type":"Identifier","start":3980,"end":3997,"name":"translatedMessage"}],"optional":false}}]}}]},"alternate":null}]}}],"optional":false}},{"type":"ReturnStatement","start":4056,"end":4071,"argument":{"type":"Identifier","start":4063,"end":4070,"name":"message"}}]}}},{"type":"MethodDefinition","start":4329,"end":4754,"static":false,"computed":false,"key":{"type":"Identifier","start":4329,"end":4353,"name":"checkValidPluralCategory"},"kind":"method","value":{"type":"FunctionExpression","start":4353,"end":4754,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4354,"end":4366,"name":"categoryName"}],"body":{"type":"BlockStatement","start":4368,"end":4754,"body":[{"type":"VariableDeclaration","start":4379,"end":4450,"declarations":[{"type":"VariableDeclarator","start":4385,"end":4449,"id":{"type":"Identifier","start":4385,"end":4400,"name":"allowedKeywords"},"init":{"type":"ArrayExpression","start":4403,"end":4449,"elements":[{"type":"Literal","start":4404,"end":4410,"value":"zero","raw":"'zero'"},{"type":"Literal","start":4412,"end":4417,"value":"one","raw":"'one'"},{"type":"Literal","start":4419,"end":4424,"value":"two","raw":"'two'"},{"type":"Literal","start":4426,"end":4431,"value":"few","raw":"'few'"},{"type":"Literal","start":4433,"end":4439,"value":"many","raw":"'many'"},{"type":"Literal","start":4441,"end":4448,"value":"other","raw":"'other'"}]}}],"kind":"const"},{"type":"IfStatement","start":4460,"end":4525,"test":{"type":"CallExpression","start":4464,"end":4490,"callee":{"type":"MemberExpression","start":4464,"end":4482,"object":{"type":"Identifier","start":4464,"end":4476,"name":"categoryName"},"property":{"type":"Identifier","start":4477,"end":4482,"name":"match"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4483,"end":4489,"value":{},"raw":"/=\\d+/","regex":{"pattern":"=\\d+","flags":""}}],"optional":false},"consequent":{"type":"BlockStatement","start":4492,"end":4525,"body":[{"type":"ReturnStatement","start":4507,"end":4514,"argument":null}]},"alternate":null},{"type":"IfStatement","start":4535,"end":4625,"test":{"type":"CallExpression","start":4539,"end":4590,"callee":{"type":"MemberExpression","start":4539,"end":4559,"object":{"type":"Identifier","start":4539,"end":4554,"name":"allowedKeywords"},"property":{"type":"Identifier","start":4555,"end":4559,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":4560,"end":4589,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":4561,"end":4564,"name":"key"}],"body":{"type":"BinaryExpression","start":4569,"end":4589,"left":{"type":"Identifier","start":4569,"end":4572,"name":"key"},"operator":"===","right":{"type":"Identifier","start":4577,"end":4589,"name":"categoryName"}}}],"optional":false},"consequent":{"type":"BlockStatement","start":4592,"end":4625,"body":[{"type":"ReturnStatement","start":4607,"end":4614,"argument":null}]},"alternate":null},{"type":"ThrowStatement","start":4635,"end":4747,"argument":{"type":"NewExpression","start":4641,"end":4746,"callee":{"type":"Identifier","start":4645,"end":4650,"name":"Error"},"arguments":[{"type":"CallExpression","start":4651,"end":4745,"callee":{"type":"Identifier","start":4651,"end":4657,"name":"format"},"arguments":[{"type":"Literal","start":4658,"end":4713,"value":"invalid plural category \"%s\", allowed are =<n> and %s","raw":"'invalid plural category \"%s\", allowed are =<n> and %s'"},{"type":"Identifier","start":4715,"end":4727,"name":"categoryName"},{"type":"Identifier","start":4729,"end":4744,"name":"allowedKeywords"}],"optional":false}]}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":4759,"end":16445}]},"code":"import { format } from 'util';\r\nimport { isNullOrUndefined, isString } from 'is-what';\r\nclass MessageCategory {\r\n    constructor(_category, _message) {\r\n        this._category = _category;\r\n        this._message = _message;\r\n    }\r\n    getCategory() {\r\n        return this._category;\r\n    }\r\n    getMessageNormalized() {\r\n        return this._message;\r\n    }\r\n}\r\n/**\r\n * Implementation of an ICU Message.\r\n * Created by martin on 05.06.2017.\r\n */\r\nexport class ICUMessage {\r\n    constructor(_parser, isPluralMessage) {\r\n        this._parser = _parser;\r\n        this._isPluralMessage = isPluralMessage;\r\n        this._categories = [];\r\n    }\r\n    addCategory(category, message) {\r\n        this._categories.push(new MessageCategory(category, message));\r\n    }\r\n    /**\r\n     * ICU message as native string.\r\n     * This is, how it is stored, something like '{x, plural, =0 {..}'\r\n     * @return ICU message as native string.\r\n     */\r\n    asNativeString() {\r\n        const varname = (this.isPluralMessage()) ? 'VAR_PLURAL' : 'VAR_SELECT';\r\n        const type = (this.isPluralMessage()) ? 'plural' : 'select';\r\n        let choiceString = '';\r\n        this._categories.forEach((category) => {\r\n            choiceString = choiceString + format(' %s {%s}', category.getCategory(), category.getMessageNormalized().asNativeString());\r\n        });\r\n        return format('{%s, %s,%s}', varname, type, choiceString);\r\n    }\r\n    /**\r\n     * Is it a plural message?\r\n     */\r\n    isPluralMessage() {\r\n        return this._isPluralMessage;\r\n    }\r\n    /**\r\n     * Is it a select message?\r\n     */\r\n    isSelectMessage() {\r\n        return !this._isPluralMessage;\r\n    }\r\n    /**\r\n     * All the parts of the message.\r\n     * E.g. the ICU message {wolves, plural, =0 {no wolves} =1 {one wolf} =2 {two wolves} other {a wolf pack}}\r\n     * has 4 category objects with the categories =0, =1, =2, other.\r\n     */\r\n    getCategories() {\r\n        return this._categories;\r\n    }\r\n    /**\r\n     * Translate message and return a new, translated message\r\n     * @param translation the translation (hashmap of categories and translations).\r\n     * @return new message wit translated content.\r\n     * @throws an error if translation does not match the message.\r\n     * This is the case, if there are categories not contained in the original message.\r\n     */\r\n    translate(translation) {\r\n        const message = new ICUMessage(this._parser, this.isPluralMessage());\r\n        const translatedCategories = new Set();\r\n        this._categories.forEach((category) => {\r\n            let translatedMessage;\r\n            const translationForCategory = translation[category.getCategory()];\r\n            if (isNullOrUndefined(translationForCategory)) {\r\n                translatedMessage = category.getMessageNormalized();\r\n            }\r\n            else if (isString(translationForCategory)) {\r\n                translatedCategories.add(category.getCategory());\r\n                translatedMessage = this._parser.parseNormalizedString(translationForCategory, null);\r\n            }\r\n            else {\r\n                // TODO embedded ICU Message\r\n                translatedMessage = null;\r\n            }\r\n            message.addCategory(category.getCategory(), translatedMessage);\r\n        });\r\n        // new categories, which are not part of the original message\r\n        Object.keys(translation).forEach((categoryName) => {\r\n            if (!translatedCategories.has(categoryName)) {\r\n                if (this.isSelectMessage()) {\r\n                    throw new Error(format('adding a new category not allowed for select messages (\"%s\" is not part of message)', categoryName));\r\n                }\r\n                else {\r\n                    this.checkValidPluralCategory(categoryName);\r\n                    // TODO embedded ICU Message\r\n                    const translatedMessage = this._parser.parseNormalizedString(translation[categoryName], null);\r\n                    message.addCategory(categoryName, translatedMessage);\r\n                }\r\n            }\r\n        });\r\n        return message;\r\n    }\r\n    /**\r\n     * Check, wether category is valid plural category.\r\n     * Allowed are =n, 'zero', 'one', 'two', 'few', 'many' and 'other'\r\n     * @param categoryName category\r\n     * @throws an error, if it is not a valid category name\r\n     */\r\n    checkValidPluralCategory(categoryName) {\r\n        const allowedKeywords = ['zero', 'one', 'two', 'few', 'many', 'other'];\r\n        if (categoryName.match(/=\\d+/)) {\r\n            return;\r\n        }\r\n        if (allowedKeywords.find((key) => key === categoryName)) {\r\n            return;\r\n        }\r\n        throw new Error(format('invalid plural category \"%s\", allowed are =<n> and %s', categoryName, allowedKeywords));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["util","is-what"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\icu-message.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { format } from 'util';\r\nimport { isNullOrUndefined, isString } from 'is-what';\r\nclass MessageCategory {\r\n    constructor(_category, _message) {\r\n        this._category = _category;\r\n        this._message = _message;\r\n    }\r\n    getCategory() {\r\n        return this._category;\r\n    }\r\n    getMessageNormalized() {\r\n        return this._message;\r\n    }\r\n}\r\n/**\r\n * Implementation of an ICU Message.\r\n * Created by martin on 05.06.2017.\r\n */\r\nexport class ICUMessage {\r\n    constructor(_parser, isPluralMessage) {\r\n        this._parser = _parser;\r\n        this._isPluralMessage = isPluralMessage;\r\n        this._categories = [];\r\n    }\r\n    addCategory(category, message) {\r\n        this._categories.push(new MessageCategory(category, message));\r\n    }\r\n    /**\r\n     * ICU message as native string.\r\n     * This is, how it is stored, something like '{x, plural, =0 {..}'\r\n     * @return ICU message as native string.\r\n     */\r\n    asNativeString() {\r\n        const varname = (this.isPluralMessage()) ? 'VAR_PLURAL' : 'VAR_SELECT';\r\n        const type = (this.isPluralMessage()) ? 'plural' : 'select';\r\n        let choiceString = '';\r\n        this._categories.forEach((category) => {\r\n            choiceString = choiceString + format(' %s {%s}', category.getCategory(), category.getMessageNormalized().asNativeString());\r\n        });\r\n        return format('{%s, %s,%s}', varname, type, choiceString);\r\n    }\r\n    /**\r\n     * Is it a plural message?\r\n     */\r\n    isPluralMessage() {\r\n        return this._isPluralMessage;\r\n    }\r\n    /**\r\n     * Is it a select message?\r\n     */\r\n    isSelectMessage() {\r\n        return !this._isPluralMessage;\r\n    }\r\n    /**\r\n     * All the parts of the message.\r\n     * E.g. the ICU message {wolves, plural, =0 {no wolves} =1 {one wolf} =2 {two wolves} other {a wolf pack}}\r\n     * has 4 category objects with the categories =0, =1, =2, other.\r\n     */\r\n    getCategories() {\r\n        return this._categories;\r\n    }\r\n    /**\r\n     * Translate message and return a new, translated message\r\n     * @param translation the translation (hashmap of categories and translations).\r\n     * @return new message wit translated content.\r\n     * @throws an error if translation does not match the message.\r\n     * This is the case, if there are categories not contained in the original message.\r\n     */\r\n    translate(translation) {\r\n        const message = new ICUMessage(this._parser, this.isPluralMessage());\r\n        const translatedCategories = new Set();\r\n        this._categories.forEach((category) => {\r\n            let translatedMessage;\r\n            const translationForCategory = translation[category.getCategory()];\r\n            if (isNullOrUndefined(translationForCategory)) {\r\n                translatedMessage = category.getMessageNormalized();\r\n            }\r\n            else if (isString(translationForCategory)) {\r\n                translatedCategories.add(category.getCategory());\r\n                translatedMessage = this._parser.parseNormalizedString(translationForCategory, null);\r\n            }\r\n            else {\r\n                // TODO embedded ICU Message\r\n                translatedMessage = null;\r\n            }\r\n            message.addCategory(category.getCategory(), translatedMessage);\r\n        });\r\n        // new categories, which are not part of the original message\r\n        Object.keys(translation).forEach((categoryName) => {\r\n            if (!translatedCategories.has(categoryName)) {\r\n                if (this.isSelectMessage()) {\r\n                    throw new Error(format('adding a new category not allowed for select messages (\"%s\" is not part of message)', categoryName));\r\n                }\r\n                else {\r\n                    this.checkValidPluralCategory(categoryName);\r\n                    // TODO embedded ICU Message\r\n                    const translatedMessage = this._parser.parseNormalizedString(translation[categoryName], null);\r\n                    message.addCategory(categoryName, translatedMessage);\r\n                }\r\n            }\r\n        });\r\n        return message;\r\n    }\r\n    /**\r\n     * Check, wether category is valid plural category.\r\n     * Allowed are =n, 'zero', 'one', 'two', 'few', 'many' and 'other'\r\n     * @param categoryName category\r\n     * @throws an error, if it is not a valid category name\r\n     */\r\n    checkValidPluralCategory(categoryName) {\r\n        const allowedKeywords = ['zero', 'one', 'two', 'few', 'many', 'other'];\r\n        if (categoryName.match(/=\\d+/)) {\r\n            return;\r\n        }\r\n        if (allowedKeywords.find((key) => key === categoryName)) {\r\n            return;\r\n        }\r\n        throw new Error(format('invalid plural category \"%s\", allowed are =<n> and %s', categoryName, allowedKeywords));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"icu-message.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/icu-message.ts"],"names":[],"mappings":[[[0,0,1,0],[7,0,1,7],[9,0,1,8],[15,0,1,14],[17,0,1,15],[23,0,1,21],[29,0,1,27],[30,0,1,28]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[26,0,2,25],[28,0,2,27],[36,0,2,35],[38,0,2,36],[44,0,2,42],[53,0,2,51],[54,0,2,52]],[[0,0,5,0],[6,0,5,6],[21,0,5,21]],[[4,0,7,4],[16,0,7,24],[25,0,7,41],[27,0,7,51],[35,0,7,79]],[[8,0,7,24],[22,0,7,33],[25,0,7,24],[34,0,7,33],[35,0,7,41]],[[8,0,7,51],[21,0,7,59],[24,0,7,51],[32,0,7,59],[33,0,7,79]],[[4,0,7,82],[5,0,7,83]],[[4,0,9,11],[15,0,9,22]],[[8,0,10,8],[15,0,10,15],[19,0,10,19],[20,0,10,20],[29,0,10,29],[30,0,10,30]],[[4,0,11,4],[5,0,11,5]],[[4,0,13,11],[24,0,13,31]],[[8,0,14,8],[15,0,14,15],[19,0,14,19],[20,0,14,20],[28,0,14,28],[29,0,14,29]],[[4,0,15,4],[5,0,15,5]],[[1,0,16,1]],[[0,0,18,0]],[],[],[[3,0,21,3]],[[0,0,22,0],[6,0,22,6],[13,0,22,13],[23,0,22,23]],[[4,0,28,4],[16,0,28,24],[23,0,28,47],[25,0,28,49],[40,0,28,73]],[[8,0,28,24],[20,0,28,31],[23,0,28,24],[30,0,28,31],[31,0,28,47]],[[8,0,29,8],[12,0,29,12],[13,0,29,13],[29,0,29,29],[32,0,29,32],[47,0,29,47],[48,0,29,48]],[[8,0,30,8],[12,0,30,12],[13,0,30,13],[24,0,30,24],[27,0,30,27],[29,0,30,29],[30,0,30,30]],[[4,0,31,4],[5,0,31,5]],[[4,0,33,4],[15,0,33,15],[16,0,33,16],[24,0,33,32],[26,0,33,34],[33,0,33,61]],[[8,0,34,8],[12,0,34,12],[13,0,34,13],[24,0,34,24],[25,0,34,25],[29,0,34,29],[30,0,34,30],[34,0,34,34],[49,0,34,49],[50,0,34,50],[58,0,34,58],[60,0,34,60],[67,0,34,67],[68,0,34,68],[69,0,34,69],[70,0,34,70]],[[4,0,35,4],[5,0,35,5]],[[4,0,37,4]],[],[],[],[[7,0,41,7]],[[4,0,42,11],[18,0,42,25]],[[8,0,43,8],[14,0,43,14],[21,0,43,21],[24,0,43,24],[25,0,43,25],[29,0,43,29],[30,0,43,30],[45,0,43,45],[47,0,43,47],[48,0,43,48],[49,0,43,49],[50,0,43,50],[51,0,43,51],[63,0,43,63],[64,0,43,64],[65,0,43,65],[66,0,43,66],[78,0,43,78],[79,0,43,79]],[[8,0,44,8],[14,0,44,14],[18,0,44,18],[21,0,44,21],[22,0,44,22],[26,0,44,26],[27,0,44,27],[42,0,44,42],[44,0,44,44],[45,0,44,45],[46,0,44,46],[47,0,44,47],[48,0,44,48],[56,0,44,56],[57,0,44,57],[58,0,44,58],[59,0,44,59],[67,0,44,67],[68,0,44,68]],[[8,0,45,8],[12,0,45,12],[24,0,45,24],[27,0,45,27],[29,0,45,29],[30,0,45,30]],[[8,0,46,8],[12,0,46,12],[13,0,46,13],[24,0,46,24],[25,0,46,25],[32,0,46,32],[33,0,46,33],[34,0,46,34],[42,0,46,63],[44,0,46,65],[46,0,46,67]],[[12,0,47,12],[24,0,47,24],[27,0,47,27],[39,0,47,39],[42,0,47,42],[48,0,47,48],[49,0,47,49],[59,0,47,59],[61,0,47,61],[69,0,47,69],[70,0,47,70],[81,0,47,81],[83,0,47,83],[85,0,47,85],[93,0,47,93],[94,0,47,94],[114,0,47,114],[116,0,47,116],[117,0,47,117],[131,0,47,131],[133,0,47,133],[134,0,47,134],[135,0,47,135]],[[8,0,48,8],[9,0,48,9],[10,0,48,10],[11,0,48,11]],[[8,0,49,8],[15,0,49,15],[21,0,49,21],[22,0,49,22],[35,0,49,35],[37,0,49,37],[44,0,49,44],[46,0,49,46],[50,0,49,50],[52,0,49,52],[64,0,49,64],[65,0,49,65],[66,0,49,66]],[[4,0,50,4],[5,0,50,5]],[[4,0,52,4]],[],[[7,0,54,7]],[[4,0,55,4],[19,0,55,19]],[[8,0,56,8],[15,0,56,15],[19,0,56,19],[20,0,56,20],[36,0,56,36],[37,0,56,37]],[[4,0,57,4],[5,0,57,5]],[[4,0,59,4]],[],[[7,0,61,7]],[[4,0,62,4],[19,0,62,19]],[[8,0,63,8],[15,0,63,15],[16,0,63,16],[20,0,63,20],[21,0,63,21],[37,0,63,37],[38,0,63,38]],[[4,0,64,4],[5,0,64,5]],[[4,0,66,4]],[],[],[],[[7,0,70,7]],[[4,0,71,4],[17,0,71,17]],[[8,0,72,8],[15,0,72,15],[19,0,72,19],[20,0,72,20],[31,0,72,31],[32,0,72,32]],[[4,0,73,4],[5,0,73,5]],[[4,0,75,4]],[],[],[],[],[],[[7,0,81,7]],[[4,0,82,4],[13,0,82,13],[14,0,82,14],[25,0,82,49]],[[8,0,83,8],[14,0,83,14],[21,0,83,21],[24,0,83,24],[28,0,83,28],[38,0,83,38],[39,0,83,39],[43,0,83,43],[44,0,83,44],[51,0,83,51],[53,0,83,53],[57,0,83,57],[58,0,83,58],[73,0,83,73],[75,0,83,75],[76,0,83,76],[77,0,83,77]],[[8,0,84,8],[14,0,84,14],[34,0,84,34],[37,0,84,50],[41,0,84,54],[44,0,84,57],[46,0,84,67],[47,0,84,68]],[[8,0,85,8],[12,0,85,12],[13,0,85,13],[24,0,85,24],[25,0,85,25],[32,0,85,32],[33,0,85,33],[34,0,85,34],[42,0,85,42],[44,0,85,44],[46,0,85,46]],[[12,0,86,12],[16,0,86,16],[33,0,86,53],[34,0,86,54]],[[12,0,87,12],[18,0,87,18],[40,0,87,40],[43,0,87,74],[54,0,87,85],[55,0,87,86],[63,0,87,94],[64,0,87,95],[75,0,87,106],[77,0,87,108],[78,0,87,109],[79,0,87,110]],[[12,0,88,12],[16,0,88,16],[33,0,88,33],[34,0,88,34],[56,0,88,56],[57,0,88,57],[59,0,88,59]],[[16,0,89,16],[33,0,89,33],[36,0,89,36],[44,0,89,44],[45,0,89,45],[65,0,89,65],[67,0,89,67],[68,0,89,68]],[[13,0,90,13]],[[17,0,90,19],[21,0,90,23],[29,0,90,31],[30,0,90,32],[52,0,90,54],[53,0,90,55],[55,0,90,57]],[[16,0,91,16],[36,0,91,36],[37,0,91,37],[40,0,91,40],[41,0,91,41],[49,0,91,49],[50,0,91,50],[61,0,91,61],[63,0,91,63],[64,0,91,64],[65,0,91,65]],[[16,0,92,16],[33,0,92,33],[36,0,92,36],[40,0,92,40],[41,0,92,41],[48,0,92,48],[49,0,92,49],[70,0,92,70],[71,0,92,80],[93,0,92,102],[95,0,92,104],[99,0,92,108],[100,0,92,109],[101,0,92,110]],[[13,0,93,13]],[[17,0,93,19]],[[16,0,94,16],[44,0,94,44]],[[16,0,95,16],[33,0,95,33],[36,0,95,36],[40,0,95,40],[41,0,95,41]],[[13,0,96,13]],[[12,0,97,12],[19,0,97,19],[20,0,97,20],[31,0,97,31],[32,0,97,32],[40,0,97,40],[41,0,97,41],[52,0,97,52],[54,0,97,54],[56,0,97,56],[73,0,97,73],[74,0,97,74],[75,0,97,75]],[[8,0,98,8],[9,0,98,9],[10,0,98,10],[11,0,98,11]],[[8,0,99,8],[69,0,99,69]],[[8,0,100,8],[14,0,100,14],[15,0,100,15],[19,0,100,19],[20,0,100,20],[31,0,100,31],[32,0,100,32],[33,0,100,33],[40,0,100,40],[41,0,100,41],[42,0,100,42],[54,0,100,54],[56,0,100,56],[58,0,100,58]],[[12,0,101,12],[16,0,101,16],[17,0,101,17],[37,0,101,37],[38,0,101,38],[41,0,101,41],[42,0,101,42],[54,0,101,54],[55,0,101,55],[57,0,101,57]],[[16,0,102,16],[20,0,102,20],[24,0,102,24],[25,0,102,25],[40,0,102,40],[42,0,102,42],[44,0,102,44]],[[20,0,103,20],[26,0,103,26],[30,0,103,30],[35,0,103,35],[36,0,103,36],[42,0,103,42],[43,0,103,43],[128,0,103,128],[130,0,104,24],[142,0,104,36],[143,0,104,37],[144,0,104,38],[145,0,104,39]],[[17,0,105,17]],[[21,0,105,23]],[[20,0,106,20],[24,0,106,24],[25,0,106,25],[49,0,106,49],[50,0,106,50],[62,0,106,62],[63,0,106,63],[64,0,106,64]],[[20,0,107,20],[48,0,107,48]],[[20,0,108,20],[26,0,108,26],[43,0,108,43],[46,0,108,46],[50,0,108,50],[51,0,108,51],[58,0,108,58],[59,0,108,59],[80,0,108,80],[81,0,108,90],[92,0,108,101],[93,0,108,102],[105,0,108,114],[106,0,108,115],[108,0,108,117],[112,0,108,121],[113,0,108,122],[114,0,108,123]],[[20,0,109,20],[27,0,109,27],[28,0,109,28],[39,0,109,39],[40,0,109,40],[52,0,109,52],[54,0,109,54],[71,0,109,71],[72,0,109,72],[73,0,109,73]],[[17,0,110,17]],[[13,0,111,13]],[[8,0,112,8],[9,0,112,9],[10,0,112,10],[11,0,112,11]],[[8,0,113,8],[15,0,113,15],[22,0,113,22],[23,0,113,23]],[[4,0,114,4],[5,0,114,5]],[[4,0,116,4]],[],[],[],[],[[7,0,121,7]],[[4,0,122,12],[28,0,122,36],[29,0,122,37],[41,0,122,57]],[[8,0,123,8],[14,0,123,14],[29,0,123,29],[32,0,123,32],[33,0,123,33],[39,0,123,39],[41,0,123,41],[46,0,123,46],[48,0,123,48],[53,0,123,53],[55,0,123,55],[60,0,123,60],[62,0,123,62],[68,0,123,68],[70,0,123,70],[77,0,123,77],[78,0,123,78],[79,0,123,79]],[[8,0,124,8],[12,0,124,12],[24,0,124,24],[25,0,124,25],[30,0,124,30],[31,0,124,31],[37,0,124,37],[38,0,124,38],[40,0,124,40]],[[12,0,125,12],[19,0,125,19]],[[9,0,126,9]],[[8,0,127,8],[12,0,127,12],[27,0,127,27],[28,0,127,28],[32,0,127,32],[33,0,127,33],[34,0,127,34],[37,0,127,37],[39,0,127,39],[41,0,127,41],[42,0,127,42],[45,0,127,45],[50,0,127,50],[62,0,127,62],[63,0,127,63],[65,0,127,65]],[[12,0,128,12],[19,0,128,19]],[[9,0,129,9]],[[8,0,130,8],[14,0,130,14],[18,0,130,18],[23,0,130,23],[24,0,130,24],[30,0,130,30],[31,0,130,31],[86,0,130,86],[88,0,130,88],[100,0,130,100],[102,0,130,102],[117,0,130,117],[118,0,130,118],[119,0,130,119],[120,0,130,120]],[[4,0,131,4],[5,0,131,5]],[[1,0,132,1]]],"sourcesContent":["import {IICUMessage, IICUMessageCategory, IICUMessageTranslation, INormalizedMessage} from '../api/index';\r\nimport {format} from 'util';\r\nimport {isNullOrUndefined, isString} from 'is-what';\r\nimport {IMessageParser} from './i-message-parser';\r\n\r\nclass MessageCategory implements IICUMessageCategory {\r\n\r\n    constructor(private _category: string, private _message: INormalizedMessage) {}\r\n\r\n    public getCategory(): string {\r\n        return this._category;\r\n    }\r\n\r\n    public getMessageNormalized(): INormalizedMessage {\r\n        return this._message;\r\n    }\r\n}\r\n\r\n/**\r\n * Implementation of an ICU Message.\r\n * Created by martin on 05.06.2017.\r\n */\r\nexport class ICUMessage implements IICUMessage {\r\n\r\n    private _isPluralMessage: boolean;\r\n\r\n    private _categories: IICUMessageCategory[];\r\n\r\n    constructor(private _parser: IMessageParser, isPluralMessage: boolean) {\r\n        this._isPluralMessage = isPluralMessage;\r\n        this._categories = [];\r\n    }\r\n\r\n    addCategory(category: string, message: INormalizedMessage) {\r\n        this._categories.push(new MessageCategory(category, message));\r\n    }\r\n\r\n    /**\r\n     * ICU message as native string.\r\n     * This is, how it is stored, something like '{x, plural, =0 {..}'\r\n     * @return ICU message as native string.\r\n     */\r\n    public asNativeString(): string {\r\n        const varname = (this.isPluralMessage()) ? 'VAR_PLURAL' : 'VAR_SELECT';\r\n        const type = (this.isPluralMessage()) ? 'plural' : 'select';\r\n        let choiceString = '';\r\n        this._categories.forEach((category: IICUMessageCategory) => {\r\n            choiceString = choiceString + format(' %s {%s}', category.getCategory(), category.getMessageNormalized().asNativeString());\r\n        });\r\n        return format('{%s, %s,%s}', varname, type, choiceString);\r\n    }\r\n\r\n    /**\r\n     * Is it a plural message?\r\n     */\r\n    isPluralMessage(): boolean {\r\n        return this._isPluralMessage;\r\n    }\r\n\r\n    /**\r\n     * Is it a select message?\r\n     */\r\n    isSelectMessage(): boolean {\r\n        return !this._isPluralMessage;\r\n    }\r\n\r\n    /**\r\n     * All the parts of the message.\r\n     * E.g. the ICU message {wolves, plural, =0 {no wolves} =1 {one wolf} =2 {two wolves} other {a wolf pack}}\r\n     * has 4 category objects with the categories =0, =1, =2, other.\r\n     */\r\n    getCategories(): IICUMessageCategory[] {\r\n        return this._categories;\r\n    }\r\n\r\n    /**\r\n     * Translate message and return a new, translated message\r\n     * @param translation the translation (hashmap of categories and translations).\r\n     * @return new message wit translated content.\r\n     * @throws an error if translation does not match the message.\r\n     * This is the case, if there are categories not contained in the original message.\r\n     */\r\n    translate(translation: IICUMessageTranslation): IICUMessage {\r\n        const message = new ICUMessage(this._parser, this.isPluralMessage());\r\n        const translatedCategories: Set<string> = new Set<string>();\r\n        this._categories.forEach((category) => {\r\n            let translatedMessage: INormalizedMessage;\r\n            const translationForCategory: string|IICUMessageTranslation = translation[category.getCategory()];\r\n            if (isNullOrUndefined(translationForCategory)) {\r\n                translatedMessage = category.getMessageNormalized();\r\n            } else if (isString(translationForCategory)) {\r\n                translatedCategories.add(category.getCategory());\r\n                translatedMessage = this._parser.parseNormalizedString(<string> translationForCategory, null);\r\n            } else {\r\n                // TODO embedded ICU Message\r\n                translatedMessage = null;\r\n            }\r\n            message.addCategory(category.getCategory(), translatedMessage);\r\n        });\r\n        // new categories, which are not part of the original message\r\n        Object.keys(translation).forEach((categoryName) => {\r\n            if (!translatedCategories.has(categoryName)) {\r\n                if (this.isSelectMessage()) {\r\n                    throw new Error(format('adding a new category not allowed for select messages (\"%s\" is not part of message)',\r\n                        categoryName));\r\n                } else {\r\n                    this.checkValidPluralCategory(categoryName);\r\n                    // TODO embedded ICU Message\r\n                    const translatedMessage = this._parser.parseNormalizedString(<string> translation[categoryName], null);\r\n                    message.addCategory(categoryName, translatedMessage);\r\n                }\r\n            }\r\n        });\r\n        return message;\r\n    }\r\n\r\n    /**\r\n     * Check, wether category is valid plural category.\r\n     * Allowed are =n, 'zero', 'one', 'two', 'few', 'many' and 'other'\r\n     * @param categoryName category\r\n     * @throws an error, if it is not a valid category name\r\n     */\r\n    private checkValidPluralCategory(categoryName: string) {\r\n        const allowedKeywords = ['zero', 'one', 'two', 'few', 'many', 'other'];\r\n        if (categoryName.match(/=\\d+/)) {\r\n            return;\r\n        }\r\n        if (allowedKeywords.find((key) => key === categoryName)) {\r\n            return;\r\n        }\r\n        throw new Error(format('invalid plural category \"%s\", allowed are =<n> and %s', categoryName, allowedKeywords));\r\n    }\r\n}\r\n"]},"resolvedIds":{"util":{"external":true,"id":"util","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"is-what":{"external":true,"id":"is-what","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":17034,"body":[{"type":"ImportDeclaration","start":0,"end":81,"specifiers":[{"type":"ImportSpecifier","start":9,"end":26,"imported":{"type":"Identifier","start":9,"end":26,"name":"ParsedMessagePart"},"local":{"type":"Identifier","start":9,"end":26,"name":"ParsedMessagePart"}},{"type":"ImportSpecifier","start":28,"end":49,"imported":{"type":"Identifier","start":28,"end":49,"name":"ParsedMessagePartType"},"local":{"type":"Identifier","start":28,"end":49,"name":"ParsedMessagePartType"}}],"source":{"type":"Literal","start":57,"end":80,"value":"./parsed-message-part","raw":"'./parsed-message-part'"}},{"type":"ImportDeclaration","start":83,"end":211,"specifiers":[{"type":"ImportSpecifier","start":92,"end":97,"imported":{"type":"Identifier","start":92,"end":97,"name":"COMMA"},"local":{"type":"Identifier","start":92,"end":97,"name":"COMMA"}},{"type":"ImportSpecifier","start":99,"end":116,"imported":{"type":"Identifier","start":99,"end":116,"name":"CURLY_BRACE_CLOSE"},"local":{"type":"Identifier","start":99,"end":116,"name":"CURLY_BRACE_CLOSE"}},{"type":"ImportSpecifier","start":118,"end":134,"imported":{"type":"Identifier","start":118,"end":134,"name":"CURLY_BRACE_OPEN"},"local":{"type":"Identifier","start":118,"end":134,"name":"CURLY_BRACE_OPEN"}},{"type":"ImportSpecifier","start":136,"end":155,"imported":{"type":"Identifier","start":136,"end":155,"name":"ICUMessageTokenizer"},"local":{"type":"Identifier","start":136,"end":155,"name":"ICUMessageTokenizer"}},{"type":"ImportSpecifier","start":157,"end":163,"imported":{"type":"Identifier","start":157,"end":163,"name":"PLURAL"},"local":{"type":"Identifier","start":157,"end":163,"name":"PLURAL"}},{"type":"ImportSpecifier","start":165,"end":171,"imported":{"type":"Identifier","start":165,"end":171,"name":"SELECT"},"local":{"type":"Identifier","start":165,"end":171,"name":"SELECT"}},{"type":"ImportSpecifier","start":173,"end":177,"imported":{"type":"Identifier","start":173,"end":177,"name":"TEXT"},"local":{"type":"Identifier","start":173,"end":177,"name":"TEXT"}}],"source":{"type":"Literal","start":185,"end":210,"value":"./icu-message-tokenizer","raw":"'./icu-message-tokenizer'"}},{"type":"ImportDeclaration","start":213,"end":256,"specifiers":[{"type":"ImportSpecifier","start":222,"end":232,"imported":{"type":"Identifier","start":222,"end":232,"name":"ICUMessage"},"local":{"type":"Identifier","start":222,"end":232,"name":"ICUMessage"}}],"source":{"type":"Literal","start":240,"end":255,"value":"./icu-message","raw":"'./icu-message'"}},{"type":"ImportDeclaration","start":258,"end":288,"specifiers":[{"type":"ImportSpecifier","start":267,"end":273,"imported":{"type":"Identifier","start":267,"end":273,"name":"format"},"local":{"type":"Identifier","start":267,"end":273,"name":"format"}}],"source":{"type":"Literal","start":281,"end":287,"value":"util","raw":"'util'"}},{"type":"ExportNamedDeclaration","start":545,"end":4982,"declaration":{"type":"ClassDeclaration","start":552,"end":4982,"id":{"type":"Identifier","start":558,"end":585,"name":"ParsedMessagePartICUMessage"},"superClass":{"type":"Identifier","start":594,"end":611,"name":"ParsedMessagePart"},"body":{"type":"ClassBody","start":612,"end":4982,"body":[{"type":"MethodDefinition","start":619,"end":841,"static":false,"computed":false,"key":{"type":"Identifier","start":619,"end":630,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":630,"end":841,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":631,"end":645,"name":"icuMessageText"},{"type":"Identifier","start":647,"end":654,"name":"_parser"}],"body":{"type":"BlockStatement","start":656,"end":841,"body":[{"type":"ExpressionStatement","start":667,"end":708,"expression":{"type":"CallExpression","start":667,"end":707,"callee":{"type":"Super","start":667,"end":672},"arguments":[{"type":"MemberExpression","start":673,"end":706,"object":{"type":"Identifier","start":673,"end":694,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":695,"end":706,"name":"ICU_MESSAGE"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":718,"end":741,"expression":{"type":"AssignmentExpression","start":718,"end":740,"operator":"=","left":{"type":"MemberExpression","start":718,"end":730,"object":{"type":"ThisExpression","start":718,"end":722},"property":{"type":"Identifier","start":723,"end":730,"name":"_parser"},"computed":false,"optional":false},"right":{"type":"Identifier","start":733,"end":740,"name":"_parser"}}},{"type":"IfStatement","start":751,"end":834,"test":{"type":"Identifier","start":755,"end":769,"name":"icuMessageText"},"consequent":{"type":"BlockStatement","start":771,"end":834,"body":[{"type":"ExpressionStatement","start":786,"end":823,"expression":{"type":"CallExpression","start":786,"end":822,"callee":{"type":"MemberExpression","start":786,"end":806,"object":{"type":"ThisExpression","start":786,"end":790},"property":{"type":"Identifier","start":791,"end":806,"name":"parseICUMessage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":807,"end":821,"name":"icuMessageText"}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":1111,"end":1287,"static":true,"computed":false,"key":{"type":"Identifier","start":1118,"end":1137,"name":"looksLikeICUMessage"},"kind":"method","value":{"type":"FunctionExpression","start":1137,"end":1287,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1138,"end":1152,"name":"icuMessageText"}],"body":{"type":"BlockStatement","start":1154,"end":1287,"body":[{"type":"VariableDeclaration","start":1165,"end":1222,"declarations":[{"type":"VariableDeclarator","start":1171,"end":1221,"id":{"type":"Identifier","start":1171,"end":1175,"name":"part"},"init":{"type":"NewExpression","start":1178,"end":1221,"callee":{"type":"Identifier","start":1182,"end":1209,"name":"ParsedMessagePartICUMessage"},"arguments":[{"type":"Literal","start":1210,"end":1214,"value":null,"raw":"null"},{"type":"Literal","start":1216,"end":1220,"value":null,"raw":"null"}]}}],"kind":"const"},{"type":"ReturnStatement","start":1232,"end":1280,"argument":{"type":"CallExpression","start":1239,"end":1279,"callee":{"type":"MemberExpression","start":1239,"end":1263,"object":{"type":"Identifier","start":1239,"end":1243,"name":"part"},"property":{"type":"Identifier","start":1244,"end":1263,"name":"looksLikeICUMessage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1264,"end":1278,"name":"icuMessageText"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1293,"end":1366,"static":false,"computed":false,"key":{"type":"Identifier","start":1293,"end":1308,"name":"asDisplayString"},"kind":"method","value":{"type":"FunctionExpression","start":1308,"end":1366,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1309,"end":1322,"name":"displayFormat"}],"body":{"type":"BlockStatement","start":1324,"end":1366,"body":[{"type":"ReturnStatement","start":1335,"end":1359,"argument":{"type":"Literal","start":1342,"end":1358,"value":"<ICU-Message/>","raw":"'<ICU-Message/>'"}}]}}},{"type":"MethodDefinition","start":1456,"end":1511,"static":false,"computed":false,"key":{"type":"Identifier","start":1456,"end":1469,"name":"getICUMessage"},"kind":"method","value":{"type":"FunctionExpression","start":1469,"end":1511,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1472,"end":1511,"body":[{"type":"ReturnStatement","start":1483,"end":1504,"argument":{"type":"MemberExpression","start":1490,"end":1503,"object":{"type":"ThisExpression","start":1490,"end":1494},"property":{"type":"Identifier","start":1495,"end":1503,"name":"_message"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":1665,"end":3075,"static":false,"computed":false,"key":{"type":"Identifier","start":1665,"end":1680,"name":"parseICUMessage"},"kind":"method","value":{"type":"FunctionExpression","start":1680,"end":3075,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1681,"end":1685,"name":"text"}],"body":{"type":"BlockStatement","start":1687,"end":3075,"body":[{"type":"ExpressionStatement","start":1923,"end":1948,"expression":{"type":"AssignmentExpression","start":1923,"end":1947,"operator":"=","left":{"type":"MemberExpression","start":1923,"end":1940,"object":{"type":"ThisExpression","start":1923,"end":1927},"property":{"type":"Identifier","start":1928,"end":1940,"name":"_messageText"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1943,"end":1947,"name":"text"}}},{"type":"ExpressionStatement","start":1958,"end":2002,"expression":{"type":"AssignmentExpression","start":1958,"end":2001,"operator":"=","left":{"type":"MemberExpression","start":1958,"end":1973,"object":{"type":"ThisExpression","start":1958,"end":1962},"property":{"type":"Identifier","start":1963,"end":1973,"name":"_tokenizer"},"computed":false,"optional":false},"right":{"type":"NewExpression","start":1976,"end":2001,"callee":{"type":"Identifier","start":1980,"end":1999,"name":"ICUMessageTokenizer"},"arguments":[]}}},{"type":"ExpressionStatement","start":2012,"end":2040,"expression":{"type":"CallExpression","start":2012,"end":2039,"callee":{"type":"MemberExpression","start":2012,"end":2033,"object":{"type":"MemberExpression","start":2012,"end":2027,"object":{"type":"ThisExpression","start":2012,"end":2016},"property":{"type":"Identifier","start":2017,"end":2027,"name":"_tokenizer"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2028,"end":2033,"name":"input"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2034,"end":2038,"name":"text"}],"optional":false}},{"type":"ExpressionStatement","start":2050,"end":2084,"expression":{"type":"CallExpression","start":2050,"end":2083,"callee":{"type":"MemberExpression","start":2050,"end":2065,"object":{"type":"ThisExpression","start":2050,"end":2054},"property":{"type":"Identifier","start":2055,"end":2065,"name":"expectNext"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2066,"end":2082,"name":"CURLY_BRACE_OPEN"}],"optional":false}},{"type":"ExpressionStatement","start":2094,"end":2116,"expression":{"type":"CallExpression","start":2094,"end":2115,"callee":{"type":"MemberExpression","start":2094,"end":2109,"object":{"type":"ThisExpression","start":2094,"end":2098},"property":{"type":"Identifier","start":2099,"end":2109,"name":"expectNext"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2110,"end":2114,"name":"TEXT"}],"optional":false}},{"type":"ExpressionStatement","start":2198,"end":2221,"expression":{"type":"CallExpression","start":2198,"end":2220,"callee":{"type":"MemberExpression","start":2198,"end":2213,"object":{"type":"ThisExpression","start":2198,"end":2202},"property":{"type":"Identifier","start":2203,"end":2213,"name":"expectNext"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2214,"end":2219,"name":"COMMA"}],"optional":false}},{"type":"VariableDeclaration","start":2231,"end":2266,"declarations":[{"type":"VariableDeclarator","start":2235,"end":2265,"id":{"type":"Identifier","start":2235,"end":2240,"name":"token"},"init":{"type":"CallExpression","start":2243,"end":2265,"callee":{"type":"MemberExpression","start":2243,"end":2263,"object":{"type":"MemberExpression","start":2243,"end":2258,"object":{"type":"ThisExpression","start":2243,"end":2247},"property":{"type":"Identifier","start":2248,"end":2258,"name":"_tokenizer"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2259,"end":2263,"name":"next"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"let"},{"type":"IfStatement","start":2276,"end":2500,"test":{"type":"BinaryExpression","start":2280,"end":2301,"left":{"type":"MemberExpression","start":2280,"end":2290,"object":{"type":"Identifier","start":2280,"end":2285,"name":"token"},"property":{"type":"Identifier","start":2286,"end":2290,"name":"type"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":2295,"end":2301,"name":"PLURAL"}},"consequent":{"type":"BlockStatement","start":2303,"end":2380,"body":[{"type":"ExpressionStatement","start":2318,"end":2369,"expression":{"type":"AssignmentExpression","start":2318,"end":2368,"operator":"=","left":{"type":"MemberExpression","start":2318,"end":2331,"object":{"type":"ThisExpression","start":2318,"end":2322},"property":{"type":"Identifier","start":2323,"end":2331,"name":"_message"},"computed":false,"optional":false},"right":{"type":"NewExpression","start":2334,"end":2368,"callee":{"type":"Identifier","start":2338,"end":2348,"name":"ICUMessage"},"arguments":[{"type":"MemberExpression","start":2349,"end":2361,"object":{"type":"ThisExpression","start":2349,"end":2353},"property":{"type":"Identifier","start":2354,"end":2361,"name":"_parser"},"computed":false,"optional":false},{"type":"Literal","start":2363,"end":2367,"value":true,"raw":"true"}]}}}]},"alternate":{"type":"IfStatement","start":2395,"end":2500,"test":{"type":"BinaryExpression","start":2399,"end":2420,"left":{"type":"MemberExpression","start":2399,"end":2409,"object":{"type":"Identifier","start":2399,"end":2404,"name":"token"},"property":{"type":"Identifier","start":2405,"end":2409,"name":"type"},"computed":false,"optional":false},"operator":"===","right":{"type":"Identifier","start":2414,"end":2420,"name":"SELECT"}},"consequent":{"type":"BlockStatement","start":2422,"end":2500,"body":[{"type":"ExpressionStatement","start":2437,"end":2489,"expression":{"type":"AssignmentExpression","start":2437,"end":2488,"operator":"=","left":{"type":"MemberExpression","start":2437,"end":2450,"object":{"type":"ThisExpression","start":2437,"end":2441},"property":{"type":"Identifier","start":2442,"end":2450,"name":"_message"},"computed":false,"optional":false},"right":{"type":"NewExpression","start":2453,"end":2488,"callee":{"type":"Identifier","start":2457,"end":2467,"name":"ICUMessage"},"arguments":[{"type":"MemberExpression","start":2468,"end":2480,"object":{"type":"ThisExpression","start":2468,"end":2472},"property":{"type":"Identifier","start":2473,"end":2480,"name":"_parser"},"computed":false,"optional":false},{"type":"Literal","start":2482,"end":2487,"value":false,"raw":"false"}]}}}]},"alternate":null}},{"type":"ExpressionStatement","start":2510,"end":2533,"expression":{"type":"CallExpression","start":2510,"end":2532,"callee":{"type":"MemberExpression","start":2510,"end":2525,"object":{"type":"ThisExpression","start":2510,"end":2514},"property":{"type":"Identifier","start":2515,"end":2525,"name":"expectNext"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2526,"end":2531,"name":"COMMA"}],"optional":false}},{"type":"ExpressionStatement","start":2543,"end":2574,"expression":{"type":"AssignmentExpression","start":2543,"end":2573,"operator":"=","left":{"type":"Identifier","start":2543,"end":2548,"name":"token"},"right":{"type":"CallExpression","start":2551,"end":2573,"callee":{"type":"MemberExpression","start":2551,"end":2571,"object":{"type":"MemberExpression","start":2551,"end":2566,"object":{"type":"ThisExpression","start":2551,"end":2555},"property":{"type":"Identifier","start":2556,"end":2566,"name":"_tokenizer"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2567,"end":2571,"name":"peek"},"computed":false,"optional":false},"arguments":[],"optional":false}}},{"type":"WhileStatement","start":2584,"end":2990,"test":{"type":"BinaryExpression","start":2591,"end":2623,"left":{"type":"MemberExpression","start":2591,"end":2601,"object":{"type":"Identifier","start":2591,"end":2596,"name":"token"},"property":{"type":"Identifier","start":2597,"end":2601,"name":"type"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":2606,"end":2623,"name":"CURLY_BRACE_CLOSE"}},"body":{"type":"BlockStatement","start":2625,"end":2990,"body":[{"type":"VariableDeclaration","start":2640,"end":2692,"declarations":[{"type":"VariableDeclarator","start":2646,"end":2691,"id":{"type":"Identifier","start":2646,"end":2654,"name":"category"},"init":{"type":"CallExpression","start":2657,"end":2691,"callee":{"type":"MemberExpression","start":2657,"end":2689,"object":{"type":"MemberExpression","start":2657,"end":2684,"object":{"type":"CallExpression","start":2657,"end":2678,"callee":{"type":"MemberExpression","start":2657,"end":2672,"object":{"type":"ThisExpression","start":2657,"end":2661},"property":{"type":"Identifier","start":2662,"end":2672,"name":"expectNext"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2673,"end":2677,"name":"TEXT"}],"optional":false},"property":{"type":"Identifier","start":2679,"end":2684,"name":"value"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2685,"end":2689,"name":"trim"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":2706,"end":2740,"expression":{"type":"CallExpression","start":2706,"end":2739,"callee":{"type":"MemberExpression","start":2706,"end":2721,"object":{"type":"ThisExpression","start":2706,"end":2710},"property":{"type":"Identifier","start":2711,"end":2721,"name":"expectNext"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2722,"end":2738,"name":"CURLY_BRACE_OPEN"}],"optional":false}},{"type":"VariableDeclaration","start":2754,"end":2798,"declarations":[{"type":"VariableDeclarator","start":2760,"end":2797,"id":{"type":"Identifier","start":2760,"end":2767,"name":"message"},"init":{"type":"MemberExpression","start":2770,"end":2797,"object":{"type":"CallExpression","start":2770,"end":2791,"callee":{"type":"MemberExpression","start":2770,"end":2785,"object":{"type":"ThisExpression","start":2770,"end":2774},"property":{"type":"Identifier","start":2775,"end":2785,"name":"expectNext"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2786,"end":2790,"name":"TEXT"}],"optional":false},"property":{"type":"Identifier","start":2792,"end":2797,"name":"value"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":2812,"end":2885,"expression":{"type":"CallExpression","start":2812,"end":2884,"callee":{"type":"MemberExpression","start":2812,"end":2837,"object":{"type":"MemberExpression","start":2812,"end":2825,"object":{"type":"ThisExpression","start":2812,"end":2816},"property":{"type":"Identifier","start":2817,"end":2825,"name":"_message"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2826,"end":2837,"name":"addCategory"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2838,"end":2846,"name":"category"},{"type":"CallExpression","start":2848,"end":2883,"callee":{"type":"MemberExpression","start":2848,"end":2874,"object":{"type":"ThisExpression","start":2848,"end":2852},"property":{"type":"Identifier","start":2853,"end":2874,"name":"parseNativeSubMessage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2875,"end":2882,"name":"message"}],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":2899,"end":2934,"expression":{"type":"CallExpression","start":2899,"end":2933,"callee":{"type":"MemberExpression","start":2899,"end":2914,"object":{"type":"ThisExpression","start":2899,"end":2903},"property":{"type":"Identifier","start":2904,"end":2914,"name":"expectNext"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2915,"end":2932,"name":"CURLY_BRACE_CLOSE"}],"optional":false}},{"type":"ExpressionStatement","start":2948,"end":2979,"expression":{"type":"AssignmentExpression","start":2948,"end":2978,"operator":"=","left":{"type":"Identifier","start":2948,"end":2953,"name":"token"},"right":{"type":"CallExpression","start":2956,"end":2978,"callee":{"type":"MemberExpression","start":2956,"end":2976,"object":{"type":"MemberExpression","start":2956,"end":2971,"object":{"type":"ThisExpression","start":2956,"end":2960},"property":{"type":"Identifier","start":2961,"end":2971,"name":"_tokenizer"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2972,"end":2976,"name":"peek"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]}},{"type":"ExpressionStatement","start":3000,"end":3035,"expression":{"type":"CallExpression","start":3000,"end":3034,"callee":{"type":"MemberExpression","start":3000,"end":3015,"object":{"type":"ThisExpression","start":3000,"end":3004},"property":{"type":"Identifier","start":3005,"end":3015,"name":"expectNext"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3016,"end":3033,"name":"CURLY_BRACE_CLOSE"}],"optional":false}},{"type":"ExpressionStatement","start":3045,"end":3068,"expression":{"type":"CallExpression","start":3045,"end":3067,"callee":{"type":"MemberExpression","start":3045,"end":3060,"object":{"type":"ThisExpression","start":3045,"end":3049},"property":{"type":"Identifier","start":3050,"end":3060,"name":"expectNext"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3061,"end":3066,"value":"EOF","raw":"'EOF'"}],"optional":false}}]}}},{"type":"MethodDefinition","start":3310,"end":4170,"static":false,"computed":false,"key":{"type":"Identifier","start":3310,"end":3329,"name":"looksLikeICUMessage"},"kind":"method","value":{"type":"FunctionExpression","start":3329,"end":4170,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3330,"end":3334,"name":"text"}],"body":{"type":"BlockStatement","start":3336,"end":4170,"body":[{"type":"ExpressionStatement","start":3572,"end":3616,"expression":{"type":"AssignmentExpression","start":3572,"end":3615,"operator":"=","left":{"type":"MemberExpression","start":3572,"end":3587,"object":{"type":"ThisExpression","start":3572,"end":3576},"property":{"type":"Identifier","start":3577,"end":3587,"name":"_tokenizer"},"computed":false,"optional":false},"right":{"type":"NewExpression","start":3590,"end":3615,"callee":{"type":"Identifier","start":3594,"end":3613,"name":"ICUMessageTokenizer"},"arguments":[]}}},{"type":"ExpressionStatement","start":3626,"end":3654,"expression":{"type":"CallExpression","start":3626,"end":3653,"callee":{"type":"MemberExpression","start":3626,"end":3647,"object":{"type":"MemberExpression","start":3626,"end":3641,"object":{"type":"ThisExpression","start":3626,"end":3630},"property":{"type":"Identifier","start":3631,"end":3641,"name":"_tokenizer"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3642,"end":3647,"name":"input"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3648,"end":3652,"name":"text"}],"optional":false}},{"type":"TryStatement","start":3664,"end":4163,"block":{"type":"BlockStatement","start":3668,"end":4100,"body":[{"type":"ExpressionStatement","start":3683,"end":3717,"expression":{"type":"CallExpression","start":3683,"end":3716,"callee":{"type":"MemberExpression","start":3683,"end":3698,"object":{"type":"ThisExpression","start":3683,"end":3687},"property":{"type":"Identifier","start":3688,"end":3698,"name":"expectNext"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3699,"end":3715,"name":"CURLY_BRACE_OPEN"}],"optional":false}},{"type":"ExpressionStatement","start":3731,"end":3753,"expression":{"type":"CallExpression","start":3731,"end":3752,"callee":{"type":"MemberExpression","start":3731,"end":3746,"object":{"type":"ThisExpression","start":3731,"end":3735},"property":{"type":"Identifier","start":3736,"end":3746,"name":"expectNext"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3747,"end":3751,"name":"TEXT"}],"optional":false}},{"type":"ExpressionStatement","start":3839,"end":3862,"expression":{"type":"CallExpression","start":3839,"end":3861,"callee":{"type":"MemberExpression","start":3839,"end":3854,"object":{"type":"ThisExpression","start":3839,"end":3843},"property":{"type":"Identifier","start":3844,"end":3854,"name":"expectNext"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3855,"end":3860,"name":"COMMA"}],"optional":false}},{"type":"VariableDeclaration","start":3876,"end":3913,"declarations":[{"type":"VariableDeclarator","start":3882,"end":3912,"id":{"type":"Identifier","start":3882,"end":3887,"name":"token"},"init":{"type":"CallExpression","start":3890,"end":3912,"callee":{"type":"MemberExpression","start":3890,"end":3910,"object":{"type":"MemberExpression","start":3890,"end":3905,"object":{"type":"ThisExpression","start":3890,"end":3894},"property":{"type":"Identifier","start":3895,"end":3905,"name":"_tokenizer"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3906,"end":3910,"name":"next"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3927,"end":4026,"test":{"type":"LogicalExpression","start":3931,"end":3977,"left":{"type":"BinaryExpression","start":3931,"end":3952,"left":{"type":"MemberExpression","start":3931,"end":3941,"object":{"type":"Identifier","start":3931,"end":3936,"name":"token"},"property":{"type":"Identifier","start":3937,"end":3941,"name":"type"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":3946,"end":3952,"name":"PLURAL"}},"operator":"&&","right":{"type":"BinaryExpression","start":3956,"end":3977,"left":{"type":"MemberExpression","start":3956,"end":3966,"object":{"type":"Identifier","start":3956,"end":3961,"name":"token"},"property":{"type":"Identifier","start":3962,"end":3966,"name":"type"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":3971,"end":3977,"name":"SELECT"}}},"consequent":{"type":"BlockStatement","start":3979,"end":4026,"body":[{"type":"ReturnStatement","start":3998,"end":4011,"argument":{"type":"Literal","start":4005,"end":4010,"value":false,"raw":"false"}}]},"alternate":null},{"type":"ExpressionStatement","start":4040,"end":4063,"expression":{"type":"CallExpression","start":4040,"end":4062,"callee":{"type":"MemberExpression","start":4040,"end":4055,"object":{"type":"ThisExpression","start":4040,"end":4044},"property":{"type":"Identifier","start":4045,"end":4055,"name":"expectNext"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4056,"end":4061,"name":"COMMA"}],"optional":false}},{"type":"ReturnStatement","start":4077,"end":4089,"argument":{"type":"Literal","start":4084,"end":4088,"value":true,"raw":"true"}}]},"handler":{"type":"CatchClause","start":4110,"end":4163,"param":{"type":"Identifier","start":4117,"end":4122,"name":"error"},"body":{"type":"BlockStatement","start":4124,"end":4163,"body":[{"type":"ReturnStatement","start":4139,"end":4152,"argument":{"type":"Literal","start":4146,"end":4151,"value":false,"raw":"false"}}]}},"finalizer":null}]}}},{"type":"MethodDefinition","start":4375,"end":4690,"static":false,"computed":false,"key":{"type":"Identifier","start":4375,"end":4385,"name":"expectNext"},"kind":"method","value":{"type":"FunctionExpression","start":4385,"end":4690,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4386,"end":4395,"name":"tokentype"}],"body":{"type":"BlockStatement","start":4397,"end":4690,"body":[{"type":"VariableDeclaration","start":4408,"end":4445,"declarations":[{"type":"VariableDeclarator","start":4414,"end":4444,"id":{"type":"Identifier","start":4414,"end":4419,"name":"token"},"init":{"type":"CallExpression","start":4422,"end":4444,"callee":{"type":"MemberExpression","start":4422,"end":4442,"object":{"type":"MemberExpression","start":4422,"end":4437,"object":{"type":"ThisExpression","start":4422,"end":4426},"property":{"type":"Identifier","start":4427,"end":4437,"name":"_tokenizer"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4438,"end":4442,"name":"next"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":4455,"end":4660,"test":{"type":"BinaryExpression","start":4459,"end":4483,"left":{"type":"MemberExpression","start":4459,"end":4469,"object":{"type":"Identifier","start":4459,"end":4464,"name":"token"},"property":{"type":"Identifier","start":4465,"end":4469,"name":"type"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":4474,"end":4483,"name":"tokentype"}},"consequent":{"type":"BlockStatement","start":4485,"end":4660,"body":[{"type":"ThrowStatement","start":4500,"end":4649,"argument":{"type":"NewExpression","start":4506,"end":4648,"callee":{"type":"Identifier","start":4510,"end":4515,"name":"Error"},"arguments":[{"type":"CallExpression","start":4516,"end":4647,"callee":{"type":"Identifier","start":4516,"end":4522,"name":"format"},"arguments":[{"type":"Literal","start":4523,"end":4591,"value":"Error parsing ICU Message: expected %s, found %s (%s) (message %s)","raw":"'Error parsing ICU Message: expected %s, found %s (%s) (message %s)'"},{"type":"Identifier","start":4593,"end":4602,"name":"tokentype"},{"type":"MemberExpression","start":4604,"end":4614,"object":{"type":"Identifier","start":4604,"end":4609,"name":"token"},"property":{"type":"Identifier","start":4610,"end":4614,"name":"type"},"computed":false,"optional":false},{"type":"MemberExpression","start":4616,"end":4627,"object":{"type":"Identifier","start":4616,"end":4621,"name":"token"},"property":{"type":"Identifier","start":4622,"end":4627,"name":"value"},"computed":false,"optional":false},{"type":"MemberExpression","start":4629,"end":4646,"object":{"type":"ThisExpression","start":4629,"end":4633},"property":{"type":"Identifier","start":4634,"end":4646,"name":"_messageText"},"computed":false,"optional":false}],"optional":false}]}}]},"alternate":null},{"type":"ReturnStatement","start":4670,"end":4683,"argument":{"type":"Identifier","start":4677,"end":4682,"name":"token"}}]}}},{"type":"MethodDefinition","start":4858,"end":4979,"static":false,"computed":false,"key":{"type":"Identifier","start":4858,"end":4879,"name":"parseNativeSubMessage"},"kind":"method","value":{"type":"FunctionExpression","start":4879,"end":4979,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4880,"end":4887,"name":"message"}],"body":{"type":"BlockStatement","start":4889,"end":4979,"body":[{"type":"ReturnStatement","start":4900,"end":4972,"argument":{"type":"CallExpression","start":4907,"end":4971,"callee":{"type":"MemberExpression","start":4907,"end":4956,"object":{"type":"MemberExpression","start":4907,"end":4919,"object":{"type":"ThisExpression","start":4907,"end":4911},"property":{"type":"Identifier","start":4912,"end":4919,"name":"_parser"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4920,"end":4956,"name":"createNormalizedMessageFromXMLString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4957,"end":4964,"name":"message"},{"type":"Literal","start":4966,"end":4970,"value":null,"raw":"null"}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":4984,"end":17034}]},"code":"import { ParsedMessagePart, ParsedMessagePartType } from './parsed-message-part';\r\nimport { COMMA, CURLY_BRACE_CLOSE, CURLY_BRACE_OPEN, ICUMessageTokenizer, PLURAL, SELECT, TEXT } from './icu-message-tokenizer';\r\nimport { ICUMessage } from './icu-message';\r\nimport { format } from 'util';\r\n/**\r\n * Created by martin on 02.06.2017.\r\n * A message part consisting of an icu message.\r\n * There can only be one icu message in a parsed message.\r\n * Syntax of ICU message is '{' <keyname> ',' 'select'|'plural' ',' (<category> '{' text '}')+ '}'\r\n */\r\nexport class ParsedMessagePartICUMessage extends ParsedMessagePart {\r\n    constructor(icuMessageText, _parser) {\r\n        super(ParsedMessagePartType.ICU_MESSAGE);\r\n        this._parser = _parser;\r\n        if (icuMessageText) {\r\n            this.parseICUMessage(icuMessageText);\r\n        }\r\n    }\r\n    /**\r\n     * Test wether text might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param icuMessageText icuMessageText\r\n     * @return wether text might be an ICU message.\r\n     */\r\n    static looksLikeICUMessage(icuMessageText) {\r\n        const part = new ParsedMessagePartICUMessage(null, null);\r\n        return part.looksLikeICUMessage(icuMessageText);\r\n    }\r\n    asDisplayString(displayFormat) {\r\n        return '<ICU-Message/>';\r\n    }\r\n    /**\r\n     * return the parsed message.\r\n     * @return parsed message\r\n     */\r\n    getICUMessage() {\r\n        return this._message;\r\n    }\r\n    /**\r\n     * Parse the message.\r\n     * @param text message text to parse\r\n     * @throws an error if the syntax is not ok in any way.\r\n     */\r\n    parseICUMessage(text) {\r\n        // console.log('message ', text);\r\n        // const tokens = new ICUMessageTokenizer().tokenize(text);\r\n        // tokens.forEach((tok) => {\r\n        //     console.log('Token', tok.type, tok.value);\r\n        // });\r\n        this._messageText = text;\r\n        this._tokenizer = new ICUMessageTokenizer();\r\n        this._tokenizer.input(text);\r\n        this.expectNext(CURLY_BRACE_OPEN);\r\n        this.expectNext(TEXT); // varname, not used currently, ng always used VAR_PLURAL or VAR_SELECT\r\n        this.expectNext(COMMA);\r\n        let token = this._tokenizer.next();\r\n        if (token.type === PLURAL) {\r\n            this._message = new ICUMessage(this._parser, true);\r\n        }\r\n        else if (token.type === SELECT) {\r\n            this._message = new ICUMessage(this._parser, false);\r\n        }\r\n        this.expectNext(COMMA);\r\n        token = this._tokenizer.peek();\r\n        while (token.type !== CURLY_BRACE_CLOSE) {\r\n            const category = this.expectNext(TEXT).value.trim();\r\n            this.expectNext(CURLY_BRACE_OPEN);\r\n            const message = this.expectNext(TEXT).value;\r\n            this._message.addCategory(category, this.parseNativeSubMessage(message));\r\n            this.expectNext(CURLY_BRACE_CLOSE);\r\n            token = this._tokenizer.peek();\r\n        }\r\n        this.expectNext(CURLY_BRACE_CLOSE);\r\n        this.expectNext('EOF');\r\n    }\r\n    /**\r\n     * Parse the message to check, wether it might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param text message text to parse\r\n     */\r\n    looksLikeICUMessage(text) {\r\n        // console.log('message ', text);\r\n        // const tokens = new ICUMessageTokenizer().tokenize(text);\r\n        // tokens.forEach((tok) => {\r\n        //     console.log('Token', tok.type, tok.value);\r\n        // });\r\n        this._tokenizer = new ICUMessageTokenizer();\r\n        this._tokenizer.input(text);\r\n        try {\r\n            this.expectNext(CURLY_BRACE_OPEN);\r\n            this.expectNext(TEXT); // varname, not used currently, ng always used VAR_PLURAL or VAR_SELECT\r\n            this.expectNext(COMMA);\r\n            const token = this._tokenizer.next();\r\n            if (token.type !== PLURAL && token.type !== SELECT) {\r\n                return false;\r\n            }\r\n            this.expectNext(COMMA);\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Read next token and expect, that it is of the given type.\r\n     * @param tokentype expected type.\r\n     * @return Token\r\n     * @throws error, if next token has wrong type.\r\n     */\r\n    expectNext(tokentype) {\r\n        const token = this._tokenizer.next();\r\n        if (token.type !== tokentype) {\r\n            throw new Error(format('Error parsing ICU Message: expected %s, found %s (%s) (message %s)', tokentype, token.type, token.value, this._messageText));\r\n        }\r\n        return token;\r\n    }\r\n    /**\r\n     * Parse XML text to normalized message.\r\n     * @param message message in format dependent xml syntax.\r\n     * @return normalized message\r\n     */\r\n    parseNativeSubMessage(message) {\r\n        return this._parser.createNormalizedMessageFromXMLString(message, null);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\icu-message-tokenizer.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\icu-message.mjs","util"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-icu-message.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { ParsedMessagePart, ParsedMessagePartType } from './parsed-message-part';\r\nimport { COMMA, CURLY_BRACE_CLOSE, CURLY_BRACE_OPEN, ICUMessageTokenizer, PLURAL, SELECT, TEXT } from './icu-message-tokenizer';\r\nimport { ICUMessage } from './icu-message';\r\nimport { format } from 'util';\r\n/**\r\n * Created by martin on 02.06.2017.\r\n * A message part consisting of an icu message.\r\n * There can only be one icu message in a parsed message.\r\n * Syntax of ICU message is '{' <keyname> ',' 'select'|'plural' ',' (<category> '{' text '}')+ '}'\r\n */\r\nexport class ParsedMessagePartICUMessage extends ParsedMessagePart {\r\n    constructor(icuMessageText, _parser) {\r\n        super(ParsedMessagePartType.ICU_MESSAGE);\r\n        this._parser = _parser;\r\n        if (icuMessageText) {\r\n            this.parseICUMessage(icuMessageText);\r\n        }\r\n    }\r\n    /**\r\n     * Test wether text might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param icuMessageText icuMessageText\r\n     * @return wether text might be an ICU message.\r\n     */\r\n    static looksLikeICUMessage(icuMessageText) {\r\n        const part = new ParsedMessagePartICUMessage(null, null);\r\n        return part.looksLikeICUMessage(icuMessageText);\r\n    }\r\n    asDisplayString(displayFormat) {\r\n        return '<ICU-Message/>';\r\n    }\r\n    /**\r\n     * return the parsed message.\r\n     * @return parsed message\r\n     */\r\n    getICUMessage() {\r\n        return this._message;\r\n    }\r\n    /**\r\n     * Parse the message.\r\n     * @param text message text to parse\r\n     * @throws an error if the syntax is not ok in any way.\r\n     */\r\n    parseICUMessage(text) {\r\n        // console.log('message ', text);\r\n        // const tokens = new ICUMessageTokenizer().tokenize(text);\r\n        // tokens.forEach((tok) => {\r\n        //     console.log('Token', tok.type, tok.value);\r\n        // });\r\n        this._messageText = text;\r\n        this._tokenizer = new ICUMessageTokenizer();\r\n        this._tokenizer.input(text);\r\n        this.expectNext(CURLY_BRACE_OPEN);\r\n        this.expectNext(TEXT); // varname, not used currently, ng always used VAR_PLURAL or VAR_SELECT\r\n        this.expectNext(COMMA);\r\n        let token = this._tokenizer.next();\r\n        if (token.type === PLURAL) {\r\n            this._message = new ICUMessage(this._parser, true);\r\n        }\r\n        else if (token.type === SELECT) {\r\n            this._message = new ICUMessage(this._parser, false);\r\n        }\r\n        this.expectNext(COMMA);\r\n        token = this._tokenizer.peek();\r\n        while (token.type !== CURLY_BRACE_CLOSE) {\r\n            const category = this.expectNext(TEXT).value.trim();\r\n            this.expectNext(CURLY_BRACE_OPEN);\r\n            const message = this.expectNext(TEXT).value;\r\n            this._message.addCategory(category, this.parseNativeSubMessage(message));\r\n            this.expectNext(CURLY_BRACE_CLOSE);\r\n            token = this._tokenizer.peek();\r\n        }\r\n        this.expectNext(CURLY_BRACE_CLOSE);\r\n        this.expectNext('EOF');\r\n    }\r\n    /**\r\n     * Parse the message to check, wether it might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param text message text to parse\r\n     */\r\n    looksLikeICUMessage(text) {\r\n        // console.log('message ', text);\r\n        // const tokens = new ICUMessageTokenizer().tokenize(text);\r\n        // tokens.forEach((tok) => {\r\n        //     console.log('Token', tok.type, tok.value);\r\n        // });\r\n        this._tokenizer = new ICUMessageTokenizer();\r\n        this._tokenizer.input(text);\r\n        try {\r\n            this.expectNext(CURLY_BRACE_OPEN);\r\n            this.expectNext(TEXT); // varname, not used currently, ng always used VAR_PLURAL or VAR_SELECT\r\n            this.expectNext(COMMA);\r\n            const token = this._tokenizer.next();\r\n            if (token.type !== PLURAL && token.type !== SELECT) {\r\n                return false;\r\n            }\r\n            this.expectNext(COMMA);\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Read next token and expect, that it is of the given type.\r\n     * @param tokentype expected type.\r\n     * @return Token\r\n     * @throws error, if next token has wrong type.\r\n     */\r\n    expectNext(tokentype) {\r\n        const token = this._tokenizer.next();\r\n        if (token.type !== tokentype) {\r\n            throw new Error(format('Error parsing ICU Message: expected %s, found %s (%s) (message %s)', tokentype, token.type, token.value, this._messageText));\r\n        }\r\n        return token;\r\n    }\r\n    /**\r\n     * Parse XML text to normalized message.\r\n     * @param message message in format dependent xml syntax.\r\n     * @return normalized message\r\n     */\r\n    parseNativeSubMessage(message) {\r\n        return this._parser.createNormalizedMessageFromXMLString(message, null);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"parsed-message-part-icu-message.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/parsed-message-part-icu-message.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[26,0,0,25],[28,0,0,27],[49,0,0,48],[51,0,0,49],[57,0,0,55],[80,0,0,78],[81,0,0,79]],[[0,0,2,0],[7,0,2,7],[9,0,3,4],[14,0,3,9],[16,0,3,11],[33,0,3,28],[35,0,3,30],[51,0,3,46],[53,0,3,48],[72,0,3,67],[74,0,3,79],[80,0,3,85],[82,0,3,87],[88,0,3,93],[90,0,4,4],[94,0,4,8],[96,0,5,1],[102,0,5,7],[127,0,5,32],[128,0,5,33]],[[0,0,6,0],[7,0,6,7],[9,0,6,8],[19,0,6,18],[21,0,6,19],[27,0,6,25],[42,0,6,40],[43,0,6,41]],[[0,0,7,0],[7,0,7,7],[9,0,7,8],[15,0,7,14],[17,0,7,15],[23,0,7,21],[29,0,7,27],[30,0,7,28]],[[0,0,10,0]],[],[],[],[],[[3,0,15,3]],[[0,0,17,0],[6,0,17,6],[13,0,17,13],[40,0,17,41],[49,0,17,49],[66,0,17,66]],[[4,0,23,4],[16,0,23,16],[30,0,23,38],[32,0,23,48],[39,0,23,71]],[[8,0,24,8],[13,0,24,13],[14,0,24,14],[35,0,24,35],[36,0,24,36],[47,0,24,47],[48,0,24,48],[49,0,24,49]],[[8,0,23,48],[20,0,23,55],[23,0,23,48],[30,0,23,55],[31,0,23,71]],[[8,0,25,8],[12,0,25,12],[26,0,25,26],[28,0,25,28]],[[12,0,26,12],[16,0,26,16],[17,0,26,17],[32,0,26,32],[33,0,26,33],[47,0,26,47],[48,0,26,48],[49,0,26,49]],[[9,0,27,9]],[[4,0,28,4],[5,0,28,5]],[[4,0,30,4]],[],[],[],[],[[7,0,35,7]],[[4,0,36,4],[10,0,36,10],[11,0,36,11],[30,0,36,30],[31,0,36,31],[45,0,36,53]],[[8,0,37,8],[14,0,37,14],[18,0,37,18],[21,0,37,21],[25,0,37,25],[52,0,37,52],[53,0,37,53],[57,0,37,57],[59,0,37,59],[63,0,37,63],[64,0,37,64],[65,0,37,65]],[[8,0,38,8],[15,0,38,15],[19,0,38,19],[20,0,38,20],[39,0,38,39],[40,0,38,40],[54,0,38,54],[55,0,38,55],[56,0,38,56]],[[4,0,39,4],[5,0,39,5]],[[4,0,41,11],[19,0,41,26],[20,0,41,27],[33,0,41,49]],[[8,0,42,8],[15,0,42,15],[31,0,42,31],[32,0,42,32]],[[4,0,43,4],[5,0,43,5]],[[4,0,45,4]],[],[],[[7,0,48,7]],[[4,0,49,11],[17,0,49,24]],[[8,0,50,8],[15,0,50,15],[19,0,50,19],[20,0,50,20],[28,0,50,28],[29,0,50,29]],[[4,0,51,4],[5,0,51,5]],[[4,0,53,4]],[],[],[],[[7,0,57,7]],[[4,0,58,12],[19,0,58,27],[20,0,58,28],[24,0,58,40]],[[8,0,59,8],[41,0,59,41]],[[8,0,60,8],[67,0,60,67]],[[8,0,61,8],[36,0,61,36]],[[8,0,62,8],[57,0,62,57]],[[8,0,63,8],[14,0,63,14]],[[8,0,64,8],[12,0,64,12],[13,0,64,13],[25,0,64,25],[28,0,64,28],[32,0,64,32],[33,0,64,33]],[[8,0,65,8],[12,0,65,12],[13,0,65,13],[23,0,65,23],[26,0,65,26],[30,0,65,30],[49,0,65,49],[51,0,65,51],[52,0,65,52]],[[8,0,66,8],[12,0,66,12],[13,0,66,13],[23,0,66,23],[24,0,66,24],[29,0,66,29],[30,0,66,30],[34,0,66,34],[35,0,66,35],[36,0,66,36]],[[8,0,67,8],[12,0,67,12],[13,0,67,13],[23,0,67,23],[24,0,67,24],[40,0,67,40],[41,0,67,41],[42,0,67,42]],[[8,0,68,8],[12,0,68,12],[13,0,68,13],[23,0,68,23],[24,0,68,24],[28,0,68,28],[29,0,68,29],[30,0,68,30],[31,0,68,31],[102,0,68,102]],[[8,0,69,8],[12,0,69,12],[13,0,69,13],[23,0,69,23],[24,0,69,24],[29,0,69,29],[30,0,69,30],[31,0,69,31]],[[8,0,70,8],[12,0,70,12],[17,0,70,17],[20,0,70,30],[24,0,70,34],[25,0,70,35],[35,0,70,45],[36,0,70,46],[40,0,70,50],[42,0,70,52],[43,0,70,53]],[[8,0,71,8],[12,0,71,12],[17,0,71,17],[18,0,71,18],[22,0,71,22],[27,0,71,27],[33,0,71,33],[35,0,71,35]],[[12,0,72,12],[16,0,72,16],[17,0,72,17],[25,0,72,25],[28,0,72,28],[32,0,72,32],[42,0,72,42],[43,0,72,43],[47,0,72,47],[48,0,72,48],[55,0,72,55],[57,0,72,57],[61,0,72,61],[62,0,72,62],[63,0,72,63]],[[9,0,73,9]],[[13,0,73,15],[17,0,73,19],[22,0,73,24],[23,0,73,25],[27,0,73,29],[32,0,73,34],[38,0,73,40],[40,0,73,42]],[[12,0,74,12],[16,0,74,16],[17,0,74,17],[25,0,74,25],[28,0,74,28],[32,0,74,32],[42,0,74,42],[43,0,74,43],[47,0,74,47],[48,0,74,48],[55,0,74,55],[57,0,74,57],[62,0,74,62],[63,0,74,63],[64,0,74,64]],[[9,0,75,9]],[[8,0,76,8],[12,0,76,12],[13,0,76,13],[23,0,76,23],[24,0,76,24],[29,0,76,29],[30,0,76,30],[31,0,76,31]],[[8,0,77,8],[13,0,77,13],[16,0,77,16],[20,0,77,20],[21,0,77,21],[31,0,77,31],[32,0,77,32],[36,0,77,36],[38,0,77,38],[39,0,77,39]],[[8,0,78,8],[15,0,78,15],[20,0,78,20],[21,0,78,21],[25,0,78,25],[30,0,78,30],[47,0,78,47],[49,0,78,49]],[[12,0,79,12],[18,0,79,18],[26,0,79,26],[29,0,79,29],[33,0,79,33],[34,0,79,34],[44,0,79,44],[45,0,79,45],[49,0,79,49],[50,0,79,50],[51,0,79,51],[56,0,79,56],[57,0,79,57],[61,0,79,61],[63,0,79,63],[64,0,79,64]],[[12,0,80,12],[16,0,80,16],[17,0,80,17],[27,0,80,27],[28,0,80,28],[44,0,80,44],[45,0,80,45],[46,0,80,46]],[[12,0,81,12],[18,0,81,18],[25,0,81,25],[28,0,81,28],[32,0,81,32],[33,0,81,33],[43,0,81,43],[44,0,81,44],[48,0,81,48],[49,0,81,49],[50,0,81,50],[55,0,81,55],[56,0,81,56]],[[12,0,82,12],[16,0,82,16],[17,0,82,17],[25,0,82,25],[26,0,82,26],[37,0,82,37],[38,0,82,38],[46,0,82,46],[48,0,82,48],[52,0,82,52],[53,0,82,53],[74,0,82,74],[75,0,82,75],[82,0,82,82],[83,0,82,83],[84,0,82,84],[85,0,82,85]],[[12,0,83,12],[16,0,83,16],[17,0,83,17],[27,0,83,27],[28,0,83,28],[45,0,83,45],[46,0,83,46],[47,0,83,47]],[[12,0,84,12],[17,0,84,17],[20,0,84,20],[24,0,84,24],[25,0,84,25],[35,0,84,35],[36,0,84,36],[40,0,84,40],[42,0,84,42],[43,0,84,43]],[[9,0,85,9]],[[8,0,86,8],[12,0,86,12],[13,0,86,13],[23,0,86,23],[24,0,86,24],[41,0,86,41],[42,0,86,42],[43,0,86,43]],[[8,0,87,8],[12,0,87,12],[13,0,87,13],[23,0,87,23],[24,0,87,24],[29,0,87,29],[30,0,87,30],[31,0,87,31]],[[4,0,88,4],[5,0,88,5]],[[4,0,90,4]],[],[],[],[[7,0,94,7]],[[4,0,95,12],[23,0,95,31],[24,0,95,32],[28,0,95,44]],[[8,0,96,8],[41,0,96,41]],[[8,0,97,8],[67,0,97,67]],[[8,0,98,8],[36,0,98,36]],[[8,0,99,8],[57,0,99,57]],[[8,0,100,8],[14,0,100,14]],[[8,0,101,8],[12,0,101,12],[13,0,101,13],[23,0,101,23],[26,0,101,26],[30,0,101,30],[49,0,101,49],[51,0,101,51],[52,0,101,52]],[[8,0,102,8],[12,0,102,12],[13,0,102,13],[23,0,102,23],[24,0,102,24],[29,0,102,29],[30,0,102,30],[34,0,102,34],[35,0,102,35],[36,0,102,36]],[[8,0,103,8],[12,0,103,12]],[[12,0,104,12],[16,0,104,16],[17,0,104,17],[27,0,104,27],[28,0,104,28],[44,0,104,44],[45,0,104,45],[46,0,104,46]],[[12,0,105,12],[16,0,105,16],[17,0,105,17],[27,0,105,27],[28,0,105,28],[32,0,105,32],[33,0,105,33],[34,0,105,34],[35,0,105,35],[106,0,105,106]],[[12,0,106,12],[16,0,106,16],[17,0,106,17],[27,0,106,27],[28,0,106,28],[33,0,106,33],[34,0,106,34],[35,0,106,35]],[[12,0,107,12],[18,0,107,18],[23,0,107,23],[26,0,107,36],[30,0,107,40],[31,0,107,41],[41,0,107,51],[42,0,107,52],[46,0,107,56],[48,0,107,58],[49,0,107,59]],[[12,0,108,12],[16,0,108,16],[21,0,108,21],[22,0,108,22],[26,0,108,26],[31,0,108,31],[37,0,108,37],[41,0,108,41],[46,0,108,46],[47,0,108,47],[51,0,108,51],[56,0,108,56],[62,0,108,62],[64,0,108,64]],[[16,0,109,16],[23,0,109,23],[28,0,109,28],[29,0,109,29]],[[13,0,110,13]],[[12,0,111,12],[16,0,111,16],[17,0,111,17],[27,0,111,27],[28,0,111,28],[33,0,111,33],[34,0,111,34],[35,0,111,35]],[[12,0,112,12],[19,0,112,19],[23,0,112,23],[24,0,112,24]],[[9,0,113,9]],[[8,0,113,10],[15,0,113,17],[20,0,113,22],[22,0,113,24]],[[12,0,114,12],[19,0,114,19],[24,0,114,24],[25,0,114,25]],[[9,0,115,9]],[[4,0,116,4],[5,0,116,5]],[[4,0,118,4]],[],[],[],[],[[7,0,123,7]],[[4,0,124,12],[14,0,124,22],[15,0,124,23],[24,0,124,40]],[[8,0,125,8],[14,0,125,14],[19,0,125,19],[22,0,125,22],[26,0,125,26],[27,0,125,27],[37,0,125,37],[38,0,125,38],[42,0,125,42],[44,0,125,44],[45,0,125,45]],[[8,0,126,8],[12,0,126,12],[17,0,126,17],[18,0,126,18],[22,0,126,22],[27,0,126,27],[36,0,126,36],[38,0,126,38]],[[12,0,127,12],[18,0,127,18],[22,0,127,22],[27,0,127,27],[28,0,127,28],[34,0,127,34],[35,0,127,35],[103,0,127,103],[105,0,128,16],[114,0,128,25],[116,0,128,27],[121,0,128,32],[122,0,128,33],[126,0,128,37],[128,0,128,39],[133,0,128,44],[134,0,128,45],[139,0,128,50],[141,0,128,52],[145,0,128,56],[146,0,128,57],[158,0,128,69],[159,0,128,70],[160,0,128,71],[161,0,128,72]],[[9,0,129,9]],[[8,0,130,8],[15,0,130,15],[20,0,130,20],[21,0,130,21]],[[4,0,131,4],[5,0,131,5]],[[4,0,133,4]],[],[],[],[[7,0,137,7]],[[4,0,138,12],[25,0,138,33],[26,0,138,34],[33,0,138,49]],[[8,0,139,8],[15,0,139,15],[19,0,139,19],[20,0,139,20],[27,0,139,27],[28,0,139,28],[64,0,139,64],[65,0,139,65],[72,0,139,72],[74,0,139,74],[78,0,139,78],[79,0,139,79],[80,0,139,80]],[[4,0,140,4],[5,0,140,5]],[[1,0,141,1]]],"sourcesContent":["import {ParsedMessagePart, ParsedMessagePartType} from './parsed-message-part';\r\nimport {IICUMessage, INormalizedMessage} from '../api/index';\r\nimport {\r\n    COMMA, CURLY_BRACE_CLOSE, CURLY_BRACE_OPEN, ICUMessageTokenizer, ICUToken, PLURAL, SELECT,\r\n    TEXT\r\n} from './icu-message-tokenizer';\r\nimport {ICUMessage} from './icu-message';\r\nimport {format} from 'util';\r\nimport {IMessageParser} from './i-message-parser';\r\n\r\n/**\r\n * Created by martin on 02.06.2017.\r\n * A message part consisting of an icu message.\r\n * There can only be one icu message in a parsed message.\r\n * Syntax of ICU message is '{' <keyname> ',' 'select'|'plural' ',' (<category> '{' text '}')+ '}'\r\n */\r\n\r\nexport class ParsedMessagePartICUMessage extends ParsedMessagePart {\r\n\r\n    private _message: ICUMessage;\r\n    private _messageText: string;\r\n    private _tokenizer: ICUMessageTokenizer;\r\n\r\n    constructor(icuMessageText: string, private _parser: IMessageParser) {\r\n        super(ParsedMessagePartType.ICU_MESSAGE);\r\n        if (icuMessageText) {\r\n            this.parseICUMessage(icuMessageText);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Test wether text might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param icuMessageText icuMessageText\r\n     * @return wether text might be an ICU message.\r\n     */\r\n    static looksLikeICUMessage(icuMessageText: string): boolean {\r\n        const part = new ParsedMessagePartICUMessage(null, null);\r\n        return part.looksLikeICUMessage(icuMessageText);\r\n    }\r\n\r\n    public asDisplayString(displayFormat?: string) {\r\n        return '<ICU-Message/>';\r\n    }\r\n\r\n    /**\r\n     * return the parsed message.\r\n     * @return parsed message\r\n     */\r\n    public getICUMessage(): IICUMessage {\r\n        return this._message;\r\n    }\r\n\r\n    /**\r\n     * Parse the message.\r\n     * @param text message text to parse\r\n     * @throws an error if the syntax is not ok in any way.\r\n     */\r\n    private parseICUMessage(text: string) {\r\n        // console.log('message ', text);\r\n        // const tokens = new ICUMessageTokenizer().tokenize(text);\r\n        // tokens.forEach((tok) => {\r\n        //     console.log('Token', tok.type, tok.value);\r\n        // });\r\n        this._messageText = text;\r\n        this._tokenizer = new ICUMessageTokenizer();\r\n        this._tokenizer.input(text);\r\n        this.expectNext(CURLY_BRACE_OPEN);\r\n        this.expectNext(TEXT); // varname, not used currently, ng always used VAR_PLURAL or VAR_SELECT\r\n        this.expectNext(COMMA);\r\n        let token: ICUToken = this._tokenizer.next();\r\n        if (token.type === PLURAL) {\r\n            this._message = new ICUMessage(this._parser, true);\r\n        } else if (token.type === SELECT) {\r\n            this._message = new ICUMessage(this._parser, false);\r\n        }\r\n        this.expectNext(COMMA);\r\n        token = this._tokenizer.peek();\r\n        while (token.type !== CURLY_BRACE_CLOSE) {\r\n            const category = this.expectNext(TEXT).value.trim();\r\n            this.expectNext(CURLY_BRACE_OPEN);\r\n            const message = this.expectNext(TEXT).value;\r\n            this._message.addCategory(category, this.parseNativeSubMessage(message));\r\n            this.expectNext(CURLY_BRACE_CLOSE);\r\n            token = this._tokenizer.peek();\r\n        }\r\n        this.expectNext(CURLY_BRACE_CLOSE);\r\n        this.expectNext('EOF');\r\n    }\r\n\r\n    /**\r\n     * Parse the message to check, wether it might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param text message text to parse\r\n     */\r\n    private looksLikeICUMessage(text: string): boolean {\r\n        // console.log('message ', text);\r\n        // const tokens = new ICUMessageTokenizer().tokenize(text);\r\n        // tokens.forEach((tok) => {\r\n        //     console.log('Token', tok.type, tok.value);\r\n        // });\r\n        this._tokenizer = new ICUMessageTokenizer();\r\n        this._tokenizer.input(text);\r\n        try {\r\n            this.expectNext(CURLY_BRACE_OPEN);\r\n            this.expectNext(TEXT); // varname, not used currently, ng always used VAR_PLURAL or VAR_SELECT\r\n            this.expectNext(COMMA);\r\n            const token: ICUToken = this._tokenizer.next();\r\n            if (token.type !== PLURAL && token.type !== SELECT) {\r\n                return false;\r\n            }\r\n            this.expectNext(COMMA);\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Read next token and expect, that it is of the given type.\r\n     * @param tokentype expected type.\r\n     * @return Token\r\n     * @throws error, if next token has wrong type.\r\n     */\r\n    private expectNext(tokentype: string): ICUToken {\r\n        const token = this._tokenizer.next();\r\n        if (token.type !== tokentype) {\r\n            throw new Error(format('Error parsing ICU Message: expected %s, found %s (%s) (message %s)',\r\n                tokentype, token.type, token.value, this._messageText));\r\n        }\r\n        return token;\r\n    }\r\n\r\n    /**\r\n     * Parse XML text to normalized message.\r\n     * @param message message in format dependent xml syntax.\r\n     * @return normalized message\r\n     */\r\n    private parseNativeSubMessage(message: string): INormalizedMessage {\r\n        return this._parser.createNormalizedMessageFromXMLString(message, null);\r\n    }\r\n}\r\n"]},"resolvedIds":{"util":{"external":true,"id":"util","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./parsed-message-part":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./icu-message":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\icu-message.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./icu-message-tokenizer":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\icu-message-tokenizer.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2903,"body":[{"type":"ImportDeclaration","start":0,"end":81,"specifiers":[{"type":"ImportSpecifier","start":9,"end":26,"imported":{"type":"Identifier","start":9,"end":26,"name":"ParsedMessagePart"},"local":{"type":"Identifier","start":9,"end":26,"name":"ParsedMessagePart"}},{"type":"ImportSpecifier","start":28,"end":49,"imported":{"type":"Identifier","start":28,"end":49,"name":"ParsedMessagePartType"},"local":{"type":"Identifier","start":28,"end":49,"name":"ParsedMessagePartType"}}],"source":{"type":"Literal","start":57,"end":80,"value":"./parsed-message-part","raw":"'./parsed-message-part'"}},{"type":"ExportNamedDeclaration","start":209,"end":631,"declaration":{"type":"ClassDeclaration","start":216,"end":631,"id":{"type":"Identifier","start":222,"end":252,"name":"ParsedMessagePartICUMessageRef"},"superClass":{"type":"Identifier","start":261,"end":278,"name":"ParsedMessagePart"},"body":{"type":"ClassBody","start":279,"end":631,"body":[{"type":"MethodDefinition","start":286,"end":432,"static":false,"computed":false,"key":{"type":"Identifier","start":286,"end":297,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":297,"end":432,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":298,"end":303,"name":"index"},{"type":"Identifier","start":305,"end":309,"name":"disp"}],"body":{"type":"BlockStatement","start":311,"end":432,"body":[{"type":"ExpressionStatement","start":322,"end":367,"expression":{"type":"CallExpression","start":322,"end":366,"callee":{"type":"Super","start":322,"end":327},"arguments":[{"type":"MemberExpression","start":328,"end":365,"object":{"type":"Identifier","start":328,"end":349,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":350,"end":365,"name":"ICU_MESSAGE_REF"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":377,"end":397,"expression":{"type":"AssignmentExpression","start":377,"end":396,"operator":"=","left":{"type":"MemberExpression","start":377,"end":388,"object":{"type":"ThisExpression","start":377,"end":381},"property":{"type":"Identifier","start":382,"end":388,"name":"_index"},"computed":false,"optional":false},"right":{"type":"Identifier","start":391,"end":396,"name":"index"}}},{"type":"ExpressionStatement","start":407,"end":425,"expression":{"type":"AssignmentExpression","start":407,"end":424,"operator":"=","left":{"type":"MemberExpression","start":407,"end":417,"object":{"type":"ThisExpression","start":407,"end":411},"property":{"type":"Identifier","start":412,"end":417,"name":"_disp"},"computed":false,"optional":false},"right":{"type":"Identifier","start":420,"end":424,"name":"disp"}}}]}}},{"type":"MethodDefinition","start":438,"end":528,"static":false,"computed":false,"key":{"type":"Identifier","start":438,"end":453,"name":"asDisplayString"},"kind":"method","value":{"type":"FunctionExpression","start":453,"end":528,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":454,"end":460,"name":"format"}],"body":{"type":"BlockStatement","start":462,"end":528,"body":[{"type":"ReturnStatement","start":473,"end":521,"argument":{"type":"BinaryExpression","start":480,"end":520,"left":{"type":"BinaryExpression","start":480,"end":513,"left":{"type":"Literal","start":480,"end":499,"value":"<ICU-Message-Ref_","raw":"'<ICU-Message-Ref_'"},"operator":"+","right":{"type":"MemberExpression","start":502,"end":513,"object":{"type":"ThisExpression","start":502,"end":506},"property":{"type":"Identifier","start":507,"end":513,"name":"_index"},"computed":false,"optional":false}},"operator":"+","right":{"type":"Literal","start":516,"end":520,"value":"/>","raw":"'/>'"}}}]}}},{"type":"MethodDefinition","start":534,"end":579,"static":false,"computed":false,"key":{"type":"Identifier","start":534,"end":539,"name":"index"},"kind":"method","value":{"type":"FunctionExpression","start":539,"end":579,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":542,"end":579,"body":[{"type":"ReturnStatement","start":553,"end":572,"argument":{"type":"MemberExpression","start":560,"end":571,"object":{"type":"ThisExpression","start":560,"end":564},"property":{"type":"Identifier","start":565,"end":571,"name":"_index"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":585,"end":628,"static":false,"computed":false,"key":{"type":"Identifier","start":585,"end":589,"name":"disp"},"kind":"method","value":{"type":"FunctionExpression","start":589,"end":628,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":592,"end":628,"body":[{"type":"ReturnStatement","start":603,"end":621,"argument":{"type":"MemberExpression","start":610,"end":620,"object":{"type":"ThisExpression","start":610,"end":614},"property":{"type":"Identifier","start":615,"end":620,"name":"_disp"},"computed":false,"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC1pY3UtbWVzc2FnZS1yZWYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9pbXBsL3BhcnNlZC1tZXNzYWdlLXBhcnQtaWN1LW1lc3NhZ2UtcmVmLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSxxQkFBcUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRS9FOzs7O0dBSUc7QUFFSCxNQUFNLE9BQU8sOEJBQStCLFNBQVEsaUJBQWlCO0lBT2pFLFlBQVksS0FBYSxFQUFFLElBQVk7UUFDbkMsS0FBSyxDQUFDLHFCQUFxQixDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO0lBQ3RCLENBQUM7SUFFTSxlQUFlLENBQUMsTUFBZTtRQUNsQyxPQUFPLG1CQUFtQixHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO0lBQ3BELENBQUM7SUFFTSxLQUFLO1FBQ1IsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFFTSxJQUFJO1FBQ1AsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3RCLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnQsIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0JztcclxuaW1wb3J0IHtOT1JNQUxJWkFUSU9OX0ZPUk1BVF9OR1hUUkFOU0xBVEV9IGZyb20gJy4uL2FwaS9jb25zdGFudHMnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMDUuMDUuMjAxNy5cclxuICogQSByZWZlcmVuY2UgdG8gYW4gSUNVIG1lc3NhZ2VcclxuICogaWN1IHJlZmVyZW5jZXMgYXJlIG51bWJlcmVkIGZyb20gMCB0byBuLlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBQYXJzZWRNZXNzYWdlUGFydElDVU1lc3NhZ2VSZWYgZXh0ZW5kcyBQYXJzZWRNZXNzYWdlUGFydCB7XHJcblxyXG4gICAgLy8gaW5kZXggMCAuLiBuXHJcbiAgICBwcml2YXRlIF9pbmRleDogbnVtYmVyO1xyXG4gICAgLy8gb3B0aW9uYWwgZGlzcC1BdHRyaWJ1dGUgdmFsdWUsIGNvbnRhaW5zIHRoZSBvcmlnaW5hbCBleHByZXNzaW9uLlxyXG4gICAgcHJpdmF0ZSBfZGlzcD86IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihpbmRleDogbnVtYmVyLCBkaXNwOiBzdHJpbmcpIHtcclxuICAgICAgICBzdXBlcihQYXJzZWRNZXNzYWdlUGFydFR5cGUuSUNVX01FU1NBR0VfUkVGKTtcclxuICAgICAgICB0aGlzLl9pbmRleCA9IGluZGV4O1xyXG4gICAgICAgIHRoaXMuX2Rpc3AgPSBkaXNwO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhc0Rpc3BsYXlTdHJpbmcoZm9ybWF0Pzogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuICc8SUNVLU1lc3NhZ2UtUmVmXycgKyB0aGlzLl9pbmRleCArICcvPic7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGluZGV4KCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2luZGV4O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBkaXNwKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Rpc3A7XHJcbiAgICB9XHJcbn1cclxuIl19","start":633,"end":2903}]},"code":"import { ParsedMessagePart, ParsedMessagePartType } from './parsed-message-part';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A reference to an ICU message\r\n * icu references are numbered from 0 to n.\r\n */\r\nexport class ParsedMessagePartICUMessageRef extends ParsedMessagePart {\r\n    constructor(index, disp) {\r\n        super(ParsedMessagePartType.ICU_MESSAGE_REF);\r\n        this._index = index;\r\n        this._disp = disp;\r\n    }\r\n    asDisplayString(format) {\r\n        return '<ICU-Message-Ref_' + this._index + '/>';\r\n    }\r\n    index() {\r\n        return this._index;\r\n    }\r\n    disp() {\r\n        return this._disp;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC1pY3UtbWVzc2FnZS1yZWYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9pbXBsL3BhcnNlZC1tZXNzYWdlLXBhcnQtaWN1LW1lc3NhZ2UtcmVmLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSxxQkFBcUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRS9FOzs7O0dBSUc7QUFFSCxNQUFNLE9BQU8sOEJBQStCLFNBQVEsaUJBQWlCO0lBT2pFLFlBQVksS0FBYSxFQUFFLElBQVk7UUFDbkMsS0FBSyxDQUFDLHFCQUFxQixDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO0lBQ3RCLENBQUM7SUFFTSxlQUFlLENBQUMsTUFBZTtRQUNsQyxPQUFPLG1CQUFtQixHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO0lBQ3BELENBQUM7SUFFTSxLQUFLO1FBQ1IsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFFTSxJQUFJO1FBQ1AsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3RCLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnQsIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0JztcclxuaW1wb3J0IHtOT1JNQUxJWkFUSU9OX0ZPUk1BVF9OR1hUUkFOU0xBVEV9IGZyb20gJy4uL2FwaS9jb25zdGFudHMnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMDUuMDUuMjAxNy5cclxuICogQSByZWZlcmVuY2UgdG8gYW4gSUNVIG1lc3NhZ2VcclxuICogaWN1IHJlZmVyZW5jZXMgYXJlIG51bWJlcmVkIGZyb20gMCB0byBuLlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBQYXJzZWRNZXNzYWdlUGFydElDVU1lc3NhZ2VSZWYgZXh0ZW5kcyBQYXJzZWRNZXNzYWdlUGFydCB7XHJcblxyXG4gICAgLy8gaW5kZXggMCAuLiBuXHJcbiAgICBwcml2YXRlIF9pbmRleDogbnVtYmVyO1xyXG4gICAgLy8gb3B0aW9uYWwgZGlzcC1BdHRyaWJ1dGUgdmFsdWUsIGNvbnRhaW5zIHRoZSBvcmlnaW5hbCBleHByZXNzaW9uLlxyXG4gICAgcHJpdmF0ZSBfZGlzcD86IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihpbmRleDogbnVtYmVyLCBkaXNwOiBzdHJpbmcpIHtcclxuICAgICAgICBzdXBlcihQYXJzZWRNZXNzYWdlUGFydFR5cGUuSUNVX01FU1NBR0VfUkVGKTtcclxuICAgICAgICB0aGlzLl9pbmRleCA9IGluZGV4O1xyXG4gICAgICAgIHRoaXMuX2Rpc3AgPSBkaXNwO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhc0Rpc3BsYXlTdHJpbmcoZm9ybWF0Pzogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuICc8SUNVLU1lc3NhZ2UtUmVmXycgKyB0aGlzLl9pbmRleCArICcvPic7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGluZGV4KCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2luZGV4O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBkaXNwKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Rpc3A7XHJcbiAgICB9XHJcbn1cclxuIl19","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-icu-message-ref.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { ParsedMessagePart, ParsedMessagePartType } from './parsed-message-part';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A reference to an ICU message\r\n * icu references are numbered from 0 to n.\r\n */\r\nexport class ParsedMessagePartICUMessageRef extends ParsedMessagePart {\r\n    constructor(index, disp) {\r\n        super(ParsedMessagePartType.ICU_MESSAGE_REF);\r\n        this._index = index;\r\n        this._disp = disp;\r\n    }\r\n    asDisplayString(format) {\r\n        return '<ICU-Message-Ref_' + this._index + '/>';\r\n    }\r\n    index() {\r\n        return this._index;\r\n    }\r\n    disp() {\r\n        return this._disp;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC1pY3UtbWVzc2FnZS1yZWYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9pbXBsL3BhcnNlZC1tZXNzYWdlLXBhcnQtaWN1LW1lc3NhZ2UtcmVmLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSxxQkFBcUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRS9FOzs7O0dBSUc7QUFFSCxNQUFNLE9BQU8sOEJBQStCLFNBQVEsaUJBQWlCO0lBT2pFLFlBQVksS0FBYSxFQUFFLElBQVk7UUFDbkMsS0FBSyxDQUFDLHFCQUFxQixDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO0lBQ3RCLENBQUM7SUFFTSxlQUFlLENBQUMsTUFBZTtRQUNsQyxPQUFPLG1CQUFtQixHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO0lBQ3BELENBQUM7SUFFTSxLQUFLO1FBQ1IsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFFTSxJQUFJO1FBQ1AsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3RCLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnQsIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0JztcclxuaW1wb3J0IHtOT1JNQUxJWkFUSU9OX0ZPUk1BVF9OR1hUUkFOU0xBVEV9IGZyb20gJy4uL2FwaS9jb25zdGFudHMnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMDUuMDUuMjAxNy5cclxuICogQSByZWZlcmVuY2UgdG8gYW4gSUNVIG1lc3NhZ2VcclxuICogaWN1IHJlZmVyZW5jZXMgYXJlIG51bWJlcmVkIGZyb20gMCB0byBuLlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBQYXJzZWRNZXNzYWdlUGFydElDVU1lc3NhZ2VSZWYgZXh0ZW5kcyBQYXJzZWRNZXNzYWdlUGFydCB7XHJcblxyXG4gICAgLy8gaW5kZXggMCAuLiBuXHJcbiAgICBwcml2YXRlIF9pbmRleDogbnVtYmVyO1xyXG4gICAgLy8gb3B0aW9uYWwgZGlzcC1BdHRyaWJ1dGUgdmFsdWUsIGNvbnRhaW5zIHRoZSBvcmlnaW5hbCBleHByZXNzaW9uLlxyXG4gICAgcHJpdmF0ZSBfZGlzcD86IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihpbmRleDogbnVtYmVyLCBkaXNwOiBzdHJpbmcpIHtcclxuICAgICAgICBzdXBlcihQYXJzZWRNZXNzYWdlUGFydFR5cGUuSUNVX01FU1NBR0VfUkVGKTtcclxuICAgICAgICB0aGlzLl9pbmRleCA9IGluZGV4O1xyXG4gICAgICAgIHRoaXMuX2Rpc3AgPSBkaXNwO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhc0Rpc3BsYXlTdHJpbmcoZm9ybWF0Pzogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuICc8SUNVLU1lc3NhZ2UtUmVmXycgKyB0aGlzLl9pbmRleCArICcvPic7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGluZGV4KCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2luZGV4O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBkaXNwKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Rpc3A7XHJcbiAgICB9XHJcbn1cclxuIl19","originalSourcemap":{"version":3,"file":"parsed-message-part-icu-message-ref.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/parsed-message-part-icu-message-ref.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[26,0,0,25],[28,0,0,27],[49,0,0,48],[51,0,0,49],[57,0,0,55],[80,0,0,78],[81,0,0,79]],[[0,0,2,0]],[],[],[],[[3,0,6,3]],[[0,0,8,0],[6,0,8,6],[13,0,8,13],[43,0,8,44],[52,0,8,52],[69,0,8,69]],[[4,0,15,4],[16,0,15,16],[21,0,15,29],[23,0,15,31],[27,0,15,43]],[[8,0,16,8],[13,0,16,13],[14,0,16,14],[35,0,16,35],[36,0,16,36],[51,0,16,51],[52,0,16,52],[53,0,16,53]],[[8,0,17,8],[12,0,17,12],[13,0,17,13],[19,0,17,19],[22,0,17,22],[27,0,17,27],[28,0,17,28]],[[8,0,18,8],[12,0,18,12],[13,0,18,13],[18,0,18,18],[21,0,18,21],[25,0,18,25],[26,0,18,26]],[[4,0,19,4],[5,0,19,5]],[[4,0,21,11],[19,0,21,26],[20,0,21,27],[26,0,21,42]],[[8,0,22,8],[15,0,22,15],[34,0,22,34],[37,0,22,37],[41,0,22,41],[42,0,22,42],[48,0,22,48],[51,0,22,51],[55,0,22,55],[56,0,22,56]],[[4,0,23,4],[5,0,23,5]],[[4,0,25,11],[9,0,25,16]],[[8,0,26,8],[15,0,26,15],[19,0,26,19],[20,0,26,20],[26,0,26,26],[27,0,26,27]],[[4,0,27,4],[5,0,27,5]],[[4,0,29,11],[8,0,29,15]],[[8,0,30,8],[15,0,30,15],[19,0,30,19],[20,0,30,20],[25,0,30,25],[26,0,30,26]],[[4,0,31,4],[5,0,31,5]],[[1,0,32,1]]],"sourcesContent":["import {ParsedMessagePart, ParsedMessagePartType} from './parsed-message-part';\r\nimport {NORMALIZATION_FORMAT_NGXTRANSLATE} from '../api/constants';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A reference to an ICU message\r\n * icu references are numbered from 0 to n.\r\n */\r\n\r\nexport class ParsedMessagePartICUMessageRef extends ParsedMessagePart {\r\n\r\n    // index 0 .. n\r\n    private _index: number;\r\n    // optional disp-Attribute value, contains the original expression.\r\n    private _disp?: string;\r\n\r\n    constructor(index: number, disp: string) {\r\n        super(ParsedMessagePartType.ICU_MESSAGE_REF);\r\n        this._index = index;\r\n        this._disp = disp;\r\n    }\r\n\r\n    public asDisplayString(format?: string) {\r\n        return '<ICU-Message-Ref_' + this._index + '/>';\r\n    }\r\n\r\n    public index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    public disp(): string {\r\n        return this._disp;\r\n    }\r\n}\r\n"]},"resolvedIds":{"./parsed-message-part":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":3230,"body":[{"type":"ImportDeclaration","start":0,"end":81,"specifiers":[{"type":"ImportSpecifier","start":9,"end":26,"imported":{"type":"Identifier","start":9,"end":26,"name":"ParsedMessagePart"},"local":{"type":"Identifier","start":9,"end":26,"name":"ParsedMessagePart"}},{"type":"ImportSpecifier","start":28,"end":49,"imported":{"type":"Identifier","start":28,"end":49,"name":"ParsedMessagePartType"},"local":{"type":"Identifier","start":28,"end":49,"name":"ParsedMessagePartType"}}],"source":{"type":"Literal","start":57,"end":80,"value":"./parsed-message-part","raw":"'./parsed-message-part'"}},{"type":"ExportNamedDeclaration","start":188,"end":786,"declaration":{"type":"ClassDeclaration","start":195,"end":786,"id":{"type":"Identifier","start":201,"end":226,"name":"ParsedMessagePartEmptyTag"},"superClass":{"type":"Identifier","start":235,"end":252,"name":"ParsedMessagePart"},"body":{"type":"ClassBody","start":253,"end":786,"body":[{"type":"MethodDefinition","start":260,"end":421,"static":false,"computed":false,"key":{"type":"Identifier","start":260,"end":271,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":271,"end":421,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":272,"end":279,"name":"tagname"},{"type":"Identifier","start":281,"end":290,"name":"idcounter"}],"body":{"type":"BlockStatement","start":292,"end":421,"body":[{"type":"ExpressionStatement","start":303,"end":342,"expression":{"type":"CallExpression","start":303,"end":341,"callee":{"type":"Super","start":303,"end":308},"arguments":[{"type":"MemberExpression","start":309,"end":340,"object":{"type":"Identifier","start":309,"end":330,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":331,"end":340,"name":"EMPTY_TAG"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":352,"end":376,"expression":{"type":"AssignmentExpression","start":352,"end":375,"operator":"=","left":{"type":"MemberExpression","start":352,"end":365,"object":{"type":"ThisExpression","start":352,"end":356},"property":{"type":"Identifier","start":357,"end":365,"name":"_tagname"},"computed":false,"optional":false},"right":{"type":"Identifier","start":368,"end":375,"name":"tagname"}}},{"type":"ExpressionStatement","start":386,"end":414,"expression":{"type":"AssignmentExpression","start":386,"end":413,"operator":"=","left":{"type":"MemberExpression","start":386,"end":401,"object":{"type":"ThisExpression","start":386,"end":390},"property":{"type":"Identifier","start":391,"end":401,"name":"_idcounter"},"computed":false,"optional":false},"right":{"type":"Identifier","start":404,"end":413,"name":"idcounter"}}}]}}},{"type":"MethodDefinition","start":427,"end":669,"static":false,"computed":false,"key":{"type":"Identifier","start":427,"end":442,"name":"asDisplayString"},"kind":"method","value":{"type":"FunctionExpression","start":442,"end":669,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":443,"end":449,"name":"format"}],"body":{"type":"BlockStatement","start":451,"end":669,"body":[{"type":"IfStatement","start":462,"end":662,"test":{"type":"BinaryExpression","start":466,"end":487,"left":{"type":"MemberExpression","start":466,"end":481,"object":{"type":"ThisExpression","start":466,"end":470},"property":{"type":"Identifier","start":471,"end":481,"name":"_idcounter"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":486,"end":487,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":489,"end":548,"body":[{"type":"ReturnStatement","start":504,"end":537,"argument":{"type":"BinaryExpression","start":511,"end":536,"left":{"type":"BinaryExpression","start":511,"end":530,"left":{"type":"Literal","start":511,"end":514,"value":"<","raw":"'<'"},"operator":"+","right":{"type":"MemberExpression","start":517,"end":530,"object":{"type":"ThisExpression","start":517,"end":521},"property":{"type":"Identifier","start":522,"end":530,"name":"_tagname"},"computed":false,"optional":false}},"operator":"+","right":{"type":"Literal","start":533,"end":536,"value":">","raw":"'>'"}}}]},"alternate":{"type":"BlockStatement","start":563,"end":662,"body":[{"type":"ReturnStatement","start":578,"end":651,"argument":{"type":"BinaryExpression","start":585,"end":650,"left":{"type":"BinaryExpression","start":585,"end":643,"left":{"type":"BinaryExpression","start":585,"end":614,"left":{"type":"BinaryExpression","start":585,"end":604,"left":{"type":"Literal","start":585,"end":588,"value":"<","raw":"'<'"},"operator":"+","right":{"type":"MemberExpression","start":591,"end":604,"object":{"type":"ThisExpression","start":591,"end":595},"property":{"type":"Identifier","start":596,"end":604,"name":"_tagname"},"computed":false,"optional":false}},"operator":"+","right":{"type":"Literal","start":607,"end":614,"value":" id=\"","raw":"' id=\"'"}},"operator":"+","right":{"type":"CallExpression","start":617,"end":643,"callee":{"type":"MemberExpression","start":617,"end":641,"object":{"type":"MemberExpression","start":617,"end":632,"object":{"type":"ThisExpression","start":617,"end":621},"property":{"type":"Identifier","start":622,"end":632,"name":"_idcounter"},"computed":false,"optional":false},"property":{"type":"Identifier","start":633,"end":641,"name":"toString"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"+","right":{"type":"Literal","start":646,"end":650,"value":"\">","raw":"'\">'"}}}]}}]}}},{"type":"MethodDefinition","start":675,"end":724,"static":false,"computed":false,"key":{"type":"Identifier","start":675,"end":682,"name":"tagName"},"kind":"method","value":{"type":"FunctionExpression","start":682,"end":724,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":685,"end":724,"body":[{"type":"ReturnStatement","start":696,"end":717,"argument":{"type":"MemberExpression","start":703,"end":716,"object":{"type":"ThisExpression","start":703,"end":707},"property":{"type":"Identifier","start":708,"end":716,"name":"_tagname"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":730,"end":783,"static":false,"computed":false,"key":{"type":"Identifier","start":730,"end":739,"name":"idCounter"},"kind":"method","value":{"type":"FunctionExpression","start":739,"end":783,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":742,"end":783,"body":[{"type":"ReturnStatement","start":753,"end":776,"argument":{"type":"MemberExpression","start":760,"end":775,"object":{"type":"ThisExpression","start":760,"end":764},"property":{"type":"Identifier","start":765,"end":775,"name":"_idcounter"},"computed":false,"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC1lbXB0eS10YWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9pbXBsL3BhcnNlZC1tZXNzYWdlLXBhcnQtZW1wdHktdGFnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSxxQkFBcUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQy9FOzs7R0FHRztBQUVILE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxpQkFBaUI7SUFLNUQsWUFBWSxPQUFlLEVBQUUsU0FBaUI7UUFDMUMsS0FBSyxDQUFDLHFCQUFxQixDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO0lBQ2hDLENBQUM7SUFFTSxlQUFlLENBQUMsTUFBZTtRQUNsQyxJQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssQ0FBQyxFQUFFO1lBQ3ZCLE9BQU8sR0FBRyxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDO1NBQ3BDO2FBQU07WUFDSCxPQUFPLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxHQUFHLElBQUksQ0FBQztTQUM1RTtJQUNMLENBQUM7SUFFTSxPQUFPO1FBQ1YsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFFTSxTQUFTO1FBQ1osT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQzNCLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnQsIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0JztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDE0LjA2LjIwMTcuXHJcbiAqIEEgbWVzc2FnZSBwYXJ0IGNvbnNpc3Rpbmcgb2YgYW4gZW1wdHkgdGFnIGxpa2UgPGJyLz4uXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFBhcnNlZE1lc3NhZ2VQYXJ0RW1wdHlUYWcgZXh0ZW5kcyBQYXJzZWRNZXNzYWdlUGFydCB7XHJcblxyXG4gICAgcHJpdmF0ZSBfdGFnbmFtZTogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBfaWRjb3VudGVyOiBudW1iZXI7XHJcblxyXG4gICAgY29uc3RydWN0b3IodGFnbmFtZTogc3RyaW5nLCBpZGNvdW50ZXI6IG51bWJlcikge1xyXG4gICAgICAgIHN1cGVyKFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5FTVBUWV9UQUcpO1xyXG4gICAgICAgIHRoaXMuX3RhZ25hbWUgPSB0YWduYW1lO1xyXG4gICAgICAgIHRoaXMuX2lkY291bnRlciA9IGlkY291bnRlcjtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXNEaXNwbGF5U3RyaW5nKGZvcm1hdD86IHN0cmluZykge1xyXG4gICAgICAgIGlmICh0aGlzLl9pZGNvdW50ZXIgPT09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuICc8JyArIHRoaXMuX3RhZ25hbWUgKyAnPic7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuICc8JyArIHRoaXMuX3RhZ25hbWUgKyAnIGlkPVwiJyArIHRoaXMuX2lkY291bnRlci50b1N0cmluZygpICsgJ1wiPic7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB0YWdOYW1lKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RhZ25hbWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGlkQ291bnRlcigpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9pZGNvdW50ZXI7XHJcbiAgICB9XHJcbn1cclxuIl19","start":788,"end":3230}]},"code":"import { ParsedMessagePart, ParsedMessagePartType } from './parsed-message-part';\r\n/**\r\n * Created by martin on 14.06.2017.\r\n * A message part consisting of an empty tag like <br/>.\r\n */\r\nexport class ParsedMessagePartEmptyTag extends ParsedMessagePart {\r\n    constructor(tagname, idcounter) {\r\n        super(ParsedMessagePartType.EMPTY_TAG);\r\n        this._tagname = tagname;\r\n        this._idcounter = idcounter;\r\n    }\r\n    asDisplayString(format) {\r\n        if (this._idcounter === 0) {\r\n            return '<' + this._tagname + '>';\r\n        }\r\n        else {\r\n            return '<' + this._tagname + ' id=\"' + this._idcounter.toString() + '\">';\r\n        }\r\n    }\r\n    tagName() {\r\n        return this._tagname;\r\n    }\r\n    idCounter() {\r\n        return this._idcounter;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC1lbXB0eS10YWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9pbXBsL3BhcnNlZC1tZXNzYWdlLXBhcnQtZW1wdHktdGFnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSxxQkFBcUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQy9FOzs7R0FHRztBQUVILE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxpQkFBaUI7SUFLNUQsWUFBWSxPQUFlLEVBQUUsU0FBaUI7UUFDMUMsS0FBSyxDQUFDLHFCQUFxQixDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO0lBQ2hDLENBQUM7SUFFTSxlQUFlLENBQUMsTUFBZTtRQUNsQyxJQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssQ0FBQyxFQUFFO1lBQ3ZCLE9BQU8sR0FBRyxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDO1NBQ3BDO2FBQU07WUFDSCxPQUFPLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxHQUFHLElBQUksQ0FBQztTQUM1RTtJQUNMLENBQUM7SUFFTSxPQUFPO1FBQ1YsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFFTSxTQUFTO1FBQ1osT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQzNCLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnQsIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0JztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDE0LjA2LjIwMTcuXHJcbiAqIEEgbWVzc2FnZSBwYXJ0IGNvbnNpc3Rpbmcgb2YgYW4gZW1wdHkgdGFnIGxpa2UgPGJyLz4uXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFBhcnNlZE1lc3NhZ2VQYXJ0RW1wdHlUYWcgZXh0ZW5kcyBQYXJzZWRNZXNzYWdlUGFydCB7XHJcblxyXG4gICAgcHJpdmF0ZSBfdGFnbmFtZTogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBfaWRjb3VudGVyOiBudW1iZXI7XHJcblxyXG4gICAgY29uc3RydWN0b3IodGFnbmFtZTogc3RyaW5nLCBpZGNvdW50ZXI6IG51bWJlcikge1xyXG4gICAgICAgIHN1cGVyKFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5FTVBUWV9UQUcpO1xyXG4gICAgICAgIHRoaXMuX3RhZ25hbWUgPSB0YWduYW1lO1xyXG4gICAgICAgIHRoaXMuX2lkY291bnRlciA9IGlkY291bnRlcjtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXNEaXNwbGF5U3RyaW5nKGZvcm1hdD86IHN0cmluZykge1xyXG4gICAgICAgIGlmICh0aGlzLl9pZGNvdW50ZXIgPT09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuICc8JyArIHRoaXMuX3RhZ25hbWUgKyAnPic7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuICc8JyArIHRoaXMuX3RhZ25hbWUgKyAnIGlkPVwiJyArIHRoaXMuX2lkY291bnRlci50b1N0cmluZygpICsgJ1wiPic7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB0YWdOYW1lKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RhZ25hbWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGlkQ291bnRlcigpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9pZGNvdW50ZXI7XHJcbiAgICB9XHJcbn1cclxuIl19","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-empty-tag.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { ParsedMessagePart, ParsedMessagePartType } from './parsed-message-part';\r\n/**\r\n * Created by martin on 14.06.2017.\r\n * A message part consisting of an empty tag like <br/>.\r\n */\r\nexport class ParsedMessagePartEmptyTag extends ParsedMessagePart {\r\n    constructor(tagname, idcounter) {\r\n        super(ParsedMessagePartType.EMPTY_TAG);\r\n        this._tagname = tagname;\r\n        this._idcounter = idcounter;\r\n    }\r\n    asDisplayString(format) {\r\n        if (this._idcounter === 0) {\r\n            return '<' + this._tagname + '>';\r\n        }\r\n        else {\r\n            return '<' + this._tagname + ' id=\"' + this._idcounter.toString() + '\">';\r\n        }\r\n    }\r\n    tagName() {\r\n        return this._tagname;\r\n    }\r\n    idCounter() {\r\n        return this._idcounter;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC1lbXB0eS10YWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9pbXBsL3BhcnNlZC1tZXNzYWdlLXBhcnQtZW1wdHktdGFnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSxxQkFBcUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQy9FOzs7R0FHRztBQUVILE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxpQkFBaUI7SUFLNUQsWUFBWSxPQUFlLEVBQUUsU0FBaUI7UUFDMUMsS0FBSyxDQUFDLHFCQUFxQixDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO0lBQ2hDLENBQUM7SUFFTSxlQUFlLENBQUMsTUFBZTtRQUNsQyxJQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssQ0FBQyxFQUFFO1lBQ3ZCLE9BQU8sR0FBRyxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDO1NBQ3BDO2FBQU07WUFDSCxPQUFPLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxHQUFHLElBQUksQ0FBQztTQUM1RTtJQUNMLENBQUM7SUFFTSxPQUFPO1FBQ1YsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFFTSxTQUFTO1FBQ1osT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQzNCLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnQsIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0JztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDE0LjA2LjIwMTcuXHJcbiAqIEEgbWVzc2FnZSBwYXJ0IGNvbnNpc3Rpbmcgb2YgYW4gZW1wdHkgdGFnIGxpa2UgPGJyLz4uXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFBhcnNlZE1lc3NhZ2VQYXJ0RW1wdHlUYWcgZXh0ZW5kcyBQYXJzZWRNZXNzYWdlUGFydCB7XHJcblxyXG4gICAgcHJpdmF0ZSBfdGFnbmFtZTogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBfaWRjb3VudGVyOiBudW1iZXI7XHJcblxyXG4gICAgY29uc3RydWN0b3IodGFnbmFtZTogc3RyaW5nLCBpZGNvdW50ZXI6IG51bWJlcikge1xyXG4gICAgICAgIHN1cGVyKFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5FTVBUWV9UQUcpO1xyXG4gICAgICAgIHRoaXMuX3RhZ25hbWUgPSB0YWduYW1lO1xyXG4gICAgICAgIHRoaXMuX2lkY291bnRlciA9IGlkY291bnRlcjtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXNEaXNwbGF5U3RyaW5nKGZvcm1hdD86IHN0cmluZykge1xyXG4gICAgICAgIGlmICh0aGlzLl9pZGNvdW50ZXIgPT09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuICc8JyArIHRoaXMuX3RhZ25hbWUgKyAnPic7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuICc8JyArIHRoaXMuX3RhZ25hbWUgKyAnIGlkPVwiJyArIHRoaXMuX2lkY291bnRlci50b1N0cmluZygpICsgJ1wiPic7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB0YWdOYW1lKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RhZ25hbWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGlkQ291bnRlcigpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9pZGNvdW50ZXI7XHJcbiAgICB9XHJcbn1cclxuIl19","originalSourcemap":{"version":3,"file":"parsed-message-part-empty-tag.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/parsed-message-part-empty-tag.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[26,0,0,25],[28,0,0,27],[49,0,0,48],[51,0,0,49],[57,0,0,55],[80,0,0,78],[81,0,0,79]],[[0,0,1,0]],[],[],[[3,0,4,3]],[[0,0,6,0],[6,0,6,6],[13,0,6,13],[38,0,6,39],[47,0,6,47],[64,0,6,64]],[[4,0,11,4],[16,0,11,16],[23,0,11,31],[25,0,11,33],[34,0,11,50]],[[8,0,12,8],[13,0,12,13],[14,0,12,14],[35,0,12,35],[36,0,12,36],[45,0,12,45],[46,0,12,46],[47,0,12,47]],[[8,0,13,8],[12,0,13,12],[13,0,13,13],[21,0,13,21],[24,0,13,24],[31,0,13,31],[32,0,13,32]],[[8,0,14,8],[12,0,14,12],[13,0,14,13],[23,0,14,23],[26,0,14,26],[35,0,14,35],[36,0,14,36]],[[4,0,15,4],[5,0,15,5]],[[4,0,17,11],[19,0,17,26],[20,0,17,27],[26,0,17,42]],[[8,0,18,8],[12,0,18,12],[16,0,18,16],[17,0,18,17],[27,0,18,27],[32,0,18,32],[33,0,18,33],[35,0,18,35]],[[12,0,19,12],[19,0,19,19],[22,0,19,22],[25,0,19,25],[29,0,19,29],[30,0,19,30],[38,0,19,38],[41,0,19,41],[44,0,19,44],[45,0,19,45]],[[9,0,20,9]],[[13,0,20,15]],[[12,0,21,12],[19,0,21,19],[22,0,21,22],[25,0,21,25],[29,0,21,29],[30,0,21,30],[38,0,21,38],[41,0,21,41],[48,0,21,48],[51,0,21,51],[55,0,21,55],[56,0,21,56],[66,0,21,66],[67,0,21,67],[75,0,21,75],[77,0,21,77],[80,0,21,80],[84,0,21,84],[85,0,21,85]],[[9,0,22,9]],[[4,0,23,4],[5,0,23,5]],[[4,0,25,11],[11,0,25,18]],[[8,0,26,8],[15,0,26,15],[19,0,26,19],[20,0,26,20],[28,0,26,28],[29,0,26,29]],[[4,0,27,4],[5,0,27,5]],[[4,0,29,11],[13,0,29,20]],[[8,0,30,8],[15,0,30,15],[19,0,30,19],[20,0,30,20],[30,0,30,30],[31,0,30,31]],[[4,0,31,4],[5,0,31,5]],[[1,0,32,1]]],"sourcesContent":["import {ParsedMessagePart, ParsedMessagePartType} from './parsed-message-part';\r\n/**\r\n * Created by martin on 14.06.2017.\r\n * A message part consisting of an empty tag like <br/>.\r\n */\r\n\r\nexport class ParsedMessagePartEmptyTag extends ParsedMessagePart {\r\n\r\n    private _tagname: string;\r\n    private _idcounter: number;\r\n\r\n    constructor(tagname: string, idcounter: number) {\r\n        super(ParsedMessagePartType.EMPTY_TAG);\r\n        this._tagname = tagname;\r\n        this._idcounter = idcounter;\r\n    }\r\n\r\n    public asDisplayString(format?: string) {\r\n        if (this._idcounter === 0) {\r\n            return '<' + this._tagname + '>';\r\n        } else {\r\n            return '<' + this._tagname + ' id=\"' + this._idcounter.toString() + '\">';\r\n        }\r\n    }\r\n\r\n    public tagName(): string {\r\n        return this._tagname;\r\n    }\r\n\r\n    public idCounter(): number {\r\n        return this._idcounter;\r\n    }\r\n}\r\n"]},"resolvedIds":{"./parsed-message-part":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":66787,"body":[{"type":"ImportDeclaration","start":0,"end":62,"specifiers":[{"type":"ImportSpecifier","start":9,"end":30,"imported":{"type":"Identifier","start":9,"end":30,"name":"ParsedMessagePartType"},"local":{"type":"Identifier","start":9,"end":30,"name":"ParsedMessagePartType"}}],"source":{"type":"Literal","start":38,"end":61,"value":"./parsed-message-part","raw":"'./parsed-message-part'"}},{"type":"ImportDeclaration","start":64,"end":131,"specifiers":[{"type":"ImportSpecifier","start":73,"end":94,"imported":{"type":"Identifier","start":73,"end":94,"name":"ParsedMessagePartText"},"local":{"type":"Identifier","start":73,"end":94,"name":"ParsedMessagePartText"}}],"source":{"type":"Literal","start":102,"end":130,"value":"./parsed-message-part-text","raw":"'./parsed-message-part-text'"}},{"type":"ImportDeclaration","start":133,"end":214,"specifiers":[{"type":"ImportSpecifier","start":142,"end":170,"imported":{"type":"Identifier","start":142,"end":170,"name":"ParsedMessagePartPlaceholder"},"local":{"type":"Identifier","start":142,"end":170,"name":"ParsedMessagePartPlaceholder"}}],"source":{"type":"Literal","start":178,"end":213,"value":"./parsed-message-part-placeholder","raw":"'./parsed-message-part-placeholder'"}},{"type":"ImportDeclaration","start":216,"end":292,"specifiers":[{"type":"ImportSpecifier","start":225,"end":250,"imported":{"type":"Identifier","start":225,"end":250,"name":"ParsedMessagePartStartTag"},"local":{"type":"Identifier","start":225,"end":250,"name":"ParsedMessagePartStartTag"}}],"source":{"type":"Literal","start":258,"end":291,"value":"./parsed-message-part-start-tag","raw":"'./parsed-message-part-start-tag'"}},{"type":"ImportDeclaration","start":294,"end":366,"specifiers":[{"type":"ImportSpecifier","start":303,"end":326,"imported":{"type":"Identifier","start":303,"end":326,"name":"ParsedMessagePartEndTag"},"local":{"type":"Identifier","start":303,"end":326,"name":"ParsedMessagePartEndTag"}}],"source":{"type":"Literal","start":334,"end":365,"value":"./parsed-message-part-end-tag","raw":"'./parsed-message-part-end-tag'"}},{"type":"ImportDeclaration","start":368,"end":415,"specifiers":[{"type":"ImportSpecifier","start":377,"end":389,"imported":{"type":"Identifier","start":377,"end":389,"name":"DOMUtilities"},"local":{"type":"Identifier","start":377,"end":389,"name":"DOMUtilities"}}],"source":{"type":"Literal","start":397,"end":414,"value":"./dom-utilities","raw":"'./dom-utilities'"}},{"type":"ImportDeclaration","start":417,"end":447,"specifiers":[{"type":"ImportSpecifier","start":426,"end":432,"imported":{"type":"Identifier","start":426,"end":432,"name":"format"},"local":{"type":"Identifier","start":426,"end":432,"name":"format"}}],"source":{"type":"Literal","start":440,"end":446,"value":"util","raw":"'util'"}},{"type":"ImportDeclaration","start":449,"end":493,"specifiers":[{"type":"ImportSpecifier","start":458,"end":475,"imported":{"type":"Identifier","start":458,"end":475,"name":"isNullOrUndefined"},"local":{"type":"Identifier","start":458,"end":475,"name":"isNullOrUndefined"}}],"source":{"type":"Literal","start":483,"end":492,"value":"is-what","raw":"'is-what'"}},{"type":"ImportDeclaration","start":495,"end":575,"specifiers":[{"type":"ImportSpecifier","start":504,"end":531,"imported":{"type":"Identifier","start":504,"end":531,"name":"ParsedMessagePartICUMessage"},"local":{"type":"Identifier","start":504,"end":531,"name":"ParsedMessagePartICUMessage"}}],"source":{"type":"Literal","start":539,"end":574,"value":"./parsed-message-part-icu-message","raw":"'./parsed-message-part-icu-message'"}},{"type":"ImportDeclaration","start":577,"end":664,"specifiers":[{"type":"ImportSpecifier","start":586,"end":616,"imported":{"type":"Identifier","start":586,"end":616,"name":"ParsedMessagePartICUMessageRef"},"local":{"type":"Identifier","start":586,"end":616,"name":"ParsedMessagePartICUMessageRef"}}],"source":{"type":"Literal","start":624,"end":663,"value":"./parsed-message-part-icu-message-ref","raw":"'./parsed-message-part-icu-message-ref'"}},{"type":"ImportDeclaration","start":666,"end":742,"specifiers":[{"type":"ImportSpecifier","start":675,"end":700,"imported":{"type":"Identifier","start":675,"end":700,"name":"ParsedMessagePartEmptyTag"},"local":{"type":"Identifier","start":675,"end":700,"name":"ParsedMessagePartEmptyTag"}}],"source":{"type":"Literal","start":708,"end":741,"value":"./parsed-message-part-empty-tag","raw":"'./parsed-message-part-empty-tag'"}},{"type":"ExportNamedDeclaration","start":953,"end":19251,"declaration":{"type":"ClassDeclaration","start":960,"end":19251,"id":{"type":"Identifier","start":966,"end":979,"name":"ParsedMessage"},"superClass":null,"body":{"type":"ClassBody","start":980,"end":19251,"body":[{"type":"MethodDefinition","start":987,"end":1134,"static":false,"computed":false,"key":{"type":"Identifier","start":987,"end":998,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":998,"end":1134,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":999,"end":1005,"name":"parser"},{"type":"Identifier","start":1007,"end":1020,"name":"sourceMessage"}],"body":{"type":"BlockStatement","start":1022,"end":1134,"body":[{"type":"ExpressionStatement","start":1033,"end":1055,"expression":{"type":"AssignmentExpression","start":1033,"end":1054,"operator":"=","left":{"type":"MemberExpression","start":1033,"end":1045,"object":{"type":"ThisExpression","start":1033,"end":1037},"property":{"type":"Identifier","start":1038,"end":1045,"name":"_parser"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1048,"end":1054,"name":"parser"}}},{"type":"ExpressionStatement","start":1065,"end":1100,"expression":{"type":"AssignmentExpression","start":1065,"end":1099,"operator":"=","left":{"type":"MemberExpression","start":1065,"end":1083,"object":{"type":"ThisExpression","start":1065,"end":1069},"property":{"type":"Identifier","start":1070,"end":1083,"name":"sourceMessage"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1086,"end":1099,"name":"sourceMessage"}}},{"type":"ExpressionStatement","start":1110,"end":1127,"expression":{"type":"AssignmentExpression","start":1110,"end":1126,"operator":"=","left":{"type":"MemberExpression","start":1110,"end":1121,"object":{"type":"ThisExpression","start":1110,"end":1114},"property":{"type":"Identifier","start":1115,"end":1121,"name":"_parts"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":1124,"end":1126,"elements":[]}}}]}}},{"type":"MethodDefinition","start":1238,"end":1288,"static":false,"computed":false,"key":{"type":"Identifier","start":1238,"end":1247,"name":"getParser"},"kind":"method","value":{"type":"FunctionExpression","start":1247,"end":1288,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1250,"end":1288,"body":[{"type":"ReturnStatement","start":1261,"end":1281,"argument":{"type":"MemberExpression","start":1268,"end":1280,"object":{"type":"ThisExpression","start":1268,"end":1272},"property":{"type":"Identifier","start":1273,"end":1280,"name":"_parser"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":1678,"end":2066,"static":false,"computed":false,"key":{"type":"Identifier","start":1678,"end":1687,"name":"translate"},"kind":"method","value":{"type":"FunctionExpression","start":1687,"end":2066,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1688,"end":1704,"name":"normalizedString"}],"body":{"type":"BlockStatement","start":1706,"end":2066,"body":[{"type":"IfStatement","start":1717,"end":2059,"test":{"type":"CallExpression","start":1721,"end":1760,"callee":{"type":"Identifier","start":1721,"end":1738,"name":"isNullOrUndefined"},"arguments":[{"type":"CallExpression","start":1739,"end":1759,"callee":{"type":"MemberExpression","start":1739,"end":1757,"object":{"type":"ThisExpression","start":1739,"end":1743},"property":{"type":"Identifier","start":1744,"end":1757,"name":"getICUMessage"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":1762,"end":1854,"body":[{"type":"ReturnStatement","start":1777,"end":1843,"argument":{"type":"CallExpression","start":1784,"end":1842,"callee":{"type":"MemberExpression","start":1784,"end":1818,"object":{"type":"MemberExpression","start":1784,"end":1796,"object":{"type":"ThisExpression","start":1784,"end":1788},"property":{"type":"Identifier","start":1789,"end":1796,"name":"_parser"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1797,"end":1818,"name":"parseNormalizedString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1819,"end":1835,"name":"normalizedString"},{"type":"ThisExpression","start":1837,"end":1841}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":1869,"end":2059,"body":[{"type":"ThrowStatement","start":1884,"end":2048,"argument":{"type":"NewExpression","start":1890,"end":2047,"callee":{"type":"Identifier","start":1894,"end":1899,"name":"Error"},"arguments":[{"type":"CallExpression","start":1900,"end":2046,"callee":{"type":"Identifier","start":1900,"end":1906,"name":"format"},"arguments":[{"type":"Literal","start":1907,"end":2004,"value":"cannot translate ICU message with simple string, use translateICUMessage() instead (\"%s\", \"%s\")","raw":"'cannot translate ICU message with simple string, use translateICUMessage() instead (\"%s\", \"%s\")'"},{"type":"Identifier","start":2006,"end":2022,"name":"normalizedString"},{"type":"CallExpression","start":2024,"end":2045,"callee":{"type":"MemberExpression","start":2024,"end":2043,"object":{"type":"ThisExpression","start":2024,"end":2028},"property":{"type":"Identifier","start":2029,"end":2043,"name":"asNativeString"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}]}}]}}]}}},{"type":"MethodDefinition","start":2553,"end":3051,"static":false,"computed":false,"key":{"type":"Identifier","start":2553,"end":2572,"name":"translateICUMessage"},"kind":"method","value":{"type":"FunctionExpression","start":2572,"end":3051,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2573,"end":2587,"name":"icuTranslation"}],"body":{"type":"BlockStatement","start":2589,"end":3051,"body":[{"type":"VariableDeclaration","start":2600,"end":2640,"declarations":[{"type":"VariableDeclarator","start":2606,"end":2639,"id":{"type":"Identifier","start":2606,"end":2616,"name":"icuMessage"},"init":{"type":"CallExpression","start":2619,"end":2639,"callee":{"type":"MemberExpression","start":2619,"end":2637,"object":{"type":"ThisExpression","start":2619,"end":2623},"property":{"type":"Identifier","start":2624,"end":2637,"name":"getICUMessage"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":2650,"end":3044,"test":{"type":"CallExpression","start":2654,"end":2683,"callee":{"type":"Identifier","start":2654,"end":2671,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":2672,"end":2682,"name":"icuMessage"}],"optional":false},"consequent":{"type":"BlockStatement","start":2685,"end":2842,"body":[{"type":"ThrowStatement","start":2700,"end":2831,"argument":{"type":"NewExpression","start":2706,"end":2830,"callee":{"type":"Identifier","start":2710,"end":2715,"name":"Error"},"arguments":[{"type":"CallExpression","start":2716,"end":2829,"callee":{"type":"Identifier","start":2716,"end":2722,"name":"format"},"arguments":[{"type":"Literal","start":2723,"end":2789,"value":"this is not an ICU message, use translate() instead (\"%s\", \"%s\")","raw":"'this is not an ICU message, use translate() instead (\"%s\", \"%s\")'"},{"type":"Identifier","start":2791,"end":2805,"name":"icuTranslation"},{"type":"CallExpression","start":2807,"end":2828,"callee":{"type":"MemberExpression","start":2807,"end":2826,"object":{"type":"ThisExpression","start":2807,"end":2811},"property":{"type":"Identifier","start":2812,"end":2826,"name":"asNativeString"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}]}}]},"alternate":{"type":"BlockStatement","start":2857,"end":3044,"body":[{"type":"VariableDeclaration","start":2872,"end":2938,"declarations":[{"type":"VariableDeclarator","start":2878,"end":2937,"id":{"type":"Identifier","start":2878,"end":2898,"name":"translatedICUMessage"},"init":{"type":"CallExpression","start":2901,"end":2937,"callee":{"type":"MemberExpression","start":2901,"end":2921,"object":{"type":"Identifier","start":2901,"end":2911,"name":"icuMessage"},"property":{"type":"Identifier","start":2912,"end":2921,"name":"translate"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2922,"end":2936,"name":"icuTranslation"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":2952,"end":3033,"argument":{"type":"CallExpression","start":2959,"end":3032,"callee":{"type":"MemberExpression","start":2959,"end":2987,"object":{"type":"MemberExpression","start":2959,"end":2971,"object":{"type":"ThisExpression","start":2959,"end":2963},"property":{"type":"Identifier","start":2964,"end":2971,"name":"_parser"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2972,"end":2987,"name":"parseICUMessage"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2988,"end":3025,"callee":{"type":"MemberExpression","start":2988,"end":3023,"object":{"type":"Identifier","start":2988,"end":3008,"name":"translatedICUMessage"},"property":{"type":"Identifier","start":3009,"end":3023,"name":"asNativeString"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"ThisExpression","start":3027,"end":3031}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":3314,"end":3445,"static":false,"computed":false,"key":{"type":"Identifier","start":3314,"end":3335,"name":"translateNativeString"},"kind":"method","value":{"type":"FunctionExpression","start":3335,"end":3445,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3336,"end":3348,"name":"nativeString"}],"body":{"type":"BlockStatement","start":3350,"end":3445,"body":[{"type":"ReturnStatement","start":3361,"end":3438,"argument":{"type":"CallExpression","start":3368,"end":3437,"callee":{"type":"MemberExpression","start":3368,"end":3417,"object":{"type":"MemberExpression","start":3368,"end":3380,"object":{"type":"ThisExpression","start":3368,"end":3372},"property":{"type":"Identifier","start":3373,"end":3380,"name":"_parser"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3381,"end":3417,"name":"createNormalizedMessageFromXMLString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3418,"end":3430,"name":"nativeString"},{"type":"ThisExpression","start":3432,"end":3436}],"optional":false}}]}}},{"type":"MethodDefinition","start":3653,"end":3781,"static":false,"computed":false,"key":{"type":"Identifier","start":3653,"end":3668,"name":"asDisplayString"},"kind":"method","value":{"type":"FunctionExpression","start":3668,"end":3781,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3669,"end":3682,"name":"displayFormat"}],"body":{"type":"BlockStatement","start":3684,"end":3781,"body":[{"type":"ReturnStatement","start":3695,"end":3774,"argument":{"type":"CallExpression","start":3702,"end":3773,"callee":{"type":"MemberExpression","start":3702,"end":3769,"object":{"type":"CallExpression","start":3702,"end":3764,"callee":{"type":"MemberExpression","start":3702,"end":3717,"object":{"type":"MemberExpression","start":3702,"end":3713,"object":{"type":"ThisExpression","start":3702,"end":3706},"property":{"type":"Identifier","start":3707,"end":3713,"name":"_parts"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3714,"end":3717,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":3718,"end":3763,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":3719,"end":3723,"name":"part"}],"body":{"type":"CallExpression","start":3728,"end":3763,"callee":{"type":"MemberExpression","start":3728,"end":3748,"object":{"type":"Identifier","start":3728,"end":3732,"name":"part"},"property":{"type":"Identifier","start":3733,"end":3748,"name":"asDisplayString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3749,"end":3762,"name":"displayFormat"}],"optional":false}}],"optional":false},"property":{"type":"Identifier","start":3765,"end":3769,"name":"join"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3770,"end":3772,"value":"","raw":"''"}],"optional":false}}]}}},{"type":"MethodDefinition","start":3956,"end":4207,"static":false,"computed":false,"key":{"type":"Identifier","start":3956,"end":3970,"name":"asNativeString"},"kind":"method","value":{"type":"FunctionExpression","start":3970,"end":4207,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":3973,"end":4207,"body":[{"type":"IfStatement","start":3984,"end":4200,"test":{"type":"CallExpression","start":3988,"end":4027,"callee":{"type":"Identifier","start":3988,"end":4005,"name":"isNullOrUndefined"},"arguments":[{"type":"CallExpression","start":4006,"end":4026,"callee":{"type":"MemberExpression","start":4006,"end":4024,"object":{"type":"ThisExpression","start":4006,"end":4010},"property":{"type":"Identifier","start":4011,"end":4024,"name":"getICUMessage"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":4029,"end":4114,"body":[{"type":"ReturnStatement","start":4044,"end":4103,"argument":{"type":"CallExpression","start":4051,"end":4102,"callee":{"type":"MemberExpression","start":4051,"end":4077,"object":{"type":"Identifier","start":4051,"end":4063,"name":"DOMUtilities"},"property":{"type":"Identifier","start":4064,"end":4077,"name":"getXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":4078,"end":4101,"object":{"type":"ThisExpression","start":4078,"end":4082},"property":{"type":"Identifier","start":4083,"end":4101,"name":"_xmlRepresentation"},"computed":false,"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":4129,"end":4200,"body":[{"type":"ReturnStatement","start":4144,"end":4189,"argument":{"type":"CallExpression","start":4151,"end":4188,"callee":{"type":"MemberExpression","start":4151,"end":4186,"object":{"type":"CallExpression","start":4151,"end":4171,"callee":{"type":"MemberExpression","start":4151,"end":4169,"object":{"type":"ThisExpression","start":4151,"end":4155},"property":{"type":"Identifier","start":4156,"end":4169,"name":"getICUMessage"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":4172,"end":4186,"name":"asNativeString"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":4314,"end":4959,"static":false,"computed":false,"key":{"type":"Identifier","start":4314,"end":4322,"name":"validate"},"kind":"method","value":{"type":"FunctionExpression","start":4322,"end":4959,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":4325,"end":4959,"body":[{"type":"VariableDeclaration","start":4336,"end":4358,"declarations":[{"type":"VariableDeclarator","start":4340,"end":4357,"id":{"type":"Identifier","start":4340,"end":4349,"name":"hasErrors"},"init":{"type":"Literal","start":4352,"end":4357,"value":false,"raw":"false"}}],"kind":"let"},{"type":"VariableDeclaration","start":4368,"end":4386,"declarations":[{"type":"VariableDeclarator","start":4374,"end":4385,"id":{"type":"Identifier","start":4374,"end":4380,"name":"errors"},"init":{"type":"ObjectExpression","start":4383,"end":4385,"properties":[]}}],"kind":"const"},{"type":"VariableDeclaration","start":4396,"end":4402,"declarations":[{"type":"VariableDeclarator","start":4400,"end":4401,"id":{"type":"Identifier","start":4400,"end":4401,"name":"e"},"init":null}],"kind":"let"},{"type":"ExpressionStatement","start":4412,"end":4445,"expression":{"type":"AssignmentExpression","start":4412,"end":4444,"operator":"=","left":{"type":"Identifier","start":4412,"end":4413,"name":"e"},"right":{"type":"CallExpression","start":4416,"end":4444,"callee":{"type":"MemberExpression","start":4416,"end":4442,"object":{"type":"ThisExpression","start":4416,"end":4420},"property":{"type":"Identifier","start":4421,"end":4442,"name":"checkPlaceholderAdded"},"computed":false,"optional":false},"arguments":[],"optional":false}}},{"type":"IfStatement","start":4455,"end":4567,"test":{"type":"UnaryExpression","start":4459,"end":4480,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":4460,"end":4480,"callee":{"type":"Identifier","start":4460,"end":4477,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":4478,"end":4479,"name":"e"}],"optional":false}},"consequent":{"type":"BlockStatement","start":4482,"end":4567,"body":[{"type":"ExpressionStatement","start":4497,"end":4525,"expression":{"type":"AssignmentExpression","start":4497,"end":4524,"operator":"=","left":{"type":"MemberExpression","start":4497,"end":4520,"object":{"type":"Identifier","start":4497,"end":4503,"name":"errors"},"property":{"type":"Identifier","start":4504,"end":4520,"name":"placeholderAdded"},"computed":false,"optional":false},"right":{"type":"Identifier","start":4523,"end":4524,"name":"e"}}},{"type":"ExpressionStatement","start":4539,"end":4556,"expression":{"type":"AssignmentExpression","start":4539,"end":4555,"operator":"=","left":{"type":"Identifier","start":4539,"end":4548,"name":"hasErrors"},"right":{"type":"Literal","start":4551,"end":4555,"value":true,"raw":"true"}}}]},"alternate":null},{"type":"ExpressionStatement","start":4577,"end":4614,"expression":{"type":"AssignmentExpression","start":4577,"end":4613,"operator":"=","left":{"type":"Identifier","start":4577,"end":4578,"name":"e"},"right":{"type":"CallExpression","start":4581,"end":4613,"callee":{"type":"MemberExpression","start":4581,"end":4611,"object":{"type":"ThisExpression","start":4581,"end":4585},"property":{"type":"Identifier","start":4586,"end":4611,"name":"checkICUMessageRefRemoved"},"computed":false,"optional":false},"arguments":[],"optional":false}}},{"type":"IfStatement","start":4624,"end":4740,"test":{"type":"UnaryExpression","start":4628,"end":4649,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":4629,"end":4649,"callee":{"type":"Identifier","start":4629,"end":4646,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":4647,"end":4648,"name":"e"}],"optional":false}},"consequent":{"type":"BlockStatement","start":4651,"end":4740,"body":[{"type":"ExpressionStatement","start":4666,"end":4698,"expression":{"type":"AssignmentExpression","start":4666,"end":4697,"operator":"=","left":{"type":"MemberExpression","start":4666,"end":4693,"object":{"type":"Identifier","start":4666,"end":4672,"name":"errors"},"property":{"type":"Identifier","start":4673,"end":4693,"name":"icuMessageRefRemoved"},"computed":false,"optional":false},"right":{"type":"Identifier","start":4696,"end":4697,"name":"e"}}},{"type":"ExpressionStatement","start":4712,"end":4729,"expression":{"type":"AssignmentExpression","start":4712,"end":4728,"operator":"=","left":{"type":"Identifier","start":4712,"end":4721,"name":"hasErrors"},"right":{"type":"Literal","start":4724,"end":4728,"value":true,"raw":"true"}}}]},"alternate":null},{"type":"ExpressionStatement","start":4750,"end":4785,"expression":{"type":"AssignmentExpression","start":4750,"end":4784,"operator":"=","left":{"type":"Identifier","start":4750,"end":4751,"name":"e"},"right":{"type":"CallExpression","start":4754,"end":4784,"callee":{"type":"MemberExpression","start":4754,"end":4782,"object":{"type":"ThisExpression","start":4754,"end":4758},"property":{"type":"Identifier","start":4759,"end":4782,"name":"checkICUMessageRefAdded"},"computed":false,"optional":false},"arguments":[],"optional":false}}},{"type":"IfStatement","start":4795,"end":4909,"test":{"type":"UnaryExpression","start":4799,"end":4820,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":4800,"end":4820,"callee":{"type":"Identifier","start":4800,"end":4817,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":4818,"end":4819,"name":"e"}],"optional":false}},"consequent":{"type":"BlockStatement","start":4822,"end":4909,"body":[{"type":"ExpressionStatement","start":4837,"end":4867,"expression":{"type":"AssignmentExpression","start":4837,"end":4866,"operator":"=","left":{"type":"MemberExpression","start":4837,"end":4862,"object":{"type":"Identifier","start":4837,"end":4843,"name":"errors"},"property":{"type":"Identifier","start":4844,"end":4862,"name":"icuMessageRefAdded"},"computed":false,"optional":false},"right":{"type":"Identifier","start":4865,"end":4866,"name":"e"}}},{"type":"ExpressionStatement","start":4881,"end":4898,"expression":{"type":"AssignmentExpression","start":4881,"end":4897,"operator":"=","left":{"type":"Identifier","start":4881,"end":4890,"name":"hasErrors"},"right":{"type":"Literal","start":4893,"end":4897,"value":true,"raw":"true"}}}]},"alternate":null},{"type":"ReturnStatement","start":4919,"end":4952,"argument":{"type":"ConditionalExpression","start":4926,"end":4951,"test":{"type":"Identifier","start":4926,"end":4935,"name":"hasErrors"},"consequent":{"type":"Identifier","start":4938,"end":4944,"name":"errors"},"alternate":{"type":"Literal","start":4947,"end":4951,"value":null,"raw":"null"}}}]}}},{"type":"MethodDefinition","start":5301,"end":5938,"static":false,"computed":false,"key":{"type":"Identifier","start":5301,"end":5317,"name":"validateWarnings"},"kind":"method","value":{"type":"FunctionExpression","start":5317,"end":5938,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":5320,"end":5938,"body":[{"type":"VariableDeclaration","start":5331,"end":5355,"declarations":[{"type":"VariableDeclarator","start":5335,"end":5354,"id":{"type":"Identifier","start":5335,"end":5346,"name":"hasWarnings"},"init":{"type":"Literal","start":5349,"end":5354,"value":false,"raw":"false"}}],"kind":"let"},{"type":"VariableDeclaration","start":5365,"end":5385,"declarations":[{"type":"VariableDeclarator","start":5371,"end":5384,"id":{"type":"Identifier","start":5371,"end":5379,"name":"warnings"},"init":{"type":"ObjectExpression","start":5382,"end":5384,"properties":[]}}],"kind":"const"},{"type":"VariableDeclaration","start":5395,"end":5401,"declarations":[{"type":"VariableDeclarator","start":5399,"end":5400,"id":{"type":"Identifier","start":5399,"end":5400,"name":"w"},"init":null}],"kind":"let"},{"type":"ExpressionStatement","start":5411,"end":5446,"expression":{"type":"AssignmentExpression","start":5411,"end":5445,"operator":"=","left":{"type":"Identifier","start":5411,"end":5412,"name":"w"},"right":{"type":"CallExpression","start":5415,"end":5445,"callee":{"type":"MemberExpression","start":5415,"end":5443,"object":{"type":"ThisExpression","start":5415,"end":5419},"property":{"type":"Identifier","start":5420,"end":5443,"name":"checkPlaceholderRemoved"},"computed":false,"optional":false},"arguments":[],"optional":false}}},{"type":"IfStatement","start":5456,"end":5574,"test":{"type":"UnaryExpression","start":5460,"end":5481,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":5461,"end":5481,"callee":{"type":"Identifier","start":5461,"end":5478,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":5479,"end":5480,"name":"w"}],"optional":false}},"consequent":{"type":"BlockStatement","start":5483,"end":5574,"body":[{"type":"ExpressionStatement","start":5498,"end":5530,"expression":{"type":"AssignmentExpression","start":5498,"end":5529,"operator":"=","left":{"type":"MemberExpression","start":5498,"end":5525,"object":{"type":"Identifier","start":5498,"end":5506,"name":"warnings"},"property":{"type":"Identifier","start":5507,"end":5525,"name":"placeholderRemoved"},"computed":false,"optional":false},"right":{"type":"Identifier","start":5528,"end":5529,"name":"w"}}},{"type":"ExpressionStatement","start":5544,"end":5563,"expression":{"type":"AssignmentExpression","start":5544,"end":5562,"operator":"=","left":{"type":"Identifier","start":5544,"end":5555,"name":"hasWarnings"},"right":{"type":"Literal","start":5558,"end":5562,"value":true,"raw":"true"}}}]},"alternate":null},{"type":"ExpressionStatement","start":5584,"end":5611,"expression":{"type":"AssignmentExpression","start":5584,"end":5610,"operator":"=","left":{"type":"Identifier","start":5584,"end":5585,"name":"w"},"right":{"type":"CallExpression","start":5588,"end":5610,"callee":{"type":"MemberExpression","start":5588,"end":5608,"object":{"type":"ThisExpression","start":5588,"end":5592},"property":{"type":"Identifier","start":5593,"end":5608,"name":"checkTagRemoved"},"computed":false,"optional":false},"arguments":[],"optional":false}}},{"type":"IfStatement","start":5621,"end":5731,"test":{"type":"UnaryExpression","start":5625,"end":5646,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":5626,"end":5646,"callee":{"type":"Identifier","start":5626,"end":5643,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":5644,"end":5645,"name":"w"}],"optional":false}},"consequent":{"type":"BlockStatement","start":5648,"end":5731,"body":[{"type":"ExpressionStatement","start":5663,"end":5687,"expression":{"type":"AssignmentExpression","start":5663,"end":5686,"operator":"=","left":{"type":"MemberExpression","start":5663,"end":5682,"object":{"type":"Identifier","start":5663,"end":5671,"name":"warnings"},"property":{"type":"Identifier","start":5672,"end":5682,"name":"tagRemoved"},"computed":false,"optional":false},"right":{"type":"Identifier","start":5685,"end":5686,"name":"w"}}},{"type":"ExpressionStatement","start":5701,"end":5720,"expression":{"type":"AssignmentExpression","start":5701,"end":5719,"operator":"=","left":{"type":"Identifier","start":5701,"end":5712,"name":"hasWarnings"},"right":{"type":"Literal","start":5715,"end":5719,"value":true,"raw":"true"}}}]},"alternate":null},{"type":"ExpressionStatement","start":5741,"end":5766,"expression":{"type":"AssignmentExpression","start":5741,"end":5765,"operator":"=","left":{"type":"Identifier","start":5741,"end":5742,"name":"w"},"right":{"type":"CallExpression","start":5745,"end":5765,"callee":{"type":"MemberExpression","start":5745,"end":5763,"object":{"type":"ThisExpression","start":5745,"end":5749},"property":{"type":"Identifier","start":5750,"end":5763,"name":"checkTagAdded"},"computed":false,"optional":false},"arguments":[],"optional":false}}},{"type":"IfStatement","start":5776,"end":5884,"test":{"type":"UnaryExpression","start":5780,"end":5801,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":5781,"end":5801,"callee":{"type":"Identifier","start":5781,"end":5798,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":5799,"end":5800,"name":"w"}],"optional":false}},"consequent":{"type":"BlockStatement","start":5803,"end":5884,"body":[{"type":"ExpressionStatement","start":5818,"end":5840,"expression":{"type":"AssignmentExpression","start":5818,"end":5839,"operator":"=","left":{"type":"MemberExpression","start":5818,"end":5835,"object":{"type":"Identifier","start":5818,"end":5826,"name":"warnings"},"property":{"type":"Identifier","start":5827,"end":5835,"name":"tagAdded"},"computed":false,"optional":false},"right":{"type":"Identifier","start":5838,"end":5839,"name":"w"}}},{"type":"ExpressionStatement","start":5854,"end":5873,"expression":{"type":"AssignmentExpression","start":5854,"end":5872,"operator":"=","left":{"type":"Identifier","start":5854,"end":5865,"name":"hasWarnings"},"right":{"type":"Literal","start":5868,"end":5872,"value":true,"raw":"true"}}}]},"alternate":null},{"type":"ReturnStatement","start":5894,"end":5931,"argument":{"type":"ConditionalExpression","start":5901,"end":5930,"test":{"type":"Identifier","start":5901,"end":5912,"name":"hasWarnings"},"consequent":{"type":"Identifier","start":5915,"end":5923,"name":"warnings"},"alternate":{"type":"Literal","start":5926,"end":5930,"value":null,"raw":"null"}}}]}}},{"type":"MethodDefinition","start":6061,"end":6187,"static":false,"computed":false,"key":{"type":"Identifier","start":6061,"end":6073,"name":"isICUMessage"},"kind":"method","value":{"type":"FunctionExpression","start":6073,"end":6187,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":6076,"end":6187,"body":[{"type":"ReturnStatement","start":6087,"end":6180,"argument":{"type":"LogicalExpression","start":6094,"end":6179,"left":{"type":"BinaryExpression","start":6094,"end":6118,"left":{"type":"MemberExpression","start":6094,"end":6112,"object":{"type":"MemberExpression","start":6094,"end":6105,"object":{"type":"ThisExpression","start":6094,"end":6098},"property":{"type":"Identifier","start":6099,"end":6105,"name":"_parts"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6106,"end":6112,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":6117,"end":6118,"value":1,"raw":"1"}},"operator":"&&","right":{"type":"BinaryExpression","start":6122,"end":6179,"left":{"type":"MemberExpression","start":6122,"end":6141,"object":{"type":"MemberExpression","start":6122,"end":6136,"object":{"type":"MemberExpression","start":6122,"end":6133,"object":{"type":"ThisExpression","start":6122,"end":6126},"property":{"type":"Identifier","start":6127,"end":6133,"name":"_parts"},"computed":false,"optional":false},"property":{"type":"Literal","start":6134,"end":6135,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":6137,"end":6141,"name":"type"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":6146,"end":6179,"object":{"type":"Identifier","start":6146,"end":6167,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":6168,"end":6179,"name":"ICU_MESSAGE"},"computed":false,"optional":false}}}}]}}},{"type":"MethodDefinition","start":6421,"end":6558,"static":false,"computed":false,"key":{"type":"Identifier","start":6421,"end":6442,"name":"containsICUMessageRef"},"kind":"method","value":{"type":"FunctionExpression","start":6442,"end":6558,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":6445,"end":6558,"body":[{"type":"ReturnStatement","start":6456,"end":6551,"argument":{"type":"BinaryExpression","start":6463,"end":6550,"left":{"type":"CallExpression","start":6463,"end":6545,"callee":{"type":"MemberExpression","start":6463,"end":6484,"object":{"type":"MemberExpression","start":6463,"end":6474,"object":{"type":"ThisExpression","start":6463,"end":6467},"property":{"type":"Identifier","start":6468,"end":6474,"name":"_parts"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6475,"end":6484,"name":"findIndex"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":6485,"end":6544,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":6485,"end":6489,"name":"part"}],"body":{"type":"BinaryExpression","start":6493,"end":6544,"left":{"type":"MemberExpression","start":6493,"end":6502,"object":{"type":"Identifier","start":6493,"end":6497,"name":"part"},"property":{"type":"Identifier","start":6498,"end":6502,"name":"type"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":6507,"end":6544,"object":{"type":"Identifier","start":6507,"end":6528,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":6529,"end":6544,"name":"ICU_MESSAGE_REF"},"computed":false,"optional":false}}}],"optional":false},"operator":">=","right":{"type":"Literal","start":6549,"end":6550,"value":0,"raw":"0"}}}]}}},{"type":"MethodDefinition","start":6728,"end":7008,"static":false,"computed":false,"key":{"type":"Identifier","start":6728,"end":6741,"name":"getICUMessage"},"kind":"method","value":{"type":"FunctionExpression","start":6741,"end":7008,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":6744,"end":7008,"body":[{"type":"IfStatement","start":6755,"end":7001,"test":{"type":"LogicalExpression","start":6759,"end":6844,"left":{"type":"BinaryExpression","start":6759,"end":6783,"left":{"type":"MemberExpression","start":6759,"end":6777,"object":{"type":"MemberExpression","start":6759,"end":6770,"object":{"type":"ThisExpression","start":6759,"end":6763},"property":{"type":"Identifier","start":6764,"end":6770,"name":"_parts"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6771,"end":6777,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":6782,"end":6783,"value":1,"raw":"1"}},"operator":"&&","right":{"type":"BinaryExpression","start":6787,"end":6844,"left":{"type":"MemberExpression","start":6787,"end":6806,"object":{"type":"MemberExpression","start":6787,"end":6801,"object":{"type":"MemberExpression","start":6787,"end":6798,"object":{"type":"ThisExpression","start":6787,"end":6791},"property":{"type":"Identifier","start":6792,"end":6798,"name":"_parts"},"computed":false,"optional":false},"property":{"type":"Literal","start":6799,"end":6800,"value":0,"raw":"0"},"computed":true,"optional":false},"property":{"type":"Identifier","start":6802,"end":6806,"name":"type"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":6811,"end":6844,"object":{"type":"Identifier","start":6811,"end":6832,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":6833,"end":6844,"name":"ICU_MESSAGE"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":6846,"end":6948,"body":[{"type":"VariableDeclaration","start":6861,"end":6892,"declarations":[{"type":"VariableDeclarator","start":6867,"end":6891,"id":{"type":"Identifier","start":6867,"end":6874,"name":"icuPart"},"init":{"type":"MemberExpression","start":6877,"end":6891,"object":{"type":"MemberExpression","start":6877,"end":6888,"object":{"type":"ThisExpression","start":6877,"end":6881},"property":{"type":"Identifier","start":6882,"end":6888,"name":"_parts"},"computed":false,"optional":false},"property":{"type":"Literal","start":6889,"end":6890,"value":0,"raw":"0"},"computed":true,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":6906,"end":6937,"argument":{"type":"CallExpression","start":6913,"end":6936,"callee":{"type":"MemberExpression","start":6913,"end":6934,"object":{"type":"Identifier","start":6913,"end":6920,"name":"icuPart"},"property":{"type":"Identifier","start":6921,"end":6934,"name":"getICUMessage"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":{"type":"BlockStatement","start":6963,"end":7001,"body":[{"type":"ReturnStatement","start":6978,"end":6990,"argument":{"type":"Literal","start":6985,"end":6989,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":7116,"end":8297,"static":false,"computed":false,"key":{"type":"Identifier","start":7116,"end":7137,"name":"checkPlaceholderAdded"},"kind":"method","value":{"type":"FunctionExpression","start":7137,"end":8297,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":7140,"end":8297,"body":[{"type":"VariableDeclaration","start":7151,"end":7164,"declarations":[{"type":"VariableDeclarator","start":7155,"end":7163,"id":{"type":"Identifier","start":7155,"end":7156,"name":"e"},"init":{"type":"Literal","start":7159,"end":7163,"value":null,"raw":"null"}}],"kind":"let"},{"type":"VariableDeclaration","start":7174,"end":7203,"declarations":[{"type":"VariableDeclarator","start":7180,"end":7202,"id":{"type":"Identifier","start":7180,"end":7197,"name":"suspiciousIndexes"},"init":{"type":"ArrayExpression","start":7200,"end":7202,"elements":[]}}],"kind":"const"},{"type":"IfStatement","start":7213,"end":7579,"test":{"type":"MemberExpression","start":7217,"end":7235,"object":{"type":"ThisExpression","start":7217,"end":7221},"property":{"type":"Identifier","start":7222,"end":7235,"name":"sourceMessage"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":7237,"end":7579,"body":[{"type":"VariableDeclaration","start":7252,"end":7316,"declarations":[{"type":"VariableDeclarator","start":7258,"end":7315,"id":{"type":"Identifier","start":7258,"end":7276,"name":"sourcePlaceholders"},"init":{"type":"CallExpression","start":7279,"end":7315,"callee":{"type":"MemberExpression","start":7279,"end":7313,"object":{"type":"MemberExpression","start":7279,"end":7297,"object":{"type":"ThisExpression","start":7279,"end":7283},"property":{"type":"Identifier","start":7284,"end":7297,"name":"sourceMessage"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7298,"end":7313,"name":"allPlaceholders"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":7330,"end":7376,"declarations":[{"type":"VariableDeclarator","start":7336,"end":7375,"id":{"type":"Identifier","start":7336,"end":7350,"name":"myPlaceholders"},"init":{"type":"CallExpression","start":7353,"end":7375,"callee":{"type":"MemberExpression","start":7353,"end":7373,"object":{"type":"ThisExpression","start":7353,"end":7357},"property":{"type":"Identifier","start":7358,"end":7373,"name":"allPlaceholders"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7390,"end":7568,"expression":{"type":"CallExpression","start":7390,"end":7567,"callee":{"type":"MemberExpression","start":7390,"end":7412,"object":{"type":"Identifier","start":7390,"end":7404,"name":"myPlaceholders"},"property":{"type":"Identifier","start":7405,"end":7412,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":7413,"end":7566,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7414,"end":7419,"name":"index"}],"body":{"type":"BlockStatement","start":7424,"end":7566,"body":[{"type":"IfStatement","start":7443,"end":7551,"test":{"type":"UnaryExpression","start":7447,"end":7477,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":7448,"end":7477,"callee":{"type":"MemberExpression","start":7448,"end":7470,"object":{"type":"Identifier","start":7448,"end":7466,"name":"sourcePlaceholders"},"property":{"type":"Identifier","start":7467,"end":7470,"name":"has"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7471,"end":7476,"name":"index"}],"optional":false}},"consequent":{"type":"BlockStatement","start":7479,"end":7551,"body":[{"type":"ExpressionStatement","start":7502,"end":7532,"expression":{"type":"CallExpression","start":7502,"end":7531,"callee":{"type":"MemberExpression","start":7502,"end":7524,"object":{"type":"Identifier","start":7502,"end":7519,"name":"suspiciousIndexes"},"property":{"type":"Identifier","start":7520,"end":7524,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7525,"end":7530,"name":"index"}],"optional":false}}]},"alternate":null}]}}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":7589,"end":8271,"test":{"type":"BinaryExpression","start":7593,"end":7623,"left":{"type":"MemberExpression","start":7593,"end":7617,"object":{"type":"Identifier","start":7593,"end":7610,"name":"suspiciousIndexes"},"property":{"type":"Identifier","start":7611,"end":7617,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":7622,"end":7623,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":7625,"end":7738,"body":[{"type":"ExpressionStatement","start":7640,"end":7727,"expression":{"type":"AssignmentExpression","start":7640,"end":7726,"operator":"=","left":{"type":"Identifier","start":7640,"end":7641,"name":"e"},"right":{"type":"BinaryExpression","start":7644,"end":7726,"left":{"type":"BinaryExpression","start":7644,"end":7687,"left":{"type":"Literal","start":7644,"end":7664,"value":"added placeholder ","raw":"'added placeholder '"},"operator":"+","right":{"type":"MemberExpression","start":7667,"end":7687,"object":{"type":"Identifier","start":7667,"end":7684,"name":"suspiciousIndexes"},"property":{"type":"Literal","start":7685,"end":7686,"value":0,"raw":"0"},"computed":true,"optional":false}},"operator":"+","right":{"type":"Literal","start":7690,"end":7726,"value":", which is not in original message","raw":"', which is not in original message'"}}}}]},"alternate":{"type":"IfStatement","start":7753,"end":8271,"test":{"type":"BinaryExpression","start":7757,"end":7785,"left":{"type":"MemberExpression","start":7757,"end":7781,"object":{"type":"Identifier","start":7757,"end":7774,"name":"suspiciousIndexes"},"property":{"type":"Identifier","start":7775,"end":7781,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":7784,"end":7785,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":7787,"end":8271,"body":[{"type":"VariableDeclaration","start":7802,"end":7832,"declarations":[{"type":"VariableDeclarator","start":7806,"end":7831,"id":{"type":"Identifier","start":7806,"end":7826,"name":"allSuspiciousIndexes"},"init":{"type":"Literal","start":7829,"end":7831,"value":"","raw":"''"}}],"kind":"let"},{"type":"VariableDeclaration","start":7846,"end":7863,"declarations":[{"type":"VariableDeclarator","start":7850,"end":7862,"id":{"type":"Identifier","start":7850,"end":7855,"name":"first"},"init":{"type":"Literal","start":7858,"end":7862,"value":true,"raw":"true"}}],"kind":"let"},{"type":"ExpressionStatement","start":7877,"end":8157,"expression":{"type":"CallExpression","start":7877,"end":8156,"callee":{"type":"MemberExpression","start":7877,"end":7902,"object":{"type":"Identifier","start":7877,"end":7894,"name":"suspiciousIndexes"},"property":{"type":"Identifier","start":7895,"end":7902,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":7903,"end":8155,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7904,"end":7909,"name":"index"}],"body":{"type":"BlockStatement","start":7914,"end":8155,"body":[{"type":"IfStatement","start":7933,"end":8038,"test":{"type":"UnaryExpression","start":7937,"end":7943,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":7938,"end":7943,"name":"first"}},"consequent":{"type":"BlockStatement","start":7945,"end":8038,"body":[{"type":"ExpressionStatement","start":7968,"end":8019,"expression":{"type":"AssignmentExpression","start":7968,"end":8018,"operator":"=","left":{"type":"Identifier","start":7968,"end":7988,"name":"allSuspiciousIndexes"},"right":{"type":"BinaryExpression","start":7991,"end":8018,"left":{"type":"Identifier","start":7991,"end":8011,"name":"allSuspiciousIndexes"},"operator":"+","right":{"type":"Literal","start":8014,"end":8018,"value":", ","raw":"', '"}}}}]},"alternate":null},{"type":"ExpressionStatement","start":8056,"end":8108,"expression":{"type":"AssignmentExpression","start":8056,"end":8107,"operator":"=","left":{"type":"Identifier","start":8056,"end":8076,"name":"allSuspiciousIndexes"},"right":{"type":"BinaryExpression","start":8079,"end":8107,"left":{"type":"Identifier","start":8079,"end":8099,"name":"allSuspiciousIndexes"},"operator":"+","right":{"type":"Identifier","start":8102,"end":8107,"name":"index"}}}},{"type":"ExpressionStatement","start":8126,"end":8140,"expression":{"type":"AssignmentExpression","start":8126,"end":8139,"operator":"=","left":{"type":"Identifier","start":8126,"end":8131,"name":"first"},"right":{"type":"Literal","start":8134,"end":8139,"value":false,"raw":"false"}}}]}}],"optional":false}},{"type":"ExpressionStatement","start":8171,"end":8260,"expression":{"type":"AssignmentExpression","start":8171,"end":8259,"operator":"=","left":{"type":"Identifier","start":8171,"end":8172,"name":"e"},"right":{"type":"BinaryExpression","start":8175,"end":8259,"left":{"type":"BinaryExpression","start":8175,"end":8219,"left":{"type":"Literal","start":8175,"end":8196,"value":"added placeholders ","raw":"'added placeholders '"},"operator":"+","right":{"type":"Identifier","start":8199,"end":8219,"name":"allSuspiciousIndexes"}},"operator":"+","right":{"type":"Literal","start":8222,"end":8259,"value":", which are not in original message","raw":"', which are not in original message'"}}}}]},"alternate":null}},{"type":"ReturnStatement","start":8281,"end":8290,"argument":{"type":"Identifier","start":8288,"end":8289,"name":"e"}}]}}},{"type":"MethodDefinition","start":8407,"end":9569,"static":false,"computed":false,"key":{"type":"Identifier","start":8407,"end":8430,"name":"checkPlaceholderRemoved"},"kind":"method","value":{"type":"FunctionExpression","start":8430,"end":9569,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":8433,"end":9569,"body":[{"type":"VariableDeclaration","start":8444,"end":8457,"declarations":[{"type":"VariableDeclarator","start":8448,"end":8456,"id":{"type":"Identifier","start":8448,"end":8449,"name":"w"},"init":{"type":"Literal","start":8452,"end":8456,"value":null,"raw":"null"}}],"kind":"let"},{"type":"VariableDeclaration","start":8467,"end":8496,"declarations":[{"type":"VariableDeclarator","start":8473,"end":8495,"id":{"type":"Identifier","start":8473,"end":8490,"name":"suspiciousIndexes"},"init":{"type":"ArrayExpression","start":8493,"end":8495,"elements":[]}}],"kind":"const"},{"type":"IfStatement","start":8506,"end":8872,"test":{"type":"MemberExpression","start":8510,"end":8528,"object":{"type":"ThisExpression","start":8510,"end":8514},"property":{"type":"Identifier","start":8515,"end":8528,"name":"sourceMessage"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":8530,"end":8872,"body":[{"type":"VariableDeclaration","start":8545,"end":8609,"declarations":[{"type":"VariableDeclarator","start":8551,"end":8608,"id":{"type":"Identifier","start":8551,"end":8569,"name":"sourcePlaceholders"},"init":{"type":"CallExpression","start":8572,"end":8608,"callee":{"type":"MemberExpression","start":8572,"end":8606,"object":{"type":"MemberExpression","start":8572,"end":8590,"object":{"type":"ThisExpression","start":8572,"end":8576},"property":{"type":"Identifier","start":8577,"end":8590,"name":"sourceMessage"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8591,"end":8606,"name":"allPlaceholders"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":8623,"end":8669,"declarations":[{"type":"VariableDeclarator","start":8629,"end":8668,"id":{"type":"Identifier","start":8629,"end":8643,"name":"myPlaceholders"},"init":{"type":"CallExpression","start":8646,"end":8668,"callee":{"type":"MemberExpression","start":8646,"end":8666,"object":{"type":"ThisExpression","start":8646,"end":8650},"property":{"type":"Identifier","start":8651,"end":8666,"name":"allPlaceholders"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":8683,"end":8861,"expression":{"type":"CallExpression","start":8683,"end":8860,"callee":{"type":"MemberExpression","start":8683,"end":8709,"object":{"type":"Identifier","start":8683,"end":8701,"name":"sourcePlaceholders"},"property":{"type":"Identifier","start":8702,"end":8709,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":8710,"end":8859,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8711,"end":8716,"name":"index"}],"body":{"type":"BlockStatement","start":8721,"end":8859,"body":[{"type":"IfStatement","start":8740,"end":8844,"test":{"type":"UnaryExpression","start":8744,"end":8770,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":8745,"end":8770,"callee":{"type":"MemberExpression","start":8745,"end":8763,"object":{"type":"Identifier","start":8745,"end":8759,"name":"myPlaceholders"},"property":{"type":"Identifier","start":8760,"end":8763,"name":"has"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8764,"end":8769,"name":"index"}],"optional":false}},"consequent":{"type":"BlockStatement","start":8772,"end":8844,"body":[{"type":"ExpressionStatement","start":8795,"end":8825,"expression":{"type":"CallExpression","start":8795,"end":8824,"callee":{"type":"MemberExpression","start":8795,"end":8817,"object":{"type":"Identifier","start":8795,"end":8812,"name":"suspiciousIndexes"},"property":{"type":"Identifier","start":8813,"end":8817,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8818,"end":8823,"name":"index"}],"optional":false}}]},"alternate":null}]}}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":8882,"end":9543,"test":{"type":"BinaryExpression","start":8886,"end":8916,"left":{"type":"MemberExpression","start":8886,"end":8910,"object":{"type":"Identifier","start":8886,"end":8903,"name":"suspiciousIndexes"},"property":{"type":"Identifier","start":8904,"end":8910,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":8915,"end":8916,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":8918,"end":9021,"body":[{"type":"ExpressionStatement","start":8933,"end":9010,"expression":{"type":"AssignmentExpression","start":8933,"end":9009,"operator":"=","left":{"type":"Identifier","start":8933,"end":8934,"name":"w"},"right":{"type":"BinaryExpression","start":8937,"end":9009,"left":{"type":"BinaryExpression","start":8937,"end":8982,"left":{"type":"Literal","start":8937,"end":8959,"value":"removed placeholder ","raw":"'removed placeholder '"},"operator":"+","right":{"type":"MemberExpression","start":8962,"end":8982,"object":{"type":"Identifier","start":8962,"end":8979,"name":"suspiciousIndexes"},"property":{"type":"Literal","start":8980,"end":8981,"value":0,"raw":"0"},"computed":true,"optional":false}},"operator":"+","right":{"type":"Literal","start":8985,"end":9009,"value":" from original message","raw":"' from original message'"}}}}]},"alternate":{"type":"IfStatement","start":9036,"end":9543,"test":{"type":"BinaryExpression","start":9040,"end":9068,"left":{"type":"MemberExpression","start":9040,"end":9064,"object":{"type":"Identifier","start":9040,"end":9057,"name":"suspiciousIndexes"},"property":{"type":"Identifier","start":9058,"end":9064,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":9067,"end":9068,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":9070,"end":9543,"body":[{"type":"VariableDeclaration","start":9085,"end":9115,"declarations":[{"type":"VariableDeclarator","start":9089,"end":9114,"id":{"type":"Identifier","start":9089,"end":9109,"name":"allSuspiciousIndexes"},"init":{"type":"Literal","start":9112,"end":9114,"value":"","raw":"''"}}],"kind":"let"},{"type":"VariableDeclaration","start":9129,"end":9146,"declarations":[{"type":"VariableDeclarator","start":9133,"end":9145,"id":{"type":"Identifier","start":9133,"end":9138,"name":"first"},"init":{"type":"Literal","start":9141,"end":9145,"value":true,"raw":"true"}}],"kind":"let"},{"type":"ExpressionStatement","start":9160,"end":9440,"expression":{"type":"CallExpression","start":9160,"end":9439,"callee":{"type":"MemberExpression","start":9160,"end":9185,"object":{"type":"Identifier","start":9160,"end":9177,"name":"suspiciousIndexes"},"property":{"type":"Identifier","start":9178,"end":9185,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":9186,"end":9438,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9187,"end":9192,"name":"index"}],"body":{"type":"BlockStatement","start":9197,"end":9438,"body":[{"type":"IfStatement","start":9216,"end":9321,"test":{"type":"UnaryExpression","start":9220,"end":9226,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":9221,"end":9226,"name":"first"}},"consequent":{"type":"BlockStatement","start":9228,"end":9321,"body":[{"type":"ExpressionStatement","start":9251,"end":9302,"expression":{"type":"AssignmentExpression","start":9251,"end":9301,"operator":"=","left":{"type":"Identifier","start":9251,"end":9271,"name":"allSuspiciousIndexes"},"right":{"type":"BinaryExpression","start":9274,"end":9301,"left":{"type":"Identifier","start":9274,"end":9294,"name":"allSuspiciousIndexes"},"operator":"+","right":{"type":"Literal","start":9297,"end":9301,"value":", ","raw":"', '"}}}}]},"alternate":null},{"type":"ExpressionStatement","start":9339,"end":9391,"expression":{"type":"AssignmentExpression","start":9339,"end":9390,"operator":"=","left":{"type":"Identifier","start":9339,"end":9359,"name":"allSuspiciousIndexes"},"right":{"type":"BinaryExpression","start":9362,"end":9390,"left":{"type":"Identifier","start":9362,"end":9382,"name":"allSuspiciousIndexes"},"operator":"+","right":{"type":"Identifier","start":9385,"end":9390,"name":"index"}}}},{"type":"ExpressionStatement","start":9409,"end":9423,"expression":{"type":"AssignmentExpression","start":9409,"end":9422,"operator":"=","left":{"type":"Identifier","start":9409,"end":9414,"name":"first"},"right":{"type":"Literal","start":9417,"end":9422,"value":false,"raw":"false"}}}]}}],"optional":false}},{"type":"ExpressionStatement","start":9454,"end":9532,"expression":{"type":"AssignmentExpression","start":9454,"end":9531,"operator":"=","left":{"type":"Identifier","start":9454,"end":9455,"name":"w"},"right":{"type":"BinaryExpression","start":9458,"end":9531,"left":{"type":"BinaryExpression","start":9458,"end":9504,"left":{"type":"Literal","start":9458,"end":9481,"value":"removed placeholders ","raw":"'removed placeholders '"},"operator":"+","right":{"type":"Identifier","start":9484,"end":9504,"name":"allSuspiciousIndexes"}},"operator":"+","right":{"type":"Literal","start":9507,"end":9531,"value":" from original message","raw":"' from original message'"}}}}]},"alternate":null}},{"type":"ReturnStatement","start":9553,"end":9562,"argument":{"type":"Identifier","start":9560,"end":9561,"name":"w"}}]}}},{"type":"MethodDefinition","start":9682,"end":10869,"static":false,"computed":false,"key":{"type":"Identifier","start":9682,"end":9705,"name":"checkICUMessageRefAdded"},"kind":"method","value":{"type":"FunctionExpression","start":9705,"end":10869,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":9708,"end":10869,"body":[{"type":"VariableDeclaration","start":9719,"end":9732,"declarations":[{"type":"VariableDeclarator","start":9723,"end":9731,"id":{"type":"Identifier","start":9723,"end":9724,"name":"e"},"init":{"type":"Literal","start":9727,"end":9731,"value":null,"raw":"null"}}],"kind":"let"},{"type":"VariableDeclaration","start":9742,"end":9771,"declarations":[{"type":"VariableDeclarator","start":9748,"end":9770,"id":{"type":"Identifier","start":9748,"end":9765,"name":"suspiciousIndexes"},"init":{"type":"ArrayExpression","start":9768,"end":9770,"elements":[]}}],"kind":"const"},{"type":"IfStatement","start":9781,"end":10131,"test":{"type":"MemberExpression","start":9785,"end":9803,"object":{"type":"ThisExpression","start":9785,"end":9789},"property":{"type":"Identifier","start":9790,"end":9803,"name":"sourceMessage"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":9805,"end":10131,"body":[{"type":"VariableDeclaration","start":9820,"end":9881,"declarations":[{"type":"VariableDeclarator","start":9826,"end":9880,"id":{"type":"Identifier","start":9826,"end":9839,"name":"sourceICURefs"},"init":{"type":"CallExpression","start":9842,"end":9880,"callee":{"type":"MemberExpression","start":9842,"end":9878,"object":{"type":"MemberExpression","start":9842,"end":9860,"object":{"type":"ThisExpression","start":9842,"end":9846},"property":{"type":"Identifier","start":9847,"end":9860,"name":"sourceMessage"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9861,"end":9878,"name":"allICUMessageRefs"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":9895,"end":9938,"declarations":[{"type":"VariableDeclarator","start":9901,"end":9937,"id":{"type":"Identifier","start":9901,"end":9910,"name":"myICURefs"},"init":{"type":"CallExpression","start":9913,"end":9937,"callee":{"type":"MemberExpression","start":9913,"end":9935,"object":{"type":"ThisExpression","start":9913,"end":9917},"property":{"type":"Identifier","start":9918,"end":9935,"name":"allICUMessageRefs"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":9952,"end":10120,"expression":{"type":"CallExpression","start":9952,"end":10119,"callee":{"type":"MemberExpression","start":9952,"end":9969,"object":{"type":"Identifier","start":9952,"end":9961,"name":"myICURefs"},"property":{"type":"Identifier","start":9962,"end":9969,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":9970,"end":10118,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9971,"end":9976,"name":"index"}],"body":{"type":"BlockStatement","start":9981,"end":10118,"body":[{"type":"IfStatement","start":10000,"end":10103,"test":{"type":"UnaryExpression","start":10004,"end":10029,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":10005,"end":10029,"callee":{"type":"MemberExpression","start":10005,"end":10022,"object":{"type":"Identifier","start":10005,"end":10018,"name":"sourceICURefs"},"property":{"type":"Identifier","start":10019,"end":10022,"name":"has"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10023,"end":10028,"name":"index"}],"optional":false}},"consequent":{"type":"BlockStatement","start":10031,"end":10103,"body":[{"type":"ExpressionStatement","start":10054,"end":10084,"expression":{"type":"CallExpression","start":10054,"end":10083,"callee":{"type":"MemberExpression","start":10054,"end":10076,"object":{"type":"Identifier","start":10054,"end":10071,"name":"suspiciousIndexes"},"property":{"type":"Identifier","start":10072,"end":10076,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10077,"end":10082,"name":"index"}],"optional":false}}]},"alternate":null}]}}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":10141,"end":10843,"test":{"type":"BinaryExpression","start":10145,"end":10175,"left":{"type":"MemberExpression","start":10145,"end":10169,"object":{"type":"Identifier","start":10145,"end":10162,"name":"suspiciousIndexes"},"property":{"type":"Identifier","start":10163,"end":10169,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":10174,"end":10175,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":10177,"end":10300,"body":[{"type":"ExpressionStatement","start":10192,"end":10289,"expression":{"type":"AssignmentExpression","start":10192,"end":10288,"operator":"=","left":{"type":"Identifier","start":10192,"end":10193,"name":"e"},"right":{"type":"BinaryExpression","start":10196,"end":10288,"left":{"type":"BinaryExpression","start":10196,"end":10249,"left":{"type":"Literal","start":10196,"end":10226,"value":"added ICU message reference ","raw":"'added ICU message reference '"},"operator":"+","right":{"type":"MemberExpression","start":10229,"end":10249,"object":{"type":"Identifier","start":10229,"end":10246,"name":"suspiciousIndexes"},"property":{"type":"Literal","start":10247,"end":10248,"value":0,"raw":"0"},"computed":true,"optional":false}},"operator":"+","right":{"type":"Literal","start":10252,"end":10288,"value":", which is not in original message","raw":"', which is not in original message'"}}}}]},"alternate":{"type":"IfStatement","start":10315,"end":10843,"test":{"type":"BinaryExpression","start":10319,"end":10347,"left":{"type":"MemberExpression","start":10319,"end":10343,"object":{"type":"Identifier","start":10319,"end":10336,"name":"suspiciousIndexes"},"property":{"type":"Identifier","start":10337,"end":10343,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":10346,"end":10347,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":10349,"end":10843,"body":[{"type":"VariableDeclaration","start":10364,"end":10394,"declarations":[{"type":"VariableDeclarator","start":10368,"end":10393,"id":{"type":"Identifier","start":10368,"end":10388,"name":"allSuspiciousIndexes"},"init":{"type":"Literal","start":10391,"end":10393,"value":"","raw":"''"}}],"kind":"let"},{"type":"VariableDeclaration","start":10408,"end":10425,"declarations":[{"type":"VariableDeclarator","start":10412,"end":10424,"id":{"type":"Identifier","start":10412,"end":10417,"name":"first"},"init":{"type":"Literal","start":10420,"end":10424,"value":true,"raw":"true"}}],"kind":"let"},{"type":"ExpressionStatement","start":10439,"end":10719,"expression":{"type":"CallExpression","start":10439,"end":10718,"callee":{"type":"MemberExpression","start":10439,"end":10464,"object":{"type":"Identifier","start":10439,"end":10456,"name":"suspiciousIndexes"},"property":{"type":"Identifier","start":10457,"end":10464,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":10465,"end":10717,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":10466,"end":10471,"name":"index"}],"body":{"type":"BlockStatement","start":10476,"end":10717,"body":[{"type":"IfStatement","start":10495,"end":10600,"test":{"type":"UnaryExpression","start":10499,"end":10505,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":10500,"end":10505,"name":"first"}},"consequent":{"type":"BlockStatement","start":10507,"end":10600,"body":[{"type":"ExpressionStatement","start":10530,"end":10581,"expression":{"type":"AssignmentExpression","start":10530,"end":10580,"operator":"=","left":{"type":"Identifier","start":10530,"end":10550,"name":"allSuspiciousIndexes"},"right":{"type":"BinaryExpression","start":10553,"end":10580,"left":{"type":"Identifier","start":10553,"end":10573,"name":"allSuspiciousIndexes"},"operator":"+","right":{"type":"Literal","start":10576,"end":10580,"value":", ","raw":"', '"}}}}]},"alternate":null},{"type":"ExpressionStatement","start":10618,"end":10670,"expression":{"type":"AssignmentExpression","start":10618,"end":10669,"operator":"=","left":{"type":"Identifier","start":10618,"end":10638,"name":"allSuspiciousIndexes"},"right":{"type":"BinaryExpression","start":10641,"end":10669,"left":{"type":"Identifier","start":10641,"end":10661,"name":"allSuspiciousIndexes"},"operator":"+","right":{"type":"Identifier","start":10664,"end":10669,"name":"index"}}}},{"type":"ExpressionStatement","start":10688,"end":10702,"expression":{"type":"AssignmentExpression","start":10688,"end":10701,"operator":"=","left":{"type":"Identifier","start":10688,"end":10693,"name":"first"},"right":{"type":"Literal","start":10696,"end":10701,"value":false,"raw":"false"}}}]}}],"optional":false}},{"type":"ExpressionStatement","start":10733,"end":10832,"expression":{"type":"AssignmentExpression","start":10733,"end":10831,"operator":"=","left":{"type":"Identifier","start":10733,"end":10734,"name":"e"},"right":{"type":"BinaryExpression","start":10737,"end":10831,"left":{"type":"BinaryExpression","start":10737,"end":10791,"left":{"type":"Literal","start":10737,"end":10768,"value":"added ICU message references ","raw":"'added ICU message references '"},"operator":"+","right":{"type":"Identifier","start":10771,"end":10791,"name":"allSuspiciousIndexes"}},"operator":"+","right":{"type":"Literal","start":10794,"end":10831,"value":", which are not in original message","raw":"', which are not in original message'"}}}}]},"alternate":null}},{"type":"ReturnStatement","start":10853,"end":10862,"argument":{"type":"Identifier","start":10860,"end":10861,"name":"e"}}]}}},{"type":"MethodDefinition","start":10984,"end":12152,"static":false,"computed":false,"key":{"type":"Identifier","start":10984,"end":11009,"name":"checkICUMessageRefRemoved"},"kind":"method","value":{"type":"FunctionExpression","start":11009,"end":12152,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":11012,"end":12152,"body":[{"type":"VariableDeclaration","start":11023,"end":11036,"declarations":[{"type":"VariableDeclarator","start":11027,"end":11035,"id":{"type":"Identifier","start":11027,"end":11028,"name":"e"},"init":{"type":"Literal","start":11031,"end":11035,"value":null,"raw":"null"}}],"kind":"let"},{"type":"VariableDeclaration","start":11046,"end":11075,"declarations":[{"type":"VariableDeclarator","start":11052,"end":11074,"id":{"type":"Identifier","start":11052,"end":11069,"name":"suspiciousIndexes"},"init":{"type":"ArrayExpression","start":11072,"end":11074,"elements":[]}}],"kind":"const"},{"type":"IfStatement","start":11085,"end":11435,"test":{"type":"MemberExpression","start":11089,"end":11107,"object":{"type":"ThisExpression","start":11089,"end":11093},"property":{"type":"Identifier","start":11094,"end":11107,"name":"sourceMessage"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":11109,"end":11435,"body":[{"type":"VariableDeclaration","start":11124,"end":11185,"declarations":[{"type":"VariableDeclarator","start":11130,"end":11184,"id":{"type":"Identifier","start":11130,"end":11143,"name":"sourceICURefs"},"init":{"type":"CallExpression","start":11146,"end":11184,"callee":{"type":"MemberExpression","start":11146,"end":11182,"object":{"type":"MemberExpression","start":11146,"end":11164,"object":{"type":"ThisExpression","start":11146,"end":11150},"property":{"type":"Identifier","start":11151,"end":11164,"name":"sourceMessage"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11165,"end":11182,"name":"allICUMessageRefs"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":11199,"end":11242,"declarations":[{"type":"VariableDeclarator","start":11205,"end":11241,"id":{"type":"Identifier","start":11205,"end":11214,"name":"myICURefs"},"init":{"type":"CallExpression","start":11217,"end":11241,"callee":{"type":"MemberExpression","start":11217,"end":11239,"object":{"type":"ThisExpression","start":11217,"end":11221},"property":{"type":"Identifier","start":11222,"end":11239,"name":"allICUMessageRefs"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":11256,"end":11424,"expression":{"type":"CallExpression","start":11256,"end":11423,"callee":{"type":"MemberExpression","start":11256,"end":11277,"object":{"type":"Identifier","start":11256,"end":11269,"name":"sourceICURefs"},"property":{"type":"Identifier","start":11270,"end":11277,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":11278,"end":11422,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11279,"end":11284,"name":"index"}],"body":{"type":"BlockStatement","start":11289,"end":11422,"body":[{"type":"IfStatement","start":11308,"end":11407,"test":{"type":"UnaryExpression","start":11312,"end":11333,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":11313,"end":11333,"callee":{"type":"MemberExpression","start":11313,"end":11326,"object":{"type":"Identifier","start":11313,"end":11322,"name":"myICURefs"},"property":{"type":"Identifier","start":11323,"end":11326,"name":"has"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11327,"end":11332,"name":"index"}],"optional":false}},"consequent":{"type":"BlockStatement","start":11335,"end":11407,"body":[{"type":"ExpressionStatement","start":11358,"end":11388,"expression":{"type":"CallExpression","start":11358,"end":11387,"callee":{"type":"MemberExpression","start":11358,"end":11380,"object":{"type":"Identifier","start":11358,"end":11375,"name":"suspiciousIndexes"},"property":{"type":"Identifier","start":11376,"end":11380,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11381,"end":11386,"name":"index"}],"optional":false}}]},"alternate":null}]}}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":11445,"end":12126,"test":{"type":"BinaryExpression","start":11449,"end":11479,"left":{"type":"MemberExpression","start":11449,"end":11473,"object":{"type":"Identifier","start":11449,"end":11466,"name":"suspiciousIndexes"},"property":{"type":"Identifier","start":11467,"end":11473,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":11478,"end":11479,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":11481,"end":11594,"body":[{"type":"ExpressionStatement","start":11496,"end":11583,"expression":{"type":"AssignmentExpression","start":11496,"end":11582,"operator":"=","left":{"type":"Identifier","start":11496,"end":11497,"name":"e"},"right":{"type":"BinaryExpression","start":11500,"end":11582,"left":{"type":"BinaryExpression","start":11500,"end":11555,"left":{"type":"Literal","start":11500,"end":11532,"value":"removed ICU message reference ","raw":"'removed ICU message reference '"},"operator":"+","right":{"type":"MemberExpression","start":11535,"end":11555,"object":{"type":"Identifier","start":11535,"end":11552,"name":"suspiciousIndexes"},"property":{"type":"Literal","start":11553,"end":11554,"value":0,"raw":"0"},"computed":true,"optional":false}},"operator":"+","right":{"type":"Literal","start":11558,"end":11582,"value":" from original message","raw":"' from original message'"}}}}]},"alternate":{"type":"IfStatement","start":11609,"end":12126,"test":{"type":"BinaryExpression","start":11613,"end":11641,"left":{"type":"MemberExpression","start":11613,"end":11637,"object":{"type":"Identifier","start":11613,"end":11630,"name":"suspiciousIndexes"},"property":{"type":"Identifier","start":11631,"end":11637,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":11640,"end":11641,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":11643,"end":12126,"body":[{"type":"VariableDeclaration","start":11658,"end":11688,"declarations":[{"type":"VariableDeclarator","start":11662,"end":11687,"id":{"type":"Identifier","start":11662,"end":11682,"name":"allSuspiciousIndexes"},"init":{"type":"Literal","start":11685,"end":11687,"value":"","raw":"''"}}],"kind":"let"},{"type":"VariableDeclaration","start":11702,"end":11719,"declarations":[{"type":"VariableDeclarator","start":11706,"end":11718,"id":{"type":"Identifier","start":11706,"end":11711,"name":"first"},"init":{"type":"Literal","start":11714,"end":11718,"value":true,"raw":"true"}}],"kind":"let"},{"type":"ExpressionStatement","start":11733,"end":12013,"expression":{"type":"CallExpression","start":11733,"end":12012,"callee":{"type":"MemberExpression","start":11733,"end":11758,"object":{"type":"Identifier","start":11733,"end":11750,"name":"suspiciousIndexes"},"property":{"type":"Identifier","start":11751,"end":11758,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":11759,"end":12011,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11760,"end":11765,"name":"index"}],"body":{"type":"BlockStatement","start":11770,"end":12011,"body":[{"type":"IfStatement","start":11789,"end":11894,"test":{"type":"UnaryExpression","start":11793,"end":11799,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":11794,"end":11799,"name":"first"}},"consequent":{"type":"BlockStatement","start":11801,"end":11894,"body":[{"type":"ExpressionStatement","start":11824,"end":11875,"expression":{"type":"AssignmentExpression","start":11824,"end":11874,"operator":"=","left":{"type":"Identifier","start":11824,"end":11844,"name":"allSuspiciousIndexes"},"right":{"type":"BinaryExpression","start":11847,"end":11874,"left":{"type":"Identifier","start":11847,"end":11867,"name":"allSuspiciousIndexes"},"operator":"+","right":{"type":"Literal","start":11870,"end":11874,"value":", ","raw":"', '"}}}}]},"alternate":null},{"type":"ExpressionStatement","start":11912,"end":11964,"expression":{"type":"AssignmentExpression","start":11912,"end":11963,"operator":"=","left":{"type":"Identifier","start":11912,"end":11932,"name":"allSuspiciousIndexes"},"right":{"type":"BinaryExpression","start":11935,"end":11963,"left":{"type":"Identifier","start":11935,"end":11955,"name":"allSuspiciousIndexes"},"operator":"+","right":{"type":"Identifier","start":11958,"end":11963,"name":"index"}}}},{"type":"ExpressionStatement","start":11982,"end":11996,"expression":{"type":"AssignmentExpression","start":11982,"end":11995,"operator":"=","left":{"type":"Identifier","start":11982,"end":11987,"name":"first"},"right":{"type":"Literal","start":11990,"end":11995,"value":false,"raw":"false"}}}]}}],"optional":false}},{"type":"ExpressionStatement","start":12027,"end":12115,"expression":{"type":"AssignmentExpression","start":12027,"end":12114,"operator":"=","left":{"type":"Identifier","start":12027,"end":12028,"name":"e"},"right":{"type":"BinaryExpression","start":12031,"end":12114,"left":{"type":"BinaryExpression","start":12031,"end":12087,"left":{"type":"Literal","start":12031,"end":12064,"value":"removed ICU message references ","raw":"'removed ICU message references '"},"operator":"+","right":{"type":"Identifier","start":12067,"end":12087,"name":"allSuspiciousIndexes"}},"operator":"+","right":{"type":"Literal","start":12090,"end":12114,"value":" from original message","raw":"' from original message'"}}}}]},"alternate":null}},{"type":"ReturnStatement","start":12136,"end":12145,"argument":{"type":"Identifier","start":12143,"end":12144,"name":"e"}}]}}},{"type":"MethodDefinition","start":12237,"end":12541,"static":false,"computed":false,"key":{"type":"Identifier","start":12237,"end":12252,"name":"allPlaceholders"},"kind":"method","value":{"type":"FunctionExpression","start":12252,"end":12541,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":12255,"end":12541,"body":[{"type":"VariableDeclaration","start":12266,"end":12291,"declarations":[{"type":"VariableDeclarator","start":12272,"end":12290,"id":{"type":"Identifier","start":12272,"end":12278,"name":"result"},"init":{"type":"NewExpression","start":12281,"end":12290,"callee":{"type":"Identifier","start":12285,"end":12288,"name":"Set"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":12301,"end":12510,"expression":{"type":"CallExpression","start":12301,"end":12509,"callee":{"type":"MemberExpression","start":12301,"end":12321,"object":{"type":"CallExpression","start":12301,"end":12313,"callee":{"type":"MemberExpression","start":12301,"end":12311,"object":{"type":"ThisExpression","start":12301,"end":12305},"property":{"type":"Identifier","start":12306,"end":12311,"name":"parts"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":12314,"end":12321,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":12322,"end":12508,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12323,"end":12327,"name":"part"}],"body":{"type":"BlockStatement","start":12332,"end":12508,"body":[{"type":"IfStatement","start":12347,"end":12497,"test":{"type":"BinaryExpression","start":12351,"end":12398,"left":{"type":"MemberExpression","start":12351,"end":12360,"object":{"type":"Identifier","start":12351,"end":12355,"name":"part"},"property":{"type":"Identifier","start":12356,"end":12360,"name":"type"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":12365,"end":12398,"object":{"type":"Identifier","start":12365,"end":12386,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":12387,"end":12398,"name":"PLACEHOLDER"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":12400,"end":12497,"body":[{"type":"VariableDeclaration","start":12419,"end":12446,"declarations":[{"type":"VariableDeclarator","start":12425,"end":12445,"id":{"type":"Identifier","start":12425,"end":12430,"name":"index"},"init":{"type":"CallExpression","start":12433,"end":12445,"callee":{"type":"MemberExpression","start":12433,"end":12443,"object":{"type":"Identifier","start":12433,"end":12437,"name":"part"},"property":{"type":"Identifier","start":12438,"end":12443,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":12464,"end":12482,"expression":{"type":"CallExpression","start":12464,"end":12481,"callee":{"type":"MemberExpression","start":12464,"end":12474,"object":{"type":"Identifier","start":12464,"end":12470,"name":"result"},"property":{"type":"Identifier","start":12471,"end":12474,"name":"add"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12475,"end":12480,"name":"index"}],"optional":false}}]},"alternate":null}]}}],"optional":false}},{"type":"ReturnStatement","start":12520,"end":12534,"argument":{"type":"Identifier","start":12527,"end":12533,"name":"result"}}]}}},{"type":"MethodDefinition","start":12685,"end":13096,"static":false,"computed":false,"key":{"type":"Identifier","start":12685,"end":12703,"name":"getPlaceholderDisp"},"kind":"method","value":{"type":"FunctionExpression","start":12703,"end":13096,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12704,"end":12709,"name":"index"}],"body":{"type":"BlockStatement","start":12711,"end":13096,"body":[{"type":"VariableDeclaration","start":12722,"end":12745,"declarations":[{"type":"VariableDeclarator","start":12726,"end":12744,"id":{"type":"Identifier","start":12726,"end":12737,"name":"placeHolder"},"init":{"type":"Literal","start":12740,"end":12744,"value":null,"raw":"null"}}],"kind":"let"},{"type":"ExpressionStatement","start":12755,"end":13032,"expression":{"type":"CallExpression","start":12755,"end":13031,"callee":{"type":"MemberExpression","start":12755,"end":12775,"object":{"type":"CallExpression","start":12755,"end":12767,"callee":{"type":"MemberExpression","start":12755,"end":12765,"object":{"type":"ThisExpression","start":12755,"end":12759},"property":{"type":"Identifier","start":12760,"end":12765,"name":"parts"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":12768,"end":12775,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":12776,"end":13030,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12777,"end":12781,"name":"part"}],"body":{"type":"BlockStatement","start":12786,"end":13030,"body":[{"type":"IfStatement","start":12801,"end":13019,"test":{"type":"BinaryExpression","start":12805,"end":12852,"left":{"type":"MemberExpression","start":12805,"end":12814,"object":{"type":"Identifier","start":12805,"end":12809,"name":"part"},"property":{"type":"Identifier","start":12810,"end":12814,"name":"type"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":12819,"end":12852,"object":{"type":"Identifier","start":12819,"end":12840,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":12841,"end":12852,"name":"PLACEHOLDER"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":12854,"end":13019,"body":[{"type":"VariableDeclaration","start":12873,"end":12893,"declarations":[{"type":"VariableDeclarator","start":12879,"end":12892,"id":{"type":"Identifier","start":12879,"end":12885,"name":"phPart"},"init":{"type":"Identifier","start":12888,"end":12892,"name":"part"}}],"kind":"const"},{"type":"IfStatement","start":12911,"end":13004,"test":{"type":"BinaryExpression","start":12915,"end":12939,"left":{"type":"CallExpression","start":12915,"end":12929,"callee":{"type":"MemberExpression","start":12915,"end":12927,"object":{"type":"Identifier","start":12915,"end":12921,"name":"phPart"},"property":{"type":"Identifier","start":12922,"end":12927,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"===","right":{"type":"Identifier","start":12934,"end":12939,"name":"index"}},"consequent":{"type":"BlockStatement","start":12941,"end":13004,"body":[{"type":"ExpressionStatement","start":12964,"end":12985,"expression":{"type":"AssignmentExpression","start":12964,"end":12984,"operator":"=","left":{"type":"Identifier","start":12964,"end":12975,"name":"placeHolder"},"right":{"type":"Identifier","start":12978,"end":12984,"name":"phPart"}}}]},"alternate":null}]},"alternate":null}]}}],"optional":false}},{"type":"ReturnStatement","start":13042,"end":13089,"argument":{"type":"ConditionalExpression","start":13049,"end":13088,"test":{"type":"Identifier","start":13049,"end":13060,"name":"placeHolder"},"consequent":{"type":"CallExpression","start":13063,"end":13081,"callee":{"type":"MemberExpression","start":13063,"end":13079,"object":{"type":"Identifier","start":13063,"end":13074,"name":"placeHolder"},"property":{"type":"Identifier","start":13075,"end":13079,"name":"disp"},"computed":false,"optional":false},"arguments":[],"optional":false},"alternate":{"type":"Literal","start":13084,"end":13088,"value":null,"raw":"null"}}}]}}},{"type":"MethodDefinition","start":13185,"end":13495,"static":false,"computed":false,"key":{"type":"Identifier","start":13185,"end":13202,"name":"allICUMessageRefs"},"kind":"method","value":{"type":"FunctionExpression","start":13202,"end":13495,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":13205,"end":13495,"body":[{"type":"VariableDeclaration","start":13216,"end":13241,"declarations":[{"type":"VariableDeclarator","start":13222,"end":13240,"id":{"type":"Identifier","start":13222,"end":13228,"name":"result"},"init":{"type":"NewExpression","start":13231,"end":13240,"callee":{"type":"Identifier","start":13235,"end":13238,"name":"Set"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":13251,"end":13464,"expression":{"type":"CallExpression","start":13251,"end":13463,"callee":{"type":"MemberExpression","start":13251,"end":13271,"object":{"type":"CallExpression","start":13251,"end":13263,"callee":{"type":"MemberExpression","start":13251,"end":13261,"object":{"type":"ThisExpression","start":13251,"end":13255},"property":{"type":"Identifier","start":13256,"end":13261,"name":"parts"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":13264,"end":13271,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":13272,"end":13462,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13273,"end":13277,"name":"part"}],"body":{"type":"BlockStatement","start":13282,"end":13462,"body":[{"type":"IfStatement","start":13297,"end":13451,"test":{"type":"BinaryExpression","start":13301,"end":13352,"left":{"type":"MemberExpression","start":13301,"end":13310,"object":{"type":"Identifier","start":13301,"end":13305,"name":"part"},"property":{"type":"Identifier","start":13306,"end":13310,"name":"type"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":13315,"end":13352,"object":{"type":"Identifier","start":13315,"end":13336,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":13337,"end":13352,"name":"ICU_MESSAGE_REF"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":13354,"end":13451,"body":[{"type":"VariableDeclaration","start":13373,"end":13400,"declarations":[{"type":"VariableDeclarator","start":13379,"end":13399,"id":{"type":"Identifier","start":13379,"end":13384,"name":"index"},"init":{"type":"CallExpression","start":13387,"end":13399,"callee":{"type":"MemberExpression","start":13387,"end":13397,"object":{"type":"Identifier","start":13387,"end":13391,"name":"part"},"property":{"type":"Identifier","start":13392,"end":13397,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":13418,"end":13436,"expression":{"type":"CallExpression","start":13418,"end":13435,"callee":{"type":"MemberExpression","start":13418,"end":13428,"object":{"type":"Identifier","start":13418,"end":13424,"name":"result"},"property":{"type":"Identifier","start":13425,"end":13428,"name":"add"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":13429,"end":13434,"name":"index"}],"optional":false}}]},"alternate":null}]}}],"optional":false}},{"type":"ReturnStatement","start":13474,"end":13488,"argument":{"type":"Identifier","start":13481,"end":13487,"name":"result"}}]}}},{"type":"MethodDefinition","start":13629,"end":14073,"static":false,"computed":false,"key":{"type":"Identifier","start":13629,"end":13649,"name":"getICUMessageRefDisp"},"kind":"method","value":{"type":"FunctionExpression","start":13649,"end":14073,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13650,"end":13655,"name":"index"}],"body":{"type":"BlockStatement","start":13657,"end":14073,"body":[{"type":"VariableDeclaration","start":13668,"end":13697,"declarations":[{"type":"VariableDeclarator","start":13672,"end":13696,"id":{"type":"Identifier","start":13672,"end":13689,"name":"icuMessageRefPart"},"init":{"type":"Literal","start":13692,"end":13696,"value":null,"raw":"null"}}],"kind":"let"},{"type":"ExpressionStatement","start":13707,"end":13997,"expression":{"type":"CallExpression","start":13707,"end":13996,"callee":{"type":"MemberExpression","start":13707,"end":13727,"object":{"type":"CallExpression","start":13707,"end":13719,"callee":{"type":"MemberExpression","start":13707,"end":13717,"object":{"type":"ThisExpression","start":13707,"end":13711},"property":{"type":"Identifier","start":13712,"end":13717,"name":"parts"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":13720,"end":13727,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":13728,"end":13995,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13729,"end":13733,"name":"part"}],"body":{"type":"BlockStatement","start":13738,"end":13995,"body":[{"type":"IfStatement","start":13753,"end":13984,"test":{"type":"BinaryExpression","start":13757,"end":13808,"left":{"type":"MemberExpression","start":13757,"end":13766,"object":{"type":"Identifier","start":13757,"end":13761,"name":"part"},"property":{"type":"Identifier","start":13762,"end":13766,"name":"type"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":13771,"end":13808,"object":{"type":"Identifier","start":13771,"end":13792,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":13793,"end":13808,"name":"ICU_MESSAGE_REF"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":13810,"end":13984,"body":[{"type":"VariableDeclaration","start":13829,"end":13850,"declarations":[{"type":"VariableDeclarator","start":13835,"end":13849,"id":{"type":"Identifier","start":13835,"end":13842,"name":"refPart"},"init":{"type":"Identifier","start":13845,"end":13849,"name":"part"}}],"kind":"const"},{"type":"IfStatement","start":13868,"end":13969,"test":{"type":"BinaryExpression","start":13872,"end":13897,"left":{"type":"CallExpression","start":13872,"end":13887,"callee":{"type":"MemberExpression","start":13872,"end":13885,"object":{"type":"Identifier","start":13872,"end":13879,"name":"refPart"},"property":{"type":"Identifier","start":13880,"end":13885,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"===","right":{"type":"Identifier","start":13892,"end":13897,"name":"index"}},"consequent":{"type":"BlockStatement","start":13899,"end":13969,"body":[{"type":"ExpressionStatement","start":13922,"end":13950,"expression":{"type":"AssignmentExpression","start":13922,"end":13949,"operator":"=","left":{"type":"Identifier","start":13922,"end":13939,"name":"icuMessageRefPart"},"right":{"type":"Identifier","start":13942,"end":13949,"name":"refPart"}}}]},"alternate":null}]},"alternate":null}]}}],"optional":false}},{"type":"ReturnStatement","start":14007,"end":14066,"argument":{"type":"ConditionalExpression","start":14014,"end":14065,"test":{"type":"Identifier","start":14014,"end":14031,"name":"icuMessageRefPart"},"consequent":{"type":"CallExpression","start":14034,"end":14058,"callee":{"type":"MemberExpression","start":14034,"end":14056,"object":{"type":"Identifier","start":14034,"end":14051,"name":"icuMessageRefPart"},"property":{"type":"Identifier","start":14052,"end":14056,"name":"disp"},"computed":false,"optional":false},"arguments":[],"optional":false},"alternate":{"type":"Literal","start":14061,"end":14065,"value":null,"raw":"null"}}}]}}},{"type":"MethodDefinition","start":14174,"end":15263,"static":false,"computed":false,"key":{"type":"Identifier","start":14174,"end":14187,"name":"checkTagAdded"},"kind":"method","value":{"type":"FunctionExpression","start":14187,"end":15263,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":14190,"end":15263,"body":[{"type":"VariableDeclaration","start":14201,"end":14214,"declarations":[{"type":"VariableDeclarator","start":14205,"end":14213,"id":{"type":"Identifier","start":14205,"end":14206,"name":"e"},"init":{"type":"Literal","start":14209,"end":14213,"value":null,"raw":"null"}}],"kind":"let"},{"type":"VariableDeclaration","start":14224,"end":14250,"declarations":[{"type":"VariableDeclarator","start":14230,"end":14249,"id":{"type":"Identifier","start":14230,"end":14244,"name":"suspiciousTags"},"init":{"type":"ArrayExpression","start":14247,"end":14249,"elements":[]}}],"kind":"const"},{"type":"IfStatement","start":14260,"end":14581,"test":{"type":"MemberExpression","start":14264,"end":14282,"object":{"type":"ThisExpression","start":14264,"end":14268},"property":{"type":"Identifier","start":14269,"end":14282,"name":"sourceMessage"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":14284,"end":14581,"body":[{"type":"VariableDeclaration","start":14299,"end":14347,"declarations":[{"type":"VariableDeclarator","start":14305,"end":14346,"id":{"type":"Identifier","start":14305,"end":14315,"name":"sourceTags"},"init":{"type":"CallExpression","start":14318,"end":14346,"callee":{"type":"MemberExpression","start":14318,"end":14344,"object":{"type":"MemberExpression","start":14318,"end":14336,"object":{"type":"ThisExpression","start":14318,"end":14322},"property":{"type":"Identifier","start":14323,"end":14336,"name":"sourceMessage"},"computed":false,"optional":false},"property":{"type":"Identifier","start":14337,"end":14344,"name":"allTags"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":14361,"end":14391,"declarations":[{"type":"VariableDeclarator","start":14367,"end":14390,"id":{"type":"Identifier","start":14367,"end":14373,"name":"myTags"},"init":{"type":"CallExpression","start":14376,"end":14390,"callee":{"type":"MemberExpression","start":14376,"end":14388,"object":{"type":"ThisExpression","start":14376,"end":14380},"property":{"type":"Identifier","start":14381,"end":14388,"name":"allTags"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":14405,"end":14570,"expression":{"type":"CallExpression","start":14405,"end":14569,"callee":{"type":"MemberExpression","start":14405,"end":14419,"object":{"type":"Identifier","start":14405,"end":14411,"name":"myTags"},"property":{"type":"Identifier","start":14412,"end":14419,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":14420,"end":14568,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":14421,"end":14428,"name":"tagName"}],"body":{"type":"BlockStatement","start":14433,"end":14568,"body":[{"type":"IfStatement","start":14452,"end":14553,"test":{"type":"UnaryExpression","start":14456,"end":14480,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":14457,"end":14480,"callee":{"type":"MemberExpression","start":14457,"end":14471,"object":{"type":"Identifier","start":14457,"end":14467,"name":"sourceTags"},"property":{"type":"Identifier","start":14468,"end":14471,"name":"has"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":14472,"end":14479,"name":"tagName"}],"optional":false}},"consequent":{"type":"BlockStatement","start":14482,"end":14553,"body":[{"type":"ExpressionStatement","start":14505,"end":14534,"expression":{"type":"CallExpression","start":14505,"end":14533,"callee":{"type":"MemberExpression","start":14505,"end":14524,"object":{"type":"Identifier","start":14505,"end":14519,"name":"suspiciousTags"},"property":{"type":"Identifier","start":14520,"end":14524,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":14525,"end":14532,"name":"tagName"}],"optional":false}}]},"alternate":null}]}}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":14591,"end":15237,"test":{"type":"BinaryExpression","start":14595,"end":14622,"left":{"type":"MemberExpression","start":14595,"end":14616,"object":{"type":"Identifier","start":14595,"end":14609,"name":"suspiciousTags"},"property":{"type":"Identifier","start":14610,"end":14616,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":14621,"end":14622,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":14624,"end":14728,"body":[{"type":"ExpressionStatement","start":14639,"end":14717,"expression":{"type":"AssignmentExpression","start":14639,"end":14716,"operator":"=","left":{"type":"Identifier","start":14639,"end":14640,"name":"e"},"right":{"type":"BinaryExpression","start":14643,"end":14716,"left":{"type":"BinaryExpression","start":14643,"end":14676,"left":{"type":"Literal","start":14643,"end":14656,"value":"added tag <","raw":"'added tag <'"},"operator":"+","right":{"type":"MemberExpression","start":14659,"end":14676,"object":{"type":"Identifier","start":14659,"end":14673,"name":"suspiciousTags"},"property":{"type":"Literal","start":14674,"end":14675,"value":0,"raw":"0"},"computed":true,"optional":false}},"operator":"+","right":{"type":"Literal","start":14679,"end":14716,"value":">, which is not in original message","raw":"'>, which is not in original message'"}}}}]},"alternate":{"type":"IfStatement","start":14743,"end":15237,"test":{"type":"BinaryExpression","start":14747,"end":14772,"left":{"type":"MemberExpression","start":14747,"end":14768,"object":{"type":"Identifier","start":14747,"end":14761,"name":"suspiciousTags"},"property":{"type":"Identifier","start":14762,"end":14768,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":14771,"end":14772,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":14774,"end":15237,"body":[{"type":"VariableDeclaration","start":14789,"end":14816,"declarations":[{"type":"VariableDeclarator","start":14793,"end":14815,"id":{"type":"Identifier","start":14793,"end":14810,"name":"allSuspiciousTags"},"init":{"type":"Literal","start":14813,"end":14815,"value":"","raw":"''"}}],"kind":"let"},{"type":"VariableDeclaration","start":14830,"end":14847,"declarations":[{"type":"VariableDeclarator","start":14834,"end":14846,"id":{"type":"Identifier","start":14834,"end":14839,"name":"first"},"init":{"type":"Literal","start":14842,"end":14846,"value":true,"raw":"true"}}],"kind":"let"},{"type":"ExpressionStatement","start":14861,"end":15134,"expression":{"type":"CallExpression","start":14861,"end":15133,"callee":{"type":"MemberExpression","start":14861,"end":14883,"object":{"type":"Identifier","start":14861,"end":14875,"name":"suspiciousTags"},"property":{"type":"Identifier","start":14876,"end":14883,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":14884,"end":15132,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":14885,"end":14888,"name":"tag"}],"body":{"type":"BlockStatement","start":14893,"end":15132,"body":[{"type":"IfStatement","start":14912,"end":15011,"test":{"type":"UnaryExpression","start":14916,"end":14922,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":14917,"end":14922,"name":"first"}},"consequent":{"type":"BlockStatement","start":14924,"end":15011,"body":[{"type":"ExpressionStatement","start":14947,"end":14992,"expression":{"type":"AssignmentExpression","start":14947,"end":14991,"operator":"=","left":{"type":"Identifier","start":14947,"end":14964,"name":"allSuspiciousTags"},"right":{"type":"BinaryExpression","start":14967,"end":14991,"left":{"type":"Identifier","start":14967,"end":14984,"name":"allSuspiciousTags"},"operator":"+","right":{"type":"Literal","start":14987,"end":14991,"value":", ","raw":"', '"}}}}]},"alternate":null},{"type":"ExpressionStatement","start":15029,"end":15085,"expression":{"type":"AssignmentExpression","start":15029,"end":15084,"operator":"=","left":{"type":"Identifier","start":15029,"end":15046,"name":"allSuspiciousTags"},"right":{"type":"BinaryExpression","start":15049,"end":15084,"left":{"type":"BinaryExpression","start":15049,"end":15078,"left":{"type":"BinaryExpression","start":15049,"end":15072,"left":{"type":"Identifier","start":15049,"end":15066,"name":"allSuspiciousTags"},"operator":"+","right":{"type":"Literal","start":15069,"end":15072,"value":"<","raw":"'<'"}},"operator":"+","right":{"type":"Identifier","start":15075,"end":15078,"name":"tag"}},"operator":"+","right":{"type":"Literal","start":15081,"end":15084,"value":">","raw":"'>'"}}}},{"type":"ExpressionStatement","start":15103,"end":15117,"expression":{"type":"AssignmentExpression","start":15103,"end":15116,"operator":"=","left":{"type":"Identifier","start":15103,"end":15108,"name":"first"},"right":{"type":"Literal","start":15111,"end":15116,"value":false,"raw":"false"}}}]}}],"optional":false}},{"type":"ExpressionStatement","start":15148,"end":15226,"expression":{"type":"AssignmentExpression","start":15148,"end":15225,"operator":"=","left":{"type":"Identifier","start":15148,"end":15149,"name":"e"},"right":{"type":"BinaryExpression","start":15152,"end":15225,"left":{"type":"BinaryExpression","start":15152,"end":15185,"left":{"type":"Literal","start":15152,"end":15165,"value":"added tags ","raw":"'added tags '"},"operator":"+","right":{"type":"Identifier","start":15168,"end":15185,"name":"allSuspiciousTags"}},"operator":"+","right":{"type":"Literal","start":15188,"end":15225,"value":", which are not in original message","raw":"', which are not in original message'"}}}}]},"alternate":null}},{"type":"ReturnStatement","start":15247,"end":15256,"argument":{"type":"Identifier","start":15254,"end":15255,"name":"e"}}]}}},{"type":"MethodDefinition","start":15366,"end":16436,"static":false,"computed":false,"key":{"type":"Identifier","start":15366,"end":15381,"name":"checkTagRemoved"},"kind":"method","value":{"type":"FunctionExpression","start":15381,"end":16436,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":15384,"end":16436,"body":[{"type":"VariableDeclaration","start":15395,"end":15408,"declarations":[{"type":"VariableDeclarator","start":15399,"end":15407,"id":{"type":"Identifier","start":15399,"end":15400,"name":"w"},"init":{"type":"Literal","start":15403,"end":15407,"value":null,"raw":"null"}}],"kind":"let"},{"type":"VariableDeclaration","start":15418,"end":15444,"declarations":[{"type":"VariableDeclarator","start":15424,"end":15443,"id":{"type":"Identifier","start":15424,"end":15438,"name":"suspiciousTags"},"init":{"type":"ArrayExpression","start":15441,"end":15443,"elements":[]}}],"kind":"const"},{"type":"IfStatement","start":15454,"end":15775,"test":{"type":"MemberExpression","start":15458,"end":15476,"object":{"type":"ThisExpression","start":15458,"end":15462},"property":{"type":"Identifier","start":15463,"end":15476,"name":"sourceMessage"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":15478,"end":15775,"body":[{"type":"VariableDeclaration","start":15493,"end":15541,"declarations":[{"type":"VariableDeclarator","start":15499,"end":15540,"id":{"type":"Identifier","start":15499,"end":15509,"name":"sourceTags"},"init":{"type":"CallExpression","start":15512,"end":15540,"callee":{"type":"MemberExpression","start":15512,"end":15538,"object":{"type":"MemberExpression","start":15512,"end":15530,"object":{"type":"ThisExpression","start":15512,"end":15516},"property":{"type":"Identifier","start":15517,"end":15530,"name":"sourceMessage"},"computed":false,"optional":false},"property":{"type":"Identifier","start":15531,"end":15538,"name":"allTags"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":15555,"end":15585,"declarations":[{"type":"VariableDeclarator","start":15561,"end":15584,"id":{"type":"Identifier","start":15561,"end":15567,"name":"myTags"},"init":{"type":"CallExpression","start":15570,"end":15584,"callee":{"type":"MemberExpression","start":15570,"end":15582,"object":{"type":"ThisExpression","start":15570,"end":15574},"property":{"type":"Identifier","start":15575,"end":15582,"name":"allTags"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":15599,"end":15764,"expression":{"type":"CallExpression","start":15599,"end":15763,"callee":{"type":"MemberExpression","start":15599,"end":15617,"object":{"type":"Identifier","start":15599,"end":15609,"name":"sourceTags"},"property":{"type":"Identifier","start":15610,"end":15617,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":15618,"end":15762,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":15619,"end":15626,"name":"tagName"}],"body":{"type":"BlockStatement","start":15631,"end":15762,"body":[{"type":"IfStatement","start":15650,"end":15747,"test":{"type":"UnaryExpression","start":15654,"end":15674,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":15655,"end":15674,"callee":{"type":"MemberExpression","start":15655,"end":15665,"object":{"type":"Identifier","start":15655,"end":15661,"name":"myTags"},"property":{"type":"Identifier","start":15662,"end":15665,"name":"has"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":15666,"end":15673,"name":"tagName"}],"optional":false}},"consequent":{"type":"BlockStatement","start":15676,"end":15747,"body":[{"type":"ExpressionStatement","start":15699,"end":15728,"expression":{"type":"CallExpression","start":15699,"end":15727,"callee":{"type":"MemberExpression","start":15699,"end":15718,"object":{"type":"Identifier","start":15699,"end":15713,"name":"suspiciousTags"},"property":{"type":"Identifier","start":15714,"end":15718,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":15719,"end":15726,"name":"tagName"}],"optional":false}}]},"alternate":null}]}}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":15785,"end":16410,"test":{"type":"BinaryExpression","start":15789,"end":15816,"left":{"type":"MemberExpression","start":15789,"end":15810,"object":{"type":"Identifier","start":15789,"end":15803,"name":"suspiciousTags"},"property":{"type":"Identifier","start":15804,"end":15810,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":15815,"end":15816,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":15818,"end":15912,"body":[{"type":"ExpressionStatement","start":15833,"end":15901,"expression":{"type":"AssignmentExpression","start":15833,"end":15900,"operator":"=","left":{"type":"Identifier","start":15833,"end":15834,"name":"w"},"right":{"type":"BinaryExpression","start":15837,"end":15900,"left":{"type":"BinaryExpression","start":15837,"end":15872,"left":{"type":"Literal","start":15837,"end":15852,"value":"removed tag <","raw":"'removed tag <'"},"operator":"+","right":{"type":"MemberExpression","start":15855,"end":15872,"object":{"type":"Identifier","start":15855,"end":15869,"name":"suspiciousTags"},"property":{"type":"Literal","start":15870,"end":15871,"value":0,"raw":"0"},"computed":true,"optional":false}},"operator":"+","right":{"type":"Literal","start":15875,"end":15900,"value":"> from original message","raw":"'> from original message'"}}}}]},"alternate":{"type":"IfStatement","start":15927,"end":16410,"test":{"type":"BinaryExpression","start":15931,"end":15956,"left":{"type":"MemberExpression","start":15931,"end":15952,"object":{"type":"Identifier","start":15931,"end":15945,"name":"suspiciousTags"},"property":{"type":"Identifier","start":15946,"end":15952,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":15955,"end":15956,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":15958,"end":16410,"body":[{"type":"VariableDeclaration","start":15973,"end":16000,"declarations":[{"type":"VariableDeclarator","start":15977,"end":15999,"id":{"type":"Identifier","start":15977,"end":15994,"name":"allSuspiciousTags"},"init":{"type":"Literal","start":15997,"end":15999,"value":"","raw":"''"}}],"kind":"let"},{"type":"VariableDeclaration","start":16014,"end":16031,"declarations":[{"type":"VariableDeclarator","start":16018,"end":16030,"id":{"type":"Identifier","start":16018,"end":16023,"name":"first"},"init":{"type":"Literal","start":16026,"end":16030,"value":true,"raw":"true"}}],"kind":"let"},{"type":"ExpressionStatement","start":16045,"end":16318,"expression":{"type":"CallExpression","start":16045,"end":16317,"callee":{"type":"MemberExpression","start":16045,"end":16067,"object":{"type":"Identifier","start":16045,"end":16059,"name":"suspiciousTags"},"property":{"type":"Identifier","start":16060,"end":16067,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":16068,"end":16316,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16069,"end":16072,"name":"tag"}],"body":{"type":"BlockStatement","start":16077,"end":16316,"body":[{"type":"IfStatement","start":16096,"end":16195,"test":{"type":"UnaryExpression","start":16100,"end":16106,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":16101,"end":16106,"name":"first"}},"consequent":{"type":"BlockStatement","start":16108,"end":16195,"body":[{"type":"ExpressionStatement","start":16131,"end":16176,"expression":{"type":"AssignmentExpression","start":16131,"end":16175,"operator":"=","left":{"type":"Identifier","start":16131,"end":16148,"name":"allSuspiciousTags"},"right":{"type":"BinaryExpression","start":16151,"end":16175,"left":{"type":"Identifier","start":16151,"end":16168,"name":"allSuspiciousTags"},"operator":"+","right":{"type":"Literal","start":16171,"end":16175,"value":", ","raw":"', '"}}}}]},"alternate":null},{"type":"ExpressionStatement","start":16213,"end":16269,"expression":{"type":"AssignmentExpression","start":16213,"end":16268,"operator":"=","left":{"type":"Identifier","start":16213,"end":16230,"name":"allSuspiciousTags"},"right":{"type":"BinaryExpression","start":16233,"end":16268,"left":{"type":"BinaryExpression","start":16233,"end":16262,"left":{"type":"BinaryExpression","start":16233,"end":16256,"left":{"type":"Identifier","start":16233,"end":16250,"name":"allSuspiciousTags"},"operator":"+","right":{"type":"Literal","start":16253,"end":16256,"value":"<","raw":"'<'"}},"operator":"+","right":{"type":"Identifier","start":16259,"end":16262,"name":"tag"}},"operator":"+","right":{"type":"Literal","start":16265,"end":16268,"value":">","raw":"'>'"}}}},{"type":"ExpressionStatement","start":16287,"end":16301,"expression":{"type":"AssignmentExpression","start":16287,"end":16300,"operator":"=","left":{"type":"Identifier","start":16287,"end":16292,"name":"first"},"right":{"type":"Literal","start":16295,"end":16300,"value":false,"raw":"false"}}}]}}],"optional":false}},{"type":"ExpressionStatement","start":16332,"end":16399,"expression":{"type":"AssignmentExpression","start":16332,"end":16398,"operator":"=","left":{"type":"Identifier","start":16332,"end":16333,"name":"w"},"right":{"type":"BinaryExpression","start":16336,"end":16398,"left":{"type":"BinaryExpression","start":16336,"end":16371,"left":{"type":"Literal","start":16336,"end":16351,"value":"removed tags ","raw":"'removed tags '"},"operator":"+","right":{"type":"Identifier","start":16354,"end":16371,"name":"allSuspiciousTags"}},"operator":"+","right":{"type":"Literal","start":16374,"end":16398,"value":" from original message","raw":"' from original message'"}}}}]},"alternate":null}},{"type":"ReturnStatement","start":16420,"end":16429,"argument":{"type":"Identifier","start":16427,"end":16428,"name":"w"}}]}}},{"type":"MethodDefinition","start":16507,"end":16856,"static":false,"computed":false,"key":{"type":"Identifier","start":16507,"end":16514,"name":"allTags"},"kind":"method","value":{"type":"FunctionExpression","start":16514,"end":16856,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":16517,"end":16856,"body":[{"type":"VariableDeclaration","start":16528,"end":16553,"declarations":[{"type":"VariableDeclarator","start":16534,"end":16552,"id":{"type":"Identifier","start":16534,"end":16540,"name":"result"},"init":{"type":"NewExpression","start":16543,"end":16552,"callee":{"type":"Identifier","start":16547,"end":16550,"name":"Set"},"arguments":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":16563,"end":16825,"expression":{"type":"CallExpression","start":16563,"end":16824,"callee":{"type":"MemberExpression","start":16563,"end":16583,"object":{"type":"CallExpression","start":16563,"end":16575,"callee":{"type":"MemberExpression","start":16563,"end":16573,"object":{"type":"ThisExpression","start":16563,"end":16567},"property":{"type":"Identifier","start":16568,"end":16573,"name":"parts"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":16576,"end":16583,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":16584,"end":16823,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16585,"end":16589,"name":"part"}],"body":{"type":"BlockStatement","start":16594,"end":16823,"body":[{"type":"IfStatement","start":16609,"end":16812,"test":{"type":"LogicalExpression","start":16613,"end":16707,"left":{"type":"BinaryExpression","start":16613,"end":16658,"left":{"type":"MemberExpression","start":16613,"end":16622,"object":{"type":"Identifier","start":16613,"end":16617,"name":"part"},"property":{"type":"Identifier","start":16618,"end":16622,"name":"type"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":16627,"end":16658,"object":{"type":"Identifier","start":16627,"end":16648,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":16649,"end":16658,"name":"START_TAG"},"computed":false,"optional":false}},"operator":"||","right":{"type":"BinaryExpression","start":16662,"end":16707,"left":{"type":"MemberExpression","start":16662,"end":16671,"object":{"type":"Identifier","start":16662,"end":16666,"name":"part"},"property":{"type":"Identifier","start":16667,"end":16671,"name":"type"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":16676,"end":16707,"object":{"type":"Identifier","start":16676,"end":16697,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":16698,"end":16707,"name":"EMPTY_TAG"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":16709,"end":16812,"body":[{"type":"VariableDeclaration","start":16728,"end":16759,"declarations":[{"type":"VariableDeclarator","start":16734,"end":16758,"id":{"type":"Identifier","start":16734,"end":16741,"name":"tagName"},"init":{"type":"CallExpression","start":16744,"end":16758,"callee":{"type":"MemberExpression","start":16744,"end":16756,"object":{"type":"Identifier","start":16744,"end":16748,"name":"part"},"property":{"type":"Identifier","start":16749,"end":16756,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":16777,"end":16797,"expression":{"type":"CallExpression","start":16777,"end":16796,"callee":{"type":"MemberExpression","start":16777,"end":16787,"object":{"type":"Identifier","start":16777,"end":16783,"name":"result"},"property":{"type":"Identifier","start":16784,"end":16787,"name":"add"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16788,"end":16795,"name":"tagName"}],"optional":false}}]},"alternate":null}]}}],"optional":false}},{"type":"ReturnStatement","start":16835,"end":16849,"argument":{"type":"Identifier","start":16842,"end":16848,"name":"result"}}]}}},{"type":"MethodDefinition","start":16862,"end":16907,"static":false,"computed":false,"key":{"type":"Identifier","start":16862,"end":16867,"name":"parts"},"kind":"method","value":{"type":"FunctionExpression","start":16867,"end":16907,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":16870,"end":16907,"body":[{"type":"ReturnStatement","start":16881,"end":16900,"argument":{"type":"MemberExpression","start":16888,"end":16899,"object":{"type":"ThisExpression","start":16888,"end":16892},"property":{"type":"Identifier","start":16893,"end":16899,"name":"_parts"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":16913,"end":17015,"static":false,"computed":false,"key":{"type":"Identifier","start":16913,"end":16933,"name":"setXmlRepresentation"},"kind":"method","value":{"type":"FunctionExpression","start":16933,"end":17015,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16934,"end":16951,"name":"xmlRepresentation"}],"body":{"type":"BlockStatement","start":16953,"end":17015,"body":[{"type":"ExpressionStatement","start":16964,"end":17008,"expression":{"type":"AssignmentExpression","start":16964,"end":17007,"operator":"=","left":{"type":"MemberExpression","start":16964,"end":16987,"object":{"type":"ThisExpression","start":16964,"end":16968},"property":{"type":"Identifier","start":16969,"end":16987,"name":"_xmlRepresentation"},"computed":false,"optional":false},"right":{"type":"Identifier","start":16990,"end":17007,"name":"xmlRepresentation"}}}]}}},{"type":"MethodDefinition","start":17021,"end":17103,"static":false,"computed":false,"key":{"type":"Identifier","start":17021,"end":17028,"name":"addText"},"kind":"method","value":{"type":"FunctionExpression","start":17028,"end":17103,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17029,"end":17033,"name":"text"}],"body":{"type":"BlockStatement","start":17035,"end":17103,"body":[{"type":"ExpressionStatement","start":17046,"end":17096,"expression":{"type":"CallExpression","start":17046,"end":17095,"callee":{"type":"MemberExpression","start":17046,"end":17062,"object":{"type":"MemberExpression","start":17046,"end":17057,"object":{"type":"ThisExpression","start":17046,"end":17050},"property":{"type":"Identifier","start":17051,"end":17057,"name":"_parts"},"computed":false,"optional":false},"property":{"type":"Identifier","start":17058,"end":17062,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":17063,"end":17094,"callee":{"type":"Identifier","start":17067,"end":17088,"name":"ParsedMessagePartText"},"arguments":[{"type":"Identifier","start":17089,"end":17093,"name":"text"}]}],"optional":false}}]}}},{"type":"MethodDefinition","start":17109,"end":17219,"static":false,"computed":false,"key":{"type":"Identifier","start":17109,"end":17123,"name":"addPlaceholder"},"kind":"method","value":{"type":"FunctionExpression","start":17123,"end":17219,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17124,"end":17129,"name":"index"},{"type":"Identifier","start":17131,"end":17135,"name":"disp"}],"body":{"type":"BlockStatement","start":17137,"end":17219,"body":[{"type":"ExpressionStatement","start":17148,"end":17212,"expression":{"type":"CallExpression","start":17148,"end":17211,"callee":{"type":"MemberExpression","start":17148,"end":17164,"object":{"type":"MemberExpression","start":17148,"end":17159,"object":{"type":"ThisExpression","start":17148,"end":17152},"property":{"type":"Identifier","start":17153,"end":17159,"name":"_parts"},"computed":false,"optional":false},"property":{"type":"Identifier","start":17160,"end":17164,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":17165,"end":17210,"callee":{"type":"Identifier","start":17169,"end":17197,"name":"ParsedMessagePartPlaceholder"},"arguments":[{"type":"Identifier","start":17198,"end":17203,"name":"index"},{"type":"Identifier","start":17205,"end":17209,"name":"disp"}]}],"optional":false}}]}}},{"type":"MethodDefinition","start":17225,"end":17343,"static":false,"computed":false,"key":{"type":"Identifier","start":17225,"end":17236,"name":"addStartTag"},"kind":"method","value":{"type":"FunctionExpression","start":17236,"end":17343,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17237,"end":17244,"name":"tagname"},{"type":"Identifier","start":17246,"end":17255,"name":"idcounter"}],"body":{"type":"BlockStatement","start":17257,"end":17343,"body":[{"type":"ExpressionStatement","start":17268,"end":17336,"expression":{"type":"CallExpression","start":17268,"end":17335,"callee":{"type":"MemberExpression","start":17268,"end":17284,"object":{"type":"MemberExpression","start":17268,"end":17279,"object":{"type":"ThisExpression","start":17268,"end":17272},"property":{"type":"Identifier","start":17273,"end":17279,"name":"_parts"},"computed":false,"optional":false},"property":{"type":"Identifier","start":17280,"end":17284,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":17285,"end":17334,"callee":{"type":"Identifier","start":17289,"end":17314,"name":"ParsedMessagePartStartTag"},"arguments":[{"type":"Identifier","start":17315,"end":17322,"name":"tagname"},{"type":"Identifier","start":17324,"end":17333,"name":"idcounter"}]}],"optional":false}}]}}},{"type":"MethodDefinition","start":17349,"end":17774,"static":false,"computed":false,"key":{"type":"Identifier","start":17349,"end":17358,"name":"addEndTag"},"kind":"method","value":{"type":"FunctionExpression","start":17358,"end":17774,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17359,"end":17366,"name":"tagname"}],"body":{"type":"BlockStatement","start":17368,"end":17774,"body":[{"type":"VariableDeclaration","start":17412,"end":17456,"declarations":[{"type":"VariableDeclarator","start":17418,"end":17455,"id":{"type":"Identifier","start":17418,"end":17425,"name":"openTag"},"init":{"type":"CallExpression","start":17428,"end":17455,"callee":{"type":"MemberExpression","start":17428,"end":17453,"object":{"type":"ThisExpression","start":17428,"end":17432},"property":{"type":"Identifier","start":17433,"end":17453,"name":"calculateOpenTagName"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":17466,"end":17702,"test":{"type":"LogicalExpression","start":17470,"end":17501,"left":{"type":"UnaryExpression","start":17470,"end":17478,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":17471,"end":17478,"name":"openTag"}},"operator":"||","right":{"type":"BinaryExpression","start":17482,"end":17501,"left":{"type":"Identifier","start":17482,"end":17489,"name":"openTag"},"operator":"!==","right":{"type":"Identifier","start":17494,"end":17501,"name":"tagname"}}},"consequent":{"type":"BlockStatement","start":17503,"end":17702,"body":[{"type":"ThrowStatement","start":17556,"end":17691,"argument":{"type":"NewExpression","start":17562,"end":17690,"callee":{"type":"Identifier","start":17566,"end":17571,"name":"Error"},"arguments":[{"type":"CallExpression","start":17572,"end":17689,"callee":{"type":"Identifier","start":17572,"end":17578,"name":"format"},"arguments":[{"type":"Literal","start":17579,"end":17647,"value":"unexpected close tag %s (currently open is %s, native xml is \"%s\")","raw":"'unexpected close tag %s (currently open is %s, native xml is \"%s\")'"},{"type":"Identifier","start":17649,"end":17656,"name":"tagname"},{"type":"Identifier","start":17658,"end":17665,"name":"openTag"},{"type":"CallExpression","start":17667,"end":17688,"callee":{"type":"MemberExpression","start":17667,"end":17686,"object":{"type":"ThisExpression","start":17667,"end":17671},"property":{"type":"Identifier","start":17672,"end":17686,"name":"asNativeString"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}]}}]},"alternate":null},{"type":"ExpressionStatement","start":17712,"end":17767,"expression":{"type":"CallExpression","start":17712,"end":17766,"callee":{"type":"MemberExpression","start":17712,"end":17728,"object":{"type":"MemberExpression","start":17712,"end":17723,"object":{"type":"ThisExpression","start":17712,"end":17716},"property":{"type":"Identifier","start":17717,"end":17723,"name":"_parts"},"computed":false,"optional":false},"property":{"type":"Identifier","start":17724,"end":17728,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":17729,"end":17765,"callee":{"type":"Identifier","start":17733,"end":17756,"name":"ParsedMessagePartEndTag"},"arguments":[{"type":"Identifier","start":17757,"end":17764,"name":"tagname"}]}],"optional":false}}]}}},{"type":"MethodDefinition","start":17780,"end":17898,"static":false,"computed":false,"key":{"type":"Identifier","start":17780,"end":17791,"name":"addEmptyTag"},"kind":"method","value":{"type":"FunctionExpression","start":17791,"end":17898,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17792,"end":17799,"name":"tagname"},{"type":"Identifier","start":17801,"end":17810,"name":"idcounter"}],"body":{"type":"BlockStatement","start":17812,"end":17898,"body":[{"type":"ExpressionStatement","start":17823,"end":17891,"expression":{"type":"CallExpression","start":17823,"end":17890,"callee":{"type":"MemberExpression","start":17823,"end":17839,"object":{"type":"MemberExpression","start":17823,"end":17834,"object":{"type":"ThisExpression","start":17823,"end":17827},"property":{"type":"Identifier","start":17828,"end":17834,"name":"_parts"},"computed":false,"optional":false},"property":{"type":"Identifier","start":17835,"end":17839,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":17840,"end":17889,"callee":{"type":"Identifier","start":17844,"end":17869,"name":"ParsedMessagePartEmptyTag"},"arguments":[{"type":"Identifier","start":17870,"end":17877,"name":"tagname"},{"type":"Identifier","start":17879,"end":17888,"name":"idcounter"}]}],"optional":false}}]}}},{"type":"MethodDefinition","start":17904,"end":18018,"static":false,"computed":false,"key":{"type":"Identifier","start":17904,"end":17920,"name":"addICUMessageRef"},"kind":"method","value":{"type":"FunctionExpression","start":17920,"end":18018,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":17921,"end":17926,"name":"index"},{"type":"Identifier","start":17928,"end":17932,"name":"disp"}],"body":{"type":"BlockStatement","start":17934,"end":18018,"body":[{"type":"ExpressionStatement","start":17945,"end":18011,"expression":{"type":"CallExpression","start":17945,"end":18010,"callee":{"type":"MemberExpression","start":17945,"end":17961,"object":{"type":"MemberExpression","start":17945,"end":17956,"object":{"type":"ThisExpression","start":17945,"end":17949},"property":{"type":"Identifier","start":17950,"end":17956,"name":"_parts"},"computed":false,"optional":false},"property":{"type":"Identifier","start":17957,"end":17961,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":17962,"end":18009,"callee":{"type":"Identifier","start":17966,"end":17996,"name":"ParsedMessagePartICUMessageRef"},"arguments":[{"type":"Identifier","start":17997,"end":18002,"name":"index"},{"type":"Identifier","start":18004,"end":18008,"name":"disp"}]}],"optional":false}}]}}},{"type":"MethodDefinition","start":18024,"end":18132,"static":false,"computed":false,"key":{"type":"Identifier","start":18024,"end":18037,"name":"addICUMessage"},"kind":"method","value":{"type":"FunctionExpression","start":18037,"end":18132,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18038,"end":18042,"name":"text"}],"body":{"type":"BlockStatement","start":18044,"end":18132,"body":[{"type":"ExpressionStatement","start":18055,"end":18125,"expression":{"type":"CallExpression","start":18055,"end":18124,"callee":{"type":"MemberExpression","start":18055,"end":18071,"object":{"type":"MemberExpression","start":18055,"end":18066,"object":{"type":"ThisExpression","start":18055,"end":18059},"property":{"type":"Identifier","start":18060,"end":18066,"name":"_parts"},"computed":false,"optional":false},"property":{"type":"Identifier","start":18067,"end":18071,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":18072,"end":18123,"callee":{"type":"Identifier","start":18076,"end":18103,"name":"ParsedMessagePartICUMessage"},"arguments":[{"type":"Identifier","start":18104,"end":18108,"name":"text"},{"type":"MemberExpression","start":18110,"end":18122,"object":{"type":"ThisExpression","start":18110,"end":18114},"property":{"type":"Identifier","start":18115,"end":18122,"name":"_parser"},"computed":false,"optional":false}]}],"optional":false}}]}}},{"type":"MethodDefinition","start":18289,"end":19248,"static":false,"computed":false,"key":{"type":"Identifier","start":18289,"end":18309,"name":"calculateOpenTagName"},"kind":"method","value":{"type":"FunctionExpression","start":18309,"end":19248,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":18312,"end":19248,"body":[{"type":"VariableDeclaration","start":18323,"end":18343,"declarations":[{"type":"VariableDeclarator","start":18329,"end":18342,"id":{"type":"Identifier","start":18329,"end":18337,"name":"openTags"},"init":{"type":"ArrayExpression","start":18340,"end":18342,"elements":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":18353,"end":19163,"expression":{"type":"CallExpression","start":18353,"end":19162,"callee":{"type":"MemberExpression","start":18353,"end":18372,"object":{"type":"MemberExpression","start":18353,"end":18364,"object":{"type":"ThisExpression","start":18353,"end":18357},"property":{"type":"Identifier","start":18358,"end":18364,"name":"_parts"},"computed":false,"optional":false},"property":{"type":"Identifier","start":18365,"end":18372,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":18373,"end":19161,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":18374,"end":18378,"name":"part"}],"body":{"type":"BlockStatement","start":18383,"end":19161,"body":[{"type":"SwitchStatement","start":18398,"end":19150,"discriminant":{"type":"MemberExpression","start":18406,"end":18415,"object":{"type":"Identifier","start":18406,"end":18410,"name":"part"},"property":{"type":"Identifier","start":18411,"end":18415,"name":"type"},"computed":false,"optional":false},"cases":[{"type":"SwitchCase","start":18436,"end":18553,"consequent":[{"type":"ExpressionStatement","start":18495,"end":18525,"expression":{"type":"CallExpression","start":18495,"end":18524,"callee":{"type":"MemberExpression","start":18495,"end":18508,"object":{"type":"Identifier","start":18495,"end":18503,"name":"openTags"},"property":{"type":"Identifier","start":18504,"end":18508,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":18509,"end":18523,"callee":{"type":"MemberExpression","start":18509,"end":18521,"object":{"type":"Identifier","start":18509,"end":18513,"name":"part"},"property":{"type":"Identifier","start":18514,"end":18521,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"BreakStatement","start":18547,"end":18553,"label":null}],"test":{"type":"MemberExpression","start":18441,"end":18472,"object":{"type":"Identifier","start":18441,"end":18462,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":18463,"end":18472,"name":"START_TAG"},"computed":false,"optional":false}},{"type":"SwitchCase","start":18571,"end":19135,"consequent":[{"type":"VariableDeclaration","start":18628,"end":18659,"declarations":[{"type":"VariableDeclarator","start":18634,"end":18658,"id":{"type":"Identifier","start":18634,"end":18641,"name":"tagName"},"init":{"type":"CallExpression","start":18644,"end":18658,"callee":{"type":"MemberExpression","start":18644,"end":18656,"object":{"type":"Identifier","start":18644,"end":18648,"name":"part"},"property":{"type":"Identifier","start":18649,"end":18656,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":18681,"end":19098,"test":{"type":"LogicalExpression","start":18685,"end":18751,"left":{"type":"BinaryExpression","start":18685,"end":18706,"left":{"type":"MemberExpression","start":18685,"end":18700,"object":{"type":"Identifier","start":18685,"end":18693,"name":"openTags"},"property":{"type":"Identifier","start":18694,"end":18700,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":18705,"end":18706,"value":0,"raw":"0"}},"operator":"||","right":{"type":"BinaryExpression","start":18710,"end":18751,"left":{"type":"MemberExpression","start":18710,"end":18739,"object":{"type":"Identifier","start":18710,"end":18718,"name":"openTags"},"property":{"type":"BinaryExpression","start":18719,"end":18738,"left":{"type":"MemberExpression","start":18719,"end":18734,"object":{"type":"Identifier","start":18719,"end":18727,"name":"openTags"},"property":{"type":"Identifier","start":18728,"end":18734,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":18737,"end":18738,"value":1,"raw":"1"}},"computed":true,"optional":false},"operator":"!==","right":{"type":"Identifier","start":18744,"end":18751,"name":"tagName"}}},"consequent":{"type":"BlockStatement","start":18753,"end":19098,"body":[{"type":"VariableDeclaration","start":18830,"end":18914,"declarations":[{"type":"VariableDeclarator","start":18836,"end":18913,"id":{"type":"Identifier","start":18836,"end":18843,"name":"openTag"},"init":{"type":"ConditionalExpression","start":18846,"end":18913,"test":{"type":"BinaryExpression","start":18847,"end":18868,"left":{"type":"MemberExpression","start":18847,"end":18862,"object":{"type":"Identifier","start":18847,"end":18855,"name":"openTags"},"property":{"type":"Identifier","start":18856,"end":18862,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":18867,"end":18868,"value":0,"raw":"0"}},"consequent":{"type":"Literal","start":18872,"end":18881,"value":"nothing","raw":"'nothing'"},"alternate":{"type":"MemberExpression","start":18884,"end":18913,"object":{"type":"Identifier","start":18884,"end":18892,"name":"openTags"},"property":{"type":"BinaryExpression","start":18893,"end":18912,"left":{"type":"MemberExpression","start":18893,"end":18908,"object":{"type":"Identifier","start":18893,"end":18901,"name":"openTags"},"property":{"type":"Identifier","start":18902,"end":18908,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":18911,"end":18912,"value":1,"raw":"1"}},"computed":true,"optional":false}}}],"kind":"const"},{"type":"ThrowStatement","start":18940,"end":19075,"argument":{"type":"NewExpression","start":18946,"end":19074,"callee":{"type":"Identifier","start":18950,"end":18955,"name":"Error"},"arguments":[{"type":"CallExpression","start":18956,"end":19073,"callee":{"type":"Identifier","start":18956,"end":18962,"name":"format"},"arguments":[{"type":"Literal","start":18963,"end":19031,"value":"unexpected close tag %s (currently open is %s, native xml is \"%s\")","raw":"'unexpected close tag %s (currently open is %s, native xml is \"%s\")'"},{"type":"Identifier","start":19033,"end":19040,"name":"tagName"},{"type":"Identifier","start":19042,"end":19049,"name":"openTag"},{"type":"CallExpression","start":19051,"end":19072,"callee":{"type":"MemberExpression","start":19051,"end":19070,"object":{"type":"ThisExpression","start":19051,"end":19055},"property":{"type":"Identifier","start":19056,"end":19070,"name":"asNativeString"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}]}}]},"alternate":null},{"type":"ExpressionStatement","start":19120,"end":19135,"expression":{"type":"CallExpression","start":19120,"end":19134,"callee":{"type":"MemberExpression","start":19120,"end":19132,"object":{"type":"Identifier","start":19120,"end":19128,"name":"openTags"},"property":{"type":"Identifier","start":19129,"end":19132,"name":"pop"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"test":{"type":"MemberExpression","start":18576,"end":18605,"object":{"type":"Identifier","start":18576,"end":18597,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":18598,"end":18605,"name":"END_TAG"},"computed":false,"optional":false}}]}]}}],"optional":false}},{"type":"ReturnStatement","start":19173,"end":19241,"argument":{"type":"ConditionalExpression","start":19180,"end":19240,"test":{"type":"BinaryExpression","start":19180,"end":19201,"left":{"type":"MemberExpression","start":19180,"end":19195,"object":{"type":"Identifier","start":19180,"end":19188,"name":"openTags"},"property":{"type":"Identifier","start":19189,"end":19195,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":19200,"end":19201,"value":0,"raw":"0"}},"consequent":{"type":"Literal","start":19204,"end":19208,"value":null,"raw":"null"},"alternate":{"type":"MemberExpression","start":19211,"end":19240,"object":{"type":"Identifier","start":19211,"end":19219,"name":"openTags"},"property":{"type":"BinaryExpression","start":19220,"end":19239,"left":{"type":"MemberExpression","start":19220,"end":19235,"object":{"type":"Identifier","start":19220,"end":19228,"name":"openTags"},"property":{"type":"Identifier","start":19229,"end":19235,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":19238,"end":19239,"value":1,"raw":"1"}},"computed":true,"optional":false}}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":19253,"end":66787}]},"code":"import { ParsedMessagePartType } from './parsed-message-part';\r\nimport { ParsedMessagePartText } from './parsed-message-part-text';\r\nimport { ParsedMessagePartPlaceholder } from './parsed-message-part-placeholder';\r\nimport { ParsedMessagePartStartTag } from './parsed-message-part-start-tag';\r\nimport { ParsedMessagePartEndTag } from './parsed-message-part-end-tag';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { format } from 'util';\r\nimport { isNullOrUndefined } from 'is-what';\r\nimport { ParsedMessagePartICUMessage } from './parsed-message-part-icu-message';\r\nimport { ParsedMessagePartICUMessageRef } from './parsed-message-part-icu-message-ref';\r\nimport { ParsedMessagePartEmptyTag } from './parsed-message-part-empty-tag';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message text read from a translation file.\r\n * Can contain placeholders, tags, text.\r\n * This class is a representation independent of the concrete format.\r\n */\r\nexport class ParsedMessage {\r\n    constructor(parser, sourceMessage) {\r\n        this._parser = parser;\r\n        this.sourceMessage = sourceMessage;\r\n        this._parts = [];\r\n    }\r\n    /**\r\n     * Get the parser (for tests only, not part of API)\r\n     * @return parser\r\n     */\r\n    getParser() {\r\n        return this._parser;\r\n    }\r\n    /**\r\n     * Create a new normalized message as a translation of this one.\r\n     * @param normalizedString the translation in normalized form.\r\n     * If the message is an ICUMessage (getICUMessage returns a value), use translateICUMessage instead.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is an ICU message.\r\n     */\r\n    translate(normalizedString) {\r\n        if (isNullOrUndefined(this.getICUMessage())) {\r\n            return this._parser.parseNormalizedString(normalizedString, this);\r\n        }\r\n        else {\r\n            throw new Error(format('cannot translate ICU message with simple string, use translateICUMessage() instead (\"%s\", \"%s\")', normalizedString, this.asNativeString()));\r\n        }\r\n    }\r\n    /**\r\n     * Create a new normalized icu message as a translation of this one.\r\n     * @param icuTranslation the translation, this is the translation of the ICU message,\r\n     * which is not a string, but a collections of the translations of the different categories.\r\n     * The message must be an ICUMessage (getICUMessage returns a value)\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is not an ICU message.\r\n     */\r\n    translateICUMessage(icuTranslation) {\r\n        const icuMessage = this.getICUMessage();\r\n        if (isNullOrUndefined(icuMessage)) {\r\n            throw new Error(format('this is not an ICU message, use translate() instead (\"%s\", \"%s\")', icuTranslation, this.asNativeString()));\r\n        }\r\n        else {\r\n            const translatedICUMessage = icuMessage.translate(icuTranslation);\r\n            return this._parser.parseICUMessage(translatedICUMessage.asNativeString(), this);\r\n        }\r\n    }\r\n    /**\r\n     * Create a new normalized message from a native xml string as a translation of this one.\r\n     * @param nativeString xml string in the format of the underlying file format.\r\n     * Throws an error if native string is not acceptable.\r\n     */\r\n    translateNativeString(nativeString) {\r\n        return this._parser.createNormalizedMessageFromXMLString(nativeString, this);\r\n    }\r\n    /**\r\n     * normalized message as string.\r\n     * @param displayFormat optional way to determine the exact syntax.\r\n     * Allowed formats are defined as constants NORMALIZATION_FORMAT...\r\n     */\r\n    asDisplayString(displayFormat) {\r\n        return this._parts.map((part) => part.asDisplayString(displayFormat)).join('');\r\n    }\r\n    /**\r\n     * Returns the message content as format dependent native string.\r\n     * Includes all format specific markup like <ph id=\"INTERPOLATION\" ../> ..\r\n     */\r\n    asNativeString() {\r\n        if (isNullOrUndefined(this.getICUMessage())) {\r\n            return DOMUtilities.getXMLContent(this._xmlRepresentation);\r\n        }\r\n        else {\r\n            return this.getICUMessage().asNativeString();\r\n        }\r\n    }\r\n    /**\r\n     * Validate the message.\r\n     * @return null, if ok, error object otherwise.\r\n     */\r\n    validate() {\r\n        let hasErrors = false;\r\n        const errors = {};\r\n        let e;\r\n        e = this.checkPlaceholderAdded();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.placeholderAdded = e;\r\n            hasErrors = true;\r\n        }\r\n        e = this.checkICUMessageRefRemoved();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.icuMessageRefRemoved = e;\r\n            hasErrors = true;\r\n        }\r\n        e = this.checkICUMessageRefAdded();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.icuMessageRefAdded = e;\r\n            hasErrors = true;\r\n        }\r\n        return hasErrors ? errors : null;\r\n    }\r\n    /**\r\n     * Validate the message, check for warnings only.\r\n     * A warning shows, that the message is acceptable, but misses something.\r\n     * E.g. if you remove a placeholder or a special tag from the original message, this generates a warning.\r\n     * @return null, if no warning, warnings as error object otherwise.\r\n     */\r\n    validateWarnings() {\r\n        let hasWarnings = false;\r\n        const warnings = {};\r\n        let w;\r\n        w = this.checkPlaceholderRemoved();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.placeholderRemoved = w;\r\n            hasWarnings = true;\r\n        }\r\n        w = this.checkTagRemoved();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.tagRemoved = w;\r\n            hasWarnings = true;\r\n        }\r\n        w = this.checkTagAdded();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.tagAdded = w;\r\n            hasWarnings = true;\r\n        }\r\n        return hasWarnings ? warnings : null;\r\n    }\r\n    /**\r\n     * Test wether this message is an ICU message.\r\n     * @return true, if it is an ICU message.\r\n     */\r\n    isICUMessage() {\r\n        return this._parts.length === 1 && this._parts[0].type === ParsedMessagePartType.ICU_MESSAGE;\r\n    }\r\n    /**\r\n     * Test wether this message contains an ICU message reference.\r\n     * ICU message references are something like <x ID=\"ICU\"../>.\r\n     * @return true, if there is an ICU message reference in the message.\r\n     */\r\n    containsICUMessageRef() {\r\n        return this._parts.findIndex(part => part.type === ParsedMessagePartType.ICU_MESSAGE_REF) >= 0;\r\n    }\r\n    /**\r\n     * If this message is an ICU message, returns its structure.\r\n     * Otherwise this method returns null.\r\n     * @return ICUMessage or null.\r\n     */\r\n    getICUMessage() {\r\n        if (this._parts.length === 1 && this._parts[0].type === ParsedMessagePartType.ICU_MESSAGE) {\r\n            const icuPart = this._parts[0];\r\n            return icuPart.getICUMessage();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Check for added placeholder.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    checkPlaceholderAdded() {\r\n        let e = null;\r\n        const suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            const sourcePlaceholders = this.sourceMessage.allPlaceholders();\r\n            const myPlaceholders = this.allPlaceholders();\r\n            myPlaceholders.forEach((index) => {\r\n                if (!sourcePlaceholders.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'added placeholder ' + suspiciousIndexes[0] + ', which is not in original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            let allSuspiciousIndexes = '';\r\n            let first = true;\r\n            suspiciousIndexes.forEach((index) => {\r\n                if (!first) {\r\n                    allSuspiciousIndexes = allSuspiciousIndexes + ', ';\r\n                }\r\n                allSuspiciousIndexes = allSuspiciousIndexes + index;\r\n                first = false;\r\n            });\r\n            e = 'added placeholders ' + allSuspiciousIndexes + ', which are not in original message';\r\n        }\r\n        return e;\r\n    }\r\n    /**\r\n     * Check for removed placeholder.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    checkPlaceholderRemoved() {\r\n        let w = null;\r\n        const suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            const sourcePlaceholders = this.sourceMessage.allPlaceholders();\r\n            const myPlaceholders = this.allPlaceholders();\r\n            sourcePlaceholders.forEach((index) => {\r\n                if (!myPlaceholders.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            w = 'removed placeholder ' + suspiciousIndexes[0] + ' from original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            let allSuspiciousIndexes = '';\r\n            let first = true;\r\n            suspiciousIndexes.forEach((index) => {\r\n                if (!first) {\r\n                    allSuspiciousIndexes = allSuspiciousIndexes + ', ';\r\n                }\r\n                allSuspiciousIndexes = allSuspiciousIndexes + index;\r\n                first = false;\r\n            });\r\n            w = 'removed placeholders ' + allSuspiciousIndexes + ' from original message';\r\n        }\r\n        return w;\r\n    }\r\n    /**\r\n     * Check for added ICU Message Refs.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    checkICUMessageRefAdded() {\r\n        let e = null;\r\n        const suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            const sourceICURefs = this.sourceMessage.allICUMessageRefs();\r\n            const myICURefs = this.allICUMessageRefs();\r\n            myICURefs.forEach((index) => {\r\n                if (!sourceICURefs.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'added ICU message reference ' + suspiciousIndexes[0] + ', which is not in original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            let allSuspiciousIndexes = '';\r\n            let first = true;\r\n            suspiciousIndexes.forEach((index) => {\r\n                if (!first) {\r\n                    allSuspiciousIndexes = allSuspiciousIndexes + ', ';\r\n                }\r\n                allSuspiciousIndexes = allSuspiciousIndexes + index;\r\n                first = false;\r\n            });\r\n            e = 'added ICU message references ' + allSuspiciousIndexes + ', which are not in original message';\r\n        }\r\n        return e;\r\n    }\r\n    /**\r\n     * Check for removed ICU Message Refs.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    checkICUMessageRefRemoved() {\r\n        let e = null;\r\n        const suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            const sourceICURefs = this.sourceMessage.allICUMessageRefs();\r\n            const myICURefs = this.allICUMessageRefs();\r\n            sourceICURefs.forEach((index) => {\r\n                if (!myICURefs.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'removed ICU message reference ' + suspiciousIndexes[0] + ' from original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            let allSuspiciousIndexes = '';\r\n            let first = true;\r\n            suspiciousIndexes.forEach((index) => {\r\n                if (!first) {\r\n                    allSuspiciousIndexes = allSuspiciousIndexes + ', ';\r\n                }\r\n                allSuspiciousIndexes = allSuspiciousIndexes + index;\r\n                first = false;\r\n            });\r\n            e = 'removed ICU message references ' + allSuspiciousIndexes + ' from original message';\r\n        }\r\n        return e;\r\n    }\r\n    /**\r\n     * Get all indexes of placeholders used in the message.\r\n     */\r\n    allPlaceholders() {\r\n        const result = new Set();\r\n        this.parts().forEach((part) => {\r\n            if (part.type === ParsedMessagePartType.PLACEHOLDER) {\r\n                const index = part.index();\r\n                result.add(index);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    /**\r\n     * Return the disp-Attribute of placeholder\r\n     * @param index index of placeholder\r\n     * @return disp or null\r\n     */\r\n    getPlaceholderDisp(index) {\r\n        let placeHolder = null;\r\n        this.parts().forEach((part) => {\r\n            if (part.type === ParsedMessagePartType.PLACEHOLDER) {\r\n                const phPart = part;\r\n                if (phPart.index() === index) {\r\n                    placeHolder = phPart;\r\n                }\r\n            }\r\n        });\r\n        return placeHolder ? placeHolder.disp() : null;\r\n    }\r\n    /**\r\n     * Get all indexes of ICU message refs used in the message.\r\n     */\r\n    allICUMessageRefs() {\r\n        const result = new Set();\r\n        this.parts().forEach((part) => {\r\n            if (part.type === ParsedMessagePartType.ICU_MESSAGE_REF) {\r\n                const index = part.index();\r\n                result.add(index);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    /**\r\n     * Return the disp-Attribute of icu message ref\r\n     * @param index of ref\r\n     * @return disp or null\r\n     */\r\n    getICUMessageRefDisp(index) {\r\n        let icuMessageRefPart = null;\r\n        this.parts().forEach((part) => {\r\n            if (part.type === ParsedMessagePartType.ICU_MESSAGE_REF) {\r\n                const refPart = part;\r\n                if (refPart.index() === index) {\r\n                    icuMessageRefPart = refPart;\r\n                }\r\n            }\r\n        });\r\n        return icuMessageRefPart ? icuMessageRefPart.disp() : null;\r\n    }\r\n    /**\r\n     * Check for added tags.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    checkTagAdded() {\r\n        let e = null;\r\n        const suspiciousTags = [];\r\n        if (this.sourceMessage) {\r\n            const sourceTags = this.sourceMessage.allTags();\r\n            const myTags = this.allTags();\r\n            myTags.forEach((tagName) => {\r\n                if (!sourceTags.has(tagName)) {\r\n                    suspiciousTags.push(tagName);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousTags.length === 1) {\r\n            e = 'added tag <' + suspiciousTags[0] + '>, which is not in original message';\r\n        }\r\n        else if (suspiciousTags.length > 1) {\r\n            let allSuspiciousTags = '';\r\n            let first = true;\r\n            suspiciousTags.forEach((tag) => {\r\n                if (!first) {\r\n                    allSuspiciousTags = allSuspiciousTags + ', ';\r\n                }\r\n                allSuspiciousTags = allSuspiciousTags + '<' + tag + '>';\r\n                first = false;\r\n            });\r\n            e = 'added tags ' + allSuspiciousTags + ', which are not in original message';\r\n        }\r\n        return e;\r\n    }\r\n    /**\r\n     * Check for removed tags.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    checkTagRemoved() {\r\n        let w = null;\r\n        const suspiciousTags = [];\r\n        if (this.sourceMessage) {\r\n            const sourceTags = this.sourceMessage.allTags();\r\n            const myTags = this.allTags();\r\n            sourceTags.forEach((tagName) => {\r\n                if (!myTags.has(tagName)) {\r\n                    suspiciousTags.push(tagName);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousTags.length === 1) {\r\n            w = 'removed tag <' + suspiciousTags[0] + '> from original message';\r\n        }\r\n        else if (suspiciousTags.length > 1) {\r\n            let allSuspiciousTags = '';\r\n            let first = true;\r\n            suspiciousTags.forEach((tag) => {\r\n                if (!first) {\r\n                    allSuspiciousTags = allSuspiciousTags + ', ';\r\n                }\r\n                allSuspiciousTags = allSuspiciousTags + '<' + tag + '>';\r\n                first = false;\r\n            });\r\n            w = 'removed tags ' + allSuspiciousTags + ' from original message';\r\n        }\r\n        return w;\r\n    }\r\n    /**\r\n     * Get all tag names used in the message.\r\n     */\r\n    allTags() {\r\n        const result = new Set();\r\n        this.parts().forEach((part) => {\r\n            if (part.type === ParsedMessagePartType.START_TAG || part.type === ParsedMessagePartType.EMPTY_TAG) {\r\n                const tagName = part.tagName();\r\n                result.add(tagName);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    parts() {\r\n        return this._parts;\r\n    }\r\n    setXmlRepresentation(xmlRepresentation) {\r\n        this._xmlRepresentation = xmlRepresentation;\r\n    }\r\n    addText(text) {\r\n        this._parts.push(new ParsedMessagePartText(text));\r\n    }\r\n    addPlaceholder(index, disp) {\r\n        this._parts.push(new ParsedMessagePartPlaceholder(index, disp));\r\n    }\r\n    addStartTag(tagname, idcounter) {\r\n        this._parts.push(new ParsedMessagePartStartTag(tagname, idcounter));\r\n    }\r\n    addEndTag(tagname) {\r\n        // check if well formed\r\n        const openTag = this.calculateOpenTagName();\r\n        if (!openTag || openTag !== tagname) {\r\n            // oops, not well formed\r\n            throw new Error(format('unexpected close tag %s (currently open is %s, native xml is \"%s\")', tagname, openTag, this.asNativeString()));\r\n        }\r\n        this._parts.push(new ParsedMessagePartEndTag(tagname));\r\n    }\r\n    addEmptyTag(tagname, idcounter) {\r\n        this._parts.push(new ParsedMessagePartEmptyTag(tagname, idcounter));\r\n    }\r\n    addICUMessageRef(index, disp) {\r\n        this._parts.push(new ParsedMessagePartICUMessageRef(index, disp));\r\n    }\r\n    addICUMessage(text) {\r\n        this._parts.push(new ParsedMessagePartICUMessage(text, this._parser));\r\n    }\r\n    /**\r\n     * Determine, wether there is an open tag, that is not closed.\r\n     * Returns the latest one or null, if there is no open tag.\r\n     */\r\n    calculateOpenTagName() {\r\n        const openTags = [];\r\n        this._parts.forEach((part) => {\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.START_TAG:\r\n                    openTags.push(part.tagName());\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    const tagName = part.tagName();\r\n                    if (openTags.length === 0 || openTags[openTags.length - 1] !== tagName) {\r\n                        // oops, not well formed\r\n                        const openTag = (openTags.length === 0) ? 'nothing' : openTags[openTags.length - 1];\r\n                        throw new Error(format('unexpected close tag %s (currently open is %s, native xml is \"%s\")', tagName, openTag, this.asNativeString()));\r\n                    }\r\n                    openTags.pop();\r\n            }\r\n        });\r\n        return openTags.length === 0 ? null : openTags[openTags.length - 1];\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-text.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-placeholder.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-start-tag.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-end-tag.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","util","is-what","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-icu-message.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-icu-message-ref.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-empty-tag.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { ParsedMessagePartType } from './parsed-message-part';\r\nimport { ParsedMessagePartText } from './parsed-message-part-text';\r\nimport { ParsedMessagePartPlaceholder } from './parsed-message-part-placeholder';\r\nimport { ParsedMessagePartStartTag } from './parsed-message-part-start-tag';\r\nimport { ParsedMessagePartEndTag } from './parsed-message-part-end-tag';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { format } from 'util';\r\nimport { isNullOrUndefined } from 'is-what';\r\nimport { ParsedMessagePartICUMessage } from './parsed-message-part-icu-message';\r\nimport { ParsedMessagePartICUMessageRef } from './parsed-message-part-icu-message-ref';\r\nimport { ParsedMessagePartEmptyTag } from './parsed-message-part-empty-tag';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message text read from a translation file.\r\n * Can contain placeholders, tags, text.\r\n * This class is a representation independent of the concrete format.\r\n */\r\nexport class ParsedMessage {\r\n    constructor(parser, sourceMessage) {\r\n        this._parser = parser;\r\n        this.sourceMessage = sourceMessage;\r\n        this._parts = [];\r\n    }\r\n    /**\r\n     * Get the parser (for tests only, not part of API)\r\n     * @return parser\r\n     */\r\n    getParser() {\r\n        return this._parser;\r\n    }\r\n    /**\r\n     * Create a new normalized message as a translation of this one.\r\n     * @param normalizedString the translation in normalized form.\r\n     * If the message is an ICUMessage (getICUMessage returns a value), use translateICUMessage instead.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is an ICU message.\r\n     */\r\n    translate(normalizedString) {\r\n        if (isNullOrUndefined(this.getICUMessage())) {\r\n            return this._parser.parseNormalizedString(normalizedString, this);\r\n        }\r\n        else {\r\n            throw new Error(format('cannot translate ICU message with simple string, use translateICUMessage() instead (\"%s\", \"%s\")', normalizedString, this.asNativeString()));\r\n        }\r\n    }\r\n    /**\r\n     * Create a new normalized icu message as a translation of this one.\r\n     * @param icuTranslation the translation, this is the translation of the ICU message,\r\n     * which is not a string, but a collections of the translations of the different categories.\r\n     * The message must be an ICUMessage (getICUMessage returns a value)\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is not an ICU message.\r\n     */\r\n    translateICUMessage(icuTranslation) {\r\n        const icuMessage = this.getICUMessage();\r\n        if (isNullOrUndefined(icuMessage)) {\r\n            throw new Error(format('this is not an ICU message, use translate() instead (\"%s\", \"%s\")', icuTranslation, this.asNativeString()));\r\n        }\r\n        else {\r\n            const translatedICUMessage = icuMessage.translate(icuTranslation);\r\n            return this._parser.parseICUMessage(translatedICUMessage.asNativeString(), this);\r\n        }\r\n    }\r\n    /**\r\n     * Create a new normalized message from a native xml string as a translation of this one.\r\n     * @param nativeString xml string in the format of the underlying file format.\r\n     * Throws an error if native string is not acceptable.\r\n     */\r\n    translateNativeString(nativeString) {\r\n        return this._parser.createNormalizedMessageFromXMLString(nativeString, this);\r\n    }\r\n    /**\r\n     * normalized message as string.\r\n     * @param displayFormat optional way to determine the exact syntax.\r\n     * Allowed formats are defined as constants NORMALIZATION_FORMAT...\r\n     */\r\n    asDisplayString(displayFormat) {\r\n        return this._parts.map((part) => part.asDisplayString(displayFormat)).join('');\r\n    }\r\n    /**\r\n     * Returns the message content as format dependent native string.\r\n     * Includes all format specific markup like <ph id=\"INTERPOLATION\" ../> ..\r\n     */\r\n    asNativeString() {\r\n        if (isNullOrUndefined(this.getICUMessage())) {\r\n            return DOMUtilities.getXMLContent(this._xmlRepresentation);\r\n        }\r\n        else {\r\n            return this.getICUMessage().asNativeString();\r\n        }\r\n    }\r\n    /**\r\n     * Validate the message.\r\n     * @return null, if ok, error object otherwise.\r\n     */\r\n    validate() {\r\n        let hasErrors = false;\r\n        const errors = {};\r\n        let e;\r\n        e = this.checkPlaceholderAdded();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.placeholderAdded = e;\r\n            hasErrors = true;\r\n        }\r\n        e = this.checkICUMessageRefRemoved();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.icuMessageRefRemoved = e;\r\n            hasErrors = true;\r\n        }\r\n        e = this.checkICUMessageRefAdded();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.icuMessageRefAdded = e;\r\n            hasErrors = true;\r\n        }\r\n        return hasErrors ? errors : null;\r\n    }\r\n    /**\r\n     * Validate the message, check for warnings only.\r\n     * A warning shows, that the message is acceptable, but misses something.\r\n     * E.g. if you remove a placeholder or a special tag from the original message, this generates a warning.\r\n     * @return null, if no warning, warnings as error object otherwise.\r\n     */\r\n    validateWarnings() {\r\n        let hasWarnings = false;\r\n        const warnings = {};\r\n        let w;\r\n        w = this.checkPlaceholderRemoved();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.placeholderRemoved = w;\r\n            hasWarnings = true;\r\n        }\r\n        w = this.checkTagRemoved();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.tagRemoved = w;\r\n            hasWarnings = true;\r\n        }\r\n        w = this.checkTagAdded();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.tagAdded = w;\r\n            hasWarnings = true;\r\n        }\r\n        return hasWarnings ? warnings : null;\r\n    }\r\n    /**\r\n     * Test wether this message is an ICU message.\r\n     * @return true, if it is an ICU message.\r\n     */\r\n    isICUMessage() {\r\n        return this._parts.length === 1 && this._parts[0].type === ParsedMessagePartType.ICU_MESSAGE;\r\n    }\r\n    /**\r\n     * Test wether this message contains an ICU message reference.\r\n     * ICU message references are something like <x ID=\"ICU\"../>.\r\n     * @return true, if there is an ICU message reference in the message.\r\n     */\r\n    containsICUMessageRef() {\r\n        return this._parts.findIndex(part => part.type === ParsedMessagePartType.ICU_MESSAGE_REF) >= 0;\r\n    }\r\n    /**\r\n     * If this message is an ICU message, returns its structure.\r\n     * Otherwise this method returns null.\r\n     * @return ICUMessage or null.\r\n     */\r\n    getICUMessage() {\r\n        if (this._parts.length === 1 && this._parts[0].type === ParsedMessagePartType.ICU_MESSAGE) {\r\n            const icuPart = this._parts[0];\r\n            return icuPart.getICUMessage();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Check for added placeholder.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    checkPlaceholderAdded() {\r\n        let e = null;\r\n        const suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            const sourcePlaceholders = this.sourceMessage.allPlaceholders();\r\n            const myPlaceholders = this.allPlaceholders();\r\n            myPlaceholders.forEach((index) => {\r\n                if (!sourcePlaceholders.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'added placeholder ' + suspiciousIndexes[0] + ', which is not in original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            let allSuspiciousIndexes = '';\r\n            let first = true;\r\n            suspiciousIndexes.forEach((index) => {\r\n                if (!first) {\r\n                    allSuspiciousIndexes = allSuspiciousIndexes + ', ';\r\n                }\r\n                allSuspiciousIndexes = allSuspiciousIndexes + index;\r\n                first = false;\r\n            });\r\n            e = 'added placeholders ' + allSuspiciousIndexes + ', which are not in original message';\r\n        }\r\n        return e;\r\n    }\r\n    /**\r\n     * Check for removed placeholder.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    checkPlaceholderRemoved() {\r\n        let w = null;\r\n        const suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            const sourcePlaceholders = this.sourceMessage.allPlaceholders();\r\n            const myPlaceholders = this.allPlaceholders();\r\n            sourcePlaceholders.forEach((index) => {\r\n                if (!myPlaceholders.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            w = 'removed placeholder ' + suspiciousIndexes[0] + ' from original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            let allSuspiciousIndexes = '';\r\n            let first = true;\r\n            suspiciousIndexes.forEach((index) => {\r\n                if (!first) {\r\n                    allSuspiciousIndexes = allSuspiciousIndexes + ', ';\r\n                }\r\n                allSuspiciousIndexes = allSuspiciousIndexes + index;\r\n                first = false;\r\n            });\r\n            w = 'removed placeholders ' + allSuspiciousIndexes + ' from original message';\r\n        }\r\n        return w;\r\n    }\r\n    /**\r\n     * Check for added ICU Message Refs.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    checkICUMessageRefAdded() {\r\n        let e = null;\r\n        const suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            const sourceICURefs = this.sourceMessage.allICUMessageRefs();\r\n            const myICURefs = this.allICUMessageRefs();\r\n            myICURefs.forEach((index) => {\r\n                if (!sourceICURefs.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'added ICU message reference ' + suspiciousIndexes[0] + ', which is not in original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            let allSuspiciousIndexes = '';\r\n            let first = true;\r\n            suspiciousIndexes.forEach((index) => {\r\n                if (!first) {\r\n                    allSuspiciousIndexes = allSuspiciousIndexes + ', ';\r\n                }\r\n                allSuspiciousIndexes = allSuspiciousIndexes + index;\r\n                first = false;\r\n            });\r\n            e = 'added ICU message references ' + allSuspiciousIndexes + ', which are not in original message';\r\n        }\r\n        return e;\r\n    }\r\n    /**\r\n     * Check for removed ICU Message Refs.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    checkICUMessageRefRemoved() {\r\n        let e = null;\r\n        const suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            const sourceICURefs = this.sourceMessage.allICUMessageRefs();\r\n            const myICURefs = this.allICUMessageRefs();\r\n            sourceICURefs.forEach((index) => {\r\n                if (!myICURefs.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'removed ICU message reference ' + suspiciousIndexes[0] + ' from original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            let allSuspiciousIndexes = '';\r\n            let first = true;\r\n            suspiciousIndexes.forEach((index) => {\r\n                if (!first) {\r\n                    allSuspiciousIndexes = allSuspiciousIndexes + ', ';\r\n                }\r\n                allSuspiciousIndexes = allSuspiciousIndexes + index;\r\n                first = false;\r\n            });\r\n            e = 'removed ICU message references ' + allSuspiciousIndexes + ' from original message';\r\n        }\r\n        return e;\r\n    }\r\n    /**\r\n     * Get all indexes of placeholders used in the message.\r\n     */\r\n    allPlaceholders() {\r\n        const result = new Set();\r\n        this.parts().forEach((part) => {\r\n            if (part.type === ParsedMessagePartType.PLACEHOLDER) {\r\n                const index = part.index();\r\n                result.add(index);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    /**\r\n     * Return the disp-Attribute of placeholder\r\n     * @param index index of placeholder\r\n     * @return disp or null\r\n     */\r\n    getPlaceholderDisp(index) {\r\n        let placeHolder = null;\r\n        this.parts().forEach((part) => {\r\n            if (part.type === ParsedMessagePartType.PLACEHOLDER) {\r\n                const phPart = part;\r\n                if (phPart.index() === index) {\r\n                    placeHolder = phPart;\r\n                }\r\n            }\r\n        });\r\n        return placeHolder ? placeHolder.disp() : null;\r\n    }\r\n    /**\r\n     * Get all indexes of ICU message refs used in the message.\r\n     */\r\n    allICUMessageRefs() {\r\n        const result = new Set();\r\n        this.parts().forEach((part) => {\r\n            if (part.type === ParsedMessagePartType.ICU_MESSAGE_REF) {\r\n                const index = part.index();\r\n                result.add(index);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    /**\r\n     * Return the disp-Attribute of icu message ref\r\n     * @param index of ref\r\n     * @return disp or null\r\n     */\r\n    getICUMessageRefDisp(index) {\r\n        let icuMessageRefPart = null;\r\n        this.parts().forEach((part) => {\r\n            if (part.type === ParsedMessagePartType.ICU_MESSAGE_REF) {\r\n                const refPart = part;\r\n                if (refPart.index() === index) {\r\n                    icuMessageRefPart = refPart;\r\n                }\r\n            }\r\n        });\r\n        return icuMessageRefPart ? icuMessageRefPart.disp() : null;\r\n    }\r\n    /**\r\n     * Check for added tags.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    checkTagAdded() {\r\n        let e = null;\r\n        const suspiciousTags = [];\r\n        if (this.sourceMessage) {\r\n            const sourceTags = this.sourceMessage.allTags();\r\n            const myTags = this.allTags();\r\n            myTags.forEach((tagName) => {\r\n                if (!sourceTags.has(tagName)) {\r\n                    suspiciousTags.push(tagName);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousTags.length === 1) {\r\n            e = 'added tag <' + suspiciousTags[0] + '>, which is not in original message';\r\n        }\r\n        else if (suspiciousTags.length > 1) {\r\n            let allSuspiciousTags = '';\r\n            let first = true;\r\n            suspiciousTags.forEach((tag) => {\r\n                if (!first) {\r\n                    allSuspiciousTags = allSuspiciousTags + ', ';\r\n                }\r\n                allSuspiciousTags = allSuspiciousTags + '<' + tag + '>';\r\n                first = false;\r\n            });\r\n            e = 'added tags ' + allSuspiciousTags + ', which are not in original message';\r\n        }\r\n        return e;\r\n    }\r\n    /**\r\n     * Check for removed tags.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    checkTagRemoved() {\r\n        let w = null;\r\n        const suspiciousTags = [];\r\n        if (this.sourceMessage) {\r\n            const sourceTags = this.sourceMessage.allTags();\r\n            const myTags = this.allTags();\r\n            sourceTags.forEach((tagName) => {\r\n                if (!myTags.has(tagName)) {\r\n                    suspiciousTags.push(tagName);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousTags.length === 1) {\r\n            w = 'removed tag <' + suspiciousTags[0] + '> from original message';\r\n        }\r\n        else if (suspiciousTags.length > 1) {\r\n            let allSuspiciousTags = '';\r\n            let first = true;\r\n            suspiciousTags.forEach((tag) => {\r\n                if (!first) {\r\n                    allSuspiciousTags = allSuspiciousTags + ', ';\r\n                }\r\n                allSuspiciousTags = allSuspiciousTags + '<' + tag + '>';\r\n                first = false;\r\n            });\r\n            w = 'removed tags ' + allSuspiciousTags + ' from original message';\r\n        }\r\n        return w;\r\n    }\r\n    /**\r\n     * Get all tag names used in the message.\r\n     */\r\n    allTags() {\r\n        const result = new Set();\r\n        this.parts().forEach((part) => {\r\n            if (part.type === ParsedMessagePartType.START_TAG || part.type === ParsedMessagePartType.EMPTY_TAG) {\r\n                const tagName = part.tagName();\r\n                result.add(tagName);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    parts() {\r\n        return this._parts;\r\n    }\r\n    setXmlRepresentation(xmlRepresentation) {\r\n        this._xmlRepresentation = xmlRepresentation;\r\n    }\r\n    addText(text) {\r\n        this._parts.push(new ParsedMessagePartText(text));\r\n    }\r\n    addPlaceholder(index, disp) {\r\n        this._parts.push(new ParsedMessagePartPlaceholder(index, disp));\r\n    }\r\n    addStartTag(tagname, idcounter) {\r\n        this._parts.push(new ParsedMessagePartStartTag(tagname, idcounter));\r\n    }\r\n    addEndTag(tagname) {\r\n        // check if well formed\r\n        const openTag = this.calculateOpenTagName();\r\n        if (!openTag || openTag !== tagname) {\r\n            // oops, not well formed\r\n            throw new Error(format('unexpected close tag %s (currently open is %s, native xml is \"%s\")', tagname, openTag, this.asNativeString()));\r\n        }\r\n        this._parts.push(new ParsedMessagePartEndTag(tagname));\r\n    }\r\n    addEmptyTag(tagname, idcounter) {\r\n        this._parts.push(new ParsedMessagePartEmptyTag(tagname, idcounter));\r\n    }\r\n    addICUMessageRef(index, disp) {\r\n        this._parts.push(new ParsedMessagePartICUMessageRef(index, disp));\r\n    }\r\n    addICUMessage(text) {\r\n        this._parts.push(new ParsedMessagePartICUMessage(text, this._parser));\r\n    }\r\n    /**\r\n     * Determine, wether there is an open tag, that is not closed.\r\n     * Returns the latest one or null, if there is no open tag.\r\n     */\r\n    calculateOpenTagName() {\r\n        const openTags = [];\r\n        this._parts.forEach((part) => {\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.START_TAG:\r\n                    openTags.push(part.tagName());\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    const tagName = part.tagName();\r\n                    if (openTags.length === 0 || openTags[openTags.length - 1] !== tagName) {\r\n                        // oops, not well formed\r\n                        const openTag = (openTags.length === 0) ? 'nothing' : openTags[openTags.length - 1];\r\n                        throw new Error(format('unexpected close tag %s (currently open is %s, native xml is \"%s\")', tagName, openTag, this.asNativeString()));\r\n                    }\r\n                    openTags.pop();\r\n            }\r\n        });\r\n        return openTags.length === 0 ? null : openTags[openTags.length - 1];\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"parsed-message.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/parsed-message.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,27],[30,0,0,48],[32,0,0,49],[38,0,0,55],[61,0,0,78],[62,0,0,79]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[30,0,1,29],[32,0,1,30],[38,0,1,36],[66,0,1,64],[67,0,1,65]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[37,0,2,36],[39,0,2,37],[45,0,2,43],[80,0,2,78],[81,0,2,79]],[[0,0,3,0],[7,0,3,7],[9,0,3,8],[34,0,3,33],[36,0,3,34],[42,0,3,40],[75,0,3,73],[76,0,3,74]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[32,0,4,31],[34,0,4,32],[40,0,4,38],[71,0,4,69],[72,0,4,70]],[[0,0,6,0],[7,0,6,7],[9,0,6,8],[21,0,6,20],[23,0,6,21],[29,0,6,27],[46,0,6,44],[47,0,6,45]],[[0,0,8,0],[7,0,8,7],[9,0,8,8],[15,0,8,14],[17,0,8,15],[23,0,8,21],[29,0,8,27],[30,0,8,28]],[[0,0,9,0],[7,0,9,7],[9,0,9,8],[26,0,9,25],[28,0,9,26],[34,0,9,32],[43,0,9,41],[44,0,9,42]],[[0,0,11,0],[7,0,11,7],[9,0,11,8],[36,0,11,35],[38,0,11,36],[44,0,11,42],[79,0,11,77],[80,0,11,78]],[[0,0,12,0],[7,0,12,7],[9,0,12,8],[39,0,12,38],[41,0,12,39],[47,0,12,45],[86,0,12,84],[87,0,12,85]],[[0,0,14,0],[7,0,14,7],[9,0,14,8],[34,0,14,33],[36,0,14,34],[42,0,14,40],[75,0,14,73],[76,0,14,74]],[[0,0,15,0]],[],[],[],[],[[3,0,20,3]],[[0,0,21,0],[6,0,21,6],[13,0,21,13],[26,0,21,26]],[[4,0,44,4],[16,0,44,16],[22,0,44,38],[24,0,44,40],[37,0,44,68]],[[8,0,45,8],[12,0,45,12],[13,0,45,13],[20,0,45,20],[23,0,45,23],[29,0,45,29],[30,0,45,30]],[[8,0,46,8],[12,0,46,12],[13,0,46,13],[26,0,46,26],[29,0,46,29],[42,0,46,42],[43,0,46,43]],[[8,0,47,8],[12,0,47,12],[13,0,47,13],[19,0,47,19],[22,0,47,22],[24,0,47,24],[25,0,47,25]],[[4,0,48,4],[5,0,48,5]],[[4,0,50,4]],[],[],[[7,0,53,7]],[[4,0,54,4],[13,0,54,13]],[[8,0,55,8],[15,0,55,15],[19,0,55,19],[20,0,55,20],[27,0,55,27],[28,0,55,28]],[[4,0,56,4],[5,0,56,5]],[[4,0,58,4]],[],[],[],[],[],[[7,0,64,7]],[[4,0,65,4],[13,0,65,13],[14,0,65,14],[30,0,65,38]],[[8,0,66,8],[12,0,66,12],[29,0,66,29],[30,0,66,30],[34,0,66,34],[35,0,66,35],[48,0,66,48],[50,0,66,50],[51,0,66,51],[53,0,66,53]],[[12,0,67,12],[19,0,67,19],[23,0,67,23],[24,0,67,24],[31,0,67,31],[32,0,67,32],[53,0,67,53],[54,0,67,63],[70,0,67,79],[72,0,67,81],[76,0,67,85],[77,0,67,86],[78,0,67,87]],[[9,0,68,9]],[[13,0,68,15]],[[12,0,69,12],[18,0,69,18],[22,0,69,22],[27,0,69,27],[28,0,69,28],[34,0,69,34],[35,0,69,35],[132,0,69,132],[134,0,70,16],[150,0,70,32],[152,0,70,34],[156,0,70,38],[157,0,70,39],[171,0,70,53],[173,0,70,55],[174,0,70,56],[175,0,70,57],[176,0,70,58]],[[9,0,71,9]],[[4,0,72,4],[5,0,72,5]],[[4,0,74,4]],[],[],[],[],[],[],[[7,0,81,7]],[[4,0,82,4],[23,0,82,23],[24,0,82,24],[38,0,82,62]],[[8,0,83,8],[14,0,83,14],[24,0,83,24],[27,0,83,40],[31,0,83,44],[32,0,83,45],[45,0,83,58],[47,0,83,60],[48,0,83,61]],[[8,0,84,8],[12,0,84,12],[29,0,84,29],[30,0,84,30],[40,0,84,40],[41,0,84,41],[43,0,84,43]],[[12,0,85,12],[18,0,85,18],[22,0,85,22],[27,0,85,27],[28,0,85,28],[34,0,85,34],[35,0,85,35],[101,0,85,101],[103,0,86,16],[117,0,86,30],[119,0,86,33],[123,0,86,37],[124,0,86,38],[138,0,86,52],[140,0,86,54],[141,0,86,55],[142,0,86,56],[143,0,86,57]],[[9,0,87,9]],[[13,0,87,15]],[[12,0,88,12],[18,0,88,18],[38,0,88,38],[41,0,88,54],[51,0,88,64],[52,0,88,65],[61,0,88,74],[62,0,88,75],[76,0,88,89],[77,0,88,90],[78,0,88,91]],[[12,0,89,12],[19,0,89,19],[23,0,89,23],[24,0,89,24],[31,0,89,31],[32,0,89,32],[47,0,89,47],[48,0,89,48],[68,0,89,68],[69,0,89,69],[83,0,89,83],[85,0,89,85],[87,0,89,87],[91,0,89,91],[92,0,89,92],[93,0,89,93]],[[9,0,90,9]],[[4,0,91,4],[5,0,91,5]],[[4,0,93,4]],[],[],[],[[7,0,97,7]],[[4,0,98,4],[25,0,98,25],[26,0,98,26],[38,0,98,46]],[[8,0,99,8],[15,0,99,15],[19,0,99,19],[20,0,99,20],[27,0,99,27],[28,0,99,28],[64,0,99,64],[65,0,99,65],[77,0,99,77],[79,0,99,79],[83,0,99,83],[84,0,99,84],[85,0,99,85]],[[4,0,100,4],[5,0,100,5]],[[4,0,102,4]],[],[],[],[[7,0,106,7]],[[4,0,107,11],[19,0,107,26],[20,0,107,27],[33,0,107,49]],[[8,0,108,8],[15,0,108,15],[19,0,108,19],[20,0,108,20],[26,0,108,26],[27,0,108,27],[30,0,108,30],[31,0,108,31],[32,0,108,32],[36,0,108,36],[38,0,108,38],[40,0,108,40],[41,0,108,41],[45,0,108,45],[46,0,108,46],[61,0,108,61],[62,0,108,62],[75,0,108,75],[76,0,108,76],[77,0,108,77],[78,0,108,78],[82,0,108,82],[83,0,108,83],[85,0,108,85],[86,0,108,86],[87,0,108,87]],[[4,0,109,4],[5,0,109,5]],[[4,0,111,4]],[],[],[[7,0,114,7]],[[4,0,115,4],[18,0,115,18]],[[8,0,116,8],[12,0,116,12],[29,0,116,29],[30,0,116,30],[34,0,116,34],[35,0,116,35],[48,0,116,48],[50,0,116,50],[51,0,116,51],[53,0,116,53]],[[12,0,117,12],[19,0,117,19],[31,0,117,31],[32,0,117,32],[45,0,117,45],[46,0,117,46],[50,0,117,50],[51,0,117,51],[69,0,117,69],[70,0,117,70],[71,0,117,71]],[[9,0,118,9]],[[13,0,118,15]],[[12,0,119,12],[19,0,119,19],[23,0,119,23],[24,0,119,24],[37,0,119,37],[39,0,119,39],[40,0,119,40],[54,0,119,54],[56,0,119,56],[57,0,119,57]],[[9,0,120,9]],[[4,0,121,4],[5,0,121,5]],[[4,0,123,4]],[],[],[[7,0,126,7]],[[4,0,127,11],[12,0,127,19]],[[8,0,128,8],[12,0,128,12],[21,0,128,21],[24,0,128,24],[29,0,128,29],[30,0,128,30]],[[8,0,129,8],[14,0,129,14],[20,0,129,20],[23,0,129,41],[25,0,129,43],[26,0,129,44]],[[8,0,130,8],[12,0,130,12],[13,0,130,13],[14,0,130,14]],[[8,0,131,8],[9,0,131,9],[12,0,131,12],[16,0,131,16],[17,0,131,17],[38,0,131,38],[40,0,131,40],[41,0,131,41]],[[8,0,132,8],[12,0,132,12],[13,0,132,13],[30,0,132,30],[31,0,132,31],[32,0,132,32],[33,0,132,33],[35,0,132,35]],[[12,0,133,12],[18,0,133,18],[19,0,133,19],[35,0,133,35],[38,0,133,38],[39,0,133,39],[40,0,133,40]],[[12,0,134,12],[21,0,134,21],[24,0,134,24],[28,0,134,28],[29,0,134,29]],[[9,0,135,9]],[[8,0,136,8],[9,0,136,9],[12,0,136,12],[16,0,136,16],[17,0,136,17],[42,0,136,42],[44,0,136,44],[45,0,136,45]],[[8,0,137,8],[12,0,137,12],[13,0,137,13],[30,0,137,30],[31,0,137,31],[32,0,137,32],[33,0,137,33],[35,0,137,35]],[[12,0,138,12],[18,0,138,18],[19,0,138,19],[39,0,138,39],[42,0,138,42],[43,0,138,43],[44,0,138,44]],[[12,0,139,12],[21,0,139,21],[24,0,139,24],[28,0,139,28],[29,0,139,29]],[[9,0,140,9]],[[8,0,141,8],[9,0,141,9],[12,0,141,12],[16,0,141,16],[17,0,141,17],[40,0,141,40],[42,0,141,42],[43,0,141,43]],[[8,0,142,8],[12,0,142,12],[13,0,142,13],[30,0,142,30],[31,0,142,31],[32,0,142,32],[33,0,142,33],[35,0,142,35]],[[12,0,143,12],[18,0,143,18],[19,0,143,19],[37,0,143,37],[40,0,143,40],[41,0,143,41],[42,0,143,42]],[[12,0,144,12],[21,0,144,21],[24,0,144,24],[28,0,144,28],[29,0,144,29]],[[9,0,145,9]],[[8,0,146,8],[15,0,146,15],[24,0,146,24],[25,0,146,25],[26,0,146,26],[27,0,146,27],[33,0,146,33],[34,0,146,34],[35,0,146,35],[36,0,146,36],[40,0,146,40],[41,0,146,41]],[[4,0,147,4],[5,0,147,5]],[[4,0,149,4]],[],[],[],[],[[7,0,154,7]],[[4,0,155,4],[20,0,155,20]],[[8,0,156,8],[12,0,156,12],[23,0,156,23],[26,0,156,26],[31,0,156,31],[32,0,156,32]],[[8,0,157,8],[14,0,157,14],[22,0,157,22],[25,0,157,43],[27,0,157,45],[28,0,157,46]],[[8,0,158,8],[12,0,158,12],[13,0,158,13],[14,0,158,14]],[[8,0,159,8],[9,0,159,9],[12,0,159,12],[16,0,159,16],[17,0,159,17],[40,0,159,40],[42,0,159,42],[43,0,159,43]],[[8,0,160,8],[12,0,160,12],[13,0,160,13],[30,0,160,30],[31,0,160,31],[32,0,160,32],[33,0,160,33],[35,0,160,35]],[[12,0,161,12],[20,0,161,20],[21,0,161,21],[39,0,161,39],[42,0,161,42],[43,0,161,43],[44,0,161,44]],[[12,0,162,12],[23,0,162,23],[26,0,162,26],[30,0,162,30],[31,0,162,31]],[[9,0,163,9]],[[8,0,164,8],[9,0,164,9],[12,0,164,12],[16,0,164,16],[17,0,164,17],[32,0,164,32],[34,0,164,34],[35,0,164,35]],[[8,0,165,8],[12,0,165,12],[13,0,165,13],[30,0,165,30],[31,0,165,31],[32,0,165,32],[33,0,165,33],[35,0,165,35]],[[12,0,166,12],[20,0,166,20],[21,0,166,21],[31,0,166,31],[34,0,166,34],[35,0,166,35],[36,0,166,36]],[[12,0,167,12],[23,0,167,23],[26,0,167,26],[30,0,167,30],[31,0,167,31]],[[9,0,168,9]],[[8,0,169,8],[9,0,169,9],[12,0,169,12],[16,0,169,16],[17,0,169,17],[30,0,169,30],[32,0,169,32],[33,0,169,33]],[[8,0,170,8],[12,0,170,12],[13,0,170,13],[30,0,170,30],[31,0,170,31],[32,0,170,32],[33,0,170,33],[35,0,170,35]],[[12,0,171,12],[20,0,171,20],[21,0,171,21],[29,0,171,29],[32,0,171,32],[33,0,171,33],[34,0,171,34]],[[12,0,172,12],[23,0,172,23],[26,0,172,26],[30,0,172,30],[31,0,172,31]],[[9,0,173,9]],[[8,0,174,8],[15,0,174,15],[26,0,174,26],[27,0,174,27],[28,0,174,28],[29,0,174,29],[37,0,174,37],[38,0,174,38],[39,0,174,39],[40,0,174,40],[44,0,174,44],[45,0,174,45]],[[4,0,175,4],[5,0,175,5]],[[4,0,177,4]],[],[],[[7,0,180,7]],[[4,0,181,4],[16,0,181,16]],[[8,0,182,8],[15,0,182,15],[19,0,182,19],[20,0,182,20],[26,0,182,26],[27,0,182,27],[33,0,182,33],[38,0,182,38],[39,0,182,39],[43,0,182,43],[47,0,182,47],[48,0,182,48],[54,0,182,54],[55,0,182,55],[56,0,182,56],[57,0,182,57],[58,0,182,58],[62,0,182,62],[67,0,182,67],[88,0,182,88],[89,0,182,89],[100,0,182,100],[101,0,182,101]],[[4,0,183,4],[5,0,183,5]],[[4,0,185,4]],[],[],[],[[7,0,189,7]],[[4,0,190,4],[25,0,190,25]],[[8,0,191,8],[15,0,191,15],[19,0,191,19],[20,0,191,20],[26,0,191,26],[27,0,191,27],[36,0,191,36],[37,0,191,37],[41,0,191,41],[42,0,191,42],[44,0,191,44],[45,0,191,45],[49,0,191,49],[50,0,191,50],[54,0,191,54],[59,0,191,59],[80,0,191,80],[81,0,191,81],[96,0,191,96],[97,0,191,97],[101,0,191,101],[102,0,191,102],[103,0,191,103]],[[4,0,192,4],[5,0,192,5]],[[4,0,194,4]],[],[],[],[[7,0,198,7]],[[4,0,199,11],[17,0,199,24]],[[8,0,200,8],[12,0,200,12],[16,0,200,16],[17,0,200,17],[23,0,200,23],[24,0,200,24],[30,0,200,30],[35,0,200,35],[36,0,200,36],[40,0,200,40],[44,0,200,44],[45,0,200,45],[51,0,200,51],[52,0,200,52],[53,0,200,53],[54,0,200,54],[55,0,200,55],[59,0,200,59],[64,0,200,64],[85,0,200,85],[86,0,200,86],[97,0,200,97],[99,0,200,99]],[[12,0,201,12],[18,0,201,18],[25,0,201,25],[28,0,201,58],[32,0,201,62],[33,0,201,63],[39,0,201,69],[40,0,201,70],[41,0,201,71],[42,0,201,72],[43,0,201,73]],[[12,0,202,12],[19,0,202,19],[26,0,202,26],[27,0,202,27],[40,0,202,40],[42,0,202,42],[43,0,202,43]],[[9,0,203,9]],[[13,0,203,15]],[[12,0,204,12],[19,0,204,19],[23,0,204,23],[24,0,204,24]],[[9,0,205,9]],[[4,0,206,4],[5,0,206,5]],[[4,0,209,4]],[],[],[[7,0,212,7]],[[4,0,213,12],[25,0,213,33]],[[8,0,214,8],[12,0,214,12],[13,0,214,13],[16,0,214,16],[20,0,214,20],[21,0,214,21]],[[8,0,215,8],[14,0,215,14],[31,0,215,31],[34,0,215,34],[36,0,215,36],[37,0,215,37]],[[8,0,216,8],[12,0,216,12],[16,0,216,16],[17,0,216,17],[30,0,216,30],[32,0,216,32]],[[12,0,217,12],[18,0,217,18],[36,0,217,36],[39,0,217,39],[43,0,217,43],[44,0,217,44],[57,0,217,57],[58,0,217,58],[73,0,217,73],[75,0,217,75],[76,0,217,76]],[[12,0,218,12],[18,0,218,18],[32,0,218,32],[35,0,218,35],[39,0,218,39],[40,0,218,40],[55,0,218,55],[57,0,218,57],[58,0,218,58]],[[12,0,219,12],[26,0,219,26],[27,0,219,27],[34,0,219,34],[35,0,219,35],[36,0,219,36],[41,0,219,41],[43,0,219,43],[45,0,219,45]],[[16,0,220,16],[20,0,220,20],[21,0,220,21],[39,0,220,39],[40,0,220,40],[43,0,220,43],[44,0,220,44],[49,0,220,49],[50,0,220,50],[52,0,220,52]],[[20,0,221,20],[37,0,221,37],[38,0,221,38],[42,0,221,42],[43,0,221,43],[48,0,221,48],[49,0,221,49],[50,0,221,50]],[[17,0,222,17]],[[12,0,223,12],[13,0,223,13],[14,0,223,14],[15,0,223,15]],[[9,0,224,9]],[[8,0,225,8],[12,0,225,12],[29,0,225,29],[30,0,225,30],[36,0,225,36],[41,0,225,41],[42,0,225,42],[44,0,225,44]],[[12,0,226,12],[13,0,226,13],[16,0,226,16],[36,0,226,36],[39,0,226,39],[56,0,226,56],[57,0,226,57],[58,0,226,58],[59,0,226,59],[62,0,226,62],[98,0,226,98],[99,0,226,99]],[[9,0,227,9]],[[13,0,227,15],[17,0,227,19],[34,0,227,36],[35,0,227,37],[41,0,227,43],[44,0,227,46],[45,0,227,47],[47,0,227,49]],[[12,0,228,12],[16,0,228,16],[36,0,228,36],[39,0,228,39],[41,0,228,41],[42,0,228,42]],[[12,0,229,12],[16,0,229,16],[21,0,229,21],[24,0,229,24],[28,0,229,28],[29,0,229,29]],[[12,0,230,12],[29,0,230,29],[30,0,230,30],[37,0,230,37],[38,0,230,38],[39,0,230,39],[44,0,230,44],[46,0,230,46],[48,0,230,48]],[[16,0,231,16],[20,0,231,20],[21,0,231,21],[26,0,231,26],[28,0,231,28]],[[20,0,232,20],[40,0,232,40],[43,0,232,43],[63,0,232,63],[66,0,232,66],[70,0,232,70],[71,0,232,71]],[[17,0,233,17]],[[16,0,234,16],[36,0,234,36],[39,0,234,39],[59,0,234,59],[62,0,234,62],[67,0,234,67],[68,0,234,68]],[[16,0,235,16],[21,0,235,21],[24,0,235,24],[29,0,235,29],[30,0,235,30]],[[12,0,236,12],[13,0,236,13],[14,0,236,14],[15,0,236,15]],[[12,0,237,12],[13,0,237,13],[16,0,237,16],[37,0,237,37],[40,0,237,40],[60,0,237,60],[63,0,237,63],[100,0,237,100],[101,0,237,101]],[[9,0,238,9]],[[8,0,239,8],[15,0,239,15],[16,0,239,16],[17,0,239,17]],[[4,0,240,4],[5,0,240,5]],[[4,0,242,4]],[],[],[[7,0,245,7]],[[4,0,246,12],[27,0,246,35]],[[8,0,247,8],[12,0,247,12],[13,0,247,13],[16,0,247,16],[20,0,247,20],[21,0,247,21]],[[8,0,248,8],[14,0,248,14],[31,0,248,31],[34,0,248,34],[36,0,248,36],[37,0,248,37]],[[8,0,249,8],[12,0,249,12],[16,0,249,16],[17,0,249,17],[30,0,249,30],[32,0,249,32]],[[12,0,250,12],[18,0,250,18],[36,0,250,36],[39,0,250,39],[43,0,250,43],[44,0,250,44],[57,0,250,57],[58,0,250,58],[73,0,250,73],[75,0,250,75],[76,0,250,76]],[[12,0,251,12],[18,0,251,18],[32,0,251,32],[35,0,251,35],[39,0,251,39],[40,0,251,40],[55,0,251,55],[57,0,251,57],[58,0,251,58]],[[12,0,252,12],[30,0,252,30],[31,0,252,31],[38,0,252,38],[39,0,252,39],[40,0,252,40],[45,0,252,45],[47,0,252,47],[49,0,252,49]],[[16,0,253,16],[20,0,253,20],[21,0,253,21],[35,0,253,35],[36,0,253,36],[39,0,253,39],[40,0,253,40],[45,0,253,45],[46,0,253,46],[48,0,253,48]],[[20,0,254,20],[37,0,254,37],[38,0,254,38],[42,0,254,42],[43,0,254,43],[48,0,254,48],[49,0,254,49],[50,0,254,50]],[[17,0,255,17]],[[12,0,256,12],[13,0,256,13],[14,0,256,14],[15,0,256,15]],[[9,0,257,9]],[[8,0,258,8],[12,0,258,12],[29,0,258,29],[30,0,258,30],[36,0,258,36],[41,0,258,41],[42,0,258,42],[44,0,258,44]],[[12,0,259,12],[13,0,259,13],[16,0,259,16],[38,0,259,38],[41,0,259,41],[58,0,259,58],[59,0,259,59],[60,0,259,60],[61,0,259,61],[64,0,259,64],[88,0,259,88],[89,0,259,89]],[[9,0,260,9]],[[13,0,260,15],[17,0,260,19],[34,0,260,36],[35,0,260,37],[41,0,260,43],[44,0,260,46],[45,0,260,47],[47,0,260,49]],[[12,0,261,12],[16,0,261,16],[36,0,261,36],[39,0,261,39],[41,0,261,41],[42,0,261,42]],[[12,0,262,12],[16,0,262,16],[21,0,262,21],[24,0,262,24],[28,0,262,28],[29,0,262,29]],[[12,0,263,12],[29,0,263,29],[30,0,263,30],[37,0,263,37],[38,0,263,38],[39,0,263,39],[44,0,263,44],[46,0,263,46],[48,0,263,48]],[[16,0,264,16],[20,0,264,20],[21,0,264,21],[26,0,264,26],[28,0,264,28]],[[20,0,265,20],[40,0,265,40],[43,0,265,43],[63,0,265,63],[66,0,265,66],[70,0,265,70],[71,0,265,71]],[[17,0,266,17]],[[16,0,267,16],[36,0,267,36],[39,0,267,39],[59,0,267,59],[62,0,267,62],[67,0,267,67],[68,0,267,68]],[[16,0,268,16],[21,0,268,21],[24,0,268,24],[29,0,268,29],[30,0,268,30]],[[12,0,269,12],[13,0,269,13],[14,0,269,14],[15,0,269,15]],[[12,0,270,12],[13,0,270,13],[16,0,270,16],[39,0,270,39],[42,0,270,42],[62,0,270,62],[65,0,270,65],[89,0,270,89],[90,0,270,90]],[[9,0,271,9]],[[8,0,272,8],[15,0,272,15],[16,0,272,16],[17,0,272,17]],[[4,0,273,4],[5,0,273,5]],[[4,0,275,4]],[],[],[[7,0,278,7]],[[4,0,279,12],[27,0,279,35]],[[8,0,280,8],[12,0,280,12],[13,0,280,13],[16,0,280,16],[20,0,280,20],[21,0,280,21]],[[8,0,281,8],[14,0,281,14],[31,0,281,31],[34,0,281,34],[36,0,281,36],[37,0,281,37]],[[8,0,282,8],[12,0,282,12],[16,0,282,16],[17,0,282,17],[30,0,282,30],[32,0,282,32]],[[12,0,283,12],[18,0,283,18],[31,0,283,31],[34,0,283,34],[38,0,283,38],[39,0,283,39],[52,0,283,52],[53,0,283,53],[70,0,283,70],[72,0,283,72],[73,0,283,73]],[[12,0,284,12],[18,0,284,18],[27,0,284,27],[30,0,284,30],[34,0,284,34],[35,0,284,35],[52,0,284,52],[54,0,284,54],[55,0,284,55]],[[12,0,285,12],[21,0,285,21],[22,0,285,22],[29,0,285,29],[30,0,285,30],[31,0,285,31],[36,0,285,36],[38,0,285,38],[40,0,285,40]],[[16,0,286,16],[20,0,286,20],[21,0,286,21],[34,0,286,34],[35,0,286,35],[38,0,286,38],[39,0,286,39],[44,0,286,44],[45,0,286,45],[47,0,286,47]],[[20,0,287,20],[37,0,287,37],[38,0,287,38],[42,0,287,42],[43,0,287,43],[48,0,287,48],[49,0,287,49],[50,0,287,50]],[[17,0,288,17]],[[12,0,289,12],[13,0,289,13],[14,0,289,14],[15,0,289,15]],[[9,0,290,9]],[[8,0,291,8],[12,0,291,12],[29,0,291,29],[30,0,291,30],[36,0,291,36],[41,0,291,41],[42,0,291,42],[44,0,291,44]],[[12,0,292,12],[13,0,292,13],[16,0,292,16],[46,0,292,46],[49,0,292,49],[66,0,292,66],[67,0,292,67],[68,0,292,68],[69,0,292,69],[72,0,292,72],[108,0,292,108],[109,0,292,109]],[[9,0,293,9]],[[13,0,293,15],[17,0,293,19],[34,0,293,36],[35,0,293,37],[41,0,293,43],[44,0,293,46],[45,0,293,47],[47,0,293,49]],[[12,0,294,12],[16,0,294,16],[36,0,294,36],[39,0,294,39],[41,0,294,41],[42,0,294,42]],[[12,0,295,12],[16,0,295,16],[21,0,295,21],[24,0,295,24],[28,0,295,28],[29,0,295,29]],[[12,0,296,12],[29,0,296,29],[30,0,296,30],[37,0,296,37],[38,0,296,38],[39,0,296,39],[44,0,296,44],[46,0,296,46],[48,0,296,48]],[[16,0,297,16],[20,0,297,20],[21,0,297,21],[26,0,297,26],[28,0,297,28]],[[20,0,298,20],[40,0,298,40],[43,0,298,43],[63,0,298,63],[66,0,298,66],[70,0,298,70],[71,0,298,71]],[[17,0,299,17]],[[16,0,300,16],[36,0,300,36],[39,0,300,39],[59,0,300,59],[62,0,300,62],[67,0,300,67],[68,0,300,68]],[[16,0,301,16],[21,0,301,21],[24,0,301,24],[29,0,301,29],[30,0,301,30]],[[12,0,302,12],[13,0,302,13],[14,0,302,14],[15,0,302,15]],[[12,0,303,12],[13,0,303,13],[16,0,303,16],[47,0,303,47],[50,0,303,50],[70,0,303,70],[73,0,303,73],[110,0,303,110],[111,0,303,111]],[[9,0,304,9]],[[8,0,305,8],[15,0,305,15],[16,0,305,16],[17,0,305,17]],[[4,0,306,4],[5,0,306,5]],[[4,0,308,4]],[],[],[[7,0,311,7]],[[4,0,312,12],[29,0,312,37]],[[8,0,313,8],[12,0,313,12],[13,0,313,13],[16,0,313,16],[20,0,313,20],[21,0,313,21]],[[8,0,314,8],[14,0,314,14],[31,0,314,31],[34,0,314,34],[36,0,314,36],[37,0,314,37]],[[8,0,315,8],[12,0,315,12],[16,0,315,16],[17,0,315,17],[30,0,315,30],[32,0,315,32]],[[12,0,316,12],[18,0,316,18],[31,0,316,31],[34,0,316,34],[38,0,316,38],[39,0,316,39],[52,0,316,52],[53,0,316,53],[70,0,316,70],[72,0,316,72],[73,0,316,73]],[[12,0,317,12],[18,0,317,18],[27,0,317,27],[30,0,317,30],[34,0,317,34],[35,0,317,35],[52,0,317,52],[54,0,317,54],[55,0,317,55]],[[12,0,318,12],[25,0,318,25],[26,0,318,26],[33,0,318,33],[34,0,318,34],[35,0,318,35],[40,0,318,40],[42,0,318,42],[44,0,318,44]],[[16,0,319,16],[20,0,319,20],[21,0,319,21],[30,0,319,30],[31,0,319,31],[34,0,319,34],[35,0,319,35],[40,0,319,40],[41,0,319,41],[43,0,319,43]],[[20,0,320,20],[37,0,320,37],[38,0,320,38],[42,0,320,42],[43,0,320,43],[48,0,320,48],[49,0,320,49],[50,0,320,50]],[[17,0,321,17]],[[12,0,322,12],[13,0,322,13],[14,0,322,14],[15,0,322,15]],[[9,0,323,9]],[[8,0,324,8],[12,0,324,12],[29,0,324,29],[30,0,324,30],[36,0,324,36],[41,0,324,41],[42,0,324,42],[44,0,324,44]],[[12,0,325,12],[13,0,325,13],[16,0,325,16],[48,0,325,48],[51,0,325,51],[68,0,325,68],[69,0,325,69],[70,0,325,70],[71,0,325,71],[74,0,325,74],[98,0,325,98],[99,0,325,99]],[[9,0,326,9]],[[13,0,326,15],[17,0,326,19],[34,0,326,36],[35,0,326,37],[41,0,326,43],[44,0,326,46],[45,0,326,47],[47,0,326,49]],[[12,0,327,12],[16,0,327,16],[36,0,327,36],[39,0,327,39],[41,0,327,41],[42,0,327,42]],[[12,0,328,12],[16,0,328,16],[21,0,328,21],[24,0,328,24],[28,0,328,28],[29,0,328,29]],[[12,0,329,12],[29,0,329,29],[30,0,329,30],[37,0,329,37],[38,0,329,38],[39,0,329,39],[44,0,329,44],[46,0,329,46],[48,0,329,48]],[[16,0,330,16],[20,0,330,20],[21,0,330,21],[26,0,330,26],[28,0,330,28]],[[20,0,331,20],[40,0,331,40],[43,0,331,43],[63,0,331,63],[66,0,331,66],[70,0,331,70],[71,0,331,71]],[[17,0,332,17]],[[16,0,333,16],[36,0,333,36],[39,0,333,39],[59,0,333,59],[62,0,333,62],[67,0,333,67],[68,0,333,68]],[[16,0,334,16],[21,0,334,21],[24,0,334,24],[29,0,334,29],[30,0,334,30]],[[12,0,335,12],[13,0,335,13],[14,0,335,14],[15,0,335,15]],[[12,0,336,12],[13,0,336,13],[16,0,336,16],[49,0,336,49],[52,0,336,52],[72,0,336,72],[75,0,336,75],[99,0,336,99],[100,0,336,100]],[[9,0,337,9]],[[8,0,338,8],[15,0,338,15],[16,0,338,16],[17,0,338,17]],[[4,0,339,4],[5,0,339,5]],[[4,0,341,4]],[],[[7,0,343,7]],[[4,0,344,12],[19,0,344,27]],[[8,0,345,8],[14,0,345,14],[20,0,345,20],[23,0,345,23],[27,0,345,27],[30,0,345,30],[32,0,345,40],[33,0,345,41]],[[8,0,346,8],[12,0,346,12],[13,0,346,13],[18,0,346,18],[20,0,346,20],[21,0,346,21],[28,0,346,28],[29,0,346,29],[30,0,346,30],[34,0,346,34],[36,0,346,36],[38,0,346,38]],[[12,0,347,12],[16,0,347,16],[20,0,347,20],[21,0,347,21],[25,0,347,25],[30,0,347,30],[51,0,347,51],[52,0,347,52],[63,0,347,63],[65,0,347,65]],[[16,0,348,16],[22,0,348,22],[27,0,348,27],[30,0,348,62],[34,0,348,67],[35,0,348,68],[40,0,348,73],[42,0,348,75],[43,0,348,76]],[[16,0,349,16],[22,0,349,22],[23,0,349,23],[26,0,349,26],[27,0,349,27],[32,0,349,32],[33,0,349,33],[34,0,349,34]],[[13,0,350,13]],[[8,0,351,8],[9,0,351,9],[10,0,351,10],[11,0,351,11]],[[8,0,352,8],[15,0,352,15],[21,0,352,21],[22,0,352,22]],[[4,0,353,4],[5,0,353,5]],[[4,0,355,4]],[],[],[],[[7,0,359,7]],[[4,0,360,11],[22,0,360,29],[23,0,360,30],[28,0,360,43]],[[8,0,361,8],[12,0,361,12],[23,0,361,23],[26,0,361,56],[30,0,361,60],[31,0,361,61]],[[8,0,362,8],[12,0,362,12],[13,0,362,13],[18,0,362,18],[20,0,362,20],[21,0,362,21],[28,0,362,28],[29,0,362,29],[30,0,362,30],[34,0,362,34],[36,0,362,36],[38,0,362,38]],[[12,0,363,12],[16,0,363,16],[20,0,363,20],[21,0,363,21],[25,0,363,25],[30,0,363,30],[51,0,363,51],[52,0,363,52],[63,0,363,63],[65,0,363,65]],[[16,0,364,16],[22,0,364,22],[28,0,364,28],[31,0,364,92],[35,0,364,96],[36,0,364,97]],[[16,0,365,16],[20,0,365,20],[26,0,365,26],[27,0,365,27],[32,0,365,32],[34,0,365,34],[39,0,365,39],[44,0,365,44],[46,0,365,46]],[[20,0,366,20],[31,0,366,31],[34,0,366,34],[40,0,366,40],[41,0,366,41]],[[17,0,367,17]],[[13,0,368,13]],[[8,0,369,8],[9,0,369,9],[10,0,369,10],[11,0,369,11]],[[8,0,370,8],[15,0,370,15],[26,0,370,26],[27,0,370,27],[28,0,370,28],[29,0,370,29],[40,0,370,40],[41,0,370,41],[45,0,370,45],[47,0,370,47],[48,0,370,48],[49,0,370,49],[50,0,370,50],[54,0,370,54],[55,0,370,55]],[[4,0,371,4],[5,0,371,5]],[[4,0,373,4]],[],[[7,0,375,7]],[[4,0,376,12],[21,0,376,29]],[[8,0,377,8],[14,0,377,14],[20,0,377,20],[23,0,377,23],[27,0,377,27],[30,0,377,30],[32,0,377,40],[33,0,377,41]],[[8,0,378,8],[12,0,378,12],[13,0,378,13],[18,0,378,18],[20,0,378,20],[21,0,378,21],[28,0,378,28],[29,0,378,29],[30,0,378,30],[34,0,378,34],[36,0,378,36],[38,0,378,38]],[[12,0,379,12],[16,0,379,16],[20,0,379,20],[21,0,379,21],[25,0,379,25],[30,0,379,30],[51,0,379,51],[52,0,379,52],[67,0,379,67],[69,0,379,69]],[[16,0,380,16],[22,0,380,22],[27,0,380,27],[30,0,380,64],[34,0,380,69],[35,0,380,70],[40,0,380,75],[42,0,380,77],[43,0,380,78]],[[16,0,381,16],[22,0,381,22],[23,0,381,23],[26,0,381,26],[27,0,381,27],[32,0,381,32],[33,0,381,33],[34,0,381,34]],[[13,0,382,13]],[[8,0,383,8],[9,0,383,9],[10,0,383,10],[11,0,383,11]],[[8,0,384,8],[15,0,384,15],[21,0,384,21],[22,0,384,22]],[[4,0,385,4],[5,0,385,5]],[[4,0,387,4]],[],[],[],[[7,0,391,7]],[[4,0,392,11],[24,0,392,31],[25,0,392,32],[30,0,392,45]],[[8,0,393,8],[12,0,393,12],[29,0,393,29],[32,0,393,64],[36,0,393,68],[37,0,393,69]],[[8,0,394,8],[12,0,394,12],[13,0,394,13],[18,0,394,18],[20,0,394,20],[21,0,394,21],[28,0,394,28],[29,0,394,29],[30,0,394,30],[34,0,394,34],[36,0,394,36],[38,0,394,38]],[[12,0,395,12],[16,0,395,16],[20,0,395,20],[21,0,395,21],[25,0,395,25],[30,0,395,30],[51,0,395,51],[52,0,395,52],[67,0,395,67],[69,0,395,69]],[[16,0,396,16],[22,0,396,22],[29,0,396,29],[32,0,396,97],[36,0,396,101],[37,0,396,102]],[[16,0,397,16],[20,0,397,20],[27,0,397,27],[28,0,397,28],[33,0,397,33],[35,0,397,35],[40,0,397,40],[45,0,397,45],[47,0,397,47]],[[20,0,398,20],[37,0,398,37],[40,0,398,40],[47,0,398,47],[48,0,398,48]],[[17,0,399,17]],[[13,0,400,13]],[[8,0,401,8],[9,0,401,9],[10,0,401,10],[11,0,401,11]],[[8,0,402,8],[15,0,402,15],[32,0,402,32],[33,0,402,33],[34,0,402,34],[35,0,402,35],[52,0,402,52],[53,0,402,53],[57,0,402,57],[59,0,402,59],[60,0,402,60],[61,0,402,61],[62,0,402,62],[66,0,402,66],[67,0,402,67]],[[4,0,403,4],[5,0,403,5]],[[4,0,405,4]],[],[],[[7,0,408,7]],[[4,0,409,12],[17,0,409,25]],[[8,0,410,8],[12,0,410,12],[13,0,410,13],[16,0,410,16],[20,0,410,20],[21,0,410,21]],[[8,0,411,8],[14,0,411,14],[28,0,411,28],[31,0,411,31],[33,0,411,33],[34,0,411,34]],[[8,0,412,8],[12,0,412,12],[16,0,412,16],[17,0,412,17],[30,0,412,30],[32,0,412,32]],[[12,0,413,12],[18,0,413,18],[28,0,413,28],[31,0,413,31],[35,0,413,35],[36,0,413,36],[49,0,413,49],[50,0,413,50],[57,0,413,57],[59,0,413,59],[60,0,413,60]],[[12,0,414,12],[18,0,414,18],[24,0,414,24],[27,0,414,27],[31,0,414,31],[32,0,414,32],[39,0,414,39],[41,0,414,41],[42,0,414,42]],[[12,0,415,12],[18,0,415,18],[19,0,415,19],[26,0,415,26],[27,0,415,27],[28,0,415,28],[35,0,415,35],[37,0,415,37],[39,0,415,39]],[[16,0,416,16],[20,0,416,20],[21,0,416,21],[31,0,416,31],[32,0,416,32],[35,0,416,35],[36,0,416,36],[43,0,416,43],[44,0,416,44],[46,0,416,46]],[[20,0,417,20],[34,0,417,34],[35,0,417,35],[39,0,417,39],[40,0,417,40],[47,0,417,47],[48,0,417,48],[49,0,417,49]],[[17,0,418,17]],[[12,0,419,12],[13,0,419,13],[14,0,419,14],[15,0,419,15]],[[9,0,420,9]],[[8,0,421,8],[12,0,421,12],[26,0,421,26],[27,0,421,27],[33,0,421,33],[38,0,421,38],[39,0,421,39],[41,0,421,41]],[[12,0,422,12],[13,0,422,13],[16,0,422,16],[29,0,422,29],[32,0,422,32],[46,0,422,46],[47,0,422,47],[48,0,422,48],[49,0,422,49],[52,0,422,52],[89,0,422,89],[90,0,422,90]],[[9,0,423,9]],[[13,0,423,15],[17,0,423,19],[31,0,423,33],[32,0,423,34],[38,0,423,40],[41,0,423,43],[42,0,423,44],[44,0,423,46]],[[12,0,424,12],[16,0,424,16],[33,0,424,33],[36,0,424,36],[38,0,424,38],[39,0,424,39]],[[12,0,425,12],[16,0,425,16],[21,0,425,21],[24,0,425,24],[28,0,425,28],[29,0,425,29]],[[12,0,426,12],[26,0,426,26],[27,0,426,27],[34,0,426,34],[35,0,426,35],[36,0,426,36],[39,0,426,39],[41,0,426,41],[43,0,426,43]],[[16,0,427,16],[20,0,427,20],[21,0,427,21],[26,0,427,26],[28,0,427,28]],[[20,0,428,20],[37,0,428,37],[40,0,428,40],[57,0,428,57],[60,0,428,60],[64,0,428,64],[65,0,428,65]],[[17,0,429,17]],[[16,0,430,16],[33,0,430,33],[36,0,430,36],[53,0,430,53],[56,0,430,56],[59,0,430,59],[62,0,430,62],[65,0,430,65],[68,0,430,68],[71,0,430,71],[72,0,430,72]],[[16,0,431,16],[21,0,431,21],[24,0,431,24],[29,0,431,29],[30,0,431,30]],[[12,0,432,12],[13,0,432,13],[14,0,432,14],[15,0,432,15]],[[12,0,433,12],[13,0,433,13],[16,0,433,16],[29,0,433,29],[32,0,433,32],[49,0,433,49],[52,0,433,52],[89,0,433,89],[90,0,433,90]],[[9,0,434,9]],[[8,0,435,8],[15,0,435,15],[16,0,435,16],[17,0,435,17]],[[4,0,436,4],[5,0,436,5]],[[4,0,438,4]],[],[],[[7,0,441,7]],[[4,0,442,12],[19,0,442,27]],[[8,0,443,8],[12,0,443,12],[13,0,443,13],[16,0,443,16],[20,0,443,20],[21,0,443,21]],[[8,0,444,8],[14,0,444,14],[28,0,444,28],[31,0,444,31],[33,0,444,33],[34,0,444,34]],[[8,0,445,8],[12,0,445,12],[16,0,445,16],[17,0,445,17],[30,0,445,30],[32,0,445,32]],[[12,0,446,12],[18,0,446,18],[28,0,446,28],[31,0,446,31],[35,0,446,35],[36,0,446,36],[49,0,446,49],[50,0,446,50],[57,0,446,57],[59,0,446,59],[60,0,446,60]],[[12,0,447,12],[18,0,447,18],[24,0,447,24],[27,0,447,27],[31,0,447,31],[32,0,447,32],[39,0,447,39],[41,0,447,41],[42,0,447,42]],[[12,0,448,12],[22,0,448,22],[23,0,448,23],[30,0,448,30],[31,0,448,31],[32,0,448,32],[39,0,448,39],[41,0,448,41],[43,0,448,43]],[[16,0,449,16],[20,0,449,20],[21,0,449,21],[27,0,449,27],[28,0,449,28],[31,0,449,31],[32,0,449,32],[39,0,449,39],[40,0,449,40],[42,0,449,42]],[[20,0,450,20],[34,0,450,34],[35,0,450,35],[39,0,450,39],[40,0,450,40],[47,0,450,47],[48,0,450,48],[49,0,450,49]],[[17,0,451,17]],[[12,0,452,12],[13,0,452,13],[14,0,452,14],[15,0,452,15]],[[9,0,453,9]],[[8,0,454,8],[12,0,454,12],[26,0,454,26],[27,0,454,27],[33,0,454,33],[38,0,454,38],[39,0,454,39],[41,0,454,41]],[[12,0,455,12],[13,0,455,13],[16,0,455,16],[31,0,455,31],[34,0,455,34],[48,0,455,48],[49,0,455,49],[50,0,455,50],[51,0,455,51],[54,0,455,54],[79,0,455,79],[80,0,455,80]],[[9,0,456,9]],[[13,0,456,15],[17,0,456,19],[31,0,456,33],[32,0,456,34],[38,0,456,40],[41,0,456,43],[42,0,456,44],[44,0,456,46]],[[12,0,457,12],[16,0,457,16],[33,0,457,33],[36,0,457,36],[38,0,457,38],[39,0,457,39]],[[12,0,458,12],[16,0,458,16],[21,0,458,21],[24,0,458,24],[28,0,458,28],[29,0,458,29]],[[12,0,459,12],[26,0,459,26],[27,0,459,27],[34,0,459,34],[35,0,459,35],[36,0,459,36],[39,0,459,39],[41,0,459,41],[43,0,459,43]],[[16,0,460,16],[20,0,460,20],[21,0,460,21],[26,0,460,26],[28,0,460,28]],[[20,0,461,20],[37,0,461,37],[40,0,461,40],[57,0,461,57],[60,0,461,60],[64,0,461,64],[65,0,461,65]],[[17,0,462,17]],[[16,0,463,16],[33,0,463,33],[36,0,463,36],[53,0,463,53],[56,0,463,56],[59,0,463,59],[62,0,463,62],[65,0,463,65],[68,0,463,68],[71,0,463,71],[72,0,463,72]],[[16,0,464,16],[21,0,464,21],[24,0,464,24],[29,0,464,29],[30,0,464,30]],[[12,0,465,12],[13,0,465,13],[14,0,465,14],[15,0,465,15]],[[12,0,466,12],[13,0,466,13],[16,0,466,16],[31,0,466,31],[34,0,466,34],[51,0,466,51],[54,0,466,54],[78,0,466,78],[79,0,466,79]],[[9,0,467,9]],[[8,0,468,8],[15,0,468,15],[16,0,468,16],[17,0,468,17]],[[4,0,469,4],[5,0,469,5]],[[4,0,471,4]],[],[[7,0,473,7]],[[4,0,474,12],[11,0,474,19]],[[8,0,475,8],[14,0,475,14],[20,0,475,20],[23,0,475,23],[27,0,475,27],[30,0,475,30],[32,0,475,40],[33,0,475,41]],[[8,0,476,8],[12,0,476,12],[13,0,476,13],[18,0,476,18],[20,0,476,20],[21,0,476,21],[28,0,476,28],[29,0,476,29],[30,0,476,30],[34,0,476,34],[36,0,476,36],[38,0,476,38]],[[12,0,477,12],[16,0,477,16],[20,0,477,20],[21,0,477,21],[25,0,477,25],[30,0,477,30],[51,0,477,51],[52,0,477,52],[61,0,477,61],[65,0,477,65],[69,0,477,69],[70,0,477,70],[74,0,477,74],[79,0,477,79],[100,0,477,100],[101,0,477,101],[110,0,477,110],[112,0,477,112]],[[16,0,478,16],[22,0,478,22],[29,0,478,29],[32,0,478,61],[36,0,478,66],[37,0,478,67],[44,0,478,74],[46,0,478,76],[47,0,478,77]],[[16,0,479,16],[22,0,479,22],[23,0,479,23],[26,0,479,26],[27,0,479,27],[34,0,479,34],[35,0,479,35],[36,0,479,36]],[[13,0,480,13]],[[8,0,481,8],[9,0,481,9],[10,0,481,10],[11,0,481,11]],[[8,0,482,8],[15,0,482,15],[21,0,482,21],[22,0,482,22]],[[4,0,483,4],[5,0,483,5]],[[4,0,485,11],[9,0,485,16]],[[8,0,486,8],[15,0,486,15],[19,0,486,19],[20,0,486,20],[26,0,486,26],[27,0,486,27]],[[4,0,487,4],[5,0,487,5]],[[4,0,489,4],[24,0,489,24],[25,0,489,25],[42,0,489,51]],[[8,0,490,8],[12,0,490,12],[13,0,490,13],[31,0,490,31],[34,0,490,34],[51,0,490,51],[52,0,490,52]],[[4,0,491,4],[5,0,491,5]],[[4,0,493,4],[11,0,493,11],[12,0,493,12],[16,0,493,24]],[[8,0,494,8],[12,0,494,12],[13,0,494,13],[19,0,494,19],[20,0,494,20],[24,0,494,24],[25,0,494,25],[29,0,494,29],[50,0,494,50],[51,0,494,51],[55,0,494,55],[56,0,494,56],[57,0,494,57],[58,0,494,58]],[[4,0,495,4],[5,0,495,5]],[[4,0,497,4],[18,0,497,18],[19,0,497,19],[24,0,497,32],[26,0,497,34],[30,0,497,46]],[[8,0,498,8],[12,0,498,12],[13,0,498,13],[19,0,498,19],[20,0,498,20],[24,0,498,24],[25,0,498,25],[29,0,498,29],[57,0,498,57],[58,0,498,58],[63,0,498,63],[65,0,498,65],[69,0,498,69],[70,0,498,70],[71,0,498,71],[72,0,498,72]],[[4,0,499,4],[5,0,499,5]],[[4,0,501,4],[15,0,501,15],[16,0,501,16],[23,0,501,31],[25,0,501,33],[34,0,501,50]],[[8,0,502,8],[12,0,502,12],[13,0,502,13],[19,0,502,19],[20,0,502,20],[24,0,502,24],[25,0,502,25],[29,0,502,29],[54,0,502,54],[55,0,502,55],[62,0,502,62],[64,0,502,64],[73,0,502,73],[74,0,502,74],[75,0,502,75],[76,0,502,76]],[[4,0,503,4],[5,0,503,5]],[[4,0,505,4],[13,0,505,13],[14,0,505,14],[21,0,505,29]],[[8,0,506,8],[31,0,506,31]],[[8,0,507,8],[14,0,507,14],[21,0,507,21],[24,0,507,24],[28,0,507,28],[29,0,507,29],[49,0,507,49],[51,0,507,51],[52,0,507,52]],[[8,0,508,8],[12,0,508,12],[13,0,508,13],[20,0,508,20],[24,0,508,24],[31,0,508,31],[36,0,508,36],[43,0,508,43],[45,0,508,45]],[[12,0,509,12],[36,0,509,36]],[[12,0,510,12],[18,0,510,18],[22,0,510,22],[27,0,510,27],[28,0,510,28],[34,0,510,34],[35,0,510,35],[103,0,510,103],[105,0,511,16],[112,0,511,23],[114,0,511,25],[121,0,511,32],[123,0,511,34],[127,0,511,38],[128,0,511,39],[142,0,511,53],[144,0,511,55],[145,0,511,56],[146,0,511,57],[147,0,511,58]],[[9,0,512,9]],[[8,0,513,8],[12,0,513,12],[13,0,513,13],[19,0,513,19],[20,0,513,20],[24,0,513,24],[25,0,513,25],[29,0,513,29],[52,0,513,52],[53,0,513,53],[60,0,513,60],[61,0,513,61],[62,0,513,62],[63,0,513,63]],[[4,0,514,4],[5,0,514,5]],[[4,0,516,4],[15,0,516,15],[16,0,516,16],[23,0,516,31],[25,0,516,33],[34,0,516,50]],[[8,0,517,8],[12,0,517,12],[13,0,517,13],[19,0,517,19],[20,0,517,20],[24,0,517,24],[25,0,517,25],[29,0,517,29],[54,0,517,54],[55,0,517,55],[62,0,517,62],[64,0,517,64],[73,0,517,73],[74,0,517,74],[75,0,517,75],[76,0,517,76]],[[4,0,518,4],[5,0,518,5]],[[4,0,520,4],[20,0,520,20],[21,0,520,21],[26,0,520,34],[28,0,520,36],[32,0,520,40]],[[8,0,521,8],[12,0,521,12],[13,0,521,13],[19,0,521,19],[20,0,521,20],[24,0,521,24],[25,0,521,25],[29,0,521,29],[59,0,521,59],[60,0,521,60],[65,0,521,65],[67,0,521,67],[71,0,521,71],[72,0,521,72],[73,0,521,73],[74,0,521,74]],[[4,0,522,4],[5,0,522,5]],[[4,0,524,4],[17,0,524,17],[18,0,524,18],[22,0,524,30]],[[8,0,525,8],[12,0,525,12],[13,0,525,13],[19,0,525,19],[20,0,525,20],[24,0,525,24],[25,0,525,25],[29,0,525,29],[56,0,525,56],[57,0,525,57],[61,0,525,61],[63,0,525,63],[67,0,525,67],[68,0,525,68],[75,0,525,75],[76,0,525,76],[77,0,525,77],[78,0,525,78]],[[4,0,526,4],[5,0,526,5]],[[4,0,528,4]],[],[],[[7,0,531,7]],[[4,0,532,12],[24,0,532,32]],[[8,0,533,8],[14,0,533,14],[22,0,533,22],[25,0,533,25],[27,0,533,27],[28,0,533,28]],[[8,0,534,8],[12,0,534,12],[13,0,534,13],[19,0,534,19],[20,0,534,20],[27,0,534,27],[28,0,534,28],[29,0,534,29],[33,0,534,33],[35,0,534,35],[37,0,534,37]],[[12,0,535,12],[20,0,535,20],[24,0,535,24],[25,0,535,25],[29,0,535,29],[31,0,535,31]],[[16,0,536,16],[21,0,536,21],[42,0,536,42],[43,0,536,43],[52,0,536,52]],[[20,0,537,20],[28,0,537,28],[29,0,537,29],[33,0,537,33],[34,0,537,63],[38,0,537,68],[39,0,537,69],[46,0,537,76],[48,0,537,78],[49,0,537,79],[50,0,537,80]],[[20,0,538,20],[26,0,538,26]],[[16,0,539,16],[21,0,539,21],[42,0,539,42],[43,0,539,43],[50,0,539,50]],[[20,0,540,20],[26,0,540,26],[33,0,540,33],[36,0,540,63],[40,0,540,68],[41,0,540,69],[48,0,540,76],[50,0,540,78],[51,0,540,79]],[[20,0,541,20],[24,0,541,24],[32,0,541,32],[33,0,541,33],[39,0,541,39],[44,0,541,44],[45,0,541,45],[49,0,541,49],[57,0,541,57],[58,0,541,58],[66,0,541,66],[67,0,541,67],[73,0,541,73],[76,0,541,76],[77,0,541,77],[78,0,541,78],[83,0,541,83],[90,0,541,90],[92,0,541,92]],[[24,0,542,24],[48,0,542,48]],[[24,0,543,24],[30,0,543,30],[37,0,543,37],[40,0,543,40],[41,0,543,41],[49,0,543,49],[50,0,543,50],[56,0,543,56],[61,0,543,61],[62,0,543,62],[63,0,543,63],[64,0,543,64],[65,0,543,65],[66,0,543,66],[75,0,543,75],[76,0,543,76],[77,0,543,77],[78,0,543,78],[86,0,543,86],[87,0,543,87],[95,0,543,95],[96,0,543,96],[102,0,543,102],[105,0,543,105],[106,0,543,106],[107,0,543,107],[108,0,543,108]],[[24,0,544,24],[30,0,544,30],[34,0,544,34],[39,0,544,39],[40,0,544,40],[46,0,544,46],[47,0,544,47],[115,0,544,115],[117,0,545,28],[124,0,545,35],[126,0,545,37],[133,0,545,44],[135,0,545,46],[139,0,545,50],[140,0,545,51],[154,0,545,65],[156,0,545,67],[157,0,545,68],[158,0,545,69],[159,0,545,70]],[[21,0,546,21]],[[20,0,547,20],[28,0,547,28],[29,0,547,29],[32,0,547,32],[34,0,547,34],[35,0,547,35]],[[13,0,548,13]],[[8,0,549,8],[9,0,549,9],[10,0,549,10],[11,0,549,11]],[[8,0,550,8],[15,0,550,15],[23,0,550,23],[24,0,550,24],[30,0,550,30],[35,0,550,35],[36,0,550,36],[37,0,550,37],[38,0,550,38],[39,0,550,39],[43,0,550,43],[44,0,550,44],[45,0,550,45],[46,0,550,46],[54,0,550,54],[55,0,550,55],[63,0,550,63],[64,0,550,64],[70,0,550,70],[73,0,550,73],[74,0,550,74],[75,0,550,75],[76,0,550,76]],[[4,0,551,4],[5,0,551,5]],[[1,0,552,1]]],"sourcesContent":["import {ParsedMessagePart, ParsedMessagePartType} from './parsed-message-part';\r\nimport {ParsedMessagePartText} from './parsed-message-part-text';\r\nimport {ParsedMessagePartPlaceholder} from './parsed-message-part-placeholder';\r\nimport {ParsedMessagePartStartTag} from './parsed-message-part-start-tag';\r\nimport {ParsedMessagePartEndTag} from './parsed-message-part-end-tag';\r\nimport {INormalizedMessage, ValidationErrors} from '../api/i-normalized-message';\r\nimport {DOMUtilities} from './dom-utilities';\r\nimport {IMessageParser} from './i-message-parser';\r\nimport {format} from 'util';\r\nimport {isNullOrUndefined} from 'is-what';\r\nimport {IICUMessage, IICUMessageTranslation} from '../api/i-icu-message';\r\nimport {ParsedMessagePartICUMessage} from './parsed-message-part-icu-message';\r\nimport {ParsedMessagePartICUMessageRef} from './parsed-message-part-icu-message-ref';\r\nimport {ICUMessage} from './icu-message';\r\nimport {ParsedMessagePartEmptyTag} from './parsed-message-part-empty-tag';\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message text read from a translation file.\r\n * Can contain placeholders, tags, text.\r\n * This class is a representation independent of the concrete format.\r\n */\r\nexport class ParsedMessage implements INormalizedMessage {\r\n\r\n    /**\r\n     * Parser that created this message (determines the native format).\r\n     */\r\n    private _parser: IMessageParser;\r\n\r\n    /**\r\n     * The message where this one stems from as translation.\r\n     * Optional, set only for messages created by calling translate.\r\n     */\r\n    private sourceMessage: ParsedMessage;\r\n\r\n    /**\r\n     * The parts of the message.\r\n     */\r\n    private _parts: ParsedMessagePart[];\r\n\r\n    /**\r\n     * messages xml representation.\r\n     */\r\n    private _xmlRepresentation: Element;\r\n\r\n    constructor(parser: IMessageParser, sourceMessage: ParsedMessage) {\r\n        this._parser = parser;\r\n        this.sourceMessage = sourceMessage;\r\n        this._parts = [];\r\n    }\r\n\r\n    /**\r\n     * Get the parser (for tests only, not part of API)\r\n     * @return parser\r\n     */\r\n    getParser(): IMessageParser {\r\n        return this._parser;\r\n    }\r\n\r\n    /**\r\n     * Create a new normalized message as a translation of this one.\r\n     * @param normalizedString the translation in normalized form.\r\n     * If the message is an ICUMessage (getICUMessage returns a value), use translateICUMessage instead.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is an ICU message.\r\n     */\r\n    translate(normalizedString: string): INormalizedMessage {\r\n        if (isNullOrUndefined(this.getICUMessage())) {\r\n            return this._parser.parseNormalizedString(<string> normalizedString, this);\r\n        } else {\r\n            throw new Error(format('cannot translate ICU message with simple string, use translateICUMessage() instead (\"%s\", \"%s\")',\r\n                normalizedString, this.asNativeString()));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a new normalized icu message as a translation of this one.\r\n     * @param icuTranslation the translation, this is the translation of the ICU message,\r\n     * which is not a string, but a collections of the translations of the different categories.\r\n     * The message must be an ICUMessage (getICUMessage returns a value)\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is not an ICU message.\r\n     */\r\n    translateICUMessage(icuTranslation: IICUMessageTranslation): INormalizedMessage {\r\n        const icuMessage: IICUMessage = this.getICUMessage();\r\n        if (isNullOrUndefined(icuMessage)) {\r\n            throw new Error(format('this is not an ICU message, use translate() instead (\"%s\", \"%s\")',\r\n                icuTranslation,  this.asNativeString()));\r\n        } else {\r\n            const translatedICUMessage: IICUMessage = icuMessage.translate(icuTranslation);\r\n            return this._parser.parseICUMessage(translatedICUMessage.asNativeString(), this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a new normalized message from a native xml string as a translation of this one.\r\n     * @param nativeString xml string in the format of the underlying file format.\r\n     * Throws an error if native string is not acceptable.\r\n     */\r\n    translateNativeString(nativeString: string): INormalizedMessage {\r\n        return this._parser.createNormalizedMessageFromXMLString(nativeString, this);\r\n    }\r\n\r\n    /**\r\n     * normalized message as string.\r\n     * @param displayFormat optional way to determine the exact syntax.\r\n     * Allowed formats are defined as constants NORMALIZATION_FORMAT...\r\n     */\r\n    public asDisplayString(displayFormat?: string) {\r\n        return this._parts.map((part) => part.asDisplayString(displayFormat)).join('');\r\n    }\r\n\r\n    /**\r\n     * Returns the message content as format dependent native string.\r\n     * Includes all format specific markup like <ph id=\"INTERPOLATION\" ../> ..\r\n     */\r\n    asNativeString(): string {\r\n        if (isNullOrUndefined(this.getICUMessage())) {\r\n            return DOMUtilities.getXMLContent(this._xmlRepresentation);\r\n        } else {\r\n            return this.getICUMessage().asNativeString();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Validate the message.\r\n     * @return null, if ok, error object otherwise.\r\n     */\r\n    public validate(): ValidationErrors | null {\r\n        let hasErrors = false;\r\n        const errors: ValidationErrors = {};\r\n        let e;\r\n        e = this.checkPlaceholderAdded();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.placeholderAdded = e;\r\n            hasErrors = true;\r\n        }\r\n        e = this.checkICUMessageRefRemoved();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.icuMessageRefRemoved = e;\r\n            hasErrors = true;\r\n        }\r\n        e = this.checkICUMessageRefAdded();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.icuMessageRefAdded = e;\r\n            hasErrors = true;\r\n        }\r\n        return hasErrors ? errors : null;\r\n    }\r\n\r\n    /**\r\n     * Validate the message, check for warnings only.\r\n     * A warning shows, that the message is acceptable, but misses something.\r\n     * E.g. if you remove a placeholder or a special tag from the original message, this generates a warning.\r\n     * @return null, if no warning, warnings as error object otherwise.\r\n     */\r\n    validateWarnings(): ValidationErrors | null {\r\n        let hasWarnings = false;\r\n        const warnings: ValidationErrors = {};\r\n        let w;\r\n        w = this.checkPlaceholderRemoved();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.placeholderRemoved = w;\r\n            hasWarnings = true;\r\n        }\r\n        w = this.checkTagRemoved();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.tagRemoved = w;\r\n            hasWarnings = true;\r\n        }\r\n        w = this.checkTagAdded();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.tagAdded = w;\r\n            hasWarnings = true;\r\n        }\r\n        return hasWarnings ? warnings : null;\r\n    }\r\n\r\n    /**\r\n     * Test wether this message is an ICU message.\r\n     * @return true, if it is an ICU message.\r\n     */\r\n    isICUMessage(): boolean {\r\n        return this._parts.length === 1 && this._parts[0].type === ParsedMessagePartType.ICU_MESSAGE;\r\n    }\r\n\r\n    /**\r\n     * Test wether this message contains an ICU message reference.\r\n     * ICU message references are something like <x ID=\"ICU\"../>.\r\n     * @return true, if there is an ICU message reference in the message.\r\n     */\r\n    containsICUMessageRef(): boolean {\r\n        return this._parts.findIndex(part => part.type === ParsedMessagePartType.ICU_MESSAGE_REF) >= 0;\r\n    }\r\n\r\n    /**\r\n     * If this message is an ICU message, returns its structure.\r\n     * Otherwise this method returns null.\r\n     * @return ICUMessage or null.\r\n     */\r\n    public getICUMessage(): IICUMessage {\r\n        if (this._parts.length === 1 && this._parts[0].type === ParsedMessagePartType.ICU_MESSAGE) {\r\n            const icuPart = <ParsedMessagePartICUMessage> this._parts[0];\r\n            return icuPart.getICUMessage();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Check for added placeholder.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    private checkPlaceholderAdded(): any {\r\n        let e = null;\r\n        const suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            const sourcePlaceholders = this.sourceMessage.allPlaceholders();\r\n            const myPlaceholders = this.allPlaceholders();\r\n            myPlaceholders.forEach((index) => {\r\n                if (!sourcePlaceholders.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'added placeholder ' + suspiciousIndexes[0] + ', which is not in original message';\r\n        } else if (suspiciousIndexes.length > 1) {\r\n            let allSuspiciousIndexes = '';\r\n            let first = true;\r\n            suspiciousIndexes.forEach((index) => {\r\n                if (!first) {\r\n                    allSuspiciousIndexes = allSuspiciousIndexes + ', ';\r\n                }\r\n                allSuspiciousIndexes = allSuspiciousIndexes + index;\r\n                first = false;\r\n            });\r\n            e = 'added placeholders ' + allSuspiciousIndexes + ', which are not in original message';\r\n        }\r\n        return e;\r\n    }\r\n\r\n    /**\r\n     * Check for removed placeholder.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    private checkPlaceholderRemoved(): any {\r\n        let w = null;\r\n        const suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            const sourcePlaceholders = this.sourceMessage.allPlaceholders();\r\n            const myPlaceholders = this.allPlaceholders();\r\n            sourcePlaceholders.forEach((index) => {\r\n                if (!myPlaceholders.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            w = 'removed placeholder ' + suspiciousIndexes[0] + ' from original message';\r\n        } else if (suspiciousIndexes.length > 1) {\r\n            let allSuspiciousIndexes = '';\r\n            let first = true;\r\n            suspiciousIndexes.forEach((index) => {\r\n                if (!first) {\r\n                    allSuspiciousIndexes = allSuspiciousIndexes + ', ';\r\n                }\r\n                allSuspiciousIndexes = allSuspiciousIndexes + index;\r\n                first = false;\r\n            });\r\n            w = 'removed placeholders ' + allSuspiciousIndexes + ' from original message';\r\n        }\r\n        return w;\r\n    }\r\n\r\n    /**\r\n     * Check for added ICU Message Refs.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    private checkICUMessageRefAdded(): any {\r\n        let e = null;\r\n        const suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            const sourceICURefs = this.sourceMessage.allICUMessageRefs();\r\n            const myICURefs = this.allICUMessageRefs();\r\n            myICURefs.forEach((index) => {\r\n                if (!sourceICURefs.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'added ICU message reference ' + suspiciousIndexes[0] + ', which is not in original message';\r\n        } else if (suspiciousIndexes.length > 1) {\r\n            let allSuspiciousIndexes = '';\r\n            let first = true;\r\n            suspiciousIndexes.forEach((index) => {\r\n                if (!first) {\r\n                    allSuspiciousIndexes = allSuspiciousIndexes + ', ';\r\n                }\r\n                allSuspiciousIndexes = allSuspiciousIndexes + index;\r\n                first = false;\r\n            });\r\n            e = 'added ICU message references ' + allSuspiciousIndexes + ', which are not in original message';\r\n        }\r\n        return e;\r\n    }\r\n\r\n    /**\r\n     * Check for removed ICU Message Refs.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    private checkICUMessageRefRemoved(): any {\r\n        let e = null;\r\n        const suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            const sourceICURefs = this.sourceMessage.allICUMessageRefs();\r\n            const myICURefs = this.allICUMessageRefs();\r\n            sourceICURefs.forEach((index) => {\r\n                if (!myICURefs.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'removed ICU message reference ' + suspiciousIndexes[0] + ' from original message';\r\n        } else if (suspiciousIndexes.length > 1) {\r\n            let allSuspiciousIndexes = '';\r\n            let first = true;\r\n            suspiciousIndexes.forEach((index) => {\r\n                if (!first) {\r\n                    allSuspiciousIndexes = allSuspiciousIndexes + ', ';\r\n                }\r\n                allSuspiciousIndexes = allSuspiciousIndexes + index;\r\n                first = false;\r\n            });\r\n            e = 'removed ICU message references ' + allSuspiciousIndexes + ' from original message';\r\n        }\r\n        return e;\r\n    }\r\n\r\n    /**\r\n     * Get all indexes of placeholders used in the message.\r\n     */\r\n    private allPlaceholders(): Set<number> {\r\n        const result = new Set<number>();\r\n        this.parts().forEach((part) => {\r\n            if (part.type === ParsedMessagePartType.PLACEHOLDER) {\r\n                const index = (<ParsedMessagePartPlaceholder> part).index();\r\n                result.add(index);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Return the disp-Attribute of placeholder\r\n     * @param index index of placeholder\r\n     * @return disp or null\r\n     */\r\n    public getPlaceholderDisp(index: number): string {\r\n        let placeHolder: ParsedMessagePartPlaceholder = null;\r\n        this.parts().forEach((part) => {\r\n            if (part.type === ParsedMessagePartType.PLACEHOLDER) {\r\n                const phPart: ParsedMessagePartPlaceholder = <ParsedMessagePartPlaceholder> part;\r\n                if (phPart.index() === index) {\r\n                    placeHolder = phPart;\r\n                }\r\n            }\r\n        });\r\n        return placeHolder ? placeHolder.disp() : null;\r\n    }\r\n\r\n    /**\r\n     * Get all indexes of ICU message refs used in the message.\r\n     */\r\n    private allICUMessageRefs(): Set<number> {\r\n        const result = new Set<number>();\r\n        this.parts().forEach((part) => {\r\n            if (part.type === ParsedMessagePartType.ICU_MESSAGE_REF) {\r\n                const index = (<ParsedMessagePartICUMessageRef> part).index();\r\n                result.add(index);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Return the disp-Attribute of icu message ref\r\n     * @param index of ref\r\n     * @return disp or null\r\n     */\r\n    public getICUMessageRefDisp(index: number): string {\r\n        let icuMessageRefPart: ParsedMessagePartICUMessageRef = null;\r\n        this.parts().forEach((part) => {\r\n            if (part.type === ParsedMessagePartType.ICU_MESSAGE_REF) {\r\n                const refPart: ParsedMessagePartICUMessageRef = <ParsedMessagePartICUMessageRef> part;\r\n                if (refPart.index() === index) {\r\n                    icuMessageRefPart = refPart;\r\n                }\r\n            }\r\n        });\r\n        return icuMessageRefPart ? icuMessageRefPart.disp() : null;\r\n    }\r\n\r\n    /**\r\n     * Check for added tags.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    private checkTagAdded(): any {\r\n        let e = null;\r\n        const suspiciousTags = [];\r\n        if (this.sourceMessage) {\r\n            const sourceTags = this.sourceMessage.allTags();\r\n            const myTags = this.allTags();\r\n            myTags.forEach((tagName) => {\r\n                if (!sourceTags.has(tagName)) {\r\n                    suspiciousTags.push(tagName);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousTags.length === 1) {\r\n            e = 'added tag <' + suspiciousTags[0] + '>, which is not in original message';\r\n        } else if (suspiciousTags.length > 1) {\r\n            let allSuspiciousTags = '';\r\n            let first = true;\r\n            suspiciousTags.forEach((tag) => {\r\n                if (!first) {\r\n                    allSuspiciousTags = allSuspiciousTags + ', ';\r\n                }\r\n                allSuspiciousTags = allSuspiciousTags + '<' + tag + '>';\r\n                first = false;\r\n            });\r\n            e = 'added tags ' + allSuspiciousTags + ', which are not in original message';\r\n        }\r\n        return e;\r\n    }\r\n\r\n    /**\r\n     * Check for removed tags.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    private checkTagRemoved(): any {\r\n        let w = null;\r\n        const suspiciousTags = [];\r\n        if (this.sourceMessage) {\r\n            const sourceTags = this.sourceMessage.allTags();\r\n            const myTags = this.allTags();\r\n            sourceTags.forEach((tagName) => {\r\n                if (!myTags.has(tagName)) {\r\n                    suspiciousTags.push(tagName);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousTags.length === 1) {\r\n            w = 'removed tag <' + suspiciousTags[0] + '> from original message';\r\n        } else if (suspiciousTags.length > 1) {\r\n            let allSuspiciousTags = '';\r\n            let first = true;\r\n            suspiciousTags.forEach((tag) => {\r\n                if (!first) {\r\n                    allSuspiciousTags = allSuspiciousTags + ', ';\r\n                }\r\n                allSuspiciousTags = allSuspiciousTags + '<' + tag + '>';\r\n                first = false;\r\n            });\r\n            w = 'removed tags ' + allSuspiciousTags + ' from original message';\r\n        }\r\n        return w;\r\n    }\r\n\r\n    /**\r\n     * Get all tag names used in the message.\r\n     */\r\n    private allTags(): Set<string> {\r\n        const result = new Set<string>();\r\n        this.parts().forEach((part) => {\r\n            if (part.type === ParsedMessagePartType.START_TAG || part.type === ParsedMessagePartType.EMPTY_TAG) {\r\n                const tagName = (<ParsedMessagePartStartTag> part).tagName();\r\n                result.add(tagName);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    public parts(): ParsedMessagePart[] {\r\n        return this._parts;\r\n    }\r\n\r\n    setXmlRepresentation(xmlRepresentation: Element) {\r\n        this._xmlRepresentation = xmlRepresentation;\r\n    }\r\n\r\n    addText(text: string) {\r\n        this._parts.push(new ParsedMessagePartText(text));\r\n    }\r\n\r\n    addPlaceholder(index: number, disp: string) {\r\n        this._parts.push(new ParsedMessagePartPlaceholder(index, disp));\r\n    }\r\n\r\n    addStartTag(tagname: string, idcounter: number) {\r\n        this._parts.push(new ParsedMessagePartStartTag(tagname, idcounter));\r\n    }\r\n\r\n    addEndTag(tagname: string) {\r\n        // check if well formed\r\n        const openTag = this.calculateOpenTagName();\r\n        if (!openTag || openTag !== tagname) {\r\n            // oops, not well formed\r\n            throw new Error(format('unexpected close tag %s (currently open is %s, native xml is \"%s\")',\r\n                tagname, openTag, this.asNativeString()));\r\n        }\r\n        this._parts.push(new ParsedMessagePartEndTag(tagname));\r\n    }\r\n\r\n    addEmptyTag(tagname: string, idcounter: number) {\r\n        this._parts.push(new ParsedMessagePartEmptyTag(tagname, idcounter));\r\n    }\r\n\r\n    addICUMessageRef(index: number, disp) {\r\n        this._parts.push(new ParsedMessagePartICUMessageRef(index, disp));\r\n    }\r\n\r\n    addICUMessage(text: string) {\r\n        this._parts.push(new ParsedMessagePartICUMessage(text, this._parser));\r\n    }\r\n\r\n    /**\r\n     * Determine, wether there is an open tag, that is not closed.\r\n     * Returns the latest one or null, if there is no open tag.\r\n     */\r\n    private calculateOpenTagName(): string {\r\n        const openTags = [];\r\n        this._parts.forEach((part) => {\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.START_TAG:\r\n                    openTags.push((<ParsedMessagePartStartTag> part).tagName());\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    const tagName = (<ParsedMessagePartEndTag> part).tagName();\r\n                    if (openTags.length === 0 || openTags[openTags.length - 1] !== tagName) {\r\n                        // oops, not well formed\r\n                        const openTag = (openTags.length === 0) ? 'nothing' : openTags[openTags.length - 1];\r\n                        throw new Error(format('unexpected close tag %s (currently open is %s, native xml is \"%s\")',\r\n                            tagName, openTag, this.asNativeString()));\r\n                    }\r\n                    openTags.pop();\r\n            }\r\n        });\r\n        return openTags.length === 0 ? null : openTags[openTags.length - 1];\r\n    }\r\n}\r\n"]},"resolvedIds":{"util":{"external":true,"id":"util","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"is-what":{"external":true,"id":"is-what","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./parsed-message-part":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./parsed-message-part-icu-message":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-icu-message.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./dom-utilities":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./parsed-message-part-text":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-text.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./parsed-message-part-placeholder":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-placeholder.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./parsed-message-part-start-tag":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-start-tag.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./parsed-message-part-end-tag":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-end-tag.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./parsed-message-part-icu-message-ref":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-icu-message-ref.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./parsed-message-part-empty-tag":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-empty-tag.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":11802,"body":[{"type":"ImportDeclaration","start":0,"end":32,"specifiers":[{"type":"ImportDefaultSpecifier","start":7,"end":15,"local":{"type":"Identifier","start":7,"end":15,"name":"Tokenizr"}}],"source":{"type":"Literal","start":21,"end":31,"value":"tokenizr","raw":"'tokenizr'"}},{"type":"ImportDeclaration","start":34,"end":78,"specifiers":[{"type":"ImportSpecifier","start":43,"end":60,"imported":{"type":"Identifier","start":43,"end":60,"name":"isNullOrUndefined"},"local":{"type":"Identifier","start":43,"end":60,"name":"isNullOrUndefined"}}],"source":{"type":"Literal","start":68,"end":77,"value":"is-what","raw":"'is-what'"}},{"type":"ExportNamedDeclaration","start":179,"end":206,"declaration":{"type":"VariableDeclaration","start":186,"end":206,"declarations":[{"type":"VariableDeclarator","start":192,"end":205,"id":{"type":"Identifier","start":192,"end":196,"name":"TEXT"},"init":{"type":"Literal","start":199,"end":205,"value":"TEXT","raw":"'TEXT'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":208,"end":245,"declaration":{"type":"VariableDeclaration","start":215,"end":245,"declarations":[{"type":"VariableDeclarator","start":221,"end":244,"id":{"type":"Identifier","start":221,"end":230,"name":"START_TAG"},"init":{"type":"Literal","start":233,"end":244,"value":"START_TAG","raw":"'START_TAG'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":247,"end":280,"declaration":{"type":"VariableDeclaration","start":254,"end":280,"declarations":[{"type":"VariableDeclarator","start":260,"end":279,"id":{"type":"Identifier","start":260,"end":267,"name":"END_TAG"},"init":{"type":"Literal","start":270,"end":279,"value":"END_TAG","raw":"'END_TAG'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":282,"end":319,"declaration":{"type":"VariableDeclaration","start":289,"end":319,"declarations":[{"type":"VariableDeclarator","start":295,"end":318,"id":{"type":"Identifier","start":295,"end":304,"name":"EMPTY_TAG"},"init":{"type":"Literal","start":307,"end":318,"value":"EMPTY_TAG","raw":"'EMPTY_TAG'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":321,"end":362,"declaration":{"type":"VariableDeclaration","start":328,"end":362,"declarations":[{"type":"VariableDeclarator","start":334,"end":361,"id":{"type":"Identifier","start":334,"end":345,"name":"PLACEHOLDER"},"init":{"type":"Literal","start":348,"end":361,"value":"PLACEHOLDER","raw":"'PLACEHOLDER'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":364,"end":413,"declaration":{"type":"VariableDeclaration","start":371,"end":413,"declarations":[{"type":"VariableDeclarator","start":377,"end":412,"id":{"type":"Identifier","start":377,"end":392,"name":"ICU_MESSAGE_REF"},"init":{"type":"Literal","start":395,"end":412,"value":"ICU_MESSAGE_REF","raw":"'ICU_MESSAGE_REF'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":415,"end":456,"declaration":{"type":"VariableDeclaration","start":422,"end":456,"declarations":[{"type":"VariableDeclarator","start":428,"end":455,"id":{"type":"Identifier","start":428,"end":439,"name":"ICU_MESSAGE"},"init":{"type":"Literal","start":442,"end":455,"value":"ICU_MESSAGE","raw":"'ICU_MESSAGE'"}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":458,"end":3006,"declaration":{"type":"ClassDeclaration","start":465,"end":3006,"id":{"type":"Identifier","start":471,"end":492,"name":"ParsedMesageTokenizer"},"superClass":null,"body":{"type":"ClassBody","start":493,"end":3006,"body":[{"type":"MethodDefinition","start":500,"end":2824,"static":false,"computed":false,"key":{"type":"Identifier","start":500,"end":508,"name":"getLexer"},"kind":"method","value":{"type":"FunctionExpression","start":508,"end":2824,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":511,"end":2824,"body":[{"type":"VariableDeclaration","start":522,"end":551,"declarations":[{"type":"VariableDeclarator","start":528,"end":550,"id":{"type":"Identifier","start":528,"end":533,"name":"lexer"},"init":{"type":"NewExpression","start":536,"end":550,"callee":{"type":"Identifier","start":540,"end":548,"name":"Tokenizr"},"arguments":[]}}],"kind":"const"},{"type":"VariableDeclaration","start":561,"end":580,"declarations":[{"type":"VariableDeclarator","start":565,"end":579,"id":{"type":"Identifier","start":565,"end":574,"name":"plaintext"},"init":{"type":"Literal","start":577,"end":579,"value":"","raw":"''"}}],"kind":"let"},{"type":"ExpressionStatement","start":590,"end":802,"expression":{"type":"CallExpression","start":590,"end":801,"callee":{"type":"MemberExpression","start":590,"end":602,"object":{"type":"Identifier","start":590,"end":595,"name":"lexer"},"property":{"type":"Identifier","start":596,"end":602,"name":"before"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":603,"end":800,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":604,"end":607,"name":"ctx"},{"type":"Identifier","start":609,"end":614,"name":"match"},{"type":"Identifier","start":616,"end":620,"name":"rule"}],"body":{"type":"BlockStatement","start":625,"end":800,"body":[{"type":"IfStatement","start":640,"end":789,"test":{"type":"LogicalExpression","start":644,"end":682,"left":{"type":"BinaryExpression","start":644,"end":662,"left":{"type":"MemberExpression","start":644,"end":653,"object":{"type":"Identifier","start":644,"end":648,"name":"rule"},"property":{"type":"Identifier","start":649,"end":653,"name":"name"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":658,"end":662,"name":"TEXT"}},"operator":"&&","right":{"type":"BinaryExpression","start":666,"end":682,"left":{"type":"Identifier","start":666,"end":675,"name":"plaintext"},"operator":"!==","right":{"type":"Literal","start":680,"end":682,"value":"","raw":"''"}}},"consequent":{"type":"BlockStatement","start":684,"end":789,"body":[{"type":"ExpressionStatement","start":703,"end":741,"expression":{"type":"CallExpression","start":703,"end":740,"callee":{"type":"MemberExpression","start":703,"end":713,"object":{"type":"Identifier","start":703,"end":706,"name":"ctx"},"property":{"type":"Identifier","start":707,"end":713,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":714,"end":718,"name":"TEXT"},{"type":"ObjectExpression","start":720,"end":739,"properties":[{"type":"Property","start":722,"end":737,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":722,"end":726,"name":"text"},"value":{"type":"Identifier","start":728,"end":737,"name":"plaintext"},"kind":"init"}]}],"optional":false}},{"type":"ExpressionStatement","start":759,"end":774,"expression":{"type":"AssignmentExpression","start":759,"end":773,"operator":"=","left":{"type":"Identifier","start":759,"end":768,"name":"plaintext"},"right":{"type":"Literal","start":771,"end":773,"value":"","raw":"''"}}}]},"alternate":null}]}}],"optional":false}},{"type":"ExpressionStatement","start":812,"end":956,"expression":{"type":"CallExpression","start":812,"end":955,"callee":{"type":"MemberExpression","start":812,"end":824,"object":{"type":"Identifier","start":812,"end":817,"name":"lexer"},"property":{"type":"Identifier","start":818,"end":824,"name":"finish"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":825,"end":954,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":826,"end":829,"name":"ctx"}],"body":{"type":"BlockStatement","start":834,"end":954,"body":[{"type":"IfStatement","start":849,"end":943,"test":{"type":"BinaryExpression","start":853,"end":869,"left":{"type":"Identifier","start":853,"end":862,"name":"plaintext"},"operator":"!==","right":{"type":"Literal","start":867,"end":869,"value":"","raw":"''"}},"consequent":{"type":"BlockStatement","start":871,"end":943,"body":[{"type":"ExpressionStatement","start":890,"end":928,"expression":{"type":"CallExpression","start":890,"end":927,"callee":{"type":"MemberExpression","start":890,"end":900,"object":{"type":"Identifier","start":890,"end":893,"name":"ctx"},"property":{"type":"Identifier","start":894,"end":900,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":901,"end":905,"name":"TEXT"},{"type":"ObjectExpression","start":907,"end":926,"properties":[{"type":"Property","start":909,"end":924,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":909,"end":913,"name":"text"},"value":{"type":"Identifier","start":915,"end":924,"name":"plaintext"},"kind":"init"}]}],"optional":false}}]},"alternate":null}]}}],"optional":false}},{"type":"ExpressionStatement","start":1165,"end":1429,"expression":{"type":"CallExpression","start":1165,"end":1428,"callee":{"type":"MemberExpression","start":1165,"end":1175,"object":{"type":"Identifier","start":1165,"end":1170,"name":"lexer"},"property":{"type":"Identifier","start":1171,"end":1175,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1176,"end":1223,"value":{},"raw":"/<(br|hr|img|area|link|wbr)( id=\"([0-9])*\")?\\>/","regex":{"pattern":"<(br|hr|img|area|link|wbr)( id=\"([0-9])*\")?\\>","flags":""}},{"type":"ArrowFunctionExpression","start":1225,"end":1416,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1226,"end":1229,"name":"ctx"},{"type":"Identifier","start":1231,"end":1236,"name":"match"}],"body":{"type":"BlockStatement","start":1241,"end":1416,"body":[{"type":"VariableDeclaration","start":1256,"end":1329,"declarations":[{"type":"VariableDeclarator","start":1262,"end":1328,"id":{"type":"Identifier","start":1262,"end":1269,"name":"idcount"},"init":{"type":"ConditionalExpression","start":1272,"end":1328,"test":{"type":"CallExpression","start":1272,"end":1299,"callee":{"type":"Identifier","start":1272,"end":1289,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":1290,"end":1298,"object":{"type":"Identifier","start":1290,"end":1295,"name":"match"},"property":{"type":"Literal","start":1296,"end":1297,"value":3,"raw":"3"},"computed":true,"optional":false}],"optional":false},"consequent":{"type":"Literal","start":1302,"end":1303,"value":0,"raw":"0"},"alternate":{"type":"CallExpression","start":1306,"end":1328,"callee":{"type":"Identifier","start":1306,"end":1314,"name":"parseInt"},"arguments":[{"type":"MemberExpression","start":1315,"end":1323,"object":{"type":"Identifier","start":1315,"end":1320,"name":"match"},"property":{"type":"Literal","start":1321,"end":1322,"value":3,"raw":"3"},"computed":true,"optional":false},{"type":"Literal","start":1325,"end":1327,"value":10,"raw":"10"}],"optional":false}}}],"kind":"const"},{"type":"ExpressionStatement","start":1343,"end":1405,"expression":{"type":"CallExpression","start":1343,"end":1404,"callee":{"type":"MemberExpression","start":1343,"end":1353,"object":{"type":"Identifier","start":1343,"end":1346,"name":"ctx"},"property":{"type":"Identifier","start":1347,"end":1353,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1354,"end":1363,"name":"EMPTY_TAG"},{"type":"ObjectExpression","start":1365,"end":1403,"properties":[{"type":"Property","start":1367,"end":1381,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1367,"end":1371,"name":"name"},"value":{"type":"MemberExpression","start":1373,"end":1381,"object":{"type":"Identifier","start":1373,"end":1378,"name":"match"},"property":{"type":"Literal","start":1379,"end":1380,"value":1,"raw":"1"},"computed":true,"optional":false},"kind":"init"},{"type":"Property","start":1383,"end":1401,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1383,"end":1392,"name":"idcounter"},"value":{"type":"Identifier","start":1394,"end":1401,"name":"idcount"},"kind":"init"}]}],"optional":false}}]}},{"type":"Identifier","start":1418,"end":1427,"name":"EMPTY_TAG"}],"optional":false}},{"type":"ExpressionStatement","start":1535,"end":1796,"expression":{"type":"CallExpression","start":1535,"end":1795,"callee":{"type":"MemberExpression","start":1535,"end":1545,"object":{"type":"Identifier","start":1535,"end":1540,"name":"lexer"},"property":{"type":"Identifier","start":1541,"end":1545,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1546,"end":1590,"value":{},"raw":"/<([a-zA-Z][a-zA-Z-0-9]*)( id=\"([0-9]*)\")?>/","regex":{"pattern":"<([a-zA-Z][a-zA-Z-0-9]*)( id=\"([0-9]*)\")?>","flags":""}},{"type":"ArrowFunctionExpression","start":1592,"end":1783,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1593,"end":1596,"name":"ctx"},{"type":"Identifier","start":1598,"end":1603,"name":"match"}],"body":{"type":"BlockStatement","start":1608,"end":1783,"body":[{"type":"VariableDeclaration","start":1623,"end":1696,"declarations":[{"type":"VariableDeclarator","start":1629,"end":1695,"id":{"type":"Identifier","start":1629,"end":1636,"name":"idcount"},"init":{"type":"ConditionalExpression","start":1639,"end":1695,"test":{"type":"CallExpression","start":1639,"end":1666,"callee":{"type":"Identifier","start":1639,"end":1656,"name":"isNullOrUndefined"},"arguments":[{"type":"MemberExpression","start":1657,"end":1665,"object":{"type":"Identifier","start":1657,"end":1662,"name":"match"},"property":{"type":"Literal","start":1663,"end":1664,"value":3,"raw":"3"},"computed":true,"optional":false}],"optional":false},"consequent":{"type":"Literal","start":1669,"end":1670,"value":0,"raw":"0"},"alternate":{"type":"CallExpression","start":1673,"end":1695,"callee":{"type":"Identifier","start":1673,"end":1681,"name":"parseInt"},"arguments":[{"type":"MemberExpression","start":1682,"end":1690,"object":{"type":"Identifier","start":1682,"end":1687,"name":"match"},"property":{"type":"Literal","start":1688,"end":1689,"value":3,"raw":"3"},"computed":true,"optional":false},{"type":"Literal","start":1692,"end":1694,"value":10,"raw":"10"}],"optional":false}}}],"kind":"const"},{"type":"ExpressionStatement","start":1710,"end":1772,"expression":{"type":"CallExpression","start":1710,"end":1771,"callee":{"type":"MemberExpression","start":1710,"end":1720,"object":{"type":"Identifier","start":1710,"end":1713,"name":"ctx"},"property":{"type":"Identifier","start":1714,"end":1720,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1721,"end":1730,"name":"START_TAG"},{"type":"ObjectExpression","start":1732,"end":1770,"properties":[{"type":"Property","start":1734,"end":1748,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1734,"end":1738,"name":"name"},"value":{"type":"MemberExpression","start":1740,"end":1748,"object":{"type":"Identifier","start":1740,"end":1745,"name":"match"},"property":{"type":"Literal","start":1746,"end":1747,"value":1,"raw":"1"},"computed":true,"optional":false},"kind":"init"},{"type":"Property","start":1750,"end":1768,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1750,"end":1759,"name":"idcounter"},"value":{"type":"Identifier","start":1761,"end":1768,"name":"idcount"},"kind":"init"}]}],"optional":false}}]}},{"type":"Identifier","start":1785,"end":1794,"name":"START_TAG"}],"optional":false}},{"type":"ExpressionStatement","start":1826,"end":1961,"expression":{"type":"CallExpression","start":1826,"end":1960,"callee":{"type":"MemberExpression","start":1826,"end":1836,"object":{"type":"Identifier","start":1826,"end":1831,"name":"lexer"},"property":{"type":"Identifier","start":1832,"end":1836,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1837,"end":1866,"value":{},"raw":"/<\\/([a-zA-Z][a-zA-Z-0-9]*)>/","regex":{"pattern":"<\\/([a-zA-Z][a-zA-Z-0-9]*)>","flags":""}},{"type":"ArrowFunctionExpression","start":1868,"end":1950,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1869,"end":1872,"name":"ctx"},{"type":"Identifier","start":1874,"end":1879,"name":"match"}],"body":{"type":"BlockStatement","start":1884,"end":1950,"body":[{"type":"ExpressionStatement","start":1899,"end":1939,"expression":{"type":"CallExpression","start":1899,"end":1938,"callee":{"type":"MemberExpression","start":1899,"end":1909,"object":{"type":"Identifier","start":1899,"end":1902,"name":"ctx"},"property":{"type":"Identifier","start":1903,"end":1909,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1910,"end":1917,"name":"END_TAG"},{"type":"ObjectExpression","start":1919,"end":1937,"properties":[{"type":"Property","start":1921,"end":1935,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1921,"end":1925,"name":"name"},"value":{"type":"MemberExpression","start":1927,"end":1935,"object":{"type":"Identifier","start":1927,"end":1932,"name":"match"},"property":{"type":"Literal","start":1933,"end":1934,"value":1,"raw":"1"},"computed":true,"optional":false},"kind":"init"}]}],"optional":false}}]}},{"type":"Identifier","start":1952,"end":1959,"name":"END_TAG"}],"optional":false}},{"type":"ExpressionStatement","start":1995,"end":2142,"expression":{"type":"CallExpression","start":1995,"end":2141,"callee":{"type":"MemberExpression","start":1995,"end":2005,"object":{"type":"Identifier","start":1995,"end":2000,"name":"lexer"},"property":{"type":"Identifier","start":2001,"end":2005,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2006,"end":2020,"value":{},"raw":"/{{([0-9]+)}}/","regex":{"pattern":"{{([0-9]+)}}","flags":""}},{"type":"ArrowFunctionExpression","start":2022,"end":2127,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2023,"end":2026,"name":"ctx"},{"type":"Identifier","start":2028,"end":2033,"name":"match"}],"body":{"type":"BlockStatement","start":2038,"end":2127,"body":[{"type":"ExpressionStatement","start":2053,"end":2116,"expression":{"type":"CallExpression","start":2053,"end":2115,"callee":{"type":"MemberExpression","start":2053,"end":2063,"object":{"type":"Identifier","start":2053,"end":2056,"name":"ctx"},"property":{"type":"Identifier","start":2057,"end":2063,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2064,"end":2075,"name":"PLACEHOLDER"},{"type":"ObjectExpression","start":2077,"end":2114,"properties":[{"type":"Property","start":2079,"end":2112,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2079,"end":2088,"name":"idcounter"},"value":{"type":"CallExpression","start":2090,"end":2112,"callee":{"type":"Identifier","start":2090,"end":2098,"name":"parseInt"},"arguments":[{"type":"MemberExpression","start":2099,"end":2107,"object":{"type":"Identifier","start":2099,"end":2104,"name":"match"},"property":{"type":"Literal","start":2105,"end":2106,"value":1,"raw":"1"},"computed":true,"optional":false},{"type":"Literal","start":2109,"end":2111,"value":10,"raw":"10"}],"optional":false},"kind":"init"}]}],"optional":false}}]}},{"type":"Identifier","start":2129,"end":2140,"name":"PLACEHOLDER"}],"optional":false}},{"type":"ExpressionStatement","start":2180,"end":2351,"expression":{"type":"CallExpression","start":2180,"end":2350,"callee":{"type":"MemberExpression","start":2180,"end":2190,"object":{"type":"Identifier","start":2180,"end":2185,"name":"lexer"},"property":{"type":"Identifier","start":2186,"end":2190,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2191,"end":2221,"value":{},"raw":"/<ICU-Message-Ref_([0-9]+)\\/>/","regex":{"pattern":"<ICU-Message-Ref_([0-9]+)\\/>","flags":""}},{"type":"ArrowFunctionExpression","start":2223,"end":2332,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2224,"end":2227,"name":"ctx"},{"type":"Identifier","start":2229,"end":2234,"name":"match"}],"body":{"type":"BlockStatement","start":2239,"end":2332,"body":[{"type":"ExpressionStatement","start":2254,"end":2321,"expression":{"type":"CallExpression","start":2254,"end":2320,"callee":{"type":"MemberExpression","start":2254,"end":2264,"object":{"type":"Identifier","start":2254,"end":2257,"name":"ctx"},"property":{"type":"Identifier","start":2258,"end":2264,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2265,"end":2280,"name":"ICU_MESSAGE_REF"},{"type":"ObjectExpression","start":2282,"end":2319,"properties":[{"type":"Property","start":2284,"end":2317,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2284,"end":2293,"name":"idcounter"},"value":{"type":"CallExpression","start":2295,"end":2317,"callee":{"type":"Identifier","start":2295,"end":2303,"name":"parseInt"},"arguments":[{"type":"MemberExpression","start":2304,"end":2312,"object":{"type":"Identifier","start":2304,"end":2309,"name":"match"},"property":{"type":"Literal","start":2310,"end":2311,"value":1,"raw":"1"},"computed":true,"optional":false},{"type":"Literal","start":2314,"end":2316,"value":10,"raw":"10"}],"optional":false},"kind":"init"}]}],"optional":false}}]}},{"type":"Identifier","start":2334,"end":2349,"name":"ICU_MESSAGE_REF"}],"optional":false}},{"type":"ExpressionStatement","start":2385,"end":2519,"expression":{"type":"CallExpression","start":2385,"end":2518,"callee":{"type":"MemberExpression","start":2385,"end":2395,"object":{"type":"Identifier","start":2385,"end":2390,"name":"lexer"},"property":{"type":"Identifier","start":2391,"end":2395,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2396,"end":2413,"value":{},"raw":"/<ICU-Message\\/>/","regex":{"pattern":"<ICU-Message\\/>","flags":""}},{"type":"ArrowFunctionExpression","start":2415,"end":2504,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2416,"end":2419,"name":"ctx"},{"type":"Identifier","start":2421,"end":2426,"name":"match"}],"body":{"type":"BlockStatement","start":2431,"end":2504,"body":[{"type":"ExpressionStatement","start":2446,"end":2493,"expression":{"type":"CallExpression","start":2446,"end":2492,"callee":{"type":"MemberExpression","start":2446,"end":2456,"object":{"type":"Identifier","start":2446,"end":2449,"name":"ctx"},"property":{"type":"Identifier","start":2450,"end":2456,"name":"accept"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2457,"end":2468,"name":"ICU_MESSAGE"},{"type":"ObjectExpression","start":2470,"end":2491,"properties":[{"type":"Property","start":2472,"end":2489,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2472,"end":2479,"name":"message"},"value":{"type":"MemberExpression","start":2481,"end":2489,"object":{"type":"Identifier","start":2481,"end":2486,"name":"match"},"property":{"type":"Literal","start":2487,"end":2488,"value":0,"raw":"0"},"computed":true,"optional":false},"kind":"init"}]}],"optional":false}}]}},{"type":"Identifier","start":2506,"end":2517,"name":"ICU_MESSAGE"}],"optional":false}},{"type":"ExpressionStatement","start":2546,"end":2661,"expression":{"type":"CallExpression","start":2546,"end":2660,"callee":{"type":"MemberExpression","start":2546,"end":2556,"object":{"type":"Identifier","start":2546,"end":2551,"name":"lexer"},"property":{"type":"Identifier","start":2552,"end":2556,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2557,"end":2560,"value":{},"raw":"/./","regex":{"pattern":".","flags":""}},{"type":"ArrowFunctionExpression","start":2562,"end":2653,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2563,"end":2566,"name":"ctx"},{"type":"Identifier","start":2568,"end":2573,"name":"match"}],"body":{"type":"BlockStatement","start":2578,"end":2653,"body":[{"type":"ExpressionStatement","start":2593,"end":2615,"expression":{"type":"AssignmentExpression","start":2593,"end":2614,"operator":"+=","left":{"type":"Identifier","start":2593,"end":2602,"name":"plaintext"},"right":{"type":"MemberExpression","start":2606,"end":2614,"object":{"type":"Identifier","start":2606,"end":2611,"name":"match"},"property":{"type":"Literal","start":2612,"end":2613,"value":0,"raw":"0"},"computed":true,"optional":false}}},{"type":"ExpressionStatement","start":2629,"end":2642,"expression":{"type":"CallExpression","start":2629,"end":2641,"callee":{"type":"MemberExpression","start":2629,"end":2639,"object":{"type":"Identifier","start":2629,"end":2632,"name":"ctx"},"property":{"type":"Identifier","start":2633,"end":2639,"name":"ignore"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}},{"type":"Identifier","start":2655,"end":2659,"name":"TEXT"}],"optional":false}},{"type":"ExpressionStatement","start":2671,"end":2794,"expression":{"type":"CallExpression","start":2671,"end":2793,"callee":{"type":"MemberExpression","start":2671,"end":2681,"object":{"type":"Identifier","start":2671,"end":2676,"name":"lexer"},"property":{"type":"Identifier","start":2677,"end":2681,"name":"rule"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2682,"end":2693,"value":{},"raw":"/[\\t\\r\\n]+/","regex":{"pattern":"[\\t\\r\\n]+","flags":""}},{"type":"ArrowFunctionExpression","start":2695,"end":2786,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2696,"end":2699,"name":"ctx"},{"type":"Identifier","start":2701,"end":2706,"name":"match"}],"body":{"type":"BlockStatement","start":2711,"end":2786,"body":[{"type":"ExpressionStatement","start":2726,"end":2748,"expression":{"type":"AssignmentExpression","start":2726,"end":2747,"operator":"+=","left":{"type":"Identifier","start":2726,"end":2735,"name":"plaintext"},"right":{"type":"MemberExpression","start":2739,"end":2747,"object":{"type":"Identifier","start":2739,"end":2744,"name":"match"},"property":{"type":"Literal","start":2745,"end":2746,"value":0,"raw":"0"},"computed":true,"optional":false}}},{"type":"ExpressionStatement","start":2762,"end":2775,"expression":{"type":"CallExpression","start":2762,"end":2774,"callee":{"type":"MemberExpression","start":2762,"end":2772,"object":{"type":"Identifier","start":2762,"end":2765,"name":"ctx"},"property":{"type":"Identifier","start":2766,"end":2772,"name":"ignore"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}},{"type":"Identifier","start":2788,"end":2792,"name":"TEXT"}],"optional":false}},{"type":"ReturnStatement","start":2804,"end":2817,"argument":{"type":"Identifier","start":2811,"end":2816,"name":"lexer"}}]}}},{"type":"MethodDefinition","start":2830,"end":3003,"static":false,"computed":false,"key":{"type":"Identifier","start":2830,"end":2838,"name":"tokenize"},"kind":"method","value":{"type":"FunctionExpression","start":2838,"end":3003,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2839,"end":2856,"name":"normalizedMessage"}],"body":{"type":"BlockStatement","start":2858,"end":3003,"body":[{"type":"VariableDeclaration","start":2869,"end":2899,"declarations":[{"type":"VariableDeclarator","start":2875,"end":2898,"id":{"type":"Identifier","start":2875,"end":2880,"name":"lexer"},"init":{"type":"CallExpression","start":2883,"end":2898,"callee":{"type":"MemberExpression","start":2883,"end":2896,"object":{"type":"ThisExpression","start":2883,"end":2887},"property":{"type":"Identifier","start":2888,"end":2896,"name":"getLexer"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":2909,"end":2923,"expression":{"type":"CallExpression","start":2909,"end":2922,"callee":{"type":"MemberExpression","start":2909,"end":2920,"object":{"type":"Identifier","start":2909,"end":2914,"name":"lexer"},"property":{"type":"Identifier","start":2915,"end":2920,"name":"reset"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ExpressionStatement","start":2933,"end":2964,"expression":{"type":"CallExpression","start":2933,"end":2963,"callee":{"type":"MemberExpression","start":2933,"end":2944,"object":{"type":"Identifier","start":2933,"end":2938,"name":"lexer"},"property":{"type":"Identifier","start":2939,"end":2944,"name":"input"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2945,"end":2962,"name":"normalizedMessage"}],"optional":false}},{"type":"ReturnStatement","start":2974,"end":2996,"argument":{"type":"CallExpression","start":2981,"end":2995,"callee":{"type":"MemberExpression","start":2981,"end":2993,"object":{"type":"Identifier","start":2981,"end":2986,"name":"lexer"},"property":{"type":"Identifier","start":2987,"end":2993,"name":"tokens"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtdG9rZW5pemVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWkxOG5zdXBwb3J0LWxpYi9zcmMvaW1wbC9wYXJzZWQtbWVzc2FnZS10b2tlbml6ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxRQUFRLE1BQU0sVUFBVSxDQUFDO0FBQ2hDLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLFNBQVMsQ0FBQztBQUUxQzs7O0dBR0c7QUFFSCxTQUFTO0FBQ1QsTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQztBQUMzQixNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsV0FBVyxDQUFDO0FBQ3JDLE1BQU0sQ0FBQyxNQUFNLE9BQU8sR0FBRyxTQUFTLENBQUM7QUFDakMsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLFdBQVcsQ0FBQztBQUNyQyxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsYUFBYSxDQUFDO0FBQ3pDLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxpQkFBaUIsQ0FBQztBQUNqRCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsYUFBYSxDQUFDO0FBT3pDLE1BQU0sT0FBTyxxQkFBcUI7SUFFdEIsUUFBUTtRQUNaLE1BQU0sS0FBSyxHQUFHLElBQUksUUFBUSxFQUFFLENBQUM7UUFDN0IsSUFBSSxTQUFTLEdBQUcsRUFBRSxDQUFDO1FBQ25CLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxFQUFFO1lBQzlCLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLElBQUksU0FBUyxLQUFLLEVBQUUsRUFBRTtnQkFDeEMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFDLENBQUMsQ0FBQztnQkFDcEMsU0FBUyxHQUFHLEVBQUUsQ0FBQzthQUNsQjtRQUNMLENBQUMsQ0FBQyxDQUFDO1FBQ0gsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFO1lBQ2pCLElBQUksU0FBUyxLQUFLLEVBQUUsRUFBRTtnQkFDbEIsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFDLENBQUMsQ0FBQzthQUN2QztRQUNKLENBQUMsQ0FBQyxDQUFDO1FBQ0oseUdBQXlHO1FBQ3pHLDBFQUEwRTtRQUMxRSxLQUFLLENBQUMsSUFBSSxDQUFDLCtDQUErQyxFQUFFLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQ3ZFLE1BQU0sT0FBTyxHQUFHLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDekUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO1FBQ2hFLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNkLHNGQUFzRjtRQUN0RixLQUFLLENBQUMsSUFBSSxDQUFDLDRDQUE0QyxFQUFFLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQ3BFLE1BQU0sT0FBTyxHQUFHLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDekUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUUsRUFBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO1FBQ2hFLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNkLFVBQVU7UUFDVixLQUFLLENBQUMsSUFBSSxDQUFDLDZCQUE2QixFQUFFLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQ3JELEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUM7UUFDMUMsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ1osY0FBYztRQUNkLEtBQUssQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQ3RDLEdBQUcsQ0FBQyxNQUFNLENBQUMsV0FBVyxFQUFFLEVBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUMsQ0FBQyxDQUFDO1FBQ2pFLENBQUMsRUFBRSxXQUFXLENBQUMsQ0FBQztRQUNoQixrQkFBa0I7UUFDbEIsS0FBSyxDQUFDLElBQUksQ0FBQyw4QkFBOEIsRUFBRSxDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsRUFBRTtZQUN0RCxHQUFHLENBQUMsTUFBTSxDQUFDLGVBQWUsRUFBRSxFQUFDLFNBQVMsRUFBRSxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFDLENBQUMsQ0FBQztRQUNyRSxDQUFDLEVBQUUsZUFBZSxDQUFDLENBQUM7UUFDcEIsY0FBYztRQUNkLEtBQUssQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFDekMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsRUFBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztRQUNqRCxDQUFDLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFDaEIsT0FBTztRQUNQLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQzNCLFNBQVMsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdEIsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ2pCLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNULEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQ25DLFNBQVMsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdEIsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ2pCLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNULE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7SUFFRCxRQUFRLENBQUMsaUJBQXlCO1FBQzlCLE1BQU0sS0FBSyxHQUFhLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUN4QyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDZCxLQUFLLENBQUMsS0FBSyxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDL0IsT0FBTyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDMUIsQ0FBQztDQUVKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFRva2VuaXpyIGZyb20gJ3Rva2VuaXpyJztcclxuaW1wb3J0IHtpc051bGxPclVuZGVmaW5lZH0gZnJvbSAnaXMtd2hhdCc7XHJcblxyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMTQuMDUuMjAxNy5cclxuICogQSB0b2tlbml6ZXIgZm9yIG5vcm1hbGl6ZWQgbWVzc2FnZXMuXHJcbiAqL1xyXG5cclxuLy8gVG9rZW5zXHJcbmV4cG9ydCBjb25zdCBURVhUID0gJ1RFWFQnO1xyXG5leHBvcnQgY29uc3QgU1RBUlRfVEFHID0gJ1NUQVJUX1RBRyc7XHJcbmV4cG9ydCBjb25zdCBFTkRfVEFHID0gJ0VORF9UQUcnO1xyXG5leHBvcnQgY29uc3QgRU1QVFlfVEFHID0gJ0VNUFRZX1RBRyc7XHJcbmV4cG9ydCBjb25zdCBQTEFDRUhPTERFUiA9ICdQTEFDRUhPTERFUic7XHJcbmV4cG9ydCBjb25zdCBJQ1VfTUVTU0FHRV9SRUYgPSAnSUNVX01FU1NBR0VfUkVGJztcclxuZXhwb3J0IGNvbnN0IElDVV9NRVNTQUdFID0gJ0lDVV9NRVNTQUdFJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVG9rZW4ge1xyXG4gICAgdHlwZTogc3RyaW5nO1xyXG4gICAgdmFsdWU6IGFueTtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFBhcnNlZE1lc2FnZVRva2VuaXplciB7XHJcblxyXG4gICAgcHJpdmF0ZSBnZXRMZXhlcigpOiBUb2tlbml6ciB7XHJcbiAgICAgICAgY29uc3QgbGV4ZXIgPSBuZXcgVG9rZW5penIoKTtcclxuICAgICAgICBsZXQgcGxhaW50ZXh0ID0gJyc7XHJcbiAgICAgICAgbGV4ZXIuYmVmb3JlKChjdHgsIG1hdGNoLCBydWxlKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChydWxlLm5hbWUgIT09IFRFWFQgJiYgcGxhaW50ZXh0ICE9PSAnJykge1xyXG4gICAgICAgICAgICAgICAgY3R4LmFjY2VwdChURVhULCB7dGV4dDogcGxhaW50ZXh0fSk7XHJcbiAgICAgICAgICAgICAgICBwbGFpbnRleHQgPSAnJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGxleGVyLmZpbmlzaCgoY3R4KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChwbGFpbnRleHQgIT09ICcnKSB7XHJcbiAgICAgICAgICAgICAgICBjdHguYWNjZXB0KFRFWFQsIHt0ZXh0OiBwbGFpbnRleHR9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICB9KTtcclxuICAgICAgICAvLyBlbXB0eSB0YWcsIHRoZXJlIGFyZSBvbmx5IGEgZmV3IGFsbG93ZWQgKHNlZSB0YWctbWFwcGluZ3MpOiBbJ0JSJywgJ0hSJywgJ0lNRycsICdBUkVBJywgJ0xJTksnLCAnV0JSJ11cclxuICAgICAgICAvLyBmb3JtYXQgaXMgPG5hbWUgaWQ9XCJuclwiPiwgbnIgaXN0IG9wdGlvbmFsLCB6LkIuIDxpbWc+IG9kZXIgPGltZyBpZD1cIjJcIj5cclxuICAgICAgICBsZXhlci5ydWxlKC88KGJyfGhyfGltZ3xhcmVhfGxpbmt8d2JyKSggaWQ9XCIoWzAtOV0pKlwiKT9cXD4vLCAoY3R4LCBtYXRjaCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBpZGNvdW50ID0gaXNOdWxsT3JVbmRlZmluZWQobWF0Y2hbM10pID8gMCA6IHBhcnNlSW50KG1hdGNoWzNdLCAxMCk7XHJcbiAgICAgICAgICAgIGN0eC5hY2NlcHQoRU1QVFlfVEFHLCB7bmFtZTogbWF0Y2hbMV0sIGlkY291bnRlcjogaWRjb3VudH0pO1xyXG4gICAgICAgIH0sIEVNUFRZX1RBRyk7XHJcbiAgICAgICAgLy8gc3RhcnQgdGFnLCBGb3JtYXQgPG5hbWUgaWQ9XCJuclwiPiwgbnIgaXN0IG9wdGlvbmFsLCB6LkIuIDxteXRhZz4gb2RlciA8bXl0YWcgaWQ9XCIyXCI+XHJcbiAgICAgICAgbGV4ZXIucnVsZSgvPChbYS16QS1aXVthLXpBLVotMC05XSopKCBpZD1cIihbMC05XSopXCIpPz4vLCAoY3R4LCBtYXRjaCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBpZGNvdW50ID0gaXNOdWxsT3JVbmRlZmluZWQobWF0Y2hbM10pID8gMCA6IHBhcnNlSW50KG1hdGNoWzNdLCAxMCk7XHJcbiAgICAgICAgICAgIGN0eC5hY2NlcHQoU1RBUlRfVEFHLCB7bmFtZTogbWF0Y2hbMV0sIGlkY291bnRlcjogaWRjb3VudH0pO1xyXG4gICAgICAgIH0sIFNUQVJUX1RBRyk7XHJcbiAgICAgICAgLy8gZW5kIHRhZ1xyXG4gICAgICAgIGxleGVyLnJ1bGUoLzxcXC8oW2EtekEtWl1bYS16QS1aLTAtOV0qKT4vLCAoY3R4LCBtYXRjaCkgPT4ge1xyXG4gICAgICAgICAgICBjdHguYWNjZXB0KEVORF9UQUcsIHtuYW1lOiBtYXRjaFsxXX0pO1xyXG4gICAgICAgIH0sIEVORF9UQUcpO1xyXG4gICAgICAgIC8vIHBsYWNlaG9sZGVyXHJcbiAgICAgICAgbGV4ZXIucnVsZSgve3soWzAtOV0rKX19LywgKGN0eCwgbWF0Y2gpID0+IHtcclxuICAgICAgICAgICAgY3R4LmFjY2VwdChQTEFDRUhPTERFUiwge2lkY291bnRlcjogcGFyc2VJbnQobWF0Y2hbMV0sIDEwKX0pO1xyXG4gICAgICAgIH0sIFBMQUNFSE9MREVSKTtcclxuICAgICAgICAvLyBpY3UgbWVzc2FnZSByZWZcclxuICAgICAgICBsZXhlci5ydWxlKC88SUNVLU1lc3NhZ2UtUmVmXyhbMC05XSspXFwvPi8sIChjdHgsIG1hdGNoKSA9PiB7XHJcbiAgICAgICAgICAgIGN0eC5hY2NlcHQoSUNVX01FU1NBR0VfUkVGLCB7aWRjb3VudGVyOiBwYXJzZUludChtYXRjaFsxXSwgMTApfSk7XHJcbiAgICAgICAgfSwgSUNVX01FU1NBR0VfUkVGKTtcclxuICAgICAgICAvLyBpY3UgbWVzc2FnZVxyXG4gICAgICAgIGxleGVyLnJ1bGUoLzxJQ1UtTWVzc2FnZVxcLz4vLCAoY3R4LCBtYXRjaCkgPT4ge1xyXG4gICAgICAgICAgICBjdHguYWNjZXB0KElDVV9NRVNTQUdFLCB7bWVzc2FnZTogbWF0Y2hbMF19KTtcclxuICAgICAgICB9LCBJQ1VfTUVTU0FHRSk7XHJcbiAgICAgICAgLy8gdGV4dFxyXG4gICAgICAgIGxleGVyLnJ1bGUoLy4vLCAoY3R4LCBtYXRjaCkgPT4ge1xyXG4gICAgICAgICAgICBwbGFpbnRleHQgKz0gbWF0Y2hbMF07XHJcbiAgICAgICAgICAgIGN0eC5pZ25vcmUoKTtcclxuICAgICAgICB9LCBURVhUKTtcclxuICAgICAgICBsZXhlci5ydWxlKC9bXFx0XFxyXFxuXSsvLCAoY3R4LCBtYXRjaCkgPT4ge1xyXG4gICAgICAgICAgICBwbGFpbnRleHQgKz0gbWF0Y2hbMF07XHJcbiAgICAgICAgICAgIGN0eC5pZ25vcmUoKTtcclxuICAgICAgICB9LCBURVhUKTtcclxuICAgICAgICByZXR1cm4gbGV4ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgdG9rZW5pemUobm9ybWFsaXplZE1lc3NhZ2U6IHN0cmluZyk6IFRva2VuW10ge1xyXG4gICAgICAgIGNvbnN0IGxleGVyOiBUb2tlbml6ciA9IHRoaXMuZ2V0TGV4ZXIoKTtcclxuICAgICAgICBsZXhlci5yZXNldCgpO1xyXG4gICAgICAgIGxleGVyLmlucHV0KG5vcm1hbGl6ZWRNZXNzYWdlKTtcclxuICAgICAgICByZXR1cm4gbGV4ZXIudG9rZW5zKCk7XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==","start":3008,"end":11802}]},"code":"import Tokenizr from 'tokenizr';\r\nimport { isNullOrUndefined } from 'is-what';\r\n/**\r\n * Created by martin on 14.05.2017.\r\n * A tokenizer for normalized messages.\r\n */\r\n// Tokens\r\nexport const TEXT = 'TEXT';\r\nexport const START_TAG = 'START_TAG';\r\nexport const END_TAG = 'END_TAG';\r\nexport const EMPTY_TAG = 'EMPTY_TAG';\r\nexport const PLACEHOLDER = 'PLACEHOLDER';\r\nexport const ICU_MESSAGE_REF = 'ICU_MESSAGE_REF';\r\nexport const ICU_MESSAGE = 'ICU_MESSAGE';\r\nexport class ParsedMesageTokenizer {\r\n    getLexer() {\r\n        const lexer = new Tokenizr();\r\n        let plaintext = '';\r\n        lexer.before((ctx, match, rule) => {\r\n            if (rule.name !== TEXT && plaintext !== '') {\r\n                ctx.accept(TEXT, { text: plaintext });\r\n                plaintext = '';\r\n            }\r\n        });\r\n        lexer.finish((ctx) => {\r\n            if (plaintext !== '') {\r\n                ctx.accept(TEXT, { text: plaintext });\r\n            }\r\n        });\r\n        // empty tag, there are only a few allowed (see tag-mappings): ['BR', 'HR', 'IMG', 'AREA', 'LINK', 'WBR']\r\n        // format is <name id=\"nr\">, nr ist optional, z.B. <img> oder <img id=\"2\">\r\n        lexer.rule(/<(br|hr|img|area|link|wbr)( id=\"([0-9])*\")?\\>/, (ctx, match) => {\r\n            const idcount = isNullOrUndefined(match[3]) ? 0 : parseInt(match[3], 10);\r\n            ctx.accept(EMPTY_TAG, { name: match[1], idcounter: idcount });\r\n        }, EMPTY_TAG);\r\n        // start tag, Format <name id=\"nr\">, nr ist optional, z.B. <mytag> oder <mytag id=\"2\">\r\n        lexer.rule(/<([a-zA-Z][a-zA-Z-0-9]*)( id=\"([0-9]*)\")?>/, (ctx, match) => {\r\n            const idcount = isNullOrUndefined(match[3]) ? 0 : parseInt(match[3], 10);\r\n            ctx.accept(START_TAG, { name: match[1], idcounter: idcount });\r\n        }, START_TAG);\r\n        // end tag\r\n        lexer.rule(/<\\/([a-zA-Z][a-zA-Z-0-9]*)>/, (ctx, match) => {\r\n            ctx.accept(END_TAG, { name: match[1] });\r\n        }, END_TAG);\r\n        // placeholder\r\n        lexer.rule(/{{([0-9]+)}}/, (ctx, match) => {\r\n            ctx.accept(PLACEHOLDER, { idcounter: parseInt(match[1], 10) });\r\n        }, PLACEHOLDER);\r\n        // icu message ref\r\n        lexer.rule(/<ICU-Message-Ref_([0-9]+)\\/>/, (ctx, match) => {\r\n            ctx.accept(ICU_MESSAGE_REF, { idcounter: parseInt(match[1], 10) });\r\n        }, ICU_MESSAGE_REF);\r\n        // icu message\r\n        lexer.rule(/<ICU-Message\\/>/, (ctx, match) => {\r\n            ctx.accept(ICU_MESSAGE, { message: match[0] });\r\n        }, ICU_MESSAGE);\r\n        // text\r\n        lexer.rule(/./, (ctx, match) => {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        lexer.rule(/[\\t\\r\\n]+/, (ctx, match) => {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        return lexer;\r\n    }\r\n    tokenize(normalizedMessage) {\r\n        const lexer = this.getLexer();\r\n        lexer.reset();\r\n        lexer.input(normalizedMessage);\r\n        return lexer.tokens();\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["tokenizr","is-what"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-tokenizer.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import Tokenizr from 'tokenizr';\r\nimport { isNullOrUndefined } from 'is-what';\r\n/**\r\n * Created by martin on 14.05.2017.\r\n * A tokenizer for normalized messages.\r\n */\r\n// Tokens\r\nexport const TEXT = 'TEXT';\r\nexport const START_TAG = 'START_TAG';\r\nexport const END_TAG = 'END_TAG';\r\nexport const EMPTY_TAG = 'EMPTY_TAG';\r\nexport const PLACEHOLDER = 'PLACEHOLDER';\r\nexport const ICU_MESSAGE_REF = 'ICU_MESSAGE_REF';\r\nexport const ICU_MESSAGE = 'ICU_MESSAGE';\r\nexport class ParsedMesageTokenizer {\r\n    getLexer() {\r\n        const lexer = new Tokenizr();\r\n        let plaintext = '';\r\n        lexer.before((ctx, match, rule) => {\r\n            if (rule.name !== TEXT && plaintext !== '') {\r\n                ctx.accept(TEXT, { text: plaintext });\r\n                plaintext = '';\r\n            }\r\n        });\r\n        lexer.finish((ctx) => {\r\n            if (plaintext !== '') {\r\n                ctx.accept(TEXT, { text: plaintext });\r\n            }\r\n        });\r\n        // empty tag, there are only a few allowed (see tag-mappings): ['BR', 'HR', 'IMG', 'AREA', 'LINK', 'WBR']\r\n        // format is <name id=\"nr\">, nr ist optional, z.B. <img> oder <img id=\"2\">\r\n        lexer.rule(/<(br|hr|img|area|link|wbr)( id=\"([0-9])*\")?\\>/, (ctx, match) => {\r\n            const idcount = isNullOrUndefined(match[3]) ? 0 : parseInt(match[3], 10);\r\n            ctx.accept(EMPTY_TAG, { name: match[1], idcounter: idcount });\r\n        }, EMPTY_TAG);\r\n        // start tag, Format <name id=\"nr\">, nr ist optional, z.B. <mytag> oder <mytag id=\"2\">\r\n        lexer.rule(/<([a-zA-Z][a-zA-Z-0-9]*)( id=\"([0-9]*)\")?>/, (ctx, match) => {\r\n            const idcount = isNullOrUndefined(match[3]) ? 0 : parseInt(match[3], 10);\r\n            ctx.accept(START_TAG, { name: match[1], idcounter: idcount });\r\n        }, START_TAG);\r\n        // end tag\r\n        lexer.rule(/<\\/([a-zA-Z][a-zA-Z-0-9]*)>/, (ctx, match) => {\r\n            ctx.accept(END_TAG, { name: match[1] });\r\n        }, END_TAG);\r\n        // placeholder\r\n        lexer.rule(/{{([0-9]+)}}/, (ctx, match) => {\r\n            ctx.accept(PLACEHOLDER, { idcounter: parseInt(match[1], 10) });\r\n        }, PLACEHOLDER);\r\n        // icu message ref\r\n        lexer.rule(/<ICU-Message-Ref_([0-9]+)\\/>/, (ctx, match) => {\r\n            ctx.accept(ICU_MESSAGE_REF, { idcounter: parseInt(match[1], 10) });\r\n        }, ICU_MESSAGE_REF);\r\n        // icu message\r\n        lexer.rule(/<ICU-Message\\/>/, (ctx, match) => {\r\n            ctx.accept(ICU_MESSAGE, { message: match[0] });\r\n        }, ICU_MESSAGE);\r\n        // text\r\n        lexer.rule(/./, (ctx, match) => {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        lexer.rule(/[\\t\\r\\n]+/, (ctx, match) => {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        return lexer;\r\n    }\r\n    tokenize(normalizedMessage) {\r\n        const lexer = this.getLexer();\r\n        lexer.reset();\r\n        lexer.input(normalizedMessage);\r\n        return lexer.tokens();\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"parsed-message-tokenizer.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/parsed-message-tokenizer.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[15,0,0,15],[21,0,0,21],[31,0,0,31],[32,0,0,32]],[[0,0,1,0],[7,0,1,7],[9,0,1,8],[26,0,1,25],[28,0,1,26],[34,0,1,32],[43,0,1,41],[44,0,1,42]],[[0,0,3,0]],[],[],[[3,0,6,3]],[[0,0,8,0],[9,0,8,9]],[[0,0,9,0],[6,0,9,6],[7,0,9,7],[13,0,9,13],[17,0,9,17],[20,0,9,20],[26,0,9,26],[27,0,9,27]],[[0,0,10,0],[6,0,10,6],[7,0,10,7],[13,0,10,13],[22,0,10,22],[25,0,10,25],[36,0,10,36],[37,0,10,37]],[[0,0,11,0],[6,0,11,6],[7,0,11,7],[13,0,11,13],[20,0,11,20],[23,0,11,23],[32,0,11,32],[33,0,11,33]],[[0,0,12,0],[6,0,12,6],[7,0,12,7],[13,0,12,13],[22,0,12,22],[25,0,12,25],[36,0,12,36],[37,0,12,37]],[[0,0,13,0],[6,0,13,6],[7,0,13,7],[13,0,13,13],[24,0,13,24],[27,0,13,27],[40,0,13,40],[41,0,13,41]],[[0,0,14,0],[6,0,14,6],[7,0,14,7],[13,0,14,13],[28,0,14,28],[31,0,14,31],[48,0,14,48],[49,0,14,49]],[[0,0,15,0],[6,0,15,6],[7,0,15,7],[13,0,15,13],[24,0,15,24],[27,0,15,27],[40,0,15,40],[41,0,15,41]],[[0,0,22,0],[6,0,22,6],[13,0,22,13],[34,0,22,34]],[[4,0,24,12],[12,0,24,20]],[[8,0,25,8],[14,0,25,14],[19,0,25,19],[22,0,25,22],[26,0,25,26],[34,0,25,34],[36,0,25,36],[37,0,25,37]],[[8,0,26,8],[12,0,26,12],[21,0,26,21],[24,0,26,24],[26,0,26,26],[27,0,26,27]],[[8,0,27,8],[13,0,27,13],[14,0,27,14],[20,0,27,20],[21,0,27,21],[22,0,27,22],[25,0,27,25],[27,0,27,27],[32,0,27,32],[34,0,27,34],[38,0,27,38],[40,0,27,40],[42,0,27,42]],[[12,0,28,12],[16,0,28,16],[20,0,28,20],[21,0,28,21],[25,0,28,25],[30,0,28,30],[34,0,28,34],[38,0,28,38],[47,0,28,47],[52,0,28,52],[54,0,28,54],[56,0,28,56]],[[16,0,29,16],[19,0,29,19],[20,0,29,20],[26,0,29,26],[27,0,29,27],[31,0,29,31],[33,0,29,33],[35,0,29,34],[39,0,29,38],[41,0,29,40],[50,0,29,49],[52,0,29,50],[53,0,29,51],[54,0,29,52]],[[16,0,30,16],[25,0,30,25],[28,0,30,28],[30,0,30,30],[31,0,30,31]],[[13,0,31,13]],[[8,0,32,8],[9,0,32,9],[10,0,32,10],[11,0,32,11]],[[8,0,33,8],[13,0,33,13],[14,0,33,14],[20,0,33,20],[21,0,33,21],[22,0,33,22],[25,0,33,25],[27,0,33,27],[29,0,33,29]],[[12,0,34,12],[16,0,34,16],[25,0,34,25],[30,0,34,30],[32,0,34,32],[34,0,34,34]],[[16,0,35,16],[19,0,35,19],[20,0,35,20],[26,0,35,26],[27,0,35,27],[31,0,35,31],[33,0,35,33],[35,0,35,34],[39,0,35,38],[41,0,35,40],[50,0,35,49],[52,0,35,50],[53,0,35,51],[54,0,35,52]],[[13,0,36,13]],[[8,0,37,9],[9,0,37,10],[10,0,37,11],[11,0,37,12]],[[8,0,38,8],[113,0,38,113]],[[8,0,39,8],[82,0,39,82]],[[8,0,40,8],[13,0,40,13],[14,0,40,14],[18,0,40,18],[19,0,40,19],[66,0,40,66],[68,0,40,68],[69,0,40,69],[72,0,40,72],[74,0,40,74],[79,0,40,79],[81,0,40,81],[83,0,40,83]],[[12,0,41,12],[18,0,41,18],[25,0,41,25],[28,0,41,28],[45,0,41,45],[46,0,41,46],[51,0,41,51],[52,0,41,52],[53,0,41,53],[54,0,41,54],[55,0,41,55],[56,0,41,56],[57,0,41,57],[58,0,41,58],[59,0,41,59],[60,0,41,60],[61,0,41,61],[62,0,41,62],[70,0,41,70],[71,0,41,71],[76,0,41,76],[77,0,41,77],[78,0,41,78],[79,0,41,79],[81,0,41,81],[83,0,41,83],[84,0,41,84],[85,0,41,85]],[[12,0,42,12],[15,0,42,15],[16,0,42,16],[22,0,42,22],[23,0,42,23],[32,0,42,32],[34,0,42,34],[36,0,42,35],[40,0,42,39],[42,0,42,41],[47,0,42,46],[48,0,42,47],[49,0,42,48],[50,0,42,49],[52,0,42,51],[61,0,42,60],[63,0,42,62],[70,0,42,69],[72,0,42,70],[73,0,42,71],[74,0,42,72]],[[8,0,43,8],[9,0,43,9],[11,0,43,11],[20,0,43,20],[21,0,43,21],[22,0,43,22]],[[8,0,44,8],[94,0,44,94]],[[8,0,45,8],[13,0,45,13],[14,0,45,14],[18,0,45,18],[19,0,45,19],[63,0,45,63],[65,0,45,65],[66,0,45,66],[69,0,45,69],[71,0,45,71],[76,0,45,76],[78,0,45,78],[80,0,45,80]],[[12,0,46,12],[18,0,46,18],[25,0,46,25],[28,0,46,28],[45,0,46,45],[46,0,46,46],[51,0,46,51],[52,0,46,52],[53,0,46,53],[54,0,46,54],[55,0,46,55],[56,0,46,56],[57,0,46,57],[58,0,46,58],[59,0,46,59],[60,0,46,60],[61,0,46,61],[62,0,46,62],[70,0,46,70],[71,0,46,71],[76,0,46,76],[77,0,46,77],[78,0,46,78],[79,0,46,79],[81,0,46,81],[83,0,46,83],[84,0,46,84],[85,0,46,85]],[[12,0,47,12],[15,0,47,15],[16,0,47,16],[22,0,47,22],[23,0,47,23],[32,0,47,32],[34,0,47,34],[36,0,47,35],[40,0,47,39],[42,0,47,41],[47,0,47,46],[48,0,47,47],[49,0,47,48],[50,0,47,49],[52,0,47,51],[61,0,47,60],[63,0,47,62],[70,0,47,69],[72,0,47,70],[73,0,47,71],[74,0,47,72]],[[8,0,48,8],[9,0,48,9],[11,0,48,11],[20,0,48,20],[21,0,48,21],[22,0,48,22]],[[8,0,49,8],[18,0,49,18]],[[8,0,50,8],[13,0,50,13],[14,0,50,14],[18,0,50,18],[19,0,50,19],[48,0,50,48],[50,0,50,50],[51,0,50,51],[54,0,50,54],[56,0,50,56],[61,0,50,61],[63,0,50,63],[65,0,50,65]],[[12,0,51,12],[15,0,51,15],[16,0,51,16],[22,0,51,22],[23,0,51,23],[30,0,51,30],[32,0,51,32],[34,0,51,33],[38,0,51,37],[40,0,51,39],[45,0,51,44],[46,0,51,45],[47,0,51,46],[48,0,51,47],[50,0,51,48],[51,0,51,49],[52,0,51,50]],[[8,0,52,8],[9,0,52,9],[11,0,52,11],[18,0,52,18],[19,0,52,19],[20,0,52,20]],[[8,0,53,8],[22,0,53,22]],[[8,0,54,8],[13,0,54,13],[14,0,54,14],[18,0,54,18],[19,0,54,19],[33,0,54,33],[35,0,54,35],[36,0,54,36],[39,0,54,39],[41,0,54,41],[46,0,54,46],[48,0,54,48],[50,0,54,50]],[[12,0,55,12],[15,0,55,15],[16,0,55,16],[22,0,55,22],[23,0,55,23],[34,0,55,34],[36,0,55,36],[38,0,55,37],[47,0,55,46],[49,0,55,48],[57,0,55,56],[58,0,55,57],[63,0,55,62],[64,0,55,63],[65,0,55,64],[66,0,55,65],[68,0,55,67],[70,0,55,69],[71,0,55,70],[73,0,55,71],[74,0,55,72],[75,0,55,73]],[[8,0,56,8],[9,0,56,9],[11,0,56,11],[22,0,56,22],[23,0,56,23],[24,0,56,24]],[[8,0,57,8],[26,0,57,26]],[[8,0,58,8],[13,0,58,13],[14,0,58,14],[18,0,58,18],[19,0,58,19],[49,0,58,49],[51,0,58,51],[52,0,58,52],[55,0,58,55],[57,0,58,57],[62,0,58,62],[64,0,58,64],[66,0,58,66]],[[12,0,59,12],[15,0,59,15],[16,0,59,16],[22,0,59,22],[23,0,59,23],[38,0,59,38],[40,0,59,40],[42,0,59,41],[51,0,59,50],[53,0,59,52],[61,0,59,60],[62,0,59,61],[67,0,59,66],[68,0,59,67],[69,0,59,68],[70,0,59,69],[72,0,59,71],[74,0,59,73],[75,0,59,74],[77,0,59,75],[78,0,59,76],[79,0,59,77]],[[8,0,60,8],[9,0,60,9],[11,0,60,11],[26,0,60,26],[27,0,60,27],[28,0,60,28]],[[8,0,61,8],[22,0,61,22]],[[8,0,62,8],[13,0,62,13],[14,0,62,14],[18,0,62,18],[19,0,62,19],[36,0,62,36],[38,0,62,38],[39,0,62,39],[42,0,62,42],[44,0,62,44],[49,0,62,49],[51,0,62,51],[53,0,62,53]],[[12,0,63,12],[15,0,63,15],[16,0,63,16],[22,0,63,22],[23,0,63,23],[34,0,63,34],[36,0,63,36],[38,0,63,37],[45,0,63,44],[47,0,63,46],[52,0,63,51],[53,0,63,52],[54,0,63,53],[55,0,63,54],[57,0,63,55],[58,0,63,56],[59,0,63,57]],[[8,0,64,8],[9,0,64,9],[11,0,64,11],[22,0,64,22],[23,0,64,23],[24,0,64,24]],[[8,0,65,8],[15,0,65,15]],[[8,0,66,8],[13,0,66,13],[14,0,66,14],[18,0,66,18],[19,0,66,19],[22,0,66,22],[24,0,66,24],[25,0,66,25],[28,0,66,28],[30,0,66,30],[35,0,66,35],[37,0,66,37],[39,0,66,39]],[[12,0,67,12],[21,0,67,21],[25,0,67,25],[30,0,67,30],[31,0,67,31],[32,0,67,32],[33,0,67,33],[34,0,67,34]],[[12,0,68,12],[15,0,68,15],[16,0,68,16],[22,0,68,22],[24,0,68,24],[25,0,68,25]],[[8,0,69,8],[9,0,69,9],[11,0,69,11],[15,0,69,15],[16,0,69,16],[17,0,69,17]],[[8,0,70,8],[13,0,70,13],[14,0,70,14],[18,0,70,18],[19,0,70,19],[30,0,70,30],[32,0,70,32],[33,0,70,33],[36,0,70,36],[38,0,70,38],[43,0,70,43],[45,0,70,45],[47,0,70,47]],[[12,0,71,12],[21,0,71,21],[25,0,71,25],[30,0,71,30],[31,0,71,31],[32,0,71,32],[33,0,71,33],[34,0,71,34]],[[12,0,72,12],[15,0,72,15],[16,0,72,16],[22,0,72,22],[24,0,72,24],[25,0,72,25]],[[8,0,73,8],[9,0,73,9],[11,0,73,11],[15,0,73,15],[16,0,73,16],[17,0,73,17]],[[8,0,74,8],[15,0,74,15],[20,0,74,20],[21,0,74,21]],[[4,0,75,4],[5,0,75,5]],[[4,0,77,4],[12,0,77,12],[13,0,77,13],[30,0,77,38]],[[8,0,78,8],[14,0,78,14],[19,0,78,19],[22,0,78,32],[26,0,78,36],[27,0,78,37],[35,0,78,45],[37,0,78,47],[38,0,78,48]],[[8,0,79,8],[13,0,79,13],[14,0,79,14],[19,0,79,19],[21,0,79,21],[22,0,79,22]],[[8,0,80,8],[13,0,80,13],[14,0,80,14],[19,0,80,19],[20,0,80,20],[37,0,80,37],[38,0,80,38],[39,0,80,39]],[[8,0,81,8],[15,0,81,15],[20,0,81,20],[21,0,81,21],[27,0,81,27],[29,0,81,29],[30,0,81,30]],[[4,0,82,4],[5,0,82,5]],[[1,0,84,1]]],"sourcesContent":["import Tokenizr from 'tokenizr';\r\nimport {isNullOrUndefined} from 'is-what';\r\n\r\n/**\r\n * Created by martin on 14.05.2017.\r\n * A tokenizer for normalized messages.\r\n */\r\n\r\n// Tokens\r\nexport const TEXT = 'TEXT';\r\nexport const START_TAG = 'START_TAG';\r\nexport const END_TAG = 'END_TAG';\r\nexport const EMPTY_TAG = 'EMPTY_TAG';\r\nexport const PLACEHOLDER = 'PLACEHOLDER';\r\nexport const ICU_MESSAGE_REF = 'ICU_MESSAGE_REF';\r\nexport const ICU_MESSAGE = 'ICU_MESSAGE';\r\n\r\nexport interface Token {\r\n    type: string;\r\n    value: any;\r\n}\r\n\r\nexport class ParsedMesageTokenizer {\r\n\r\n    private getLexer(): Tokenizr {\r\n        const lexer = new Tokenizr();\r\n        let plaintext = '';\r\n        lexer.before((ctx, match, rule) => {\r\n            if (rule.name !== TEXT && plaintext !== '') {\r\n                ctx.accept(TEXT, {text: plaintext});\r\n                plaintext = '';\r\n            }\r\n        });\r\n        lexer.finish((ctx) => {\r\n            if (plaintext !== '') {\r\n                ctx.accept(TEXT, {text: plaintext});\r\n            }\r\n         });\r\n        // empty tag, there are only a few allowed (see tag-mappings): ['BR', 'HR', 'IMG', 'AREA', 'LINK', 'WBR']\r\n        // format is <name id=\"nr\">, nr ist optional, z.B. <img> oder <img id=\"2\">\r\n        lexer.rule(/<(br|hr|img|area|link|wbr)( id=\"([0-9])*\")?\\>/, (ctx, match) => {\r\n            const idcount = isNullOrUndefined(match[3]) ? 0 : parseInt(match[3], 10);\r\n            ctx.accept(EMPTY_TAG, {name: match[1], idcounter: idcount});\r\n        }, EMPTY_TAG);\r\n        // start tag, Format <name id=\"nr\">, nr ist optional, z.B. <mytag> oder <mytag id=\"2\">\r\n        lexer.rule(/<([a-zA-Z][a-zA-Z-0-9]*)( id=\"([0-9]*)\")?>/, (ctx, match) => {\r\n            const idcount = isNullOrUndefined(match[3]) ? 0 : parseInt(match[3], 10);\r\n            ctx.accept(START_TAG, {name: match[1], idcounter: idcount});\r\n        }, START_TAG);\r\n        // end tag\r\n        lexer.rule(/<\\/([a-zA-Z][a-zA-Z-0-9]*)>/, (ctx, match) => {\r\n            ctx.accept(END_TAG, {name: match[1]});\r\n        }, END_TAG);\r\n        // placeholder\r\n        lexer.rule(/{{([0-9]+)}}/, (ctx, match) => {\r\n            ctx.accept(PLACEHOLDER, {idcounter: parseInt(match[1], 10)});\r\n        }, PLACEHOLDER);\r\n        // icu message ref\r\n        lexer.rule(/<ICU-Message-Ref_([0-9]+)\\/>/, (ctx, match) => {\r\n            ctx.accept(ICU_MESSAGE_REF, {idcounter: parseInt(match[1], 10)});\r\n        }, ICU_MESSAGE_REF);\r\n        // icu message\r\n        lexer.rule(/<ICU-Message\\/>/, (ctx, match) => {\r\n            ctx.accept(ICU_MESSAGE, {message: match[0]});\r\n        }, ICU_MESSAGE);\r\n        // text\r\n        lexer.rule(/./, (ctx, match) => {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        lexer.rule(/[\\t\\r\\n]+/, (ctx, match) => {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        return lexer;\r\n    }\r\n\r\n    tokenize(normalizedMessage: string): Token[] {\r\n        const lexer: Tokenizr = this.getLexer();\r\n        lexer.reset();\r\n        lexer.input(normalizedMessage);\r\n        return lexer.tokens();\r\n    }\r\n\r\n}\r\n"]},"resolvedIds":{"tokenizr":{"external":true,"id":"tokenizr","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"is-what":{"external":true,"id":"is-what","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":34051,"body":[{"type":"ImportDeclaration","start":0,"end":49,"specifiers":[{"type":"ImportSpecifier","start":9,"end":22,"imported":{"type":"Identifier","start":9,"end":22,"name":"ParsedMessage"},"local":{"type":"Identifier","start":9,"end":22,"name":"ParsedMessage"}}],"source":{"type":"Literal","start":30,"end":48,"value":"./parsed-message","raw":"'./parsed-message'"}},{"type":"ImportDeclaration","start":51,"end":198,"specifiers":[{"type":"ImportSpecifier","start":60,"end":69,"imported":{"type":"Identifier","start":60,"end":69,"name":"EMPTY_TAG"},"local":{"type":"Identifier","start":60,"end":69,"name":"EMPTY_TAG"}},{"type":"ImportSpecifier","start":71,"end":78,"imported":{"type":"Identifier","start":71,"end":78,"name":"END_TAG"},"local":{"type":"Identifier","start":71,"end":78,"name":"END_TAG"}},{"type":"ImportSpecifier","start":80,"end":91,"imported":{"type":"Identifier","start":80,"end":91,"name":"ICU_MESSAGE"},"local":{"type":"Identifier","start":80,"end":91,"name":"ICU_MESSAGE"}},{"type":"ImportSpecifier","start":93,"end":108,"imported":{"type":"Identifier","start":93,"end":108,"name":"ICU_MESSAGE_REF"},"local":{"type":"Identifier","start":93,"end":108,"name":"ICU_MESSAGE_REF"}},{"type":"ImportSpecifier","start":110,"end":131,"imported":{"type":"Identifier","start":110,"end":131,"name":"ParsedMesageTokenizer"},"local":{"type":"Identifier","start":110,"end":131,"name":"ParsedMesageTokenizer"}},{"type":"ImportSpecifier","start":133,"end":144,"imported":{"type":"Identifier","start":133,"end":144,"name":"PLACEHOLDER"},"local":{"type":"Identifier","start":133,"end":144,"name":"PLACEHOLDER"}},{"type":"ImportSpecifier","start":146,"end":155,"imported":{"type":"Identifier","start":146,"end":155,"name":"START_TAG"},"local":{"type":"Identifier","start":146,"end":155,"name":"START_TAG"}},{"type":"ImportSpecifier","start":157,"end":161,"imported":{"type":"Identifier","start":157,"end":161,"name":"TEXT"},"local":{"type":"Identifier","start":157,"end":161,"name":"TEXT"}}],"source":{"type":"Literal","start":169,"end":197,"value":"./parsed-message-tokenizer","raw":"'./parsed-message-tokenizer'"}},{"type":"ImportDeclaration","start":200,"end":235,"specifiers":[{"type":"ImportSpecifier","start":209,"end":218,"imported":{"type":"Identifier","start":209,"end":218,"name":"DOMParser"},"local":{"type":"Identifier","start":209,"end":218,"name":"DOMParser"}}],"source":{"type":"Literal","start":226,"end":234,"value":"xmldom","raw":"'xmldom'"}},{"type":"ImportDeclaration","start":237,"end":267,"specifiers":[{"type":"ImportSpecifier","start":246,"end":252,"imported":{"type":"Identifier","start":246,"end":252,"name":"format"},"local":{"type":"Identifier","start":246,"end":252,"name":"format"}}],"source":{"type":"Literal","start":260,"end":266,"value":"util","raw":"'util'"}},{"type":"ImportDeclaration","start":269,"end":313,"specifiers":[{"type":"ImportSpecifier","start":278,"end":295,"imported":{"type":"Identifier","start":278,"end":295,"name":"isNullOrUndefined"},"local":{"type":"Identifier","start":278,"end":295,"name":"isNullOrUndefined"}}],"source":{"type":"Literal","start":303,"end":312,"value":"is-what","raw":"'is-what'"}},{"type":"ImportDeclaration","start":315,"end":362,"specifiers":[{"type":"ImportSpecifier","start":324,"end":336,"imported":{"type":"Identifier","start":324,"end":336,"name":"DOMUtilities"},"local":{"type":"Identifier","start":324,"end":336,"name":"DOMUtilities"}}],"source":{"type":"Literal","start":344,"end":361,"value":"./dom-utilities","raw":"'./dom-utilities'"}},{"type":"ImportDeclaration","start":364,"end":444,"specifiers":[{"type":"ImportSpecifier","start":373,"end":400,"imported":{"type":"Identifier","start":373,"end":400,"name":"ParsedMessagePartICUMessage"},"local":{"type":"Identifier","start":373,"end":400,"name":"ParsedMessagePartICUMessage"}}],"source":{"type":"Literal","start":408,"end":443,"value":"./parsed-message-part-icu-message","raw":"'./parsed-message-part-icu-message'"}},{"type":"ExportNamedDeclaration","start":608,"end":9099,"declaration":{"type":"ClassDeclaration","start":615,"end":9099,"id":{"type":"Identifier","start":621,"end":642,"name":"AbstractMessageParser"},"superClass":null,"body":{"type":"ClassBody","start":643,"end":9099,"body":[{"type":"MethodDefinition","start":916,"end":1236,"static":false,"computed":false,"key":{"type":"Identifier","start":916,"end":946,"name":"createNormalizedMessageFromXML"},"kind":"method","value":{"type":"FunctionExpression","start":946,"end":1236,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":947,"end":957,"name":"xmlElement"},{"type":"Identifier","start":959,"end":972,"name":"sourceMessage"}],"body":{"type":"BlockStatement","start":974,"end":1236,"body":[{"type":"VariableDeclaration","start":985,"end":1040,"declarations":[{"type":"VariableDeclarator","start":991,"end":1039,"id":{"type":"Identifier","start":991,"end":998,"name":"message"},"init":{"type":"NewExpression","start":1001,"end":1039,"callee":{"type":"Identifier","start":1005,"end":1018,"name":"ParsedMessage"},"arguments":[{"type":"ThisExpression","start":1019,"end":1023},{"type":"Identifier","start":1025,"end":1038,"name":"sourceMessage"}]}}],"kind":"const"},{"type":"IfStatement","start":1050,"end":1204,"test":{"type":"Identifier","start":1054,"end":1064,"name":"xmlElement"},"consequent":{"type":"BlockStatement","start":1066,"end":1204,"body":[{"type":"ExpressionStatement","start":1081,"end":1122,"expression":{"type":"CallExpression","start":1081,"end":1121,"callee":{"type":"MemberExpression","start":1081,"end":1109,"object":{"type":"Identifier","start":1081,"end":1088,"name":"message"},"property":{"type":"Identifier","start":1089,"end":1109,"name":"setXmlRepresentation"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1110,"end":1120,"name":"xmlElement"}],"optional":false}},{"type":"ExpressionStatement","start":1136,"end":1193,"expression":{"type":"CallExpression","start":1136,"end":1192,"callee":{"type":"MemberExpression","start":1136,"end":1164,"object":{"type":"ThisExpression","start":1136,"end":1140},"property":{"type":"Identifier","start":1141,"end":1164,"name":"addPartsOfNodeToMessage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1165,"end":1175,"name":"xmlElement"},{"type":"Identifier","start":1177,"end":1184,"name":"message"},{"type":"Literal","start":1186,"end":1191,"value":false,"raw":"false"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":1214,"end":1229,"argument":{"type":"Identifier","start":1221,"end":1228,"name":"message"}}]}}},{"type":"MethodDefinition","start":1573,"end":1878,"static":false,"computed":false,"key":{"type":"Identifier","start":1573,"end":1609,"name":"createNormalizedMessageFromXMLString"},"kind":"method","value":{"type":"FunctionExpression","start":1609,"end":1878,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1610,"end":1619,"name":"xmlString"},{"type":"Identifier","start":1621,"end":1634,"name":"sourceMessage"}],"body":{"type":"BlockStatement","start":1636,"end":1878,"body":[{"type":"VariableDeclaration","start":1647,"end":1739,"declarations":[{"type":"VariableDeclarator","start":1653,"end":1738,"id":{"type":"Identifier","start":1653,"end":1656,"name":"doc"},"init":{"type":"CallExpression","start":1659,"end":1738,"callee":{"type":"MemberExpression","start":1659,"end":1690,"object":{"type":"NewExpression","start":1659,"end":1674,"callee":{"type":"Identifier","start":1663,"end":1672,"name":"DOMParser"},"arguments":[]},"property":{"type":"Identifier","start":1675,"end":1690,"name":"parseFromString"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":1691,"end":1725,"left":{"type":"BinaryExpression","start":1691,"end":1712,"left":{"type":"Literal","start":1691,"end":1700,"value":"<dummy>","raw":"'<dummy>'"},"operator":"+","right":{"type":"Identifier","start":1703,"end":1712,"name":"xmlString"}},"operator":"+","right":{"type":"Literal","start":1715,"end":1725,"value":"</dummy>","raw":"'</dummy>'"}},{"type":"Literal","start":1727,"end":1737,"value":"text/xml","raw":"'text/xml'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1749,"end":1791,"declarations":[{"type":"VariableDeclarator","start":1755,"end":1790,"id":{"type":"Identifier","start":1755,"end":1765,"name":"xmlElement"},"init":{"type":"CallExpression","start":1768,"end":1790,"callee":{"type":"MemberExpression","start":1768,"end":1787,"object":{"type":"MemberExpression","start":1768,"end":1782,"object":{"type":"Identifier","start":1768,"end":1771,"name":"doc"},"property":{"type":"Identifier","start":1772,"end":1782,"name":"childNodes"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1783,"end":1787,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1788,"end":1789,"value":0,"raw":"0"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":1801,"end":1871,"argument":{"type":"CallExpression","start":1808,"end":1870,"callee":{"type":"MemberExpression","start":1808,"end":1843,"object":{"type":"ThisExpression","start":1808,"end":1812},"property":{"type":"Identifier","start":1813,"end":1843,"name":"createNormalizedMessageFromXML"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1844,"end":1854,"name":"xmlElement"},{"type":"Identifier","start":1856,"end":1869,"name":"sourceMessage"}],"optional":false}}]}}},{"type":"MethodDefinition","start":2140,"end":3487,"static":false,"computed":false,"key":{"type":"Identifier","start":2140,"end":2163,"name":"addPartsOfNodeToMessage"},"kind":"method","value":{"type":"FunctionExpression","start":2163,"end":3487,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2164,"end":2168,"name":"node"},{"type":"Identifier","start":2170,"end":2177,"name":"message"},{"type":"Identifier","start":2179,"end":2190,"name":"includeSelf"}],"body":{"type":"BlockStatement","start":2192,"end":3487,"body":[{"type":"VariableDeclaration","start":2203,"end":2230,"declarations":[{"type":"VariableDeclarator","start":2207,"end":2229,"id":{"type":"Identifier","start":2207,"end":2222,"name":"processChildren"},"init":{"type":"Literal","start":2225,"end":2229,"value":true,"raw":"true"}}],"kind":"let"},{"type":"IfStatement","start":2240,"end":2561,"test":{"type":"Identifier","start":2244,"end":2255,"name":"includeSelf"},"consequent":{"type":"BlockStatement","start":2257,"end":2561,"body":[{"type":"IfStatement","start":2272,"end":2403,"test":{"type":"BinaryExpression","start":2276,"end":2308,"left":{"type":"MemberExpression","start":2276,"end":2289,"object":{"type":"Identifier","start":2276,"end":2280,"name":"node"},"property":{"type":"Identifier","start":2281,"end":2289,"name":"nodeType"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":2294,"end":2308,"object":{"type":"Identifier","start":2294,"end":2298,"name":"node"},"property":{"type":"Identifier","start":2299,"end":2308,"name":"TEXT_NODE"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":2310,"end":2403,"body":[{"type":"ExpressionStatement","start":2329,"end":2363,"expression":{"type":"CallExpression","start":2329,"end":2362,"callee":{"type":"MemberExpression","start":2329,"end":2344,"object":{"type":"Identifier","start":2329,"end":2336,"name":"message"},"property":{"type":"Identifier","start":2337,"end":2344,"name":"addText"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2345,"end":2361,"object":{"type":"Identifier","start":2345,"end":2349,"name":"node"},"property":{"type":"Identifier","start":2350,"end":2361,"name":"textContent"},"computed":false,"optional":false}],"optional":false}},{"type":"ReturnStatement","start":2381,"end":2388,"argument":null}]},"alternate":null},{"type":"IfStatement","start":2417,"end":2550,"test":{"type":"BinaryExpression","start":2421,"end":2456,"left":{"type":"MemberExpression","start":2421,"end":2434,"object":{"type":"Identifier","start":2421,"end":2425,"name":"node"},"property":{"type":"Identifier","start":2426,"end":2434,"name":"nodeType"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":2439,"end":2456,"object":{"type":"Identifier","start":2439,"end":2443,"name":"node"},"property":{"type":"Identifier","start":2444,"end":2456,"name":"ELEMENT_NODE"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":2458,"end":2550,"body":[{"type":"ExpressionStatement","start":2477,"end":2535,"expression":{"type":"AssignmentExpression","start":2477,"end":2534,"operator":"=","left":{"type":"Identifier","start":2477,"end":2492,"name":"processChildren"},"right":{"type":"CallExpression","start":2495,"end":2534,"callee":{"type":"MemberExpression","start":2495,"end":2519,"object":{"type":"ThisExpression","start":2495,"end":2499},"property":{"type":"Identifier","start":2500,"end":2519,"name":"processStartElement"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2520,"end":2524,"name":"node"},{"type":"Identifier","start":2526,"end":2533,"name":"message"}],"optional":false}}}]},"alternate":null}]},"alternate":null},{"type":"IfStatement","start":2571,"end":3365,"test":{"type":"Identifier","start":2575,"end":2590,"name":"processChildren"},"consequent":{"type":"BlockStatement","start":2592,"end":3365,"body":[{"type":"VariableDeclaration","start":2607,"end":2659,"declarations":[{"type":"VariableDeclarator","start":2613,"end":2658,"id":{"type":"Identifier","start":2613,"end":2627,"name":"icuMessageText"},"init":{"type":"CallExpression","start":2630,"end":2658,"callee":{"type":"MemberExpression","start":2630,"end":2652,"object":{"type":"ThisExpression","start":2630,"end":2634},"property":{"type":"Identifier","start":2635,"end":2652,"name":"getICUMessageText"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2653,"end":2657,"name":"node"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":2673,"end":2720,"declarations":[{"type":"VariableDeclarator","start":2677,"end":2719,"id":{"type":"Identifier","start":2677,"end":2682,"name":"isICU"},"init":{"type":"UnaryExpression","start":2685,"end":2719,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":2686,"end":2719,"callee":{"type":"Identifier","start":2686,"end":2703,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":2704,"end":2718,"name":"icuMessageText"}],"optional":false}}}],"kind":"let"},{"type":"IfStatement","start":2734,"end":3097,"test":{"type":"Identifier","start":2738,"end":2743,"name":"isICU"},"consequent":{"type":"BlockStatement","start":2745,"end":3097,"body":[{"type":"TryStatement","start":2764,"end":3082,"block":{"type":"BlockStatement","start":2768,"end":2848,"body":[{"type":"ExpressionStatement","start":2791,"end":2829,"expression":{"type":"CallExpression","start":2791,"end":2828,"callee":{"type":"MemberExpression","start":2791,"end":2812,"object":{"type":"Identifier","start":2791,"end":2798,"name":"message"},"property":{"type":"Identifier","start":2799,"end":2812,"name":"addICUMessage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2813,"end":2827,"name":"icuMessageText"}],"optional":false}}]},"handler":{"type":"CatchClause","start":2866,"end":3082,"param":{"type":"Identifier","start":2873,"end":2878,"name":"error"},"body":{"type":"BlockStatement","start":2880,"end":3082,"body":[{"type":"ExpressionStatement","start":2971,"end":3027,"expression":{"type":"CallExpression","start":2971,"end":3026,"callee":{"type":"MemberExpression","start":2971,"end":2982,"object":{"type":"Identifier","start":2971,"end":2978,"name":"console"},"property":{"type":"Identifier","start":2979,"end":2982,"name":"log"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2983,"end":3002,"value":"non ICU message: ","raw":"'non ICU message: '"},{"type":"Identifier","start":3004,"end":3018,"name":"icuMessageText"},{"type":"Identifier","start":3020,"end":3025,"name":"error"}],"optional":false}},{"type":"ExpressionStatement","start":3049,"end":3063,"expression":{"type":"AssignmentExpression","start":3049,"end":3062,"operator":"=","left":{"type":"Identifier","start":3049,"end":3054,"name":"isICU"},"right":{"type":"Literal","start":3057,"end":3062,"value":false,"raw":"false"}}}]}},"finalizer":null}]},"alternate":null},{"type":"IfStatement","start":3111,"end":3354,"test":{"type":"UnaryExpression","start":3115,"end":3121,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":3116,"end":3121,"name":"isICU"}},"consequent":{"type":"BlockStatement","start":3123,"end":3354,"body":[{"type":"VariableDeclaration","start":3142,"end":3175,"declarations":[{"type":"VariableDeclarator","start":3148,"end":3174,"id":{"type":"Identifier","start":3148,"end":3156,"name":"children"},"init":{"type":"MemberExpression","start":3159,"end":3174,"object":{"type":"Identifier","start":3159,"end":3163,"name":"node"},"property":{"type":"Identifier","start":3164,"end":3174,"name":"childNodes"},"computed":false,"optional":false}}],"kind":"const"},{"type":"ForStatement","start":3193,"end":3339,"init":{"type":"VariableDeclaration","start":3198,"end":3207,"declarations":[{"type":"VariableDeclarator","start":3202,"end":3207,"id":{"type":"Identifier","start":3202,"end":3203,"name":"i"},"init":{"type":"Literal","start":3206,"end":3207,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":3209,"end":3228,"left":{"type":"Identifier","start":3209,"end":3210,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":3213,"end":3228,"object":{"type":"Identifier","start":3213,"end":3221,"name":"children"},"property":{"type":"Identifier","start":3222,"end":3228,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":3230,"end":3233,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":3230,"end":3231,"name":"i"}},"body":{"type":"BlockStatement","start":3235,"end":3339,"body":[{"type":"ExpressionStatement","start":3258,"end":3320,"expression":{"type":"CallExpression","start":3258,"end":3319,"callee":{"type":"MemberExpression","start":3258,"end":3286,"object":{"type":"ThisExpression","start":3258,"end":3262},"property":{"type":"Identifier","start":3263,"end":3286,"name":"addPartsOfNodeToMessage"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3287,"end":3303,"callee":{"type":"MemberExpression","start":3287,"end":3300,"object":{"type":"Identifier","start":3287,"end":3295,"name":"children"},"property":{"type":"Identifier","start":3296,"end":3300,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3301,"end":3302,"name":"i"}],"optional":false},{"type":"Identifier","start":3305,"end":3312,"name":"message"},{"type":"Literal","start":3314,"end":3318,"value":true,"raw":"true"}],"optional":false}}]}}]},"alternate":null}]},"alternate":null},{"type":"IfStatement","start":3375,"end":3480,"test":{"type":"BinaryExpression","start":3379,"end":3414,"left":{"type":"MemberExpression","start":3379,"end":3392,"object":{"type":"Identifier","start":3379,"end":3383,"name":"node"},"property":{"type":"Identifier","start":3384,"end":3392,"name":"nodeType"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":3397,"end":3414,"object":{"type":"Identifier","start":3397,"end":3401,"name":"node"},"property":{"type":"Identifier","start":3402,"end":3414,"name":"ELEMENT_NODE"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":3416,"end":3480,"body":[{"type":"ExpressionStatement","start":3431,"end":3469,"expression":{"type":"CallExpression","start":3431,"end":3468,"callee":{"type":"MemberExpression","start":3431,"end":3453,"object":{"type":"ThisExpression","start":3431,"end":3435},"property":{"type":"Identifier","start":3436,"end":3453,"name":"processEndElement"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3454,"end":3458,"name":"node"},{"type":"Identifier","start":3460,"end":3467,"name":"message"}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":3671,"end":4197,"static":false,"computed":false,"key":{"type":"Identifier","start":3671,"end":3688,"name":"getICUMessageText"},"kind":"method","value":{"type":"FunctionExpression","start":3688,"end":4197,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3689,"end":3693,"name":"node"}],"body":{"type":"BlockStatement","start":3695,"end":4197,"body":[{"type":"VariableDeclaration","start":3706,"end":3739,"declarations":[{"type":"VariableDeclarator","start":3712,"end":3738,"id":{"type":"Identifier","start":3712,"end":3720,"name":"children"},"init":{"type":"MemberExpression","start":3723,"end":3738,"object":{"type":"Identifier","start":3723,"end":3727,"name":"node"},"property":{"type":"Identifier","start":3728,"end":3738,"name":"childNodes"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3749,"end":3814,"test":{"type":"BinaryExpression","start":3753,"end":3774,"left":{"type":"MemberExpression","start":3753,"end":3768,"object":{"type":"Identifier","start":3753,"end":3761,"name":"children"},"property":{"type":"Identifier","start":3762,"end":3768,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":3773,"end":3774,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":3776,"end":3814,"body":[{"type":"ReturnStatement","start":3791,"end":3803,"argument":{"type":"Literal","start":3798,"end":3802,"value":null,"raw":"null"}}]},"alternate":null},{"type":"VariableDeclaration","start":3824,"end":3860,"declarations":[{"type":"VariableDeclarator","start":3830,"end":3859,"id":{"type":"Identifier","start":3830,"end":3840,"name":"firstChild"},"init":{"type":"CallExpression","start":3843,"end":3859,"callee":{"type":"MemberExpression","start":3843,"end":3856,"object":{"type":"Identifier","start":3843,"end":3851,"name":"children"},"property":{"type":"Identifier","start":3852,"end":3856,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3857,"end":3858,"value":0,"raw":"0"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3870,"end":4190,"test":{"type":"BinaryExpression","start":3874,"end":3918,"left":{"type":"MemberExpression","start":3874,"end":3893,"object":{"type":"Identifier","start":3874,"end":3884,"name":"firstChild"},"property":{"type":"Identifier","start":3885,"end":3893,"name":"nodeType"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":3898,"end":3918,"object":{"type":"Identifier","start":3898,"end":3908,"name":"firstChild"},"property":{"type":"Identifier","start":3909,"end":3918,"name":"TEXT_NODE"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":3920,"end":4137,"body":[{"type":"IfStatement","start":3935,"end":4126,"test":{"type":"CallExpression","start":3939,"end":3985,"callee":{"type":"MemberExpression","start":3939,"end":3961,"object":{"type":"ThisExpression","start":3939,"end":3943},"property":{"type":"Identifier","start":3944,"end":3961,"name":"isICUMessageStart"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3962,"end":3984,"object":{"type":"Identifier","start":3962,"end":3972,"name":"firstChild"},"property":{"type":"Identifier","start":3973,"end":3984,"name":"textContent"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":3987,"end":4061,"body":[{"type":"ReturnStatement","start":4006,"end":4046,"argument":{"type":"CallExpression","start":4013,"end":4045,"callee":{"type":"MemberExpression","start":4013,"end":4039,"object":{"type":"Identifier","start":4013,"end":4025,"name":"DOMUtilities"},"property":{"type":"Identifier","start":4026,"end":4039,"name":"getXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4040,"end":4044,"name":"node"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":4080,"end":4126,"body":[{"type":"ReturnStatement","start":4099,"end":4111,"argument":{"type":"Literal","start":4106,"end":4110,"value":null,"raw":"null"}}]}}]},"alternate":{"type":"BlockStatement","start":4152,"end":4190,"body":[{"type":"ReturnStatement","start":4167,"end":4179,"argument":{"type":"Literal","start":4174,"end":4178,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":4301,"end":4496,"static":false,"computed":false,"key":{"type":"Identifier","start":4301,"end":4318,"name":"isICUMessageStart"},"kind":"method","value":{"type":"FunctionExpression","start":4318,"end":4496,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4319,"end":4323,"name":"text"}],"body":{"type":"BlockStatement","start":4325,"end":4496,"body":[{"type":"ReturnStatement","start":4336,"end":4397,"argument":{"type":"CallExpression","start":4343,"end":4396,"callee":{"type":"MemberExpression","start":4343,"end":4390,"object":{"type":"Identifier","start":4343,"end":4370,"name":"ParsedMessagePartICUMessage"},"property":{"type":"Identifier","start":4371,"end":4390,"name":"looksLikeICUMessage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4391,"end":4395,"name":"text"}],"optional":false}}]}}},{"type":"MethodDefinition","start":4824,"end":7370,"static":false,"computed":false,"key":{"type":"Identifier","start":4824,"end":4845,"name":"parseNormalizedString"},"kind":"method","value":{"type":"FunctionExpression","start":4845,"end":7370,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4846,"end":4862,"name":"normalizedString"},{"type":"Identifier","start":4864,"end":4877,"name":"sourceMessage"}],"body":{"type":"BlockStatement","start":4879,"end":7370,"body":[{"type":"VariableDeclaration","start":4890,"end":4945,"declarations":[{"type":"VariableDeclarator","start":4896,"end":4944,"id":{"type":"Identifier","start":4896,"end":4903,"name":"message"},"init":{"type":"NewExpression","start":4906,"end":4944,"callee":{"type":"Identifier","start":4910,"end":4923,"name":"ParsedMessage"},"arguments":[{"type":"ThisExpression","start":4924,"end":4928},{"type":"Identifier","start":4930,"end":4943,"name":"sourceMessage"}]}}],"kind":"const"},{"type":"VariableDeclaration","start":4955,"end":4975,"declarations":[{"type":"VariableDeclarator","start":4961,"end":4974,"id":{"type":"Identifier","start":4961,"end":4969,"name":"openTags"},"init":{"type":"ArrayExpression","start":4972,"end":4974,"elements":[]}}],"kind":"const"},{"type":"VariableDeclaration","start":4985,"end":4996,"declarations":[{"type":"VariableDeclarator","start":4989,"end":4995,"id":{"type":"Identifier","start":4989,"end":4995,"name":"tokens"},"init":null}],"kind":"let"},{"type":"TryStatement","start":5006,"end":5268,"block":{"type":"BlockStatement","start":5010,"end":5100,"body":[{"type":"ExpressionStatement","start":5025,"end":5089,"expression":{"type":"AssignmentExpression","start":5025,"end":5088,"operator":"=","left":{"type":"Identifier","start":5025,"end":5031,"name":"tokens"},"right":{"type":"CallExpression","start":5034,"end":5088,"callee":{"type":"MemberExpression","start":5034,"end":5070,"object":{"type":"NewExpression","start":5034,"end":5061,"callee":{"type":"Identifier","start":5038,"end":5059,"name":"ParsedMesageTokenizer"},"arguments":[]},"property":{"type":"Identifier","start":5062,"end":5070,"name":"tokenize"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5071,"end":5087,"name":"normalizedString"}],"optional":false}}}]},"handler":{"type":"CatchClause","start":5110,"end":5268,"param":{"type":"Identifier","start":5117,"end":5122,"name":"error"},"body":{"type":"BlockStatement","start":5124,"end":5268,"body":[{"type":"ThrowStatement","start":5139,"end":5257,"argument":{"type":"NewExpression","start":5145,"end":5256,"callee":{"type":"Identifier","start":5149,"end":5154,"name":"Error"},"arguments":[{"type":"CallExpression","start":5155,"end":5255,"callee":{"type":"Identifier","start":5155,"end":5161,"name":"format"},"arguments":[{"type":"Literal","start":5162,"end":5221,"value":"unexpected error while parsing message: \"%s\" (parsed \"%\")","raw":"'unexpected error while parsing message: \"%s\" (parsed \"%\")'"},{"type":"MemberExpression","start":5223,"end":5236,"object":{"type":"Identifier","start":5223,"end":5228,"name":"error"},"property":{"type":"Identifier","start":5229,"end":5236,"name":"message"},"computed":false,"optional":false},{"type":"Identifier","start":5238,"end":5254,"name":"normalizedString"}],"optional":false}]}}]}},"finalizer":null},{"type":"ExpressionStatement","start":5278,"end":7043,"expression":{"type":"CallExpression","start":5278,"end":7042,"callee":{"type":"MemberExpression","start":5278,"end":5292,"object":{"type":"Identifier","start":5278,"end":5284,"name":"tokens"},"property":{"type":"Identifier","start":5285,"end":5292,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":5293,"end":7041,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5294,"end":5299,"name":"token"}],"body":{"type":"BlockStatement","start":5304,"end":7041,"body":[{"type":"VariableDeclaration","start":5319,"end":5335,"declarations":[{"type":"VariableDeclarator","start":5323,"end":5334,"id":{"type":"Identifier","start":5323,"end":5327,"name":"disp"},"init":{"type":"Literal","start":5330,"end":5334,"value":null,"raw":"null"}}],"kind":"let"},{"type":"SwitchStatement","start":5349,"end":7030,"discriminant":{"type":"MemberExpression","start":5357,"end":5367,"object":{"type":"Identifier","start":5357,"end":5362,"name":"token"},"property":{"type":"Identifier","start":5363,"end":5367,"name":"type"},"computed":false,"optional":false},"cases":[{"type":"SwitchCase","start":5388,"end":5482,"consequent":[{"type":"ExpressionStatement","start":5420,"end":5454,"expression":{"type":"CallExpression","start":5420,"end":5453,"callee":{"type":"MemberExpression","start":5420,"end":5435,"object":{"type":"Identifier","start":5420,"end":5427,"name":"message"},"property":{"type":"Identifier","start":5428,"end":5435,"name":"addText"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":5436,"end":5452,"object":{"type":"MemberExpression","start":5436,"end":5447,"object":{"type":"Identifier","start":5436,"end":5441,"name":"token"},"property":{"type":"Identifier","start":5442,"end":5447,"name":"value"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5448,"end":5452,"name":"text"},"computed":false,"optional":false}],"optional":false}},{"type":"BreakStatement","start":5476,"end":5482,"label":null}],"test":{"type":"Identifier","start":5393,"end":5397,"name":"TEXT"}},{"type":"SwitchCase","start":5500,"end":5680,"consequent":[{"type":"ExpressionStatement","start":5537,"end":5598,"expression":{"type":"CallExpression","start":5537,"end":5597,"callee":{"type":"MemberExpression","start":5537,"end":5556,"object":{"type":"Identifier","start":5537,"end":5544,"name":"message"},"property":{"type":"Identifier","start":5545,"end":5556,"name":"addStartTag"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":5557,"end":5573,"object":{"type":"MemberExpression","start":5557,"end":5568,"object":{"type":"Identifier","start":5557,"end":5562,"name":"token"},"property":{"type":"Identifier","start":5563,"end":5568,"name":"value"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5569,"end":5573,"name":"name"},"computed":false,"optional":false},{"type":"MemberExpression","start":5575,"end":5596,"object":{"type":"MemberExpression","start":5575,"end":5586,"object":{"type":"Identifier","start":5575,"end":5580,"name":"token"},"property":{"type":"Identifier","start":5581,"end":5586,"name":"value"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5587,"end":5596,"name":"idcounter"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":5620,"end":5652,"expression":{"type":"CallExpression","start":5620,"end":5651,"callee":{"type":"MemberExpression","start":5620,"end":5633,"object":{"type":"Identifier","start":5620,"end":5628,"name":"openTags"},"property":{"type":"Identifier","start":5629,"end":5633,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":5634,"end":5650,"object":{"type":"MemberExpression","start":5634,"end":5645,"object":{"type":"Identifier","start":5634,"end":5639,"name":"token"},"property":{"type":"Identifier","start":5640,"end":5645,"name":"value"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5646,"end":5650,"name":"name"},"computed":false,"optional":false}],"optional":false}},{"type":"BreakStatement","start":5674,"end":5680,"label":null}],"test":{"type":"Identifier","start":5505,"end":5514,"name":"START_TAG"}},{"type":"SwitchCase","start":5698,"end":6140,"consequent":[{"type":"ExpressionStatement","start":5733,"end":5769,"expression":{"type":"CallExpression","start":5733,"end":5768,"callee":{"type":"MemberExpression","start":5733,"end":5750,"object":{"type":"Identifier","start":5733,"end":5740,"name":"message"},"property":{"type":"Identifier","start":5741,"end":5750,"name":"addEndTag"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":5751,"end":5767,"object":{"type":"MemberExpression","start":5751,"end":5762,"object":{"type":"Identifier","start":5751,"end":5756,"name":"token"},"property":{"type":"Identifier","start":5757,"end":5762,"name":"value"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5763,"end":5767,"name":"name"},"computed":false,"optional":false}],"optional":false}},{"type":"IfStatement","start":5791,"end":6075,"test":{"type":"LogicalExpression","start":5795,"end":5870,"left":{"type":"BinaryExpression","start":5795,"end":5816,"left":{"type":"MemberExpression","start":5795,"end":5810,"object":{"type":"Identifier","start":5795,"end":5803,"name":"openTags"},"property":{"type":"Identifier","start":5804,"end":5810,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":5815,"end":5816,"value":0,"raw":"0"}},"operator":"||","right":{"type":"BinaryExpression","start":5820,"end":5870,"left":{"type":"MemberExpression","start":5820,"end":5849,"object":{"type":"Identifier","start":5820,"end":5828,"name":"openTags"},"property":{"type":"BinaryExpression","start":5829,"end":5848,"left":{"type":"MemberExpression","start":5829,"end":5844,"object":{"type":"Identifier","start":5829,"end":5837,"name":"openTags"},"property":{"type":"Identifier","start":5838,"end":5844,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":5847,"end":5848,"value":1,"raw":"1"}},"computed":true,"optional":false},"operator":"!==","right":{"type":"MemberExpression","start":5854,"end":5870,"object":{"type":"MemberExpression","start":5854,"end":5865,"object":{"type":"Identifier","start":5854,"end":5859,"name":"token"},"property":{"type":"Identifier","start":5860,"end":5865,"name":"value"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5866,"end":5870,"name":"name"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":5872,"end":6075,"body":[{"type":"ThrowStatement","start":5949,"end":6052,"argument":{"type":"NewExpression","start":5955,"end":6051,"callee":{"type":"Identifier","start":5959,"end":5964,"name":"Error"},"arguments":[{"type":"CallExpression","start":5965,"end":6050,"callee":{"type":"Identifier","start":5965,"end":5971,"name":"format"},"arguments":[{"type":"Literal","start":5972,"end":6013,"value":"unexpected close tag \"%s\" (parsed \"%s\")","raw":"'unexpected close tag \"%s\" (parsed \"%s\")'"},{"type":"MemberExpression","start":6015,"end":6031,"object":{"type":"MemberExpression","start":6015,"end":6026,"object":{"type":"Identifier","start":6015,"end":6020,"name":"token"},"property":{"type":"Identifier","start":6021,"end":6026,"name":"value"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6027,"end":6031,"name":"name"},"computed":false,"optional":false},{"type":"Identifier","start":6033,"end":6049,"name":"normalizedString"}],"optional":false}]}}]},"alternate":null},{"type":"ExpressionStatement","start":6097,"end":6112,"expression":{"type":"CallExpression","start":6097,"end":6111,"callee":{"type":"MemberExpression","start":6097,"end":6109,"object":{"type":"Identifier","start":6097,"end":6105,"name":"openTags"},"property":{"type":"Identifier","start":6106,"end":6109,"name":"pop"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"BreakStatement","start":6134,"end":6140,"label":null}],"test":{"type":"Identifier","start":5703,"end":5710,"name":"END_TAG"}},{"type":"SwitchCase","start":6158,"end":6284,"consequent":[{"type":"ExpressionStatement","start":6195,"end":6256,"expression":{"type":"CallExpression","start":6195,"end":6255,"callee":{"type":"MemberExpression","start":6195,"end":6214,"object":{"type":"Identifier","start":6195,"end":6202,"name":"message"},"property":{"type":"Identifier","start":6203,"end":6214,"name":"addEmptyTag"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6215,"end":6231,"object":{"type":"MemberExpression","start":6215,"end":6226,"object":{"type":"Identifier","start":6215,"end":6220,"name":"token"},"property":{"type":"Identifier","start":6221,"end":6226,"name":"value"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6227,"end":6231,"name":"name"},"computed":false,"optional":false},{"type":"MemberExpression","start":6233,"end":6254,"object":{"type":"MemberExpression","start":6233,"end":6244,"object":{"type":"Identifier","start":6233,"end":6238,"name":"token"},"property":{"type":"Identifier","start":6239,"end":6244,"name":"value"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6245,"end":6254,"name":"idcounter"},"computed":false,"optional":false}],"optional":false}},{"type":"BreakStatement","start":6278,"end":6284,"label":null}],"test":{"type":"Identifier","start":6163,"end":6172,"name":"EMPTY_TAG"}},{"type":"SwitchCase","start":6302,"end":6531,"consequent":[{"type":"ExpressionStatement","start":6341,"end":6429,"expression":{"type":"AssignmentExpression","start":6341,"end":6428,"operator":"=","left":{"type":"Identifier","start":6341,"end":6345,"name":"disp"},"right":{"type":"ConditionalExpression","start":6348,"end":6428,"test":{"type":"Identifier","start":6349,"end":6362,"name":"sourceMessage"},"consequent":{"type":"CallExpression","start":6366,"end":6421,"callee":{"type":"MemberExpression","start":6366,"end":6398,"object":{"type":"Identifier","start":6366,"end":6379,"name":"sourceMessage"},"property":{"type":"Identifier","start":6380,"end":6398,"name":"getPlaceholderDisp"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6399,"end":6420,"object":{"type":"MemberExpression","start":6399,"end":6410,"object":{"type":"Identifier","start":6399,"end":6404,"name":"token"},"property":{"type":"Identifier","start":6405,"end":6410,"name":"value"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6411,"end":6420,"name":"idcounter"},"computed":false,"optional":false}],"optional":false},"alternate":{"type":"Literal","start":6424,"end":6428,"value":null,"raw":"null"}}}},{"type":"ExpressionStatement","start":6451,"end":6503,"expression":{"type":"CallExpression","start":6451,"end":6502,"callee":{"type":"MemberExpression","start":6451,"end":6473,"object":{"type":"Identifier","start":6451,"end":6458,"name":"message"},"property":{"type":"Identifier","start":6459,"end":6473,"name":"addPlaceholder"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6474,"end":6495,"object":{"type":"MemberExpression","start":6474,"end":6485,"object":{"type":"Identifier","start":6474,"end":6479,"name":"token"},"property":{"type":"Identifier","start":6480,"end":6485,"name":"value"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6486,"end":6495,"name":"idcounter"},"computed":false,"optional":false},{"type":"Identifier","start":6497,"end":6501,"name":"disp"}],"optional":false}},{"type":"BreakStatement","start":6525,"end":6531,"label":null}],"test":{"type":"Identifier","start":6307,"end":6318,"name":"PLACEHOLDER"}},{"type":"SwitchCase","start":6549,"end":6786,"consequent":[{"type":"ExpressionStatement","start":6592,"end":6682,"expression":{"type":"AssignmentExpression","start":6592,"end":6681,"operator":"=","left":{"type":"Identifier","start":6592,"end":6596,"name":"disp"},"right":{"type":"ConditionalExpression","start":6599,"end":6681,"test":{"type":"Identifier","start":6600,"end":6613,"name":"sourceMessage"},"consequent":{"type":"CallExpression","start":6617,"end":6674,"callee":{"type":"MemberExpression","start":6617,"end":6651,"object":{"type":"Identifier","start":6617,"end":6630,"name":"sourceMessage"},"property":{"type":"Identifier","start":6631,"end":6651,"name":"getICUMessageRefDisp"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6652,"end":6673,"object":{"type":"MemberExpression","start":6652,"end":6663,"object":{"type":"Identifier","start":6652,"end":6657,"name":"token"},"property":{"type":"Identifier","start":6658,"end":6663,"name":"value"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6664,"end":6673,"name":"idcounter"},"computed":false,"optional":false}],"optional":false},"alternate":{"type":"Literal","start":6677,"end":6681,"value":null,"raw":"null"}}}},{"type":"ExpressionStatement","start":6704,"end":6758,"expression":{"type":"CallExpression","start":6704,"end":6757,"callee":{"type":"MemberExpression","start":6704,"end":6728,"object":{"type":"Identifier","start":6704,"end":6711,"name":"message"},"property":{"type":"Identifier","start":6712,"end":6728,"name":"addICUMessageRef"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6729,"end":6750,"object":{"type":"MemberExpression","start":6729,"end":6740,"object":{"type":"Identifier","start":6729,"end":6734,"name":"token"},"property":{"type":"Identifier","start":6735,"end":6740,"name":"value"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6741,"end":6750,"name":"idcounter"},"computed":false,"optional":false},{"type":"Identifier","start":6752,"end":6756,"name":"disp"}],"optional":false}},{"type":"BreakStatement","start":6780,"end":6786,"label":null}],"test":{"type":"Identifier","start":6554,"end":6569,"name":"ICU_MESSAGE_REF"}},{"type":"SwitchCase","start":6804,"end":6961,"consequent":[{"type":"ThrowStatement","start":6843,"end":6961,"argument":{"type":"NewExpression","start":6849,"end":6960,"callee":{"type":"Identifier","start":6853,"end":6858,"name":"Error"},"arguments":[{"type":"CallExpression","start":6859,"end":6959,"callee":{"type":"Identifier","start":6859,"end":6865,"name":"format"},"arguments":[{"type":"Literal","start":6866,"end":6940,"value":"<ICUMessage/> not allowed here, use parseICUMessage instead (parsed \"%\")","raw":"'<ICUMessage/> not allowed here, use parseICUMessage instead (parsed \"%\")'"},{"type":"Identifier","start":6942,"end":6958,"name":"normalizedString"}],"optional":false}]}}],"test":{"type":"Identifier","start":6809,"end":6820,"name":"ICU_MESSAGE"}},{"type":"SwitchCase","start":6979,"end":7015,"consequent":[{"type":"BreakStatement","start":7009,"end":7015,"label":null}],"test":null}]}]}}],"optional":false}},{"type":"IfStatement","start":7053,"end":7260,"test":{"type":"BinaryExpression","start":7057,"end":7076,"left":{"type":"MemberExpression","start":7057,"end":7072,"object":{"type":"Identifier","start":7057,"end":7065,"name":"openTags"},"property":{"type":"Identifier","start":7066,"end":7072,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":7075,"end":7076,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":7078,"end":7260,"body":[{"type":"ThrowStatement","start":7136,"end":7249,"argument":{"type":"NewExpression","start":7142,"end":7248,"callee":{"type":"Identifier","start":7146,"end":7151,"name":"Error"},"arguments":[{"type":"CallExpression","start":7152,"end":7247,"callee":{"type":"Identifier","start":7152,"end":7158,"name":"format"},"arguments":[{"type":"Literal","start":7159,"end":7197,"value":"missing close tag \"%s\" (parsed \"%s\")","raw":"'missing close tag \"%s\" (parsed \"%s\")'"},{"type":"MemberExpression","start":7199,"end":7228,"object":{"type":"Identifier","start":7199,"end":7207,"name":"openTags"},"property":{"type":"BinaryExpression","start":7208,"end":7227,"left":{"type":"MemberExpression","start":7208,"end":7223,"object":{"type":"Identifier","start":7208,"end":7216,"name":"openTags"},"property":{"type":"Identifier","start":7217,"end":7223,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":7226,"end":7227,"value":1,"raw":"1"}},"computed":true,"optional":false},{"type":"Identifier","start":7230,"end":7246,"name":"normalizedString"}],"optional":false}]}}]},"alternate":null},{"type":"ExpressionStatement","start":7270,"end":7338,"expression":{"type":"CallExpression","start":7270,"end":7337,"callee":{"type":"MemberExpression","start":7270,"end":7298,"object":{"type":"Identifier","start":7270,"end":7277,"name":"message"},"property":{"type":"Identifier","start":7278,"end":7298,"name":"setXmlRepresentation"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7299,"end":7336,"callee":{"type":"MemberExpression","start":7299,"end":7327,"object":{"type":"ThisExpression","start":7299,"end":7303},"property":{"type":"Identifier","start":7304,"end":7327,"name":"createXmlRepresentation"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7328,"end":7335,"name":"message"}],"optional":false}],"optional":false}},{"type":"ReturnStatement","start":7348,"end":7363,"argument":{"type":"Identifier","start":7355,"end":7362,"name":"message"}}]}}},{"type":"MethodDefinition","start":7772,"end":7969,"static":false,"computed":false,"key":{"type":"Identifier","start":7772,"end":7787,"name":"parseICUMessage"},"kind":"method","value":{"type":"FunctionExpression","start":7787,"end":7969,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7788,"end":7804,"name":"icuMessageString"},{"type":"Identifier","start":7806,"end":7819,"name":"sourceMessage"}],"body":{"type":"BlockStatement","start":7821,"end":7969,"body":[{"type":"VariableDeclaration","start":7832,"end":7887,"declarations":[{"type":"VariableDeclarator","start":7838,"end":7886,"id":{"type":"Identifier","start":7838,"end":7845,"name":"message"},"init":{"type":"NewExpression","start":7848,"end":7886,"callee":{"type":"Identifier","start":7852,"end":7865,"name":"ParsedMessage"},"arguments":[{"type":"ThisExpression","start":7866,"end":7870},{"type":"Identifier","start":7872,"end":7885,"name":"sourceMessage"}]}}],"kind":"const"},{"type":"ExpressionStatement","start":7897,"end":7937,"expression":{"type":"CallExpression","start":7897,"end":7936,"callee":{"type":"MemberExpression","start":7897,"end":7918,"object":{"type":"Identifier","start":7897,"end":7904,"name":"message"},"property":{"type":"Identifier","start":7905,"end":7918,"name":"addICUMessage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7919,"end":7935,"name":"icuMessageString"}],"optional":false}},{"type":"ReturnStatement","start":7947,"end":7962,"argument":{"type":"Identifier","start":7954,"end":7961,"name":"message"}}]}}},{"type":"MethodDefinition","start":8231,"end":8540,"static":false,"computed":false,"key":{"type":"Identifier","start":8231,"end":8251,"name":"parseIdCountFromName"},"kind":"method","value":{"type":"FunctionExpression","start":8251,"end":8540,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8252,"end":8256,"name":"name"}],"body":{"type":"BlockStatement","start":8258,"end":8540,"body":[{"type":"VariableDeclaration","start":8269,"end":8297,"declarations":[{"type":"VariableDeclarator","start":8275,"end":8296,"id":{"type":"Identifier","start":8275,"end":8280,"name":"regex"},"init":{"type":"Literal","start":8283,"end":8296,"value":{},"raw":"/.*_([0-9]*)/","regex":{"pattern":".*_([0-9]*)","flags":""}}}],"kind":"const"},{"type":"VariableDeclaration","start":8307,"end":8338,"declarations":[{"type":"VariableDeclarator","start":8313,"end":8337,"id":{"type":"Identifier","start":8313,"end":8318,"name":"match"},"init":{"type":"CallExpression","start":8321,"end":8337,"callee":{"type":"MemberExpression","start":8321,"end":8331,"object":{"type":"Identifier","start":8321,"end":8326,"name":"regex"},"property":{"type":"Identifier","start":8327,"end":8331,"name":"exec"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8332,"end":8336,"name":"name"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":8348,"end":8533,"test":{"type":"LogicalExpression","start":8352,"end":8395,"left":{"type":"CallExpression","start":8352,"end":8376,"callee":{"type":"Identifier","start":8352,"end":8369,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":8370,"end":8375,"name":"match"}],"optional":false},"operator":"||","right":{"type":"BinaryExpression","start":8380,"end":8395,"left":{"type":"MemberExpression","start":8380,"end":8388,"object":{"type":"Identifier","start":8380,"end":8385,"name":"match"},"property":{"type":"Literal","start":8386,"end":8387,"value":1,"raw":"1"},"computed":true,"optional":false},"operator":"===","right":{"type":"Literal","start":8393,"end":8395,"value":"","raw":"''"}}},"consequent":{"type":"BlockStatement","start":8397,"end":8432,"body":[{"type":"ReturnStatement","start":8412,"end":8421,"argument":{"type":"Literal","start":8419,"end":8420,"value":0,"raw":"0"}}]},"alternate":{"type":"BlockStatement","start":8447,"end":8533,"body":[{"type":"VariableDeclaration","start":8462,"end":8483,"declarations":[{"type":"VariableDeclarator","start":8468,"end":8482,"id":{"type":"Identifier","start":8468,"end":8471,"name":"num"},"init":{"type":"MemberExpression","start":8474,"end":8482,"object":{"type":"Identifier","start":8474,"end":8479,"name":"match"},"property":{"type":"Literal","start":8480,"end":8481,"value":1,"raw":"1"},"computed":true,"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":8497,"end":8522,"argument":{"type":"CallExpression","start":8504,"end":8521,"callee":{"type":"Identifier","start":8504,"end":8512,"name":"parseInt"},"arguments":[{"type":"Identifier","start":8513,"end":8516,"name":"num"},{"type":"Literal","start":8518,"end":8520,"value":10,"raw":"10"}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":8676,"end":8953,"static":false,"computed":false,"key":{"type":"Identifier","start":8676,"end":8699,"name":"createXmlRepresentation"},"kind":"method","value":{"type":"FunctionExpression","start":8699,"end":8953,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8700,"end":8707,"name":"message"}],"body":{"type":"BlockStatement","start":8709,"end":8953,"body":[{"type":"VariableDeclaration","start":8720,"end":8789,"declarations":[{"type":"VariableDeclarator","start":8726,"end":8788,"id":{"type":"Identifier","start":8726,"end":8730,"name":"root"},"init":{"type":"CallExpression","start":8733,"end":8788,"callee":{"type":"MemberExpression","start":8733,"end":8764,"object":{"type":"NewExpression","start":8733,"end":8748,"callee":{"type":"Identifier","start":8737,"end":8746,"name":"DOMParser"},"arguments":[]},"property":{"type":"Identifier","start":8749,"end":8764,"name":"parseFromString"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8765,"end":8775,"value":"<dummy/>","raw":"'<dummy/>'"},{"type":"Literal","start":8777,"end":8787,"value":"text/xml","raw":"'text/xml'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":8799,"end":8859,"declarations":[{"type":"VariableDeclarator","start":8805,"end":8858,"id":{"type":"Identifier","start":8805,"end":8813,"name":"rootElem"},"init":{"type":"CallExpression","start":8816,"end":8858,"callee":{"type":"MemberExpression","start":8816,"end":8855,"object":{"type":"CallExpression","start":8816,"end":8850,"callee":{"type":"MemberExpression","start":8816,"end":8841,"object":{"type":"Identifier","start":8816,"end":8820,"name":"root"},"property":{"type":"Identifier","start":8821,"end":8841,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8842,"end":8849,"value":"dummy","raw":"'dummy'"}],"optional":false},"property":{"type":"Identifier","start":8851,"end":8855,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8856,"end":8857,"value":0,"raw":"0"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":8869,"end":8920,"expression":{"type":"CallExpression","start":8869,"end":8919,"callee":{"type":"MemberExpression","start":8869,"end":8900,"object":{"type":"ThisExpression","start":8869,"end":8873},"property":{"type":"Identifier","start":8874,"end":8900,"name":"addXmlRepresentationToRoot"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8901,"end":8908,"name":"message"},{"type":"Identifier","start":8910,"end":8918,"name":"rootElem"}],"optional":false}},{"type":"ReturnStatement","start":8930,"end":8946,"argument":{"type":"Identifier","start":8937,"end":8945,"name":"rootElem"}}]}}},{"type":"MethodDefinition","start":8959,"end":9096,"static":false,"computed":false,"key":{"type":"Identifier","start":8959,"end":8992,"name":"createXmlRepresentationOfTextPart"},"kind":"method","value":{"type":"FunctionExpression","start":8992,"end":9096,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8993,"end":8997,"name":"part"},{"type":"Identifier","start":8999,"end":9007,"name":"rootElem"}],"body":{"type":"BlockStatement","start":9009,"end":9096,"body":[{"type":"ReturnStatement","start":9020,"end":9089,"argument":{"type":"CallExpression","start":9027,"end":9088,"callee":{"type":"MemberExpression","start":9027,"end":9064,"object":{"type":"MemberExpression","start":9027,"end":9049,"object":{"type":"Identifier","start":9027,"end":9035,"name":"rootElem"},"property":{"type":"Identifier","start":9036,"end":9049,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9050,"end":9064,"name":"createTextNode"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9065,"end":9087,"callee":{"type":"MemberExpression","start":9065,"end":9085,"object":{"type":"Identifier","start":9065,"end":9069,"name":"part"},"property":{"type":"Identifier","start":9070,"end":9085,"name":"asDisplayString"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":9101,"end":34051}]},"code":"import { ParsedMessage } from './parsed-message';\r\nimport { EMPTY_TAG, END_TAG, ICU_MESSAGE, ICU_MESSAGE_REF, ParsedMesageTokenizer, PLACEHOLDER, START_TAG, TEXT } from './parsed-message-tokenizer';\r\nimport { DOMParser } from 'xmldom';\r\nimport { format } from 'util';\r\nimport { isNullOrUndefined } from 'is-what';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { ParsedMessagePartICUMessage } from './parsed-message-part-icu-message';\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser can parse the xml content of a translatable message.\r\n * It generates a ParsedMessage from it.\r\n */\r\nexport class AbstractMessageParser {\r\n    /**\r\n     * Parse XML to ParsedMessage.\r\n     * @param xmlElement the xml representation\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     */\r\n    createNormalizedMessageFromXML(xmlElement, sourceMessage) {\r\n        const message = new ParsedMessage(this, sourceMessage);\r\n        if (xmlElement) {\r\n            message.setXmlRepresentation(xmlElement);\r\n            this.addPartsOfNodeToMessage(xmlElement, message, false);\r\n        }\r\n        return message;\r\n    }\r\n    /**\r\n     * Parse XML string to ParsedMessage.\r\n     * @param xmlString the xml representation without root element, e.g. this is <ph x></ph> an example.\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     */\r\n    createNormalizedMessageFromXMLString(xmlString, sourceMessage) {\r\n        const doc = new DOMParser().parseFromString('<dummy>' + xmlString + '</dummy>', 'text/xml');\r\n        const xmlElement = doc.childNodes.item(0);\r\n        return this.createNormalizedMessageFromXML(xmlElement, sourceMessage);\r\n    }\r\n    /**\r\n     * recursively run through a node and add all identified parts to the message.\r\n     * @param node node\r\n     * @param message message to be generated.\r\n     * @param includeSelf if true, add node by itself, otherwise only children.\r\n     */\r\n    addPartsOfNodeToMessage(node, message, includeSelf) {\r\n        let processChildren = true;\r\n        if (includeSelf) {\r\n            if (node.nodeType === node.TEXT_NODE) {\r\n                message.addText(node.textContent);\r\n                return;\r\n            }\r\n            if (node.nodeType === node.ELEMENT_NODE) {\r\n                processChildren = this.processStartElement(node, message);\r\n            }\r\n        }\r\n        if (processChildren) {\r\n            const icuMessageText = this.getICUMessageText(node);\r\n            let isICU = !isNullOrUndefined(icuMessageText);\r\n            if (isICU) {\r\n                try {\r\n                    message.addICUMessage(icuMessageText);\r\n                }\r\n                catch (error) {\r\n                    // if it is not parsable, handle it as non ICU\r\n                    console.log('non ICU message: ', icuMessageText, error);\r\n                    isICU = false;\r\n                }\r\n            }\r\n            if (!isICU) {\r\n                const children = node.childNodes;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    this.addPartsOfNodeToMessage(children.item(i), message, true);\r\n                }\r\n            }\r\n        }\r\n        if (node.nodeType === node.ELEMENT_NODE) {\r\n            this.processEndElement(node, message);\r\n        }\r\n    }\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param node node\r\n     * @return message or null, if it is no ICU Message.\r\n     */\r\n    getICUMessageText(node) {\r\n        const children = node.childNodes;\r\n        if (children.length === 0) {\r\n            return null;\r\n        }\r\n        const firstChild = children.item(0);\r\n        if (firstChild.nodeType === firstChild.TEXT_NODE) {\r\n            if (this.isICUMessageStart(firstChild.textContent)) {\r\n                return DOMUtilities.getXMLContent(node);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Test, wether text is beginning of ICU Message.\r\n     * @param text text\r\n     */\r\n    isICUMessageStart(text) {\r\n        return ParsedMessagePartICUMessage.looksLikeICUMessage(text);\r\n        //        return text.startsWith('{VAR_PLURAL') || text.startsWith('{VAR_SELECT');\r\n    }\r\n    /**\r\n     * Parse normalized string to ParsedMessage.\r\n     * @param normalizedString normalized string\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * @return a new parsed message.\r\n     * Throws an error if normalized string is not well formed.\r\n     */\r\n    parseNormalizedString(normalizedString, sourceMessage) {\r\n        const message = new ParsedMessage(this, sourceMessage);\r\n        const openTags = [];\r\n        let tokens;\r\n        try {\r\n            tokens = new ParsedMesageTokenizer().tokenize(normalizedString);\r\n        }\r\n        catch (error) {\r\n            throw new Error(format('unexpected error while parsing message: \"%s\" (parsed \"%\")', error.message, normalizedString));\r\n        }\r\n        tokens.forEach((token) => {\r\n            let disp = null;\r\n            switch (token.type) {\r\n                case TEXT:\r\n                    message.addText(token.value.text);\r\n                    break;\r\n                case START_TAG:\r\n                    message.addStartTag(token.value.name, token.value.idcounter);\r\n                    openTags.push(token.value.name);\r\n                    break;\r\n                case END_TAG:\r\n                    message.addEndTag(token.value.name);\r\n                    if (openTags.length === 0 || openTags[openTags.length - 1] !== token.value.name) {\r\n                        // oops, not well formed\r\n                        throw new Error(format('unexpected close tag \"%s\" (parsed \"%s\")', token.value.name, normalizedString));\r\n                    }\r\n                    openTags.pop();\r\n                    break;\r\n                case EMPTY_TAG:\r\n                    message.addEmptyTag(token.value.name, token.value.idcounter);\r\n                    break;\r\n                case PLACEHOLDER:\r\n                    disp = (sourceMessage) ? sourceMessage.getPlaceholderDisp(token.value.idcounter) : null;\r\n                    message.addPlaceholder(token.value.idcounter, disp);\r\n                    break;\r\n                case ICU_MESSAGE_REF:\r\n                    disp = (sourceMessage) ? sourceMessage.getICUMessageRefDisp(token.value.idcounter) : null;\r\n                    message.addICUMessageRef(token.value.idcounter, disp);\r\n                    break;\r\n                case ICU_MESSAGE:\r\n                    throw new Error(format('<ICUMessage/> not allowed here, use parseICUMessage instead (parsed \"%\")', normalizedString));\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        if (openTags.length > 0) {\r\n            // oops, not well closed tags\r\n            throw new Error(format('missing close tag \"%s\" (parsed \"%s\")', openTags[openTags.length - 1], normalizedString));\r\n        }\r\n        message.setXmlRepresentation(this.createXmlRepresentation(message));\r\n        return message;\r\n    }\r\n    /**\r\n     * Parse a string, that is an ICU message, to ParsedMessage.\r\n     * @param icuMessageString the message, like '{x, plural, =0 {nothing} =1 {one} other {many}}'.\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * @return a new parsed message.\r\n     * Throws an error if icuMessageString has not the correct syntax.\r\n     */\r\n    parseICUMessage(icuMessageString, sourceMessage) {\r\n        const message = new ParsedMessage(this, sourceMessage);\r\n        message.addICUMessage(icuMessageString);\r\n        return message;\r\n    }\r\n    /**\r\n     * Helper function: Parse ID from a name.\r\n     * name optionally ends with _<number>. This is the idcount.\r\n     * E.g. name=\"TAG_IMG\" returns 0\r\n     * name = \"TAG_IMG_1\" returns 1\r\n     * @param name name\r\n     * @return id count\r\n     */\r\n    parseIdCountFromName(name) {\r\n        const regex = /.*_([0-9]*)/;\r\n        const match = regex.exec(name);\r\n        if (isNullOrUndefined(match) || match[1] === '') {\r\n            return 0;\r\n        }\r\n        else {\r\n            const num = match[1];\r\n            return parseInt(num, 10);\r\n        }\r\n    }\r\n    /**\r\n     * Create the native xml for a message.\r\n     * Parts are already set here.\r\n     * @param message message\r\n     */\r\n    createXmlRepresentation(message) {\r\n        const root = new DOMParser().parseFromString('<dummy/>', 'text/xml');\r\n        const rootElem = root.getElementsByTagName('dummy').item(0);\r\n        this.addXmlRepresentationToRoot(message, rootElem);\r\n        return rootElem;\r\n    }\r\n    createXmlRepresentationOfTextPart(part, rootElem) {\r\n        return rootElem.ownerDocument.createTextNode(part.asDisplayString());\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-tokenizer.mjs","xmldom","util","is-what","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-icu-message.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-message-parser.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { ParsedMessage } from './parsed-message';\r\nimport { EMPTY_TAG, END_TAG, ICU_MESSAGE, ICU_MESSAGE_REF, ParsedMesageTokenizer, PLACEHOLDER, START_TAG, TEXT } from './parsed-message-tokenizer';\r\nimport { DOMParser } from 'xmldom';\r\nimport { format } from 'util';\r\nimport { isNullOrUndefined } from 'is-what';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { ParsedMessagePartICUMessage } from './parsed-message-part-icu-message';\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser can parse the xml content of a translatable message.\r\n * It generates a ParsedMessage from it.\r\n */\r\nexport class AbstractMessageParser {\r\n    /**\r\n     * Parse XML to ParsedMessage.\r\n     * @param xmlElement the xml representation\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     */\r\n    createNormalizedMessageFromXML(xmlElement, sourceMessage) {\r\n        const message = new ParsedMessage(this, sourceMessage);\r\n        if (xmlElement) {\r\n            message.setXmlRepresentation(xmlElement);\r\n            this.addPartsOfNodeToMessage(xmlElement, message, false);\r\n        }\r\n        return message;\r\n    }\r\n    /**\r\n     * Parse XML string to ParsedMessage.\r\n     * @param xmlString the xml representation without root element, e.g. this is <ph x></ph> an example.\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     */\r\n    createNormalizedMessageFromXMLString(xmlString, sourceMessage) {\r\n        const doc = new DOMParser().parseFromString('<dummy>' + xmlString + '</dummy>', 'text/xml');\r\n        const xmlElement = doc.childNodes.item(0);\r\n        return this.createNormalizedMessageFromXML(xmlElement, sourceMessage);\r\n    }\r\n    /**\r\n     * recursively run through a node and add all identified parts to the message.\r\n     * @param node node\r\n     * @param message message to be generated.\r\n     * @param includeSelf if true, add node by itself, otherwise only children.\r\n     */\r\n    addPartsOfNodeToMessage(node, message, includeSelf) {\r\n        let processChildren = true;\r\n        if (includeSelf) {\r\n            if (node.nodeType === node.TEXT_NODE) {\r\n                message.addText(node.textContent);\r\n                return;\r\n            }\r\n            if (node.nodeType === node.ELEMENT_NODE) {\r\n                processChildren = this.processStartElement(node, message);\r\n            }\r\n        }\r\n        if (processChildren) {\r\n            const icuMessageText = this.getICUMessageText(node);\r\n            let isICU = !isNullOrUndefined(icuMessageText);\r\n            if (isICU) {\r\n                try {\r\n                    message.addICUMessage(icuMessageText);\r\n                }\r\n                catch (error) {\r\n                    // if it is not parsable, handle it as non ICU\r\n                    console.log('non ICU message: ', icuMessageText, error);\r\n                    isICU = false;\r\n                }\r\n            }\r\n            if (!isICU) {\r\n                const children = node.childNodes;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    this.addPartsOfNodeToMessage(children.item(i), message, true);\r\n                }\r\n            }\r\n        }\r\n        if (node.nodeType === node.ELEMENT_NODE) {\r\n            this.processEndElement(node, message);\r\n        }\r\n    }\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param node node\r\n     * @return message or null, if it is no ICU Message.\r\n     */\r\n    getICUMessageText(node) {\r\n        const children = node.childNodes;\r\n        if (children.length === 0) {\r\n            return null;\r\n        }\r\n        const firstChild = children.item(0);\r\n        if (firstChild.nodeType === firstChild.TEXT_NODE) {\r\n            if (this.isICUMessageStart(firstChild.textContent)) {\r\n                return DOMUtilities.getXMLContent(node);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Test, wether text is beginning of ICU Message.\r\n     * @param text text\r\n     */\r\n    isICUMessageStart(text) {\r\n        return ParsedMessagePartICUMessage.looksLikeICUMessage(text);\r\n        //        return text.startsWith('{VAR_PLURAL') || text.startsWith('{VAR_SELECT');\r\n    }\r\n    /**\r\n     * Parse normalized string to ParsedMessage.\r\n     * @param normalizedString normalized string\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * @return a new parsed message.\r\n     * Throws an error if normalized string is not well formed.\r\n     */\r\n    parseNormalizedString(normalizedString, sourceMessage) {\r\n        const message = new ParsedMessage(this, sourceMessage);\r\n        const openTags = [];\r\n        let tokens;\r\n        try {\r\n            tokens = new ParsedMesageTokenizer().tokenize(normalizedString);\r\n        }\r\n        catch (error) {\r\n            throw new Error(format('unexpected error while parsing message: \"%s\" (parsed \"%\")', error.message, normalizedString));\r\n        }\r\n        tokens.forEach((token) => {\r\n            let disp = null;\r\n            switch (token.type) {\r\n                case TEXT:\r\n                    message.addText(token.value.text);\r\n                    break;\r\n                case START_TAG:\r\n                    message.addStartTag(token.value.name, token.value.idcounter);\r\n                    openTags.push(token.value.name);\r\n                    break;\r\n                case END_TAG:\r\n                    message.addEndTag(token.value.name);\r\n                    if (openTags.length === 0 || openTags[openTags.length - 1] !== token.value.name) {\r\n                        // oops, not well formed\r\n                        throw new Error(format('unexpected close tag \"%s\" (parsed \"%s\")', token.value.name, normalizedString));\r\n                    }\r\n                    openTags.pop();\r\n                    break;\r\n                case EMPTY_TAG:\r\n                    message.addEmptyTag(token.value.name, token.value.idcounter);\r\n                    break;\r\n                case PLACEHOLDER:\r\n                    disp = (sourceMessage) ? sourceMessage.getPlaceholderDisp(token.value.idcounter) : null;\r\n                    message.addPlaceholder(token.value.idcounter, disp);\r\n                    break;\r\n                case ICU_MESSAGE_REF:\r\n                    disp = (sourceMessage) ? sourceMessage.getICUMessageRefDisp(token.value.idcounter) : null;\r\n                    message.addICUMessageRef(token.value.idcounter, disp);\r\n                    break;\r\n                case ICU_MESSAGE:\r\n                    throw new Error(format('<ICUMessage/> not allowed here, use parseICUMessage instead (parsed \"%\")', normalizedString));\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        if (openTags.length > 0) {\r\n            // oops, not well closed tags\r\n            throw new Error(format('missing close tag \"%s\" (parsed \"%s\")', openTags[openTags.length - 1], normalizedString));\r\n        }\r\n        message.setXmlRepresentation(this.createXmlRepresentation(message));\r\n        return message;\r\n    }\r\n    /**\r\n     * Parse a string, that is an ICU message, to ParsedMessage.\r\n     * @param icuMessageString the message, like '{x, plural, =0 {nothing} =1 {one} other {many}}'.\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * @return a new parsed message.\r\n     * Throws an error if icuMessageString has not the correct syntax.\r\n     */\r\n    parseICUMessage(icuMessageString, sourceMessage) {\r\n        const message = new ParsedMessage(this, sourceMessage);\r\n        message.addICUMessage(icuMessageString);\r\n        return message;\r\n    }\r\n    /**\r\n     * Helper function: Parse ID from a name.\r\n     * name optionally ends with _<number>. This is the idcount.\r\n     * E.g. name=\"TAG_IMG\" returns 0\r\n     * name = \"TAG_IMG_1\" returns 1\r\n     * @param name name\r\n     * @return id count\r\n     */\r\n    parseIdCountFromName(name) {\r\n        const regex = /.*_([0-9]*)/;\r\n        const match = regex.exec(name);\r\n        if (isNullOrUndefined(match) || match[1] === '') {\r\n            return 0;\r\n        }\r\n        else {\r\n            const num = match[1];\r\n            return parseInt(num, 10);\r\n        }\r\n    }\r\n    /**\r\n     * Create the native xml for a message.\r\n     * Parts are already set here.\r\n     * @param message message\r\n     */\r\n    createXmlRepresentation(message) {\r\n        const root = new DOMParser().parseFromString('<dummy/>', 'text/xml');\r\n        const rootElem = root.getElementsByTagName('dummy').item(0);\r\n        this.addXmlRepresentationToRoot(message, rootElem);\r\n        return rootElem;\r\n    }\r\n    createXmlRepresentationOfTextPart(part, rootElem) {\r\n        return rootElem.ownerDocument.createTextNode(part.asDisplayString());\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"abstract-message-parser.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/abstract-message-parser.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[22,0,0,21],[24,0,0,22],[30,0,0,28],[48,0,0,46],[49,0,0,47]],[[0,0,1,0],[7,0,1,7],[9,0,2,4],[18,0,2,13],[20,0,3,4],[27,0,3,11],[29,0,3,13],[40,0,3,24],[42,0,3,26],[57,0,3,41],[59,0,3,43],[80,0,3,64],[82,0,3,66],[93,0,3,77],[95,0,3,79],[104,0,3,88],[106,0,3,90],[110,0,3,94],[112,0,5,1],[118,0,5,7],[146,0,5,35],[147,0,5,36]],[[0,0,7,0],[7,0,7,7],[9,0,7,8],[18,0,7,17],[20,0,7,18],[26,0,7,24],[34,0,7,32],[35,0,7,33]],[[0,0,12,0],[7,0,12,7],[9,0,12,8],[15,0,12,14],[17,0,12,15],[23,0,12,21],[29,0,12,27],[30,0,12,28]],[[0,0,13,0],[7,0,13,7],[9,0,13,8],[26,0,13,25],[28,0,13,26],[34,0,13,32],[43,0,13,41],[44,0,13,42]],[[0,0,14,0],[7,0,14,7],[9,0,14,8],[21,0,14,20],[23,0,14,21],[29,0,14,27],[46,0,14,44],[47,0,14,45]],[[0,0,17,0],[7,0,17,7],[9,0,17,8],[36,0,17,35],[38,0,17,36],[44,0,17,42],[79,0,17,77],[80,0,17,78]],[[0,0,18,0]],[],[],[],[[3,0,22,3]],[[0,0,23,0],[6,0,23,6],[13,0,23,22],[34,0,23,43]],[[4,0,25,4]],[],[],[],[],[[7,0,30,7]],[[4,0,31,11],[34,0,31,41],[35,0,31,42],[45,0,31,61],[47,0,31,63],[60,0,31,91]],[[8,0,32,8],[14,0,32,14],[21,0,32,21],[24,0,32,39],[28,0,32,43],[41,0,32,56],[42,0,32,57],[46,0,32,61],[48,0,32,63],[61,0,32,76],[62,0,32,77],[63,0,32,78]],[[8,0,33,8],[12,0,33,12],[22,0,33,22],[24,0,33,24]],[[12,0,34,12],[19,0,34,19],[20,0,34,20],[40,0,34,40],[41,0,34,41],[51,0,34,51],[52,0,34,52],[53,0,34,53]],[[12,0,35,12],[16,0,35,16],[17,0,35,17],[40,0,35,40],[41,0,35,41],[51,0,35,51],[53,0,35,53],[60,0,35,60],[62,0,35,62],[67,0,35,67],[68,0,35,68],[69,0,35,69]],[[9,0,36,9]],[[8,0,37,8],[15,0,37,15],[22,0,37,22],[23,0,37,23]],[[4,0,38,4],[5,0,38,5]],[[4,0,40,4]],[],[],[],[],[[7,0,45,7]],[[4,0,46,4],[40,0,46,40],[41,0,46,41],[50,0,46,58],[52,0,46,60],[65,0,46,88]],[[8,0,47,8],[14,0,47,14],[17,0,47,17],[20,0,47,30],[24,0,47,34],[33,0,47,43],[35,0,47,45],[36,0,47,46],[51,0,47,61],[52,0,47,62],[61,0,47,71],[64,0,47,74],[73,0,47,83],[76,0,47,86],[86,0,47,96],[88,0,47,98],[98,0,47,108],[99,0,47,109],[100,0,47,110]],[[8,0,48,8],[14,0,48,14],[24,0,48,24],[27,0,48,46],[30,0,48,49],[31,0,48,50],[41,0,48,60],[42,0,48,61],[46,0,48,65],[47,0,48,66],[48,0,48,67],[49,0,48,68],[50,0,48,69]],[[8,0,49,8],[15,0,49,15],[19,0,49,19],[20,0,49,20],[50,0,49,50],[51,0,49,51],[61,0,49,61],[63,0,49,63],[76,0,49,76],[77,0,49,77],[78,0,49,78]],[[4,0,50,4],[5,0,50,5]],[[4,0,52,4]],[],[],[],[],[[7,0,57,7]],[[4,0,58,12],[27,0,58,35],[28,0,58,36],[32,0,58,46],[34,0,58,48],[41,0,58,70],[43,0,58,72],[54,0,58,92]],[[8,0,59,8],[12,0,59,12],[27,0,59,27],[30,0,59,30],[34,0,59,34],[35,0,59,35]],[[8,0,60,8],[12,0,60,12],[23,0,60,23],[25,0,60,25]],[[12,0,61,12],[16,0,61,16],[20,0,61,20],[21,0,61,21],[29,0,61,29],[34,0,61,34],[38,0,61,38],[39,0,61,39],[48,0,61,48],[50,0,61,50]],[[16,0,62,16],[23,0,62,23],[24,0,62,24],[31,0,62,31],[32,0,62,32],[36,0,62,36],[37,0,62,37],[48,0,62,48],[49,0,62,49],[50,0,62,50]],[[16,0,63,16],[23,0,63,23]],[[13,0,64,13]],[[12,0,65,12],[16,0,65,16],[20,0,65,20],[21,0,65,21],[29,0,65,29],[34,0,65,34],[38,0,65,38],[39,0,65,39],[51,0,65,51],[53,0,65,53]],[[16,0,66,16],[31,0,66,31],[34,0,66,34],[38,0,66,38],[39,0,66,39],[58,0,66,58],[59,0,66,69],[63,0,66,73],[65,0,66,75],[72,0,66,82],[73,0,66,83],[74,0,66,84]],[[13,0,67,13]],[[9,0,68,9]],[[8,0,69,8],[12,0,69,12],[27,0,69,27],[29,0,69,29]],[[12,0,70,12],[18,0,70,18],[32,0,70,32],[35,0,70,35],[39,0,70,39],[40,0,70,40],[57,0,70,57],[58,0,70,58],[62,0,70,62],[63,0,70,63],[64,0,70,64]],[[12,0,71,12],[16,0,71,16],[21,0,71,21],[24,0,71,24],[25,0,71,25],[42,0,71,42],[43,0,71,43],[57,0,71,57],[58,0,71,58],[59,0,71,59]],[[12,0,72,12],[16,0,72,16],[21,0,72,21],[23,0,72,23]],[[16,0,73,16],[20,0,73,20]],[[20,0,74,20],[27,0,74,27],[28,0,74,28],[41,0,74,41],[42,0,74,42],[56,0,74,56],[57,0,74,57],[58,0,74,58]],[[17,0,75,17]],[[16,0,75,18],[23,0,75,25],[28,0,75,30],[30,0,75,32]],[[20,0,76,20],[66,0,76,66]],[[20,0,77,20],[27,0,77,27],[28,0,77,28],[31,0,77,31],[32,0,77,32],[51,0,77,51],[53,0,77,53],[67,0,77,67],[69,0,77,69],[74,0,77,74],[75,0,77,75],[76,0,77,76]],[[20,0,78,20],[25,0,78,25],[28,0,78,28],[33,0,78,33],[34,0,78,34]],[[17,0,79,17]],[[13,0,80,13]],[[12,0,81,12],[16,0,81,16],[17,0,81,17],[22,0,81,22],[24,0,81,24]],[[16,0,82,16],[22,0,82,22],[30,0,82,30],[33,0,82,33],[37,0,82,37],[38,0,82,38],[48,0,82,48],[49,0,82,49]],[[16,0,83,16],[21,0,83,21],[25,0,83,25],[26,0,83,26],[29,0,83,29],[30,0,83,30],[32,0,83,32],[33,0,83,33],[36,0,83,36],[44,0,83,44],[45,0,83,45],[51,0,83,51],[53,0,83,53],[54,0,83,54],[56,0,83,56],[58,0,83,58]],[[20,0,84,20],[24,0,84,24],[25,0,84,25],[48,0,84,48],[49,0,84,49],[57,0,84,57],[58,0,84,58],[62,0,84,62],[63,0,84,63],[64,0,84,64],[65,0,84,65],[67,0,84,67],[74,0,84,74],[76,0,84,76],[80,0,84,80],[81,0,84,81],[82,0,84,82]],[[17,0,85,17]],[[13,0,86,13]],[[9,0,87,9]],[[8,0,88,8],[12,0,88,12],[16,0,88,16],[17,0,88,17],[25,0,88,25],[30,0,88,30],[34,0,88,34],[35,0,88,35],[47,0,88,47],[49,0,88,49]],[[12,0,89,12],[16,0,89,16],[17,0,89,17],[34,0,89,34],[35,0,89,45],[39,0,89,49],[41,0,89,51],[48,0,89,58],[49,0,89,59],[50,0,89,60]],[[9,0,90,9]],[[4,0,91,4],[5,0,91,5]],[[4,0,93,4]],[],[],[],[[7,0,97,7]],[[4,0,98,14],[21,0,98,31],[22,0,98,32],[26,0,98,42]],[[8,0,99,8],[14,0,99,14],[22,0,99,22],[25,0,99,25],[29,0,99,29],[30,0,99,30],[40,0,99,40],[41,0,99,41]],[[8,0,100,8],[12,0,100,12],[20,0,100,20],[21,0,100,21],[27,0,100,27],[32,0,100,32],[33,0,100,33],[35,0,100,35]],[[12,0,101,12],[19,0,101,19],[23,0,101,23],[24,0,101,24]],[[9,0,102,9]],[[8,0,103,8],[14,0,103,14],[24,0,103,24],[27,0,103,27],[35,0,103,35],[36,0,103,36],[40,0,103,40],[41,0,103,41],[42,0,103,42],[43,0,103,43],[44,0,103,44]],[[8,0,104,8],[12,0,104,12],[22,0,104,22],[23,0,104,23],[31,0,104,31],[36,0,104,36],[46,0,104,46],[47,0,104,47],[56,0,104,56],[58,0,104,58]],[[12,0,105,12],[16,0,105,16],[20,0,105,20],[21,0,105,21],[38,0,105,38],[39,0,105,39],[49,0,105,49],[50,0,105,50],[61,0,105,61],[62,0,105,62],[64,0,105,64]],[[16,0,106,16],[23,0,106,23],[35,0,106,35],[36,0,106,36],[49,0,106,49],[50,0,106,60],[54,0,106,64],[55,0,106,65],[56,0,106,66]],[[13,0,107,13]],[[17,0,107,19]],[[16,0,108,16],[23,0,108,23],[27,0,108,27],[28,0,108,28]],[[13,0,109,13]],[[9,0,110,9]],[[13,0,110,15]],[[12,0,111,12],[19,0,111,19],[23,0,111,23],[24,0,111,24]],[[9,0,112,9]],[[4,0,113,4],[5,0,113,5]],[[4,0,115,4]],[],[],[[7,0,118,7]],[[4,0,119,11],[21,0,119,28],[22,0,119,29],[26,0,119,41]],[[8,0,120,8],[15,0,120,15],[42,0,120,42],[43,0,120,43],[62,0,120,62],[63,0,120,63],[67,0,120,67],[68,0,120,68],[69,0,120,69]],[[8,0,121,0],[90,0,121,82]],[[4,0,122,4],[5,0,122,5]],[[4,0,141,4]],[],[],[],[],[],[[7,0,147,7]],[[4,0,148,11],[25,0,148,32],[26,0,148,33],[42,0,148,57],[44,0,148,59],[57,0,148,87]],[[8,0,149,8],[14,0,149,14],[21,0,149,21],[24,0,149,39],[28,0,149,43],[41,0,149,56],[42,0,149,57],[46,0,149,61],[48,0,149,63],[61,0,149,76],[62,0,149,77],[63,0,149,78]],[[8,0,150,8],[14,0,150,14],[22,0,150,22],[25,0,150,25],[27,0,150,27],[28,0,150,28]],[[8,0,151,8],[12,0,151,12],[18,0,151,27],[19,0,151,28]],[[8,0,152,8],[12,0,152,12]],[[12,0,153,12],[18,0,153,18],[21,0,153,21],[25,0,153,25],[46,0,153,46],[48,0,153,48],[49,0,153,49],[57,0,153,57],[58,0,153,58],[74,0,153,74],[75,0,153,75],[76,0,153,76]],[[9,0,154,9]],[[8,0,154,10],[15,0,154,17],[20,0,154,22],[22,0,154,24]],[[12,0,155,12],[18,0,155,18],[22,0,155,22],[27,0,155,27],[28,0,155,28],[34,0,155,34],[35,0,155,35],[94,0,155,94],[96,0,155,96],[101,0,155,101],[102,0,155,102],[109,0,155,109],[111,0,155,111],[127,0,155,127],[128,0,155,128],[129,0,155,129],[130,0,155,130]],[[9,0,156,9]],[[8,0,157,8],[14,0,157,14],[15,0,157,15],[22,0,157,22],[23,0,157,23],[24,0,157,24],[29,0,157,36],[31,0,157,38],[33,0,157,40]],[[12,0,158,12],[16,0,158,16],[20,0,158,20],[23,0,158,31],[27,0,158,35],[28,0,158,36]],[[12,0,159,12],[20,0,159,20],[25,0,159,25],[26,0,159,26],[30,0,159,30],[32,0,159,32]],[[16,0,160,16],[21,0,160,21],[25,0,160,25]],[[20,0,161,20],[27,0,161,27],[28,0,161,28],[35,0,161,35],[36,0,161,36],[41,0,161,41],[42,0,161,42],[47,0,161,47],[48,0,161,48],[52,0,161,52],[53,0,161,53],[54,0,161,54]],[[20,0,162,20],[26,0,162,26]],[[16,0,163,16],[21,0,163,21],[30,0,163,30]],[[20,0,164,20],[27,0,164,27],[28,0,164,28],[39,0,164,39],[40,0,164,40],[45,0,164,45],[46,0,164,46],[51,0,164,51],[52,0,164,52],[56,0,164,56],[58,0,164,58],[63,0,164,63],[64,0,164,64],[69,0,164,69],[70,0,164,70],[79,0,164,79],[80,0,164,80],[81,0,164,81]],[[20,0,165,20],[28,0,165,28],[29,0,165,29],[33,0,165,33],[34,0,165,34],[39,0,165,39],[40,0,165,40],[45,0,165,45],[46,0,165,46],[50,0,165,50],[51,0,165,51],[52,0,165,52]],[[20,0,166,20],[26,0,166,26]],[[16,0,167,16],[21,0,167,21],[28,0,167,28]],[[20,0,168,20],[27,0,168,27],[28,0,168,28],[37,0,168,37],[38,0,168,38],[43,0,168,43],[44,0,168,44],[49,0,168,49],[50,0,168,50],[54,0,168,54],[55,0,168,55],[56,0,168,56]],[[20,0,169,20],[24,0,169,24],[32,0,169,32],[33,0,169,33],[39,0,169,39],[44,0,169,44],[45,0,169,45],[49,0,169,49],[57,0,169,57],[58,0,169,58],[66,0,169,66],[67,0,169,67],[73,0,169,73],[76,0,169,76],[77,0,169,77],[78,0,169,78],[83,0,169,83],[88,0,169,88],[89,0,169,89],[94,0,169,94],[95,0,169,95],[99,0,169,99],[101,0,169,101]],[[24,0,170,24],[48,0,170,48]],[[24,0,171,24],[30,0,171,30],[34,0,171,34],[39,0,171,39],[40,0,171,40],[46,0,171,46],[47,0,171,47],[88,0,171,88],[90,0,171,90],[95,0,171,95],[96,0,171,96],[101,0,171,101],[102,0,171,102],[106,0,171,106],[108,0,171,108],[124,0,171,124],[125,0,171,125],[126,0,171,126],[127,0,171,127]],[[21,0,172,21]],[[20,0,173,20],[28,0,173,28],[29,0,173,29],[32,0,173,32],[34,0,173,34],[35,0,173,35]],[[20,0,174,20],[26,0,174,26]],[[16,0,175,16],[21,0,175,21],[30,0,175,30]],[[20,0,176,20],[27,0,176,27],[28,0,176,28],[39,0,176,39],[40,0,176,40],[45,0,176,45],[46,0,176,46],[51,0,176,51],[52,0,176,52],[56,0,176,56],[58,0,176,58],[63,0,176,63],[64,0,176,64],[69,0,176,69],[70,0,176,70],[79,0,176,79],[80,0,176,80],[81,0,176,81]],[[20,0,177,20],[26,0,177,26]],[[16,0,178,16],[21,0,178,21],[32,0,178,32]],[[20,0,179,20],[24,0,179,24],[27,0,179,27],[28,0,179,28],[41,0,179,41],[42,0,179,42],[43,0,179,43],[44,0,179,44],[45,0,179,45],[58,0,179,58],[59,0,179,59],[77,0,179,77],[78,0,179,78],[83,0,179,83],[84,0,179,84],[89,0,179,89],[90,0,179,90],[99,0,179,99],[100,0,179,100],[101,0,179,101],[102,0,179,102],[103,0,179,103],[107,0,179,107],[108,0,179,108]],[[20,0,180,20],[27,0,180,27],[28,0,180,28],[42,0,180,42],[43,0,180,43],[48,0,180,48],[49,0,180,49],[54,0,180,54],[55,0,180,55],[64,0,180,64],[66,0,180,66],[70,0,180,70],[71,0,180,71],[72,0,180,72]],[[20,0,181,20],[26,0,181,26]],[[16,0,182,16],[21,0,182,21],[36,0,182,36]],[[20,0,183,20],[24,0,183,24],[27,0,183,27],[28,0,183,28],[41,0,183,41],[42,0,183,42],[43,0,183,43],[44,0,183,44],[45,0,183,45],[58,0,183,58],[59,0,183,59],[79,0,183,79],[80,0,183,80],[85,0,183,85],[86,0,183,86],[91,0,183,91],[92,0,183,92],[101,0,183,101],[102,0,183,102],[103,0,183,103],[104,0,183,104],[105,0,183,105],[109,0,183,109],[110,0,183,110]],[[20,0,184,20],[27,0,184,27],[28,0,184,28],[44,0,184,44],[45,0,184,45],[50,0,184,50],[51,0,184,51],[56,0,184,56],[57,0,184,57],[66,0,184,66],[68,0,184,68],[72,0,184,72],[73,0,184,73],[74,0,184,74]],[[20,0,185,20],[26,0,185,26]],[[16,0,186,16],[21,0,186,21],[32,0,186,32]],[[20,0,187,20],[26,0,187,26],[30,0,187,30],[35,0,187,35],[36,0,187,36],[42,0,187,42],[43,0,187,43],[117,0,187,117],[119,0,187,119],[135,0,187,135],[136,0,187,136],[137,0,187,137],[138,0,187,138]],[[16,0,188,16]],[[20,0,189,20],[26,0,189,26]],[[13,0,190,13]],[[8,0,191,8],[9,0,191,9],[10,0,191,10],[11,0,191,11]],[[8,0,192,8],[12,0,192,12],[20,0,192,20],[21,0,192,21],[27,0,192,27],[30,0,192,30],[31,0,192,31],[33,0,192,33]],[[12,0,193,12],[41,0,193,41]],[[12,0,194,12],[18,0,194,18],[22,0,194,22],[27,0,194,27],[28,0,194,28],[34,0,194,34],[35,0,194,35],[73,0,194,73],[75,0,194,75],[83,0,194,83],[84,0,194,84],[92,0,194,92],[93,0,194,93],[99,0,194,99],[102,0,194,102],[103,0,194,103],[104,0,194,104],[106,0,194,106],[122,0,194,122],[123,0,194,123],[124,0,194,124],[125,0,194,125]],[[9,0,195,9]],[[8,0,196,8],[15,0,196,15],[16,0,196,16],[36,0,196,36],[37,0,196,37],[41,0,196,41],[42,0,196,42],[65,0,196,65],[66,0,196,66],[73,0,196,73],[74,0,196,74],[75,0,196,75],[76,0,196,76]],[[8,0,197,8],[15,0,197,15],[22,0,197,22],[23,0,197,23]],[[4,0,198,4],[5,0,198,5]],[[4,0,200,4]],[],[],[],[],[],[[7,0,206,7]],[[4,0,207,4],[19,0,207,19],[20,0,207,20],[36,0,207,44],[38,0,207,46],[51,0,207,74]],[[8,0,208,8],[14,0,208,14],[21,0,208,21],[24,0,208,39],[28,0,208,43],[41,0,208,56],[42,0,208,57],[46,0,208,61],[48,0,208,63],[61,0,208,76],[62,0,208,77],[63,0,208,78]],[[8,0,209,8],[15,0,209,15],[16,0,209,16],[29,0,209,29],[30,0,209,30],[46,0,209,46],[47,0,209,47],[48,0,209,48]],[[8,0,210,8],[15,0,210,15],[22,0,210,22],[23,0,210,23]],[[4,0,211,4],[5,0,211,5]],[[4,0,213,4]],[],[],[],[],[],[],[[7,0,220,7]],[[4,0,221,14],[24,0,221,34],[25,0,221,35],[29,0,221,47]],[[8,0,222,8],[14,0,222,14],[19,0,222,19],[22,0,222,22],[35,0,222,35],[36,0,222,36]],[[8,0,223,8],[14,0,223,14],[19,0,223,19],[22,0,223,22],[27,0,223,27],[28,0,223,28],[32,0,223,32],[33,0,223,33],[37,0,223,37],[38,0,223,38],[39,0,223,39]],[[8,0,224,8],[12,0,224,12],[29,0,224,29],[30,0,224,30],[35,0,224,35],[36,0,224,36],[40,0,224,40],[45,0,224,45],[46,0,224,46],[47,0,224,47],[48,0,224,48],[53,0,224,53],[55,0,224,55],[57,0,224,57]],[[12,0,225,12],[19,0,225,19],[20,0,225,20],[21,0,225,21]],[[9,0,226,9]],[[13,0,226,15]],[[12,0,227,12],[18,0,227,18],[21,0,227,21],[24,0,227,24],[29,0,227,29],[30,0,227,30],[31,0,227,31],[32,0,227,32],[33,0,227,33]],[[12,0,228,12],[19,0,228,19],[27,0,228,27],[28,0,228,28],[31,0,228,31],[33,0,228,33],[35,0,228,35],[36,0,228,36],[37,0,228,37]],[[9,0,229,9]],[[4,0,230,4],[5,0,230,5]],[[4,0,232,4]],[],[],[],[[7,0,236,7]],[[4,0,237,14],[27,0,237,37],[28,0,237,38],[35,0,237,60]],[[8,0,238,8],[14,0,238,14],[18,0,238,18],[21,0,238,31],[25,0,238,35],[34,0,238,44],[36,0,238,46],[37,0,238,47],[52,0,238,62],[53,0,238,63],[63,0,238,73],[65,0,238,75],[75,0,238,85],[76,0,238,86],[77,0,238,87]],[[8,0,239,8],[14,0,239,14],[22,0,239,22],[25,0,239,34],[29,0,239,38],[30,0,239,39],[50,0,239,59],[51,0,239,60],[58,0,239,67],[59,0,239,68],[60,0,239,69],[64,0,239,73],[65,0,239,74],[66,0,239,75],[67,0,239,76],[68,0,239,77]],[[8,0,240,8],[12,0,240,12],[13,0,240,13],[39,0,240,39],[40,0,240,40],[47,0,240,47],[49,0,240,49],[57,0,240,57],[58,0,240,58],[59,0,240,59]],[[8,0,241,8],[15,0,241,15],[23,0,241,23],[24,0,241,24]],[[4,0,242,4],[5,0,242,5]],[[4,0,246,14],[37,0,246,47],[38,0,246,48],[42,0,246,75],[44,0,246,77],[52,0,246,94]],[[8,0,247,8],[15,0,247,15],[23,0,247,23],[24,0,247,24],[37,0,247,37],[38,0,247,38],[52,0,247,52],[53,0,247,53],[57,0,247,57],[58,0,247,58],[73,0,247,73],[75,0,247,75],[76,0,247,76],[77,0,247,77]],[[4,0,248,4],[5,0,248,5]],[[1,0,287,1]]],"sourcesContent":["import {ParsedMessage} from './parsed-message';\r\nimport {\r\n    EMPTY_TAG,\r\n    END_TAG, ICU_MESSAGE, ICU_MESSAGE_REF, ParsedMesageTokenizer, PLACEHOLDER, START_TAG, TEXT,\r\n    Token\r\n} from './parsed-message-tokenizer';\r\nimport {ParsedMessagePartText} from './parsed-message-part-text';\r\nimport {DOMParser} from 'xmldom';\r\nimport {ParsedMessagePartStartTag} from './parsed-message-part-start-tag';\r\nimport {ParsedMessagePartPlaceholder} from './parsed-message-part-placeholder';\r\nimport {ParsedMessagePartEndTag} from './parsed-message-part-end-tag';\r\nimport {IMessageParser} from './i-message-parser';\r\nimport {format} from 'util';\r\nimport {isNullOrUndefined} from 'is-what';\r\nimport {DOMUtilities} from './dom-utilities';\r\nimport {ParsedMessagePartEmptyTag} from './parsed-message-part-empty-tag';\r\nimport {ParsedMessagePartICUMessageRef} from './parsed-message-part-icu-message-ref';\r\nimport {ParsedMessagePartICUMessage} from './parsed-message-part-icu-message';\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser can parse the xml content of a translatable message.\r\n * It generates a ParsedMessage from it.\r\n */\r\nexport abstract class AbstractMessageParser implements IMessageParser {\r\n\r\n    /**\r\n     * Parse XML to ParsedMessage.\r\n     * @param xmlElement the xml representation\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     */\r\n    public createNormalizedMessageFromXML(xmlElement: Element, sourceMessage: ParsedMessage): ParsedMessage {\r\n        const message: ParsedMessage = new ParsedMessage(this, sourceMessage);\r\n        if (xmlElement) {\r\n            message.setXmlRepresentation(xmlElement);\r\n            this.addPartsOfNodeToMessage(xmlElement, message, false);\r\n        }\r\n        return message;\r\n    }\r\n\r\n    /**\r\n     * Parse XML string to ParsedMessage.\r\n     * @param xmlString the xml representation without root element, e.g. this is <ph x></ph> an example.\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     */\r\n    createNormalizedMessageFromXMLString(xmlString: string, sourceMessage: ParsedMessage): ParsedMessage {\r\n        const doc: Document = new DOMParser().parseFromString('<dummy>' + xmlString + '</dummy>', 'text/xml');\r\n        const xmlElement: Element = <Element> doc.childNodes.item(0);\r\n        return this.createNormalizedMessageFromXML(xmlElement, sourceMessage);\r\n    }\r\n\r\n    /**\r\n     * recursively run through a node and add all identified parts to the message.\r\n     * @param node node\r\n     * @param message message to be generated.\r\n     * @param includeSelf if true, add node by itself, otherwise only children.\r\n     */\r\n    private addPartsOfNodeToMessage(node: Node, message: ParsedMessage, includeSelf: boolean) {\r\n        let processChildren = true;\r\n        if (includeSelf) {\r\n            if (node.nodeType === node.TEXT_NODE) {\r\n                message.addText(node.textContent);\r\n                return;\r\n            }\r\n            if (node.nodeType === node.ELEMENT_NODE) {\r\n                processChildren = this.processStartElement(<Element> node, message);\r\n            }\r\n        }\r\n        if (processChildren) {\r\n            const icuMessageText = this.getICUMessageText(node);\r\n            let isICU = !isNullOrUndefined(icuMessageText);\r\n            if (isICU) {\r\n                try {\r\n                    message.addICUMessage(icuMessageText);\r\n                } catch (error) {\r\n                    // if it is not parsable, handle it as non ICU\r\n                    console.log('non ICU message: ', icuMessageText, error);\r\n                    isICU = false;\r\n                }\r\n            }\r\n            if (!isICU) {\r\n                const children = node.childNodes;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    this.addPartsOfNodeToMessage(children.item(i), message, true);\r\n                }\r\n            }\r\n        }\r\n        if (node.nodeType === node.ELEMENT_NODE) {\r\n            this.processEndElement(<Element> node, message);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param node node\r\n     * @return message or null, if it is no ICU Message.\r\n     */\r\n    protected getICUMessageText(node: Node): string {\r\n        const children = node.childNodes;\r\n        if (children.length === 0) {\r\n            return null;\r\n        }\r\n        const firstChild = children.item(0);\r\n        if (firstChild.nodeType === firstChild.TEXT_NODE) {\r\n            if (this.isICUMessageStart(firstChild.textContent)) {\r\n                return DOMUtilities.getXMLContent(<Element> node);\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Test, wether text is beginning of ICU Message.\r\n     * @param text text\r\n     */\r\n    public isICUMessageStart(text: string): boolean {\r\n        return ParsedMessagePartICUMessage.looksLikeICUMessage(text);\r\n//        return text.startsWith('{VAR_PLURAL') || text.startsWith('{VAR_SELECT');\r\n    }\r\n\r\n    /**\r\n     * Handle this node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    protected abstract processStartElement(elementNode: Element, message: ParsedMessage): boolean;\r\n\r\n    /**\r\n     * Handle end of this node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    protected abstract processEndElement(elementNode: Element, message: ParsedMessage);\r\n\r\n    /**\r\n     * Parse normalized string to ParsedMessage.\r\n     * @param normalizedString normalized string\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * @return a new parsed message.\r\n     * Throws an error if normalized string is not well formed.\r\n     */\r\n    public parseNormalizedString(normalizedString: string, sourceMessage: ParsedMessage): ParsedMessage {\r\n        const message: ParsedMessage = new ParsedMessage(this, sourceMessage);\r\n        const openTags = [];\r\n        let tokens: Token[];\r\n        try {\r\n            tokens = new ParsedMesageTokenizer().tokenize(normalizedString);\r\n        } catch (error) {\r\n            throw new Error(format('unexpected error while parsing message: \"%s\" (parsed \"%\")', error.message, normalizedString));\r\n        }\r\n        tokens.forEach((token: Token) => {\r\n            let disp: string = null;\r\n            switch (token.type) {\r\n                case TEXT:\r\n                    message.addText(token.value.text);\r\n                    break;\r\n                case START_TAG:\r\n                    message.addStartTag(token.value.name, token.value.idcounter);\r\n                    openTags.push(token.value.name);\r\n                    break;\r\n                case END_TAG:\r\n                    message.addEndTag(token.value.name);\r\n                    if (openTags.length === 0 || openTags[openTags.length - 1] !== token.value.name) {\r\n                        // oops, not well formed\r\n                        throw new Error(format('unexpected close tag \"%s\" (parsed \"%s\")', token.value.name, normalizedString));\r\n                    }\r\n                    openTags.pop();\r\n                    break;\r\n                case EMPTY_TAG:\r\n                    message.addEmptyTag(token.value.name, token.value.idcounter);\r\n                    break;\r\n                case PLACEHOLDER:\r\n                    disp = (sourceMessage) ? sourceMessage.getPlaceholderDisp(token.value.idcounter) : null;\r\n                    message.addPlaceholder(token.value.idcounter, disp);\r\n                    break;\r\n                case ICU_MESSAGE_REF:\r\n                    disp = (sourceMessage) ? sourceMessage.getICUMessageRefDisp(token.value.idcounter) : null;\r\n                    message.addICUMessageRef(token.value.idcounter, disp);\r\n                    break;\r\n                case ICU_MESSAGE:\r\n                    throw new Error(format('<ICUMessage/> not allowed here, use parseICUMessage instead (parsed \"%\")', normalizedString));\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        if (openTags.length > 0) {\r\n            // oops, not well closed tags\r\n            throw new Error(format('missing close tag \"%s\" (parsed \"%s\")', openTags[openTags.length - 1], normalizedString));\r\n        }\r\n        message.setXmlRepresentation(this.createXmlRepresentation(message));\r\n        return message;\r\n    }\r\n\r\n    /**\r\n     * Parse a string, that is an ICU message, to ParsedMessage.\r\n     * @param icuMessageString the message, like '{x, plural, =0 {nothing} =1 {one} other {many}}'.\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * @return a new parsed message.\r\n     * Throws an error if icuMessageString has not the correct syntax.\r\n     */\r\n    parseICUMessage(icuMessageString: string, sourceMessage: ParsedMessage): ParsedMessage {\r\n        const message: ParsedMessage = new ParsedMessage(this, sourceMessage);\r\n        message.addICUMessage(icuMessageString);\r\n        return message;\r\n    }\r\n\r\n    /**\r\n     * Helper function: Parse ID from a name.\r\n     * name optionally ends with _<number>. This is the idcount.\r\n     * E.g. name=\"TAG_IMG\" returns 0\r\n     * name = \"TAG_IMG_1\" returns 1\r\n     * @param name name\r\n     * @return id count\r\n     */\r\n    protected parseIdCountFromName(name: string): number {\r\n        const regex = /.*_([0-9]*)/;\r\n        const match = regex.exec(name);\r\n        if (isNullOrUndefined(match) || match[1] === '') {\r\n            return 0;\r\n        } else {\r\n            const num = match[1];\r\n            return parseInt(num, 10);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create the native xml for a message.\r\n     * Parts are already set here.\r\n     * @param message message\r\n     */\r\n    protected createXmlRepresentation(message: ParsedMessage): Element {\r\n        const root: Document = new DOMParser().parseFromString('<dummy/>', 'text/xml');\r\n        const rootElem: Element = root.getElementsByTagName('dummy').item(0);\r\n        this.addXmlRepresentationToRoot(message, rootElem);\r\n        return rootElem;\r\n    }\r\n\r\n    protected abstract addXmlRepresentationToRoot(message: ParsedMessage, rootElem: Element);\r\n\r\n    protected createXmlRepresentationOfTextPart(part: ParsedMessagePartText, rootElem: Element): Node {\r\n        return rootElem.ownerDocument.createTextNode(part.asDisplayString());\r\n    }\r\n\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    protected abstract createXmlRepresentationOfStartTagPart(part: ParsedMessagePartStartTag, rootElem: Element, id?: number): Node;\r\n\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    protected abstract createXmlRepresentationOfEndTagPart(part: ParsedMessagePartEndTag, rootElem: Element): Node;\r\n\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    protected abstract createXmlRepresentationOfEmptyTagPart(part: ParsedMessagePartEmptyTag, rootElem: Element, id?: number): Node;\r\n\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    protected abstract createXmlRepresentationOfPlaceholderPart(part: ParsedMessagePartPlaceholder, rootElem: Element, id?: number): Node;\r\n\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    protected abstract createXmlRepresentationOfICUMessageRefPart(part: ParsedMessagePartICUMessageRef, rootElem: Element): Node;\r\n}\r\n"]},"resolvedIds":{"xmldom":{"external":true,"id":"xmldom","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"util":{"external":true,"id":"util","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"is-what":{"external":true,"id":"is-what","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./dom-utilities":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./parsed-message":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./parsed-message-tokenizer":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-tokenizer.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./parsed-message-part-icu-message":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part-icu-message.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":19895,"body":[{"type":"VariableDeclaration","start":229,"end":1085,"declarations":[{"type":"VariableDeclarator","start":235,"end":1084,"id":{"type":"Identifier","start":235,"end":259,"name":"TAG_TO_PLACEHOLDER_NAMES"},"init":{"type":"ObjectExpression","start":262,"end":1084,"properties":[{"type":"Property","start":269,"end":280,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":269,"end":272,"value":"A","raw":"'A'"},"value":{"type":"Literal","start":274,"end":280,"value":"LINK","raw":"'LINK'"},"kind":"init"},{"type":"Property","start":287,"end":303,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":287,"end":290,"value":"B","raw":"'B'"},"value":{"type":"Literal","start":292,"end":303,"value":"BOLD_TEXT","raw":"'BOLD_TEXT'"},"kind":"init"},{"type":"Property","start":310,"end":328,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":310,"end":314,"value":"BR","raw":"'BR'"},"value":{"type":"Literal","start":316,"end":328,"value":"LINE_BREAK","raw":"'LINE_BREAK'"},"kind":"init"},{"type":"Property","start":335,"end":358,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":335,"end":339,"value":"EM","raw":"'EM'"},"value":{"type":"Literal","start":341,"end":358,"value":"EMPHASISED_TEXT","raw":"'EMPHASISED_TEXT'"},"kind":"init"},{"type":"Property","start":365,"end":387,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":365,"end":369,"value":"H1","raw":"'H1'"},"value":{"type":"Literal","start":371,"end":387,"value":"HEADING_LEVEL1","raw":"'HEADING_LEVEL1'"},"kind":"init"},{"type":"Property","start":394,"end":416,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":394,"end":398,"value":"H2","raw":"'H2'"},"value":{"type":"Literal","start":400,"end":416,"value":"HEADING_LEVEL2","raw":"'HEADING_LEVEL2'"},"kind":"init"},{"type":"Property","start":423,"end":445,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":423,"end":427,"value":"H3","raw":"'H3'"},"value":{"type":"Literal","start":429,"end":445,"value":"HEADING_LEVEL3","raw":"'HEADING_LEVEL3'"},"kind":"init"},{"type":"Property","start":452,"end":474,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":452,"end":456,"value":"H4","raw":"'H4'"},"value":{"type":"Literal","start":458,"end":474,"value":"HEADING_LEVEL4","raw":"'HEADING_LEVEL4'"},"kind":"init"},{"type":"Property","start":481,"end":503,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":481,"end":485,"value":"H5","raw":"'H5'"},"value":{"type":"Literal","start":487,"end":503,"value":"HEADING_LEVEL5","raw":"'HEADING_LEVEL5'"},"kind":"init"},{"type":"Property","start":510,"end":532,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":510,"end":514,"value":"H6","raw":"'H6'"},"value":{"type":"Literal","start":516,"end":532,"value":"HEADING_LEVEL6","raw":"'HEADING_LEVEL6'"},"kind":"init"},{"type":"Property","start":539,"end":562,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":539,"end":543,"value":"HR","raw":"'HR'"},"value":{"type":"Literal","start":545,"end":562,"value":"HORIZONTAL_RULE","raw":"'HORIZONTAL_RULE'"},"kind":"init"},{"type":"Property","start":569,"end":587,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":569,"end":572,"value":"I","raw":"'I'"},"value":{"type":"Literal","start":574,"end":587,"value":"ITALIC_TEXT","raw":"'ITALIC_TEXT'"},"kind":"init"},{"type":"Property","start":594,"end":611,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":594,"end":598,"value":"LI","raw":"'LI'"},"value":{"type":"Literal","start":600,"end":611,"value":"LIST_ITEM","raw":"'LIST_ITEM'"},"kind":"init"},{"type":"Property","start":618,"end":638,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":618,"end":624,"value":"LINK","raw":"'LINK'"},"value":{"type":"Literal","start":626,"end":638,"value":"MEDIA_LINK","raw":"'MEDIA_LINK'"},"kind":"init"},{"type":"Property","start":645,"end":665,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":645,"end":649,"value":"OL","raw":"'OL'"},"value":{"type":"Literal","start":651,"end":665,"value":"ORDERED_LIST","raw":"'ORDERED_LIST'"},"kind":"init"},{"type":"Property","start":672,"end":688,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":672,"end":675,"value":"P","raw":"'P'"},"value":{"type":"Literal","start":677,"end":688,"value":"PARAGRAPH","raw":"'PARAGRAPH'"},"kind":"init"},{"type":"Property","start":695,"end":711,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":695,"end":698,"value":"Q","raw":"'Q'"},"value":{"type":"Literal","start":700,"end":711,"value":"QUOTATION","raw":"'QUOTATION'"},"kind":"init"},{"type":"Property","start":718,"end":743,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":718,"end":721,"value":"S","raw":"'S'"},"value":{"type":"Literal","start":723,"end":743,"value":"STRIKETHROUGH_TEXT","raw":"'STRIKETHROUGH_TEXT'"},"kind":"init"},{"type":"Property","start":750,"end":771,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":750,"end":757,"value":"SMALL","raw":"'SMALL'"},"value":{"type":"Literal","start":759,"end":771,"value":"SMALL_TEXT","raw":"'SMALL_TEXT'"},"kind":"init"},{"type":"Property","start":778,"end":796,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":778,"end":783,"value":"SUB","raw":"'SUB'"},"value":{"type":"Literal","start":785,"end":796,"value":"SUBSTRIPT","raw":"'SUBSTRIPT'"},"kind":"init"},{"type":"Property","start":803,"end":823,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":803,"end":808,"value":"SUP","raw":"'SUP'"},"value":{"type":"Literal","start":810,"end":823,"value":"SUPERSCRIPT","raw":"'SUPERSCRIPT'"},"kind":"init"},{"type":"Property","start":830,"end":851,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":830,"end":837,"value":"TBODY","raw":"'TBODY'"},"value":{"type":"Literal","start":839,"end":851,"value":"TABLE_BODY","raw":"'TABLE_BODY'"},"kind":"init"},{"type":"Property","start":858,"end":876,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":858,"end":862,"value":"TD","raw":"'TD'"},"value":{"type":"Literal","start":864,"end":876,"value":"TABLE_CELL","raw":"'TABLE_CELL'"},"kind":"init"},{"type":"Property","start":883,"end":906,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":883,"end":890,"value":"TFOOT","raw":"'TFOOT'"},"value":{"type":"Literal","start":892,"end":906,"value":"TABLE_FOOTER","raw":"'TABLE_FOOTER'"},"kind":"init"},{"type":"Property","start":913,"end":938,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":913,"end":917,"value":"TH","raw":"'TH'"},"value":{"type":"Literal","start":919,"end":938,"value":"TABLE_HEADER_CELL","raw":"'TABLE_HEADER_CELL'"},"kind":"init"},{"type":"Property","start":945,"end":968,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":945,"end":952,"value":"THEAD","raw":"'THEAD'"},"value":{"type":"Literal","start":954,"end":968,"value":"TABLE_HEADER","raw":"'TABLE_HEADER'"},"kind":"init"},{"type":"Property","start":975,"end":992,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":975,"end":979,"value":"TR","raw":"'TR'"},"value":{"type":"Literal","start":981,"end":992,"value":"TABLE_ROW","raw":"'TABLE_ROW'"},"kind":"init"},{"type":"Property","start":999,"end":1022,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":999,"end":1003,"value":"TT","raw":"'TT'"},"value":{"type":"Literal","start":1005,"end":1022,"value":"MONOSPACED_TEXT","raw":"'MONOSPACED_TEXT'"},"kind":"init"},{"type":"Property","start":1029,"end":1051,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":1029,"end":1032,"value":"U","raw":"'U'"},"value":{"type":"Literal","start":1034,"end":1051,"value":"UNDERLINED_TEXT","raw":"'UNDERLINED_TEXT'"},"kind":"init"},{"type":"Property","start":1058,"end":1080,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":1058,"end":1062,"value":"UL","raw":"'UL'"},"value":{"type":"Literal","start":1064,"end":1080,"value":"UNORDERED_LIST","raw":"'UNORDERED_LIST'"},"kind":"init"}]}}],"kind":"const"},{"type":"VariableDeclaration","start":1217,"end":1278,"declarations":[{"type":"VariableDeclarator","start":1223,"end":1277,"id":{"type":"Identifier","start":1223,"end":1232,"name":"VOID_TAGS"},"init":{"type":"ArrayExpression","start":1235,"end":1277,"elements":[{"type":"Literal","start":1236,"end":1240,"value":"BR","raw":"'BR'"},{"type":"Literal","start":1242,"end":1246,"value":"HR","raw":"'HR'"},{"type":"Literal","start":1248,"end":1253,"value":"IMG","raw":"'IMG'"},{"type":"Literal","start":1255,"end":1261,"value":"AREA","raw":"'AREA'"},{"type":"Literal","start":1263,"end":1269,"value":"LINK","raw":"'LINK'"},{"type":"Literal","start":1271,"end":1276,"value":"WBR","raw":"'WBR'"}]}}],"kind":"const"},{"type":"ExportNamedDeclaration","start":1280,"end":5671,"declaration":{"type":"ClassDeclaration","start":1287,"end":5671,"id":{"type":"Identifier","start":1293,"end":1303,"name":"TagMapping"},"superClass":null,"body":{"type":"ClassBody","start":1304,"end":5671,"body":[{"type":"MethodDefinition","start":1311,"end":1545,"static":false,"computed":false,"key":{"type":"Identifier","start":1311,"end":1337,"name":"getStartTagPlaceholderName"},"kind":"method","value":{"type":"FunctionExpression","start":1337,"end":1545,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1338,"end":1341,"name":"tag"},{"type":"Identifier","start":1343,"end":1345,"name":"id"}],"body":{"type":"BlockStatement","start":1347,"end":1545,"body":[{"type":"VariableDeclaration","start":1358,"end":1393,"declarations":[{"type":"VariableDeclarator","start":1364,"end":1392,"id":{"type":"Identifier","start":1364,"end":1372,"name":"upperTag"},"init":{"type":"CallExpression","start":1375,"end":1392,"callee":{"type":"MemberExpression","start":1375,"end":1390,"object":{"type":"Identifier","start":1375,"end":1378,"name":"tag"},"property":{"type":"Identifier","start":1379,"end":1390,"name":"toUpperCase"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1403,"end":1476,"declarations":[{"type":"VariableDeclarator","start":1409,"end":1475,"id":{"type":"Identifier","start":1409,"end":1417,"name":"baseName"},"init":{"type":"LogicalExpression","start":1420,"end":1475,"left":{"type":"MemberExpression","start":1420,"end":1454,"object":{"type":"Identifier","start":1420,"end":1444,"name":"TAG_TO_PLACEHOLDER_NAMES"},"property":{"type":"Identifier","start":1445,"end":1453,"name":"upperTag"},"computed":true,"optional":false},"operator":"||","right":{"type":"TemplateLiteral","start":1458,"end":1475,"expressions":[{"type":"Identifier","start":1465,"end":1473,"name":"upperTag"}],"quasis":[{"type":"TemplateElement","start":1459,"end":1463,"value":{"raw":"TAG_","cooked":"TAG_"},"tail":false},{"type":"TemplateElement","start":1474,"end":1474,"value":{"raw":"","cooked":""},"tail":true}]}}}],"kind":"const"},{"type":"ReturnStatement","start":1486,"end":1538,"argument":{"type":"BinaryExpression","start":1493,"end":1537,"left":{"type":"TemplateLiteral","start":1493,"end":1512,"expressions":[{"type":"Identifier","start":1502,"end":1510,"name":"baseName"}],"quasis":[{"type":"TemplateElement","start":1494,"end":1500,"value":{"raw":"START_","cooked":"START_"},"tail":false},{"type":"TemplateElement","start":1511,"end":1511,"value":{"raw":"","cooked":""},"tail":true}]},"operator":"+","right":{"type":"CallExpression","start":1515,"end":1537,"callee":{"type":"MemberExpression","start":1515,"end":1533,"object":{"type":"ThisExpression","start":1515,"end":1519},"property":{"type":"Identifier","start":1520,"end":1533,"name":"counterString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1534,"end":1536,"name":"id"}],"optional":false}}}]}}},{"type":"MethodDefinition","start":1551,"end":1756,"static":false,"computed":false,"key":{"type":"Identifier","start":1551,"end":1577,"name":"getCloseTagPlaceholderName"},"kind":"method","value":{"type":"FunctionExpression","start":1577,"end":1756,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1578,"end":1581,"name":"tag"}],"body":{"type":"BlockStatement","start":1583,"end":1756,"body":[{"type":"VariableDeclaration","start":1594,"end":1629,"declarations":[{"type":"VariableDeclarator","start":1600,"end":1628,"id":{"type":"Identifier","start":1600,"end":1608,"name":"upperTag"},"init":{"type":"CallExpression","start":1611,"end":1628,"callee":{"type":"MemberExpression","start":1611,"end":1626,"object":{"type":"Identifier","start":1611,"end":1614,"name":"tag"},"property":{"type":"Identifier","start":1615,"end":1626,"name":"toUpperCase"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1639,"end":1712,"declarations":[{"type":"VariableDeclarator","start":1645,"end":1711,"id":{"type":"Identifier","start":1645,"end":1653,"name":"baseName"},"init":{"type":"LogicalExpression","start":1656,"end":1711,"left":{"type":"MemberExpression","start":1656,"end":1690,"object":{"type":"Identifier","start":1656,"end":1680,"name":"TAG_TO_PLACEHOLDER_NAMES"},"property":{"type":"Identifier","start":1681,"end":1689,"name":"upperTag"},"computed":true,"optional":false},"operator":"||","right":{"type":"TemplateLiteral","start":1694,"end":1711,"expressions":[{"type":"Identifier","start":1701,"end":1709,"name":"upperTag"}],"quasis":[{"type":"TemplateElement","start":1695,"end":1699,"value":{"raw":"TAG_","cooked":"TAG_"},"tail":false},{"type":"TemplateElement","start":1710,"end":1710,"value":{"raw":"","cooked":""},"tail":true}]}}}],"kind":"const"},{"type":"ReturnStatement","start":1722,"end":1749,"argument":{"type":"TemplateLiteral","start":1729,"end":1748,"expressions":[{"type":"Identifier","start":1738,"end":1746,"name":"baseName"}],"quasis":[{"type":"TemplateElement","start":1730,"end":1736,"value":{"raw":"CLOSE_","cooked":"CLOSE_"},"tail":false},{"type":"TemplateElement","start":1747,"end":1747,"value":{"raw":"","cooked":""},"tail":true}]}}]}}},{"type":"MethodDefinition","start":1762,"end":1985,"static":false,"computed":false,"key":{"type":"Identifier","start":1762,"end":1788,"name":"getEmptyTagPlaceholderName"},"kind":"method","value":{"type":"FunctionExpression","start":1788,"end":1985,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1789,"end":1792,"name":"tag"},{"type":"Identifier","start":1794,"end":1796,"name":"id"}],"body":{"type":"BlockStatement","start":1798,"end":1985,"body":[{"type":"VariableDeclaration","start":1809,"end":1844,"declarations":[{"type":"VariableDeclarator","start":1815,"end":1843,"id":{"type":"Identifier","start":1815,"end":1823,"name":"upperTag"},"init":{"type":"CallExpression","start":1826,"end":1843,"callee":{"type":"MemberExpression","start":1826,"end":1841,"object":{"type":"Identifier","start":1826,"end":1829,"name":"tag"},"property":{"type":"Identifier","start":1830,"end":1841,"name":"toUpperCase"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1854,"end":1927,"declarations":[{"type":"VariableDeclarator","start":1860,"end":1926,"id":{"type":"Identifier","start":1860,"end":1868,"name":"baseName"},"init":{"type":"LogicalExpression","start":1871,"end":1926,"left":{"type":"MemberExpression","start":1871,"end":1905,"object":{"type":"Identifier","start":1871,"end":1895,"name":"TAG_TO_PLACEHOLDER_NAMES"},"property":{"type":"Identifier","start":1896,"end":1904,"name":"upperTag"},"computed":true,"optional":false},"operator":"||","right":{"type":"TemplateLiteral","start":1909,"end":1926,"expressions":[{"type":"Identifier","start":1916,"end":1924,"name":"upperTag"}],"quasis":[{"type":"TemplateElement","start":1910,"end":1914,"value":{"raw":"TAG_","cooked":"TAG_"},"tail":false},{"type":"TemplateElement","start":1925,"end":1925,"value":{"raw":"","cooked":""},"tail":true}]}}}],"kind":"const"},{"type":"ReturnStatement","start":1937,"end":1978,"argument":{"type":"BinaryExpression","start":1944,"end":1977,"left":{"type":"Identifier","start":1944,"end":1952,"name":"baseName"},"operator":"+","right":{"type":"CallExpression","start":1955,"end":1977,"callee":{"type":"MemberExpression","start":1955,"end":1973,"object":{"type":"ThisExpression","start":1955,"end":1959},"property":{"type":"Identifier","start":1960,"end":1973,"name":"counterString"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1974,"end":1976,"name":"id"}],"optional":false}}}]}}},{"type":"MethodDefinition","start":1991,"end":2238,"static":false,"computed":false,"key":{"type":"Identifier","start":1991,"end":2005,"name":"getCtypeForTag"},"kind":"method","value":{"type":"FunctionExpression","start":2005,"end":2238,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2006,"end":2009,"name":"tag"}],"body":{"type":"BlockStatement","start":2011,"end":2238,"body":[{"type":"SwitchStatement","start":2022,"end":2231,"discriminant":{"type":"CallExpression","start":2030,"end":2047,"callee":{"type":"MemberExpression","start":2030,"end":2045,"object":{"type":"Identifier","start":2030,"end":2033,"name":"tag"},"property":{"type":"Identifier","start":2034,"end":2045,"name":"toLowerCase"},"computed":false,"optional":false},"arguments":[],"optional":false},"cases":[{"type":"SwitchCase","start":2064,"end":2104,"consequent":[{"type":"ReturnStatement","start":2092,"end":2104,"argument":{"type":"Literal","start":2099,"end":2103,"value":"lb","raw":"'lb'"}}],"test":{"type":"Literal","start":2069,"end":2073,"value":"br","raw":"'br'"}},{"type":"SwitchCase","start":2118,"end":2162,"consequent":[{"type":"ReturnStatement","start":2147,"end":2162,"argument":{"type":"Literal","start":2154,"end":2161,"value":"image","raw":"'image'"}}],"test":{"type":"Literal","start":2123,"end":2128,"value":"img","raw":"'img'"}},{"type":"SwitchCase","start":2176,"end":2220,"consequent":[{"type":"ReturnStatement","start":2202,"end":2220,"argument":{"type":"TemplateLiteral","start":2209,"end":2219,"expressions":[{"type":"Identifier","start":2214,"end":2217,"name":"tag"}],"quasis":[{"type":"TemplateElement","start":2210,"end":2212,"value":{"raw":"x-","cooked":"x-"},"tail":false},{"type":"TemplateElement","start":2218,"end":2218,"value":{"raw":"","cooked":""},"tail":true}]}}],"test":null}]}]}}},{"type":"MethodDefinition","start":2244,"end":2837,"static":false,"computed":false,"key":{"type":"Identifier","start":2244,"end":2281,"name":"getTagnameFromStartTagPlaceholderName"},"kind":"method","value":{"type":"FunctionExpression","start":2281,"end":2837,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2282,"end":2297,"name":"placeholderName"}],"body":{"type":"BlockStatement","start":2299,"end":2837,"body":[{"type":"IfStatement","start":2310,"end":2808,"test":{"type":"CallExpression","start":2314,"end":2354,"callee":{"type":"MemberExpression","start":2314,"end":2340,"object":{"type":"Identifier","start":2314,"end":2329,"name":"placeholderName"},"property":{"type":"Identifier","start":2330,"end":2340,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2341,"end":2353,"value":"START_TAG_","raw":"'START_TAG_'"}],"optional":false},"consequent":{"type":"BlockStatement","start":2356,"end":2469,"body":[{"type":"ReturnStatement","start":2371,"end":2458,"argument":{"type":"CallExpression","start":2378,"end":2457,"callee":{"type":"MemberExpression","start":2378,"end":2455,"object":{"type":"CallExpression","start":2378,"end":2443,"callee":{"type":"MemberExpression","start":2378,"end":2395,"object":{"type":"ThisExpression","start":2378,"end":2382},"property":{"type":"Identifier","start":2383,"end":2395,"name":"stripCounter"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2396,"end":2442,"callee":{"type":"MemberExpression","start":2396,"end":2421,"object":{"type":"Identifier","start":2396,"end":2411,"name":"placeholderName"},"property":{"type":"Identifier","start":2412,"end":2421,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2422,"end":2441,"object":{"type":"Literal","start":2422,"end":2434,"value":"START_TAG_","raw":"'START_TAG_'"},"property":{"type":"Identifier","start":2435,"end":2441,"name":"length"},"computed":false,"optional":false}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":2444,"end":2455,"name":"toLowerCase"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":{"type":"IfStatement","start":2484,"end":2808,"test":{"type":"CallExpression","start":2488,"end":2524,"callee":{"type":"MemberExpression","start":2488,"end":2514,"object":{"type":"Identifier","start":2488,"end":2503,"name":"placeholderName"},"property":{"type":"Identifier","start":2504,"end":2514,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2515,"end":2523,"value":"START_","raw":"'START_'"}],"optional":false},"consequent":{"type":"BlockStatement","start":2526,"end":2808,"body":[{"type":"VariableDeclaration","start":2541,"end":2614,"declarations":[{"type":"VariableDeclarator","start":2547,"end":2613,"id":{"type":"Identifier","start":2547,"end":2549,"name":"ph"},"init":{"type":"CallExpression","start":2552,"end":2613,"callee":{"type":"MemberExpression","start":2552,"end":2569,"object":{"type":"ThisExpression","start":2552,"end":2556},"property":{"type":"Identifier","start":2557,"end":2569,"name":"stripCounter"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2570,"end":2612,"callee":{"type":"MemberExpression","start":2570,"end":2595,"object":{"type":"Identifier","start":2570,"end":2585,"name":"placeholderName"},"property":{"type":"Identifier","start":2586,"end":2595,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2596,"end":2611,"object":{"type":"Literal","start":2596,"end":2604,"value":"START_","raw":"'START_'"},"property":{"type":"Identifier","start":2605,"end":2611,"name":"length"},"computed":false,"optional":false}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":2628,"end":2735,"declarations":[{"type":"VariableDeclarator","start":2634,"end":2734,"id":{"type":"Identifier","start":2634,"end":2642,"name":"matchKey"},"init":{"type":"CallExpression","start":2645,"end":2734,"callee":{"type":"MemberExpression","start":2645,"end":2687,"object":{"type":"CallExpression","start":2645,"end":2682,"callee":{"type":"MemberExpression","start":2645,"end":2656,"object":{"type":"Identifier","start":2645,"end":2651,"name":"Object"},"property":{"type":"Identifier","start":2652,"end":2656,"name":"keys"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2657,"end":2681,"name":"TAG_TO_PLACEHOLDER_NAMES"}],"optional":false},"property":{"type":"Identifier","start":2683,"end":2687,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":2688,"end":2733,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":2689,"end":2692,"name":"key"}],"body":{"type":"BinaryExpression","start":2697,"end":2733,"left":{"type":"MemberExpression","start":2697,"end":2726,"object":{"type":"Identifier","start":2697,"end":2721,"name":"TAG_TO_PLACEHOLDER_NAMES"},"property":{"type":"Identifier","start":2722,"end":2725,"name":"key"},"computed":true,"optional":false},"operator":"===","right":{"type":"Identifier","start":2731,"end":2733,"name":"ph"}}}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":2749,"end":2797,"argument":{"type":"ConditionalExpression","start":2756,"end":2796,"test":{"type":"Identifier","start":2756,"end":2764,"name":"matchKey"},"consequent":{"type":"CallExpression","start":2767,"end":2789,"callee":{"type":"MemberExpression","start":2767,"end":2787,"object":{"type":"Identifier","start":2767,"end":2775,"name":"matchKey"},"property":{"type":"Identifier","start":2776,"end":2787,"name":"toLowerCase"},"computed":false,"optional":false},"arguments":[],"optional":false},"alternate":{"type":"Literal","start":2792,"end":2796,"value":null,"raw":"null"}}}]},"alternate":null}},{"type":"ReturnStatement","start":2818,"end":2830,"argument":{"type":"Literal","start":2825,"end":2829,"value":null,"raw":"null"}}]}}},{"type":"MethodDefinition","start":2843,"end":3436,"static":false,"computed":false,"key":{"type":"Identifier","start":2843,"end":2880,"name":"getTagnameFromCloseTagPlaceholderName"},"kind":"method","value":{"type":"FunctionExpression","start":2880,"end":3436,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2881,"end":2896,"name":"placeholderName"}],"body":{"type":"BlockStatement","start":2898,"end":3436,"body":[{"type":"IfStatement","start":2909,"end":3407,"test":{"type":"CallExpression","start":2913,"end":2953,"callee":{"type":"MemberExpression","start":2913,"end":2939,"object":{"type":"Identifier","start":2913,"end":2928,"name":"placeholderName"},"property":{"type":"Identifier","start":2929,"end":2939,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2940,"end":2952,"value":"CLOSE_TAG_","raw":"'CLOSE_TAG_'"}],"optional":false},"consequent":{"type":"BlockStatement","start":2955,"end":3068,"body":[{"type":"ReturnStatement","start":2970,"end":3057,"argument":{"type":"CallExpression","start":2977,"end":3056,"callee":{"type":"MemberExpression","start":2977,"end":3054,"object":{"type":"CallExpression","start":2977,"end":3042,"callee":{"type":"MemberExpression","start":2977,"end":2994,"object":{"type":"ThisExpression","start":2977,"end":2981},"property":{"type":"Identifier","start":2982,"end":2994,"name":"stripCounter"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2995,"end":3041,"callee":{"type":"MemberExpression","start":2995,"end":3020,"object":{"type":"Identifier","start":2995,"end":3010,"name":"placeholderName"},"property":{"type":"Identifier","start":3011,"end":3020,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3021,"end":3040,"object":{"type":"Literal","start":3021,"end":3033,"value":"CLOSE_TAG_","raw":"'CLOSE_TAG_'"},"property":{"type":"Identifier","start":3034,"end":3040,"name":"length"},"computed":false,"optional":false}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":3043,"end":3054,"name":"toLowerCase"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":{"type":"IfStatement","start":3083,"end":3407,"test":{"type":"CallExpression","start":3087,"end":3123,"callee":{"type":"MemberExpression","start":3087,"end":3113,"object":{"type":"Identifier","start":3087,"end":3102,"name":"placeholderName"},"property":{"type":"Identifier","start":3103,"end":3113,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3114,"end":3122,"value":"CLOSE_","raw":"'CLOSE_'"}],"optional":false},"consequent":{"type":"BlockStatement","start":3125,"end":3407,"body":[{"type":"VariableDeclaration","start":3140,"end":3213,"declarations":[{"type":"VariableDeclarator","start":3146,"end":3212,"id":{"type":"Identifier","start":3146,"end":3148,"name":"ph"},"init":{"type":"CallExpression","start":3151,"end":3212,"callee":{"type":"MemberExpression","start":3151,"end":3168,"object":{"type":"ThisExpression","start":3151,"end":3155},"property":{"type":"Identifier","start":3156,"end":3168,"name":"stripCounter"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3169,"end":3211,"callee":{"type":"MemberExpression","start":3169,"end":3194,"object":{"type":"Identifier","start":3169,"end":3184,"name":"placeholderName"},"property":{"type":"Identifier","start":3185,"end":3194,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3195,"end":3210,"object":{"type":"Literal","start":3195,"end":3203,"value":"CLOSE_","raw":"'CLOSE_'"},"property":{"type":"Identifier","start":3204,"end":3210,"name":"length"},"computed":false,"optional":false}],"optional":false}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":3227,"end":3334,"declarations":[{"type":"VariableDeclarator","start":3233,"end":3333,"id":{"type":"Identifier","start":3233,"end":3241,"name":"matchKey"},"init":{"type":"CallExpression","start":3244,"end":3333,"callee":{"type":"MemberExpression","start":3244,"end":3286,"object":{"type":"CallExpression","start":3244,"end":3281,"callee":{"type":"MemberExpression","start":3244,"end":3255,"object":{"type":"Identifier","start":3244,"end":3250,"name":"Object"},"property":{"type":"Identifier","start":3251,"end":3255,"name":"keys"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3256,"end":3280,"name":"TAG_TO_PLACEHOLDER_NAMES"}],"optional":false},"property":{"type":"Identifier","start":3282,"end":3286,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":3287,"end":3332,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":3288,"end":3291,"name":"key"}],"body":{"type":"BinaryExpression","start":3296,"end":3332,"left":{"type":"MemberExpression","start":3296,"end":3325,"object":{"type":"Identifier","start":3296,"end":3320,"name":"TAG_TO_PLACEHOLDER_NAMES"},"property":{"type":"Identifier","start":3321,"end":3324,"name":"key"},"computed":true,"optional":false},"operator":"===","right":{"type":"Identifier","start":3330,"end":3332,"name":"ph"}}}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":3348,"end":3396,"argument":{"type":"ConditionalExpression","start":3355,"end":3395,"test":{"type":"Identifier","start":3355,"end":3363,"name":"matchKey"},"consequent":{"type":"CallExpression","start":3366,"end":3388,"callee":{"type":"MemberExpression","start":3366,"end":3386,"object":{"type":"Identifier","start":3366,"end":3374,"name":"matchKey"},"property":{"type":"Identifier","start":3375,"end":3386,"name":"toLowerCase"},"computed":false,"optional":false},"arguments":[],"optional":false},"alternate":{"type":"Literal","start":3391,"end":3395,"value":null,"raw":"null"}}}]},"alternate":null}},{"type":"ReturnStatement","start":3417,"end":3429,"argument":{"type":"Literal","start":3424,"end":3428,"value":null,"raw":"null"}}]}}},{"type":"MethodDefinition","start":3589,"end":4122,"static":false,"computed":false,"key":{"type":"Identifier","start":3589,"end":3614,"name":"isEmptyTagPlaceholderName"},"kind":"method","value":{"type":"FunctionExpression","start":3614,"end":4122,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3615,"end":3630,"name":"placeholderName"}],"body":{"type":"BlockStatement","start":3632,"end":4122,"body":[{"type":"VariableDeclaration","start":3643,"end":3689,"declarations":[{"type":"VariableDeclarator","start":3649,"end":3688,"id":{"type":"Identifier","start":3649,"end":3651,"name":"ph"},"init":{"type":"CallExpression","start":3654,"end":3688,"callee":{"type":"MemberExpression","start":3654,"end":3671,"object":{"type":"ThisExpression","start":3654,"end":3658},"property":{"type":"Identifier","start":3659,"end":3671,"name":"stripCounter"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3672,"end":3687,"name":"placeholderName"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":3699,"end":3712,"declarations":[{"type":"VariableDeclarator","start":3703,"end":3711,"id":{"type":"Identifier","start":3703,"end":3711,"name":"matchKey"},"init":null}],"kind":"let"},{"type":"IfStatement","start":3722,"end":3958,"test":{"type":"CallExpression","start":3726,"end":3747,"callee":{"type":"MemberExpression","start":3726,"end":3739,"object":{"type":"Identifier","start":3726,"end":3728,"name":"ph"},"property":{"type":"Identifier","start":3729,"end":3739,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3740,"end":3746,"value":"TAG_","raw":"'TAG_'"}],"optional":false},"consequent":{"type":"BlockStatement","start":3749,"end":3816,"body":[{"type":"ExpressionStatement","start":3764,"end":3805,"expression":{"type":"AssignmentExpression","start":3764,"end":3804,"operator":"=","left":{"type":"Identifier","start":3764,"end":3772,"name":"matchKey"},"right":{"type":"CallExpression","start":3775,"end":3804,"callee":{"type":"MemberExpression","start":3775,"end":3802,"object":{"type":"CallExpression","start":3775,"end":3790,"callee":{"type":"MemberExpression","start":3775,"end":3787,"object":{"type":"Identifier","start":3775,"end":3777,"name":"ph"},"property":{"type":"Identifier","start":3778,"end":3787,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3788,"end":3789,"value":4,"raw":"4"}],"optional":false},"property":{"type":"Identifier","start":3791,"end":3802,"name":"toUpperCase"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":3831,"end":3958,"body":[{"type":"ExpressionStatement","start":3846,"end":3947,"expression":{"type":"AssignmentExpression","start":3846,"end":3946,"operator":"=","left":{"type":"Identifier","start":3846,"end":3854,"name":"matchKey"},"right":{"type":"CallExpression","start":3857,"end":3946,"callee":{"type":"MemberExpression","start":3857,"end":3899,"object":{"type":"CallExpression","start":3857,"end":3894,"callee":{"type":"MemberExpression","start":3857,"end":3868,"object":{"type":"Identifier","start":3857,"end":3863,"name":"Object"},"property":{"type":"Identifier","start":3864,"end":3868,"name":"keys"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3869,"end":3893,"name":"TAG_TO_PLACEHOLDER_NAMES"}],"optional":false},"property":{"type":"Identifier","start":3895,"end":3899,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":3900,"end":3945,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":3901,"end":3904,"name":"key"}],"body":{"type":"BinaryExpression","start":3909,"end":3945,"left":{"type":"MemberExpression","start":3909,"end":3938,"object":{"type":"Identifier","start":3909,"end":3933,"name":"TAG_TO_PLACEHOLDER_NAMES"},"property":{"type":"Identifier","start":3934,"end":3937,"name":"key"},"computed":true,"optional":false},"operator":"===","right":{"type":"Identifier","start":3943,"end":3945,"name":"ph"}}}],"optional":false}}}]}},{"type":"IfStatement","start":3968,"end":4092,"test":{"type":"Identifier","start":3972,"end":3980,"name":"matchKey"},"consequent":{"type":"BlockStatement","start":3982,"end":4092,"body":[{"type":"IfStatement","start":3997,"end":4081,"test":{"type":"BinaryExpression","start":4001,"end":4033,"left":{"type":"CallExpression","start":4001,"end":4028,"callee":{"type":"MemberExpression","start":4001,"end":4018,"object":{"type":"Identifier","start":4001,"end":4010,"name":"VOID_TAGS"},"property":{"type":"Identifier","start":4011,"end":4018,"name":"indexOf"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4019,"end":4027,"name":"matchKey"}],"optional":false},"operator":">=","right":{"type":"Literal","start":4032,"end":4033,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":4035,"end":4081,"body":[{"type":"ReturnStatement","start":4054,"end":4066,"argument":{"type":"Literal","start":4061,"end":4065,"value":true,"raw":"true"}}]},"alternate":null}]},"alternate":null},{"type":"ReturnStatement","start":4102,"end":4115,"argument":{"type":"Literal","start":4109,"end":4114,"value":false,"raw":"false"}}]}}},{"type":"MethodDefinition","start":4252,"end":4879,"static":false,"computed":false,"key":{"type":"Identifier","start":4252,"end":4289,"name":"getTagnameFromEmptyTagPlaceholderName"},"kind":"method","value":{"type":"FunctionExpression","start":4289,"end":4879,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4290,"end":4305,"name":"placeholderName"}],"body":{"type":"BlockStatement","start":4307,"end":4879,"body":[{"type":"VariableDeclaration","start":4318,"end":4364,"declarations":[{"type":"VariableDeclarator","start":4324,"end":4363,"id":{"type":"Identifier","start":4324,"end":4326,"name":"ph"},"init":{"type":"CallExpression","start":4329,"end":4363,"callee":{"type":"MemberExpression","start":4329,"end":4346,"object":{"type":"ThisExpression","start":4329,"end":4333},"property":{"type":"Identifier","start":4334,"end":4346,"name":"stripCounter"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4347,"end":4362,"name":"placeholderName"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":4374,"end":4387,"declarations":[{"type":"VariableDeclarator","start":4378,"end":4386,"id":{"type":"Identifier","start":4378,"end":4386,"name":"matchKey"},"init":null}],"kind":"let"},{"type":"IfStatement","start":4397,"end":4633,"test":{"type":"CallExpression","start":4401,"end":4422,"callee":{"type":"MemberExpression","start":4401,"end":4414,"object":{"type":"Identifier","start":4401,"end":4403,"name":"ph"},"property":{"type":"Identifier","start":4404,"end":4414,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4415,"end":4421,"value":"TAG_","raw":"'TAG_'"}],"optional":false},"consequent":{"type":"BlockStatement","start":4424,"end":4491,"body":[{"type":"ExpressionStatement","start":4439,"end":4480,"expression":{"type":"AssignmentExpression","start":4439,"end":4479,"operator":"=","left":{"type":"Identifier","start":4439,"end":4447,"name":"matchKey"},"right":{"type":"CallExpression","start":4450,"end":4479,"callee":{"type":"MemberExpression","start":4450,"end":4477,"object":{"type":"CallExpression","start":4450,"end":4465,"callee":{"type":"MemberExpression","start":4450,"end":4462,"object":{"type":"Identifier","start":4450,"end":4452,"name":"ph"},"property":{"type":"Identifier","start":4453,"end":4462,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4463,"end":4464,"value":4,"raw":"4"}],"optional":false},"property":{"type":"Identifier","start":4466,"end":4477,"name":"toUpperCase"},"computed":false,"optional":false},"arguments":[],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":4506,"end":4633,"body":[{"type":"ExpressionStatement","start":4521,"end":4622,"expression":{"type":"AssignmentExpression","start":4521,"end":4621,"operator":"=","left":{"type":"Identifier","start":4521,"end":4529,"name":"matchKey"},"right":{"type":"CallExpression","start":4532,"end":4621,"callee":{"type":"MemberExpression","start":4532,"end":4574,"object":{"type":"CallExpression","start":4532,"end":4569,"callee":{"type":"MemberExpression","start":4532,"end":4543,"object":{"type":"Identifier","start":4532,"end":4538,"name":"Object"},"property":{"type":"Identifier","start":4539,"end":4543,"name":"keys"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4544,"end":4568,"name":"TAG_TO_PLACEHOLDER_NAMES"}],"optional":false},"property":{"type":"Identifier","start":4570,"end":4574,"name":"find"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":4575,"end":4620,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":4576,"end":4579,"name":"key"}],"body":{"type":"BinaryExpression","start":4584,"end":4620,"left":{"type":"MemberExpression","start":4584,"end":4613,"object":{"type":"Identifier","start":4584,"end":4608,"name":"TAG_TO_PLACEHOLDER_NAMES"},"property":{"type":"Identifier","start":4609,"end":4612,"name":"key"},"computed":true,"optional":false},"operator":"===","right":{"type":"Identifier","start":4618,"end":4620,"name":"ph"}}}],"optional":false}}}]}},{"type":"IfStatement","start":4643,"end":4850,"test":{"type":"Identifier","start":4647,"end":4655,"name":"matchKey"},"consequent":{"type":"BlockStatement","start":4657,"end":4850,"body":[{"type":"IfStatement","start":4672,"end":4839,"test":{"type":"BinaryExpression","start":4676,"end":4708,"left":{"type":"CallExpression","start":4676,"end":4703,"callee":{"type":"MemberExpression","start":4676,"end":4693,"object":{"type":"Identifier","start":4676,"end":4685,"name":"VOID_TAGS"},"property":{"type":"Identifier","start":4686,"end":4693,"name":"indexOf"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4694,"end":4702,"name":"matchKey"}],"optional":false},"operator":">=","right":{"type":"Literal","start":4707,"end":4708,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":4710,"end":4774,"body":[{"type":"ReturnStatement","start":4729,"end":4759,"argument":{"type":"CallExpression","start":4736,"end":4758,"callee":{"type":"MemberExpression","start":4736,"end":4756,"object":{"type":"Identifier","start":4736,"end":4744,"name":"matchKey"},"property":{"type":"Identifier","start":4745,"end":4756,"name":"toLowerCase"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":{"type":"BlockStatement","start":4793,"end":4839,"body":[{"type":"ReturnStatement","start":4812,"end":4824,"argument":{"type":"Literal","start":4819,"end":4823,"value":null,"raw":"null"}}]}}]},"alternate":null},{"type":"ReturnStatement","start":4860,"end":4872,"argument":{"type":"Literal","start":4867,"end":4871,"value":null,"raw":"null"}}]}}},{"type":"MethodDefinition","start":5067,"end":5341,"static":false,"computed":false,"key":{"type":"Identifier","start":5067,"end":5079,"name":"stripCounter"},"kind":"method","value":{"type":"FunctionExpression","start":5079,"end":5341,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5080,"end":5095,"name":"placeholderName"}],"body":{"type":"BlockStatement","start":5097,"end":5341,"body":[{"type":"IfStatement","start":5108,"end":5301,"test":{"type":"Identifier","start":5112,"end":5127,"name":"placeholderName"},"consequent":{"type":"BlockStatement","start":5129,"end":5301,"body":[{"type":"VariableDeclaration","start":5144,"end":5170,"declarations":[{"type":"VariableDeclarator","start":5150,"end":5169,"id":{"type":"Identifier","start":5150,"end":5152,"name":"re"},"init":{"type":"Literal","start":5155,"end":5169,"value":{},"raw":"/(.*)_[0-9]+$/","regex":{"pattern":"(.*)_[0-9]+$","flags":""}}}],"kind":"const"},{"type":"IfStatement","start":5184,"end":5290,"test":{"type":"CallExpression","start":5188,"end":5213,"callee":{"type":"MemberExpression","start":5188,"end":5209,"object":{"type":"Identifier","start":5188,"end":5203,"name":"placeholderName"},"property":{"type":"Identifier","start":5204,"end":5209,"name":"match"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5210,"end":5212,"name":"re"}],"optional":false},"consequent":{"type":"BlockStatement","start":5215,"end":5290,"body":[{"type":"ReturnStatement","start":5234,"end":5275,"argument":{"type":"CallExpression","start":5241,"end":5274,"callee":{"type":"MemberExpression","start":5241,"end":5264,"object":{"type":"Identifier","start":5241,"end":5256,"name":"placeholderName"},"property":{"type":"Identifier","start":5257,"end":5264,"name":"replace"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5265,"end":5267,"name":"re"},{"type":"Literal","start":5269,"end":5273,"value":"$1","raw":"'$1'"}],"optional":false}}]},"alternate":null}]},"alternate":null},{"type":"ReturnStatement","start":5311,"end":5334,"argument":{"type":"Identifier","start":5318,"end":5333,"name":"placeholderName"}}]}}},{"type":"MethodDefinition","start":5512,"end":5668,"static":false,"computed":false,"key":{"type":"Identifier","start":5512,"end":5525,"name":"counterString"},"kind":"method","value":{"type":"FunctionExpression","start":5525,"end":5668,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5526,"end":5528,"name":"id"}],"body":{"type":"BlockStatement","start":5530,"end":5668,"body":[{"type":"IfStatement","start":5541,"end":5661,"test":{"type":"BinaryExpression","start":5545,"end":5553,"left":{"type":"Identifier","start":5545,"end":5547,"name":"id"},"operator":"===","right":{"type":"Literal","start":5552,"end":5553,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":5555,"end":5591,"body":[{"type":"ReturnStatement","start":5570,"end":5580,"argument":{"type":"Literal","start":5577,"end":5579,"value":"","raw":"''"}}]},"alternate":{"type":"BlockStatement","start":5606,"end":5661,"body":[{"type":"ReturnStatement","start":5621,"end":5650,"argument":{"type":"BinaryExpression","start":5628,"end":5649,"left":{"type":"Literal","start":5628,"end":5631,"value":"_","raw":"'_'"},"operator":"+","right":{"type":"CallExpression","start":5634,"end":5649,"callee":{"type":"MemberExpression","start":5634,"end":5645,"object":{"type":"Identifier","start":5634,"end":5636,"name":"id"},"property":{"type":"Identifier","start":5637,"end":5645,"name":"toString"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5646,"end":5648,"value":10,"raw":"10"}],"optional":false}}}]}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLW1hcHBpbmcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9pbXBsL3RhZy1tYXBwaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUVIOztHQUVHO0FBQ0gsTUFBTSx3QkFBd0IsR0FBMEI7SUFDcEQsR0FBRyxFQUFFLE1BQU07SUFDWCxHQUFHLEVBQUUsV0FBVztJQUNoQixJQUFJLEVBQUUsWUFBWTtJQUNsQixJQUFJLEVBQUUsaUJBQWlCO0lBQ3ZCLElBQUksRUFBRSxnQkFBZ0I7SUFDdEIsSUFBSSxFQUFFLGdCQUFnQjtJQUN0QixJQUFJLEVBQUUsZ0JBQWdCO0lBQ3RCLElBQUksRUFBRSxnQkFBZ0I7SUFDdEIsSUFBSSxFQUFFLGdCQUFnQjtJQUN0QixJQUFJLEVBQUUsZ0JBQWdCO0lBQ3RCLElBQUksRUFBRSxpQkFBaUI7SUFDdkIsR0FBRyxFQUFFLGFBQWE7SUFDbEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsTUFBTSxFQUFFLFlBQVk7SUFDcEIsSUFBSSxFQUFFLGNBQWM7SUFDcEIsR0FBRyxFQUFFLFdBQVc7SUFDaEIsR0FBRyxFQUFFLFdBQVc7SUFDaEIsR0FBRyxFQUFFLG9CQUFvQjtJQUN6QixPQUFPLEVBQUUsWUFBWTtJQUNyQixLQUFLLEVBQUUsV0FBVztJQUNsQixLQUFLLEVBQUUsYUFBYTtJQUNwQixPQUFPLEVBQUUsWUFBWTtJQUNyQixJQUFJLEVBQUUsWUFBWTtJQUNsQixPQUFPLEVBQUUsY0FBYztJQUN2QixJQUFJLEVBQUUsbUJBQW1CO0lBQ3pCLE9BQU8sRUFBRSxjQUFjO0lBQ3ZCLElBQUksRUFBRSxXQUFXO0lBQ2pCLElBQUksRUFBRSxpQkFBaUI7SUFDdkIsR0FBRyxFQUFFLGlCQUFpQjtJQUN0QixJQUFJLEVBQUUsZ0JBQWdCO0NBQ3pCLENBQUM7QUFFRjs7R0FFRztBQUNILE1BQU0sU0FBUyxHQUFHLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztBQUU3RCxNQUFNLE9BQU8sVUFBVTtJQUVaLDBCQUEwQixDQUFDLEdBQVcsRUFBRSxFQUFVO1FBQ3JELE1BQU0sUUFBUSxHQUFHLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuQyxNQUFNLFFBQVEsR0FBRyx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsSUFBSSxPQUFPLFFBQVEsRUFBRSxDQUFDO1FBQ3pFLE9BQU8sU0FBUyxRQUFRLEVBQUUsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFFTSwwQkFBMEIsQ0FBQyxHQUFXO1FBQ3pDLE1BQU0sUUFBUSxHQUFHLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuQyxNQUFNLFFBQVEsR0FBRyx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsSUFBSSxPQUFPLFFBQVEsRUFBRSxDQUFDO1FBQ3pFLE9BQU8sU0FBUyxRQUFRLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBRU0sMEJBQTBCLENBQUMsR0FBVyxFQUFFLEVBQVU7UUFDckQsTUFBTSxRQUFRLEdBQUcsR0FBRyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ25DLE1BQU0sUUFBUSxHQUFJLHdCQUF3QixDQUFDLFFBQVEsQ0FBQyxJQUFJLE9BQU8sUUFBUSxFQUFFLENBQUM7UUFDMUUsT0FBTyxRQUFRLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU0sY0FBYyxDQUFDLEdBQVc7UUFDN0IsUUFBUSxHQUFHLENBQUMsV0FBVyxFQUFFLEVBQUU7WUFDdkIsS0FBSyxJQUFJO2dCQUNMLE9BQU8sSUFBSSxDQUFDO1lBQ2hCLEtBQUssS0FBSztnQkFDTixPQUFPLE9BQU8sQ0FBQztZQUNuQjtnQkFDSSxPQUFPLEtBQUssR0FBRyxFQUFFLENBQUM7U0FDekI7SUFDTCxDQUFDO0lBRU0scUNBQXFDLENBQUMsZUFBdUI7UUFDaEUsSUFBSSxlQUFlLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxFQUFFO1lBQzFDLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQzFGO2FBQU0sSUFBSSxlQUFlLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQzdDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUN6RSxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyx3QkFBd0IsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztZQUMzRyxPQUFPLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7U0FDbkQ7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRU0scUNBQXFDLENBQUMsZUFBdUI7UUFDaEUsSUFBSSxlQUFlLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxFQUFFO1lBQzFDLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQzFGO2FBQU0sSUFBSSxlQUFlLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQzdDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUN6RSxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyx3QkFBd0IsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztZQUMzRyxPQUFPLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7U0FDbkQ7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0kseUJBQXlCLENBQUMsZUFBdUI7UUFDcEQsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUM5QyxJQUFJLFFBQVEsQ0FBQztRQUNiLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUN2QixRQUFRLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUM1QzthQUFNO1lBQ0gsUUFBUSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLHdCQUF3QixDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO1NBQ3hHO1FBQ0QsSUFBSSxRQUFRLEVBQUU7WUFDVixJQUFJLFNBQVMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUNsQyxPQUFPLElBQUksQ0FBQzthQUNmO1NBQ0o7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0kscUNBQXFDLENBQUMsZUFBdUI7UUFDaEUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUM5QyxJQUFJLFFBQVEsQ0FBQztRQUNiLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUN2QixRQUFRLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUM1QzthQUFNO1lBQ0gsUUFBUSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLHdCQUF3QixDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO1NBQ3hHO1FBQ0QsSUFBSSxRQUFRLEVBQUU7WUFDVixJQUFJLFNBQVMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUNsQyxPQUFPLFFBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQzthQUNqQztpQkFBTTtnQkFDSCxPQUFPLElBQUksQ0FBQzthQUNmO1NBQ0o7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNLLFlBQVksQ0FBQyxlQUF1QjtRQUN4QyxJQUFJLGVBQWUsRUFBRTtZQUNqQixNQUFNLEVBQUUsR0FBRyxjQUFjLENBQUM7WUFDMUIsSUFBSSxlQUFlLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxFQUFFO2dCQUMzQixPQUFPLGVBQWUsQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO2FBQzVDO1NBQ0o7UUFDRCxPQUFPLGVBQWUsQ0FBQztJQUMzQixDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSyxhQUFhLENBQUMsRUFBVTtRQUM1QixJQUFJLEVBQUUsS0FBSyxDQUFDLEVBQUU7WUFDVixPQUFPLEVBQUUsQ0FBQztTQUNiO2FBQU07WUFDSCxPQUFPLEdBQUcsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQ2hDO0lBQ0wsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENyZWF0ZWQgYnkgcm9vYm0gb24gMTYuMDUuMjAxNy5cclxuICogTWFwcGluZyBmcm9tIG5vcm1hbGl6ZWQgdGFnIG5hbWVzIHRvIHBsYWNlaG9sZGVyIG5hbWVzLlxyXG4gKi9cclxuXHJcbi8qXHJcbmNvcGllZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyL2FuZ3VsYXIvYmxvYi9tYXN0ZXIvcGFja2FnZXMvY29tcGlsZXIvc3JjL2kxOG4vc2VyaWFsaXplcnMvcGxhY2Vob2xkZXIudHNcclxuICovXHJcbmNvbnN0IFRBR19UT19QTEFDRUhPTERFUl9OQU1FUzoge1trOiBzdHJpbmddOiBzdHJpbmd9ID0ge1xyXG4gICAgJ0EnOiAnTElOSycsXHJcbiAgICAnQic6ICdCT0xEX1RFWFQnLFxyXG4gICAgJ0JSJzogJ0xJTkVfQlJFQUsnLFxyXG4gICAgJ0VNJzogJ0VNUEhBU0lTRURfVEVYVCcsXHJcbiAgICAnSDEnOiAnSEVBRElOR19MRVZFTDEnLFxyXG4gICAgJ0gyJzogJ0hFQURJTkdfTEVWRUwyJyxcclxuICAgICdIMyc6ICdIRUFESU5HX0xFVkVMMycsXHJcbiAgICAnSDQnOiAnSEVBRElOR19MRVZFTDQnLFxyXG4gICAgJ0g1JzogJ0hFQURJTkdfTEVWRUw1JyxcclxuICAgICdINic6ICdIRUFESU5HX0xFVkVMNicsXHJcbiAgICAnSFInOiAnSE9SSVpPTlRBTF9SVUxFJyxcclxuICAgICdJJzogJ0lUQUxJQ19URVhUJyxcclxuICAgICdMSSc6ICdMSVNUX0lURU0nLFxyXG4gICAgJ0xJTksnOiAnTUVESUFfTElOSycsXHJcbiAgICAnT0wnOiAnT1JERVJFRF9MSVNUJyxcclxuICAgICdQJzogJ1BBUkFHUkFQSCcsXHJcbiAgICAnUSc6ICdRVU9UQVRJT04nLFxyXG4gICAgJ1MnOiAnU1RSSUtFVEhST1VHSF9URVhUJyxcclxuICAgICdTTUFMTCc6ICdTTUFMTF9URVhUJyxcclxuICAgICdTVUInOiAnU1VCU1RSSVBUJyxcclxuICAgICdTVVAnOiAnU1VQRVJTQ1JJUFQnLFxyXG4gICAgJ1RCT0RZJzogJ1RBQkxFX0JPRFknLFxyXG4gICAgJ1REJzogJ1RBQkxFX0NFTEwnLFxyXG4gICAgJ1RGT09UJzogJ1RBQkxFX0ZPT1RFUicsXHJcbiAgICAnVEgnOiAnVEFCTEVfSEVBREVSX0NFTEwnLFxyXG4gICAgJ1RIRUFEJzogJ1RBQkxFX0hFQURFUicsXHJcbiAgICAnVFInOiAnVEFCTEVfUk9XJyxcclxuICAgICdUVCc6ICdNT05PU1BBQ0VEX1RFWFQnLFxyXG4gICAgJ1UnOiAnVU5ERVJMSU5FRF9URVhUJyxcclxuICAgICdVTCc6ICdVTk9SREVSRURfTElTVCcsXHJcbn07XHJcblxyXG4vKipcclxuICogSFRNTCBUYWdzIChpbiB1cHBlcmNhc2UpIHRoYXQgYXJlIGVtcHR5LCB0aGV5IGhhdmUgbm8gY29udGVudCwgYnV0IGRvIG5vdCBuZWVkIGEgY2xvc2UgdGFnLCBlLmcuIDxicj4sIDxpbWc+LCA8aHI+LlxyXG4gKi9cclxuY29uc3QgVk9JRF9UQUdTID0gWydCUicsICdIUicsICdJTUcnLCAnQVJFQScsICdMSU5LJywgJ1dCUiddO1xyXG5cclxuZXhwb3J0IGNsYXNzIFRhZ01hcHBpbmcge1xyXG5cclxuICAgIHB1YmxpYyBnZXRTdGFydFRhZ1BsYWNlaG9sZGVyTmFtZSh0YWc6IHN0cmluZywgaWQ6IG51bWJlcik6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgdXBwZXJUYWcgPSB0YWcudG9VcHBlckNhc2UoKTtcclxuICAgICAgICBjb25zdCBiYXNlTmFtZSA9IFRBR19UT19QTEFDRUhPTERFUl9OQU1FU1t1cHBlclRhZ10gfHwgYFRBR18ke3VwcGVyVGFnfWA7XHJcbiAgICAgICAgcmV0dXJuIGBTVEFSVF8ke2Jhc2VOYW1lfWAgKyB0aGlzLmNvdW50ZXJTdHJpbmcoaWQpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRDbG9zZVRhZ1BsYWNlaG9sZGVyTmFtZSh0YWc6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgdXBwZXJUYWcgPSB0YWcudG9VcHBlckNhc2UoKTtcclxuICAgICAgICBjb25zdCBiYXNlTmFtZSA9IFRBR19UT19QTEFDRUhPTERFUl9OQU1FU1t1cHBlclRhZ10gfHwgYFRBR18ke3VwcGVyVGFnfWA7XHJcbiAgICAgICAgcmV0dXJuIGBDTE9TRV8ke2Jhc2VOYW1lfWA7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldEVtcHR5VGFnUGxhY2Vob2xkZXJOYW1lKHRhZzogc3RyaW5nLCBpZDogbnVtYmVyKTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCB1cHBlclRhZyA9IHRhZy50b1VwcGVyQ2FzZSgpO1xyXG4gICAgICAgIGNvbnN0IGJhc2VOYW1lID0gIFRBR19UT19QTEFDRUhPTERFUl9OQU1FU1t1cHBlclRhZ10gfHwgYFRBR18ke3VwcGVyVGFnfWA7XHJcbiAgICAgICAgcmV0dXJuIGJhc2VOYW1lICsgdGhpcy5jb3VudGVyU3RyaW5nKGlkKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0Q3R5cGVGb3JUYWcodGFnOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIHN3aXRjaCAodGFnLnRvTG93ZXJDYXNlKCkpIHtcclxuICAgICAgICAgICAgY2FzZSAnYnInOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICdsYic7XHJcbiAgICAgICAgICAgIGNhc2UgJ2ltZyc6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2ltYWdlJztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIHJldHVybiBgeC0ke3RhZ31gO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0VGFnbmFtZUZyb21TdGFydFRhZ1BsYWNlaG9sZGVyTmFtZShwbGFjZWhvbGRlck5hbWU6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgaWYgKHBsYWNlaG9sZGVyTmFtZS5zdGFydHNXaXRoKCdTVEFSVF9UQUdfJykpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RyaXBDb3VudGVyKHBsYWNlaG9sZGVyTmFtZS5zdWJzdHJpbmcoJ1NUQVJUX1RBR18nLmxlbmd0aCkpLnRvTG93ZXJDYXNlKCk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChwbGFjZWhvbGRlck5hbWUuc3RhcnRzV2l0aCgnU1RBUlRfJykpIHtcclxuICAgICAgICAgICAgY29uc3QgcGggPSB0aGlzLnN0cmlwQ291bnRlcihwbGFjZWhvbGRlck5hbWUuc3Vic3RyaW5nKCdTVEFSVF8nLmxlbmd0aCkpO1xyXG4gICAgICAgICAgICBjb25zdCBtYXRjaEtleSA9IE9iamVjdC5rZXlzKFRBR19UT19QTEFDRUhPTERFUl9OQU1FUykuZmluZCgoa2V5KSA9PiBUQUdfVE9fUExBQ0VIT0xERVJfTkFNRVNba2V5XSA9PT0gcGgpO1xyXG4gICAgICAgICAgICByZXR1cm4gbWF0Y2hLZXkgPyBtYXRjaEtleS50b0xvd2VyQ2FzZSgpIDogbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldFRhZ25hbWVGcm9tQ2xvc2VUYWdQbGFjZWhvbGRlck5hbWUocGxhY2Vob2xkZXJOYW1lOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIGlmIChwbGFjZWhvbGRlck5hbWUuc3RhcnRzV2l0aCgnQ0xPU0VfVEFHXycpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnN0cmlwQ291bnRlcihwbGFjZWhvbGRlck5hbWUuc3Vic3RyaW5nKCdDTE9TRV9UQUdfJy5sZW5ndGgpKS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAocGxhY2Vob2xkZXJOYW1lLnN0YXJ0c1dpdGgoJ0NMT1NFXycpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHBoID0gdGhpcy5zdHJpcENvdW50ZXIocGxhY2Vob2xkZXJOYW1lLnN1YnN0cmluZygnQ0xPU0VfJy5sZW5ndGgpKTtcclxuICAgICAgICAgICAgY29uc3QgbWF0Y2hLZXkgPSBPYmplY3Qua2V5cyhUQUdfVE9fUExBQ0VIT0xERVJfTkFNRVMpLmZpbmQoKGtleSkgPT4gVEFHX1RPX1BMQUNFSE9MREVSX05BTUVTW2tleV0gPT09IHBoKTtcclxuICAgICAgICAgICAgcmV0dXJuIG1hdGNoS2V5ID8gbWF0Y2hLZXkudG9Mb3dlckNhc2UoKSA6IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGVzdCwgd2V0aGVyIHBsYWNlaG9sZGVyIG5hbWUgc3RhbmRzIGZvciBlbXB0eSBodG1sIHRhZy5cclxuICAgICAqIEBwYXJhbSBwbGFjZWhvbGRlck5hbWUgY2FuIGJlIFRBR188bmFtZT4gb3IganVzdCA8bmFtZT5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGlzRW1wdHlUYWdQbGFjZWhvbGRlck5hbWUocGxhY2Vob2xkZXJOYW1lOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICBjb25zdCBwaCA9IHRoaXMuc3RyaXBDb3VudGVyKHBsYWNlaG9sZGVyTmFtZSk7XHJcbiAgICAgICAgbGV0IG1hdGNoS2V5O1xyXG4gICAgICAgIGlmIChwaC5zdGFydHNXaXRoKCdUQUdfJykpIHtcclxuICAgICAgICAgICAgbWF0Y2hLZXkgPSBwaC5zdWJzdHJpbmcoNCkudG9VcHBlckNhc2UoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBtYXRjaEtleSA9IE9iamVjdC5rZXlzKFRBR19UT19QTEFDRUhPTERFUl9OQU1FUykuZmluZCgoa2V5KSA9PiBUQUdfVE9fUExBQ0VIT0xERVJfTkFNRVNba2V5XSA9PT0gcGgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAobWF0Y2hLZXkpIHtcclxuICAgICAgICAgICAgaWYgKFZPSURfVEFHUy5pbmRleE9mKG1hdGNoS2V5KSA+PSAwKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB0YWduYW1lIG9mIGVtcHR5IHRhZyBwbGFjZWhvbGRlci5cclxuICAgICAqIEBwYXJhbSBwbGFjZWhvbGRlck5hbWUgY2FuIGJlIFRBR188bmFtZT4gb3IganVzdCA8bmFtZT5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGdldFRhZ25hbWVGcm9tRW1wdHlUYWdQbGFjZWhvbGRlck5hbWUocGxhY2Vob2xkZXJOYW1lOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IHBoID0gdGhpcy5zdHJpcENvdW50ZXIocGxhY2Vob2xkZXJOYW1lKTtcclxuICAgICAgICBsZXQgbWF0Y2hLZXk7XHJcbiAgICAgICAgaWYgKHBoLnN0YXJ0c1dpdGgoJ1RBR18nKSkge1xyXG4gICAgICAgICAgICBtYXRjaEtleSA9IHBoLnN1YnN0cmluZyg0KS50b1VwcGVyQ2FzZSgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG1hdGNoS2V5ID0gT2JqZWN0LmtleXMoVEFHX1RPX1BMQUNFSE9MREVSX05BTUVTKS5maW5kKChrZXkpID0+IFRBR19UT19QTEFDRUhPTERFUl9OQU1FU1trZXldID09PSBwaCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChtYXRjaEtleSkge1xyXG4gICAgICAgICAgICBpZiAoVk9JRF9UQUdTLmluZGV4T2YobWF0Y2hLZXkpID49IDApIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBtYXRjaEtleS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBJZiBwbGFjZWhvbGRlciBlbmRzIHdpdGggX1swLTldKywgc3RyaXAgdGhhdCBudW1iZXIuXHJcbiAgICAgKiBAcGFyYW0gcGxhY2Vob2xkZXJOYW1lIHBsYWNlaG9sZGVyTmFtZVxyXG4gICAgICogQHJldHVybiBwbGFjZWhvbGRlck5hbWUgd2l0aG91dCBjb3VudGVyIGF0IGVuZC5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBzdHJpcENvdW50ZXIocGxhY2Vob2xkZXJOYW1lOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIGlmIChwbGFjZWhvbGRlck5hbWUpIHtcclxuICAgICAgICAgICAgY29uc3QgcmUgPSAvKC4qKV9bMC05XSskLztcclxuICAgICAgICAgICAgaWYgKHBsYWNlaG9sZGVyTmFtZS5tYXRjaChyZSkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBwbGFjZWhvbGRlck5hbWUucmVwbGFjZShyZSwgJyQxJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHBsYWNlaG9sZGVyTmFtZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFN0cmluZyBzdWZmaXggZm9yIGNvdW50ZXIuXHJcbiAgICAgKiBJZiBjb3VudGVyIGlzIDAsIGl0IGlzIGVtcHR5LCBvdGhlcndpc2UgXzxpZD4uXHJcbiAgICAgKiBAcGFyYW0gaWQgaWRcclxuICAgICAqIEByZXR1cm4gc3VmZml4IGZvciBjb3VudGVyLlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGNvdW50ZXJTdHJpbmcoaWQ6IG51bWJlcikge1xyXG4gICAgICAgIGlmIChpZCA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gJyc7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuICdfJyArIGlkLnRvU3RyaW5nKDEwKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19","start":5673,"end":19895}]},"code":"/**\r\n * Created by roobm on 16.05.2017.\r\n * Mapping from normalized tag names to placeholder names.\r\n */\r\n/*\r\ncopied from https://github.com/angular/angular/blob/master/packages/compiler/src/i18n/serializers/placeholder.ts\r\n */\r\nconst TAG_TO_PLACEHOLDER_NAMES = {\r\n    'A': 'LINK',\r\n    'B': 'BOLD_TEXT',\r\n    'BR': 'LINE_BREAK',\r\n    'EM': 'EMPHASISED_TEXT',\r\n    'H1': 'HEADING_LEVEL1',\r\n    'H2': 'HEADING_LEVEL2',\r\n    'H3': 'HEADING_LEVEL3',\r\n    'H4': 'HEADING_LEVEL4',\r\n    'H5': 'HEADING_LEVEL5',\r\n    'H6': 'HEADING_LEVEL6',\r\n    'HR': 'HORIZONTAL_RULE',\r\n    'I': 'ITALIC_TEXT',\r\n    'LI': 'LIST_ITEM',\r\n    'LINK': 'MEDIA_LINK',\r\n    'OL': 'ORDERED_LIST',\r\n    'P': 'PARAGRAPH',\r\n    'Q': 'QUOTATION',\r\n    'S': 'STRIKETHROUGH_TEXT',\r\n    'SMALL': 'SMALL_TEXT',\r\n    'SUB': 'SUBSTRIPT',\r\n    'SUP': 'SUPERSCRIPT',\r\n    'TBODY': 'TABLE_BODY',\r\n    'TD': 'TABLE_CELL',\r\n    'TFOOT': 'TABLE_FOOTER',\r\n    'TH': 'TABLE_HEADER_CELL',\r\n    'THEAD': 'TABLE_HEADER',\r\n    'TR': 'TABLE_ROW',\r\n    'TT': 'MONOSPACED_TEXT',\r\n    'U': 'UNDERLINED_TEXT',\r\n    'UL': 'UNORDERED_LIST',\r\n};\r\n/**\r\n * HTML Tags (in uppercase) that are empty, they have no content, but do not need a close tag, e.g. <br>, <img>, <hr>.\r\n */\r\nconst VOID_TAGS = ['BR', 'HR', 'IMG', 'AREA', 'LINK', 'WBR'];\r\nexport class TagMapping {\r\n    getStartTagPlaceholderName(tag, id) {\r\n        const upperTag = tag.toUpperCase();\r\n        const baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\r\n        return `START_${baseName}` + this.counterString(id);\r\n    }\r\n    getCloseTagPlaceholderName(tag) {\r\n        const upperTag = tag.toUpperCase();\r\n        const baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\r\n        return `CLOSE_${baseName}`;\r\n    }\r\n    getEmptyTagPlaceholderName(tag, id) {\r\n        const upperTag = tag.toUpperCase();\r\n        const baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\r\n        return baseName + this.counterString(id);\r\n    }\r\n    getCtypeForTag(tag) {\r\n        switch (tag.toLowerCase()) {\r\n            case 'br':\r\n                return 'lb';\r\n            case 'img':\r\n                return 'image';\r\n            default:\r\n                return `x-${tag}`;\r\n        }\r\n    }\r\n    getTagnameFromStartTagPlaceholderName(placeholderName) {\r\n        if (placeholderName.startsWith('START_TAG_')) {\r\n            return this.stripCounter(placeholderName.substring('START_TAG_'.length)).toLowerCase();\r\n        }\r\n        else if (placeholderName.startsWith('START_')) {\r\n            const ph = this.stripCounter(placeholderName.substring('START_'.length));\r\n            const matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find((key) => TAG_TO_PLACEHOLDER_NAMES[key] === ph);\r\n            return matchKey ? matchKey.toLowerCase() : null;\r\n        }\r\n        return null;\r\n    }\r\n    getTagnameFromCloseTagPlaceholderName(placeholderName) {\r\n        if (placeholderName.startsWith('CLOSE_TAG_')) {\r\n            return this.stripCounter(placeholderName.substring('CLOSE_TAG_'.length)).toLowerCase();\r\n        }\r\n        else if (placeholderName.startsWith('CLOSE_')) {\r\n            const ph = this.stripCounter(placeholderName.substring('CLOSE_'.length));\r\n            const matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find((key) => TAG_TO_PLACEHOLDER_NAMES[key] === ph);\r\n            return matchKey ? matchKey.toLowerCase() : null;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Test, wether placeholder name stands for empty html tag.\r\n     * @param placeholderName can be TAG_<name> or just <name>\r\n     */\r\n    isEmptyTagPlaceholderName(placeholderName) {\r\n        const ph = this.stripCounter(placeholderName);\r\n        let matchKey;\r\n        if (ph.startsWith('TAG_')) {\r\n            matchKey = ph.substring(4).toUpperCase();\r\n        }\r\n        else {\r\n            matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find((key) => TAG_TO_PLACEHOLDER_NAMES[key] === ph);\r\n        }\r\n        if (matchKey) {\r\n            if (VOID_TAGS.indexOf(matchKey) >= 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * tagname of empty tag placeholder.\r\n     * @param placeholderName can be TAG_<name> or just <name>\r\n     */\r\n    getTagnameFromEmptyTagPlaceholderName(placeholderName) {\r\n        const ph = this.stripCounter(placeholderName);\r\n        let matchKey;\r\n        if (ph.startsWith('TAG_')) {\r\n            matchKey = ph.substring(4).toUpperCase();\r\n        }\r\n        else {\r\n            matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find((key) => TAG_TO_PLACEHOLDER_NAMES[key] === ph);\r\n        }\r\n        if (matchKey) {\r\n            if (VOID_TAGS.indexOf(matchKey) >= 0) {\r\n                return matchKey.toLowerCase();\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * If placeholder ends with _[0-9]+, strip that number.\r\n     * @param placeholderName placeholderName\r\n     * @return placeholderName without counter at end.\r\n     */\r\n    stripCounter(placeholderName) {\r\n        if (placeholderName) {\r\n            const re = /(.*)_[0-9]+$/;\r\n            if (placeholderName.match(re)) {\r\n                return placeholderName.replace(re, '$1');\r\n            }\r\n        }\r\n        return placeholderName;\r\n    }\r\n    /**\r\n     * String suffix for counter.\r\n     * If counter is 0, it is empty, otherwise _<id>.\r\n     * @param id id\r\n     * @return suffix for counter.\r\n     */\r\n    counterString(id) {\r\n        if (id === 0) {\r\n            return '';\r\n        }\r\n        else {\r\n            return '_' + id.toString(10);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":[],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\tag-mapping.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Created by roobm on 16.05.2017.\r\n * Mapping from normalized tag names to placeholder names.\r\n */\r\n/*\r\ncopied from https://github.com/angular/angular/blob/master/packages/compiler/src/i18n/serializers/placeholder.ts\r\n */\r\nconst TAG_TO_PLACEHOLDER_NAMES = {\r\n    'A': 'LINK',\r\n    'B': 'BOLD_TEXT',\r\n    'BR': 'LINE_BREAK',\r\n    'EM': 'EMPHASISED_TEXT',\r\n    'H1': 'HEADING_LEVEL1',\r\n    'H2': 'HEADING_LEVEL2',\r\n    'H3': 'HEADING_LEVEL3',\r\n    'H4': 'HEADING_LEVEL4',\r\n    'H5': 'HEADING_LEVEL5',\r\n    'H6': 'HEADING_LEVEL6',\r\n    'HR': 'HORIZONTAL_RULE',\r\n    'I': 'ITALIC_TEXT',\r\n    'LI': 'LIST_ITEM',\r\n    'LINK': 'MEDIA_LINK',\r\n    'OL': 'ORDERED_LIST',\r\n    'P': 'PARAGRAPH',\r\n    'Q': 'QUOTATION',\r\n    'S': 'STRIKETHROUGH_TEXT',\r\n    'SMALL': 'SMALL_TEXT',\r\n    'SUB': 'SUBSTRIPT',\r\n    'SUP': 'SUPERSCRIPT',\r\n    'TBODY': 'TABLE_BODY',\r\n    'TD': 'TABLE_CELL',\r\n    'TFOOT': 'TABLE_FOOTER',\r\n    'TH': 'TABLE_HEADER_CELL',\r\n    'THEAD': 'TABLE_HEADER',\r\n    'TR': 'TABLE_ROW',\r\n    'TT': 'MONOSPACED_TEXT',\r\n    'U': 'UNDERLINED_TEXT',\r\n    'UL': 'UNORDERED_LIST',\r\n};\r\n/**\r\n * HTML Tags (in uppercase) that are empty, they have no content, but do not need a close tag, e.g. <br>, <img>, <hr>.\r\n */\r\nconst VOID_TAGS = ['BR', 'HR', 'IMG', 'AREA', 'LINK', 'WBR'];\r\nexport class TagMapping {\r\n    getStartTagPlaceholderName(tag, id) {\r\n        const upperTag = tag.toUpperCase();\r\n        const baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\r\n        return `START_${baseName}` + this.counterString(id);\r\n    }\r\n    getCloseTagPlaceholderName(tag) {\r\n        const upperTag = tag.toUpperCase();\r\n        const baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\r\n        return `CLOSE_${baseName}`;\r\n    }\r\n    getEmptyTagPlaceholderName(tag, id) {\r\n        const upperTag = tag.toUpperCase();\r\n        const baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\r\n        return baseName + this.counterString(id);\r\n    }\r\n    getCtypeForTag(tag) {\r\n        switch (tag.toLowerCase()) {\r\n            case 'br':\r\n                return 'lb';\r\n            case 'img':\r\n                return 'image';\r\n            default:\r\n                return `x-${tag}`;\r\n        }\r\n    }\r\n    getTagnameFromStartTagPlaceholderName(placeholderName) {\r\n        if (placeholderName.startsWith('START_TAG_')) {\r\n            return this.stripCounter(placeholderName.substring('START_TAG_'.length)).toLowerCase();\r\n        }\r\n        else if (placeholderName.startsWith('START_')) {\r\n            const ph = this.stripCounter(placeholderName.substring('START_'.length));\r\n            const matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find((key) => TAG_TO_PLACEHOLDER_NAMES[key] === ph);\r\n            return matchKey ? matchKey.toLowerCase() : null;\r\n        }\r\n        return null;\r\n    }\r\n    getTagnameFromCloseTagPlaceholderName(placeholderName) {\r\n        if (placeholderName.startsWith('CLOSE_TAG_')) {\r\n            return this.stripCounter(placeholderName.substring('CLOSE_TAG_'.length)).toLowerCase();\r\n        }\r\n        else if (placeholderName.startsWith('CLOSE_')) {\r\n            const ph = this.stripCounter(placeholderName.substring('CLOSE_'.length));\r\n            const matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find((key) => TAG_TO_PLACEHOLDER_NAMES[key] === ph);\r\n            return matchKey ? matchKey.toLowerCase() : null;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Test, wether placeholder name stands for empty html tag.\r\n     * @param placeholderName can be TAG_<name> or just <name>\r\n     */\r\n    isEmptyTagPlaceholderName(placeholderName) {\r\n        const ph = this.stripCounter(placeholderName);\r\n        let matchKey;\r\n        if (ph.startsWith('TAG_')) {\r\n            matchKey = ph.substring(4).toUpperCase();\r\n        }\r\n        else {\r\n            matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find((key) => TAG_TO_PLACEHOLDER_NAMES[key] === ph);\r\n        }\r\n        if (matchKey) {\r\n            if (VOID_TAGS.indexOf(matchKey) >= 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * tagname of empty tag placeholder.\r\n     * @param placeholderName can be TAG_<name> or just <name>\r\n     */\r\n    getTagnameFromEmptyTagPlaceholderName(placeholderName) {\r\n        const ph = this.stripCounter(placeholderName);\r\n        let matchKey;\r\n        if (ph.startsWith('TAG_')) {\r\n            matchKey = ph.substring(4).toUpperCase();\r\n        }\r\n        else {\r\n            matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find((key) => TAG_TO_PLACEHOLDER_NAMES[key] === ph);\r\n        }\r\n        if (matchKey) {\r\n            if (VOID_TAGS.indexOf(matchKey) >= 0) {\r\n                return matchKey.toLowerCase();\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * If placeholder ends with _[0-9]+, strip that number.\r\n     * @param placeholderName placeholderName\r\n     * @return placeholderName without counter at end.\r\n     */\r\n    stripCounter(placeholderName) {\r\n        if (placeholderName) {\r\n            const re = /(.*)_[0-9]+$/;\r\n            if (placeholderName.match(re)) {\r\n                return placeholderName.replace(re, '$1');\r\n            }\r\n        }\r\n        return placeholderName;\r\n    }\r\n    /**\r\n     * String suffix for counter.\r\n     * If counter is 0, it is empty, otherwise _<id>.\r\n     * @param id id\r\n     * @return suffix for counter.\r\n     */\r\n    counterString(id) {\r\n        if (id === 0) {\r\n            return '';\r\n        }\r\n        else {\r\n            return '_' + id.toString(10);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLW1hcHBpbmcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9pbXBsL3RhZy1tYXBwaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUVIOztHQUVHO0FBQ0gsTUFBTSx3QkFBd0IsR0FBMEI7SUFDcEQsR0FBRyxFQUFFLE1BQU07SUFDWCxHQUFHLEVBQUUsV0FBVztJQUNoQixJQUFJLEVBQUUsWUFBWTtJQUNsQixJQUFJLEVBQUUsaUJBQWlCO0lBQ3ZCLElBQUksRUFBRSxnQkFBZ0I7SUFDdEIsSUFBSSxFQUFFLGdCQUFnQjtJQUN0QixJQUFJLEVBQUUsZ0JBQWdCO0lBQ3RCLElBQUksRUFBRSxnQkFBZ0I7SUFDdEIsSUFBSSxFQUFFLGdCQUFnQjtJQUN0QixJQUFJLEVBQUUsZ0JBQWdCO0lBQ3RCLElBQUksRUFBRSxpQkFBaUI7SUFDdkIsR0FBRyxFQUFFLGFBQWE7SUFDbEIsSUFBSSxFQUFFLFdBQVc7SUFDakIsTUFBTSxFQUFFLFlBQVk7SUFDcEIsSUFBSSxFQUFFLGNBQWM7SUFDcEIsR0FBRyxFQUFFLFdBQVc7SUFDaEIsR0FBRyxFQUFFLFdBQVc7SUFDaEIsR0FBRyxFQUFFLG9CQUFvQjtJQUN6QixPQUFPLEVBQUUsWUFBWTtJQUNyQixLQUFLLEVBQUUsV0FBVztJQUNsQixLQUFLLEVBQUUsYUFBYTtJQUNwQixPQUFPLEVBQUUsWUFBWTtJQUNyQixJQUFJLEVBQUUsWUFBWTtJQUNsQixPQUFPLEVBQUUsY0FBYztJQUN2QixJQUFJLEVBQUUsbUJBQW1CO0lBQ3pCLE9BQU8sRUFBRSxjQUFjO0lBQ3ZCLElBQUksRUFBRSxXQUFXO0lBQ2pCLElBQUksRUFBRSxpQkFBaUI7SUFDdkIsR0FBRyxFQUFFLGlCQUFpQjtJQUN0QixJQUFJLEVBQUUsZ0JBQWdCO0NBQ3pCLENBQUM7QUFFRjs7R0FFRztBQUNILE1BQU0sU0FBUyxHQUFHLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztBQUU3RCxNQUFNLE9BQU8sVUFBVTtJQUVaLDBCQUEwQixDQUFDLEdBQVcsRUFBRSxFQUFVO1FBQ3JELE1BQU0sUUFBUSxHQUFHLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuQyxNQUFNLFFBQVEsR0FBRyx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsSUFBSSxPQUFPLFFBQVEsRUFBRSxDQUFDO1FBQ3pFLE9BQU8sU0FBUyxRQUFRLEVBQUUsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFFTSwwQkFBMEIsQ0FBQyxHQUFXO1FBQ3pDLE1BQU0sUUFBUSxHQUFHLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuQyxNQUFNLFFBQVEsR0FBRyx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsSUFBSSxPQUFPLFFBQVEsRUFBRSxDQUFDO1FBQ3pFLE9BQU8sU0FBUyxRQUFRLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBRU0sMEJBQTBCLENBQUMsR0FBVyxFQUFFLEVBQVU7UUFDckQsTUFBTSxRQUFRLEdBQUcsR0FBRyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ25DLE1BQU0sUUFBUSxHQUFJLHdCQUF3QixDQUFDLFFBQVEsQ0FBQyxJQUFJLE9BQU8sUUFBUSxFQUFFLENBQUM7UUFDMUUsT0FBTyxRQUFRLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU0sY0FBYyxDQUFDLEdBQVc7UUFDN0IsUUFBUSxHQUFHLENBQUMsV0FBVyxFQUFFLEVBQUU7WUFDdkIsS0FBSyxJQUFJO2dCQUNMLE9BQU8sSUFBSSxDQUFDO1lBQ2hCLEtBQUssS0FBSztnQkFDTixPQUFPLE9BQU8sQ0FBQztZQUNuQjtnQkFDSSxPQUFPLEtBQUssR0FBRyxFQUFFLENBQUM7U0FDekI7SUFDTCxDQUFDO0lBRU0scUNBQXFDLENBQUMsZUFBdUI7UUFDaEUsSUFBSSxlQUFlLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxFQUFFO1lBQzFDLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQzFGO2FBQU0sSUFBSSxlQUFlLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQzdDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUN6RSxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyx3QkFBd0IsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztZQUMzRyxPQUFPLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7U0FDbkQ7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRU0scUNBQXFDLENBQUMsZUFBdUI7UUFDaEUsSUFBSSxlQUFlLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxFQUFFO1lBQzFDLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQzFGO2FBQU0sSUFBSSxlQUFlLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQzdDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUN6RSxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyx3QkFBd0IsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztZQUMzRyxPQUFPLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7U0FDbkQ7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0kseUJBQXlCLENBQUMsZUFBdUI7UUFDcEQsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUM5QyxJQUFJLFFBQVEsQ0FBQztRQUNiLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUN2QixRQUFRLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUM1QzthQUFNO1lBQ0gsUUFBUSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLHdCQUF3QixDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO1NBQ3hHO1FBQ0QsSUFBSSxRQUFRLEVBQUU7WUFDVixJQUFJLFNBQVMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUNsQyxPQUFPLElBQUksQ0FBQzthQUNmO1NBQ0o7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0kscUNBQXFDLENBQUMsZUFBdUI7UUFDaEUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUM5QyxJQUFJLFFBQVEsQ0FBQztRQUNiLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUN2QixRQUFRLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUM1QzthQUFNO1lBQ0gsUUFBUSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLHdCQUF3QixDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO1NBQ3hHO1FBQ0QsSUFBSSxRQUFRLEVBQUU7WUFDVixJQUFJLFNBQVMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUNsQyxPQUFPLFFBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQzthQUNqQztpQkFBTTtnQkFDSCxPQUFPLElBQUksQ0FBQzthQUNmO1NBQ0o7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNLLFlBQVksQ0FBQyxlQUF1QjtRQUN4QyxJQUFJLGVBQWUsRUFBRTtZQUNqQixNQUFNLEVBQUUsR0FBRyxjQUFjLENBQUM7WUFDMUIsSUFBSSxlQUFlLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxFQUFFO2dCQUMzQixPQUFPLGVBQWUsQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO2FBQzVDO1NBQ0o7UUFDRCxPQUFPLGVBQWUsQ0FBQztJQUMzQixDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSyxhQUFhLENBQUMsRUFBVTtRQUM1QixJQUFJLEVBQUUsS0FBSyxDQUFDLEVBQUU7WUFDVixPQUFPLEVBQUUsQ0FBQztTQUNiO2FBQU07WUFDSCxPQUFPLEdBQUcsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQ2hDO0lBQ0wsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENyZWF0ZWQgYnkgcm9vYm0gb24gMTYuMDUuMjAxNy5cclxuICogTWFwcGluZyBmcm9tIG5vcm1hbGl6ZWQgdGFnIG5hbWVzIHRvIHBsYWNlaG9sZGVyIG5hbWVzLlxyXG4gKi9cclxuXHJcbi8qXHJcbmNvcGllZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyL2FuZ3VsYXIvYmxvYi9tYXN0ZXIvcGFja2FnZXMvY29tcGlsZXIvc3JjL2kxOG4vc2VyaWFsaXplcnMvcGxhY2Vob2xkZXIudHNcclxuICovXHJcbmNvbnN0IFRBR19UT19QTEFDRUhPTERFUl9OQU1FUzoge1trOiBzdHJpbmddOiBzdHJpbmd9ID0ge1xyXG4gICAgJ0EnOiAnTElOSycsXHJcbiAgICAnQic6ICdCT0xEX1RFWFQnLFxyXG4gICAgJ0JSJzogJ0xJTkVfQlJFQUsnLFxyXG4gICAgJ0VNJzogJ0VNUEhBU0lTRURfVEVYVCcsXHJcbiAgICAnSDEnOiAnSEVBRElOR19MRVZFTDEnLFxyXG4gICAgJ0gyJzogJ0hFQURJTkdfTEVWRUwyJyxcclxuICAgICdIMyc6ICdIRUFESU5HX0xFVkVMMycsXHJcbiAgICAnSDQnOiAnSEVBRElOR19MRVZFTDQnLFxyXG4gICAgJ0g1JzogJ0hFQURJTkdfTEVWRUw1JyxcclxuICAgICdINic6ICdIRUFESU5HX0xFVkVMNicsXHJcbiAgICAnSFInOiAnSE9SSVpPTlRBTF9SVUxFJyxcclxuICAgICdJJzogJ0lUQUxJQ19URVhUJyxcclxuICAgICdMSSc6ICdMSVNUX0lURU0nLFxyXG4gICAgJ0xJTksnOiAnTUVESUFfTElOSycsXHJcbiAgICAnT0wnOiAnT1JERVJFRF9MSVNUJyxcclxuICAgICdQJzogJ1BBUkFHUkFQSCcsXHJcbiAgICAnUSc6ICdRVU9UQVRJT04nLFxyXG4gICAgJ1MnOiAnU1RSSUtFVEhST1VHSF9URVhUJyxcclxuICAgICdTTUFMTCc6ICdTTUFMTF9URVhUJyxcclxuICAgICdTVUInOiAnU1VCU1RSSVBUJyxcclxuICAgICdTVVAnOiAnU1VQRVJTQ1JJUFQnLFxyXG4gICAgJ1RCT0RZJzogJ1RBQkxFX0JPRFknLFxyXG4gICAgJ1REJzogJ1RBQkxFX0NFTEwnLFxyXG4gICAgJ1RGT09UJzogJ1RBQkxFX0ZPT1RFUicsXHJcbiAgICAnVEgnOiAnVEFCTEVfSEVBREVSX0NFTEwnLFxyXG4gICAgJ1RIRUFEJzogJ1RBQkxFX0hFQURFUicsXHJcbiAgICAnVFInOiAnVEFCTEVfUk9XJyxcclxuICAgICdUVCc6ICdNT05PU1BBQ0VEX1RFWFQnLFxyXG4gICAgJ1UnOiAnVU5ERVJMSU5FRF9URVhUJyxcclxuICAgICdVTCc6ICdVTk9SREVSRURfTElTVCcsXHJcbn07XHJcblxyXG4vKipcclxuICogSFRNTCBUYWdzIChpbiB1cHBlcmNhc2UpIHRoYXQgYXJlIGVtcHR5LCB0aGV5IGhhdmUgbm8gY29udGVudCwgYnV0IGRvIG5vdCBuZWVkIGEgY2xvc2UgdGFnLCBlLmcuIDxicj4sIDxpbWc+LCA8aHI+LlxyXG4gKi9cclxuY29uc3QgVk9JRF9UQUdTID0gWydCUicsICdIUicsICdJTUcnLCAnQVJFQScsICdMSU5LJywgJ1dCUiddO1xyXG5cclxuZXhwb3J0IGNsYXNzIFRhZ01hcHBpbmcge1xyXG5cclxuICAgIHB1YmxpYyBnZXRTdGFydFRhZ1BsYWNlaG9sZGVyTmFtZSh0YWc6IHN0cmluZywgaWQ6IG51bWJlcik6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgdXBwZXJUYWcgPSB0YWcudG9VcHBlckNhc2UoKTtcclxuICAgICAgICBjb25zdCBiYXNlTmFtZSA9IFRBR19UT19QTEFDRUhPTERFUl9OQU1FU1t1cHBlclRhZ10gfHwgYFRBR18ke3VwcGVyVGFnfWA7XHJcbiAgICAgICAgcmV0dXJuIGBTVEFSVF8ke2Jhc2VOYW1lfWAgKyB0aGlzLmNvdW50ZXJTdHJpbmcoaWQpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRDbG9zZVRhZ1BsYWNlaG9sZGVyTmFtZSh0YWc6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgdXBwZXJUYWcgPSB0YWcudG9VcHBlckNhc2UoKTtcclxuICAgICAgICBjb25zdCBiYXNlTmFtZSA9IFRBR19UT19QTEFDRUhPTERFUl9OQU1FU1t1cHBlclRhZ10gfHwgYFRBR18ke3VwcGVyVGFnfWA7XHJcbiAgICAgICAgcmV0dXJuIGBDTE9TRV8ke2Jhc2VOYW1lfWA7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldEVtcHR5VGFnUGxhY2Vob2xkZXJOYW1lKHRhZzogc3RyaW5nLCBpZDogbnVtYmVyKTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCB1cHBlclRhZyA9IHRhZy50b1VwcGVyQ2FzZSgpO1xyXG4gICAgICAgIGNvbnN0IGJhc2VOYW1lID0gIFRBR19UT19QTEFDRUhPTERFUl9OQU1FU1t1cHBlclRhZ10gfHwgYFRBR18ke3VwcGVyVGFnfWA7XHJcbiAgICAgICAgcmV0dXJuIGJhc2VOYW1lICsgdGhpcy5jb3VudGVyU3RyaW5nKGlkKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0Q3R5cGVGb3JUYWcodGFnOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIHN3aXRjaCAodGFnLnRvTG93ZXJDYXNlKCkpIHtcclxuICAgICAgICAgICAgY2FzZSAnYnInOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICdsYic7XHJcbiAgICAgICAgICAgIGNhc2UgJ2ltZyc6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2ltYWdlJztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIHJldHVybiBgeC0ke3RhZ31gO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0VGFnbmFtZUZyb21TdGFydFRhZ1BsYWNlaG9sZGVyTmFtZShwbGFjZWhvbGRlck5hbWU6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgaWYgKHBsYWNlaG9sZGVyTmFtZS5zdGFydHNXaXRoKCdTVEFSVF9UQUdfJykpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RyaXBDb3VudGVyKHBsYWNlaG9sZGVyTmFtZS5zdWJzdHJpbmcoJ1NUQVJUX1RBR18nLmxlbmd0aCkpLnRvTG93ZXJDYXNlKCk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChwbGFjZWhvbGRlck5hbWUuc3RhcnRzV2l0aCgnU1RBUlRfJykpIHtcclxuICAgICAgICAgICAgY29uc3QgcGggPSB0aGlzLnN0cmlwQ291bnRlcihwbGFjZWhvbGRlck5hbWUuc3Vic3RyaW5nKCdTVEFSVF8nLmxlbmd0aCkpO1xyXG4gICAgICAgICAgICBjb25zdCBtYXRjaEtleSA9IE9iamVjdC5rZXlzKFRBR19UT19QTEFDRUhPTERFUl9OQU1FUykuZmluZCgoa2V5KSA9PiBUQUdfVE9fUExBQ0VIT0xERVJfTkFNRVNba2V5XSA9PT0gcGgpO1xyXG4gICAgICAgICAgICByZXR1cm4gbWF0Y2hLZXkgPyBtYXRjaEtleS50b0xvd2VyQ2FzZSgpIDogbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldFRhZ25hbWVGcm9tQ2xvc2VUYWdQbGFjZWhvbGRlck5hbWUocGxhY2Vob2xkZXJOYW1lOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIGlmIChwbGFjZWhvbGRlck5hbWUuc3RhcnRzV2l0aCgnQ0xPU0VfVEFHXycpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnN0cmlwQ291bnRlcihwbGFjZWhvbGRlck5hbWUuc3Vic3RyaW5nKCdDTE9TRV9UQUdfJy5sZW5ndGgpKS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAocGxhY2Vob2xkZXJOYW1lLnN0YXJ0c1dpdGgoJ0NMT1NFXycpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHBoID0gdGhpcy5zdHJpcENvdW50ZXIocGxhY2Vob2xkZXJOYW1lLnN1YnN0cmluZygnQ0xPU0VfJy5sZW5ndGgpKTtcclxuICAgICAgICAgICAgY29uc3QgbWF0Y2hLZXkgPSBPYmplY3Qua2V5cyhUQUdfVE9fUExBQ0VIT0xERVJfTkFNRVMpLmZpbmQoKGtleSkgPT4gVEFHX1RPX1BMQUNFSE9MREVSX05BTUVTW2tleV0gPT09IHBoKTtcclxuICAgICAgICAgICAgcmV0dXJuIG1hdGNoS2V5ID8gbWF0Y2hLZXkudG9Mb3dlckNhc2UoKSA6IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGVzdCwgd2V0aGVyIHBsYWNlaG9sZGVyIG5hbWUgc3RhbmRzIGZvciBlbXB0eSBodG1sIHRhZy5cclxuICAgICAqIEBwYXJhbSBwbGFjZWhvbGRlck5hbWUgY2FuIGJlIFRBR188bmFtZT4gb3IganVzdCA8bmFtZT5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGlzRW1wdHlUYWdQbGFjZWhvbGRlck5hbWUocGxhY2Vob2xkZXJOYW1lOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICBjb25zdCBwaCA9IHRoaXMuc3RyaXBDb3VudGVyKHBsYWNlaG9sZGVyTmFtZSk7XHJcbiAgICAgICAgbGV0IG1hdGNoS2V5O1xyXG4gICAgICAgIGlmIChwaC5zdGFydHNXaXRoKCdUQUdfJykpIHtcclxuICAgICAgICAgICAgbWF0Y2hLZXkgPSBwaC5zdWJzdHJpbmcoNCkudG9VcHBlckNhc2UoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBtYXRjaEtleSA9IE9iamVjdC5rZXlzKFRBR19UT19QTEFDRUhPTERFUl9OQU1FUykuZmluZCgoa2V5KSA9PiBUQUdfVE9fUExBQ0VIT0xERVJfTkFNRVNba2V5XSA9PT0gcGgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAobWF0Y2hLZXkpIHtcclxuICAgICAgICAgICAgaWYgKFZPSURfVEFHUy5pbmRleE9mKG1hdGNoS2V5KSA+PSAwKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB0YWduYW1lIG9mIGVtcHR5IHRhZyBwbGFjZWhvbGRlci5cclxuICAgICAqIEBwYXJhbSBwbGFjZWhvbGRlck5hbWUgY2FuIGJlIFRBR188bmFtZT4gb3IganVzdCA8bmFtZT5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGdldFRhZ25hbWVGcm9tRW1wdHlUYWdQbGFjZWhvbGRlck5hbWUocGxhY2Vob2xkZXJOYW1lOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IHBoID0gdGhpcy5zdHJpcENvdW50ZXIocGxhY2Vob2xkZXJOYW1lKTtcclxuICAgICAgICBsZXQgbWF0Y2hLZXk7XHJcbiAgICAgICAgaWYgKHBoLnN0YXJ0c1dpdGgoJ1RBR18nKSkge1xyXG4gICAgICAgICAgICBtYXRjaEtleSA9IHBoLnN1YnN0cmluZyg0KS50b1VwcGVyQ2FzZSgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG1hdGNoS2V5ID0gT2JqZWN0LmtleXMoVEFHX1RPX1BMQUNFSE9MREVSX05BTUVTKS5maW5kKChrZXkpID0+IFRBR19UT19QTEFDRUhPTERFUl9OQU1FU1trZXldID09PSBwaCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChtYXRjaEtleSkge1xyXG4gICAgICAgICAgICBpZiAoVk9JRF9UQUdTLmluZGV4T2YobWF0Y2hLZXkpID49IDApIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBtYXRjaEtleS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBJZiBwbGFjZWhvbGRlciBlbmRzIHdpdGggX1swLTldKywgc3RyaXAgdGhhdCBudW1iZXIuXHJcbiAgICAgKiBAcGFyYW0gcGxhY2Vob2xkZXJOYW1lIHBsYWNlaG9sZGVyTmFtZVxyXG4gICAgICogQHJldHVybiBwbGFjZWhvbGRlck5hbWUgd2l0aG91dCBjb3VudGVyIGF0IGVuZC5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBzdHJpcENvdW50ZXIocGxhY2Vob2xkZXJOYW1lOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIGlmIChwbGFjZWhvbGRlck5hbWUpIHtcclxuICAgICAgICAgICAgY29uc3QgcmUgPSAvKC4qKV9bMC05XSskLztcclxuICAgICAgICAgICAgaWYgKHBsYWNlaG9sZGVyTmFtZS5tYXRjaChyZSkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBwbGFjZWhvbGRlck5hbWUucmVwbGFjZShyZSwgJyQxJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHBsYWNlaG9sZGVyTmFtZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFN0cmluZyBzdWZmaXggZm9yIGNvdW50ZXIuXHJcbiAgICAgKiBJZiBjb3VudGVyIGlzIDAsIGl0IGlzIGVtcHR5LCBvdGhlcndpc2UgXzxpZD4uXHJcbiAgICAgKiBAcGFyYW0gaWQgaWRcclxuICAgICAqIEByZXR1cm4gc3VmZml4IGZvciBjb3VudGVyLlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGNvdW50ZXJTdHJpbmcoaWQ6IG51bWJlcikge1xyXG4gICAgICAgIGlmIChpZCA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gJyc7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuICdfJyArIGlkLnRvU3RyaW5nKDEwKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19","originalSourcemap":{"version":3,"file":"tag-mapping.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/tag-mapping.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[[3,0,3,3]],[[0,0,5,0]],[],[[3,0,7,3]],[[0,0,8,0],[6,0,8,6],[30,0,8,30],[33,0,8,56]],[[4,0,9,4],[7,0,9,7],[9,0,9,9],[15,0,9,15]],[[4,0,10,4],[7,0,10,7],[9,0,10,9],[20,0,10,20]],[[4,0,11,4],[8,0,11,8],[10,0,11,10],[22,0,11,22]],[[4,0,12,4],[8,0,12,8],[10,0,12,10],[27,0,12,27]],[[4,0,13,4],[8,0,13,8],[10,0,13,10],[26,0,13,26]],[[4,0,14,4],[8,0,14,8],[10,0,14,10],[26,0,14,26]],[[4,0,15,4],[8,0,15,8],[10,0,15,10],[26,0,15,26]],[[4,0,16,4],[8,0,16,8],[10,0,16,10],[26,0,16,26]],[[4,0,17,4],[8,0,17,8],[10,0,17,10],[26,0,17,26]],[[4,0,18,4],[8,0,18,8],[10,0,18,10],[26,0,18,26]],[[4,0,19,4],[8,0,19,8],[10,0,19,10],[27,0,19,27]],[[4,0,20,4],[7,0,20,7],[9,0,20,9],[22,0,20,22]],[[4,0,21,4],[8,0,21,8],[10,0,21,10],[21,0,21,21]],[[4,0,22,4],[10,0,22,10],[12,0,22,12],[24,0,22,24]],[[4,0,23,4],[8,0,23,8],[10,0,23,10],[24,0,23,24]],[[4,0,24,4],[7,0,24,7],[9,0,24,9],[20,0,24,20]],[[4,0,25,4],[7,0,25,7],[9,0,25,9],[20,0,25,20]],[[4,0,26,4],[7,0,26,7],[9,0,26,9],[29,0,26,29]],[[4,0,27,4],[11,0,27,11],[13,0,27,13],[25,0,27,25]],[[4,0,28,4],[9,0,28,9],[11,0,28,11],[22,0,28,22]],[[4,0,29,4],[9,0,29,9],[11,0,29,11],[24,0,29,24]],[[4,0,30,4],[11,0,30,11],[13,0,30,13],[25,0,30,25]],[[4,0,31,4],[8,0,31,8],[10,0,31,10],[22,0,31,22]],[[4,0,32,4],[11,0,32,11],[13,0,32,13],[27,0,32,27]],[[4,0,33,4],[8,0,33,8],[10,0,33,10],[29,0,33,29]],[[4,0,34,4],[11,0,34,11],[13,0,34,13],[27,0,34,27]],[[4,0,35,4],[8,0,35,8],[10,0,35,10],[21,0,35,21]],[[4,0,36,4],[8,0,36,8],[10,0,36,10],[27,0,36,27]],[[4,0,37,4],[7,0,37,7],[9,0,37,9],[26,0,37,26]],[[4,0,38,4],[8,0,38,8],[10,0,38,10],[26,0,38,26]],[[1,0,39,1],[2,0,39,2]],[[0,0,41,0]],[],[[3,0,43,3]],[[0,0,44,0],[6,0,44,6],[15,0,44,15],[18,0,44,18],[19,0,44,19],[23,0,44,23],[25,0,44,25],[29,0,44,29],[31,0,44,31],[36,0,44,36],[38,0,44,38],[44,0,44,44],[46,0,44,46],[52,0,44,52],[54,0,44,54],[59,0,44,59],[60,0,44,60],[61,0,44,61]],[[0,0,46,0],[6,0,46,6],[13,0,46,13],[23,0,46,23]],[[4,0,48,11],[30,0,48,37],[31,0,48,38],[34,0,48,49],[36,0,48,51],[38,0,48,61]],[[8,0,49,8],[14,0,49,14],[22,0,49,22],[25,0,49,25],[28,0,49,28],[29,0,49,29],[40,0,49,40],[42,0,49,42],[43,0,49,43]],[[8,0,50,8],[14,0,50,14],[22,0,50,22],[25,0,50,25],[49,0,50,49],[50,0,50,50],[58,0,50,58],[59,0,50,59],[63,0,50,63],[70,0,50,70],[78,0,50,78],[80,0,50,80],[81,0,50,81]],[[8,0,51,8],[15,0,51,15],[24,0,51,24],[32,0,51,32],[34,0,51,34],[37,0,51,37],[41,0,51,41],[42,0,51,42],[55,0,51,55],[56,0,51,56],[58,0,51,58],[59,0,51,59],[60,0,51,60]],[[4,0,52,4],[5,0,52,5]],[[4,0,54,11],[30,0,54,37],[31,0,54,38],[34,0,54,49]],[[8,0,55,8],[14,0,55,14],[22,0,55,22],[25,0,55,25],[28,0,55,28],[29,0,55,29],[40,0,55,40],[42,0,55,42],[43,0,55,43]],[[8,0,56,8],[14,0,56,14],[22,0,56,22],[25,0,56,25],[49,0,56,49],[50,0,56,50],[58,0,56,58],[59,0,56,59],[63,0,56,63],[70,0,56,70],[78,0,56,78],[80,0,56,80],[81,0,56,81]],[[8,0,57,8],[15,0,57,15],[24,0,57,24],[32,0,57,32],[34,0,57,34],[35,0,57,35]],[[4,0,58,4],[5,0,58,5]],[[4,0,60,11],[30,0,60,37],[31,0,60,38],[34,0,60,49],[36,0,60,51],[38,0,60,61]],[[8,0,61,8],[14,0,61,14],[22,0,61,22],[25,0,61,25],[28,0,61,28],[29,0,61,29],[40,0,61,40],[42,0,61,42],[43,0,61,43]],[[8,0,62,8],[14,0,62,14],[22,0,62,22],[25,0,62,26],[49,0,62,50],[50,0,62,51],[58,0,62,59],[59,0,62,60],[63,0,62,64],[70,0,62,71],[78,0,62,79],[80,0,62,81],[81,0,62,82]],[[8,0,63,8],[15,0,63,15],[23,0,63,23],[26,0,63,26],[30,0,63,30],[31,0,63,31],[44,0,63,44],[45,0,63,45],[47,0,63,47],[48,0,63,48],[49,0,63,49]],[[4,0,64,4],[5,0,64,5]],[[4,0,66,11],[18,0,66,25],[19,0,66,26],[22,0,66,37]],[[8,0,67,8],[16,0,67,16],[19,0,67,19],[20,0,67,20],[31,0,67,31],[33,0,67,33],[35,0,67,35]],[[12,0,68,12],[17,0,68,17],[21,0,68,21]],[[16,0,69,16],[23,0,69,23],[27,0,69,27],[28,0,69,28]],[[12,0,70,12],[17,0,70,17],[22,0,70,22]],[[16,0,71,16],[23,0,71,23],[30,0,71,30],[31,0,71,31]],[[12,0,72,12]],[[16,0,73,16],[23,0,73,23],[28,0,73,28],[31,0,73,31],[33,0,73,33],[34,0,73,34]],[[9,0,74,9]],[[4,0,75,4],[5,0,75,5]],[[4,0,77,11],[41,0,77,48],[42,0,77,49],[57,0,77,72]],[[8,0,78,8],[12,0,78,12],[27,0,78,27],[28,0,78,28],[38,0,78,38],[39,0,78,39],[51,0,78,51],[52,0,78,52],[54,0,78,54]],[[12,0,79,12],[19,0,79,19],[23,0,79,23],[24,0,79,24],[36,0,79,36],[37,0,79,37],[52,0,79,52],[53,0,79,53],[62,0,79,62],[63,0,79,63],[75,0,79,75],[76,0,79,76],[82,0,79,82],[83,0,79,83],[84,0,79,84],[85,0,79,85],[96,0,79,96],[98,0,79,98],[99,0,79,99]],[[9,0,80,9]],[[13,0,80,15],[17,0,80,19],[32,0,80,34],[33,0,80,35],[43,0,80,45],[44,0,80,46],[52,0,80,54],[53,0,80,55],[55,0,80,57]],[[12,0,81,12],[18,0,81,18],[20,0,81,20],[23,0,81,23],[27,0,81,27],[28,0,81,28],[40,0,81,40],[41,0,81,41],[56,0,81,56],[57,0,81,57],[66,0,81,66],[67,0,81,67],[75,0,81,75],[76,0,81,76],[82,0,81,82],[83,0,81,83],[84,0,81,84],[85,0,81,85]],[[12,0,82,12],[18,0,82,18],[26,0,82,26],[29,0,82,29],[35,0,82,35],[36,0,82,36],[40,0,82,40],[41,0,82,41],[65,0,82,65],[66,0,82,66],[67,0,82,67],[71,0,82,71],[72,0,82,72],[73,0,82,73],[76,0,82,76],[78,0,82,78],[80,0,82,80],[81,0,82,81],[105,0,82,105],[106,0,82,106],[109,0,82,109],[110,0,82,110],[115,0,82,115],[117,0,82,117],[118,0,82,118],[119,0,82,119]],[[12,0,83,12],[19,0,83,19],[27,0,83,27],[28,0,83,28],[29,0,83,29],[30,0,83,30],[38,0,83,38],[39,0,83,39],[50,0,83,50],[52,0,83,52],[53,0,83,53],[54,0,83,54],[55,0,83,55],[59,0,83,59],[60,0,83,60]],[[9,0,84,9]],[[8,0,85,8],[15,0,85,15],[19,0,85,19],[20,0,85,20]],[[4,0,86,4],[5,0,86,5]],[[4,0,88,11],[41,0,88,48],[42,0,88,49],[57,0,88,72]],[[8,0,89,8],[12,0,89,12],[27,0,89,27],[28,0,89,28],[38,0,89,38],[39,0,89,39],[51,0,89,51],[52,0,89,52],[54,0,89,54]],[[12,0,90,12],[19,0,90,19],[23,0,90,23],[24,0,90,24],[36,0,90,36],[37,0,90,37],[52,0,90,52],[53,0,90,53],[62,0,90,62],[63,0,90,63],[75,0,90,75],[76,0,90,76],[82,0,90,82],[83,0,90,83],[84,0,90,84],[85,0,90,85],[96,0,90,96],[98,0,90,98],[99,0,90,99]],[[9,0,91,9]],[[13,0,91,15],[17,0,91,19],[32,0,91,34],[33,0,91,35],[43,0,91,45],[44,0,91,46],[52,0,91,54],[53,0,91,55],[55,0,91,57]],[[12,0,92,12],[18,0,92,18],[20,0,92,20],[23,0,92,23],[27,0,92,27],[28,0,92,28],[40,0,92,40],[41,0,92,41],[56,0,92,56],[57,0,92,57],[66,0,92,66],[67,0,92,67],[75,0,92,75],[76,0,92,76],[82,0,92,82],[83,0,92,83],[84,0,92,84],[85,0,92,85]],[[12,0,93,12],[18,0,93,18],[26,0,93,26],[29,0,93,29],[35,0,93,35],[36,0,93,36],[40,0,93,40],[41,0,93,41],[65,0,93,65],[66,0,93,66],[67,0,93,67],[71,0,93,71],[72,0,93,72],[73,0,93,73],[76,0,93,76],[78,0,93,78],[80,0,93,80],[81,0,93,81],[105,0,93,105],[106,0,93,106],[109,0,93,109],[110,0,93,110],[115,0,93,115],[117,0,93,117],[118,0,93,118],[119,0,93,119]],[[12,0,94,12],[19,0,94,19],[27,0,94,27],[28,0,94,28],[29,0,94,29],[30,0,94,30],[38,0,94,38],[39,0,94,39],[50,0,94,50],[52,0,94,52],[53,0,94,53],[54,0,94,54],[55,0,94,55],[59,0,94,59],[60,0,94,60]],[[9,0,95,9]],[[8,0,96,8],[15,0,96,15],[19,0,96,19],[20,0,96,20]],[[4,0,97,4],[5,0,97,5]],[[4,0,99,4]],[],[],[[7,0,102,7]],[[4,0,103,11],[29,0,103,36],[30,0,103,37],[45,0,103,60]],[[8,0,104,8],[14,0,104,14],[16,0,104,16],[19,0,104,19],[23,0,104,23],[24,0,104,24],[36,0,104,36],[37,0,104,37],[52,0,104,52],[53,0,104,53],[54,0,104,54]],[[8,0,105,8],[12,0,105,12],[20,0,105,20],[21,0,105,21]],[[8,0,106,8],[12,0,106,12],[14,0,106,14],[15,0,106,15],[25,0,106,25],[26,0,106,26],[32,0,106,32],[33,0,106,33],[35,0,106,35]],[[12,0,107,12],[20,0,107,20],[23,0,107,23],[25,0,107,25],[26,0,107,26],[35,0,107,35],[36,0,107,36],[37,0,107,37],[38,0,107,38],[39,0,107,39],[50,0,107,50],[52,0,107,52],[53,0,107,53]],[[9,0,108,9]],[[13,0,108,15]],[[12,0,109,12],[20,0,109,20],[23,0,109,23],[29,0,109,29],[30,0,109,30],[34,0,109,34],[35,0,109,35],[59,0,109,59],[60,0,109,60],[61,0,109,61],[65,0,109,65],[66,0,109,66],[67,0,109,67],[70,0,109,70],[72,0,109,72],[74,0,109,74],[75,0,109,75],[99,0,109,99],[100,0,109,100],[103,0,109,103],[104,0,109,104],[109,0,109,109],[111,0,109,111],[112,0,109,112],[113,0,109,113]],[[9,0,110,9]],[[8,0,111,8],[12,0,111,12],[20,0,111,20],[22,0,111,22]],[[12,0,112,12],[16,0,112,16],[25,0,112,25],[26,0,112,26],[33,0,112,33],[34,0,112,34],[42,0,112,42],[43,0,112,43],[47,0,112,47],[48,0,112,48],[50,0,112,50]],[[16,0,113,16],[23,0,113,23],[27,0,113,27],[28,0,113,28]],[[13,0,114,13]],[[9,0,115,9]],[[8,0,116,8],[15,0,116,15],[20,0,116,20],[21,0,116,21]],[[4,0,117,4],[5,0,117,5]],[[4,0,119,4]],[],[],[[7,0,122,7]],[[4,0,123,11],[41,0,123,48],[42,0,123,49],[57,0,123,72]],[[8,0,124,8],[14,0,124,14],[16,0,124,16],[19,0,124,19],[23,0,124,23],[24,0,124,24],[36,0,124,36],[37,0,124,37],[52,0,124,52],[53,0,124,53],[54,0,124,54]],[[8,0,125,8],[12,0,125,12],[20,0,125,20],[21,0,125,21]],[[8,0,126,8],[12,0,126,12],[14,0,126,14],[15,0,126,15],[25,0,126,25],[26,0,126,26],[32,0,126,32],[33,0,126,33],[35,0,126,35]],[[12,0,127,12],[20,0,127,20],[23,0,127,23],[25,0,127,25],[26,0,127,26],[35,0,127,35],[36,0,127,36],[37,0,127,37],[38,0,127,38],[39,0,127,39],[50,0,127,50],[52,0,127,52],[53,0,127,53]],[[9,0,128,9]],[[13,0,128,15]],[[12,0,129,12],[20,0,129,20],[23,0,129,23],[29,0,129,29],[30,0,129,30],[34,0,129,34],[35,0,129,35],[59,0,129,59],[60,0,129,60],[61,0,129,61],[65,0,129,65],[66,0,129,66],[67,0,129,67],[70,0,129,70],[72,0,129,72],[74,0,129,74],[75,0,129,75],[99,0,129,99],[100,0,129,100],[103,0,129,103],[104,0,129,104],[109,0,129,109],[111,0,129,111],[112,0,129,112],[113,0,129,113]],[[9,0,130,9]],[[8,0,131,8],[12,0,131,12],[20,0,131,20],[22,0,131,22]],[[12,0,132,12],[16,0,132,16],[25,0,132,25],[26,0,132,26],[33,0,132,33],[34,0,132,34],[42,0,132,42],[43,0,132,43],[47,0,132,47],[48,0,132,48],[50,0,132,50]],[[16,0,133,16],[23,0,133,23],[31,0,133,31],[32,0,133,32],[43,0,133,43],[45,0,133,45],[46,0,133,46]],[[13,0,134,13]],[[17,0,134,19]],[[16,0,135,16],[23,0,135,23],[27,0,135,27],[28,0,135,28]],[[13,0,136,13]],[[9,0,137,9]],[[8,0,138,8],[15,0,138,15],[19,0,138,19],[20,0,138,20]],[[4,0,139,4],[5,0,139,5]],[[4,0,141,4]],[],[],[],[[7,0,145,7]],[[4,0,146,12],[16,0,146,24],[17,0,146,25],[32,0,146,48]],[[8,0,147,8],[12,0,147,12],[27,0,147,27],[29,0,147,29]],[[12,0,148,12],[18,0,148,18],[20,0,148,20],[23,0,148,23],[37,0,148,37],[38,0,148,38]],[[12,0,149,12],[16,0,149,16],[31,0,149,31],[32,0,149,32],[37,0,149,37],[38,0,149,38],[40,0,149,40],[41,0,149,41],[43,0,149,43]],[[16,0,150,16],[23,0,150,23],[38,0,150,38],[39,0,150,39],[46,0,150,46],[47,0,150,47],[49,0,150,49],[51,0,150,51],[55,0,150,55],[56,0,150,56],[57,0,150,57]],[[13,0,151,13]],[[9,0,152,9]],[[8,0,153,8],[15,0,153,15],[30,0,153,30],[31,0,153,31]],[[4,0,154,4],[5,0,154,5]],[[4,0,156,4]],[],[],[],[],[[7,0,161,7]],[[4,0,162,12],[17,0,162,25],[18,0,162,26],[20,0,162,36]],[[8,0,163,8],[12,0,163,12],[14,0,163,14],[19,0,163,19],[20,0,163,20],[22,0,163,22]],[[12,0,164,12],[19,0,164,19],[21,0,164,21],[22,0,164,22]],[[9,0,165,9]],[[13,0,165,15]],[[12,0,166,12],[19,0,166,19],[22,0,166,22],[25,0,166,25],[27,0,166,27],[28,0,166,28],[36,0,166,36],[37,0,166,37],[39,0,166,39],[40,0,166,40],[41,0,166,41]],[[9,0,167,9]],[[4,0,168,4],[5,0,168,5]],[[1,0,169,1]]],"sourcesContent":["/**\r\n * Created by roobm on 16.05.2017.\r\n * Mapping from normalized tag names to placeholder names.\r\n */\r\n\r\n/*\r\ncopied from https://github.com/angular/angular/blob/master/packages/compiler/src/i18n/serializers/placeholder.ts\r\n */\r\nconst TAG_TO_PLACEHOLDER_NAMES: {[k: string]: string} = {\r\n    'A': 'LINK',\r\n    'B': 'BOLD_TEXT',\r\n    'BR': 'LINE_BREAK',\r\n    'EM': 'EMPHASISED_TEXT',\r\n    'H1': 'HEADING_LEVEL1',\r\n    'H2': 'HEADING_LEVEL2',\r\n    'H3': 'HEADING_LEVEL3',\r\n    'H4': 'HEADING_LEVEL4',\r\n    'H5': 'HEADING_LEVEL5',\r\n    'H6': 'HEADING_LEVEL6',\r\n    'HR': 'HORIZONTAL_RULE',\r\n    'I': 'ITALIC_TEXT',\r\n    'LI': 'LIST_ITEM',\r\n    'LINK': 'MEDIA_LINK',\r\n    'OL': 'ORDERED_LIST',\r\n    'P': 'PARAGRAPH',\r\n    'Q': 'QUOTATION',\r\n    'S': 'STRIKETHROUGH_TEXT',\r\n    'SMALL': 'SMALL_TEXT',\r\n    'SUB': 'SUBSTRIPT',\r\n    'SUP': 'SUPERSCRIPT',\r\n    'TBODY': 'TABLE_BODY',\r\n    'TD': 'TABLE_CELL',\r\n    'TFOOT': 'TABLE_FOOTER',\r\n    'TH': 'TABLE_HEADER_CELL',\r\n    'THEAD': 'TABLE_HEADER',\r\n    'TR': 'TABLE_ROW',\r\n    'TT': 'MONOSPACED_TEXT',\r\n    'U': 'UNDERLINED_TEXT',\r\n    'UL': 'UNORDERED_LIST',\r\n};\r\n\r\n/**\r\n * HTML Tags (in uppercase) that are empty, they have no content, but do not need a close tag, e.g. <br>, <img>, <hr>.\r\n */\r\nconst VOID_TAGS = ['BR', 'HR', 'IMG', 'AREA', 'LINK', 'WBR'];\r\n\r\nexport class TagMapping {\r\n\r\n    public getStartTagPlaceholderName(tag: string, id: number): string {\r\n        const upperTag = tag.toUpperCase();\r\n        const baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\r\n        return `START_${baseName}` + this.counterString(id);\r\n    }\r\n\r\n    public getCloseTagPlaceholderName(tag: string): string {\r\n        const upperTag = tag.toUpperCase();\r\n        const baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\r\n        return `CLOSE_${baseName}`;\r\n    }\r\n\r\n    public getEmptyTagPlaceholderName(tag: string, id: number): string {\r\n        const upperTag = tag.toUpperCase();\r\n        const baseName =  TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\r\n        return baseName + this.counterString(id);\r\n    }\r\n\r\n    public getCtypeForTag(tag: string): string {\r\n        switch (tag.toLowerCase()) {\r\n            case 'br':\r\n                return 'lb';\r\n            case 'img':\r\n                return 'image';\r\n            default:\r\n                return `x-${tag}`;\r\n        }\r\n    }\r\n\r\n    public getTagnameFromStartTagPlaceholderName(placeholderName: string): string {\r\n        if (placeholderName.startsWith('START_TAG_')) {\r\n            return this.stripCounter(placeholderName.substring('START_TAG_'.length)).toLowerCase();\r\n        } else if (placeholderName.startsWith('START_')) {\r\n            const ph = this.stripCounter(placeholderName.substring('START_'.length));\r\n            const matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find((key) => TAG_TO_PLACEHOLDER_NAMES[key] === ph);\r\n            return matchKey ? matchKey.toLowerCase() : null;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getTagnameFromCloseTagPlaceholderName(placeholderName: string): string {\r\n        if (placeholderName.startsWith('CLOSE_TAG_')) {\r\n            return this.stripCounter(placeholderName.substring('CLOSE_TAG_'.length)).toLowerCase();\r\n        } else if (placeholderName.startsWith('CLOSE_')) {\r\n            const ph = this.stripCounter(placeholderName.substring('CLOSE_'.length));\r\n            const matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find((key) => TAG_TO_PLACEHOLDER_NAMES[key] === ph);\r\n            return matchKey ? matchKey.toLowerCase() : null;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Test, wether placeholder name stands for empty html tag.\r\n     * @param placeholderName can be TAG_<name> or just <name>\r\n     */\r\n    public isEmptyTagPlaceholderName(placeholderName: string): boolean {\r\n        const ph = this.stripCounter(placeholderName);\r\n        let matchKey;\r\n        if (ph.startsWith('TAG_')) {\r\n            matchKey = ph.substring(4).toUpperCase();\r\n        } else {\r\n            matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find((key) => TAG_TO_PLACEHOLDER_NAMES[key] === ph);\r\n        }\r\n        if (matchKey) {\r\n            if (VOID_TAGS.indexOf(matchKey) >= 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * tagname of empty tag placeholder.\r\n     * @param placeholderName can be TAG_<name> or just <name>\r\n     */\r\n    public getTagnameFromEmptyTagPlaceholderName(placeholderName: string): string {\r\n        const ph = this.stripCounter(placeholderName);\r\n        let matchKey;\r\n        if (ph.startsWith('TAG_')) {\r\n            matchKey = ph.substring(4).toUpperCase();\r\n        } else {\r\n            matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find((key) => TAG_TO_PLACEHOLDER_NAMES[key] === ph);\r\n        }\r\n        if (matchKey) {\r\n            if (VOID_TAGS.indexOf(matchKey) >= 0) {\r\n                return matchKey.toLowerCase();\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * If placeholder ends with _[0-9]+, strip that number.\r\n     * @param placeholderName placeholderName\r\n     * @return placeholderName without counter at end.\r\n     */\r\n    private stripCounter(placeholderName: string): string {\r\n        if (placeholderName) {\r\n            const re = /(.*)_[0-9]+$/;\r\n            if (placeholderName.match(re)) {\r\n                return placeholderName.replace(re, '$1');\r\n            }\r\n        }\r\n        return placeholderName;\r\n    }\r\n\r\n    /**\r\n     * String suffix for counter.\r\n     * If counter is 0, it is empty, otherwise _<id>.\r\n     * @param id id\r\n     * @return suffix for counter.\r\n     */\r\n    private counterString(id: number) {\r\n        if (id === 0) {\r\n            return '';\r\n        } else {\r\n            return '_' + id.toString(10);\r\n        }\r\n    }\r\n}\r\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":29059,"body":[{"type":"ImportDeclaration","start":0,"end":66,"specifiers":[{"type":"ImportSpecifier","start":9,"end":30,"imported":{"type":"Identifier","start":9,"end":30,"name":"AbstractMessageParser"},"local":{"type":"Identifier","start":9,"end":30,"name":"AbstractMessageParser"}}],"source":{"type":"Literal","start":38,"end":65,"value":"./abstract-message-parser","raw":"'./abstract-message-parser'"}},{"type":"ImportDeclaration","start":68,"end":111,"specifiers":[{"type":"ImportSpecifier","start":77,"end":87,"imported":{"type":"Identifier","start":77,"end":87,"name":"TagMapping"},"local":{"type":"Identifier","start":77,"end":87,"name":"TagMapping"}}],"source":{"type":"Literal","start":95,"end":110,"value":"./tag-mapping","raw":"'./tag-mapping'"}},{"type":"ImportDeclaration","start":113,"end":175,"specifiers":[{"type":"ImportSpecifier","start":122,"end":143,"imported":{"type":"Identifier","start":122,"end":143,"name":"ParsedMessagePartType"},"local":{"type":"Identifier","start":122,"end":143,"name":"ParsedMessagePartType"}}],"source":{"type":"Literal","start":151,"end":174,"value":"./parsed-message-part","raw":"'./parsed-message-part'"}},{"type":"ExportNamedDeclaration","start":258,"end":8359,"declaration":{"type":"ClassDeclaration","start":265,"end":8359,"id":{"type":"Identifier","start":271,"end":289,"name":"XliffMessageParser"},"superClass":{"type":"Identifier","start":298,"end":319,"name":"AbstractMessageParser"},"body":{"type":"ClassBody","start":320,"end":8359,"body":[{"type":"MethodDefinition","start":615,"end":2447,"static":false,"computed":false,"key":{"type":"Identifier","start":615,"end":634,"name":"processStartElement"},"kind":"method","value":{"type":"FunctionExpression","start":634,"end":2447,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":635,"end":646,"name":"elementNode"},{"type":"Identifier","start":648,"end":655,"name":"message"}],"body":{"type":"BlockStatement","start":657,"end":2447,"body":[{"type":"VariableDeclaration","start":668,"end":704,"declarations":[{"type":"VariableDeclarator","start":674,"end":703,"id":{"type":"Identifier","start":674,"end":681,"name":"tagName"},"init":{"type":"MemberExpression","start":684,"end":703,"object":{"type":"Identifier","start":684,"end":695,"name":"elementNode"},"property":{"type":"Identifier","start":696,"end":703,"name":"tagName"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":714,"end":750,"declarations":[{"type":"VariableDeclarator","start":720,"end":749,"id":{"type":"Identifier","start":720,"end":730,"name":"tagMapping"},"init":{"type":"NewExpression","start":733,"end":749,"callee":{"type":"Identifier","start":737,"end":747,"name":"TagMapping"},"arguments":[]}}],"kind":"const"},{"type":"IfStatement","start":760,"end":2418,"test":{"type":"BinaryExpression","start":764,"end":779,"left":{"type":"Identifier","start":764,"end":771,"name":"tagName"},"operator":"===","right":{"type":"Literal","start":776,"end":779,"value":"x","raw":"'x'"}},"consequent":{"type":"BlockStatement","start":781,"end":2418,"body":[{"type":"VariableDeclaration","start":885,"end":927,"declarations":[{"type":"VariableDeclarator","start":891,"end":926,"id":{"type":"Identifier","start":891,"end":893,"name":"id"},"init":{"type":"CallExpression","start":896,"end":926,"callee":{"type":"MemberExpression","start":896,"end":920,"object":{"type":"Identifier","start":896,"end":907,"name":"elementNode"},"property":{"type":"Identifier","start":908,"end":920,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":921,"end":925,"value":"id","raw":"'id'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":941,"end":1012,"test":{"type":"UnaryExpression","start":945,"end":948,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":946,"end":948,"name":"id"}},"consequent":{"type":"BlockStatement","start":950,"end":1012,"body":[{"type":"ReturnStatement","start":969,"end":976,"argument":null}]},"alternate":null},{"type":"IfStatement","start":1026,"end":2407,"test":{"type":"CallExpression","start":1030,"end":1060,"callee":{"type":"MemberExpression","start":1030,"end":1043,"object":{"type":"Identifier","start":1030,"end":1032,"name":"id"},"property":{"type":"Identifier","start":1033,"end":1043,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1044,"end":1059,"value":"INTERPOLATION","raw":"'INTERPOLATION'"}],"optional":false},"consequent":{"type":"BlockStatement","start":1062,"end":1201,"body":[{"type":"VariableDeclaration","start":1081,"end":1132,"declarations":[{"type":"VariableDeclarator","start":1087,"end":1131,"id":{"type":"Identifier","start":1087,"end":1092,"name":"index"},"init":{"type":"CallExpression","start":1095,"end":1131,"callee":{"type":"MemberExpression","start":1095,"end":1127,"object":{"type":"ThisExpression","start":1095,"end":1099},"property":{"type":"Identifier","start":1100,"end":1127,"name":"parsePlaceholderIndexFromId"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1128,"end":1130,"name":"id"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":1150,"end":1186,"expression":{"type":"CallExpression","start":1150,"end":1185,"callee":{"type":"MemberExpression","start":1150,"end":1172,"object":{"type":"Identifier","start":1150,"end":1157,"name":"message"},"property":{"type":"Identifier","start":1158,"end":1172,"name":"addPlaceholder"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1173,"end":1178,"name":"index"},{"type":"Literal","start":1180,"end":1184,"value":null,"raw":"null"}],"optional":false}}]},"alternate":{"type":"IfStatement","start":1220,"end":2407,"test":{"type":"CallExpression","start":1224,"end":1244,"callee":{"type":"MemberExpression","start":1224,"end":1237,"object":{"type":"Identifier","start":1224,"end":1226,"name":"id"},"property":{"type":"Identifier","start":1227,"end":1237,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1238,"end":1243,"value":"ICU","raw":"'ICU'"}],"optional":false},"consequent":{"type":"BlockStatement","start":1246,"end":1389,"body":[{"type":"VariableDeclaration","start":1265,"end":1318,"declarations":[{"type":"VariableDeclarator","start":1271,"end":1317,"id":{"type":"Identifier","start":1271,"end":1276,"name":"index"},"init":{"type":"CallExpression","start":1279,"end":1317,"callee":{"type":"MemberExpression","start":1279,"end":1313,"object":{"type":"ThisExpression","start":1279,"end":1283},"property":{"type":"Identifier","start":1284,"end":1313,"name":"parseICUMessageRefIndexFromId"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1314,"end":1316,"name":"id"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":1336,"end":1374,"expression":{"type":"CallExpression","start":1336,"end":1373,"callee":{"type":"MemberExpression","start":1336,"end":1360,"object":{"type":"Identifier","start":1336,"end":1343,"name":"message"},"property":{"type":"Identifier","start":1344,"end":1360,"name":"addICUMessageRef"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1361,"end":1366,"name":"index"},{"type":"Literal","start":1368,"end":1372,"value":null,"raw":"null"}],"optional":false}}]},"alternate":{"type":"IfStatement","start":1408,"end":2407,"test":{"type":"CallExpression","start":1412,"end":1435,"callee":{"type":"MemberExpression","start":1412,"end":1425,"object":{"type":"Identifier","start":1412,"end":1414,"name":"id"},"property":{"type":"Identifier","start":1415,"end":1425,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1426,"end":1434,"value":"START_","raw":"'START_'"}],"optional":false},"consequent":{"type":"BlockStatement","start":1437,"end":1749,"body":[{"type":"VariableDeclaration","start":1456,"end":1535,"declarations":[{"type":"VariableDeclarator","start":1462,"end":1534,"id":{"type":"Identifier","start":1462,"end":1479,"name":"normalizedTagName"},"init":{"type":"CallExpression","start":1482,"end":1534,"callee":{"type":"MemberExpression","start":1482,"end":1530,"object":{"type":"Identifier","start":1482,"end":1492,"name":"tagMapping"},"property":{"type":"Identifier","start":1493,"end":1530,"name":"getTagnameFromStartTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1531,"end":1533,"name":"id"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1553,"end":1734,"test":{"type":"Identifier","start":1557,"end":1574,"name":"normalizedTagName"},"consequent":{"type":"BlockStatement","start":1576,"end":1734,"body":[{"type":"VariableDeclaration","start":1599,"end":1645,"declarations":[{"type":"VariableDeclarator","start":1605,"end":1644,"id":{"type":"Identifier","start":1605,"end":1612,"name":"idcount"},"init":{"type":"CallExpression","start":1615,"end":1644,"callee":{"type":"MemberExpression","start":1615,"end":1640,"object":{"type":"ThisExpression","start":1615,"end":1619},"property":{"type":"Identifier","start":1620,"end":1640,"name":"parseIdCountFromName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1641,"end":1643,"name":"id"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":1667,"end":1715,"expression":{"type":"CallExpression","start":1667,"end":1714,"callee":{"type":"MemberExpression","start":1667,"end":1686,"object":{"type":"Identifier","start":1667,"end":1674,"name":"message"},"property":{"type":"Identifier","start":1675,"end":1686,"name":"addStartTag"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1687,"end":1704,"name":"normalizedTagName"},{"type":"Identifier","start":1706,"end":1713,"name":"idcount"}],"optional":false}}]},"alternate":null}]},"alternate":{"type":"IfStatement","start":1768,"end":2407,"test":{"type":"CallExpression","start":1772,"end":1795,"callee":{"type":"MemberExpression","start":1772,"end":1785,"object":{"type":"Identifier","start":1772,"end":1774,"name":"id"},"property":{"type":"Identifier","start":1775,"end":1785,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1786,"end":1794,"value":"CLOSE_","raw":"'CLOSE_'"}],"optional":false},"consequent":{"type":"BlockStatement","start":1797,"end":2030,"body":[{"type":"VariableDeclaration","start":1816,"end":1895,"declarations":[{"type":"VariableDeclarator","start":1822,"end":1894,"id":{"type":"Identifier","start":1822,"end":1839,"name":"normalizedTagName"},"init":{"type":"CallExpression","start":1842,"end":1894,"callee":{"type":"MemberExpression","start":1842,"end":1890,"object":{"type":"Identifier","start":1842,"end":1852,"name":"tagMapping"},"property":{"type":"Identifier","start":1853,"end":1890,"name":"getTagnameFromCloseTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1891,"end":1893,"name":"id"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1913,"end":2015,"test":{"type":"Identifier","start":1917,"end":1934,"name":"normalizedTagName"},"consequent":{"type":"BlockStatement","start":1936,"end":2015,"body":[{"type":"ExpressionStatement","start":1959,"end":1996,"expression":{"type":"CallExpression","start":1959,"end":1995,"callee":{"type":"MemberExpression","start":1959,"end":1976,"object":{"type":"Identifier","start":1959,"end":1966,"name":"message"},"property":{"type":"Identifier","start":1967,"end":1976,"name":"addEndTag"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1977,"end":1994,"name":"normalizedTagName"}],"optional":false}}]},"alternate":null}]},"alternate":{"type":"IfStatement","start":2049,"end":2407,"test":{"type":"CallExpression","start":2053,"end":2093,"callee":{"type":"MemberExpression","start":2053,"end":2089,"object":{"type":"Identifier","start":2053,"end":2063,"name":"tagMapping"},"property":{"type":"Identifier","start":2064,"end":2089,"name":"isEmptyTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2090,"end":2092,"name":"id"}],"optional":false},"consequent":{"type":"BlockStatement","start":2095,"end":2407,"body":[{"type":"VariableDeclaration","start":2114,"end":2193,"declarations":[{"type":"VariableDeclarator","start":2120,"end":2192,"id":{"type":"Identifier","start":2120,"end":2137,"name":"normalizedTagName"},"init":{"type":"CallExpression","start":2140,"end":2192,"callee":{"type":"MemberExpression","start":2140,"end":2188,"object":{"type":"Identifier","start":2140,"end":2150,"name":"tagMapping"},"property":{"type":"Identifier","start":2151,"end":2188,"name":"getTagnameFromEmptyTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2189,"end":2191,"name":"id"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":2211,"end":2392,"test":{"type":"Identifier","start":2215,"end":2232,"name":"normalizedTagName"},"consequent":{"type":"BlockStatement","start":2234,"end":2392,"body":[{"type":"VariableDeclaration","start":2257,"end":2303,"declarations":[{"type":"VariableDeclarator","start":2263,"end":2302,"id":{"type":"Identifier","start":2263,"end":2270,"name":"idcount"},"init":{"type":"CallExpression","start":2273,"end":2302,"callee":{"type":"MemberExpression","start":2273,"end":2298,"object":{"type":"ThisExpression","start":2273,"end":2277},"property":{"type":"Identifier","start":2278,"end":2298,"name":"parseIdCountFromName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2299,"end":2301,"name":"id"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":2325,"end":2373,"expression":{"type":"CallExpression","start":2325,"end":2372,"callee":{"type":"MemberExpression","start":2325,"end":2344,"object":{"type":"Identifier","start":2325,"end":2332,"name":"message"},"property":{"type":"Identifier","start":2333,"end":2344,"name":"addEmptyTag"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2345,"end":2362,"name":"normalizedTagName"},{"type":"Identifier","start":2364,"end":2371,"name":"idcount"}],"optional":false}}]},"alternate":null}]},"alternate":null}}}}}]},"alternate":null},{"type":"ReturnStatement","start":2428,"end":2440,"argument":{"type":"Literal","start":2435,"end":2439,"value":true,"raw":"true"}}]}}},{"type":"MethodDefinition","start":2653,"end":2701,"static":false,"computed":false,"key":{"type":"Identifier","start":2653,"end":2670,"name":"processEndElement"},"kind":"method","value":{"type":"FunctionExpression","start":2670,"end":2701,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2671,"end":2682,"name":"elementNode"},{"type":"Identifier","start":2684,"end":2691,"name":"message"}],"body":{"type":"BlockStatement","start":2693,"end":2701,"body":[]}}},{"type":"MethodDefinition","start":2885,"end":3181,"static":false,"computed":false,"key":{"type":"Identifier","start":2885,"end":2912,"name":"parsePlaceholderIndexFromId"},"kind":"method","value":{"type":"FunctionExpression","start":2912,"end":3181,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2913,"end":2915,"name":"id"}],"body":{"type":"BlockStatement","start":2917,"end":3181,"body":[{"type":"VariableDeclaration","start":2928,"end":2949,"declarations":[{"type":"VariableDeclarator","start":2932,"end":2948,"id":{"type":"Identifier","start":2932,"end":2943,"name":"indexString"},"init":{"type":"Literal","start":2946,"end":2948,"value":"","raw":"''"}}],"kind":"let"},{"type":"IfStatement","start":2959,"end":3124,"test":{"type":"BinaryExpression","start":2963,"end":2985,"left":{"type":"Identifier","start":2963,"end":2965,"name":"id"},"operator":"===","right":{"type":"Literal","start":2970,"end":2985,"value":"INTERPOLATION","raw":"'INTERPOLATION'"}},"consequent":{"type":"BlockStatement","start":2987,"end":3031,"body":[{"type":"ExpressionStatement","start":3002,"end":3020,"expression":{"type":"AssignmentExpression","start":3002,"end":3019,"operator":"=","left":{"type":"Identifier","start":3002,"end":3013,"name":"indexString"},"right":{"type":"Literal","start":3016,"end":3019,"value":"0","raw":"'0'"}}}]},"alternate":{"type":"BlockStatement","start":3046,"end":3124,"body":[{"type":"ExpressionStatement","start":3061,"end":3113,"expression":{"type":"AssignmentExpression","start":3061,"end":3112,"operator":"=","left":{"type":"Identifier","start":3061,"end":3072,"name":"indexString"},"right":{"type":"CallExpression","start":3075,"end":3112,"callee":{"type":"MemberExpression","start":3075,"end":3087,"object":{"type":"Identifier","start":3075,"end":3077,"name":"id"},"property":{"type":"Identifier","start":3078,"end":3087,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3088,"end":3111,"object":{"type":"Literal","start":3088,"end":3104,"value":"INTERPOLATION_","raw":"'INTERPOLATION_'"},"property":{"type":"Identifier","start":3105,"end":3111,"name":"length"},"computed":false,"optional":false}],"optional":false}}}]}},{"type":"ReturnStatement","start":3134,"end":3174,"argument":{"type":"CallExpression","start":3141,"end":3173,"callee":{"type":"MemberExpression","start":3141,"end":3156,"object":{"type":"Identifier","start":3141,"end":3147,"name":"Number"},"property":{"type":"Identifier","start":3148,"end":3156,"name":"parseInt"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3157,"end":3168,"name":"indexString"},{"type":"Literal","start":3170,"end":3172,"value":10,"raw":"10"}],"optional":false}}]}}},{"type":"MethodDefinition","start":3372,"end":3650,"static":false,"computed":false,"key":{"type":"Identifier","start":3372,"end":3401,"name":"parseICUMessageRefIndexFromId"},"kind":"method","value":{"type":"FunctionExpression","start":3401,"end":3650,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3402,"end":3404,"name":"id"}],"body":{"type":"BlockStatement","start":3406,"end":3650,"body":[{"type":"VariableDeclaration","start":3417,"end":3438,"declarations":[{"type":"VariableDeclarator","start":3421,"end":3437,"id":{"type":"Identifier","start":3421,"end":3432,"name":"indexString"},"init":{"type":"Literal","start":3435,"end":3437,"value":"","raw":"''"}}],"kind":"let"},{"type":"IfStatement","start":3448,"end":3593,"test":{"type":"BinaryExpression","start":3452,"end":3464,"left":{"type":"Identifier","start":3452,"end":3454,"name":"id"},"operator":"===","right":{"type":"Literal","start":3459,"end":3464,"value":"ICU","raw":"'ICU'"}},"consequent":{"type":"BlockStatement","start":3466,"end":3510,"body":[{"type":"ExpressionStatement","start":3481,"end":3499,"expression":{"type":"AssignmentExpression","start":3481,"end":3498,"operator":"=","left":{"type":"Identifier","start":3481,"end":3492,"name":"indexString"},"right":{"type":"Literal","start":3495,"end":3498,"value":"0","raw":"'0'"}}}]},"alternate":{"type":"BlockStatement","start":3525,"end":3593,"body":[{"type":"ExpressionStatement","start":3540,"end":3582,"expression":{"type":"AssignmentExpression","start":3540,"end":3581,"operator":"=","left":{"type":"Identifier","start":3540,"end":3551,"name":"indexString"},"right":{"type":"CallExpression","start":3554,"end":3581,"callee":{"type":"MemberExpression","start":3554,"end":3566,"object":{"type":"Identifier","start":3554,"end":3556,"name":"id"},"property":{"type":"Identifier","start":3557,"end":3566,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3567,"end":3580,"object":{"type":"Literal","start":3567,"end":3573,"value":"ICU_","raw":"'ICU_'"},"property":{"type":"Identifier","start":3574,"end":3580,"name":"length"},"computed":false,"optional":false}],"optional":false}}}]}},{"type":"ReturnStatement","start":3603,"end":3643,"argument":{"type":"CallExpression","start":3610,"end":3642,"callee":{"type":"MemberExpression","start":3610,"end":3625,"object":{"type":"Identifier","start":3610,"end":3616,"name":"Number"},"property":{"type":"Identifier","start":3617,"end":3625,"name":"parseInt"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3626,"end":3637,"name":"indexString"},{"type":"Literal","start":3639,"end":3641,"value":10,"raw":"10"}],"optional":false}}]}}},{"type":"MethodDefinition","start":3656,"end":4963,"static":false,"computed":false,"key":{"type":"Identifier","start":3656,"end":3682,"name":"addXmlRepresentationToRoot"},"kind":"method","value":{"type":"FunctionExpression","start":3682,"end":4963,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3683,"end":3690,"name":"message"},{"type":"Identifier","start":3692,"end":3700,"name":"rootElem"}],"body":{"type":"BlockStatement","start":3702,"end":4963,"body":[{"type":"ExpressionStatement","start":3713,"end":4956,"expression":{"type":"CallExpression","start":3713,"end":4955,"callee":{"type":"MemberExpression","start":3713,"end":3736,"object":{"type":"CallExpression","start":3713,"end":3728,"callee":{"type":"MemberExpression","start":3713,"end":3726,"object":{"type":"Identifier","start":3713,"end":3720,"name":"message"},"property":{"type":"Identifier","start":3721,"end":3726,"name":"parts"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":3729,"end":3736,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":3737,"end":4954,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3738,"end":3742,"name":"part"}],"body":{"type":"BlockStatement","start":3747,"end":4954,"body":[{"type":"VariableDeclaration","start":3762,"end":3772,"declarations":[{"type":"VariableDeclarator","start":3766,"end":3771,"id":{"type":"Identifier","start":3766,"end":3771,"name":"child"},"init":null}],"kind":"let"},{"type":"SwitchStatement","start":3786,"end":4856,"discriminant":{"type":"MemberExpression","start":3794,"end":3803,"object":{"type":"Identifier","start":3794,"end":3798,"name":"part"},"property":{"type":"Identifier","start":3799,"end":3803,"name":"type"},"computed":false,"optional":false},"cases":[{"type":"SwitchCase","start":3824,"end":3969,"consequent":[{"type":"ExpressionStatement","start":3878,"end":3941,"expression":{"type":"AssignmentExpression","start":3878,"end":3940,"operator":"=","left":{"type":"Identifier","start":3878,"end":3883,"name":"child"},"right":{"type":"CallExpression","start":3886,"end":3940,"callee":{"type":"MemberExpression","start":3886,"end":3924,"object":{"type":"ThisExpression","start":3886,"end":3890},"property":{"type":"Identifier","start":3891,"end":3924,"name":"createXmlRepresentationOfTextPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3925,"end":3929,"name":"part"},{"type":"Identifier","start":3931,"end":3939,"name":"rootElem"}],"optional":false}}},{"type":"BreakStatement","start":3963,"end":3969,"label":null}],"test":{"type":"MemberExpression","start":3829,"end":3855,"object":{"type":"Identifier","start":3829,"end":3850,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":3851,"end":3855,"name":"TEXT"},"computed":false,"optional":false}},{"type":"SwitchCase","start":3987,"end":4141,"consequent":[{"type":"ExpressionStatement","start":4046,"end":4113,"expression":{"type":"AssignmentExpression","start":4046,"end":4112,"operator":"=","left":{"type":"Identifier","start":4046,"end":4051,"name":"child"},"right":{"type":"CallExpression","start":4054,"end":4112,"callee":{"type":"MemberExpression","start":4054,"end":4096,"object":{"type":"ThisExpression","start":4054,"end":4058},"property":{"type":"Identifier","start":4059,"end":4096,"name":"createXmlRepresentationOfStartTagPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4097,"end":4101,"name":"part"},{"type":"Identifier","start":4103,"end":4111,"name":"rootElem"}],"optional":false}}},{"type":"BreakStatement","start":4135,"end":4141,"label":null}],"test":{"type":"MemberExpression","start":3992,"end":4023,"object":{"type":"Identifier","start":3992,"end":4013,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":4014,"end":4023,"name":"START_TAG"},"computed":false,"optional":false}},{"type":"SwitchCase","start":4159,"end":4309,"consequent":[{"type":"ExpressionStatement","start":4216,"end":4281,"expression":{"type":"AssignmentExpression","start":4216,"end":4280,"operator":"=","left":{"type":"Identifier","start":4216,"end":4221,"name":"child"},"right":{"type":"CallExpression","start":4224,"end":4280,"callee":{"type":"MemberExpression","start":4224,"end":4264,"object":{"type":"ThisExpression","start":4224,"end":4228},"property":{"type":"Identifier","start":4229,"end":4264,"name":"createXmlRepresentationOfEndTagPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4265,"end":4269,"name":"part"},{"type":"Identifier","start":4271,"end":4279,"name":"rootElem"}],"optional":false}}},{"type":"BreakStatement","start":4303,"end":4309,"label":null}],"test":{"type":"MemberExpression","start":4164,"end":4193,"object":{"type":"Identifier","start":4164,"end":4185,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":4186,"end":4193,"name":"END_TAG"},"computed":false,"optional":false}},{"type":"SwitchCase","start":4327,"end":4481,"consequent":[{"type":"ExpressionStatement","start":4386,"end":4453,"expression":{"type":"AssignmentExpression","start":4386,"end":4452,"operator":"=","left":{"type":"Identifier","start":4386,"end":4391,"name":"child"},"right":{"type":"CallExpression","start":4394,"end":4452,"callee":{"type":"MemberExpression","start":4394,"end":4436,"object":{"type":"ThisExpression","start":4394,"end":4398},"property":{"type":"Identifier","start":4399,"end":4436,"name":"createXmlRepresentationOfEmptyTagPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4437,"end":4441,"name":"part"},{"type":"Identifier","start":4443,"end":4451,"name":"rootElem"}],"optional":false}}},{"type":"BreakStatement","start":4475,"end":4481,"label":null}],"test":{"type":"MemberExpression","start":4332,"end":4363,"object":{"type":"Identifier","start":4332,"end":4353,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":4354,"end":4363,"name":"EMPTY_TAG"},"computed":false,"optional":false}},{"type":"SwitchCase","start":4499,"end":4658,"consequent":[{"type":"ExpressionStatement","start":4560,"end":4630,"expression":{"type":"AssignmentExpression","start":4560,"end":4629,"operator":"=","left":{"type":"Identifier","start":4560,"end":4565,"name":"child"},"right":{"type":"CallExpression","start":4568,"end":4629,"callee":{"type":"MemberExpression","start":4568,"end":4613,"object":{"type":"ThisExpression","start":4568,"end":4572},"property":{"type":"Identifier","start":4573,"end":4613,"name":"createXmlRepresentationOfPlaceholderPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4614,"end":4618,"name":"part"},{"type":"Identifier","start":4620,"end":4628,"name":"rootElem"}],"optional":false}}},{"type":"BreakStatement","start":4652,"end":4658,"label":null}],"test":{"type":"MemberExpression","start":4504,"end":4537,"object":{"type":"Identifier","start":4504,"end":4525,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":4526,"end":4537,"name":"PLACEHOLDER"},"computed":false,"optional":false}},{"type":"SwitchCase","start":4676,"end":4841,"consequent":[{"type":"ExpressionStatement","start":4741,"end":4813,"expression":{"type":"AssignmentExpression","start":4741,"end":4812,"operator":"=","left":{"type":"Identifier","start":4741,"end":4746,"name":"child"},"right":{"type":"CallExpression","start":4749,"end":4812,"callee":{"type":"MemberExpression","start":4749,"end":4796,"object":{"type":"ThisExpression","start":4749,"end":4753},"property":{"type":"Identifier","start":4754,"end":4796,"name":"createXmlRepresentationOfICUMessageRefPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4797,"end":4801,"name":"part"},{"type":"Identifier","start":4803,"end":4811,"name":"rootElem"}],"optional":false}}},{"type":"BreakStatement","start":4835,"end":4841,"label":null}],"test":{"type":"MemberExpression","start":4681,"end":4718,"object":{"type":"Identifier","start":4681,"end":4702,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":4703,"end":4718,"name":"ICU_MESSAGE_REF"},"computed":false,"optional":false}}]},{"type":"IfStatement","start":4870,"end":4943,"test":{"type":"Identifier","start":4874,"end":4879,"name":"child"},"consequent":{"type":"BlockStatement","start":4881,"end":4943,"body":[{"type":"ExpressionStatement","start":4900,"end":4928,"expression":{"type":"CallExpression","start":4900,"end":4927,"callee":{"type":"MemberExpression","start":4900,"end":4920,"object":{"type":"Identifier","start":4900,"end":4908,"name":"rootElem"},"property":{"type":"Identifier","start":4909,"end":4920,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4921,"end":4926,"name":"child"}],"optional":false}}]},"alternate":null}]}}],"optional":false}}]}}},{"type":"MethodDefinition","start":5163,"end":5744,"static":false,"computed":false,"key":{"type":"Identifier","start":5163,"end":5200,"name":"createXmlRepresentationOfStartTagPart"},"kind":"method","value":{"type":"FunctionExpression","start":5200,"end":5744,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5201,"end":5205,"name":"part"},{"type":"Identifier","start":5207,"end":5215,"name":"rootElem"}],"body":{"type":"BlockStatement","start":5217,"end":5744,"body":[{"type":"VariableDeclaration","start":5228,"end":5284,"declarations":[{"type":"VariableDeclarator","start":5234,"end":5283,"id":{"type":"Identifier","start":5234,"end":5239,"name":"xElem"},"init":{"type":"CallExpression","start":5242,"end":5283,"callee":{"type":"MemberExpression","start":5242,"end":5278,"object":{"type":"MemberExpression","start":5242,"end":5264,"object":{"type":"Identifier","start":5242,"end":5250,"name":"rootElem"},"property":{"type":"Identifier","start":5251,"end":5264,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5265,"end":5278,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5279,"end":5282,"value":"x","raw":"'x'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":5294,"end":5330,"declarations":[{"type":"VariableDeclarator","start":5300,"end":5329,"id":{"type":"Identifier","start":5300,"end":5310,"name":"tagMapping"},"init":{"type":"NewExpression","start":5313,"end":5329,"callee":{"type":"Identifier","start":5317,"end":5327,"name":"TagMapping"},"arguments":[]}}],"kind":"const"},{"type":"VariableDeclaration","start":5340,"end":5429,"declarations":[{"type":"VariableDeclarator","start":5346,"end":5428,"id":{"type":"Identifier","start":5346,"end":5354,"name":"idAttrib"},"init":{"type":"CallExpression","start":5357,"end":5428,"callee":{"type":"MemberExpression","start":5357,"end":5394,"object":{"type":"Identifier","start":5357,"end":5367,"name":"tagMapping"},"property":{"type":"Identifier","start":5368,"end":5394,"name":"getStartTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":5395,"end":5409,"callee":{"type":"MemberExpression","start":5395,"end":5407,"object":{"type":"Identifier","start":5395,"end":5399,"name":"part"},"property":{"type":"Identifier","start":5400,"end":5407,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"CallExpression","start":5411,"end":5427,"callee":{"type":"MemberExpression","start":5411,"end":5425,"object":{"type":"Identifier","start":5411,"end":5415,"name":"part"},"property":{"type":"Identifier","start":5416,"end":5425,"name":"idCounter"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":5439,"end":5501,"declarations":[{"type":"VariableDeclarator","start":5445,"end":5500,"id":{"type":"Identifier","start":5445,"end":5456,"name":"ctypeAttrib"},"init":{"type":"CallExpression","start":5459,"end":5500,"callee":{"type":"MemberExpression","start":5459,"end":5484,"object":{"type":"Identifier","start":5459,"end":5469,"name":"tagMapping"},"property":{"type":"Identifier","start":5470,"end":5484,"name":"getCtypeForTag"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":5485,"end":5499,"callee":{"type":"MemberExpression","start":5485,"end":5497,"object":{"type":"Identifier","start":5485,"end":5489,"name":"part"},"property":{"type":"Identifier","start":5490,"end":5497,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":5511,"end":5560,"declarations":[{"type":"VariableDeclarator","start":5517,"end":5559,"id":{"type":"Identifier","start":5517,"end":5530,"name":"equivTextAttr"},"init":{"type":"BinaryExpression","start":5533,"end":5559,"left":{"type":"BinaryExpression","start":5533,"end":5553,"left":{"type":"Literal","start":5533,"end":5536,"value":"<","raw":"'<'"},"operator":"+","right":{"type":"CallExpression","start":5539,"end":5553,"callee":{"type":"MemberExpression","start":5539,"end":5551,"object":{"type":"Identifier","start":5539,"end":5543,"name":"part"},"property":{"type":"Identifier","start":5544,"end":5551,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"+","right":{"type":"Literal","start":5556,"end":5559,"value":">","raw":"'>'"}}}],"kind":"const"},{"type":"ExpressionStatement","start":5570,"end":5605,"expression":{"type":"CallExpression","start":5570,"end":5604,"callee":{"type":"MemberExpression","start":5570,"end":5588,"object":{"type":"Identifier","start":5570,"end":5575,"name":"xElem"},"property":{"type":"Identifier","start":5576,"end":5588,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5589,"end":5593,"value":"id","raw":"'id'"},{"type":"Identifier","start":5595,"end":5603,"name":"idAttrib"}],"optional":false}},{"type":"ExpressionStatement","start":5615,"end":5656,"expression":{"type":"CallExpression","start":5615,"end":5655,"callee":{"type":"MemberExpression","start":5615,"end":5633,"object":{"type":"Identifier","start":5615,"end":5620,"name":"xElem"},"property":{"type":"Identifier","start":5621,"end":5633,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5634,"end":5641,"value":"ctype","raw":"'ctype'"},{"type":"Identifier","start":5643,"end":5654,"name":"ctypeAttrib"}],"optional":false}},{"type":"ExpressionStatement","start":5666,"end":5714,"expression":{"type":"CallExpression","start":5666,"end":5713,"callee":{"type":"MemberExpression","start":5666,"end":5684,"object":{"type":"Identifier","start":5666,"end":5671,"name":"xElem"},"property":{"type":"Identifier","start":5672,"end":5684,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5685,"end":5697,"value":"equiv-text","raw":"'equiv-text'"},{"type":"Identifier","start":5699,"end":5712,"name":"equivTextAttr"}],"optional":false}},{"type":"ReturnStatement","start":5724,"end":5737,"argument":{"type":"Identifier","start":5731,"end":5736,"name":"xElem"}}]}}},{"type":"MethodDefinition","start":5942,"end":6366,"static":false,"computed":false,"key":{"type":"Identifier","start":5942,"end":5977,"name":"createXmlRepresentationOfEndTagPart"},"kind":"method","value":{"type":"FunctionExpression","start":5977,"end":6366,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5978,"end":5982,"name":"part"},{"type":"Identifier","start":5984,"end":5992,"name":"rootElem"}],"body":{"type":"BlockStatement","start":5994,"end":6366,"body":[{"type":"VariableDeclaration","start":6005,"end":6061,"declarations":[{"type":"VariableDeclarator","start":6011,"end":6060,"id":{"type":"Identifier","start":6011,"end":6016,"name":"xElem"},"init":{"type":"CallExpression","start":6019,"end":6060,"callee":{"type":"MemberExpression","start":6019,"end":6055,"object":{"type":"MemberExpression","start":6019,"end":6041,"object":{"type":"Identifier","start":6019,"end":6027,"name":"rootElem"},"property":{"type":"Identifier","start":6028,"end":6041,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6042,"end":6055,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6056,"end":6059,"value":"x","raw":"'x'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6071,"end":6107,"declarations":[{"type":"VariableDeclarator","start":6077,"end":6106,"id":{"type":"Identifier","start":6077,"end":6087,"name":"tagMapping"},"init":{"type":"NewExpression","start":6090,"end":6106,"callee":{"type":"Identifier","start":6094,"end":6104,"name":"TagMapping"},"arguments":[]}}],"kind":"const"},{"type":"VariableDeclaration","start":6117,"end":6188,"declarations":[{"type":"VariableDeclarator","start":6123,"end":6187,"id":{"type":"Identifier","start":6123,"end":6131,"name":"idAttrib"},"init":{"type":"CallExpression","start":6134,"end":6187,"callee":{"type":"MemberExpression","start":6134,"end":6171,"object":{"type":"Identifier","start":6134,"end":6144,"name":"tagMapping"},"property":{"type":"Identifier","start":6145,"end":6171,"name":"getCloseTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6172,"end":6186,"callee":{"type":"MemberExpression","start":6172,"end":6184,"object":{"type":"Identifier","start":6172,"end":6176,"name":"part"},"property":{"type":"Identifier","start":6177,"end":6184,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6198,"end":6240,"declarations":[{"type":"VariableDeclarator","start":6204,"end":6239,"id":{"type":"Identifier","start":6204,"end":6215,"name":"ctypeAttrib"},"init":{"type":"BinaryExpression","start":6218,"end":6239,"left":{"type":"Literal","start":6218,"end":6222,"value":"x-","raw":"'x-'"},"operator":"+","right":{"type":"CallExpression","start":6225,"end":6239,"callee":{"type":"MemberExpression","start":6225,"end":6237,"object":{"type":"Identifier","start":6225,"end":6229,"name":"part"},"property":{"type":"Identifier","start":6230,"end":6237,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false}}}],"kind":"const"},{"type":"ExpressionStatement","start":6250,"end":6285,"expression":{"type":"CallExpression","start":6250,"end":6284,"callee":{"type":"MemberExpression","start":6250,"end":6268,"object":{"type":"Identifier","start":6250,"end":6255,"name":"xElem"},"property":{"type":"Identifier","start":6256,"end":6268,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6269,"end":6273,"value":"id","raw":"'id'"},{"type":"Identifier","start":6275,"end":6283,"name":"idAttrib"}],"optional":false}},{"type":"ExpressionStatement","start":6295,"end":6336,"expression":{"type":"CallExpression","start":6295,"end":6335,"callee":{"type":"MemberExpression","start":6295,"end":6313,"object":{"type":"Identifier","start":6295,"end":6300,"name":"xElem"},"property":{"type":"Identifier","start":6301,"end":6313,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6314,"end":6321,"value":"ctype","raw":"'ctype'"},{"type":"Identifier","start":6323,"end":6334,"name":"ctypeAttrib"}],"optional":false}},{"type":"ReturnStatement","start":6346,"end":6359,"argument":{"type":"Identifier","start":6353,"end":6358,"name":"xElem"}}]}}},{"type":"MethodDefinition","start":6566,"end":7148,"static":false,"computed":false,"key":{"type":"Identifier","start":6566,"end":6603,"name":"createXmlRepresentationOfEmptyTagPart"},"kind":"method","value":{"type":"FunctionExpression","start":6603,"end":7148,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6604,"end":6608,"name":"part"},{"type":"Identifier","start":6610,"end":6618,"name":"rootElem"}],"body":{"type":"BlockStatement","start":6620,"end":7148,"body":[{"type":"VariableDeclaration","start":6631,"end":6687,"declarations":[{"type":"VariableDeclarator","start":6637,"end":6686,"id":{"type":"Identifier","start":6637,"end":6642,"name":"xElem"},"init":{"type":"CallExpression","start":6645,"end":6686,"callee":{"type":"MemberExpression","start":6645,"end":6681,"object":{"type":"MemberExpression","start":6645,"end":6667,"object":{"type":"Identifier","start":6645,"end":6653,"name":"rootElem"},"property":{"type":"Identifier","start":6654,"end":6667,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6668,"end":6681,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6682,"end":6685,"value":"x","raw":"'x'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6697,"end":6733,"declarations":[{"type":"VariableDeclarator","start":6703,"end":6732,"id":{"type":"Identifier","start":6703,"end":6713,"name":"tagMapping"},"init":{"type":"NewExpression","start":6716,"end":6732,"callee":{"type":"Identifier","start":6720,"end":6730,"name":"TagMapping"},"arguments":[]}}],"kind":"const"},{"type":"VariableDeclaration","start":6743,"end":6832,"declarations":[{"type":"VariableDeclarator","start":6749,"end":6831,"id":{"type":"Identifier","start":6749,"end":6757,"name":"idAttrib"},"init":{"type":"CallExpression","start":6760,"end":6831,"callee":{"type":"MemberExpression","start":6760,"end":6797,"object":{"type":"Identifier","start":6760,"end":6770,"name":"tagMapping"},"property":{"type":"Identifier","start":6771,"end":6797,"name":"getEmptyTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6798,"end":6812,"callee":{"type":"MemberExpression","start":6798,"end":6810,"object":{"type":"Identifier","start":6798,"end":6802,"name":"part"},"property":{"type":"Identifier","start":6803,"end":6810,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"CallExpression","start":6814,"end":6830,"callee":{"type":"MemberExpression","start":6814,"end":6828,"object":{"type":"Identifier","start":6814,"end":6818,"name":"part"},"property":{"type":"Identifier","start":6819,"end":6828,"name":"idCounter"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6842,"end":6904,"declarations":[{"type":"VariableDeclarator","start":6848,"end":6903,"id":{"type":"Identifier","start":6848,"end":6859,"name":"ctypeAttrib"},"init":{"type":"CallExpression","start":6862,"end":6903,"callee":{"type":"MemberExpression","start":6862,"end":6887,"object":{"type":"Identifier","start":6862,"end":6872,"name":"tagMapping"},"property":{"type":"Identifier","start":6873,"end":6887,"name":"getCtypeForTag"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6888,"end":6902,"callee":{"type":"MemberExpression","start":6888,"end":6900,"object":{"type":"Identifier","start":6888,"end":6892,"name":"part"},"property":{"type":"Identifier","start":6893,"end":6900,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6914,"end":6964,"declarations":[{"type":"VariableDeclarator","start":6920,"end":6963,"id":{"type":"Identifier","start":6920,"end":6933,"name":"equivTextAttr"},"init":{"type":"BinaryExpression","start":6936,"end":6963,"left":{"type":"BinaryExpression","start":6936,"end":6956,"left":{"type":"Literal","start":6936,"end":6939,"value":"<","raw":"'<'"},"operator":"+","right":{"type":"CallExpression","start":6942,"end":6956,"callee":{"type":"MemberExpression","start":6942,"end":6954,"object":{"type":"Identifier","start":6942,"end":6946,"name":"part"},"property":{"type":"Identifier","start":6947,"end":6954,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"+","right":{"type":"Literal","start":6959,"end":6963,"value":"/>","raw":"'/>'"}}}],"kind":"const"},{"type":"ExpressionStatement","start":6974,"end":7009,"expression":{"type":"CallExpression","start":6974,"end":7008,"callee":{"type":"MemberExpression","start":6974,"end":6992,"object":{"type":"Identifier","start":6974,"end":6979,"name":"xElem"},"property":{"type":"Identifier","start":6980,"end":6992,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6993,"end":6997,"value":"id","raw":"'id'"},{"type":"Identifier","start":6999,"end":7007,"name":"idAttrib"}],"optional":false}},{"type":"ExpressionStatement","start":7019,"end":7060,"expression":{"type":"CallExpression","start":7019,"end":7059,"callee":{"type":"MemberExpression","start":7019,"end":7037,"object":{"type":"Identifier","start":7019,"end":7024,"name":"xElem"},"property":{"type":"Identifier","start":7025,"end":7037,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7038,"end":7045,"value":"ctype","raw":"'ctype'"},{"type":"Identifier","start":7047,"end":7058,"name":"ctypeAttrib"}],"optional":false}},{"type":"ExpressionStatement","start":7070,"end":7118,"expression":{"type":"CallExpression","start":7070,"end":7117,"callee":{"type":"MemberExpression","start":7070,"end":7088,"object":{"type":"Identifier","start":7070,"end":7075,"name":"xElem"},"property":{"type":"Identifier","start":7076,"end":7088,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7089,"end":7101,"value":"equiv-text","raw":"'equiv-text'"},{"type":"Identifier","start":7103,"end":7116,"name":"equivTextAttr"}],"optional":false}},{"type":"ReturnStatement","start":7128,"end":7141,"argument":{"type":"Identifier","start":7135,"end":7140,"name":"xElem"}}]}}},{"type":"MethodDefinition","start":7379,"end":7880,"static":false,"computed":false,"key":{"type":"Identifier","start":7379,"end":7419,"name":"createXmlRepresentationOfPlaceholderPart"},"kind":"method","value":{"type":"FunctionExpression","start":7419,"end":7880,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7420,"end":7424,"name":"part"},{"type":"Identifier","start":7426,"end":7434,"name":"rootElem"}],"body":{"type":"BlockStatement","start":7436,"end":7880,"body":[{"type":"VariableDeclaration","start":7447,"end":7503,"declarations":[{"type":"VariableDeclarator","start":7453,"end":7502,"id":{"type":"Identifier","start":7453,"end":7458,"name":"xElem"},"init":{"type":"CallExpression","start":7461,"end":7502,"callee":{"type":"MemberExpression","start":7461,"end":7497,"object":{"type":"MemberExpression","start":7461,"end":7483,"object":{"type":"Identifier","start":7461,"end":7469,"name":"rootElem"},"property":{"type":"Identifier","start":7470,"end":7483,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7484,"end":7497,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7498,"end":7501,"value":"x","raw":"'x'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":7513,"end":7544,"declarations":[{"type":"VariableDeclarator","start":7517,"end":7543,"id":{"type":"Identifier","start":7517,"end":7525,"name":"idAttrib"},"init":{"type":"Literal","start":7528,"end":7543,"value":"INTERPOLATION","raw":"'INTERPOLATION'"}}],"kind":"let"},{"type":"IfStatement","start":7554,"end":7658,"test":{"type":"BinaryExpression","start":7558,"end":7574,"left":{"type":"CallExpression","start":7558,"end":7570,"callee":{"type":"MemberExpression","start":7558,"end":7568,"object":{"type":"Identifier","start":7558,"end":7562,"name":"part"},"property":{"type":"Identifier","start":7563,"end":7568,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":">","right":{"type":"Literal","start":7573,"end":7574,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":7576,"end":7658,"body":[{"type":"ExpressionStatement","start":7591,"end":7647,"expression":{"type":"AssignmentExpression","start":7591,"end":7646,"operator":"=","left":{"type":"Identifier","start":7591,"end":7599,"name":"idAttrib"},"right":{"type":"BinaryExpression","start":7602,"end":7646,"left":{"type":"Literal","start":7602,"end":7618,"value":"INTERPOLATION_","raw":"'INTERPOLATION_'"},"operator":"+","right":{"type":"CallExpression","start":7621,"end":7646,"callee":{"type":"MemberExpression","start":7621,"end":7642,"object":{"type":"CallExpression","start":7621,"end":7633,"callee":{"type":"MemberExpression","start":7621,"end":7631,"object":{"type":"Identifier","start":7621,"end":7625,"name":"part"},"property":{"type":"Identifier","start":7626,"end":7631,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":7634,"end":7642,"name":"toString"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7643,"end":7645,"value":10,"raw":"10"}],"optional":false}}}}]},"alternate":null},{"type":"VariableDeclaration","start":7668,"end":7702,"declarations":[{"type":"VariableDeclarator","start":7674,"end":7701,"id":{"type":"Identifier","start":7674,"end":7687,"name":"equivTextAttr"},"init":{"type":"CallExpression","start":7690,"end":7701,"callee":{"type":"MemberExpression","start":7690,"end":7699,"object":{"type":"Identifier","start":7690,"end":7694,"name":"part"},"property":{"type":"Identifier","start":7695,"end":7699,"name":"disp"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7712,"end":7747,"expression":{"type":"CallExpression","start":7712,"end":7746,"callee":{"type":"MemberExpression","start":7712,"end":7730,"object":{"type":"Identifier","start":7712,"end":7717,"name":"xElem"},"property":{"type":"Identifier","start":7718,"end":7730,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7731,"end":7735,"value":"id","raw":"'id'"},{"type":"Identifier","start":7737,"end":7745,"name":"idAttrib"}],"optional":false}},{"type":"IfStatement","start":7757,"end":7850,"test":{"type":"Identifier","start":7761,"end":7774,"name":"equivTextAttr"},"consequent":{"type":"BlockStatement","start":7776,"end":7850,"body":[{"type":"ExpressionStatement","start":7791,"end":7839,"expression":{"type":"CallExpression","start":7791,"end":7838,"callee":{"type":"MemberExpression","start":7791,"end":7809,"object":{"type":"Identifier","start":7791,"end":7796,"name":"xElem"},"property":{"type":"Identifier","start":7797,"end":7809,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7810,"end":7822,"value":"equiv-text","raw":"'equiv-text'"},{"type":"Identifier","start":7824,"end":7837,"name":"equivTextAttr"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":7860,"end":7873,"argument":{"type":"Identifier","start":7867,"end":7872,"name":"xElem"}}]}}},{"type":"MethodDefinition","start":8020,"end":8356,"static":false,"computed":false,"key":{"type":"Identifier","start":8020,"end":8062,"name":"createXmlRepresentationOfICUMessageRefPart"},"kind":"method","value":{"type":"FunctionExpression","start":8062,"end":8356,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8063,"end":8067,"name":"part"},{"type":"Identifier","start":8069,"end":8077,"name":"rootElem"}],"body":{"type":"BlockStatement","start":8079,"end":8356,"body":[{"type":"VariableDeclaration","start":8090,"end":8146,"declarations":[{"type":"VariableDeclarator","start":8096,"end":8145,"id":{"type":"Identifier","start":8096,"end":8101,"name":"xElem"},"init":{"type":"CallExpression","start":8104,"end":8145,"callee":{"type":"MemberExpression","start":8104,"end":8140,"object":{"type":"MemberExpression","start":8104,"end":8126,"object":{"type":"Identifier","start":8104,"end":8112,"name":"rootElem"},"property":{"type":"Identifier","start":8113,"end":8126,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8127,"end":8140,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8141,"end":8144,"value":"x","raw":"'x'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":8156,"end":8177,"declarations":[{"type":"VariableDeclarator","start":8160,"end":8176,"id":{"type":"Identifier","start":8160,"end":8168,"name":"idAttrib"},"init":{"type":"Literal","start":8171,"end":8176,"value":"ICU","raw":"'ICU'"}}],"kind":"let"},{"type":"IfStatement","start":8187,"end":8281,"test":{"type":"BinaryExpression","start":8191,"end":8207,"left":{"type":"CallExpression","start":8191,"end":8203,"callee":{"type":"MemberExpression","start":8191,"end":8201,"object":{"type":"Identifier","start":8191,"end":8195,"name":"part"},"property":{"type":"Identifier","start":8196,"end":8201,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":">","right":{"type":"Literal","start":8206,"end":8207,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":8209,"end":8281,"body":[{"type":"ExpressionStatement","start":8224,"end":8270,"expression":{"type":"AssignmentExpression","start":8224,"end":8269,"operator":"=","left":{"type":"Identifier","start":8224,"end":8232,"name":"idAttrib"},"right":{"type":"BinaryExpression","start":8235,"end":8269,"left":{"type":"Literal","start":8235,"end":8241,"value":"ICU_","raw":"'ICU_'"},"operator":"+","right":{"type":"CallExpression","start":8244,"end":8269,"callee":{"type":"MemberExpression","start":8244,"end":8265,"object":{"type":"CallExpression","start":8244,"end":8256,"callee":{"type":"MemberExpression","start":8244,"end":8254,"object":{"type":"Identifier","start":8244,"end":8248,"name":"part"},"property":{"type":"Identifier","start":8249,"end":8254,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":8257,"end":8265,"name":"toString"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8266,"end":8268,"value":10,"raw":"10"}],"optional":false}}}}]},"alternate":null},{"type":"ExpressionStatement","start":8291,"end":8326,"expression":{"type":"CallExpression","start":8291,"end":8325,"callee":{"type":"MemberExpression","start":8291,"end":8309,"object":{"type":"Identifier","start":8291,"end":8296,"name":"xElem"},"property":{"type":"Identifier","start":8297,"end":8309,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8310,"end":8314,"value":"id","raw":"'id'"},{"type":"Identifier","start":8316,"end":8324,"name":"idAttrib"}],"optional":false}},{"type":"ReturnStatement","start":8336,"end":8349,"argument":{"type":"Identifier","start":8343,"end":8348,"name":"xElem"}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":8361,"end":29059}]},"code":"import { AbstractMessageParser } from './abstract-message-parser';\r\nimport { TagMapping } from './tag-mapping';\r\nimport { ParsedMessagePartType } from './parsed-message-part';\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 1.2\r\n */\r\nexport class XliffMessageParser extends AbstractMessageParser {\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    processStartElement(elementNode, message) {\r\n        const tagName = elementNode.tagName;\r\n        const tagMapping = new TagMapping();\r\n        if (tagName === 'x') {\r\n            // placeholder are like <x id=\"INTERPOLATION\"/> or <x id=\"INTERPOLATION_1\">\r\n            const id = elementNode.getAttribute('id');\r\n            if (!id) {\r\n                return; // should not happen\r\n            }\r\n            if (id.startsWith('INTERPOLATION')) {\r\n                const index = this.parsePlaceholderIndexFromId(id);\r\n                message.addPlaceholder(index, null);\r\n            }\r\n            else if (id.startsWith('ICU')) {\r\n                const index = this.parseICUMessageRefIndexFromId(id);\r\n                message.addICUMessageRef(index, null);\r\n            }\r\n            else if (id.startsWith('START_')) {\r\n                const normalizedTagName = tagMapping.getTagnameFromStartTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    const idcount = this.parseIdCountFromName(id);\r\n                    message.addStartTag(normalizedTagName, idcount);\r\n                }\r\n            }\r\n            else if (id.startsWith('CLOSE_')) {\r\n                const normalizedTagName = tagMapping.getTagnameFromCloseTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    message.addEndTag(normalizedTagName);\r\n                }\r\n            }\r\n            else if (tagMapping.isEmptyTagPlaceholderName(id)) {\r\n                const normalizedTagName = tagMapping.getTagnameFromEmptyTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    const idcount = this.parseIdCountFromName(id);\r\n                    message.addEmptyTag(normalizedTagName, idcount);\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    processEndElement(elementNode, message) {\r\n    }\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param id id\r\n     * @return index\r\n     */\r\n    parsePlaceholderIndexFromId(id) {\r\n        let indexString = '';\r\n        if (id === 'INTERPOLATION') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = id.substring('INTERPOLATION_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    }\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param id id\r\n     * @return id as number\r\n     */\r\n    parseICUMessageRefIndexFromId(id) {\r\n        let indexString = '';\r\n        if (id === 'ICU') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = id.substring('ICU_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    }\r\n    addXmlRepresentationToRoot(message, rootElem) {\r\n        message.parts().forEach((part) => {\r\n            let child;\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.TEXT:\r\n                    child = this.createXmlRepresentationOfTextPart(part, rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.START_TAG:\r\n                    child = this.createXmlRepresentationOfStartTagPart(part, rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    child = this.createXmlRepresentationOfEndTagPart(part, rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.EMPTY_TAG:\r\n                    child = this.createXmlRepresentationOfEmptyTagPart(part, rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.PLACEHOLDER:\r\n                    child = this.createXmlRepresentationOfPlaceholderPart(part, rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                    child = this.createXmlRepresentationOfICUMessageRefPart(part, rootElem);\r\n                    break;\r\n            }\r\n            if (child) {\r\n                rootElem.appendChild(child);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfStartTagPart(part, rootElem) {\r\n        const xElem = rootElem.ownerDocument.createElement('x');\r\n        const tagMapping = new TagMapping();\r\n        const idAttrib = tagMapping.getStartTagPlaceholderName(part.tagName(), part.idCounter());\r\n        const ctypeAttrib = tagMapping.getCtypeForTag(part.tagName());\r\n        const equivTextAttr = '<' + part.tagName() + '>';\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        xElem.setAttribute('equiv-text', equivTextAttr);\r\n        return xElem;\r\n    }\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfEndTagPart(part, rootElem) {\r\n        const xElem = rootElem.ownerDocument.createElement('x');\r\n        const tagMapping = new TagMapping();\r\n        const idAttrib = tagMapping.getCloseTagPlaceholderName(part.tagName());\r\n        const ctypeAttrib = 'x-' + part.tagName();\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        return xElem;\r\n    }\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfEmptyTagPart(part, rootElem) {\r\n        const xElem = rootElem.ownerDocument.createElement('x');\r\n        const tagMapping = new TagMapping();\r\n        const idAttrib = tagMapping.getEmptyTagPlaceholderName(part.tagName(), part.idCounter());\r\n        const ctypeAttrib = tagMapping.getCtypeForTag(part.tagName());\r\n        const equivTextAttr = '<' + part.tagName() + '/>';\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        xElem.setAttribute('equiv-text', equivTextAttr);\r\n        return xElem;\r\n    }\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an empty <x/>-Element with attribute id=\"INTERPOLATION\" or id=\"INTERPOLATION_n\"\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfPlaceholderPart(part, rootElem) {\r\n        const xElem = rootElem.ownerDocument.createElement('x');\r\n        let idAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            idAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        const equivTextAttr = part.disp();\r\n        xElem.setAttribute('id', idAttrib);\r\n        if (equivTextAttr) {\r\n            xElem.setAttribute('equiv-text', equivTextAttr);\r\n        }\r\n        return xElem;\r\n    }\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfICUMessageRefPart(part, rootElem) {\r\n        const xElem = rootElem.ownerDocument.createElement('x');\r\n        let idAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            idAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        xElem.setAttribute('id', idAttrib);\r\n        return xElem;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-message-parser.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\tag-mapping.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff-message-parser.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { AbstractMessageParser } from './abstract-message-parser';\r\nimport { TagMapping } from './tag-mapping';\r\nimport { ParsedMessagePartType } from './parsed-message-part';\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 1.2\r\n */\r\nexport class XliffMessageParser extends AbstractMessageParser {\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    processStartElement(elementNode, message) {\r\n        const tagName = elementNode.tagName;\r\n        const tagMapping = new TagMapping();\r\n        if (tagName === 'x') {\r\n            // placeholder are like <x id=\"INTERPOLATION\"/> or <x id=\"INTERPOLATION_1\">\r\n            const id = elementNode.getAttribute('id');\r\n            if (!id) {\r\n                return; // should not happen\r\n            }\r\n            if (id.startsWith('INTERPOLATION')) {\r\n                const index = this.parsePlaceholderIndexFromId(id);\r\n                message.addPlaceholder(index, null);\r\n            }\r\n            else if (id.startsWith('ICU')) {\r\n                const index = this.parseICUMessageRefIndexFromId(id);\r\n                message.addICUMessageRef(index, null);\r\n            }\r\n            else if (id.startsWith('START_')) {\r\n                const normalizedTagName = tagMapping.getTagnameFromStartTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    const idcount = this.parseIdCountFromName(id);\r\n                    message.addStartTag(normalizedTagName, idcount);\r\n                }\r\n            }\r\n            else if (id.startsWith('CLOSE_')) {\r\n                const normalizedTagName = tagMapping.getTagnameFromCloseTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    message.addEndTag(normalizedTagName);\r\n                }\r\n            }\r\n            else if (tagMapping.isEmptyTagPlaceholderName(id)) {\r\n                const normalizedTagName = tagMapping.getTagnameFromEmptyTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    const idcount = this.parseIdCountFromName(id);\r\n                    message.addEmptyTag(normalizedTagName, idcount);\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    processEndElement(elementNode, message) {\r\n    }\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param id id\r\n     * @return index\r\n     */\r\n    parsePlaceholderIndexFromId(id) {\r\n        let indexString = '';\r\n        if (id === 'INTERPOLATION') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = id.substring('INTERPOLATION_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    }\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param id id\r\n     * @return id as number\r\n     */\r\n    parseICUMessageRefIndexFromId(id) {\r\n        let indexString = '';\r\n        if (id === 'ICU') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = id.substring('ICU_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    }\r\n    addXmlRepresentationToRoot(message, rootElem) {\r\n        message.parts().forEach((part) => {\r\n            let child;\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.TEXT:\r\n                    child = this.createXmlRepresentationOfTextPart(part, rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.START_TAG:\r\n                    child = this.createXmlRepresentationOfStartTagPart(part, rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    child = this.createXmlRepresentationOfEndTagPart(part, rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.EMPTY_TAG:\r\n                    child = this.createXmlRepresentationOfEmptyTagPart(part, rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.PLACEHOLDER:\r\n                    child = this.createXmlRepresentationOfPlaceholderPart(part, rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                    child = this.createXmlRepresentationOfICUMessageRefPart(part, rootElem);\r\n                    break;\r\n            }\r\n            if (child) {\r\n                rootElem.appendChild(child);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfStartTagPart(part, rootElem) {\r\n        const xElem = rootElem.ownerDocument.createElement('x');\r\n        const tagMapping = new TagMapping();\r\n        const idAttrib = tagMapping.getStartTagPlaceholderName(part.tagName(), part.idCounter());\r\n        const ctypeAttrib = tagMapping.getCtypeForTag(part.tagName());\r\n        const equivTextAttr = '<' + part.tagName() + '>';\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        xElem.setAttribute('equiv-text', equivTextAttr);\r\n        return xElem;\r\n    }\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfEndTagPart(part, rootElem) {\r\n        const xElem = rootElem.ownerDocument.createElement('x');\r\n        const tagMapping = new TagMapping();\r\n        const idAttrib = tagMapping.getCloseTagPlaceholderName(part.tagName());\r\n        const ctypeAttrib = 'x-' + part.tagName();\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        return xElem;\r\n    }\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfEmptyTagPart(part, rootElem) {\r\n        const xElem = rootElem.ownerDocument.createElement('x');\r\n        const tagMapping = new TagMapping();\r\n        const idAttrib = tagMapping.getEmptyTagPlaceholderName(part.tagName(), part.idCounter());\r\n        const ctypeAttrib = tagMapping.getCtypeForTag(part.tagName());\r\n        const equivTextAttr = '<' + part.tagName() + '/>';\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        xElem.setAttribute('equiv-text', equivTextAttr);\r\n        return xElem;\r\n    }\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an empty <x/>-Element with attribute id=\"INTERPOLATION\" or id=\"INTERPOLATION_n\"\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfPlaceholderPart(part, rootElem) {\r\n        const xElem = rootElem.ownerDocument.createElement('x');\r\n        let idAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            idAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        const equivTextAttr = part.disp();\r\n        xElem.setAttribute('id', idAttrib);\r\n        if (equivTextAttr) {\r\n            xElem.setAttribute('equiv-text', equivTextAttr);\r\n        }\r\n        return xElem;\r\n    }\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfICUMessageRefPart(part, rootElem) {\r\n        const xElem = rootElem.ownerDocument.createElement('x');\r\n        let idAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            idAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        xElem.setAttribute('id', idAttrib);\r\n        return xElem;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"xliff-message-parser.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/xliff-message-parser.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[30,0,0,29],[32,0,0,30],[38,0,0,36],[65,0,0,63],[66,0,0,64]],[[0,0,5,0],[7,0,5,7],[9,0,5,8],[19,0,5,18],[21,0,5,19],[27,0,5,25],[42,0,5,40],[43,0,5,41]],[[0,0,8,0],[7,0,8,7],[9,0,8,8],[30,0,8,29],[32,0,8,30],[38,0,8,36],[61,0,8,59],[62,0,8,60]],[[0,0,10,0]],[],[],[[3,0,13,3]],[[0,0,14,0],[6,0,14,6],[13,0,14,13],[31,0,14,32],[40,0,14,40],[61,0,14,61]],[[4,0,16,4]],[],[],[],[],[],[[7,0,22,7]],[[4,0,23,14],[23,0,23,33],[24,0,23,34],[35,0,23,54],[37,0,23,56],[44,0,23,78]],[[8,0,24,8],[14,0,24,14],[21,0,24,21],[24,0,24,24],[35,0,24,35],[36,0,24,36],[43,0,24,43],[44,0,24,44]],[[8,0,25,8],[14,0,25,14],[24,0,25,24],[27,0,25,27],[31,0,25,31],[41,0,25,41],[43,0,25,43],[44,0,25,44]],[[8,0,26,8],[12,0,26,12],[19,0,26,19],[24,0,26,24],[27,0,26,27],[29,0,26,29]],[[12,0,27,12],[87,0,27,87]],[[12,0,28,12],[18,0,28,18],[20,0,28,20],[23,0,28,23],[34,0,28,34],[35,0,28,35],[47,0,28,47],[48,0,28,48],[52,0,28,52],[53,0,28,53],[54,0,28,54]],[[12,0,29,12],[16,0,29,16],[17,0,29,17],[19,0,29,19],[21,0,29,21]],[[16,0,30,16],[23,0,30,23],[24,0,30,24],[44,0,30,44]],[[13,0,31,13]],[[12,0,32,12],[16,0,32,16],[18,0,32,18],[19,0,32,19],[29,0,32,29],[30,0,32,30],[45,0,32,45],[46,0,32,46],[48,0,32,48]],[[16,0,33,16],[22,0,33,22],[27,0,33,27],[30,0,33,30],[34,0,33,34],[35,0,33,35],[62,0,33,62],[63,0,33,63],[65,0,33,65],[66,0,33,66],[67,0,33,67]],[[16,0,34,16],[23,0,34,23],[24,0,34,24],[38,0,34,38],[39,0,34,39],[44,0,34,44],[46,0,34,46],[50,0,34,50],[51,0,34,51],[52,0,34,52]],[[13,0,35,13]],[[17,0,35,19],[21,0,35,23],[23,0,35,25],[24,0,35,26],[34,0,35,36],[35,0,35,37],[40,0,35,42],[41,0,35,43],[43,0,35,45]],[[16,0,36,16],[22,0,36,22],[27,0,36,27],[30,0,36,30],[34,0,36,34],[35,0,36,35],[64,0,36,64],[65,0,36,65],[67,0,36,67],[68,0,36,68],[69,0,36,69]],[[16,0,37,16],[23,0,37,23],[24,0,37,24],[40,0,37,40],[41,0,37,41],[46,0,37,46],[48,0,37,48],[52,0,37,52],[53,0,37,53],[54,0,37,54]],[[13,0,38,13]],[[17,0,38,19],[21,0,38,23],[23,0,38,25],[24,0,38,26],[34,0,38,36],[35,0,38,37],[43,0,38,45],[44,0,38,46],[46,0,38,48]],[[16,0,39,16],[22,0,39,22],[39,0,39,39],[42,0,39,42],[52,0,39,52],[53,0,39,53],[90,0,39,90],[91,0,39,91],[93,0,39,93],[94,0,39,94],[95,0,39,95]],[[16,0,40,16],[20,0,40,20],[37,0,40,37],[39,0,40,39]],[[20,0,41,20],[26,0,41,26],[33,0,41,33],[36,0,41,36],[40,0,41,40],[41,0,41,41],[61,0,41,61],[62,0,41,62],[64,0,41,64],[65,0,41,65],[66,0,41,66]],[[20,0,42,20],[27,0,42,27],[28,0,42,28],[39,0,42,39],[40,0,42,40],[57,0,42,57],[59,0,42,59],[66,0,42,66],[67,0,42,67],[68,0,42,68]],[[17,0,43,17]],[[13,0,44,13]],[[17,0,44,19],[21,0,44,23],[23,0,44,25],[24,0,44,26],[34,0,44,36],[35,0,44,37],[43,0,44,45],[44,0,44,46],[46,0,44,48]],[[16,0,45,16],[22,0,45,22],[39,0,45,39],[42,0,45,42],[52,0,45,52],[53,0,45,53],[90,0,45,90],[91,0,45,91],[93,0,45,93],[94,0,45,94],[95,0,45,95]],[[16,0,46,16],[20,0,46,20],[37,0,46,37],[39,0,46,39]],[[20,0,47,20],[27,0,47,27],[28,0,47,28],[37,0,47,37],[38,0,47,38],[55,0,47,55],[56,0,47,56],[57,0,47,57]],[[17,0,48,17]],[[13,0,49,13]],[[17,0,49,19],[21,0,49,23],[31,0,49,33],[32,0,49,34],[57,0,49,59],[58,0,49,60],[60,0,49,62],[61,0,49,63],[63,0,49,65]],[[16,0,50,16],[22,0,50,22],[39,0,50,39],[42,0,50,42],[52,0,50,52],[53,0,50,53],[90,0,50,90],[91,0,50,91],[93,0,50,93],[94,0,50,94],[95,0,50,95]],[[16,0,51,16],[20,0,51,20],[37,0,51,37],[39,0,51,39]],[[20,0,52,20],[26,0,52,26],[33,0,52,33],[36,0,52,36],[40,0,52,40],[41,0,52,41],[61,0,52,61],[62,0,52,62],[64,0,52,64],[65,0,52,65],[66,0,52,66]],[[20,0,53,20],[27,0,53,27],[28,0,53,28],[39,0,53,39],[40,0,53,40],[57,0,53,57],[59,0,53,59],[66,0,53,66],[67,0,53,67],[68,0,53,68]],[[17,0,54,17]],[[13,0,55,13]],[[9,0,56,9]],[[8,0,57,8],[15,0,57,15],[19,0,57,19],[20,0,57,20]],[[4,0,58,4],[5,0,58,5]],[[4,0,60,4]],[],[],[],[],[[7,0,65,7]],[[4,0,66,14],[21,0,66,31],[22,0,66,32],[33,0,66,52],[35,0,66,54],[42,0,66,76]],[[4,0,67,4],[5,0,67,5]],[[4,0,69,4]],[],[],[],[],[[7,0,74,7]],[[4,0,75,12],[31,0,75,39],[32,0,75,40],[34,0,75,50]],[[8,0,76,8],[12,0,76,12],[23,0,76,23],[26,0,76,26],[28,0,76,28],[29,0,76,29]],[[8,0,78,8],[12,0,78,12],[14,0,78,14],[19,0,78,19],[34,0,78,34],[36,0,78,36]],[[12,0,79,12],[23,0,79,23],[26,0,79,26],[29,0,79,29],[30,0,79,30]],[[9,0,80,9]],[[13,0,80,15]],[[12,0,81,12],[23,0,81,23],[26,0,81,26],[28,0,81,28],[29,0,81,29],[38,0,81,38],[39,0,81,39],[55,0,81,55],[56,0,81,56],[62,0,81,62],[63,0,81,63],[64,0,81,64]],[[9,0,82,9]],[[8,0,83,8],[15,0,83,15],[21,0,83,21],[22,0,83,22],[30,0,83,30],[31,0,83,31],[42,0,83,42],[44,0,83,44],[46,0,83,46],[47,0,83,47],[48,0,83,48]],[[4,0,84,4],[5,0,84,5]],[[4,0,86,4]],[],[],[],[],[[7,0,91,7]],[[4,0,92,12],[33,0,92,41],[34,0,92,42],[36,0,92,52]],[[8,0,93,8],[12,0,93,12],[23,0,93,23],[26,0,93,26],[28,0,93,28],[29,0,93,29]],[[8,0,95,8],[12,0,95,12],[14,0,95,14],[19,0,95,19],[24,0,95,24],[26,0,95,26]],[[12,0,96,12],[23,0,96,23],[26,0,96,26],[29,0,96,29],[30,0,96,30]],[[9,0,97,9]],[[13,0,97,15]],[[12,0,98,12],[23,0,98,23],[26,0,98,26],[28,0,98,28],[29,0,98,29],[38,0,98,38],[39,0,98,39],[45,0,98,45],[46,0,98,46],[52,0,98,52],[53,0,98,53],[54,0,98,54]],[[9,0,99,9]],[[8,0,100,8],[15,0,100,15],[21,0,100,21],[22,0,100,22],[30,0,100,30],[31,0,100,31],[42,0,100,42],[44,0,100,44],[46,0,100,46],[47,0,100,47],[48,0,100,48]],[[4,0,101,4],[5,0,101,5]],[[4,0,103,14],[30,0,103,40],[31,0,103,41],[38,0,103,63],[40,0,103,65],[48,0,103,82]],[[8,0,104,8],[15,0,104,15],[16,0,104,16],[21,0,104,21],[23,0,104,23],[24,0,104,24],[31,0,104,31],[32,0,104,32],[33,0,104,33],[37,0,104,37],[39,0,104,39],[41,0,104,41]],[[12,0,105,12],[16,0,105,16],[21,0,105,27],[22,0,105,28]],[[12,0,106,12],[20,0,106,20],[24,0,106,24],[25,0,106,25],[29,0,106,29],[31,0,106,31]],[[16,0,107,16],[21,0,107,21],[42,0,107,42],[43,0,107,43],[47,0,107,47]],[[20,0,108,20],[25,0,108,25],[28,0,108,28],[32,0,108,32],[33,0,108,33],[66,0,108,66],[67,0,108,91],[71,0,108,95],[73,0,108,97],[81,0,108,105],[82,0,108,106],[83,0,108,107]],[[20,0,109,20],[26,0,109,26]],[[16,0,110,16],[21,0,110,21],[42,0,110,42],[43,0,110,43],[52,0,110,52]],[[20,0,111,20],[25,0,111,25],[28,0,111,28],[32,0,111,32],[33,0,111,33],[70,0,111,70],[71,0,111,99],[75,0,111,104],[77,0,111,106],[85,0,111,114],[86,0,111,115],[87,0,111,116]],[[20,0,112,20],[26,0,112,26]],[[16,0,113,16],[21,0,113,21],[42,0,113,42],[43,0,113,43],[50,0,113,50]],[[20,0,114,20],[25,0,114,25],[28,0,114,28],[32,0,114,32],[33,0,114,33],[68,0,114,68],[69,0,114,95],[73,0,114,100],[75,0,114,102],[83,0,114,110],[84,0,114,111],[85,0,114,112]],[[20,0,115,20],[26,0,115,26]],[[16,0,116,16],[21,0,116,21],[42,0,116,42],[43,0,116,43],[52,0,116,52]],[[20,0,117,20],[25,0,117,25],[28,0,117,28],[32,0,117,32],[33,0,117,33],[70,0,117,70],[71,0,117,99],[75,0,117,104],[77,0,117,106],[85,0,117,114],[86,0,117,115],[87,0,117,116]],[[20,0,118,20],[26,0,118,26]],[[16,0,119,16],[21,0,119,21],[42,0,119,42],[43,0,119,43],[54,0,119,54]],[[20,0,120,20],[25,0,120,25],[28,0,120,28],[32,0,120,32],[33,0,120,33],[73,0,120,73],[74,0,120,105],[78,0,120,110],[80,0,120,112],[88,0,120,120],[89,0,120,121],[90,0,120,122]],[[20,0,121,20],[26,0,121,26]],[[16,0,122,16],[21,0,122,21],[42,0,122,42],[43,0,122,43],[58,0,122,58]],[[20,0,123,20],[25,0,123,25],[28,0,123,28],[32,0,123,32],[33,0,123,33],[75,0,123,75],[76,0,123,109],[80,0,123,114],[82,0,123,116],[90,0,123,124],[91,0,123,125],[92,0,123,126]],[[20,0,124,20],[26,0,124,26]],[[13,0,125,13]],[[12,0,126,12],[16,0,126,16],[21,0,126,21],[23,0,126,23]],[[16,0,127,16],[24,0,127,24],[25,0,127,25],[36,0,127,36],[37,0,127,37],[42,0,127,42],[43,0,127,43],[44,0,127,44]],[[13,0,128,13]],[[8,0,129,8],[9,0,129,9],[10,0,129,10],[11,0,129,11]],[[4,0,130,4],[5,0,130,5]],[[4,0,132,4]],[],[],[],[],[[7,0,137,7]],[[4,0,138,14],[41,0,138,51],[42,0,138,52],[46,0,138,83],[48,0,138,85],[56,0,138,102]],[[8,0,139,8],[14,0,139,14],[19,0,139,19],[22,0,139,22],[30,0,139,30],[31,0,139,31],[44,0,139,44],[45,0,139,45],[58,0,139,58],[59,0,139,59],[62,0,139,62],[63,0,139,63],[64,0,139,64]],[[8,0,140,8],[14,0,140,14],[24,0,140,24],[27,0,140,27],[31,0,140,31],[41,0,140,41],[43,0,140,43],[44,0,140,44]],[[8,0,141,8],[14,0,141,14],[22,0,141,22],[25,0,141,25],[35,0,141,35],[36,0,141,36],[62,0,141,62],[63,0,141,63],[67,0,141,67],[68,0,141,68],[75,0,141,75],[77,0,141,77],[79,0,141,79],[83,0,141,83],[84,0,141,84],[93,0,141,93],[95,0,141,95],[96,0,141,96],[97,0,141,97]],[[8,0,142,8],[14,0,142,14],[25,0,142,25],[28,0,142,28],[38,0,142,38],[39,0,142,39],[53,0,142,53],[54,0,142,54],[58,0,142,58],[59,0,142,59],[66,0,142,66],[68,0,142,68],[69,0,142,69],[70,0,142,70]],[[8,0,143,8],[14,0,143,14],[27,0,143,27],[30,0,143,30],[33,0,143,33],[36,0,143,36],[40,0,143,40],[41,0,143,41],[48,0,143,48],[50,0,143,50],[53,0,143,53],[56,0,143,56],[57,0,143,57]],[[8,0,144,8],[13,0,144,13],[14,0,144,14],[26,0,144,26],[27,0,144,27],[31,0,144,31],[33,0,144,33],[41,0,144,41],[42,0,144,42],[43,0,144,43]],[[8,0,145,8],[13,0,145,13],[14,0,145,14],[26,0,145,26],[27,0,145,27],[34,0,145,34],[36,0,145,36],[47,0,145,47],[48,0,145,48],[49,0,145,49]],[[8,0,146,8],[13,0,146,13],[14,0,146,14],[26,0,146,26],[27,0,146,27],[39,0,146,39],[41,0,146,41],[54,0,146,54],[55,0,146,55],[56,0,146,56]],[[8,0,147,8],[15,0,147,15],[20,0,147,20],[21,0,147,21]],[[4,0,148,4],[5,0,148,5]],[[4,0,150,4]],[],[],[],[],[[7,0,155,7]],[[4,0,156,14],[39,0,156,49],[40,0,156,50],[44,0,156,79],[46,0,156,81],[54,0,156,98]],[[8,0,157,8],[14,0,157,14],[19,0,157,19],[22,0,157,22],[30,0,157,30],[31,0,157,31],[44,0,157,44],[45,0,157,45],[58,0,157,58],[59,0,157,59],[62,0,157,62],[63,0,157,63],[64,0,157,64]],[[8,0,158,8],[14,0,158,14],[24,0,158,24],[27,0,158,27],[31,0,158,31],[41,0,158,41],[43,0,158,43],[44,0,158,44]],[[8,0,159,8],[14,0,159,14],[22,0,159,22],[25,0,159,25],[35,0,159,35],[36,0,159,36],[62,0,159,62],[63,0,159,63],[67,0,159,67],[68,0,159,68],[75,0,159,75],[77,0,159,77],[78,0,159,78],[79,0,159,79]],[[8,0,160,8],[14,0,160,14],[25,0,160,25],[28,0,160,28],[32,0,160,32],[35,0,160,35],[39,0,160,39],[40,0,160,40],[47,0,160,47],[49,0,160,49],[50,0,160,50]],[[8,0,161,8],[13,0,161,13],[14,0,161,14],[26,0,161,26],[27,0,161,27],[31,0,161,31],[33,0,161,33],[41,0,161,41],[42,0,161,42],[43,0,161,43]],[[8,0,162,8],[13,0,162,13],[14,0,162,14],[26,0,162,26],[27,0,162,27],[34,0,162,34],[36,0,162,36],[47,0,162,47],[48,0,162,48],[49,0,162,49]],[[8,0,163,8],[15,0,163,15],[20,0,163,20],[21,0,163,21]],[[4,0,164,4],[5,0,164,5]],[[4,0,166,4]],[],[],[],[],[[7,0,171,7]],[[4,0,172,14],[41,0,172,51],[42,0,172,52],[46,0,172,83],[48,0,172,85],[56,0,172,102]],[[8,0,173,8],[14,0,173,14],[19,0,173,19],[22,0,173,22],[30,0,173,30],[31,0,173,31],[44,0,173,44],[45,0,173,45],[58,0,173,58],[59,0,173,59],[62,0,173,62],[63,0,173,63],[64,0,173,64]],[[8,0,174,8],[14,0,174,14],[24,0,174,24],[27,0,174,27],[31,0,174,31],[41,0,174,41],[43,0,174,43],[44,0,174,44]],[[8,0,175,8],[14,0,175,14],[22,0,175,22],[25,0,175,25],[35,0,175,35],[36,0,175,36],[62,0,175,62],[63,0,175,63],[67,0,175,67],[68,0,175,68],[75,0,175,75],[77,0,175,77],[79,0,175,79],[83,0,175,83],[84,0,175,84],[93,0,175,93],[95,0,175,95],[96,0,175,96],[97,0,175,97]],[[8,0,176,8],[14,0,176,14],[25,0,176,25],[28,0,176,28],[38,0,176,38],[39,0,176,39],[53,0,176,53],[54,0,176,54],[58,0,176,58],[59,0,176,59],[66,0,176,66],[68,0,176,68],[69,0,176,69],[70,0,176,70]],[[8,0,177,8],[14,0,177,14],[27,0,177,27],[30,0,177,30],[33,0,177,33],[36,0,177,36],[40,0,177,40],[41,0,177,41],[48,0,177,48],[50,0,177,50],[53,0,177,53],[57,0,177,57],[58,0,177,58]],[[8,0,178,8],[13,0,178,13],[14,0,178,14],[26,0,178,26],[27,0,178,27],[31,0,178,31],[33,0,178,33],[41,0,178,41],[42,0,178,42],[43,0,178,43]],[[8,0,179,8],[13,0,179,13],[14,0,179,14],[26,0,179,26],[27,0,179,27],[34,0,179,34],[36,0,179,36],[47,0,179,47],[48,0,179,48],[49,0,179,49]],[[8,0,180,8],[13,0,180,13],[14,0,180,14],[26,0,180,26],[27,0,180,27],[39,0,180,39],[41,0,180,41],[54,0,180,54],[55,0,180,55],[56,0,180,56]],[[8,0,181,8],[15,0,181,15],[20,0,181,20],[21,0,181,21]],[[4,0,182,4],[5,0,182,5]],[[4,0,184,4]],[],[],[],[],[[7,0,189,7]],[[4,0,190,14],[44,0,190,54],[45,0,190,55],[49,0,190,89],[51,0,190,91],[59,0,190,108]],[[8,0,191,8],[14,0,191,14],[19,0,191,19],[22,0,191,22],[30,0,191,30],[31,0,191,31],[44,0,191,44],[45,0,191,45],[58,0,191,58],[59,0,191,59],[62,0,191,62],[63,0,191,63],[64,0,191,64]],[[8,0,192,8],[12,0,192,12],[20,0,192,20],[23,0,192,23],[38,0,192,38],[39,0,192,39]],[[8,0,193,8],[12,0,193,12],[16,0,193,16],[17,0,193,17],[22,0,193,22],[24,0,193,24],[27,0,193,27],[28,0,193,28],[30,0,193,30]],[[12,0,194,12],[20,0,194,20],[23,0,194,23],[39,0,194,39],[42,0,194,42],[46,0,194,46],[47,0,194,47],[52,0,194,52],[54,0,194,54],[55,0,194,55],[63,0,194,63],[64,0,194,64],[66,0,194,66],[67,0,194,67],[68,0,194,68]],[[9,0,195,9]],[[8,0,196,8],[14,0,196,14],[27,0,196,27],[30,0,196,30],[34,0,196,34],[35,0,196,35],[39,0,196,39],[41,0,196,41],[42,0,196,42]],[[8,0,197,8],[13,0,197,13],[14,0,197,14],[26,0,197,26],[27,0,197,27],[31,0,197,31],[33,0,197,33],[41,0,197,41],[42,0,197,42],[43,0,197,43]],[[8,0,198,8],[12,0,198,12],[25,0,198,25],[27,0,198,27]],[[12,0,199,12],[17,0,199,17],[18,0,199,18],[30,0,199,30],[31,0,199,31],[43,0,199,43],[45,0,199,45],[58,0,199,58],[59,0,199,59],[60,0,199,60]],[[9,0,200,9]],[[8,0,201,8],[15,0,201,15],[20,0,201,20],[21,0,201,21]],[[4,0,202,4],[5,0,202,5]],[[4,0,204,4]],[],[],[],[[7,0,208,7]],[[4,0,209,14],[46,0,209,56],[47,0,209,57],[51,0,209,93],[53,0,209,95],[61,0,209,112]],[[8,0,210,8],[14,0,210,14],[19,0,210,19],[22,0,210,22],[30,0,210,30],[31,0,210,31],[44,0,210,44],[45,0,210,45],[58,0,210,58],[59,0,210,59],[62,0,210,62],[63,0,210,63],[64,0,210,64]],[[8,0,211,8],[12,0,211,12],[20,0,211,20],[23,0,211,23],[28,0,211,28],[29,0,211,29]],[[8,0,212,8],[12,0,212,12],[16,0,212,16],[17,0,212,17],[22,0,212,22],[24,0,212,24],[27,0,212,27],[28,0,212,28],[30,0,212,30]],[[12,0,213,12],[20,0,213,20],[23,0,213,23],[29,0,213,29],[32,0,213,32],[36,0,213,36],[37,0,213,37],[42,0,213,42],[44,0,213,44],[45,0,213,45],[53,0,213,53],[54,0,213,54],[56,0,213,56],[57,0,213,57],[58,0,213,58]],[[9,0,214,9]],[[8,0,215,8],[13,0,215,13],[14,0,215,14],[26,0,215,26],[27,0,215,27],[31,0,215,31],[33,0,215,33],[41,0,215,41],[42,0,215,42],[43,0,215,43]],[[8,0,216,8],[15,0,216,15],[20,0,216,20],[21,0,216,21]],[[4,0,217,4],[5,0,217,5]],[[1,0,219,1]]],"sourcesContent":["import {AbstractMessageParser} from './abstract-message-parser';\r\nimport {ParsedMessage} from './parsed-message';\r\nimport {ParsedMessagePartStartTag} from './parsed-message-part-start-tag';\r\nimport {ParsedMessagePartEndTag} from './parsed-message-part-end-tag';\r\nimport {ParsedMessagePartPlaceholder} from './parsed-message-part-placeholder';\r\nimport {TagMapping} from './tag-mapping';\r\nimport {ParsedMessagePartEmptyTag} from './parsed-message-part-empty-tag';\r\nimport {ParsedMessagePartICUMessageRef} from './parsed-message-part-icu-message-ref';\r\nimport {ParsedMessagePartType} from './parsed-message-part';\r\nimport {ParsedMessagePartText} from './parsed-message-part-text';\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 1.2\r\n */\r\nexport class XliffMessageParser extends AbstractMessageParser {\r\n\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    protected processStartElement(elementNode: Element, message: ParsedMessage): boolean {\r\n        const tagName = elementNode.tagName;\r\n        const tagMapping = new TagMapping();\r\n        if (tagName === 'x') {\r\n            // placeholder are like <x id=\"INTERPOLATION\"/> or <x id=\"INTERPOLATION_1\">\r\n            const id = elementNode.getAttribute('id');\r\n            if (!id) {\r\n                return; // should not happen\r\n            }\r\n            if (id.startsWith('INTERPOLATION')) {\r\n                const index = this.parsePlaceholderIndexFromId(id);\r\n                message.addPlaceholder(index, null);\r\n            } else if (id.startsWith('ICU')) {\r\n                const index = this.parseICUMessageRefIndexFromId(id);\r\n                message.addICUMessageRef(index, null);\r\n            } else if (id.startsWith('START_')) {\r\n                const normalizedTagName = tagMapping.getTagnameFromStartTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    const idcount = this.parseIdCountFromName(id);\r\n                    message.addStartTag(normalizedTagName, idcount);\r\n                }\r\n            } else if (id.startsWith('CLOSE_')) {\r\n                const normalizedTagName = tagMapping.getTagnameFromCloseTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    message.addEndTag(normalizedTagName);\r\n                }\r\n            } else if (tagMapping.isEmptyTagPlaceholderName(id)) {\r\n                const normalizedTagName = tagMapping.getTagnameFromEmptyTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    const idcount = this.parseIdCountFromName(id);\r\n                    message.addEmptyTag(normalizedTagName, idcount);\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    protected processEndElement(elementNode: Element, message: ParsedMessage) {\r\n    }\r\n\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param id id\r\n     * @return index\r\n     */\r\n    private parsePlaceholderIndexFromId(id: string): number {\r\n        let indexString = '';\r\n\r\n        if (id === 'INTERPOLATION') {\r\n            indexString = '0';\r\n        } else {\r\n            indexString = id.substring('INTERPOLATION_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    }\r\n\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param id id\r\n     * @return id as number\r\n     */\r\n    private parseICUMessageRefIndexFromId(id: string): number {\r\n        let indexString = '';\r\n\r\n        if (id === 'ICU') {\r\n            indexString = '0';\r\n        } else {\r\n            indexString = id.substring('ICU_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    }\r\n\r\n    protected addXmlRepresentationToRoot(message: ParsedMessage, rootElem: Element) {\r\n        message.parts().forEach((part) => {\r\n            let child: Node;\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.TEXT:\r\n                    child = this.createXmlRepresentationOfTextPart(<ParsedMessagePartText> part, rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.START_TAG:\r\n                    child = this.createXmlRepresentationOfStartTagPart((<ParsedMessagePartStartTag>part), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    child = this.createXmlRepresentationOfEndTagPart((<ParsedMessagePartEndTag>part), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.EMPTY_TAG:\r\n                    child = this.createXmlRepresentationOfEmptyTagPart((<ParsedMessagePartEmptyTag>part), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.PLACEHOLDER:\r\n                    child = this.createXmlRepresentationOfPlaceholderPart((<ParsedMessagePartPlaceholder>part), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                    child = this.createXmlRepresentationOfICUMessageRefPart((<ParsedMessagePartICUMessageRef>part), rootElem);\r\n                    break;\r\n            }\r\n            if (child) {\r\n                rootElem.appendChild(child);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    protected createXmlRepresentationOfStartTagPart(part: ParsedMessagePartStartTag, rootElem: Element): Node {\r\n        const xElem = rootElem.ownerDocument.createElement('x');\r\n        const tagMapping = new TagMapping();\r\n        const idAttrib = tagMapping.getStartTagPlaceholderName(part.tagName(), part.idCounter());\r\n        const ctypeAttrib = tagMapping.getCtypeForTag(part.tagName());\r\n        const equivTextAttr = '<' + part.tagName() + '>';\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        xElem.setAttribute('equiv-text', equivTextAttr);\r\n        return xElem;\r\n    }\r\n\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    protected createXmlRepresentationOfEndTagPart(part: ParsedMessagePartEndTag, rootElem: Element): Node {\r\n        const xElem = rootElem.ownerDocument.createElement('x');\r\n        const tagMapping = new TagMapping();\r\n        const idAttrib = tagMapping.getCloseTagPlaceholderName(part.tagName());\r\n        const ctypeAttrib = 'x-' + part.tagName();\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        return xElem;\r\n    }\r\n\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    protected createXmlRepresentationOfEmptyTagPart(part: ParsedMessagePartEmptyTag, rootElem: Element): Node {\r\n        const xElem = rootElem.ownerDocument.createElement('x');\r\n        const tagMapping = new TagMapping();\r\n        const idAttrib = tagMapping.getEmptyTagPlaceholderName(part.tagName(), part.idCounter());\r\n        const ctypeAttrib = tagMapping.getCtypeForTag(part.tagName());\r\n        const equivTextAttr = '<' + part.tagName() + '/>';\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        xElem.setAttribute('equiv-text', equivTextAttr);\r\n        return xElem;\r\n    }\r\n\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an empty <x/>-Element with attribute id=\"INTERPOLATION\" or id=\"INTERPOLATION_n\"\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    protected createXmlRepresentationOfPlaceholderPart(part: ParsedMessagePartPlaceholder, rootElem: Element): Node {\r\n        const xElem = rootElem.ownerDocument.createElement('x');\r\n        let idAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            idAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        const equivTextAttr = part.disp();\r\n        xElem.setAttribute('id', idAttrib);\r\n        if (equivTextAttr) {\r\n            xElem.setAttribute('equiv-text', equivTextAttr);\r\n        }\r\n        return xElem;\r\n    }\r\n\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    protected createXmlRepresentationOfICUMessageRefPart(part: ParsedMessagePartICUMessageRef, rootElem: Element): Node {\r\n        const xElem = rootElem.ownerDocument.createElement('x');\r\n        let idAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            idAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        xElem.setAttribute('id', idAttrib);\r\n        return xElem;\r\n    }\r\n\r\n}\r\n"]},"resolvedIds":{"./parsed-message-part":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./tag-mapping":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\tag-mapping.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./abstract-message-parser":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-message-parser.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":56910,"body":[{"type":"ImportDeclaration","start":0,"end":76,"specifiers":[{"type":"ImportSpecifier","start":9,"end":18,"imported":{"type":"Identifier","start":9,"end":18,"name":"STATE_NEW"},"local":{"type":"Identifier","start":9,"end":18,"name":"STATE_NEW"}},{"type":"ImportSpecifier","start":20,"end":36,"imported":{"type":"Identifier","start":20,"end":36,"name":"STATE_TRANSLATED"},"local":{"type":"Identifier","start":20,"end":36,"name":"STATE_TRANSLATED"}},{"type":"ImportSpecifier","start":38,"end":49,"imported":{"type":"Identifier","start":38,"end":49,"name":"STATE_FINAL"},"local":{"type":"Identifier","start":38,"end":49,"name":"STATE_FINAL"}}],"source":{"type":"Literal","start":57,"end":75,"value":"../api/constants","raw":"'../api/constants'"}},{"type":"ImportDeclaration","start":78,"end":125,"specifiers":[{"type":"ImportSpecifier","start":87,"end":99,"imported":{"type":"Identifier","start":87,"end":99,"name":"DOMUtilities"},"local":{"type":"Identifier","start":87,"end":99,"name":"DOMUtilities"}}],"source":{"type":"Literal","start":107,"end":124,"value":"./dom-utilities","raw":"'./dom-utilities'"}},{"type":"ImportDeclaration","start":127,"end":185,"specifiers":[{"type":"ImportSpecifier","start":136,"end":153,"imported":{"type":"Identifier","start":136,"end":153,"name":"AbstractTransUnit"},"local":{"type":"Identifier","start":136,"end":153,"name":"AbstractTransUnit"}}],"source":{"type":"Literal","start":161,"end":184,"value":"./abstract-trans-unit","raw":"'./abstract-trans-unit'"}},{"type":"ImportDeclaration","start":187,"end":247,"specifiers":[{"type":"ImportSpecifier","start":196,"end":214,"imported":{"type":"Identifier","start":196,"end":214,"name":"XliffMessageParser"},"local":{"type":"Identifier","start":196,"end":214,"name":"XliffMessageParser"}}],"source":{"type":"Literal","start":222,"end":246,"value":"./xliff-message-parser","raw":"'./xliff-message-parser'"}},{"type":"ImportDeclaration","start":249,"end":293,"specifiers":[{"type":"ImportSpecifier","start":258,"end":275,"imported":{"type":"Identifier","start":258,"end":275,"name":"isNullOrUndefined"},"local":{"type":"Identifier","start":258,"end":275,"name":"isNullOrUndefined"}}],"source":{"type":"Literal","start":283,"end":292,"value":"is-what","raw":"'is-what'"}},{"type":"ExportNamedDeclaration","start":387,"end":17318,"declaration":{"type":"ClassDeclaration","start":394,"end":17318,"id":{"type":"Identifier","start":400,"end":414,"name":"XliffTransUnit"},"superClass":{"type":"Identifier","start":423,"end":440,"name":"AbstractTransUnit"},"body":{"type":"ClassBody","start":441,"end":17318,"body":[{"type":"MethodDefinition","start":448,"end":566,"static":false,"computed":false,"key":{"type":"Identifier","start":448,"end":459,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":459,"end":566,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":460,"end":468,"name":"_element"},{"type":"Identifier","start":470,"end":473,"name":"_id"},{"type":"Identifier","start":475,"end":499,"name":"_translationMessagesFile"}],"body":{"type":"BlockStatement","start":501,"end":566,"body":[{"type":"ExpressionStatement","start":512,"end":559,"expression":{"type":"CallExpression","start":512,"end":558,"callee":{"type":"Super","start":512,"end":517},"arguments":[{"type":"Identifier","start":518,"end":526,"name":"_element"},{"type":"Identifier","start":528,"end":531,"name":"_id"},{"type":"Identifier","start":533,"end":557,"name":"_translationMessagesFile"}],"optional":false}}]}}},{"type":"MethodDefinition","start":572,"end":750,"static":false,"computed":false,"key":{"type":"Identifier","start":572,"end":585,"name":"sourceContent"},"kind":"method","value":{"type":"FunctionExpression","start":585,"end":750,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":588,"end":750,"body":[{"type":"VariableDeclaration","start":599,"end":684,"declarations":[{"type":"VariableDeclarator","start":605,"end":683,"id":{"type":"Identifier","start":605,"end":618,"name":"sourceElement"},"init":{"type":"CallExpression","start":621,"end":683,"callee":{"type":"MemberExpression","start":621,"end":658,"object":{"type":"Identifier","start":621,"end":633,"name":"DOMUtilities"},"property":{"type":"Identifier","start":634,"end":658,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":659,"end":672,"object":{"type":"ThisExpression","start":659,"end":663},"property":{"type":"Identifier","start":664,"end":672,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":674,"end":682,"value":"source","raw":"'source'"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":694,"end":743,"argument":{"type":"CallExpression","start":701,"end":742,"callee":{"type":"MemberExpression","start":701,"end":727,"object":{"type":"Identifier","start":701,"end":713,"name":"DOMUtilities"},"property":{"type":"Identifier","start":714,"end":727,"name":"getXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":728,"end":741,"name":"sourceElement"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1000,"end":1416,"static":false,"computed":false,"key":{"type":"Identifier","start":1000,"end":1016,"name":"setSourceContent"},"kind":"method","value":{"type":"FunctionExpression","start":1016,"end":1416,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1017,"end":1027,"name":"newContent"}],"body":{"type":"BlockStatement","start":1029,"end":1416,"body":[{"type":"VariableDeclaration","start":1040,"end":1116,"declarations":[{"type":"VariableDeclarator","start":1044,"end":1115,"id":{"type":"Identifier","start":1044,"end":1050,"name":"source"},"init":{"type":"CallExpression","start":1053,"end":1115,"callee":{"type":"MemberExpression","start":1053,"end":1090,"object":{"type":"Identifier","start":1053,"end":1065,"name":"DOMUtilities"},"property":{"type":"Identifier","start":1066,"end":1090,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":1091,"end":1104,"object":{"type":"ThisExpression","start":1091,"end":1095},"property":{"type":"Identifier","start":1096,"end":1104,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":1106,"end":1114,"value":"source","raw":"'source'"}],"optional":false}}],"kind":"let"},{"type":"IfStatement","start":1126,"end":1337,"test":{"type":"UnaryExpression","start":1130,"end":1137,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":1131,"end":1137,"name":"source"}},"consequent":{"type":"BlockStatement","start":1139,"end":1337,"body":[{"type":"ExpressionStatement","start":1238,"end":1326,"expression":{"type":"AssignmentExpression","start":1238,"end":1325,"operator":"=","left":{"type":"Identifier","start":1238,"end":1244,"name":"source"},"right":{"type":"CallExpression","start":1247,"end":1325,"callee":{"type":"MemberExpression","start":1247,"end":1272,"object":{"type":"MemberExpression","start":1247,"end":1260,"object":{"type":"ThisExpression","start":1247,"end":1251},"property":{"type":"Identifier","start":1252,"end":1260,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1261,"end":1272,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1273,"end":1324,"callee":{"type":"MemberExpression","start":1273,"end":1314,"object":{"type":"MemberExpression","start":1273,"end":1300,"object":{"type":"MemberExpression","start":1273,"end":1286,"object":{"type":"ThisExpression","start":1273,"end":1277},"property":{"type":"Identifier","start":1278,"end":1286,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1287,"end":1300,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1301,"end":1314,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1315,"end":1323,"value":"source","raw":"'source'"}],"optional":false}],"optional":false}}}]},"alternate":null},{"type":"ExpressionStatement","start":1347,"end":1409,"expression":{"type":"CallExpression","start":1347,"end":1408,"callee":{"type":"MemberExpression","start":1347,"end":1388,"object":{"type":"Identifier","start":1347,"end":1359,"name":"DOMUtilities"},"property":{"type":"Identifier","start":1360,"end":1388,"name":"replaceContentWithXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1389,"end":1395,"name":"source"},{"type":"Identifier","start":1397,"end":1407,"name":"newContent"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1494,"end":1560,"static":false,"computed":false,"key":{"type":"Identifier","start":1494,"end":1507,"name":"messageParser"},"kind":"method","value":{"type":"FunctionExpression","start":1507,"end":1560,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1510,"end":1560,"body":[{"type":"ReturnStatement","start":1521,"end":1553,"argument":{"type":"NewExpression","start":1528,"end":1552,"callee":{"type":"Identifier","start":1532,"end":1550,"name":"XliffMessageParser"},"arguments":[]}}]}}},{"type":"MethodDefinition","start":1666,"end":1989,"static":false,"computed":false,"key":{"type":"Identifier","start":1666,"end":1695,"name":"createSourceContentNormalized"},"kind":"method","value":{"type":"FunctionExpression","start":1695,"end":1989,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1698,"end":1989,"body":[{"type":"VariableDeclaration","start":1709,"end":1794,"declarations":[{"type":"VariableDeclarator","start":1715,"end":1793,"id":{"type":"Identifier","start":1715,"end":1728,"name":"sourceElement"},"init":{"type":"CallExpression","start":1731,"end":1793,"callee":{"type":"MemberExpression","start":1731,"end":1768,"object":{"type":"Identifier","start":1731,"end":1743,"name":"DOMUtilities"},"property":{"type":"Identifier","start":1744,"end":1768,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":1769,"end":1782,"object":{"type":"ThisExpression","start":1769,"end":1773},"property":{"type":"Identifier","start":1774,"end":1782,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":1784,"end":1792,"value":"source","raw":"'source'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1804,"end":1982,"test":{"type":"Identifier","start":1808,"end":1821,"name":"sourceElement"},"consequent":{"type":"BlockStatement","start":1823,"end":1929,"body":[{"type":"ReturnStatement","start":1838,"end":1918,"argument":{"type":"CallExpression","start":1845,"end":1917,"callee":{"type":"MemberExpression","start":1845,"end":1896,"object":{"type":"CallExpression","start":1845,"end":1865,"callee":{"type":"MemberExpression","start":1845,"end":1863,"object":{"type":"ThisExpression","start":1845,"end":1849},"property":{"type":"Identifier","start":1850,"end":1863,"name":"messageParser"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":1866,"end":1896,"name":"createNormalizedMessageFromXML"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1897,"end":1910,"name":"sourceElement"},{"type":"Literal","start":1912,"end":1916,"value":null,"raw":"null"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":1944,"end":1982,"body":[{"type":"ReturnStatement","start":1959,"end":1971,"argument":{"type":"Literal","start":1966,"end":1970,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":2104,"end":2282,"static":false,"computed":false,"key":{"type":"Identifier","start":2104,"end":2117,"name":"targetContent"},"kind":"method","value":{"type":"FunctionExpression","start":2117,"end":2282,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2120,"end":2282,"body":[{"type":"VariableDeclaration","start":2131,"end":2216,"declarations":[{"type":"VariableDeclarator","start":2137,"end":2215,"id":{"type":"Identifier","start":2137,"end":2150,"name":"targetElement"},"init":{"type":"CallExpression","start":2153,"end":2215,"callee":{"type":"MemberExpression","start":2153,"end":2190,"object":{"type":"Identifier","start":2153,"end":2165,"name":"DOMUtilities"},"property":{"type":"Identifier","start":2166,"end":2190,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2191,"end":2204,"object":{"type":"ThisExpression","start":2191,"end":2195},"property":{"type":"Identifier","start":2196,"end":2204,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":2206,"end":2214,"value":"target","raw":"'target'"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":2226,"end":2275,"argument":{"type":"CallExpression","start":2233,"end":2274,"callee":{"type":"MemberExpression","start":2233,"end":2259,"object":{"type":"Identifier","start":2233,"end":2245,"name":"DOMUtilities"},"property":{"type":"Identifier","start":2246,"end":2259,"name":"getXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2260,"end":2273,"name":"targetElement"}],"optional":false}}]}}},{"type":"MethodDefinition","start":2462,"end":2711,"static":false,"computed":false,"key":{"type":"Identifier","start":2462,"end":2485,"name":"targetContentNormalized"},"kind":"method","value":{"type":"FunctionExpression","start":2485,"end":2711,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2488,"end":2711,"body":[{"type":"VariableDeclaration","start":2499,"end":2584,"declarations":[{"type":"VariableDeclarator","start":2505,"end":2583,"id":{"type":"Identifier","start":2505,"end":2518,"name":"targetElement"},"init":{"type":"CallExpression","start":2521,"end":2583,"callee":{"type":"MemberExpression","start":2521,"end":2558,"object":{"type":"Identifier","start":2521,"end":2533,"name":"DOMUtilities"},"property":{"type":"Identifier","start":2534,"end":2558,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2559,"end":2572,"object":{"type":"ThisExpression","start":2559,"end":2563},"property":{"type":"Identifier","start":2564,"end":2572,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":2574,"end":2582,"value":"target","raw":"'target'"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":2594,"end":2704,"argument":{"type":"CallExpression","start":2601,"end":2703,"callee":{"type":"MemberExpression","start":2601,"end":2656,"object":{"type":"NewExpression","start":2601,"end":2625,"callee":{"type":"Identifier","start":2605,"end":2623,"name":"XliffMessageParser"},"arguments":[]},"property":{"type":"Identifier","start":2626,"end":2656,"name":"createNormalizedMessageFromXML"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2657,"end":2670,"name":"targetElement"},{"type":"CallExpression","start":2672,"end":2702,"callee":{"type":"MemberExpression","start":2672,"end":2700,"object":{"type":"ThisExpression","start":2672,"end":2676},"property":{"type":"Identifier","start":2677,"end":2700,"name":"sourceContentNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":2790,"end":3064,"static":false,"computed":false,"key":{"type":"Identifier","start":2790,"end":2807,"name":"nativeTargetState"},"kind":"method","value":{"type":"FunctionExpression","start":2807,"end":3064,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2810,"end":3064,"body":[{"type":"VariableDeclaration","start":2821,"end":2906,"declarations":[{"type":"VariableDeclarator","start":2827,"end":2905,"id":{"type":"Identifier","start":2827,"end":2840,"name":"targetElement"},"init":{"type":"CallExpression","start":2843,"end":2905,"callee":{"type":"MemberExpression","start":2843,"end":2880,"object":{"type":"Identifier","start":2843,"end":2855,"name":"DOMUtilities"},"property":{"type":"Identifier","start":2856,"end":2880,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2881,"end":2894,"object":{"type":"ThisExpression","start":2881,"end":2885},"property":{"type":"Identifier","start":2886,"end":2894,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":2896,"end":2904,"value":"target","raw":"'target'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":2916,"end":3057,"test":{"type":"Identifier","start":2920,"end":2933,"name":"targetElement"},"consequent":{"type":"BlockStatement","start":2935,"end":3004,"body":[{"type":"ReturnStatement","start":2950,"end":2993,"argument":{"type":"CallExpression","start":2957,"end":2992,"callee":{"type":"MemberExpression","start":2957,"end":2983,"object":{"type":"Identifier","start":2957,"end":2970,"name":"targetElement"},"property":{"type":"Identifier","start":2971,"end":2983,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2984,"end":2991,"value":"state","raw":"'state'"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":3019,"end":3057,"body":[{"type":"ReturnStatement","start":3034,"end":3046,"argument":{"type":"Literal","start":3041,"end":3045,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":3153,"end":3394,"static":false,"computed":false,"key":{"type":"Identifier","start":3153,"end":3173,"name":"setNativeTargetState"},"kind":"method","value":{"type":"FunctionExpression","start":3173,"end":3394,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3174,"end":3185,"name":"nativeState"}],"body":{"type":"BlockStatement","start":3187,"end":3394,"body":[{"type":"VariableDeclaration","start":3198,"end":3283,"declarations":[{"type":"VariableDeclarator","start":3204,"end":3282,"id":{"type":"Identifier","start":3204,"end":3217,"name":"targetElement"},"init":{"type":"CallExpression","start":3220,"end":3282,"callee":{"type":"MemberExpression","start":3220,"end":3257,"object":{"type":"Identifier","start":3220,"end":3232,"name":"DOMUtilities"},"property":{"type":"Identifier","start":3233,"end":3257,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3258,"end":3271,"object":{"type":"ThisExpression","start":3258,"end":3262},"property":{"type":"Identifier","start":3263,"end":3271,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":3273,"end":3281,"value":"target","raw":"'target'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3293,"end":3387,"test":{"type":"Identifier","start":3297,"end":3310,"name":"targetElement"},"consequent":{"type":"BlockStatement","start":3312,"end":3387,"body":[{"type":"ExpressionStatement","start":3327,"end":3376,"expression":{"type":"CallExpression","start":3327,"end":3375,"callee":{"type":"MemberExpression","start":3327,"end":3353,"object":{"type":"Identifier","start":3327,"end":3340,"name":"targetElement"},"property":{"type":"Identifier","start":3341,"end":3353,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3354,"end":3361,"value":"state","raw":"'state'"},{"type":"Identifier","start":3363,"end":3374,"name":"nativeState"}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":3711,"end":4065,"static":false,"computed":false,"key":{"type":"Identifier","start":3711,"end":3732,"name":"mapStateToNativeState"},"kind":"method","value":{"type":"FunctionExpression","start":3732,"end":4065,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3733,"end":3738,"name":"state"}],"body":{"type":"BlockStatement","start":3740,"end":4065,"body":[{"type":"SwitchStatement","start":3751,"end":4058,"discriminant":{"type":"Identifier","start":3759,"end":3764,"name":"state"},"cases":[{"type":"SwitchCase","start":3781,"end":3827,"consequent":[{"type":"ReturnStatement","start":3814,"end":3827,"argument":{"type":"Literal","start":3821,"end":3826,"value":"new","raw":"'new'"}}],"test":{"type":"Identifier","start":3786,"end":3795,"name":"STATE_NEW"}},{"type":"SwitchCase","start":3841,"end":3901,"consequent":[{"type":"ReturnStatement","start":3881,"end":3901,"argument":{"type":"Literal","start":3888,"end":3900,"value":"translated","raw":"'translated'"}}],"test":{"type":"Identifier","start":3846,"end":3862,"name":"STATE_TRANSLATED"}},{"type":"SwitchCase","start":3915,"end":3965,"consequent":[{"type":"ReturnStatement","start":3950,"end":3965,"argument":{"type":"Literal","start":3957,"end":3964,"value":"final","raw":"'final'"}}],"test":{"type":"Identifier","start":3920,"end":3931,"name":"STATE_FINAL"}},{"type":"SwitchCase","start":3979,"end":4047,"consequent":[{"type":"ThrowStatement","start":4005,"end":4047,"argument":{"type":"NewExpression","start":4011,"end":4046,"callee":{"type":"Identifier","start":4015,"end":4020,"name":"Error"},"arguments":[{"type":"BinaryExpression","start":4021,"end":4045,"left":{"type":"Literal","start":4021,"end":4037,"value":"unknown state ","raw":"'unknown state '"},"operator":"+","right":{"type":"Identifier","start":4040,"end":4045,"name":"state"}}]}}],"test":null}]}]}}},{"type":"MethodDefinition","start":4262,"end":5156,"static":false,"computed":false,"key":{"type":"Identifier","start":4262,"end":4283,"name":"mapNativeStateToState"},"kind":"method","value":{"type":"FunctionExpression","start":4283,"end":5156,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4284,"end":4295,"name":"nativeState"}],"body":{"type":"BlockStatement","start":4297,"end":5156,"body":[{"type":"SwitchStatement","start":4308,"end":5149,"discriminant":{"type":"Identifier","start":4316,"end":4327,"name":"nativeState"},"cases":[{"type":"SwitchCase","start":4344,"end":4390,"consequent":[{"type":"ReturnStatement","start":4373,"end":4390,"argument":{"type":"Identifier","start":4380,"end":4389,"name":"STATE_NEW"}}],"test":{"type":"Literal","start":4349,"end":4354,"value":"new","raw":"'new'"}},{"type":"SwitchCase","start":4404,"end":4464,"consequent":[{"type":"ReturnStatement","start":4447,"end":4464,"argument":{"type":"Identifier","start":4454,"end":4463,"name":"STATE_NEW"}}],"test":{"type":"Literal","start":4409,"end":4428,"value":"needs-translation","raw":"'needs-translation'"}},{"type":"SwitchCase","start":4478,"end":4538,"consequent":[{"type":"ReturnStatement","start":4514,"end":4538,"argument":{"type":"Identifier","start":4521,"end":4537,"name":"STATE_TRANSLATED"}}],"test":{"type":"Literal","start":4483,"end":4495,"value":"translated","raw":"'translated'"}},{"type":"SwitchCase","start":4552,"end":4618,"consequent":[{"type":"ReturnStatement","start":4594,"end":4618,"argument":{"type":"Identifier","start":4601,"end":4617,"name":"STATE_TRANSLATED"}}],"test":{"type":"Literal","start":4557,"end":4575,"value":"needs-adaptation","raw":"'needs-adaptation'"}},{"type":"SwitchCase","start":4632,"end":4692,"consequent":[{"type":"ReturnStatement","start":4668,"end":4692,"argument":{"type":"Identifier","start":4675,"end":4691,"name":"STATE_TRANSLATED"}}],"test":{"type":"Literal","start":4637,"end":4649,"value":"needs-l10n","raw":"'needs-l10n'"}},{"type":"SwitchCase","start":4706,"end":4779,"consequent":[{"type":"ReturnStatement","start":4755,"end":4779,"argument":{"type":"Identifier","start":4762,"end":4778,"name":"STATE_TRANSLATED"}}],"test":{"type":"Literal","start":4711,"end":4736,"value":"needs-review-adaptation","raw":"'needs-review-adaptation'"}},{"type":"SwitchCase","start":4793,"end":4860,"consequent":[{"type":"ReturnStatement","start":4836,"end":4860,"argument":{"type":"Identifier","start":4843,"end":4859,"name":"STATE_TRANSLATED"}}],"test":{"type":"Literal","start":4798,"end":4817,"value":"needs-review-l10n","raw":"'needs-review-l10n'"}},{"type":"SwitchCase","start":4874,"end":4948,"consequent":[{"type":"ReturnStatement","start":4924,"end":4948,"argument":{"type":"Identifier","start":4931,"end":4947,"name":"STATE_TRANSLATED"}}],"test":{"type":"Literal","start":4879,"end":4905,"value":"needs-review-translation","raw":"'needs-review-translation'"}},{"type":"SwitchCase","start":4962,"end":5012,"consequent":[{"type":"ReturnStatement","start":4993,"end":5012,"argument":{"type":"Identifier","start":5000,"end":5011,"name":"STATE_FINAL"}}],"test":{"type":"Literal","start":4967,"end":4974,"value":"final","raw":"'final'"}},{"type":"SwitchCase","start":5026,"end":5081,"consequent":[{"type":"ReturnStatement","start":5062,"end":5081,"argument":{"type":"Identifier","start":5069,"end":5080,"name":"STATE_FINAL"}}],"test":{"type":"Literal","start":5031,"end":5043,"value":"signed-off","raw":"'signed-off'"}},{"type":"SwitchCase","start":5095,"end":5138,"consequent":[{"type":"ReturnStatement","start":5121,"end":5138,"argument":{"type":"Identifier","start":5128,"end":5137,"name":"STATE_NEW"}}],"test":null}]}]}}},{"type":"MethodDefinition","start":5594,"end":6749,"static":false,"computed":false,"key":{"type":"Identifier","start":5594,"end":5610,"name":"sourceReferences"},"kind":"method","value":{"type":"FunctionExpression","start":5610,"end":6749,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":5613,"end":6749,"body":[{"type":"VariableDeclaration","start":5624,"end":5699,"declarations":[{"type":"VariableDeclarator","start":5630,"end":5698,"id":{"type":"Identifier","start":5630,"end":5644,"name":"sourceElements"},"init":{"type":"CallExpression","start":5647,"end":5698,"callee":{"type":"MemberExpression","start":5647,"end":5681,"object":{"type":"MemberExpression","start":5647,"end":5660,"object":{"type":"ThisExpression","start":5647,"end":5651},"property":{"type":"Identifier","start":5652,"end":5660,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5661,"end":5681,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5682,"end":5697,"value":"context-group","raw":"'context-group'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":5709,"end":5731,"declarations":[{"type":"VariableDeclarator","start":5715,"end":5730,"id":{"type":"Identifier","start":5715,"end":5725,"name":"sourceRefs"},"init":{"type":"ArrayExpression","start":5728,"end":5730,"elements":[]}}],"kind":"const"},{"type":"ForStatement","start":5741,"end":6714,"init":{"type":"VariableDeclaration","start":5746,"end":5755,"declarations":[{"type":"VariableDeclarator","start":5750,"end":5755,"id":{"type":"Identifier","start":5750,"end":5751,"name":"i"},"init":{"type":"Literal","start":5754,"end":5755,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":5757,"end":5782,"left":{"type":"Identifier","start":5757,"end":5758,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":5761,"end":5782,"object":{"type":"Identifier","start":5761,"end":5775,"name":"sourceElements"},"property":{"type":"Identifier","start":5776,"end":5782,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":5784,"end":5787,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":5784,"end":5785,"name":"i"}},"body":{"type":"BlockStatement","start":5789,"end":6714,"body":[{"type":"VariableDeclaration","start":5804,"end":5840,"declarations":[{"type":"VariableDeclarator","start":5810,"end":5839,"id":{"type":"Identifier","start":5810,"end":5814,"name":"elem"},"init":{"type":"CallExpression","start":5817,"end":5839,"callee":{"type":"MemberExpression","start":5817,"end":5836,"object":{"type":"Identifier","start":5817,"end":5831,"name":"sourceElements"},"property":{"type":"Identifier","start":5832,"end":5836,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5837,"end":5838,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":5854,"end":6703,"test":{"type":"BinaryExpression","start":5858,"end":5901,"left":{"type":"CallExpression","start":5858,"end":5886,"callee":{"type":"MemberExpression","start":5858,"end":5875,"object":{"type":"Identifier","start":5858,"end":5862,"name":"elem"},"property":{"type":"Identifier","start":5863,"end":5875,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5876,"end":5885,"value":"purpose","raw":"'purpose'"}],"optional":false},"operator":"===","right":{"type":"Literal","start":5891,"end":5901,"value":"location","raw":"'location'"}},"consequent":{"type":"BlockStatement","start":5903,"end":6703,"body":[{"type":"VariableDeclaration","start":5922,"end":5983,"declarations":[{"type":"VariableDeclarator","start":5928,"end":5982,"id":{"type":"Identifier","start":5928,"end":5943,"name":"contextElements"},"init":{"type":"CallExpression","start":5946,"end":5982,"callee":{"type":"MemberExpression","start":5946,"end":5971,"object":{"type":"Identifier","start":5946,"end":5950,"name":"elem"},"property":{"type":"Identifier","start":5951,"end":5971,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5972,"end":5981,"value":"context","raw":"'context'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6001,"end":6023,"declarations":[{"type":"VariableDeclarator","start":6005,"end":6022,"id":{"type":"Identifier","start":6005,"end":6015,"name":"sourcefile"},"init":{"type":"Literal","start":6018,"end":6022,"value":null,"raw":"null"}}],"kind":"let"},{"type":"VariableDeclaration","start":6041,"end":6060,"declarations":[{"type":"VariableDeclarator","start":6045,"end":6059,"id":{"type":"Identifier","start":6045,"end":6055,"name":"linenumber"},"init":{"type":"Literal","start":6058,"end":6059,"value":0,"raw":"0"}}],"kind":"let"},{"type":"ForStatement","start":6078,"end":6602,"init":{"type":"VariableDeclaration","start":6083,"end":6092,"declarations":[{"type":"VariableDeclarator","start":6087,"end":6092,"id":{"type":"Identifier","start":6087,"end":6088,"name":"j"},"init":{"type":"Literal","start":6091,"end":6092,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":6094,"end":6120,"left":{"type":"Identifier","start":6094,"end":6095,"name":"j"},"operator":"<","right":{"type":"MemberExpression","start":6098,"end":6120,"object":{"type":"Identifier","start":6098,"end":6113,"name":"contextElements"},"property":{"type":"Identifier","start":6114,"end":6120,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":6122,"end":6125,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":6122,"end":6123,"name":"j"}},"body":{"type":"BlockStatement","start":6127,"end":6602,"body":[{"type":"VariableDeclaration","start":6150,"end":6194,"declarations":[{"type":"VariableDeclarator","start":6156,"end":6193,"id":{"type":"Identifier","start":6156,"end":6167,"name":"contextElem"},"init":{"type":"CallExpression","start":6170,"end":6193,"callee":{"type":"MemberExpression","start":6170,"end":6190,"object":{"type":"Identifier","start":6170,"end":6185,"name":"contextElements"},"property":{"type":"Identifier","start":6186,"end":6190,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6191,"end":6192,"name":"j"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":6216,"end":6378,"test":{"type":"BinaryExpression","start":6220,"end":6277,"left":{"type":"CallExpression","start":6220,"end":6260,"callee":{"type":"MemberExpression","start":6220,"end":6244,"object":{"type":"Identifier","start":6220,"end":6231,"name":"contextElem"},"property":{"type":"Identifier","start":6232,"end":6244,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6245,"end":6259,"value":"context-type","raw":"'context-type'"}],"optional":false},"operator":"===","right":{"type":"Literal","start":6265,"end":6277,"value":"sourcefile","raw":"'sourcefile'"}},"consequent":{"type":"BlockStatement","start":6279,"end":6378,"body":[{"type":"ExpressionStatement","start":6306,"end":6355,"expression":{"type":"AssignmentExpression","start":6306,"end":6354,"operator":"=","left":{"type":"Identifier","start":6306,"end":6316,"name":"sourcefile"},"right":{"type":"CallExpression","start":6319,"end":6354,"callee":{"type":"MemberExpression","start":6319,"end":6341,"object":{"type":"Identifier","start":6319,"end":6331,"name":"DOMUtilities"},"property":{"type":"Identifier","start":6332,"end":6341,"name":"getPCDATA"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6342,"end":6353,"name":"contextElem"}],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":6400,"end":6583,"test":{"type":"BinaryExpression","start":6404,"end":6461,"left":{"type":"CallExpression","start":6404,"end":6444,"callee":{"type":"MemberExpression","start":6404,"end":6428,"object":{"type":"Identifier","start":6404,"end":6415,"name":"contextElem"},"property":{"type":"Identifier","start":6416,"end":6428,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6429,"end":6443,"value":"context-type","raw":"'context-type'"}],"optional":false},"operator":"===","right":{"type":"Literal","start":6449,"end":6461,"value":"linenumber","raw":"'linenumber'"}},"consequent":{"type":"BlockStatement","start":6463,"end":6583,"body":[{"type":"ExpressionStatement","start":6490,"end":6560,"expression":{"type":"AssignmentExpression","start":6490,"end":6559,"operator":"=","left":{"type":"Identifier","start":6490,"end":6500,"name":"linenumber"},"right":{"type":"CallExpression","start":6503,"end":6559,"callee":{"type":"MemberExpression","start":6503,"end":6518,"object":{"type":"Identifier","start":6503,"end":6509,"name":"Number"},"property":{"type":"Identifier","start":6510,"end":6518,"name":"parseInt"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6519,"end":6554,"callee":{"type":"MemberExpression","start":6519,"end":6541,"object":{"type":"Identifier","start":6519,"end":6531,"name":"DOMUtilities"},"property":{"type":"Identifier","start":6532,"end":6541,"name":"getPCDATA"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6542,"end":6553,"name":"contextElem"}],"optional":false},{"type":"Literal","start":6556,"end":6558,"value":10,"raw":"10"}],"optional":false}}}]},"alternate":null}]}},{"type":"ExpressionStatement","start":6620,"end":6688,"expression":{"type":"CallExpression","start":6620,"end":6687,"callee":{"type":"MemberExpression","start":6620,"end":6635,"object":{"type":"Identifier","start":6620,"end":6630,"name":"sourceRefs"},"property":{"type":"Identifier","start":6631,"end":6635,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":6636,"end":6686,"properties":[{"type":"Property","start":6638,"end":6660,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":6638,"end":6648,"name":"sourcefile"},"value":{"type":"Identifier","start":6650,"end":6660,"name":"sourcefile"},"kind":"init"},{"type":"Property","start":6662,"end":6684,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":6662,"end":6672,"name":"linenumber"},"value":{"type":"Identifier","start":6674,"end":6684,"name":"linenumber"},"kind":"init"}]}],"optional":false}}]},"alternate":null}]}},{"type":"ReturnStatement","start":6724,"end":6742,"argument":{"type":"Identifier","start":6731,"end":6741,"name":"sourceRefs"}}]}}},{"type":"MethodDefinition","start":7017,"end":7996,"static":false,"computed":false,"key":{"type":"Identifier","start":7017,"end":7036,"name":"setSourceReferences"},"kind":"method","value":{"type":"FunctionExpression","start":7036,"end":7996,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7037,"end":7047,"name":"sourceRefs"}],"body":{"type":"BlockStatement","start":7049,"end":7996,"body":[{"type":"ExpressionStatement","start":7060,"end":7093,"expression":{"type":"CallExpression","start":7060,"end":7092,"callee":{"type":"MemberExpression","start":7060,"end":7090,"object":{"type":"ThisExpression","start":7060,"end":7064},"property":{"type":"Identifier","start":7065,"end":7090,"name":"removeAllSourceReferences"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ExpressionStatement","start":7103,"end":7989,"expression":{"type":"CallExpression","start":7103,"end":7988,"callee":{"type":"MemberExpression","start":7103,"end":7121,"object":{"type":"Identifier","start":7103,"end":7113,"name":"sourceRefs"},"property":{"type":"Identifier","start":7114,"end":7121,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":7122,"end":7987,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7123,"end":7126,"name":"ref"}],"body":{"type":"BlockStatement","start":7131,"end":7987,"body":[{"type":"VariableDeclaration","start":7146,"end":7226,"declarations":[{"type":"VariableDeclarator","start":7152,"end":7225,"id":{"type":"Identifier","start":7152,"end":7164,"name":"contextGroup"},"init":{"type":"CallExpression","start":7167,"end":7225,"callee":{"type":"MemberExpression","start":7167,"end":7208,"object":{"type":"MemberExpression","start":7167,"end":7194,"object":{"type":"MemberExpression","start":7167,"end":7180,"object":{"type":"ThisExpression","start":7167,"end":7171},"property":{"type":"Identifier","start":7172,"end":7180,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7181,"end":7194,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7195,"end":7208,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7209,"end":7224,"value":"context-group","raw":"'context-group'"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7240,"end":7289,"expression":{"type":"CallExpression","start":7240,"end":7288,"callee":{"type":"MemberExpression","start":7240,"end":7265,"object":{"type":"Identifier","start":7240,"end":7252,"name":"contextGroup"},"property":{"type":"Identifier","start":7253,"end":7265,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7266,"end":7275,"value":"purpose","raw":"'purpose'"},{"type":"Literal","start":7277,"end":7287,"value":"location","raw":"'location'"}],"optional":false}},{"type":"VariableDeclaration","start":7303,"end":7378,"declarations":[{"type":"VariableDeclarator","start":7309,"end":7377,"id":{"type":"Identifier","start":7309,"end":7322,"name":"contextSource"},"init":{"type":"CallExpression","start":7325,"end":7377,"callee":{"type":"MemberExpression","start":7325,"end":7366,"object":{"type":"MemberExpression","start":7325,"end":7352,"object":{"type":"MemberExpression","start":7325,"end":7338,"object":{"type":"ThisExpression","start":7325,"end":7329},"property":{"type":"Identifier","start":7330,"end":7338,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7339,"end":7352,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7353,"end":7366,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7367,"end":7376,"value":"context","raw":"'context'"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7392,"end":7449,"expression":{"type":"CallExpression","start":7392,"end":7448,"callee":{"type":"MemberExpression","start":7392,"end":7418,"object":{"type":"Identifier","start":7392,"end":7405,"name":"contextSource"},"property":{"type":"Identifier","start":7406,"end":7418,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7419,"end":7433,"value":"context-type","raw":"'context-type'"},{"type":"Literal","start":7435,"end":7447,"value":"sourcefile","raw":"'sourcefile'"}],"optional":false}},{"type":"ExpressionStatement","start":7463,"end":7549,"expression":{"type":"CallExpression","start":7463,"end":7548,"callee":{"type":"MemberExpression","start":7463,"end":7488,"object":{"type":"Identifier","start":7463,"end":7476,"name":"contextSource"},"property":{"type":"Identifier","start":7477,"end":7488,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7489,"end":7547,"callee":{"type":"MemberExpression","start":7489,"end":7531,"object":{"type":"MemberExpression","start":7489,"end":7516,"object":{"type":"MemberExpression","start":7489,"end":7502,"object":{"type":"ThisExpression","start":7489,"end":7493},"property":{"type":"Identifier","start":7494,"end":7502,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7503,"end":7516,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7517,"end":7531,"name":"createTextNode"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":7532,"end":7546,"object":{"type":"Identifier","start":7532,"end":7535,"name":"ref"},"property":{"type":"Identifier","start":7536,"end":7546,"name":"sourcefile"},"computed":false,"optional":false}],"optional":false}],"optional":false}},{"type":"VariableDeclaration","start":7563,"end":7636,"declarations":[{"type":"VariableDeclarator","start":7569,"end":7635,"id":{"type":"Identifier","start":7569,"end":7580,"name":"contextLine"},"init":{"type":"CallExpression","start":7583,"end":7635,"callee":{"type":"MemberExpression","start":7583,"end":7624,"object":{"type":"MemberExpression","start":7583,"end":7610,"object":{"type":"MemberExpression","start":7583,"end":7596,"object":{"type":"ThisExpression","start":7583,"end":7587},"property":{"type":"Identifier","start":7588,"end":7596,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7597,"end":7610,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7611,"end":7624,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7625,"end":7634,"value":"context","raw":"'context'"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7650,"end":7705,"expression":{"type":"CallExpression","start":7650,"end":7704,"callee":{"type":"MemberExpression","start":7650,"end":7674,"object":{"type":"Identifier","start":7650,"end":7661,"name":"contextLine"},"property":{"type":"Identifier","start":7662,"end":7674,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7675,"end":7689,"value":"context-type","raw":"'context-type'"},{"type":"Literal","start":7691,"end":7703,"value":"linenumber","raw":"'linenumber'"}],"optional":false}},{"type":"ExpressionStatement","start":7719,"end":7816,"expression":{"type":"CallExpression","start":7719,"end":7815,"callee":{"type":"MemberExpression","start":7719,"end":7742,"object":{"type":"Identifier","start":7719,"end":7730,"name":"contextLine"},"property":{"type":"Identifier","start":7731,"end":7742,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7743,"end":7814,"callee":{"type":"MemberExpression","start":7743,"end":7785,"object":{"type":"MemberExpression","start":7743,"end":7770,"object":{"type":"MemberExpression","start":7743,"end":7756,"object":{"type":"ThisExpression","start":7743,"end":7747},"property":{"type":"Identifier","start":7748,"end":7756,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7757,"end":7770,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7771,"end":7785,"name":"createTextNode"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7786,"end":7813,"callee":{"type":"MemberExpression","start":7786,"end":7809,"object":{"type":"MemberExpression","start":7786,"end":7800,"object":{"type":"Identifier","start":7786,"end":7789,"name":"ref"},"property":{"type":"Identifier","start":7790,"end":7800,"name":"linenumber"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7801,"end":7809,"name":"toString"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7810,"end":7812,"value":10,"raw":"10"}],"optional":false}],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":7830,"end":7870,"expression":{"type":"CallExpression","start":7830,"end":7869,"callee":{"type":"MemberExpression","start":7830,"end":7854,"object":{"type":"Identifier","start":7830,"end":7842,"name":"contextGroup"},"property":{"type":"Identifier","start":7843,"end":7854,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7855,"end":7868,"name":"contextSource"}],"optional":false}},{"type":"ExpressionStatement","start":7884,"end":7922,"expression":{"type":"CallExpression","start":7884,"end":7921,"callee":{"type":"MemberExpression","start":7884,"end":7908,"object":{"type":"Identifier","start":7884,"end":7896,"name":"contextGroup"},"property":{"type":"Identifier","start":7897,"end":7908,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7909,"end":7920,"name":"contextLine"}],"optional":false}},{"type":"ExpressionStatement","start":7936,"end":7976,"expression":{"type":"CallExpression","start":7936,"end":7975,"callee":{"type":"MemberExpression","start":7936,"end":7961,"object":{"type":"MemberExpression","start":7936,"end":7949,"object":{"type":"ThisExpression","start":7936,"end":7940},"property":{"type":"Identifier","start":7941,"end":7949,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7950,"end":7961,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7962,"end":7974,"name":"contextGroup"}],"optional":false}}]}}],"optional":false}}]}}},{"type":"MethodDefinition","start":8002,"end":8476,"static":false,"computed":false,"key":{"type":"Identifier","start":8002,"end":8027,"name":"removeAllSourceReferences"},"kind":"method","value":{"type":"FunctionExpression","start":8027,"end":8476,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":8030,"end":8476,"body":[{"type":"VariableDeclaration","start":8041,"end":8116,"declarations":[{"type":"VariableDeclarator","start":8047,"end":8115,"id":{"type":"Identifier","start":8047,"end":8061,"name":"sourceElements"},"init":{"type":"CallExpression","start":8064,"end":8115,"callee":{"type":"MemberExpression","start":8064,"end":8098,"object":{"type":"MemberExpression","start":8064,"end":8077,"object":{"type":"ThisExpression","start":8064,"end":8068},"property":{"type":"Identifier","start":8069,"end":8077,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8078,"end":8098,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8099,"end":8114,"value":"context-group","raw":"'context-group'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":8126,"end":8149,"declarations":[{"type":"VariableDeclarator","start":8132,"end":8148,"id":{"type":"Identifier","start":8132,"end":8143,"name":"toBeRemoved"},"init":{"type":"ArrayExpression","start":8146,"end":8148,"elements":[]}}],"kind":"const"},{"type":"ForStatement","start":8159,"end":8389,"init":{"type":"VariableDeclaration","start":8164,"end":8173,"declarations":[{"type":"VariableDeclarator","start":8168,"end":8173,"id":{"type":"Identifier","start":8168,"end":8169,"name":"i"},"init":{"type":"Literal","start":8172,"end":8173,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":8175,"end":8200,"left":{"type":"Identifier","start":8175,"end":8176,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":8179,"end":8200,"object":{"type":"Identifier","start":8179,"end":8193,"name":"sourceElements"},"property":{"type":"Identifier","start":8194,"end":8200,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":8202,"end":8205,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":8202,"end":8203,"name":"i"}},"body":{"type":"BlockStatement","start":8207,"end":8389,"body":[{"type":"VariableDeclaration","start":8222,"end":8258,"declarations":[{"type":"VariableDeclarator","start":8228,"end":8257,"id":{"type":"Identifier","start":8228,"end":8232,"name":"elem"},"init":{"type":"CallExpression","start":8235,"end":8257,"callee":{"type":"MemberExpression","start":8235,"end":8254,"object":{"type":"Identifier","start":8235,"end":8249,"name":"sourceElements"},"property":{"type":"Identifier","start":8250,"end":8254,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8255,"end":8256,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":8272,"end":8378,"test":{"type":"BinaryExpression","start":8276,"end":8319,"left":{"type":"CallExpression","start":8276,"end":8304,"callee":{"type":"MemberExpression","start":8276,"end":8293,"object":{"type":"Identifier","start":8276,"end":8280,"name":"elem"},"property":{"type":"Identifier","start":8281,"end":8293,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8294,"end":8303,"value":"purpose","raw":"'purpose'"}],"optional":false},"operator":"===","right":{"type":"Literal","start":8309,"end":8319,"value":"location","raw":"'location'"}},"consequent":{"type":"BlockStatement","start":8321,"end":8378,"body":[{"type":"ExpressionStatement","start":8340,"end":8363,"expression":{"type":"CallExpression","start":8340,"end":8362,"callee":{"type":"MemberExpression","start":8340,"end":8356,"object":{"type":"Identifier","start":8340,"end":8351,"name":"toBeRemoved"},"property":{"type":"Identifier","start":8352,"end":8356,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8357,"end":8361,"name":"elem"}],"optional":false}}]},"alternate":null}]}},{"type":"ExpressionStatement","start":8399,"end":8469,"expression":{"type":"CallExpression","start":8399,"end":8468,"callee":{"type":"MemberExpression","start":8399,"end":8418,"object":{"type":"Identifier","start":8399,"end":8410,"name":"toBeRemoved"},"property":{"type":"Identifier","start":8411,"end":8418,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":8419,"end":8467,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8420,"end":8424,"name":"elem"}],"body":{"type":"BlockStatement","start":8429,"end":8467,"body":[{"type":"ExpressionStatement","start":8431,"end":8465,"expression":{"type":"CallExpression","start":8431,"end":8464,"callee":{"type":"MemberExpression","start":8431,"end":8458,"object":{"type":"MemberExpression","start":8431,"end":8446,"object":{"type":"Identifier","start":8431,"end":8435,"name":"elem"},"property":{"type":"Identifier","start":8436,"end":8446,"name":"parentNode"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8447,"end":8458,"name":"removeChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8459,"end":8463,"name":"elem"}],"optional":false}}]}}],"optional":false}}]}}},{"type":"MethodDefinition","start":8696,"end":8941,"static":false,"computed":false,"key":{"type":"Identifier","start":8696,"end":8707,"name":"description"},"kind":"method","value":{"type":"FunctionExpression","start":8707,"end":8941,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":8710,"end":8941,"body":[{"type":"VariableDeclaration","start":8721,"end":8791,"declarations":[{"type":"VariableDeclarator","start":8727,"end":8790,"id":{"type":"Identifier","start":8727,"end":8735,"name":"noteElem"},"init":{"type":"CallExpression","start":8738,"end":8790,"callee":{"type":"MemberExpression","start":8738,"end":8775,"object":{"type":"ThisExpression","start":8738,"end":8742},"property":{"type":"Identifier","start":8743,"end":8775,"name":"findNoteElementWithFromAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8776,"end":8789,"value":"description","raw":"'description'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":8801,"end":8934,"test":{"type":"Identifier","start":8805,"end":8813,"name":"noteElem"},"consequent":{"type":"BlockStatement","start":8815,"end":8881,"body":[{"type":"ReturnStatement","start":8830,"end":8870,"argument":{"type":"CallExpression","start":8837,"end":8869,"callee":{"type":"MemberExpression","start":8837,"end":8859,"object":{"type":"Identifier","start":8837,"end":8849,"name":"DOMUtilities"},"property":{"type":"Identifier","start":8850,"end":8859,"name":"getPCDATA"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8860,"end":8868,"name":"noteElem"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":8896,"end":8934,"body":[{"type":"ReturnStatement","start":8911,"end":8923,"argument":{"type":"Literal","start":8918,"end":8922,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":9055,"end":9712,"static":false,"computed":false,"key":{"type":"Identifier","start":9055,"end":9069,"name":"setDescription"},"kind":"method","value":{"type":"FunctionExpression","start":9069,"end":9712,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9070,"end":9081,"name":"description"}],"body":{"type":"BlockStatement","start":9083,"end":9712,"body":[{"type":"VariableDeclaration","start":9094,"end":9162,"declarations":[{"type":"VariableDeclarator","start":9098,"end":9161,"id":{"type":"Identifier","start":9098,"end":9106,"name":"noteElem"},"init":{"type":"CallExpression","start":9109,"end":9161,"callee":{"type":"MemberExpression","start":9109,"end":9146,"object":{"type":"ThisExpression","start":9109,"end":9113},"property":{"type":"Identifier","start":9114,"end":9146,"name":"findNoteElementWithFromAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9147,"end":9160,"value":"description","raw":"'description'"}],"optional":false}}],"kind":"let"},{"type":"IfStatement","start":9172,"end":9705,"test":{"type":"Identifier","start":9176,"end":9187,"name":"description"},"consequent":{"type":"BlockStatement","start":9189,"end":9509,"body":[{"type":"IfStatement","start":9204,"end":9498,"test":{"type":"CallExpression","start":9208,"end":9235,"callee":{"type":"Identifier","start":9208,"end":9225,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":9226,"end":9234,"name":"noteElem"}],"optional":false},"consequent":{"type":"BlockStatement","start":9237,"end":9380,"body":[{"type":"ExpressionStatement","start":9286,"end":9365,"expression":{"type":"AssignmentExpression","start":9286,"end":9364,"operator":"=","left":{"type":"Identifier","start":9286,"end":9294,"name":"noteElem"},"right":{"type":"CallExpression","start":9297,"end":9364,"callee":{"type":"MemberExpression","start":9297,"end":9336,"object":{"type":"ThisExpression","start":9297,"end":9301},"property":{"type":"Identifier","start":9302,"end":9336,"name":"createNoteElementWithFromAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9337,"end":9350,"value":"description","raw":"'description'"},{"type":"Identifier","start":9352,"end":9363,"name":"description"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":9399,"end":9498,"body":[{"type":"ExpressionStatement","start":9418,"end":9483,"expression":{"type":"CallExpression","start":9418,"end":9482,"callee":{"type":"MemberExpression","start":9418,"end":9459,"object":{"type":"Identifier","start":9418,"end":9430,"name":"DOMUtilities"},"property":{"type":"Identifier","start":9431,"end":9459,"name":"replaceContentWithXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9460,"end":9468,"name":"noteElem"},{"type":"Identifier","start":9470,"end":9481,"name":"description"}],"optional":false}}]}}]},"alternate":{"type":"BlockStatement","start":9524,"end":9705,"body":[{"type":"IfStatement","start":9539,"end":9694,"test":{"type":"UnaryExpression","start":9543,"end":9571,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":9544,"end":9571,"callee":{"type":"Identifier","start":9544,"end":9561,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":9562,"end":9570,"name":"noteElem"}],"optional":false}},"consequent":{"type":"BlockStatement","start":9573,"end":9694,"body":[{"type":"ExpressionStatement","start":9624,"end":9679,"expression":{"type":"CallExpression","start":9624,"end":9678,"callee":{"type":"MemberExpression","start":9624,"end":9663,"object":{"type":"ThisExpression","start":9624,"end":9628},"property":{"type":"Identifier","start":9629,"end":9663,"name":"removeNoteElementWithFromAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9664,"end":9677,"value":"description","raw":"'description'"}],"optional":false}}]},"alternate":null}]}}]}}},{"type":"MethodDefinition","start":9875,"end":10256,"static":false,"computed":false,"key":{"type":"Identifier","start":9875,"end":9907,"name":"findNoteElementWithFromAttribute"},"kind":"method","value":{"type":"FunctionExpression","start":9907,"end":10256,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9908,"end":9917,"name":"attrValue"}],"body":{"type":"BlockStatement","start":9919,"end":10256,"body":[{"type":"VariableDeclaration","start":9930,"end":9994,"declarations":[{"type":"VariableDeclarator","start":9936,"end":9993,"id":{"type":"Identifier","start":9936,"end":9948,"name":"noteElements"},"init":{"type":"CallExpression","start":9951,"end":9993,"callee":{"type":"MemberExpression","start":9951,"end":9985,"object":{"type":"MemberExpression","start":9951,"end":9964,"object":{"type":"ThisExpression","start":9951,"end":9955},"property":{"type":"Identifier","start":9956,"end":9964,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9965,"end":9985,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9986,"end":9992,"value":"note","raw":"'note'"}],"optional":false}}],"kind":"const"},{"type":"ForStatement","start":10004,"end":10227,"init":{"type":"VariableDeclaration","start":10009,"end":10018,"declarations":[{"type":"VariableDeclarator","start":10013,"end":10018,"id":{"type":"Identifier","start":10013,"end":10014,"name":"i"},"init":{"type":"Literal","start":10017,"end":10018,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":10020,"end":10043,"left":{"type":"Identifier","start":10020,"end":10021,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":10024,"end":10043,"object":{"type":"Identifier","start":10024,"end":10036,"name":"noteElements"},"property":{"type":"Identifier","start":10037,"end":10043,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":10045,"end":10048,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":10045,"end":10046,"name":"i"}},"body":{"type":"BlockStatement","start":10050,"end":10227,"body":[{"type":"VariableDeclaration","start":10065,"end":10103,"declarations":[{"type":"VariableDeclarator","start":10071,"end":10102,"id":{"type":"Identifier","start":10071,"end":10079,"name":"noteElem"},"init":{"type":"CallExpression","start":10082,"end":10102,"callee":{"type":"MemberExpression","start":10082,"end":10099,"object":{"type":"Identifier","start":10082,"end":10094,"name":"noteElements"},"property":{"type":"Identifier","start":10095,"end":10099,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10100,"end":10101,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":10117,"end":10216,"test":{"type":"BinaryExpression","start":10121,"end":10164,"left":{"type":"CallExpression","start":10121,"end":10150,"callee":{"type":"MemberExpression","start":10121,"end":10142,"object":{"type":"Identifier","start":10121,"end":10129,"name":"noteElem"},"property":{"type":"Identifier","start":10130,"end":10142,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10143,"end":10149,"value":"from","raw":"'from'"}],"optional":false},"operator":"===","right":{"type":"Identifier","start":10155,"end":10164,"name":"attrValue"}},"consequent":{"type":"BlockStatement","start":10166,"end":10216,"body":[{"type":"ReturnStatement","start":10185,"end":10201,"argument":{"type":"Identifier","start":10192,"end":10200,"name":"noteElem"}}]},"alternate":null}]}},{"type":"ReturnStatement","start":10237,"end":10249,"argument":{"type":"Literal","start":10244,"end":10248,"value":null,"raw":"null"}}]}}},{"type":"MethodDefinition","start":10386,"end":10876,"static":false,"computed":false,"key":{"type":"Identifier","start":10386,"end":10415,"name":"findAllAdditionalNoteElements"},"kind":"method","value":{"type":"FunctionExpression","start":10415,"end":10876,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":10418,"end":10876,"body":[{"type":"VariableDeclaration","start":10429,"end":10493,"declarations":[{"type":"VariableDeclarator","start":10435,"end":10492,"id":{"type":"Identifier","start":10435,"end":10447,"name":"noteElements"},"init":{"type":"CallExpression","start":10450,"end":10492,"callee":{"type":"MemberExpression","start":10450,"end":10484,"object":{"type":"MemberExpression","start":10450,"end":10463,"object":{"type":"ThisExpression","start":10450,"end":10454},"property":{"type":"Identifier","start":10455,"end":10463,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10464,"end":10484,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10485,"end":10491,"value":"note","raw":"'note'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":10503,"end":10521,"declarations":[{"type":"VariableDeclarator","start":10509,"end":10520,"id":{"type":"Identifier","start":10509,"end":10515,"name":"result"},"init":{"type":"ArrayExpression","start":10518,"end":10520,"elements":[]}}],"kind":"const"},{"type":"ForStatement","start":10531,"end":10845,"init":{"type":"VariableDeclaration","start":10536,"end":10545,"declarations":[{"type":"VariableDeclarator","start":10540,"end":10545,"id":{"type":"Identifier","start":10540,"end":10541,"name":"i"},"init":{"type":"Literal","start":10544,"end":10545,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":10547,"end":10570,"left":{"type":"Identifier","start":10547,"end":10548,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":10551,"end":10570,"object":{"type":"Identifier","start":10551,"end":10563,"name":"noteElements"},"property":{"type":"Identifier","start":10564,"end":10570,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":10572,"end":10575,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":10572,"end":10573,"name":"i"}},"body":{"type":"BlockStatement","start":10577,"end":10845,"body":[{"type":"VariableDeclaration","start":10592,"end":10630,"declarations":[{"type":"VariableDeclarator","start":10598,"end":10629,"id":{"type":"Identifier","start":10598,"end":10606,"name":"noteElem"},"init":{"type":"CallExpression","start":10609,"end":10629,"callee":{"type":"MemberExpression","start":10609,"end":10626,"object":{"type":"Identifier","start":10609,"end":10621,"name":"noteElements"},"property":{"type":"Identifier","start":10622,"end":10626,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10627,"end":10628,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":10644,"end":10696,"declarations":[{"type":"VariableDeclarator","start":10650,"end":10695,"id":{"type":"Identifier","start":10650,"end":10663,"name":"fromAttribute"},"init":{"type":"CallExpression","start":10666,"end":10695,"callee":{"type":"MemberExpression","start":10666,"end":10687,"object":{"type":"Identifier","start":10666,"end":10674,"name":"noteElem"},"property":{"type":"Identifier","start":10675,"end":10687,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10688,"end":10694,"value":"from","raw":"'from'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":10710,"end":10834,"test":{"type":"LogicalExpression","start":10714,"end":10776,"left":{"type":"BinaryExpression","start":10714,"end":10745,"left":{"type":"Identifier","start":10714,"end":10727,"name":"fromAttribute"},"operator":"!==","right":{"type":"Literal","start":10732,"end":10745,"value":"description","raw":"'description'"}},"operator":"&&","right":{"type":"BinaryExpression","start":10749,"end":10776,"left":{"type":"Identifier","start":10749,"end":10762,"name":"fromAttribute"},"operator":"!==","right":{"type":"Literal","start":10767,"end":10776,"value":"meaning","raw":"'meaning'"}}},"consequent":{"type":"BlockStatement","start":10778,"end":10834,"body":[{"type":"ExpressionStatement","start":10797,"end":10819,"expression":{"type":"CallExpression","start":10797,"end":10818,"callee":{"type":"MemberExpression","start":10797,"end":10808,"object":{"type":"Identifier","start":10797,"end":10803,"name":"result"},"property":{"type":"Identifier","start":10804,"end":10808,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10809,"end":10817,"name":"noteElem"}],"optional":false}}]},"alternate":null}]}},{"type":"ReturnStatement","start":10855,"end":10869,"argument":{"type":"Identifier","start":10862,"end":10868,"name":"result"}}]}}},{"type":"MethodDefinition","start":11113,"end":11606,"static":false,"computed":false,"key":{"type":"Identifier","start":11113,"end":11147,"name":"createNoteElementWithFromAttribute"},"kind":"method","value":{"type":"FunctionExpression","start":11147,"end":11606,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11148,"end":11161,"name":"fromAttrValue"},{"type":"Identifier","start":11163,"end":11170,"name":"content"}],"body":{"type":"BlockStatement","start":11172,"end":11606,"body":[{"type":"VariableDeclaration","start":11183,"end":11253,"declarations":[{"type":"VariableDeclarator","start":11189,"end":11252,"id":{"type":"Identifier","start":11189,"end":11200,"name":"noteElement"},"init":{"type":"CallExpression","start":11203,"end":11252,"callee":{"type":"MemberExpression","start":11203,"end":11244,"object":{"type":"MemberExpression","start":11203,"end":11230,"object":{"type":"MemberExpression","start":11203,"end":11216,"object":{"type":"ThisExpression","start":11203,"end":11207},"property":{"type":"Identifier","start":11208,"end":11216,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11217,"end":11230,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11231,"end":11244,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11245,"end":11251,"value":"note","raw":"'note'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":11263,"end":11356,"test":{"type":"Identifier","start":11267,"end":11280,"name":"fromAttrValue"},"consequent":{"type":"BlockStatement","start":11282,"end":11356,"body":[{"type":"ExpressionStatement","start":11297,"end":11345,"expression":{"type":"CallExpression","start":11297,"end":11344,"callee":{"type":"MemberExpression","start":11297,"end":11321,"object":{"type":"Identifier","start":11297,"end":11308,"name":"noteElement"},"property":{"type":"Identifier","start":11309,"end":11321,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11322,"end":11328,"value":"from","raw":"'from'"},{"type":"Identifier","start":11330,"end":11343,"name":"fromAttrValue"}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":11366,"end":11408,"expression":{"type":"CallExpression","start":11366,"end":11407,"callee":{"type":"MemberExpression","start":11366,"end":11390,"object":{"type":"Identifier","start":11366,"end":11377,"name":"noteElement"},"property":{"type":"Identifier","start":11378,"end":11390,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11391,"end":11401,"value":"priority","raw":"'priority'"},{"type":"Literal","start":11403,"end":11406,"value":"1","raw":"'1'"}],"optional":false}},{"type":"IfStatement","start":11418,"end":11521,"test":{"type":"Identifier","start":11422,"end":11429,"name":"content"},"consequent":{"type":"BlockStatement","start":11431,"end":11521,"body":[{"type":"ExpressionStatement","start":11446,"end":11510,"expression":{"type":"CallExpression","start":11446,"end":11509,"callee":{"type":"MemberExpression","start":11446,"end":11487,"object":{"type":"Identifier","start":11446,"end":11458,"name":"DOMUtilities"},"property":{"type":"Identifier","start":11459,"end":11487,"name":"replaceContentWithXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11488,"end":11499,"name":"noteElement"},{"type":"Identifier","start":11501,"end":11508,"name":"content"}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":11531,"end":11570,"expression":{"type":"CallExpression","start":11531,"end":11569,"callee":{"type":"MemberExpression","start":11531,"end":11556,"object":{"type":"MemberExpression","start":11531,"end":11544,"object":{"type":"ThisExpression","start":11531,"end":11535},"property":{"type":"Identifier","start":11536,"end":11544,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11545,"end":11556,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11557,"end":11568,"name":"noteElement"}],"optional":false}},{"type":"ReturnStatement","start":11580,"end":11599,"argument":{"type":"Identifier","start":11587,"end":11598,"name":"noteElement"}}]}}},{"type":"MethodDefinition","start":11727,"end":11952,"static":false,"computed":false,"key":{"type":"Identifier","start":11727,"end":11761,"name":"removeNoteElementWithFromAttribute"},"kind":"method","value":{"type":"FunctionExpression","start":11761,"end":11952,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11762,"end":11771,"name":"attrValue"}],"body":{"type":"BlockStatement","start":11773,"end":11952,"body":[{"type":"VariableDeclaration","start":11784,"end":11853,"declarations":[{"type":"VariableDeclarator","start":11790,"end":11852,"id":{"type":"Identifier","start":11790,"end":11801,"name":"noteElement"},"init":{"type":"CallExpression","start":11804,"end":11852,"callee":{"type":"MemberExpression","start":11804,"end":11841,"object":{"type":"ThisExpression","start":11804,"end":11808},"property":{"type":"Identifier","start":11809,"end":11841,"name":"findNoteElementWithFromAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11842,"end":11851,"name":"attrValue"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":11863,"end":11945,"test":{"type":"Identifier","start":11867,"end":11878,"name":"noteElement"},"consequent":{"type":"BlockStatement","start":11880,"end":11945,"body":[{"type":"ExpressionStatement","start":11895,"end":11934,"expression":{"type":"CallExpression","start":11895,"end":11933,"callee":{"type":"MemberExpression","start":11895,"end":11920,"object":{"type":"MemberExpression","start":11895,"end":11908,"object":{"type":"ThisExpression","start":11895,"end":11899},"property":{"type":"Identifier","start":11900,"end":11908,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11909,"end":11920,"name":"removeChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11921,"end":11932,"name":"noteElement"}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":12063,"end":12288,"static":false,"computed":false,"key":{"type":"Identifier","start":12063,"end":12094,"name":"removeAllAdditionalNoteElements"},"kind":"method","value":{"type":"FunctionExpression","start":12094,"end":12288,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":12097,"end":12288,"body":[{"type":"VariableDeclaration","start":12108,"end":12166,"declarations":[{"type":"VariableDeclarator","start":12114,"end":12165,"id":{"type":"Identifier","start":12114,"end":12126,"name":"noteElements"},"init":{"type":"CallExpression","start":12129,"end":12165,"callee":{"type":"MemberExpression","start":12129,"end":12163,"object":{"type":"ThisExpression","start":12129,"end":12133},"property":{"type":"Identifier","start":12134,"end":12163,"name":"findAllAdditionalNoteElements"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":12176,"end":12281,"expression":{"type":"CallExpression","start":12176,"end":12280,"callee":{"type":"MemberExpression","start":12176,"end":12196,"object":{"type":"Identifier","start":12176,"end":12188,"name":"noteElements"},"property":{"type":"Identifier","start":12189,"end":12196,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":12197,"end":12279,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12198,"end":12209,"name":"noteElement"}],"body":{"type":"BlockStatement","start":12214,"end":12279,"body":[{"type":"ExpressionStatement","start":12229,"end":12268,"expression":{"type":"CallExpression","start":12229,"end":12267,"callee":{"type":"MemberExpression","start":12229,"end":12254,"object":{"type":"MemberExpression","start":12229,"end":12242,"object":{"type":"ThisExpression","start":12229,"end":12233},"property":{"type":"Identifier","start":12234,"end":12242,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":12243,"end":12254,"name":"removeChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12255,"end":12266,"name":"noteElement"}],"optional":false}}]}}],"optional":false}}]}}},{"type":"MethodDefinition","start":12568,"end":12805,"static":false,"computed":false,"key":{"type":"Identifier","start":12568,"end":12575,"name":"meaning"},"kind":"method","value":{"type":"FunctionExpression","start":12575,"end":12805,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":12578,"end":12805,"body":[{"type":"VariableDeclaration","start":12589,"end":12655,"declarations":[{"type":"VariableDeclarator","start":12595,"end":12654,"id":{"type":"Identifier","start":12595,"end":12603,"name":"noteElem"},"init":{"type":"CallExpression","start":12606,"end":12654,"callee":{"type":"MemberExpression","start":12606,"end":12643,"object":{"type":"ThisExpression","start":12606,"end":12610},"property":{"type":"Identifier","start":12611,"end":12643,"name":"findNoteElementWithFromAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":12644,"end":12653,"value":"meaning","raw":"'meaning'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":12665,"end":12798,"test":{"type":"Identifier","start":12669,"end":12677,"name":"noteElem"},"consequent":{"type":"BlockStatement","start":12679,"end":12745,"body":[{"type":"ReturnStatement","start":12694,"end":12734,"argument":{"type":"CallExpression","start":12701,"end":12733,"callee":{"type":"MemberExpression","start":12701,"end":12723,"object":{"type":"Identifier","start":12701,"end":12713,"name":"DOMUtilities"},"property":{"type":"Identifier","start":12714,"end":12723,"name":"getPCDATA"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12724,"end":12732,"name":"noteElem"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":12760,"end":12798,"body":[{"type":"ReturnStatement","start":12775,"end":12787,"argument":{"type":"Literal","start":12782,"end":12786,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":12908,"end":13533,"static":false,"computed":false,"key":{"type":"Identifier","start":12908,"end":12918,"name":"setMeaning"},"kind":"method","value":{"type":"FunctionExpression","start":12918,"end":13533,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12919,"end":12926,"name":"meaning"}],"body":{"type":"BlockStatement","start":12928,"end":13533,"body":[{"type":"VariableDeclaration","start":12939,"end":13003,"declarations":[{"type":"VariableDeclarator","start":12943,"end":13002,"id":{"type":"Identifier","start":12943,"end":12951,"name":"noteElem"},"init":{"type":"CallExpression","start":12954,"end":13002,"callee":{"type":"MemberExpression","start":12954,"end":12991,"object":{"type":"ThisExpression","start":12954,"end":12958},"property":{"type":"Identifier","start":12959,"end":12991,"name":"findNoteElementWithFromAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":12992,"end":13001,"value":"meaning","raw":"'meaning'"}],"optional":false}}],"kind":"let"},{"type":"IfStatement","start":13013,"end":13526,"test":{"type":"Identifier","start":13017,"end":13024,"name":"meaning"},"consequent":{"type":"BlockStatement","start":13026,"end":13334,"body":[{"type":"IfStatement","start":13041,"end":13323,"test":{"type":"CallExpression","start":13045,"end":13072,"callee":{"type":"Identifier","start":13045,"end":13062,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":13063,"end":13071,"name":"noteElem"}],"optional":false},"consequent":{"type":"BlockStatement","start":13074,"end":13209,"body":[{"type":"ExpressionStatement","start":13123,"end":13194,"expression":{"type":"AssignmentExpression","start":13123,"end":13193,"operator":"=","left":{"type":"Identifier","start":13123,"end":13131,"name":"noteElem"},"right":{"type":"CallExpression","start":13134,"end":13193,"callee":{"type":"MemberExpression","start":13134,"end":13173,"object":{"type":"ThisExpression","start":13134,"end":13138},"property":{"type":"Identifier","start":13139,"end":13173,"name":"createNoteElementWithFromAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":13174,"end":13183,"value":"meaning","raw":"'meaning'"},{"type":"Identifier","start":13185,"end":13192,"name":"meaning"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":13228,"end":13323,"body":[{"type":"ExpressionStatement","start":13247,"end":13308,"expression":{"type":"CallExpression","start":13247,"end":13307,"callee":{"type":"MemberExpression","start":13247,"end":13288,"object":{"type":"Identifier","start":13247,"end":13259,"name":"DOMUtilities"},"property":{"type":"Identifier","start":13260,"end":13288,"name":"replaceContentWithXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":13289,"end":13297,"name":"noteElem"},{"type":"Identifier","start":13299,"end":13306,"name":"meaning"}],"optional":false}}]}}]},"alternate":{"type":"BlockStatement","start":13349,"end":13526,"body":[{"type":"IfStatement","start":13364,"end":13515,"test":{"type":"UnaryExpression","start":13368,"end":13396,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":13369,"end":13396,"callee":{"type":"Identifier","start":13369,"end":13386,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":13387,"end":13395,"name":"noteElem"}],"optional":false}},"consequent":{"type":"BlockStatement","start":13398,"end":13515,"body":[{"type":"ExpressionStatement","start":13449,"end":13500,"expression":{"type":"CallExpression","start":13449,"end":13499,"callee":{"type":"MemberExpression","start":13449,"end":13488,"object":{"type":"ThisExpression","start":13449,"end":13453},"property":{"type":"Identifier","start":13454,"end":13488,"name":"removeNoteElementWithFromAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":13489,"end":13498,"value":"meaning","raw":"'meaning'"}],"optional":false}}]},"alternate":null}]}}]}}},{"type":"MethodDefinition","start":13703,"end":13983,"static":false,"computed":false,"key":{"type":"Identifier","start":13703,"end":13708,"name":"notes"},"kind":"method","value":{"type":"FunctionExpression","start":13708,"end":13983,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":13711,"end":13983,"body":[{"type":"VariableDeclaration","start":13722,"end":13780,"declarations":[{"type":"VariableDeclarator","start":13728,"end":13779,"id":{"type":"Identifier","start":13728,"end":13740,"name":"noteElememts"},"init":{"type":"CallExpression","start":13743,"end":13779,"callee":{"type":"MemberExpression","start":13743,"end":13777,"object":{"type":"ThisExpression","start":13743,"end":13747},"property":{"type":"Identifier","start":13748,"end":13777,"name":"findAllAdditionalNoteElements"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":13790,"end":13976,"argument":{"type":"CallExpression","start":13797,"end":13975,"callee":{"type":"MemberExpression","start":13797,"end":13813,"object":{"type":"Identifier","start":13797,"end":13809,"name":"noteElememts"},"property":{"type":"Identifier","start":13810,"end":13813,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":13814,"end":13974,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13814,"end":13818,"name":"elem"}],"body":{"type":"BlockStatement","start":13822,"end":13974,"body":[{"type":"ReturnStatement","start":13837,"end":13963,"argument":{"type":"ObjectExpression","start":13844,"end":13962,"properties":[{"type":"Property","start":13863,"end":13894,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":13863,"end":13867,"name":"from"},"value":{"type":"CallExpression","start":13869,"end":13894,"callee":{"type":"MemberExpression","start":13869,"end":13886,"object":{"type":"Identifier","start":13869,"end":13873,"name":"elem"},"property":{"type":"Identifier","start":13874,"end":13886,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":13887,"end":13893,"value":"from","raw":"'from'"}],"optional":false},"kind":"init"},{"type":"Property","start":13913,"end":13947,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":13913,"end":13917,"name":"text"},"value":{"type":"CallExpression","start":13919,"end":13947,"callee":{"type":"MemberExpression","start":13919,"end":13941,"object":{"type":"Identifier","start":13919,"end":13931,"name":"DOMUtilities"},"property":{"type":"Identifier","start":13932,"end":13941,"name":"getPCDATA"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":13942,"end":13946,"name":"elem"}],"optional":false},"kind":"init"}]}}]}}],"optional":false}}]}}},{"type":"MethodDefinition","start":14158,"end":14207,"static":false,"computed":false,"key":{"type":"Identifier","start":14158,"end":14174,"name":"supportsSetNotes"},"kind":"method","value":{"type":"FunctionExpression","start":14174,"end":14207,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":14177,"end":14207,"body":[{"type":"ReturnStatement","start":14188,"end":14200,"argument":{"type":"Literal","start":14195,"end":14199,"value":true,"raw":"true"}}]}}},{"type":"MethodDefinition","start":14394,"end":14778,"static":false,"computed":false,"key":{"type":"Identifier","start":14394,"end":14402,"name":"setNotes"},"kind":"method","value":{"type":"FunctionExpression","start":14402,"end":14778,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":14403,"end":14411,"name":"newNotes"}],"body":{"type":"BlockStatement","start":14413,"end":14778,"body":[{"type":"IfStatement","start":14424,"end":14510,"test":{"type":"UnaryExpression","start":14428,"end":14456,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":14429,"end":14456,"callee":{"type":"Identifier","start":14429,"end":14446,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":14447,"end":14455,"name":"newNotes"}],"optional":false}},"consequent":{"type":"BlockStatement","start":14458,"end":14510,"body":[{"type":"ExpressionStatement","start":14473,"end":14499,"expression":{"type":"CallExpression","start":14473,"end":14498,"callee":{"type":"MemberExpression","start":14473,"end":14488,"object":{"type":"ThisExpression","start":14473,"end":14477},"property":{"type":"Identifier","start":14478,"end":14488,"name":"checkNotes"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":14489,"end":14497,"name":"newNotes"}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":14520,"end":14559,"expression":{"type":"CallExpression","start":14520,"end":14558,"callee":{"type":"MemberExpression","start":14520,"end":14556,"object":{"type":"ThisExpression","start":14520,"end":14524},"property":{"type":"Identifier","start":14525,"end":14556,"name":"removeAllAdditionalNoteElements"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"IfStatement","start":14569,"end":14771,"test":{"type":"UnaryExpression","start":14573,"end":14601,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":14574,"end":14601,"callee":{"type":"Identifier","start":14574,"end":14591,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":14592,"end":14600,"name":"newNotes"}],"optional":false}},"consequent":{"type":"BlockStatement","start":14603,"end":14771,"body":[{"type":"ExpressionStatement","start":14618,"end":14760,"expression":{"type":"CallExpression","start":14618,"end":14759,"callee":{"type":"MemberExpression","start":14618,"end":14634,"object":{"type":"Identifier","start":14618,"end":14626,"name":"newNotes"},"property":{"type":"Identifier","start":14627,"end":14634,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":14635,"end":14758,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":14636,"end":14640,"name":"note"}],"body":{"type":"BlockStatement","start":14645,"end":14758,"body":[{"type":"VariableDeclaration","start":14664,"end":14743,"declarations":[{"type":"VariableDeclarator","start":14670,"end":14742,"id":{"type":"Identifier","start":14670,"end":14678,"name":"noteElem"},"init":{"type":"CallExpression","start":14681,"end":14742,"callee":{"type":"MemberExpression","start":14681,"end":14720,"object":{"type":"ThisExpression","start":14681,"end":14685},"property":{"type":"Identifier","start":14686,"end":14720,"name":"createNoteElementWithFromAttribute"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":14721,"end":14730,"object":{"type":"Identifier","start":14721,"end":14725,"name":"note"},"property":{"type":"Identifier","start":14726,"end":14730,"name":"from"},"computed":false,"optional":false},{"type":"MemberExpression","start":14732,"end":14741,"object":{"type":"Identifier","start":14732,"end":14736,"name":"note"},"property":{"type":"Identifier","start":14737,"end":14741,"name":"text"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"}]}}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":14907,"end":15355,"static":false,"computed":false,"key":{"type":"Identifier","start":14907,"end":14922,"name":"translateNative"},"kind":"method","value":{"type":"FunctionExpression","start":14922,"end":15355,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":14923,"end":14934,"name":"translation"}],"body":{"type":"BlockStatement","start":14936,"end":15355,"body":[{"type":"VariableDeclaration","start":14947,"end":15023,"declarations":[{"type":"VariableDeclarator","start":14951,"end":15022,"id":{"type":"Identifier","start":14951,"end":14957,"name":"target"},"init":{"type":"CallExpression","start":14960,"end":15022,"callee":{"type":"MemberExpression","start":14960,"end":14997,"object":{"type":"Identifier","start":14960,"end":14972,"name":"DOMUtilities"},"property":{"type":"Identifier","start":14973,"end":14997,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":14998,"end":15011,"object":{"type":"ThisExpression","start":14998,"end":15002},"property":{"type":"Identifier","start":15003,"end":15011,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":15013,"end":15021,"value":"target","raw":"'target'"}],"optional":false}}],"kind":"let"},{"type":"IfStatement","start":15033,"end":15227,"test":{"type":"UnaryExpression","start":15037,"end":15044,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":15038,"end":15044,"name":"target"}},"consequent":{"type":"BlockStatement","start":15046,"end":15227,"body":[{"type":"VariableDeclaration","start":15061,"end":15139,"declarations":[{"type":"VariableDeclarator","start":15067,"end":15138,"id":{"type":"Identifier","start":15067,"end":15073,"name":"source"},"init":{"type":"CallExpression","start":15076,"end":15138,"callee":{"type":"MemberExpression","start":15076,"end":15113,"object":{"type":"Identifier","start":15076,"end":15088,"name":"DOMUtilities"},"property":{"type":"Identifier","start":15089,"end":15113,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":15114,"end":15127,"object":{"type":"ThisExpression","start":15114,"end":15118},"property":{"type":"Identifier","start":15119,"end":15127,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":15129,"end":15137,"value":"source","raw":"'source'"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":15153,"end":15216,"expression":{"type":"AssignmentExpression","start":15153,"end":15215,"operator":"=","left":{"type":"Identifier","start":15153,"end":15159,"name":"target"},"right":{"type":"CallExpression","start":15162,"end":15215,"callee":{"type":"MemberExpression","start":15162,"end":15197,"object":{"type":"Identifier","start":15162,"end":15174,"name":"DOMUtilities"},"property":{"type":"Identifier","start":15175,"end":15197,"name":"createFollowingSibling"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":15198,"end":15206,"value":"target","raw":"'target'"},{"type":"Identifier","start":15208,"end":15214,"name":"source"}],"optional":false}}}]},"alternate":null},{"type":"ExpressionStatement","start":15237,"end":15300,"expression":{"type":"CallExpression","start":15237,"end":15299,"callee":{"type":"MemberExpression","start":15237,"end":15278,"object":{"type":"Identifier","start":15237,"end":15249,"name":"DOMUtilities"},"property":{"type":"Identifier","start":15250,"end":15278,"name":"replaceContentWithXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":15279,"end":15285,"name":"target"},{"type":"Identifier","start":15287,"end":15298,"name":"translation"}],"optional":false}},{"type":"ExpressionStatement","start":15310,"end":15348,"expression":{"type":"CallExpression","start":15310,"end":15347,"callee":{"type":"MemberExpression","start":15310,"end":15329,"object":{"type":"ThisExpression","start":15310,"end":15314},"property":{"type":"Identifier","start":15315,"end":15329,"name":"setTargetState"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":15330,"end":15346,"name":"STATE_TRANSLATED"}],"optional":false}}]}}},{"type":"MethodDefinition","start":15623,"end":15910,"static":false,"computed":false,"key":{"type":"Identifier","start":15623,"end":15646,"name":"cloneWithSourceAsTarget"},"kind":"method","value":{"type":"FunctionExpression","start":15646,"end":15910,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":15647,"end":15660,"name":"isDefaultLang"},{"type":"Identifier","start":15662,"end":15673,"name":"copyContent"},{"type":"Identifier","start":15675,"end":15685,"name":"targetFile"}],"body":{"type":"BlockStatement","start":15687,"end":15910,"body":[{"type":"VariableDeclaration","start":15698,"end":15744,"declarations":[{"type":"VariableDeclarator","start":15704,"end":15743,"id":{"type":"Identifier","start":15704,"end":15711,"name":"element"},"init":{"type":"CallExpression","start":15714,"end":15743,"callee":{"type":"MemberExpression","start":15714,"end":15737,"object":{"type":"MemberExpression","start":15714,"end":15727,"object":{"type":"ThisExpression","start":15714,"end":15718},"property":{"type":"Identifier","start":15719,"end":15727,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":15728,"end":15737,"name":"cloneNode"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":15738,"end":15742,"value":true,"raw":"true"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":15754,"end":15818,"declarations":[{"type":"VariableDeclarator","start":15760,"end":15817,"id":{"type":"Identifier","start":15760,"end":15765,"name":"clone"},"init":{"type":"NewExpression","start":15768,"end":15817,"callee":{"type":"Identifier","start":15772,"end":15786,"name":"XliffTransUnit"},"arguments":[{"type":"Identifier","start":15787,"end":15794,"name":"element"},{"type":"MemberExpression","start":15796,"end":15804,"object":{"type":"ThisExpression","start":15796,"end":15800},"property":{"type":"Identifier","start":15801,"end":15804,"name":"_id"},"computed":false,"optional":false},{"type":"Identifier","start":15806,"end":15816,"name":"targetFile"}]}}],"kind":"const"},{"type":"ExpressionStatement","start":15828,"end":15880,"expression":{"type":"CallExpression","start":15828,"end":15879,"callee":{"type":"MemberExpression","start":15828,"end":15851,"object":{"type":"Identifier","start":15828,"end":15833,"name":"clone"},"property":{"type":"Identifier","start":15834,"end":15851,"name":"useSourceAsTarget"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":15852,"end":15865,"name":"isDefaultLang"},{"type":"Identifier","start":15867,"end":15878,"name":"copyContent"}],"optional":false}},{"type":"ReturnStatement","start":15890,"end":15903,"argument":{"type":"Identifier","start":15897,"end":15902,"name":"clone"}}]}}},{"type":"MethodDefinition","start":16104,"end":17315,"static":false,"computed":false,"key":{"type":"Identifier","start":16104,"end":16121,"name":"useSourceAsTarget"},"kind":"method","value":{"type":"FunctionExpression","start":16121,"end":17315,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16122,"end":16135,"name":"isDefaultLang"},{"type":"Identifier","start":16137,"end":16148,"name":"copyContent"}],"body":{"type":"BlockStatement","start":16150,"end":17315,"body":[{"type":"VariableDeclaration","start":16161,"end":16239,"declarations":[{"type":"VariableDeclarator","start":16167,"end":16238,"id":{"type":"Identifier","start":16167,"end":16173,"name":"source"},"init":{"type":"CallExpression","start":16176,"end":16238,"callee":{"type":"MemberExpression","start":16176,"end":16213,"object":{"type":"Identifier","start":16176,"end":16188,"name":"DOMUtilities"},"property":{"type":"Identifier","start":16189,"end":16213,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":16214,"end":16227,"object":{"type":"ThisExpression","start":16214,"end":16218},"property":{"type":"Identifier","start":16219,"end":16227,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":16229,"end":16237,"value":"source","raw":"'source'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":16249,"end":16325,"declarations":[{"type":"VariableDeclarator","start":16253,"end":16324,"id":{"type":"Identifier","start":16253,"end":16259,"name":"target"},"init":{"type":"CallExpression","start":16262,"end":16324,"callee":{"type":"MemberExpression","start":16262,"end":16299,"object":{"type":"Identifier","start":16262,"end":16274,"name":"DOMUtilities"},"property":{"type":"Identifier","start":16275,"end":16299,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":16300,"end":16313,"object":{"type":"ThisExpression","start":16300,"end":16304},"property":{"type":"Identifier","start":16305,"end":16313,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":16315,"end":16323,"value":"target","raw":"'target'"}],"optional":false}}],"kind":"let"},{"type":"IfStatement","start":16335,"end":16437,"test":{"type":"UnaryExpression","start":16339,"end":16346,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":16340,"end":16346,"name":"target"}},"consequent":{"type":"BlockStatement","start":16348,"end":16437,"body":[{"type":"ExpressionStatement","start":16363,"end":16426,"expression":{"type":"AssignmentExpression","start":16363,"end":16425,"operator":"=","left":{"type":"Identifier","start":16363,"end":16369,"name":"target"},"right":{"type":"CallExpression","start":16372,"end":16425,"callee":{"type":"MemberExpression","start":16372,"end":16407,"object":{"type":"Identifier","start":16372,"end":16384,"name":"DOMUtilities"},"property":{"type":"Identifier","start":16385,"end":16407,"name":"createFollowingSibling"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":16408,"end":16416,"value":"target","raw":"'target'"},{"type":"Identifier","start":16418,"end":16424,"name":"source"}],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":16447,"end":17074,"test":{"type":"LogicalExpression","start":16451,"end":16479,"left":{"type":"Identifier","start":16451,"end":16464,"name":"isDefaultLang"},"operator":"||","right":{"type":"Identifier","start":16468,"end":16479,"name":"copyContent"}},"consequent":{"type":"BlockStatement","start":16481,"end":16979,"body":[{"type":"VariableDeclaration","start":16496,"end":16552,"declarations":[{"type":"VariableDeclarator","start":16502,"end":16551,"id":{"type":"Identifier","start":16502,"end":16514,"name":"sourceString"},"init":{"type":"CallExpression","start":16517,"end":16551,"callee":{"type":"MemberExpression","start":16517,"end":16543,"object":{"type":"Identifier","start":16517,"end":16529,"name":"DOMUtilities"},"property":{"type":"Identifier","start":16530,"end":16543,"name":"getXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16544,"end":16550,"name":"source"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":16566,"end":16601,"declarations":[{"type":"VariableDeclarator","start":16570,"end":16600,"id":{"type":"Identifier","start":16570,"end":16585,"name":"newTargetString"},"init":{"type":"Identifier","start":16588,"end":16600,"name":"sourceString"}}],"kind":"let"},{"type":"IfStatement","start":16615,"end":16887,"test":{"type":"UnaryExpression","start":16619,"end":16651,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":16620,"end":16651,"callee":{"type":"MemberExpression","start":16620,"end":16637,"object":{"type":"ThisExpression","start":16620,"end":16624},"property":{"type":"Identifier","start":16625,"end":16637,"name":"isICUMessage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16638,"end":16650,"name":"sourceString"}],"optional":false}},"consequent":{"type":"BlockStatement","start":16653,"end":16887,"body":[{"type":"ExpressionStatement","start":16672,"end":16872,"expression":{"type":"AssignmentExpression","start":16672,"end":16871,"operator":"=","left":{"type":"Identifier","start":16672,"end":16687,"name":"newTargetString"},"right":{"type":"BinaryExpression","start":16690,"end":16871,"left":{"type":"BinaryExpression","start":16690,"end":16787,"left":{"type":"CallExpression","start":16690,"end":16751,"callee":{"type":"MemberExpression","start":16690,"end":16749,"object":{"type":"CallExpression","start":16690,"end":16720,"callee":{"type":"MemberExpression","start":16690,"end":16718,"object":{"type":"ThisExpression","start":16690,"end":16694},"property":{"type":"Identifier","start":16695,"end":16718,"name":"translationMessagesFile"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":16721,"end":16749,"name":"getNewTransUnitTargetPraefix"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"+","right":{"type":"Identifier","start":16775,"end":16787,"name":"sourceString"}},"operator":"+","right":{"type":"CallExpression","start":16811,"end":16871,"callee":{"type":"MemberExpression","start":16811,"end":16869,"object":{"type":"CallExpression","start":16811,"end":16841,"callee":{"type":"MemberExpression","start":16811,"end":16839,"object":{"type":"ThisExpression","start":16811,"end":16815},"property":{"type":"Identifier","start":16816,"end":16839,"name":"translationMessagesFile"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":16842,"end":16869,"name":"getNewTransUnitTargetSuffix"},"computed":false,"optional":false},"arguments":[],"optional":false}}}}]},"alternate":null},{"type":"ExpressionStatement","start":16901,"end":16968,"expression":{"type":"CallExpression","start":16901,"end":16967,"callee":{"type":"MemberExpression","start":16901,"end":16942,"object":{"type":"Identifier","start":16901,"end":16913,"name":"DOMUtilities"},"property":{"type":"Identifier","start":16914,"end":16942,"name":"replaceContentWithXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16943,"end":16949,"name":"target"},{"type":"Identifier","start":16951,"end":16966,"name":"newTargetString"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":16994,"end":17074,"body":[{"type":"ExpressionStatement","start":17009,"end":17063,"expression":{"type":"CallExpression","start":17009,"end":17062,"callee":{"type":"MemberExpression","start":17009,"end":17050,"object":{"type":"Identifier","start":17009,"end":17021,"name":"DOMUtilities"},"property":{"type":"Identifier","start":17022,"end":17050,"name":"replaceContentWithXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17051,"end":17057,"name":"target"},{"type":"Literal","start":17059,"end":17061,"value":"","raw":"''"}],"optional":false}}]}},{"type":"IfStatement","start":17084,"end":17308,"test":{"type":"Identifier","start":17088,"end":17101,"name":"isDefaultLang"},"consequent":{"type":"BlockStatement","start":17103,"end":17199,"body":[{"type":"ExpressionStatement","start":17118,"end":17188,"expression":{"type":"CallExpression","start":17118,"end":17187,"callee":{"type":"MemberExpression","start":17118,"end":17137,"object":{"type":"Identifier","start":17118,"end":17124,"name":"target"},"property":{"type":"Identifier","start":17125,"end":17137,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":17138,"end":17145,"value":"state","raw":"'state'"},{"type":"CallExpression","start":17147,"end":17186,"callee":{"type":"MemberExpression","start":17147,"end":17173,"object":{"type":"ThisExpression","start":17147,"end":17151},"property":{"type":"Identifier","start":17152,"end":17173,"name":"mapStateToNativeState"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17174,"end":17185,"name":"STATE_FINAL"}],"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":17214,"end":17308,"body":[{"type":"ExpressionStatement","start":17229,"end":17297,"expression":{"type":"CallExpression","start":17229,"end":17296,"callee":{"type":"MemberExpression","start":17229,"end":17248,"object":{"type":"Identifier","start":17229,"end":17235,"name":"target"},"property":{"type":"Identifier","start":17236,"end":17248,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":17249,"end":17256,"value":"state","raw":"'state'"},{"type":"CallExpression","start":17258,"end":17295,"callee":{"type":"MemberExpression","start":17258,"end":17284,"object":{"type":"ThisExpression","start":17258,"end":17262},"property":{"type":"Identifier","start":17263,"end":17284,"name":"mapStateToNativeState"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17285,"end":17294,"name":"STATE_NEW"}],"optional":false}],"optional":false}}]}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":17320,"end":56910}]},"code":"import { STATE_NEW, STATE_TRANSLATED, STATE_FINAL } from '../api/constants';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { AbstractTransUnit } from './abstract-trans-unit';\r\nimport { XliffMessageParser } from './xliff-message-parser';\r\nimport { isNullOrUndefined } from 'is-what';\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XLIFF 1.2 file.\r\n */\r\nexport class XliffTransUnit extends AbstractTransUnit {\r\n    constructor(_element, _id, _translationMessagesFile) {\r\n        super(_element, _id, _translationMessagesFile);\r\n    }\r\n    sourceContent() {\r\n        const sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        return DOMUtilities.getXMLContent(sourceElement);\r\n    }\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    setSourceContent(newContent) {\r\n        let source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (!source) {\r\n            // should not happen, there always has to be a source, but who knows..\r\n            source = this._element.appendChild(this._element.ownerDocument.createElement('source'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(source, newContent);\r\n    }\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    messageParser() {\r\n        return new XliffMessageParser();\r\n    }\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    createSourceContentNormalized() {\r\n        const sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (sourceElement) {\r\n            return this.messageParser().createNormalizedMessageFromXML(sourceElement, null);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    targetContent() {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return DOMUtilities.getXMLContent(targetElement);\r\n    }\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    targetContentNormalized() {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return new XliffMessageParser().createNormalizedMessageFromXML(targetElement, this.sourceContentNormalized());\r\n    }\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     */\r\n    nativeTargetState() {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (targetElement) {\r\n            return targetElement.getAttribute('state');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * set state in xml.\r\n     * @param nativeState nativeState\r\n     */\r\n    setNativeTargetState(nativeState) {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (targetElement) {\r\n            targetElement.setAttribute('state', nativeState);\r\n        }\r\n    }\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    mapStateToNativeState(state) {\r\n        switch (state) {\r\n            case STATE_NEW:\r\n                return 'new';\r\n            case STATE_TRANSLATED:\r\n                return 'translated';\r\n            case STATE_FINAL:\r\n                return 'final';\r\n            default:\r\n                throw new Error('unknown state ' + state);\r\n        }\r\n    }\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    mapNativeStateToState(nativeState) {\r\n        switch (nativeState) {\r\n            case 'new':\r\n                return STATE_NEW;\r\n            case 'needs-translation':\r\n                return STATE_NEW;\r\n            case 'translated':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-adaptation':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-l10n':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-adaptation':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-l10n':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-translation':\r\n                return STATE_TRANSLATED;\r\n            case 'final':\r\n                return STATE_FINAL;\r\n            case 'signed-off':\r\n                return STATE_FINAL;\r\n            default:\r\n                return STATE_NEW;\r\n        }\r\n    }\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    sourceReferences() {\r\n        const sourceElements = this._element.getElementsByTagName('context-group');\r\n        const sourceRefs = [];\r\n        for (let i = 0; i < sourceElements.length; i++) {\r\n            const elem = sourceElements.item(i);\r\n            if (elem.getAttribute('purpose') === 'location') {\r\n                const contextElements = elem.getElementsByTagName('context');\r\n                let sourcefile = null;\r\n                let linenumber = 0;\r\n                for (let j = 0; j < contextElements.length; j++) {\r\n                    const contextElem = contextElements.item(j);\r\n                    if (contextElem.getAttribute('context-type') === 'sourcefile') {\r\n                        sourcefile = DOMUtilities.getPCDATA(contextElem);\r\n                    }\r\n                    if (contextElem.getAttribute('context-type') === 'linenumber') {\r\n                        linenumber = Number.parseInt(DOMUtilities.getPCDATA(contextElem), 10);\r\n                    }\r\n                }\r\n                sourceRefs.push({ sourcefile: sourcefile, linenumber: linenumber });\r\n            }\r\n        }\r\n        return sourceRefs;\r\n    }\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    setSourceReferences(sourceRefs) {\r\n        this.removeAllSourceReferences();\r\n        sourceRefs.forEach((ref) => {\r\n            const contextGroup = this._element.ownerDocument.createElement('context-group');\r\n            contextGroup.setAttribute('purpose', 'location');\r\n            const contextSource = this._element.ownerDocument.createElement('context');\r\n            contextSource.setAttribute('context-type', 'sourcefile');\r\n            contextSource.appendChild(this._element.ownerDocument.createTextNode(ref.sourcefile));\r\n            const contextLine = this._element.ownerDocument.createElement('context');\r\n            contextLine.setAttribute('context-type', 'linenumber');\r\n            contextLine.appendChild(this._element.ownerDocument.createTextNode(ref.linenumber.toString(10)));\r\n            contextGroup.appendChild(contextSource);\r\n            contextGroup.appendChild(contextLine);\r\n            this._element.appendChild(contextGroup);\r\n        });\r\n    }\r\n    removeAllSourceReferences() {\r\n        const sourceElements = this._element.getElementsByTagName('context-group');\r\n        const toBeRemoved = [];\r\n        for (let i = 0; i < sourceElements.length; i++) {\r\n            const elem = sourceElements.item(i);\r\n            if (elem.getAttribute('purpose') === 'location') {\r\n                toBeRemoved.push(elem);\r\n            }\r\n        }\r\n        toBeRemoved.forEach((elem) => { elem.parentNode.removeChild(elem); });\r\n    }\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"description\".\r\n     */\r\n    description() {\r\n        const noteElem = this.findNoteElementWithFromAttribute('description');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    setDescription(description) {\r\n        let noteElem = this.findNoteElementWithFromAttribute('description');\r\n        if (description) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                noteElem = this.createNoteElementWithFromAttribute('description', description);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, description);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithFromAttribute('description');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Find a note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     * @return element or null is absent\r\n     */\r\n    findNoteElementWithFromAttribute(attrValue) {\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('from') === attrValue) {\r\n                return noteElem;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return elements\r\n     */\r\n    findAllAdditionalNoteElements() {\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        const result = [];\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const noteElem = noteElements.item(i);\r\n            const fromAttribute = noteElem.getAttribute('from');\r\n            if (fromAttribute !== 'description' && fromAttribute !== 'meaning') {\r\n                result.push(noteElem);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param fromAttrValue value of \"from\" attribute\r\n     * @param content text value of note element\r\n     * @return the new created element\r\n     */\r\n    createNoteElementWithFromAttribute(fromAttrValue, content) {\r\n        const noteElement = this._element.ownerDocument.createElement('note');\r\n        if (fromAttrValue) {\r\n            noteElement.setAttribute('from', fromAttrValue);\r\n        }\r\n        noteElement.setAttribute('priority', '1');\r\n        if (content) {\r\n            DOMUtilities.replaceContentWithXMLContent(noteElement, content);\r\n        }\r\n        this._element.appendChild(noteElement);\r\n        return noteElement;\r\n    }\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     */\r\n    removeNoteElementWithFromAttribute(attrValue) {\r\n        const noteElement = this.findNoteElementWithFromAttribute(attrValue);\r\n        if (noteElement) {\r\n            this._element.removeChild(noteElement);\r\n        }\r\n    }\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     */\r\n    removeAllAdditionalNoteElements() {\r\n        const noteElements = this.findAllAdditionalNoteElements();\r\n        noteElements.forEach((noteElement) => {\r\n            this._element.removeChild(noteElement);\r\n        });\r\n    }\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"meaning\".\r\n     */\r\n    meaning() {\r\n        const noteElem = this.findNoteElementWithFromAttribute('meaning');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param  meaning meaning\r\n     */\r\n    setMeaning(meaning) {\r\n        let noteElem = this.findNoteElementWithFromAttribute('meaning');\r\n        if (meaning) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                noteElem = this.createNoteElementWithFromAttribute('meaning', meaning);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, meaning);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithFromAttribute('meaning');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     */\r\n    notes() {\r\n        const noteElememts = this.findAllAdditionalNoteElements();\r\n        return noteElememts.map(elem => {\r\n            return {\r\n                from: elem.getAttribute('from'),\r\n                text: DOMUtilities.getPCDATA(elem)\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetNotes() {\r\n        return true;\r\n    }\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     */\r\n    setNotes(newNotes) {\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            this.checkNotes(newNotes);\r\n        }\r\n        this.removeAllAdditionalNoteElements();\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            newNotes.forEach((note) => {\r\n                const noteElem = this.createNoteElementWithFromAttribute(note.from, note.text);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    translateNative(translation) {\r\n        let target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            const source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n            target = DOMUtilities.createFollowingSibling('target', source);\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, translation);\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    }\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     */\r\n    cloneWithSourceAsTarget(isDefaultLang, copyContent, targetFile) {\r\n        const element = this._element.cloneNode(true);\r\n        const clone = new XliffTransUnit(element, this._id, targetFile);\r\n        clone.useSourceAsTarget(isDefaultLang, copyContent);\r\n        return clone;\r\n    }\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    useSourceAsTarget(isDefaultLang, copyContent) {\r\n        const source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        let target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            target = DOMUtilities.createFollowingSibling('target', source);\r\n        }\r\n        if (isDefaultLang || copyContent) {\r\n            const sourceString = DOMUtilities.getXMLContent(source);\r\n            let newTargetString = sourceString;\r\n            if (!this.isICUMessage(sourceString)) {\r\n                newTargetString = this.translationMessagesFile().getNewTransUnitTargetPraefix()\r\n                    + sourceString\r\n                    + this.translationMessagesFile().getNewTransUnitTargetSuffix();\r\n            }\r\n            DOMUtilities.replaceContentWithXMLContent(target, newTargetString);\r\n        }\r\n        else {\r\n            DOMUtilities.replaceContentWithXMLContent(target, '');\r\n        }\r\n        if (isDefaultLang) {\r\n            target.setAttribute('state', this.mapStateToNativeState(STATE_FINAL));\r\n        }\r\n        else {\r\n            target.setAttribute('state', this.mapStateToNativeState(STATE_NEW));\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-trans-unit.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff-message-parser.mjs","is-what"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff-trans-unit.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { STATE_NEW, STATE_TRANSLATED, STATE_FINAL } from '../api/constants';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { AbstractTransUnit } from './abstract-trans-unit';\r\nimport { XliffMessageParser } from './xliff-message-parser';\r\nimport { isNullOrUndefined } from 'is-what';\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XLIFF 1.2 file.\r\n */\r\nexport class XliffTransUnit extends AbstractTransUnit {\r\n    constructor(_element, _id, _translationMessagesFile) {\r\n        super(_element, _id, _translationMessagesFile);\r\n    }\r\n    sourceContent() {\r\n        const sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        return DOMUtilities.getXMLContent(sourceElement);\r\n    }\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    setSourceContent(newContent) {\r\n        let source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (!source) {\r\n            // should not happen, there always has to be a source, but who knows..\r\n            source = this._element.appendChild(this._element.ownerDocument.createElement('source'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(source, newContent);\r\n    }\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    messageParser() {\r\n        return new XliffMessageParser();\r\n    }\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    createSourceContentNormalized() {\r\n        const sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (sourceElement) {\r\n            return this.messageParser().createNormalizedMessageFromXML(sourceElement, null);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    targetContent() {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return DOMUtilities.getXMLContent(targetElement);\r\n    }\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    targetContentNormalized() {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return new XliffMessageParser().createNormalizedMessageFromXML(targetElement, this.sourceContentNormalized());\r\n    }\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     */\r\n    nativeTargetState() {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (targetElement) {\r\n            return targetElement.getAttribute('state');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * set state in xml.\r\n     * @param nativeState nativeState\r\n     */\r\n    setNativeTargetState(nativeState) {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (targetElement) {\r\n            targetElement.setAttribute('state', nativeState);\r\n        }\r\n    }\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    mapStateToNativeState(state) {\r\n        switch (state) {\r\n            case STATE_NEW:\r\n                return 'new';\r\n            case STATE_TRANSLATED:\r\n                return 'translated';\r\n            case STATE_FINAL:\r\n                return 'final';\r\n            default:\r\n                throw new Error('unknown state ' + state);\r\n        }\r\n    }\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    mapNativeStateToState(nativeState) {\r\n        switch (nativeState) {\r\n            case 'new':\r\n                return STATE_NEW;\r\n            case 'needs-translation':\r\n                return STATE_NEW;\r\n            case 'translated':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-adaptation':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-l10n':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-adaptation':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-l10n':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-translation':\r\n                return STATE_TRANSLATED;\r\n            case 'final':\r\n                return STATE_FINAL;\r\n            case 'signed-off':\r\n                return STATE_FINAL;\r\n            default:\r\n                return STATE_NEW;\r\n        }\r\n    }\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    sourceReferences() {\r\n        const sourceElements = this._element.getElementsByTagName('context-group');\r\n        const sourceRefs = [];\r\n        for (let i = 0; i < sourceElements.length; i++) {\r\n            const elem = sourceElements.item(i);\r\n            if (elem.getAttribute('purpose') === 'location') {\r\n                const contextElements = elem.getElementsByTagName('context');\r\n                let sourcefile = null;\r\n                let linenumber = 0;\r\n                for (let j = 0; j < contextElements.length; j++) {\r\n                    const contextElem = contextElements.item(j);\r\n                    if (contextElem.getAttribute('context-type') === 'sourcefile') {\r\n                        sourcefile = DOMUtilities.getPCDATA(contextElem);\r\n                    }\r\n                    if (contextElem.getAttribute('context-type') === 'linenumber') {\r\n                        linenumber = Number.parseInt(DOMUtilities.getPCDATA(contextElem), 10);\r\n                    }\r\n                }\r\n                sourceRefs.push({ sourcefile: sourcefile, linenumber: linenumber });\r\n            }\r\n        }\r\n        return sourceRefs;\r\n    }\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    setSourceReferences(sourceRefs) {\r\n        this.removeAllSourceReferences();\r\n        sourceRefs.forEach((ref) => {\r\n            const contextGroup = this._element.ownerDocument.createElement('context-group');\r\n            contextGroup.setAttribute('purpose', 'location');\r\n            const contextSource = this._element.ownerDocument.createElement('context');\r\n            contextSource.setAttribute('context-type', 'sourcefile');\r\n            contextSource.appendChild(this._element.ownerDocument.createTextNode(ref.sourcefile));\r\n            const contextLine = this._element.ownerDocument.createElement('context');\r\n            contextLine.setAttribute('context-type', 'linenumber');\r\n            contextLine.appendChild(this._element.ownerDocument.createTextNode(ref.linenumber.toString(10)));\r\n            contextGroup.appendChild(contextSource);\r\n            contextGroup.appendChild(contextLine);\r\n            this._element.appendChild(contextGroup);\r\n        });\r\n    }\r\n    removeAllSourceReferences() {\r\n        const sourceElements = this._element.getElementsByTagName('context-group');\r\n        const toBeRemoved = [];\r\n        for (let i = 0; i < sourceElements.length; i++) {\r\n            const elem = sourceElements.item(i);\r\n            if (elem.getAttribute('purpose') === 'location') {\r\n                toBeRemoved.push(elem);\r\n            }\r\n        }\r\n        toBeRemoved.forEach((elem) => { elem.parentNode.removeChild(elem); });\r\n    }\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"description\".\r\n     */\r\n    description() {\r\n        const noteElem = this.findNoteElementWithFromAttribute('description');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    setDescription(description) {\r\n        let noteElem = this.findNoteElementWithFromAttribute('description');\r\n        if (description) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                noteElem = this.createNoteElementWithFromAttribute('description', description);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, description);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithFromAttribute('description');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Find a note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     * @return element or null is absent\r\n     */\r\n    findNoteElementWithFromAttribute(attrValue) {\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('from') === attrValue) {\r\n                return noteElem;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return elements\r\n     */\r\n    findAllAdditionalNoteElements() {\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        const result = [];\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const noteElem = noteElements.item(i);\r\n            const fromAttribute = noteElem.getAttribute('from');\r\n            if (fromAttribute !== 'description' && fromAttribute !== 'meaning') {\r\n                result.push(noteElem);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param fromAttrValue value of \"from\" attribute\r\n     * @param content text value of note element\r\n     * @return the new created element\r\n     */\r\n    createNoteElementWithFromAttribute(fromAttrValue, content) {\r\n        const noteElement = this._element.ownerDocument.createElement('note');\r\n        if (fromAttrValue) {\r\n            noteElement.setAttribute('from', fromAttrValue);\r\n        }\r\n        noteElement.setAttribute('priority', '1');\r\n        if (content) {\r\n            DOMUtilities.replaceContentWithXMLContent(noteElement, content);\r\n        }\r\n        this._element.appendChild(noteElement);\r\n        return noteElement;\r\n    }\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     */\r\n    removeNoteElementWithFromAttribute(attrValue) {\r\n        const noteElement = this.findNoteElementWithFromAttribute(attrValue);\r\n        if (noteElement) {\r\n            this._element.removeChild(noteElement);\r\n        }\r\n    }\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     */\r\n    removeAllAdditionalNoteElements() {\r\n        const noteElements = this.findAllAdditionalNoteElements();\r\n        noteElements.forEach((noteElement) => {\r\n            this._element.removeChild(noteElement);\r\n        });\r\n    }\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"meaning\".\r\n     */\r\n    meaning() {\r\n        const noteElem = this.findNoteElementWithFromAttribute('meaning');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param  meaning meaning\r\n     */\r\n    setMeaning(meaning) {\r\n        let noteElem = this.findNoteElementWithFromAttribute('meaning');\r\n        if (meaning) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                noteElem = this.createNoteElementWithFromAttribute('meaning', meaning);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, meaning);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithFromAttribute('meaning');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     */\r\n    notes() {\r\n        const noteElememts = this.findAllAdditionalNoteElements();\r\n        return noteElememts.map(elem => {\r\n            return {\r\n                from: elem.getAttribute('from'),\r\n                text: DOMUtilities.getPCDATA(elem)\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetNotes() {\r\n        return true;\r\n    }\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     */\r\n    setNotes(newNotes) {\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            this.checkNotes(newNotes);\r\n        }\r\n        this.removeAllAdditionalNoteElements();\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            newNotes.forEach((note) => {\r\n                const noteElem = this.createNoteElementWithFromAttribute(note.from, note.text);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    translateNative(translation) {\r\n        let target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            const source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n            target = DOMUtilities.createFollowingSibling('target', source);\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, translation);\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    }\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     */\r\n    cloneWithSourceAsTarget(isDefaultLang, copyContent, targetFile) {\r\n        const element = this._element.cloneNode(true);\r\n        const clone = new XliffTransUnit(element, this._id, targetFile);\r\n        clone.useSourceAsTarget(isDefaultLang, copyContent);\r\n        return clone;\r\n    }\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    useSourceAsTarget(isDefaultLang, copyContent) {\r\n        const source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        let target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            target = DOMUtilities.createFollowingSibling('target', source);\r\n        }\r\n        if (isDefaultLang || copyContent) {\r\n            const sourceString = DOMUtilities.getXMLContent(source);\r\n            let newTargetString = sourceString;\r\n            if (!this.isICUMessage(sourceString)) {\r\n                newTargetString = this.translationMessagesFile().getNewTransUnitTargetPraefix()\r\n                    + sourceString\r\n                    + this.translationMessagesFile().getNewTransUnitTargetSuffix();\r\n            }\r\n            DOMUtilities.replaceContentWithXMLContent(target, newTargetString);\r\n        }\r\n        else {\r\n            DOMUtilities.replaceContentWithXMLContent(target, '');\r\n        }\r\n        if (isDefaultLang) {\r\n            target.setAttribute('state', this.mapStateToNativeState(STATE_FINAL));\r\n        }\r\n        else {\r\n            target.setAttribute('state', this.mapStateToNativeState(STATE_NEW));\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"xliff-trans-unit.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/xliff-trans-unit.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[18,0,0,17],[20,0,0,19],[36,0,0,35],[38,0,0,37],[49,0,0,48],[51,0,0,49],[57,0,0,55],[75,0,0,73],[76,0,0,74]],[[0,0,5,0],[7,0,5,7],[9,0,5,8],[21,0,5,20],[23,0,5,21],[29,0,5,27],[46,0,5,44],[47,0,5,45]],[[0,0,6,0],[7,0,6,7],[9,0,6,8],[26,0,6,25],[28,0,6,26],[34,0,6,32],[57,0,6,55],[58,0,6,56]],[[0,0,7,0],[7,0,7,7],[9,0,7,8],[27,0,7,26],[29,0,7,27],[35,0,7,33],[59,0,7,57],[60,0,7,58]],[[0,0,10,0],[7,0,10,7],[9,0,10,8],[26,0,10,25],[28,0,10,26],[34,0,10,32],[43,0,10,41],[44,0,10,42]],[[0,0,11,0]],[],[],[[3,0,14,3]],[[0,0,16,0],[6,0,16,6],[13,0,16,13],[27,0,16,28],[36,0,16,36],[53,0,16,53]],[[4,0,18,4],[16,0,18,16],[24,0,18,33],[26,0,18,35],[29,0,18,46],[31,0,18,48],[55,0,18,98]],[[8,0,19,8],[13,0,19,13],[14,0,19,14],[22,0,19,22],[24,0,19,24],[27,0,19,27],[29,0,19,29],[53,0,19,53],[54,0,19,54],[55,0,19,55]],[[4,0,20,4],[5,0,20,5]],[[4,0,22,11],[17,0,22,24]],[[8,0,23,8],[14,0,23,14],[27,0,23,27],[30,0,23,30],[42,0,23,42],[43,0,23,43],[67,0,23,67],[68,0,23,68],[72,0,23,72],[73,0,23,73],[81,0,23,81],[83,0,23,83],[91,0,23,91],[92,0,23,92],[93,0,23,93]],[[8,0,24,8],[15,0,24,15],[27,0,24,27],[28,0,24,28],[41,0,24,41],[42,0,24,42],[55,0,24,55],[56,0,24,56],[57,0,24,57]],[[4,0,25,4],[5,0,25,5]],[[4,0,27,4]],[],[],[],[],[[7,0,32,7]],[[4,0,33,11],[20,0,33,27],[21,0,33,28],[31,0,33,46]],[[8,0,34,8],[12,0,34,12],[18,0,34,18],[21,0,34,21],[33,0,34,33],[34,0,34,34],[58,0,34,58],[59,0,34,59],[63,0,34,63],[64,0,34,64],[72,0,34,72],[74,0,34,74],[82,0,34,82],[83,0,34,83],[84,0,34,84]],[[8,0,35,8],[12,0,35,12],[13,0,35,13],[19,0,35,19],[21,0,35,21]],[[12,0,36,12],[82,0,36,82]],[[12,0,37,12],[18,0,37,18],[21,0,37,21],[25,0,37,25],[26,0,37,26],[34,0,37,34],[35,0,37,35],[46,0,37,46],[47,0,37,47],[51,0,37,51],[52,0,37,52],[60,0,37,60],[61,0,37,61],[74,0,37,74],[75,0,37,75],[88,0,37,88],[89,0,37,89],[97,0,37,97],[98,0,37,98],[99,0,37,99],[100,0,37,100]],[[9,0,38,9]],[[8,0,39,8],[20,0,39,20],[21,0,39,21],[49,0,39,49],[50,0,39,50],[56,0,39,56],[58,0,39,58],[68,0,39,68],[69,0,39,69],[70,0,39,70]],[[4,0,40,4],[5,0,40,5]],[[4,0,42,4]],[],[[7,0,44,7]],[[4,0,45,14],[17,0,45,27]],[[8,0,46,8],[15,0,46,15],[19,0,46,19],[37,0,46,37],[39,0,46,39],[40,0,46,40]],[[4,0,47,4],[5,0,47,5]],[[4,0,49,4]],[],[[7,0,51,7]],[[4,0,52,11],[33,0,52,40]],[[8,0,53,8],[14,0,53,14],[27,0,53,27],[30,0,53,30],[42,0,53,42],[43,0,53,43],[67,0,53,67],[68,0,53,68],[72,0,53,72],[73,0,53,73],[81,0,53,81],[83,0,53,83],[91,0,53,91],[92,0,53,92],[93,0,53,93]],[[8,0,54,8],[12,0,54,12],[25,0,54,25],[27,0,54,27]],[[12,0,55,12],[19,0,55,19],[23,0,55,23],[24,0,55,24],[37,0,55,37],[39,0,55,39],[40,0,55,40],[70,0,55,70],[71,0,55,71],[84,0,55,84],[86,0,55,86],[90,0,55,90],[91,0,55,91],[92,0,55,92]],[[9,0,56,9]],[[13,0,56,15]],[[12,0,57,12],[19,0,57,19],[23,0,57,23],[24,0,57,24]],[[9,0,58,9]],[[4,0,59,4],[5,0,59,5]],[[4,0,61,4]],[],[[7,0,63,7]],[[4,0,64,11],[17,0,64,24]],[[8,0,65,8],[14,0,65,14],[27,0,65,27],[30,0,65,30],[42,0,65,42],[43,0,65,43],[67,0,65,67],[68,0,65,68],[72,0,65,72],[73,0,65,73],[81,0,65,81],[83,0,65,83],[91,0,65,91],[92,0,65,92],[93,0,65,93]],[[8,0,66,8],[15,0,66,15],[27,0,66,27],[28,0,66,28],[41,0,66,41],[42,0,66,42],[55,0,66,55],[56,0,66,56],[57,0,66,57]],[[4,0,67,4],[5,0,67,5]],[[4,0,69,4]],[],[],[[7,0,72,7]],[[4,0,73,4],[27,0,73,27]],[[8,0,74,8],[14,0,74,14],[27,0,74,27],[30,0,74,30],[42,0,74,42],[43,0,74,43],[67,0,74,67],[68,0,74,68],[72,0,74,72],[73,0,74,73],[81,0,74,81],[83,0,74,83],[91,0,74,91],[92,0,74,92],[93,0,74,93]],[[8,0,75,8],[15,0,75,15],[19,0,75,19],[37,0,75,37],[39,0,75,39],[40,0,75,40],[70,0,75,70],[71,0,75,71],[84,0,75,84],[86,0,75,86],[90,0,75,90],[91,0,75,91],[114,0,75,114],[116,0,75,116],[117,0,75,117],[118,0,75,118]],[[4,0,76,4],[5,0,76,5]],[[4,0,78,4]],[],[[7,0,80,7]],[[4,0,81,11],[21,0,81,28]],[[8,0,82,8],[14,0,82,14],[27,0,82,27],[30,0,82,30],[42,0,82,42],[43,0,82,43],[67,0,82,67],[68,0,82,68],[72,0,82,72],[73,0,82,73],[81,0,82,81],[83,0,82,83],[91,0,82,91],[92,0,82,92],[93,0,82,93]],[[8,0,83,8],[12,0,83,12],[25,0,83,25],[27,0,83,27]],[[12,0,84,12],[19,0,84,19],[32,0,84,32],[33,0,84,33],[45,0,84,45],[46,0,84,46],[53,0,84,53],[54,0,84,54],[55,0,84,55]],[[9,0,85,9]],[[13,0,85,15]],[[12,0,86,12],[19,0,86,19],[23,0,86,23],[24,0,86,24]],[[9,0,87,9]],[[4,0,88,4],[5,0,88,5]],[[4,0,90,4]],[],[],[[7,0,93,7]],[[4,0,94,14],[24,0,94,34],[25,0,94,35],[36,0,94,54]],[[8,0,95,8],[14,0,95,14],[27,0,95,27],[30,0,95,30],[42,0,95,42],[43,0,95,43],[67,0,95,67],[68,0,95,68],[72,0,95,72],[73,0,95,73],[81,0,95,81],[83,0,95,83],[91,0,95,91],[92,0,95,92],[93,0,95,93]],[[8,0,96,8],[12,0,96,12],[25,0,96,25],[27,0,96,27]],[[12,0,97,12],[25,0,97,25],[26,0,97,26],[38,0,97,38],[39,0,97,39],[46,0,97,46],[48,0,97,48],[59,0,97,59],[60,0,97,60],[61,0,97,61]],[[9,0,98,9]],[[4,0,99,4],[5,0,99,5]],[[4,0,101,4]],[],[],[],[],[],[[7,0,107,7]],[[4,0,108,14],[25,0,108,35],[26,0,108,36],[31,0,108,49]],[[8,0,109,8],[16,0,109,17],[21,0,109,22],[23,0,109,24]],[[12,0,110,12],[17,0,110,17],[26,0,110,26]],[[16,0,111,16],[23,0,111,23],[28,0,111,28],[29,0,111,29]],[[12,0,112,12],[17,0,112,17],[33,0,112,33]],[[16,0,113,16],[23,0,113,23],[35,0,113,35],[36,0,113,36]],[[12,0,114,12],[17,0,114,17],[28,0,114,28]],[[16,0,115,16],[23,0,115,23],[30,0,115,30],[31,0,115,31]],[[12,0,116,12]],[[16,0,117,16],[22,0,117,22],[26,0,117,26],[31,0,117,31],[32,0,117,32],[48,0,117,48],[51,0,117,52],[56,0,117,57],[57,0,117,58],[58,0,117,59]],[[9,0,118,9]],[[4,0,119,4],[5,0,119,5]],[[4,0,121,4]],[],[],[],[[7,0,125,7]],[[4,0,126,14],[25,0,126,35],[26,0,126,36],[37,0,126,55]],[[8,0,127,8],[16,0,127,17],[27,0,127,28],[29,0,127,30]],[[12,0,128,12],[17,0,128,17],[22,0,128,22]],[[16,0,129,16],[23,0,129,23],[32,0,129,32],[33,0,129,33]],[[12,0,130,12],[17,0,130,17],[36,0,130,36]],[[16,0,131,16],[23,0,131,23],[32,0,131,32],[33,0,131,33]],[[12,0,132,12],[17,0,132,17],[29,0,132,29]],[[16,0,133,16],[23,0,133,23],[39,0,133,39],[40,0,133,40]],[[12,0,134,12],[17,0,134,17],[35,0,134,35]],[[16,0,135,16],[23,0,135,23],[39,0,135,39],[40,0,135,40]],[[12,0,136,12],[17,0,136,17],[29,0,136,29]],[[16,0,137,16],[23,0,137,23],[39,0,137,39],[40,0,137,40]],[[12,0,138,12],[17,0,138,17],[42,0,138,42]],[[16,0,139,16],[23,0,139,23],[39,0,139,39],[40,0,139,40]],[[12,0,140,12],[17,0,140,17],[36,0,140,36]],[[16,0,141,16],[23,0,141,23],[39,0,141,39],[40,0,141,40]],[[12,0,142,12],[17,0,142,17],[43,0,142,43]],[[16,0,143,16],[23,0,143,23],[39,0,143,39],[40,0,143,40]],[[12,0,144,12],[17,0,144,17],[24,0,144,24]],[[16,0,145,16],[23,0,145,23],[34,0,145,34],[35,0,145,35]],[[12,0,146,12],[17,0,146,17],[29,0,146,29]],[[16,0,147,16],[23,0,147,23],[34,0,147,34],[35,0,147,35]],[[12,0,148,12]],[[16,0,149,16],[23,0,149,23],[32,0,149,32],[33,0,149,33]],[[9,0,150,9]],[[4,0,151,4],[5,0,151,5]],[[4,0,153,4]],[],[],[],[],[],[],[[7,0,160,7]],[[4,0,161,11],[20,0,161,27]],[[8,0,162,8],[14,0,162,14],[28,0,162,28],[31,0,162,31],[35,0,162,35],[36,0,162,36],[44,0,162,44],[45,0,162,45],[65,0,162,65],[66,0,162,66],[81,0,162,81],[82,0,162,82],[83,0,162,83]],[[8,0,163,8],[14,0,163,14],[24,0,163,24],[27,0,163,73],[29,0,163,75],[30,0,163,76]],[[8,0,164,8],[13,0,164,13],[17,0,164,17],[18,0,164,18],[21,0,164,21],[22,0,164,22],[24,0,164,24],[25,0,164,25],[28,0,164,28],[42,0,164,42],[43,0,164,43],[49,0,164,49],[51,0,164,51],[52,0,164,52],[54,0,164,54],[56,0,164,56]],[[12,0,165,12],[18,0,165,18],[22,0,165,22],[25,0,165,25],[39,0,165,39],[40,0,165,40],[44,0,165,44],[45,0,165,45],[46,0,165,46],[47,0,165,47],[48,0,165,48]],[[12,0,166,12],[16,0,166,16],[20,0,166,20],[21,0,166,21],[33,0,166,33],[34,0,166,34],[43,0,166,43],[44,0,166,44],[49,0,166,49],[59,0,166,59],[61,0,166,61]],[[16,0,167,16],[22,0,167,22],[37,0,167,37],[40,0,167,40],[44,0,167,44],[45,0,167,45],[65,0,167,65],[66,0,167,66],[75,0,167,75],[76,0,167,76],[77,0,167,77]],[[16,0,168,16],[20,0,168,20],[30,0,168,30],[33,0,168,33],[37,0,168,37],[38,0,168,38]],[[16,0,169,16],[20,0,169,20],[30,0,169,30],[33,0,169,33],[34,0,169,34],[35,0,169,35]],[[16,0,170,16],[21,0,170,21],[25,0,170,25],[26,0,170,26],[29,0,170,29],[30,0,170,30],[32,0,170,32],[33,0,170,33],[36,0,170,36],[51,0,170,51],[52,0,170,52],[58,0,170,58],[60,0,170,60],[61,0,170,61],[63,0,170,63],[65,0,170,65]],[[20,0,171,20],[26,0,171,26],[37,0,171,37],[40,0,171,40],[55,0,171,55],[56,0,171,56],[60,0,171,60],[61,0,171,61],[62,0,171,62],[63,0,171,63],[64,0,171,64]],[[20,0,172,20],[24,0,172,24],[35,0,172,35],[36,0,172,36],[48,0,172,48],[49,0,172,49],[63,0,172,63],[64,0,172,64],[69,0,172,69],[81,0,172,81],[83,0,172,83]],[[24,0,173,24],[34,0,173,34],[37,0,173,37],[49,0,173,49],[50,0,173,50],[59,0,173,59],[60,0,173,60],[71,0,173,71],[72,0,173,72],[73,0,173,73]],[[21,0,174,21]],[[20,0,175,20],[24,0,175,24],[35,0,175,35],[36,0,175,36],[48,0,175,48],[49,0,175,49],[63,0,175,63],[64,0,175,64],[69,0,175,69],[81,0,175,81],[83,0,175,83]],[[24,0,176,24],[34,0,176,34],[37,0,176,37],[43,0,176,43],[44,0,176,44],[52,0,176,52],[53,0,176,53],[65,0,176,65],[66,0,176,66],[75,0,176,75],[76,0,176,76],[87,0,176,87],[88,0,176,88],[90,0,176,90],[92,0,176,92],[93,0,176,93],[94,0,176,94]],[[21,0,177,21]],[[17,0,178,17]],[[16,0,179,16],[26,0,179,26],[27,0,179,27],[31,0,179,31],[32,0,179,32],[34,0,179,33],[44,0,179,43],[46,0,179,45],[56,0,179,55],[58,0,179,57],[68,0,179,67],[70,0,179,69],[80,0,179,79],[82,0,179,80],[83,0,179,81],[84,0,179,82]],[[13,0,180,13]],[[9,0,181,9]],[[8,0,182,8],[15,0,182,15],[25,0,182,25],[26,0,182,26]],[[4,0,183,4],[5,0,183,5]],[[4,0,185,4]],[],[],[],[],[[7,0,190,7]],[[4,0,191,11],[23,0,191,30],[24,0,191,31],[34,0,191,85]],[[8,0,192,8],[12,0,192,12],[13,0,192,13],[38,0,192,38],[40,0,192,40],[41,0,192,41]],[[8,0,193,8],[18,0,193,18],[19,0,193,19],[26,0,193,26],[27,0,193,27],[28,0,193,28],[31,0,193,31],[33,0,193,33],[35,0,193,35]],[[12,0,194,12],[18,0,194,18],[30,0,194,30],[33,0,194,33],[37,0,194,37],[38,0,194,38],[46,0,194,46],[47,0,194,47],[60,0,194,60],[61,0,194,61],[74,0,194,74],[75,0,194,75],[90,0,194,90],[91,0,194,91],[92,0,194,92]],[[12,0,195,12],[24,0,195,24],[25,0,195,25],[37,0,195,37],[38,0,195,38],[47,0,195,47],[49,0,195,49],[59,0,195,59],[60,0,195,60],[61,0,195,61]],[[12,0,196,12],[18,0,196,18],[31,0,196,31],[34,0,196,34],[38,0,196,38],[39,0,196,39],[47,0,196,47],[48,0,196,48],[61,0,196,61],[62,0,196,62],[75,0,196,75],[76,0,196,76],[85,0,196,85],[86,0,196,86],[87,0,196,87]],[[12,0,197,12],[25,0,197,25],[26,0,197,26],[38,0,197,38],[39,0,197,39],[53,0,197,53],[55,0,197,55],[67,0,197,67],[68,0,197,68],[69,0,197,69]],[[12,0,198,12],[25,0,198,25],[26,0,198,26],[37,0,198,37],[38,0,198,38],[42,0,198,42],[43,0,198,43],[51,0,198,51],[52,0,198,52],[65,0,198,65],[66,0,198,66],[80,0,198,80],[81,0,198,81],[84,0,198,84],[85,0,198,85],[95,0,198,95],[96,0,198,96],[97,0,198,97],[98,0,198,98]],[[12,0,199,12],[18,0,199,18],[29,0,199,29],[32,0,199,32],[36,0,199,36],[37,0,199,37],[45,0,199,45],[46,0,199,46],[59,0,199,59],[60,0,199,60],[73,0,199,73],[74,0,199,74],[83,0,199,83],[84,0,199,84],[85,0,199,85]],[[12,0,200,12],[23,0,200,23],[24,0,200,24],[36,0,200,36],[37,0,200,37],[51,0,200,51],[53,0,200,53],[65,0,200,65],[66,0,200,66],[67,0,200,67]],[[12,0,201,12],[23,0,201,23],[24,0,201,24],[35,0,201,35],[36,0,201,36],[40,0,201,40],[41,0,201,41],[49,0,201,49],[50,0,201,50],[63,0,201,63],[64,0,201,64],[78,0,201,78],[79,0,201,79],[82,0,201,82],[83,0,201,83],[93,0,201,93],[94,0,201,94],[102,0,201,102],[103,0,201,103],[105,0,201,105],[106,0,201,106],[107,0,201,107],[108,0,201,108],[109,0,201,109]],[[12,0,202,12],[24,0,202,24],[25,0,202,25],[36,0,202,36],[37,0,202,37],[50,0,202,50],[51,0,202,51],[52,0,202,52]],[[12,0,203,12],[24,0,203,24],[25,0,203,25],[36,0,203,36],[37,0,203,37],[48,0,203,48],[49,0,203,49],[50,0,203,50]],[[12,0,204,12],[16,0,204,16],[17,0,204,17],[25,0,204,25],[26,0,204,26],[37,0,204,37],[38,0,204,38],[50,0,204,50],[51,0,204,51],[52,0,204,52]],[[8,0,205,8],[9,0,205,9],[10,0,205,10],[11,0,205,11]],[[4,0,206,4],[5,0,206,5]],[[4,0,208,12],[29,0,208,37]],[[8,0,209,8],[14,0,209,14],[28,0,209,28],[31,0,209,31],[35,0,209,35],[36,0,209,36],[44,0,209,44],[45,0,209,45],[65,0,209,65],[66,0,209,66],[81,0,209,81],[82,0,209,82],[83,0,209,83]],[[8,0,210,8],[14,0,210,14],[25,0,210,25],[28,0,210,28],[30,0,210,30],[31,0,210,31]],[[8,0,211,8],[13,0,211,13],[17,0,211,17],[18,0,211,18],[21,0,211,21],[22,0,211,22],[24,0,211,24],[25,0,211,25],[28,0,211,28],[42,0,211,42],[43,0,211,43],[49,0,211,49],[51,0,211,51],[52,0,211,52],[54,0,211,54],[56,0,211,56]],[[12,0,212,12],[18,0,212,18],[22,0,212,22],[25,0,212,25],[39,0,212,39],[40,0,212,40],[44,0,212,44],[45,0,212,45],[46,0,212,46],[47,0,212,47],[48,0,212,48]],[[12,0,213,12],[16,0,213,16],[20,0,213,20],[21,0,213,21],[33,0,213,33],[34,0,213,34],[43,0,213,43],[44,0,213,44],[49,0,213,49],[59,0,213,59],[61,0,213,61]],[[16,0,214,16],[27,0,214,27],[28,0,214,28],[32,0,214,32],[33,0,214,33],[37,0,214,37],[38,0,214,38],[39,0,214,39]],[[13,0,215,13]],[[9,0,216,9]],[[8,0,217,8],[19,0,217,19],[20,0,217,20],[27,0,217,27],[28,0,217,28],[29,0,217,29],[33,0,217,33],[35,0,217,35],[37,0,217,37],[40,0,217,39],[44,0,217,43],[45,0,217,44],[55,0,217,54],[56,0,217,55],[67,0,217,66],[68,0,217,67],[72,0,217,71],[73,0,217,72],[74,0,217,73],[75,0,217,74],[76,0,217,75],[77,0,217,76],[78,0,217,77]],[[4,0,218,4],[5,0,218,5]],[[4,0,220,4]],[],[],[],[[7,0,224,7]],[[4,0,225,11],[15,0,225,22]],[[8,0,226,8],[14,0,226,14],[22,0,226,22],[25,0,226,25],[29,0,226,29],[30,0,226,30],[62,0,226,62],[63,0,226,63],[76,0,226,76],[77,0,226,77],[78,0,226,78]],[[8,0,227,8],[12,0,227,12],[20,0,227,20],[22,0,227,22]],[[12,0,228,12],[19,0,228,19],[31,0,228,31],[32,0,228,32],[41,0,228,41],[42,0,228,42],[50,0,228,50],[51,0,228,51],[52,0,228,52]],[[9,0,229,9]],[[13,0,229,15]],[[12,0,230,12],[19,0,230,19],[23,0,230,23],[24,0,230,24]],[[9,0,231,9]],[[4,0,232,4],[5,0,232,5]],[[4,0,234,4]],[],[],[[7,0,237,7]],[[4,0,238,11],[18,0,238,25],[19,0,238,26],[30,0,238,45]],[[8,0,239,8],[12,0,239,12],[20,0,239,20],[23,0,239,23],[27,0,239,27],[28,0,239,28],[60,0,239,60],[61,0,239,61],[74,0,239,74],[75,0,239,75],[76,0,239,76]],[[8,0,240,8],[12,0,240,12],[23,0,240,23],[25,0,240,25]],[[12,0,241,11],[16,0,241,15],[33,0,241,32],[34,0,241,33],[42,0,241,41],[43,0,241,42],[45,0,241,44]],[[16,0,242,15],[28,0,242,27]],[[16,0,243,15],[24,0,243,23],[27,0,243,26],[31,0,243,30],[32,0,243,31],[66,0,243,65],[67,0,243,66],[80,0,243,79],[82,0,243,81],[93,0,243,92],[94,0,243,93],[95,0,243,94]],[[13,0,244,12]],[[17,0,244,18]],[[16,0,245,15],[28,0,245,27],[29,0,245,28],[57,0,245,56],[58,0,245,57],[66,0,245,65],[68,0,245,67],[79,0,245,78],[80,0,245,79],[81,0,245,80]],[[13,0,246,12]],[[9,0,247,9]],[[13,0,247,15]],[[12,0,248,12],[16,0,248,16],[17,0,248,17],[34,0,248,34],[35,0,248,35],[43,0,248,43],[44,0,248,44],[46,0,248,46]],[[16,0,249,16],[30,0,249,30]],[[16,0,250,16],[20,0,250,20],[21,0,250,21],[55,0,250,55],[56,0,250,56],[69,0,250,69],[70,0,250,70],[71,0,250,71]],[[13,0,251,13]],[[9,0,252,9]],[[4,0,253,4],[5,0,253,5]],[[4,0,255,4]],[],[],[],[[7,0,259,7]],[[4,0,260,12],[36,0,260,44],[37,0,260,45],[46,0,260,62]],[[8,0,261,8],[14,0,261,14],[26,0,261,26],[29,0,261,29],[33,0,261,33],[34,0,261,34],[42,0,261,42],[43,0,261,43],[63,0,261,63],[64,0,261,64],[70,0,261,70],[71,0,261,71],[72,0,261,72]],[[8,0,262,8],[13,0,262,13],[17,0,262,17],[18,0,262,18],[21,0,262,21],[22,0,262,22],[24,0,262,24],[25,0,262,25],[28,0,262,28],[40,0,262,40],[41,0,262,41],[47,0,262,47],[49,0,262,49],[50,0,262,50],[52,0,262,52],[54,0,262,54]],[[12,0,263,12],[18,0,263,18],[26,0,263,26],[29,0,263,29],[41,0,263,41],[42,0,263,42],[46,0,263,46],[47,0,263,47],[48,0,263,48],[49,0,263,49],[50,0,263,50]],[[12,0,264,12],[16,0,264,16],[24,0,264,24],[25,0,264,25],[37,0,264,37],[38,0,264,38],[44,0,264,44],[45,0,264,45],[50,0,264,50],[59,0,264,59],[61,0,264,61]],[[16,0,265,16],[23,0,265,23],[31,0,265,31],[32,0,265,32]],[[13,0,266,13]],[[9,0,267,9]],[[8,0,268,8],[15,0,268,15],[19,0,268,19],[20,0,268,20]],[[4,0,269,4],[5,0,269,5]],[[4,0,271,4]],[],[],[[7,0,274,7]],[[4,0,275,12],[33,0,275,41]],[[8,0,276,8],[14,0,276,14],[26,0,276,26],[29,0,276,29],[33,0,276,33],[34,0,276,34],[42,0,276,42],[43,0,276,43],[63,0,276,63],[64,0,276,64],[70,0,276,70],[71,0,276,71],[72,0,276,72]],[[8,0,277,8],[14,0,277,14],[20,0,277,20],[23,0,277,34],[25,0,277,36],[26,0,277,37]],[[8,0,278,8],[13,0,278,13],[17,0,278,17],[18,0,278,18],[21,0,278,21],[22,0,278,22],[24,0,278,24],[25,0,278,25],[28,0,278,28],[40,0,278,40],[41,0,278,41],[47,0,278,47],[49,0,278,49],[50,0,278,50],[52,0,278,52],[54,0,278,54]],[[12,0,279,12],[18,0,279,18],[26,0,279,26],[29,0,279,29],[41,0,279,41],[42,0,279,42],[46,0,279,46],[47,0,279,47],[48,0,279,48],[49,0,279,49],[50,0,279,50]],[[12,0,280,12],[18,0,280,18],[31,0,280,31],[34,0,280,34],[42,0,280,42],[43,0,280,43],[55,0,280,55],[56,0,280,56],[62,0,280,62],[63,0,280,63],[64,0,280,64]],[[12,0,281,12],[16,0,281,16],[29,0,281,29],[34,0,281,34],[47,0,281,47],[51,0,281,51],[64,0,281,64],[69,0,281,69],[78,0,281,78],[80,0,281,80]],[[16,0,282,16],[22,0,282,22],[23,0,282,23],[27,0,282,27],[28,0,282,28],[36,0,282,36],[37,0,282,37],[38,0,282,38]],[[13,0,283,13]],[[9,0,284,9]],[[8,0,285,8],[15,0,285,15],[21,0,285,21],[22,0,285,22]],[[4,0,286,4],[5,0,286,5]],[[4,0,288,4]],[],[],[],[],[[7,0,293,7]],[[4,0,294,12],[38,0,294,46],[39,0,294,47],[52,0,294,68],[54,0,294,70],[61,0,294,85]],[[8,0,295,8],[14,0,295,14],[25,0,295,25],[28,0,295,28],[32,0,295,32],[33,0,295,33],[41,0,295,41],[42,0,295,42],[55,0,295,55],[56,0,295,56],[69,0,295,69],[70,0,295,70],[76,0,295,76],[77,0,295,77],[78,0,295,78]],[[8,0,296,8],[12,0,296,12],[25,0,296,25],[27,0,296,27]],[[12,0,297,12],[23,0,297,23],[24,0,297,24],[36,0,297,36],[37,0,297,37],[43,0,297,43],[45,0,297,45],[58,0,297,58],[59,0,297,59],[60,0,297,60]],[[9,0,298,9]],[[8,0,299,8],[19,0,299,19],[20,0,299,20],[32,0,299,32],[33,0,299,33],[43,0,299,43],[45,0,299,45],[48,0,299,48],[49,0,299,49],[50,0,299,50]],[[8,0,300,8],[12,0,300,12],[19,0,300,19],[21,0,300,21]],[[12,0,301,12],[24,0,301,24],[25,0,301,25],[53,0,301,53],[54,0,301,54],[65,0,301,65],[67,0,301,67],[74,0,301,74],[75,0,301,75],[76,0,301,76]],[[9,0,302,9]],[[8,0,303,8],[12,0,303,12],[13,0,303,13],[21,0,303,21],[22,0,303,22],[33,0,303,33],[34,0,303,34],[45,0,303,45],[46,0,303,46],[47,0,303,47]],[[8,0,304,8],[15,0,304,15],[26,0,304,26],[27,0,304,27]],[[4,0,305,4],[5,0,305,5]],[[4,0,307,4]],[],[],[[7,0,310,7]],[[4,0,311,12],[38,0,311,46],[39,0,311,47],[48,0,311,64]],[[8,0,312,8],[14,0,312,14],[25,0,312,25],[28,0,312,28],[32,0,312,32],[33,0,312,33],[65,0,312,65],[66,0,312,66],[75,0,312,75],[76,0,312,76],[77,0,312,77]],[[8,0,313,8],[12,0,313,12],[23,0,313,23],[25,0,313,25]],[[12,0,314,12],[16,0,314,16],[17,0,314,17],[25,0,314,25],[26,0,314,26],[37,0,314,37],[38,0,314,38],[49,0,314,49],[50,0,314,50],[51,0,314,51]],[[9,0,315,9]],[[4,0,316,4],[5,0,316,5]],[[4,0,318,4]],[],[[7,0,320,7]],[[4,0,321,12],[35,0,321,43]],[[8,0,322,8],[14,0,322,14],[26,0,322,26],[29,0,322,29],[33,0,322,33],[34,0,322,34],[63,0,322,63],[65,0,322,65],[66,0,322,66]],[[8,0,323,8],[20,0,323,20],[21,0,323,21],[28,0,323,28],[29,0,323,29],[30,0,323,30],[41,0,323,41],[43,0,323,43],[45,0,323,45]],[[12,0,324,12],[16,0,324,16],[17,0,324,17],[25,0,324,25],[26,0,324,26],[37,0,324,37],[38,0,324,38],[49,0,324,49],[50,0,324,50],[51,0,324,51]],[[8,0,325,8],[9,0,325,9],[10,0,325,10],[11,0,325,11]],[[4,0,326,4],[5,0,326,5]],[[4,0,328,4]],[],[],[],[],[[7,0,333,7]],[[4,0,334,11],[11,0,334,18]],[[8,0,335,8],[14,0,335,14],[22,0,335,22],[25,0,335,25],[29,0,335,29],[30,0,335,30],[62,0,335,62],[63,0,335,63],[72,0,335,72],[73,0,335,73],[74,0,335,74]],[[8,0,336,8],[12,0,336,12],[20,0,336,20],[22,0,336,22]],[[12,0,337,12],[19,0,337,19],[31,0,337,31],[32,0,337,32],[41,0,337,41],[42,0,337,42],[50,0,337,50],[51,0,337,51],[52,0,337,52]],[[9,0,338,9]],[[13,0,338,15]],[[12,0,339,12],[19,0,339,19],[23,0,339,23],[24,0,339,24]],[[9,0,340,9]],[[4,0,341,4],[5,0,341,5]],[[4,0,343,4]],[],[],[[7,0,346,7]],[[4,0,347,11],[14,0,347,21],[15,0,347,22],[22,0,347,37]],[[8,0,348,8],[12,0,348,12],[20,0,348,20],[23,0,348,23],[27,0,348,27],[28,0,348,28],[60,0,348,60],[61,0,348,61],[70,0,348,70],[71,0,348,71],[72,0,348,72]],[[8,0,349,8],[12,0,349,12],[19,0,349,19],[21,0,349,21]],[[12,0,350,12],[16,0,350,16],[33,0,350,33],[34,0,350,34],[42,0,350,42],[43,0,350,43],[45,0,350,45]],[[16,0,351,16],[28,0,351,28]],[[16,0,352,16],[24,0,352,24],[27,0,352,27],[31,0,352,31],[32,0,352,32],[66,0,352,66],[67,0,352,67],[76,0,352,76],[78,0,352,78],[85,0,352,85],[86,0,352,86],[87,0,352,87]],[[13,0,353,13]],[[17,0,353,19]],[[16,0,354,16],[28,0,354,28],[29,0,354,29],[57,0,354,57],[58,0,354,58],[66,0,354,66],[68,0,354,68],[75,0,354,75],[76,0,354,76],[77,0,354,77]],[[13,0,355,13]],[[9,0,356,9]],[[13,0,356,15]],[[12,0,357,12],[16,0,357,16],[17,0,357,17],[34,0,357,34],[35,0,357,35],[43,0,357,43],[44,0,357,44],[46,0,357,46]],[[16,0,358,16],[30,0,358,30]],[[16,0,359,16],[20,0,359,20],[21,0,359,21],[55,0,359,55],[56,0,359,56],[65,0,359,65],[66,0,359,66],[67,0,359,67]],[[13,0,360,13]],[[9,0,361,9]],[[4,0,362,4],[5,0,362,5]],[[4,0,364,4]],[],[],[],[[7,0,368,7]],[[4,0,369,11],[9,0,369,16]],[[8,0,370,8],[14,0,370,14],[26,0,370,26],[29,0,370,40],[33,0,370,44],[34,0,370,45],[63,0,370,74],[65,0,370,76],[66,0,370,77]],[[8,0,371,8],[15,0,371,15],[27,0,371,27],[28,0,371,28],[31,0,371,31],[32,0,371,32],[36,0,371,36],[37,0,371,37],[39,0,371,39]],[[12,0,372,12],[19,0,372,19]],[[16,0,373,16],[20,0,373,20],[22,0,373,22],[26,0,373,26],[27,0,373,27],[39,0,373,39],[40,0,373,40],[46,0,373,46],[47,0,373,47]],[[16,0,374,16],[20,0,374,20],[22,0,374,22],[34,0,374,34],[35,0,374,35],[44,0,374,44],[45,0,374,45],[49,0,374,49],[50,0,374,50]],[[13,0,375,13],[14,0,375,14]],[[8,0,376,8],[9,0,376,9],[10,0,376,10],[11,0,376,11]],[[4,0,377,5],[5,0,377,6]],[[4,0,379,4]],[],[],[],[[7,0,383,7]],[[4,0,384,11],[20,0,384,27]],[[8,0,385,8],[15,0,385,15],[19,0,385,19],[20,0,385,20]],[[4,0,386,4],[5,0,386,5]],[[4,0,388,4]],[],[],[],[[7,0,392,7]],[[4,0,393,11],[12,0,393,19],[13,0,393,20],[21,0,393,37]],[[8,0,394,8],[12,0,394,12],[13,0,394,13],[30,0,394,30],[31,0,394,31],[39,0,394,39],[40,0,394,40],[42,0,394,42]],[[12,0,395,12],[16,0,395,16],[17,0,395,17],[27,0,395,27],[28,0,395,28],[36,0,395,36],[37,0,395,37],[38,0,395,38]],[[9,0,396,9]],[[8,0,397,8],[12,0,397,12],[13,0,397,13],[44,0,397,44],[46,0,397,46],[47,0,397,47]],[[8,0,398,8],[12,0,398,12],[13,0,398,13],[30,0,398,30],[31,0,398,31],[39,0,398,39],[40,0,398,40],[42,0,398,42]],[[12,0,399,12],[20,0,399,20],[21,0,399,21],[28,0,399,28],[29,0,399,29],[30,0,399,30],[34,0,399,34],[36,0,399,36],[38,0,399,38]],[[16,0,400,16],[22,0,400,22],[30,0,400,30],[33,0,400,33],[37,0,400,37],[38,0,400,38],[72,0,400,72],[73,0,400,73],[77,0,400,77],[78,0,400,78],[82,0,400,82],[84,0,400,84],[88,0,400,88],[89,0,400,89],[93,0,400,93],[94,0,400,94],[95,0,400,95]],[[12,0,401,12],[13,0,401,13],[14,0,401,14],[15,0,401,15]],[[9,0,402,9]],[[4,0,403,4],[5,0,403,5]],[[4,0,405,4]],[],[],[[7,0,408,7]],[[4,0,409,14],[19,0,409,29],[20,0,409,30],[31,0,409,49]],[[8,0,410,8],[12,0,410,12],[18,0,410,18],[21,0,410,21],[33,0,410,33],[34,0,410,34],[58,0,410,58],[59,0,410,59],[63,0,410,63],[64,0,410,64],[72,0,410,72],[74,0,410,74],[82,0,410,82],[83,0,410,83],[84,0,410,84]],[[8,0,411,8],[12,0,411,12],[13,0,411,13],[19,0,411,19],[21,0,411,21]],[[12,0,412,12],[18,0,412,18],[24,0,412,24],[27,0,412,27],[39,0,412,39],[40,0,412,40],[64,0,412,64],[65,0,412,65],[69,0,412,69],[70,0,412,70],[78,0,412,78],[80,0,412,80],[88,0,412,88],[89,0,412,89],[90,0,412,90]],[[12,0,413,12],[18,0,413,18],[21,0,413,21],[33,0,413,33],[34,0,413,34],[56,0,413,56],[57,0,413,57],[65,0,413,65],[67,0,413,67],[73,0,413,73],[74,0,413,74],[75,0,413,75]],[[9,0,414,9]],[[8,0,415,8],[20,0,415,20],[21,0,415,21],[49,0,415,49],[50,0,415,50],[56,0,415,56],[58,0,415,67],[69,0,415,78],[70,0,415,79],[71,0,415,80]],[[8,0,416,8],[12,0,416,12],[13,0,416,13],[27,0,416,27],[28,0,416,28],[44,0,416,44],[45,0,416,45],[46,0,416,46]],[[4,0,417,4],[5,0,417,5]],[[4,0,419,4]],[],[],[],[],[[7,0,424,7]],[[4,0,425,11],[27,0,425,34],[28,0,425,35],[41,0,425,57],[43,0,425,59],[54,0,425,79],[56,0,425,81],[66,0,425,117]],[[8,0,426,8],[14,0,426,14],[21,0,426,21],[24,0,426,34],[28,0,426,38],[29,0,426,39],[37,0,426,47],[38,0,426,48],[47,0,426,57],[48,0,426,58],[52,0,426,62],[53,0,426,63],[54,0,426,64]],[[8,0,427,8],[14,0,427,14],[19,0,427,19],[22,0,427,22],[26,0,427,26],[40,0,427,40],[41,0,427,41],[48,0,427,48],[50,0,427,50],[54,0,427,54],[55,0,427,55],[58,0,427,58],[60,0,427,60],[70,0,427,70],[71,0,427,71],[72,0,427,72]],[[8,0,428,8],[13,0,428,13],[14,0,428,14],[31,0,428,31],[32,0,428,32],[45,0,428,45],[47,0,428,47],[58,0,428,58],[59,0,428,59],[60,0,428,60]],[[8,0,429,8],[15,0,429,15],[20,0,429,20],[21,0,429,21]],[[4,0,430,4],[5,0,430,5]],[[4,0,432,4]],[],[],[[7,0,435,7]],[[4,0,436,11],[21,0,436,28],[22,0,436,29],[35,0,436,51],[37,0,436,53],[48,0,436,73]],[[8,0,437,8],[14,0,437,14],[20,0,437,20],[23,0,437,23],[35,0,437,35],[36,0,437,36],[60,0,437,60],[61,0,437,61],[65,0,437,65],[66,0,437,66],[74,0,437,74],[76,0,437,76],[84,0,437,84],[85,0,437,85],[86,0,437,86]],[[8,0,438,8],[12,0,438,12],[18,0,438,18],[21,0,438,21],[33,0,438,33],[34,0,438,34],[58,0,438,58],[59,0,438,59],[63,0,438,63],[64,0,438,64],[72,0,438,72],[74,0,438,74],[82,0,438,82],[83,0,438,83],[84,0,438,84]],[[8,0,439,8],[12,0,439,12],[13,0,439,13],[19,0,439,19],[21,0,439,21]],[[12,0,440,12],[18,0,440,18],[21,0,440,21],[33,0,440,33],[34,0,440,34],[56,0,440,56],[57,0,440,57],[65,0,440,65],[67,0,440,67],[73,0,440,73],[74,0,440,74],[75,0,440,75]],[[9,0,441,9]],[[8,0,442,8],[12,0,442,12],[25,0,442,25],[29,0,442,29],[40,0,442,40],[42,0,442,42]],[[12,0,443,12],[18,0,443,18],[30,0,443,30],[33,0,443,33],[45,0,443,45],[46,0,443,46],[59,0,443,59],[60,0,443,60],[66,0,443,66],[67,0,443,67],[68,0,443,68]],[[12,0,444,12],[16,0,444,16],[31,0,444,31],[34,0,444,34],[46,0,444,46],[47,0,444,47]],[[12,0,445,12],[16,0,445,16],[17,0,445,17],[21,0,445,21],[22,0,445,22],[34,0,445,34],[35,0,445,35],[47,0,445,47],[48,0,445,48],[50,0,445,50]],[[16,0,446,16],[31,0,446,31],[34,0,446,34],[38,0,446,38],[39,0,446,39],[62,0,446,62],[64,0,446,64],[65,0,446,65],[93,0,446,93],[95,0,446,95]],[[22,0,447,22],[34,0,447,34]],[[22,0,448,22],[26,0,448,26],[27,0,448,27],[50,0,448,50],[52,0,448,52],[53,0,448,53],[80,0,448,80],[82,0,448,82],[83,0,448,83]],[[13,0,449,13]],[[12,0,450,12],[24,0,450,24],[25,0,450,25],[53,0,450,53],[54,0,450,54],[60,0,450,60],[62,0,450,62],[77,0,450,77],[78,0,450,78],[79,0,450,79]],[[9,0,451,9]],[[13,0,451,15]],[[12,0,452,12],[24,0,452,24],[25,0,452,25],[53,0,452,53],[54,0,452,54],[60,0,452,60],[62,0,452,62],[64,0,452,64],[65,0,452,65],[66,0,452,66]],[[9,0,453,9]],[[8,0,454,8],[12,0,454,12],[25,0,454,25],[27,0,454,27]],[[12,0,455,12],[18,0,455,18],[19,0,455,19],[31,0,455,31],[32,0,455,32],[39,0,455,39],[41,0,455,41],[45,0,455,45],[46,0,455,46],[67,0,455,67],[68,0,455,68],[79,0,455,79],[80,0,455,80],[81,0,455,81],[82,0,455,82]],[[9,0,456,9]],[[13,0,456,15]],[[12,0,457,12],[18,0,457,18],[19,0,457,19],[31,0,457,31],[32,0,457,32],[39,0,457,39],[41,0,457,41],[45,0,457,45],[46,0,457,46],[67,0,457,67],[68,0,457,68],[77,0,457,77],[78,0,457,78],[79,0,457,79],[80,0,457,80]],[[9,0,458,9]],[[4,0,459,4],[5,0,459,5]],[[1,0,460,1]]],"sourcesContent":["import {STATE_NEW, STATE_TRANSLATED, STATE_FINAL} from '../api/constants';\r\nimport {ITranslationMessagesFile} from '../api/i-translation-messages-file';\r\nimport {INormalizedMessage} from '../api/i-normalized-message';\r\nimport {ITransUnit} from '../api/i-trans-unit';\r\nimport {INote} from '../api/i-note';\r\nimport {DOMUtilities} from './dom-utilities';\r\nimport {AbstractTransUnit} from './abstract-trans-unit';\r\nimport {XliffMessageParser} from './xliff-message-parser';\r\nimport {ParsedMessage} from './parsed-message';\r\nimport {AbstractMessageParser} from './abstract-message-parser';\r\nimport {isNullOrUndefined} from 'is-what';\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XLIFF 1.2 file.\r\n */\r\n\r\nexport class XliffTransUnit extends AbstractTransUnit implements ITransUnit {\r\n\r\n    constructor(_element: Element, _id: string, _translationMessagesFile: ITranslationMessagesFile) {\r\n        super(_element, _id, _translationMessagesFile);\r\n    }\r\n\r\n    public sourceContent(): string {\r\n        const sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        return DOMUtilities.getXMLContent(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    public setSourceContent(newContent: string) {\r\n        let source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (!source) {\r\n            // should not happen, there always has to be a source, but who knows..\r\n            source = this._element.appendChild(this._element.ownerDocument.createElement('source'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(source, newContent);\r\n    }\r\n\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    protected messageParser(): AbstractMessageParser {\r\n        return new XliffMessageParser();\r\n    }\r\n\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    public createSourceContentNormalized(): ParsedMessage {\r\n        const sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (sourceElement) {\r\n            return this.messageParser().createNormalizedMessageFromXML(sourceElement, null);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    public targetContent(): string {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return DOMUtilities.getXMLContent(targetElement);\r\n    }\r\n\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    targetContentNormalized(): INormalizedMessage {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return new XliffMessageParser().createNormalizedMessageFromXML(targetElement, this.sourceContentNormalized());\r\n    }\r\n\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     */\r\n    public nativeTargetState(): string {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (targetElement) {\r\n            return targetElement.getAttribute('state');\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set state in xml.\r\n     * @param nativeState nativeState\r\n     */\r\n    protected setNativeTargetState(nativeState: string) {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (targetElement) {\r\n            targetElement.setAttribute('state', nativeState);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    protected mapStateToNativeState(state: string): string {\r\n        switch ( state) {\r\n            case STATE_NEW:\r\n                return 'new';\r\n            case STATE_TRANSLATED:\r\n                return 'translated';\r\n            case STATE_FINAL:\r\n                return 'final';\r\n            default:\r\n                throw new Error('unknown state ' +  state);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    protected mapNativeStateToState(nativeState: string): string {\r\n        switch ( nativeState) {\r\n            case 'new':\r\n                return STATE_NEW;\r\n            case 'needs-translation':\r\n                return STATE_NEW;\r\n            case 'translated':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-adaptation':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-l10n':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-adaptation':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-l10n':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-translation':\r\n                return STATE_TRANSLATED;\r\n            case 'final':\r\n                return STATE_FINAL;\r\n            case 'signed-off':\r\n                return STATE_FINAL;\r\n            default:\r\n                return STATE_NEW;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    public sourceReferences(): {sourcefile: string, linenumber: number}[] {\r\n        const sourceElements = this._element.getElementsByTagName('context-group');\r\n        const sourceRefs: { sourcefile: string, linenumber: number }[] = [];\r\n        for (let i = 0; i < sourceElements.length; i++) {\r\n            const elem = sourceElements.item(i);\r\n            if (elem.getAttribute('purpose') === 'location') {\r\n                const contextElements = elem.getElementsByTagName('context');\r\n                let sourcefile = null;\r\n                let linenumber = 0;\r\n                for (let j = 0; j < contextElements.length; j++) {\r\n                    const contextElem = contextElements.item(j);\r\n                    if (contextElem.getAttribute('context-type') === 'sourcefile') {\r\n                        sourcefile = DOMUtilities.getPCDATA(contextElem);\r\n                    }\r\n                    if (contextElem.getAttribute('context-type') === 'linenumber') {\r\n                        linenumber = Number.parseInt(DOMUtilities.getPCDATA(contextElem), 10);\r\n                    }\r\n                }\r\n                sourceRefs.push({sourcefile: sourcefile, linenumber: linenumber});\r\n            }\r\n        }\r\n        return sourceRefs;\r\n    }\r\n\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    public setSourceReferences(sourceRefs: {sourcefile: string, linenumber: number}[]) {\r\n        this.removeAllSourceReferences();\r\n        sourceRefs.forEach((ref) => {\r\n            const contextGroup = this._element.ownerDocument.createElement('context-group');\r\n            contextGroup.setAttribute('purpose', 'location');\r\n            const contextSource = this._element.ownerDocument.createElement('context');\r\n            contextSource.setAttribute('context-type', 'sourcefile');\r\n            contextSource.appendChild(this._element.ownerDocument.createTextNode(ref.sourcefile));\r\n            const contextLine = this._element.ownerDocument.createElement('context');\r\n            contextLine.setAttribute('context-type', 'linenumber');\r\n            contextLine.appendChild(this._element.ownerDocument.createTextNode(ref.linenumber.toString(10)));\r\n            contextGroup.appendChild(contextSource);\r\n            contextGroup.appendChild(contextLine);\r\n            this._element.appendChild(contextGroup);\r\n        });\r\n    }\r\n\r\n    private removeAllSourceReferences() {\r\n        const sourceElements = this._element.getElementsByTagName('context-group');\r\n        const toBeRemoved = [];\r\n        for (let i = 0; i < sourceElements.length; i++) {\r\n            const elem = sourceElements.item(i);\r\n            if (elem.getAttribute('purpose') === 'location') {\r\n                toBeRemoved.push(elem);\r\n            }\r\n        }\r\n        toBeRemoved.forEach((elem) => {elem.parentNode.removeChild(elem); });\r\n    }\r\n\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"description\".\r\n     */\r\n    public description(): string {\r\n        const noteElem = this.findNoteElementWithFromAttribute('description');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    public setDescription(description: string) {\r\n        let noteElem = this.findNoteElementWithFromAttribute('description');\r\n        if (description) {\r\n           if (isNullOrUndefined(noteElem)) {\r\n               // create it\r\n               noteElem = this.createNoteElementWithFromAttribute('description', description);\r\n           } else {\r\n               DOMUtilities.replaceContentWithXMLContent(noteElem, description);\r\n           }\r\n        } else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithFromAttribute('description');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Find a note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     * @return element or null is absent\r\n     */\r\n    private findNoteElementWithFromAttribute(attrValue: string): Element {\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('from') === attrValue) {\r\n                return noteElem;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return elements\r\n     */\r\n    private findAllAdditionalNoteElements(): Element[] {\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        const result: Element[] = [];\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const noteElem = noteElements.item(i);\r\n            const fromAttribute = noteElem.getAttribute('from');\r\n            if (fromAttribute !== 'description' && fromAttribute !== 'meaning') {\r\n                result.push(noteElem);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param fromAttrValue value of \"from\" attribute\r\n     * @param content text value of note element\r\n     * @return the new created element\r\n     */\r\n    private createNoteElementWithFromAttribute(fromAttrValue: string, content: string): Element {\r\n        const noteElement = this._element.ownerDocument.createElement('note');\r\n        if (fromAttrValue) {\r\n            noteElement.setAttribute('from', fromAttrValue);\r\n        }\r\n        noteElement.setAttribute('priority', '1');\r\n        if (content) {\r\n            DOMUtilities.replaceContentWithXMLContent(noteElement, content);\r\n        }\r\n        this._element.appendChild(noteElement);\r\n        return noteElement;\r\n    }\r\n\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     */\r\n    private removeNoteElementWithFromAttribute(attrValue: string) {\r\n        const noteElement = this.findNoteElementWithFromAttribute(attrValue);\r\n        if (noteElement) {\r\n            this._element.removeChild(noteElement);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     */\r\n    private removeAllAdditionalNoteElements() {\r\n        const noteElements = this.findAllAdditionalNoteElements();\r\n        noteElements.forEach((noteElement) => {\r\n            this._element.removeChild(noteElement);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"meaning\".\r\n     */\r\n    public meaning(): string {\r\n        const noteElem = this.findNoteElementWithFromAttribute('meaning');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param  meaning meaning\r\n     */\r\n    public setMeaning(meaning: string) {\r\n        let noteElem = this.findNoteElementWithFromAttribute('meaning');\r\n        if (meaning) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                noteElem = this.createNoteElementWithFromAttribute('meaning', meaning);\r\n            } else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, meaning);\r\n            }\r\n        } else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithFromAttribute('meaning');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     */\r\n    public notes(): INote[] {\r\n        const noteElememts: Element[] = this.findAllAdditionalNoteElements();\r\n        return noteElememts.map(elem => {\r\n            return {\r\n                from: elem.getAttribute('from'),\r\n                text: DOMUtilities.getPCDATA(elem)\r\n            };\r\n        });\r\n     }\r\n\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    public supportsSetNotes(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     */\r\n    public setNotes(newNotes: INote[]) {\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            this.checkNotes(newNotes);\r\n        }\r\n        this.removeAllAdditionalNoteElements();\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            newNotes.forEach((note) => {\r\n                const noteElem = this.createNoteElementWithFromAttribute(note.from, note.text);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    protected translateNative(translation: string) {\r\n        let target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            const source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n            target = DOMUtilities.createFollowingSibling('target', source);\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, <string> translation);\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    }\r\n\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     */\r\n    public cloneWithSourceAsTarget(isDefaultLang: boolean, copyContent: boolean, targetFile: ITranslationMessagesFile): AbstractTransUnit {\r\n        const element = <Element> this._element.cloneNode(true);\r\n        const clone = new XliffTransUnit(element, this._id, targetFile);\r\n        clone.useSourceAsTarget(isDefaultLang, copyContent);\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    public useSourceAsTarget(isDefaultLang: boolean, copyContent: boolean) {\r\n        const source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        let target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            target = DOMUtilities.createFollowingSibling('target', source);\r\n        }\r\n        if (isDefaultLang || copyContent) {\r\n            const sourceString = DOMUtilities.getXMLContent(source);\r\n            let newTargetString = sourceString;\r\n            if (!this.isICUMessage(sourceString)) {\r\n                newTargetString = this.translationMessagesFile().getNewTransUnitTargetPraefix()\r\n                    + sourceString\r\n                    + this.translationMessagesFile().getNewTransUnitTargetSuffix();\r\n            }\r\n            DOMUtilities.replaceContentWithXMLContent(target, newTargetString);\r\n        } else {\r\n            DOMUtilities.replaceContentWithXMLContent(target, '');\r\n        }\r\n        if (isDefaultLang) {\r\n            target.setAttribute('state', this.mapStateToNativeState(STATE_FINAL));\r\n        } else {\r\n            target.setAttribute('state', this.mapStateToNativeState(STATE_NEW));\r\n        }\r\n    }\r\n}\r\n"]},"resolvedIds":{"is-what":{"external":true,"id":"is-what","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../api/constants":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./dom-utilities":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./abstract-trans-unit":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-trans-unit.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./xliff-message-parser":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff-message-parser.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":29809,"body":[{"type":"ImportDeclaration","start":0,"end":30,"specifiers":[{"type":"ImportSpecifier","start":9,"end":15,"imported":{"type":"Identifier","start":9,"end":15,"name":"format"},"local":{"type":"Identifier","start":9,"end":15,"name":"format"}}],"source":{"type":"Literal","start":23,"end":29,"value":"util","raw":"'util'"}},{"type":"ImportDeclaration","start":32,"end":100,"specifiers":[{"type":"ImportSpecifier","start":41,"end":55,"imported":{"type":"Identifier","start":41,"end":55,"name":"FORMAT_XLIFF12"},"local":{"type":"Identifier","start":41,"end":55,"name":"FORMAT_XLIFF12"}},{"type":"ImportSpecifier","start":57,"end":73,"imported":{"type":"Identifier","start":57,"end":73,"name":"FILETYPE_XLIFF12"},"local":{"type":"Identifier","start":57,"end":73,"name":"FILETYPE_XLIFF12"}}],"source":{"type":"Literal","start":81,"end":99,"value":"../api/constants","raw":"'../api/constants'"}},{"type":"ImportDeclaration","start":102,"end":149,"specifiers":[{"type":"ImportSpecifier","start":111,"end":123,"imported":{"type":"Identifier","start":111,"end":123,"name":"DOMUtilities"},"local":{"type":"Identifier","start":111,"end":123,"name":"DOMUtilities"}}],"source":{"type":"Literal","start":131,"end":148,"value":"./dom-utilities","raw":"'./dom-utilities'"}},{"type":"ImportDeclaration","start":151,"end":203,"specifiers":[{"type":"ImportSpecifier","start":160,"end":174,"imported":{"type":"Identifier","start":160,"end":174,"name":"XliffTransUnit"},"local":{"type":"Identifier","start":160,"end":174,"name":"XliffTransUnit"}}],"source":{"type":"Literal","start":182,"end":202,"value":"./xliff-trans-unit","raw":"'./xliff-trans-unit'"}},{"type":"ImportDeclaration","start":205,"end":292,"specifiers":[{"type":"ImportSpecifier","start":214,"end":245,"imported":{"type":"Identifier","start":214,"end":245,"name":"AbstractTranslationMessagesFile"},"local":{"type":"Identifier","start":214,"end":245,"name":"AbstractTranslationMessagesFile"}}],"source":{"type":"Literal","start":253,"end":291,"value":"./abstract-translation-messages-file","raw":"'./abstract-translation-messages-file'"}},{"type":"ExportNamedDeclaration","start":468,"end":9261,"declaration":{"type":"ClassDeclaration","start":475,"end":9261,"id":{"type":"Identifier","start":481,"end":490,"name":"XliffFile"},"superClass":{"type":"Identifier","start":499,"end":530,"name":"AbstractTranslationMessagesFile"},"body":{"type":"ClassBody","start":531,"end":9261,"body":[{"type":"MethodDefinition","start":858,"end":1069,"static":false,"computed":false,"key":{"type":"Identifier","start":858,"end":869,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":869,"end":1069,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":870,"end":879,"name":"xmlString"},{"type":"Identifier","start":881,"end":885,"name":"path"},{"type":"Identifier","start":887,"end":895,"name":"encoding"}],"body":{"type":"BlockStatement","start":897,"end":1069,"body":[{"type":"ExpressionStatement","start":908,"end":916,"expression":{"type":"CallExpression","start":908,"end":915,"callee":{"type":"Super","start":908,"end":913},"arguments":[],"optional":false}},{"type":"ExpressionStatement","start":926,"end":946,"expression":{"type":"AssignmentExpression","start":926,"end":945,"operator":"=","left":{"type":"MemberExpression","start":926,"end":940,"object":{"type":"ThisExpression","start":926,"end":930},"property":{"type":"Identifier","start":931,"end":940,"name":"_warnings"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":943,"end":945,"elements":[]}}},{"type":"ExpressionStatement","start":956,"end":998,"expression":{"type":"AssignmentExpression","start":956,"end":997,"operator":"=","left":{"type":"MemberExpression","start":956,"end":993,"object":{"type":"ThisExpression","start":956,"end":960},"property":{"type":"Identifier","start":961,"end":993,"name":"_numberOfTransUnitsWithMissingId"},"computed":false,"optional":false},"right":{"type":"Literal","start":996,"end":997,"value":0,"raw":"0"}}},{"type":"ExpressionStatement","start":1008,"end":1062,"expression":{"type":"CallExpression","start":1008,"end":1061,"callee":{"type":"MemberExpression","start":1008,"end":1034,"object":{"type":"ThisExpression","start":1008,"end":1012},"property":{"type":"Identifier","start":1013,"end":1034,"name":"initializeFromContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1035,"end":1044,"name":"xmlString"},{"type":"Identifier","start":1046,"end":1050,"name":"path"},{"type":"Identifier","start":1052,"end":1060,"name":"encoding"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1075,"end":1810,"static":false,"computed":false,"key":{"type":"Identifier","start":1075,"end":1096,"name":"initializeFromContent"},"kind":"method","value":{"type":"FunctionExpression","start":1096,"end":1810,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1097,"end":1106,"name":"xmlString"},{"type":"Identifier","start":1108,"end":1112,"name":"path"},{"type":"Identifier","start":1114,"end":1122,"name":"encoding"}],"body":{"type":"BlockStatement","start":1124,"end":1810,"body":[{"type":"ExpressionStatement","start":1135,"end":1180,"expression":{"type":"CallExpression","start":1135,"end":1179,"callee":{"type":"MemberExpression","start":1135,"end":1152,"object":{"type":"ThisExpression","start":1135,"end":1139},"property":{"type":"Identifier","start":1140,"end":1152,"name":"parseContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1153,"end":1162,"name":"xmlString"},{"type":"Identifier","start":1164,"end":1168,"name":"path"},{"type":"Identifier","start":1170,"end":1178,"name":"encoding"}],"optional":false}},{"type":"VariableDeclaration","start":1190,"end":1259,"declarations":[{"type":"VariableDeclarator","start":1196,"end":1258,"id":{"type":"Identifier","start":1196,"end":1205,"name":"xliffList"},"init":{"type":"CallExpression","start":1208,"end":1258,"callee":{"type":"MemberExpression","start":1208,"end":1249,"object":{"type":"MemberExpression","start":1208,"end":1228,"object":{"type":"ThisExpression","start":1208,"end":1212},"property":{"type":"Identifier","start":1213,"end":1228,"name":"_parsedDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1229,"end":1249,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1250,"end":1257,"value":"xliff","raw":"'xliff'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1269,"end":1781,"test":{"type":"BinaryExpression","start":1273,"end":1295,"left":{"type":"MemberExpression","start":1273,"end":1289,"object":{"type":"Identifier","start":1273,"end":1282,"name":"xliffList"},"property":{"type":"Identifier","start":1283,"end":1289,"name":"length"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Literal","start":1294,"end":1295,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":1297,"end":1426,"body":[{"type":"ThrowStatement","start":1312,"end":1415,"argument":{"type":"NewExpression","start":1318,"end":1414,"callee":{"type":"Identifier","start":1322,"end":1327,"name":"Error"},"arguments":[{"type":"CallExpression","start":1328,"end":1413,"callee":{"type":"Identifier","start":1328,"end":1334,"name":"format"},"arguments":[{"type":"Literal","start":1335,"end":1406,"value":"File \"%s\" seems to be no xliff file (should contain an xliff element)","raw":"'File \"%s\" seems to be no xliff file (should contain an xliff element)'"},{"type":"Identifier","start":1408,"end":1412,"name":"path"}],"optional":false}]}}]},"alternate":{"type":"BlockStatement","start":1441,"end":1781,"body":[{"type":"VariableDeclaration","start":1456,"end":1514,"declarations":[{"type":"VariableDeclarator","start":1462,"end":1513,"id":{"type":"Identifier","start":1462,"end":1469,"name":"version"},"init":{"type":"CallExpression","start":1472,"end":1513,"callee":{"type":"MemberExpression","start":1472,"end":1502,"object":{"type":"CallExpression","start":1472,"end":1489,"callee":{"type":"MemberExpression","start":1472,"end":1486,"object":{"type":"Identifier","start":1472,"end":1481,"name":"xliffList"},"property":{"type":"Identifier","start":1482,"end":1486,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1487,"end":1488,"value":0,"raw":"0"}],"optional":false},"property":{"type":"Identifier","start":1490,"end":1502,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1503,"end":1512,"value":"version","raw":"'version'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1528,"end":1558,"declarations":[{"type":"VariableDeclarator","start":1534,"end":1557,"id":{"type":"Identifier","start":1534,"end":1549,"name":"expectedVersion"},"init":{"type":"Literal","start":1552,"end":1557,"value":"1.2","raw":"'1.2'"}}],"kind":"const"},{"type":"IfStatement","start":1572,"end":1770,"test":{"type":"BinaryExpression","start":1576,"end":1603,"left":{"type":"Identifier","start":1576,"end":1583,"name":"version"},"operator":"!==","right":{"type":"Identifier","start":1588,"end":1603,"name":"expectedVersion"}},"consequent":{"type":"BlockStatement","start":1605,"end":1770,"body":[{"type":"ThrowStatement","start":1624,"end":1755,"argument":{"type":"NewExpression","start":1630,"end":1754,"callee":{"type":"Identifier","start":1634,"end":1639,"name":"Error"},"arguments":[{"type":"CallExpression","start":1640,"end":1753,"callee":{"type":"Identifier","start":1640,"end":1646,"name":"format"},"arguments":[{"type":"Literal","start":1647,"end":1720,"value":"File \"%s\" seems to be no xliff 1.2 file, version should be %s, found %s","raw":"'File \"%s\" seems to be no xliff 1.2 file, version should be %s, found %s'"},{"type":"Identifier","start":1722,"end":1726,"name":"path"},{"type":"Identifier","start":1728,"end":1743,"name":"expectedVersion"},{"type":"Identifier","start":1745,"end":1752,"name":"version"}],"optional":false}]}}]},"alternate":null}]}},{"type":"ReturnStatement","start":1791,"end":1803,"argument":{"type":"ThisExpression","start":1798,"end":1802}}]}}},{"type":"MethodDefinition","start":1971,"end":2024,"static":false,"computed":false,"key":{"type":"Identifier","start":1971,"end":1981,"name":"i18nFormat"},"kind":"method","value":{"type":"FunctionExpression","start":1981,"end":2024,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1984,"end":2024,"body":[{"type":"ReturnStatement","start":1995,"end":2017,"argument":{"type":"Identifier","start":2002,"end":2016,"name":"FORMAT_XLIFF12"}}]}}},{"type":"MethodDefinition","start":2092,"end":2145,"static":false,"computed":false,"key":{"type":"Identifier","start":2092,"end":2100,"name":"fileType"},"kind":"method","value":{"type":"FunctionExpression","start":2100,"end":2145,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2103,"end":2145,"body":[{"type":"ReturnStatement","start":2114,"end":2138,"argument":{"type":"Identifier","start":2121,"end":2137,"name":"FILETYPE_XLIFF12"}}]}}},{"type":"MethodDefinition","start":2332,"end":2472,"static":false,"computed":false,"key":{"type":"Identifier","start":2332,"end":2356,"name":"elementsWithMixedContent"},"kind":"method","value":{"type":"FunctionExpression","start":2356,"end":2472,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2359,"end":2472,"body":[{"type":"ReturnStatement","start":2370,"end":2465,"argument":{"type":"ArrayExpression","start":2377,"end":2464,"elements":[{"type":"Literal","start":2378,"end":2386,"value":"source","raw":"'source'"},{"type":"Literal","start":2388,"end":2396,"value":"target","raw":"'target'"},{"type":"Literal","start":2398,"end":2404,"value":"tool","raw":"'tool'"},{"type":"Literal","start":2406,"end":2418,"value":"seg-source","raw":"'seg-source'"},{"type":"Literal","start":2420,"end":2423,"value":"g","raw":"'g'"},{"type":"Literal","start":2425,"end":2429,"value":"ph","raw":"'ph'"},{"type":"Literal","start":2431,"end":2436,"value":"bpt","raw":"'bpt'"},{"type":"Literal","start":2438,"end":2443,"value":"ept","raw":"'ept'"},{"type":"Literal","start":2445,"end":2449,"value":"it","raw":"'it'"},{"type":"Literal","start":2451,"end":2456,"value":"sub","raw":"'sub'"},{"type":"Literal","start":2458,"end":2463,"value":"mrk","raw":"'mrk'"}]}}]}}},{"type":"MethodDefinition","start":2478,"end":3062,"static":false,"computed":false,"key":{"type":"Identifier","start":2478,"end":2498,"name":"initializeTransUnits"},"kind":"method","value":{"type":"FunctionExpression","start":2498,"end":3062,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2501,"end":3062,"body":[{"type":"ExpressionStatement","start":2512,"end":2533,"expression":{"type":"AssignmentExpression","start":2512,"end":2532,"operator":"=","left":{"type":"MemberExpression","start":2512,"end":2527,"object":{"type":"ThisExpression","start":2512,"end":2516},"property":{"type":"Identifier","start":2517,"end":2527,"name":"transUnits"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":2530,"end":2532,"elements":[]}}},{"type":"VariableDeclaration","start":2543,"end":2624,"declarations":[{"type":"VariableDeclarator","start":2549,"end":2623,"id":{"type":"Identifier","start":2549,"end":2565,"name":"transUnitsInFile"},"init":{"type":"CallExpression","start":2568,"end":2623,"callee":{"type":"MemberExpression","start":2568,"end":2609,"object":{"type":"MemberExpression","start":2568,"end":2588,"object":{"type":"ThisExpression","start":2568,"end":2572},"property":{"type":"Identifier","start":2573,"end":2588,"name":"_parsedDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2589,"end":2609,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2610,"end":2622,"value":"trans-unit","raw":"'trans-unit'"}],"optional":false}}],"kind":"const"},{"type":"ForStatement","start":2634,"end":3055,"init":{"type":"VariableDeclaration","start":2639,"end":2648,"declarations":[{"type":"VariableDeclarator","start":2643,"end":2648,"id":{"type":"Identifier","start":2643,"end":2644,"name":"i"},"init":{"type":"Literal","start":2647,"end":2648,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":2650,"end":2677,"left":{"type":"Identifier","start":2650,"end":2651,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":2654,"end":2677,"object":{"type":"Identifier","start":2654,"end":2670,"name":"transUnitsInFile"},"property":{"type":"Identifier","start":2671,"end":2677,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":2679,"end":2682,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":2679,"end":2680,"name":"i"}},"body":{"type":"BlockStatement","start":2684,"end":3055,"body":[{"type":"VariableDeclaration","start":2699,"end":2742,"declarations":[{"type":"VariableDeclarator","start":2705,"end":2741,"id":{"type":"Identifier","start":2705,"end":2714,"name":"transunit"},"init":{"type":"CallExpression","start":2717,"end":2741,"callee":{"type":"MemberExpression","start":2717,"end":2738,"object":{"type":"Identifier","start":2717,"end":2733,"name":"transUnitsInFile"},"property":{"type":"Identifier","start":2734,"end":2738,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2739,"end":2740,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":2756,"end":2796,"declarations":[{"type":"VariableDeclarator","start":2762,"end":2795,"id":{"type":"Identifier","start":2762,"end":2764,"name":"id"},"init":{"type":"CallExpression","start":2767,"end":2795,"callee":{"type":"MemberExpression","start":2767,"end":2789,"object":{"type":"Identifier","start":2767,"end":2776,"name":"transunit"},"property":{"type":"Identifier","start":2777,"end":2789,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2790,"end":2794,"value":"id","raw":"'id'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":2810,"end":2968,"test":{"type":"UnaryExpression","start":2814,"end":2817,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":2815,"end":2817,"name":"id"}},"consequent":{"type":"BlockStatement","start":2819,"end":2968,"body":[{"type":"ExpressionStatement","start":2838,"end":2953,"expression":{"type":"CallExpression","start":2838,"end":2952,"callee":{"type":"MemberExpression","start":2838,"end":2857,"object":{"type":"MemberExpression","start":2838,"end":2852,"object":{"type":"ThisExpression","start":2838,"end":2842},"property":{"type":"Identifier","start":2843,"end":2852,"name":"_warnings"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2853,"end":2857,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2858,"end":2951,"callee":{"type":"Identifier","start":2858,"end":2864,"name":"format"},"arguments":[{"type":"Literal","start":2865,"end":2934,"value":"oops, trans-unit without \"id\" found in master, please check file %s","raw":"'oops, trans-unit without \"id\" found in master, please check file %s'"},{"type":"MemberExpression","start":2936,"end":2950,"object":{"type":"ThisExpression","start":2936,"end":2940},"property":{"type":"Identifier","start":2941,"end":2950,"name":"_filename"},"computed":false,"optional":false}],"optional":false}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":2982,"end":3044,"expression":{"type":"CallExpression","start":2982,"end":3043,"callee":{"type":"MemberExpression","start":2982,"end":3002,"object":{"type":"MemberExpression","start":2982,"end":2997,"object":{"type":"ThisExpression","start":2982,"end":2986},"property":{"type":"Identifier","start":2987,"end":2997,"name":"transUnits"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2998,"end":3002,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":3003,"end":3042,"callee":{"type":"Identifier","start":3007,"end":3021,"name":"XliffTransUnit"},"arguments":[{"type":"Identifier","start":3022,"end":3031,"name":"transunit"},{"type":"Identifier","start":3033,"end":3035,"name":"id"},{"type":"ThisExpression","start":3037,"end":3041}]}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":3148,"end":3419,"static":false,"computed":false,"key":{"type":"Identifier","start":3148,"end":3162,"name":"sourceLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":3162,"end":3419,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":3165,"end":3419,"body":[{"type":"VariableDeclaration","start":3176,"end":3261,"declarations":[{"type":"VariableDeclarator","start":3182,"end":3260,"id":{"type":"Identifier","start":3182,"end":3190,"name":"fileElem"},"init":{"type":"CallExpression","start":3193,"end":3260,"callee":{"type":"MemberExpression","start":3193,"end":3230,"object":{"type":"Identifier","start":3193,"end":3205,"name":"DOMUtilities"},"property":{"type":"Identifier","start":3206,"end":3230,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3231,"end":3251,"object":{"type":"ThisExpression","start":3231,"end":3235},"property":{"type":"Identifier","start":3236,"end":3251,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":3253,"end":3259,"value":"file","raw":"'file'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3271,"end":3412,"test":{"type":"Identifier","start":3275,"end":3283,"name":"fileElem"},"consequent":{"type":"BlockStatement","start":3285,"end":3359,"body":[{"type":"ReturnStatement","start":3300,"end":3348,"argument":{"type":"CallExpression","start":3307,"end":3347,"callee":{"type":"MemberExpression","start":3307,"end":3328,"object":{"type":"Identifier","start":3307,"end":3315,"name":"fileElem"},"property":{"type":"Identifier","start":3316,"end":3328,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3329,"end":3346,"value":"source-language","raw":"'source-language'"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":3374,"end":3412,"body":[{"type":"ReturnStatement","start":3389,"end":3401,"argument":{"type":"Literal","start":3396,"end":3400,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":3510,"end":3742,"static":false,"computed":false,"key":{"type":"Identifier","start":3510,"end":3527,"name":"setSourceLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":3527,"end":3742,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3528,"end":3536,"name":"language"}],"body":{"type":"BlockStatement","start":3538,"end":3742,"body":[{"type":"VariableDeclaration","start":3549,"end":3634,"declarations":[{"type":"VariableDeclarator","start":3555,"end":3633,"id":{"type":"Identifier","start":3555,"end":3563,"name":"fileElem"},"init":{"type":"CallExpression","start":3566,"end":3633,"callee":{"type":"MemberExpression","start":3566,"end":3603,"object":{"type":"Identifier","start":3566,"end":3578,"name":"DOMUtilities"},"property":{"type":"Identifier","start":3579,"end":3603,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3604,"end":3624,"object":{"type":"ThisExpression","start":3604,"end":3608},"property":{"type":"Identifier","start":3609,"end":3624,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":3626,"end":3632,"value":"file","raw":"'file'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3644,"end":3735,"test":{"type":"Identifier","start":3648,"end":3656,"name":"fileElem"},"consequent":{"type":"BlockStatement","start":3658,"end":3735,"body":[{"type":"ExpressionStatement","start":3673,"end":3724,"expression":{"type":"CallExpression","start":3673,"end":3723,"callee":{"type":"MemberExpression","start":3673,"end":3694,"object":{"type":"Identifier","start":3673,"end":3681,"name":"fileElem"},"property":{"type":"Identifier","start":3682,"end":3694,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3695,"end":3712,"value":"source-language","raw":"'source-language'"},{"type":"Identifier","start":3714,"end":3722,"name":"language"}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":3828,"end":4099,"static":false,"computed":false,"key":{"type":"Identifier","start":3828,"end":3842,"name":"targetLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":3842,"end":4099,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":3845,"end":4099,"body":[{"type":"VariableDeclaration","start":3856,"end":3941,"declarations":[{"type":"VariableDeclarator","start":3862,"end":3940,"id":{"type":"Identifier","start":3862,"end":3870,"name":"fileElem"},"init":{"type":"CallExpression","start":3873,"end":3940,"callee":{"type":"MemberExpression","start":3873,"end":3910,"object":{"type":"Identifier","start":3873,"end":3885,"name":"DOMUtilities"},"property":{"type":"Identifier","start":3886,"end":3910,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3911,"end":3931,"object":{"type":"ThisExpression","start":3911,"end":3915},"property":{"type":"Identifier","start":3916,"end":3931,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":3933,"end":3939,"value":"file","raw":"'file'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3951,"end":4092,"test":{"type":"Identifier","start":3955,"end":3963,"name":"fileElem"},"consequent":{"type":"BlockStatement","start":3965,"end":4039,"body":[{"type":"ReturnStatement","start":3980,"end":4028,"argument":{"type":"CallExpression","start":3987,"end":4027,"callee":{"type":"MemberExpression","start":3987,"end":4008,"object":{"type":"Identifier","start":3987,"end":3995,"name":"fileElem"},"property":{"type":"Identifier","start":3996,"end":4008,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4009,"end":4026,"value":"target-language","raw":"'target-language'"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":4054,"end":4092,"body":[{"type":"ReturnStatement","start":4069,"end":4081,"argument":{"type":"Literal","start":4076,"end":4080,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":4190,"end":4422,"static":false,"computed":false,"key":{"type":"Identifier","start":4190,"end":4207,"name":"setTargetLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":4207,"end":4422,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4208,"end":4216,"name":"language"}],"body":{"type":"BlockStatement","start":4218,"end":4422,"body":[{"type":"VariableDeclaration","start":4229,"end":4314,"declarations":[{"type":"VariableDeclarator","start":4235,"end":4313,"id":{"type":"Identifier","start":4235,"end":4243,"name":"fileElem"},"init":{"type":"CallExpression","start":4246,"end":4313,"callee":{"type":"MemberExpression","start":4246,"end":4283,"object":{"type":"Identifier","start":4246,"end":4258,"name":"DOMUtilities"},"property":{"type":"Identifier","start":4259,"end":4283,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":4284,"end":4304,"object":{"type":"ThisExpression","start":4284,"end":4288},"property":{"type":"Identifier","start":4289,"end":4304,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":4306,"end":4312,"value":"file","raw":"'file'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":4324,"end":4415,"test":{"type":"Identifier","start":4328,"end":4336,"name":"fileElem"},"consequent":{"type":"BlockStatement","start":4338,"end":4415,"body":[{"type":"ExpressionStatement","start":4353,"end":4404,"expression":{"type":"CallExpression","start":4353,"end":4403,"callee":{"type":"MemberExpression","start":4353,"end":4374,"object":{"type":"Identifier","start":4353,"end":4361,"name":"fileElem"},"property":{"type":"Identifier","start":4362,"end":4374,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4375,"end":4392,"value":"target-language","raw":"'target-language'"},{"type":"Identifier","start":4394,"end":4402,"name":"language"}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":5738,"end":7997,"static":false,"computed":false,"key":{"type":"Identifier","start":5738,"end":5756,"name":"importNewTransUnit"},"kind":"method","value":{"type":"FunctionExpression","start":5756,"end":7997,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5757,"end":5773,"name":"foreignTransUnit"},{"type":"Identifier","start":5775,"end":5788,"name":"isDefaultLang"},{"type":"Identifier","start":5790,"end":5801,"name":"copyContent"},{"type":"Identifier","start":5803,"end":5821,"name":"importAfterElement"}],"body":{"type":"BlockStatement","start":5823,"end":7997,"body":[{"type":"IfStatement","start":5834,"end":6010,"test":{"type":"CallExpression","start":5838,"end":5879,"callee":{"type":"MemberExpression","start":5838,"end":5858,"object":{"type":"ThisExpression","start":5838,"end":5842},"property":{"type":"Identifier","start":5843,"end":5858,"name":"transUnitWithId"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":5859,"end":5878,"object":{"type":"Identifier","start":5859,"end":5875,"name":"foreignTransUnit"},"property":{"type":"Identifier","start":5876,"end":5878,"name":"id"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":5881,"end":6010,"body":[{"type":"ThrowStatement","start":5896,"end":5999,"argument":{"type":"NewExpression","start":5902,"end":5998,"callee":{"type":"Identifier","start":5906,"end":5911,"name":"Error"},"arguments":[{"type":"CallExpression","start":5912,"end":5997,"callee":{"type":"Identifier","start":5912,"end":5918,"name":"format"},"arguments":[{"type":"Literal","start":5919,"end":5975,"value":"tu with id %s already exists in file, cannot import it","raw":"'tu with id %s already exists in file, cannot import it'"},{"type":"MemberExpression","start":5977,"end":5996,"object":{"type":"Identifier","start":5977,"end":5993,"name":"foreignTransUnit"},"property":{"type":"Identifier","start":5994,"end":5996,"name":"id"},"computed":false,"optional":false}],"optional":false}]}}]},"alternate":null},{"type":"VariableDeclaration","start":6020,"end":6109,"declarations":[{"type":"VariableDeclarator","start":6026,"end":6108,"id":{"type":"Identifier","start":6026,"end":6031,"name":"newTu"},"init":{"type":"CallExpression","start":6034,"end":6108,"callee":{"type":"MemberExpression","start":6034,"end":6074,"object":{"type":"Identifier","start":6034,"end":6050,"name":"foreignTransUnit"},"property":{"type":"Identifier","start":6051,"end":6074,"name":"cloneWithSourceAsTarget"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6075,"end":6088,"name":"isDefaultLang"},{"type":"Identifier","start":6090,"end":6101,"name":"copyContent"},{"type":"ThisExpression","start":6103,"end":6107}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6119,"end":6207,"declarations":[{"type":"VariableDeclarator","start":6125,"end":6206,"id":{"type":"Identifier","start":6125,"end":6136,"name":"bodyElement"},"init":{"type":"CallExpression","start":6139,"end":6206,"callee":{"type":"MemberExpression","start":6139,"end":6176,"object":{"type":"Identifier","start":6139,"end":6151,"name":"DOMUtilities"},"property":{"type":"Identifier","start":6152,"end":6176,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6177,"end":6197,"object":{"type":"ThisExpression","start":6177,"end":6181},"property":{"type":"Identifier","start":6182,"end":6197,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":6199,"end":6205,"value":"body","raw":"'body'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":6217,"end":6376,"test":{"type":"UnaryExpression","start":6221,"end":6233,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":6222,"end":6233,"name":"bodyElement"}},"consequent":{"type":"BlockStatement","start":6235,"end":6376,"body":[{"type":"ThrowStatement","start":6250,"end":6365,"argument":{"type":"NewExpression","start":6256,"end":6364,"callee":{"type":"Identifier","start":6260,"end":6265,"name":"Error"},"arguments":[{"type":"CallExpression","start":6266,"end":6363,"callee":{"type":"Identifier","start":6266,"end":6272,"name":"format"},"arguments":[{"type":"Literal","start":6273,"end":6346,"value":"File \"%s\" seems to be no xliff 1.2 file (should contain a body element)","raw":"'File \"%s\" seems to be no xliff 1.2 file (should contain a body element)'"},{"type":"MemberExpression","start":6348,"end":6362,"object":{"type":"ThisExpression","start":6348,"end":6352},"property":{"type":"Identifier","start":6353,"end":6362,"name":"_filename"},"computed":false,"optional":false}],"optional":false}]}}]},"alternate":null},{"type":"VariableDeclaration","start":6386,"end":6407,"declarations":[{"type":"VariableDeclarator","start":6390,"end":6406,"id":{"type":"Identifier","start":6390,"end":6398,"name":"inserted"},"init":{"type":"Literal","start":6401,"end":6406,"value":false,"raw":"false"}}],"kind":"let"},{"type":"VariableDeclaration","start":6417,"end":6454,"declarations":[{"type":"VariableDeclarator","start":6421,"end":6453,"id":{"type":"Identifier","start":6421,"end":6445,"name":"isAfterElementPartOfFile"},"init":{"type":"Literal","start":6448,"end":6453,"value":false,"raw":"false"}}],"kind":"let"},{"type":"IfStatement","start":6464,"end":6685,"test":{"type":"UnaryExpression","start":6468,"end":6488,"operator":"!","prefix":true,"argument":{"type":"UnaryExpression","start":6469,"end":6488,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":6470,"end":6488,"name":"importAfterElement"}}},"consequent":{"type":"BlockStatement","start":6490,"end":6685,"body":[{"type":"VariableDeclaration","start":6505,"end":6572,"declarations":[{"type":"VariableDeclarator","start":6511,"end":6571,"id":{"type":"Identifier","start":6511,"end":6525,"name":"insertionPoint"},"init":{"type":"CallExpression","start":6528,"end":6571,"callee":{"type":"MemberExpression","start":6528,"end":6548,"object":{"type":"ThisExpression","start":6528,"end":6532},"property":{"type":"Identifier","start":6533,"end":6548,"name":"transUnitWithId"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6549,"end":6570,"object":{"type":"Identifier","start":6549,"end":6567,"name":"importAfterElement"},"property":{"type":"Identifier","start":6568,"end":6570,"name":"id"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":6586,"end":6674,"test":{"type":"UnaryExpression","start":6590,"end":6606,"operator":"!","prefix":true,"argument":{"type":"UnaryExpression","start":6591,"end":6606,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":6592,"end":6606,"name":"insertionPoint"}}},"consequent":{"type":"BlockStatement","start":6608,"end":6674,"body":[{"type":"ExpressionStatement","start":6627,"end":6659,"expression":{"type":"AssignmentExpression","start":6627,"end":6658,"operator":"=","left":{"type":"Identifier","start":6627,"end":6651,"name":"isAfterElementPartOfFile"},"right":{"type":"Literal","start":6654,"end":6658,"value":true,"raw":"true"}}}]},"alternate":null}]},"alternate":null},{"type":"IfStatement","start":6695,"end":7752,"test":{"type":"LogicalExpression","start":6699,"end":6784,"left":{"type":"BinaryExpression","start":6699,"end":6731,"left":{"type":"Identifier","start":6699,"end":6717,"name":"importAfterElement"},"operator":"===","right":{"type":"Identifier","start":6722,"end":6731,"name":"undefined"}},"operator":"||","right":{"type":"LogicalExpression","start":6736,"end":6783,"left":{"type":"Identifier","start":6736,"end":6754,"name":"importAfterElement"},"operator":"&&","right":{"type":"UnaryExpression","start":6758,"end":6783,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":6759,"end":6783,"name":"isAfterElementPartOfFile"}}}},"consequent":{"type":"BlockStatement","start":6786,"end":6888,"body":[{"type":"ExpressionStatement","start":6801,"end":6847,"expression":{"type":"CallExpression","start":6801,"end":6846,"callee":{"type":"MemberExpression","start":6801,"end":6824,"object":{"type":"Identifier","start":6801,"end":6812,"name":"bodyElement"},"property":{"type":"Identifier","start":6813,"end":6824,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6825,"end":6845,"callee":{"type":"MemberExpression","start":6825,"end":6843,"object":{"type":"Identifier","start":6825,"end":6830,"name":"newTu"},"property":{"type":"Identifier","start":6831,"end":6843,"name":"asXmlElement"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":6861,"end":6877,"expression":{"type":"AssignmentExpression","start":6861,"end":6876,"operator":"=","left":{"type":"Identifier","start":6861,"end":6869,"name":"inserted"},"right":{"type":"Literal","start":6872,"end":6876,"value":true,"raw":"true"}}}]},"alternate":{"type":"IfStatement","start":6903,"end":7752,"test":{"type":"BinaryExpression","start":6907,"end":6934,"left":{"type":"Identifier","start":6907,"end":6925,"name":"importAfterElement"},"operator":"===","right":{"type":"Literal","start":6930,"end":6934,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":6936,"end":7426,"body":[{"type":"VariableDeclaration","start":6951,"end":7050,"declarations":[{"type":"VariableDeclarator","start":6957,"end":7049,"id":{"type":"Identifier","start":6957,"end":6973,"name":"firstUnitElement"},"init":{"type":"CallExpression","start":6976,"end":7049,"callee":{"type":"MemberExpression","start":6976,"end":7013,"object":{"type":"Identifier","start":6976,"end":6988,"name":"DOMUtilities"},"property":{"type":"Identifier","start":6989,"end":7013,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":7014,"end":7034,"object":{"type":"ThisExpression","start":7014,"end":7018},"property":{"type":"Identifier","start":7019,"end":7034,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":7036,"end":7048,"value":"trans-unit","raw":"'trans-unit'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":7064,"end":7415,"test":{"type":"Identifier","start":7068,"end":7084,"name":"firstUnitElement"},"consequent":{"type":"BlockStatement","start":7086,"end":7220,"body":[{"type":"ExpressionStatement","start":7105,"end":7171,"expression":{"type":"CallExpression","start":7105,"end":7170,"callee":{"type":"MemberExpression","start":7105,"end":7130,"object":{"type":"Identifier","start":7105,"end":7117,"name":"DOMUtilities"},"property":{"type":"Identifier","start":7118,"end":7130,"name":"insertBefore"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7131,"end":7151,"callee":{"type":"MemberExpression","start":7131,"end":7149,"object":{"type":"Identifier","start":7131,"end":7136,"name":"newTu"},"property":{"type":"Identifier","start":7137,"end":7149,"name":"asXmlElement"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"Identifier","start":7153,"end":7169,"name":"firstUnitElement"}],"optional":false}},{"type":"ExpressionStatement","start":7189,"end":7205,"expression":{"type":"AssignmentExpression","start":7189,"end":7204,"operator":"=","left":{"type":"Identifier","start":7189,"end":7197,"name":"inserted"},"right":{"type":"Literal","start":7200,"end":7204,"value":true,"raw":"true"}}}]},"alternate":{"type":"BlockStatement","start":7239,"end":7415,"body":[{"type":"ExpressionStatement","start":7320,"end":7366,"expression":{"type":"CallExpression","start":7320,"end":7365,"callee":{"type":"MemberExpression","start":7320,"end":7343,"object":{"type":"Identifier","start":7320,"end":7331,"name":"bodyElement"},"property":{"type":"Identifier","start":7332,"end":7343,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7344,"end":7364,"callee":{"type":"MemberExpression","start":7344,"end":7362,"object":{"type":"Identifier","start":7344,"end":7349,"name":"newTu"},"property":{"type":"Identifier","start":7350,"end":7362,"name":"asXmlElement"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":7384,"end":7400,"expression":{"type":"AssignmentExpression","start":7384,"end":7399,"operator":"=","left":{"type":"Identifier","start":7384,"end":7392,"name":"inserted"},"right":{"type":"Literal","start":7395,"end":7399,"value":true,"raw":"true"}}}]}}]},"alternate":{"type":"BlockStatement","start":7441,"end":7752,"body":[{"type":"VariableDeclaration","start":7456,"end":7576,"declarations":[{"type":"VariableDeclarator","start":7462,"end":7575,"id":{"type":"Identifier","start":7462,"end":7476,"name":"refUnitElement"},"init":{"type":"CallExpression","start":7479,"end":7575,"callee":{"type":"MemberExpression","start":7479,"end":7516,"object":{"type":"Identifier","start":7479,"end":7491,"name":"DOMUtilities"},"property":{"type":"Identifier","start":7492,"end":7516,"name":"getElementByTagNameAndId"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":7517,"end":7537,"object":{"type":"ThisExpression","start":7517,"end":7521},"property":{"type":"Identifier","start":7522,"end":7537,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":7539,"end":7551,"value":"trans-unit","raw":"'trans-unit'"},{"type":"MemberExpression","start":7553,"end":7574,"object":{"type":"Identifier","start":7553,"end":7571,"name":"importAfterElement"},"property":{"type":"Identifier","start":7572,"end":7574,"name":"id"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":7590,"end":7741,"test":{"type":"Identifier","start":7594,"end":7608,"name":"refUnitElement"},"consequent":{"type":"BlockStatement","start":7610,"end":7741,"body":[{"type":"ExpressionStatement","start":7629,"end":7692,"expression":{"type":"CallExpression","start":7629,"end":7691,"callee":{"type":"MemberExpression","start":7629,"end":7653,"object":{"type":"Identifier","start":7629,"end":7641,"name":"DOMUtilities"},"property":{"type":"Identifier","start":7642,"end":7653,"name":"insertAfter"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7654,"end":7674,"callee":{"type":"MemberExpression","start":7654,"end":7672,"object":{"type":"Identifier","start":7654,"end":7659,"name":"newTu"},"property":{"type":"Identifier","start":7660,"end":7672,"name":"asXmlElement"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"Identifier","start":7676,"end":7690,"name":"refUnitElement"}],"optional":false}},{"type":"ExpressionStatement","start":7710,"end":7726,"expression":{"type":"AssignmentExpression","start":7710,"end":7725,"operator":"=","left":{"type":"Identifier","start":7710,"end":7718,"name":"inserted"},"right":{"type":"Literal","start":7721,"end":7725,"value":true,"raw":"true"}}}]},"alternate":null}]}}},{"type":"IfStatement","start":7762,"end":7990,"test":{"type":"Identifier","start":7766,"end":7774,"name":"inserted"},"consequent":{"type":"BlockStatement","start":7776,"end":7937,"body":[{"type":"ExpressionStatement","start":7791,"end":7823,"expression":{"type":"CallExpression","start":7791,"end":7822,"callee":{"type":"MemberExpression","start":7791,"end":7820,"object":{"type":"ThisExpression","start":7791,"end":7795},"property":{"type":"Identifier","start":7796,"end":7820,"name":"lazyInitializeTransUnits"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ExpressionStatement","start":7837,"end":7865,"expression":{"type":"CallExpression","start":7837,"end":7864,"callee":{"type":"MemberExpression","start":7837,"end":7857,"object":{"type":"MemberExpression","start":7837,"end":7852,"object":{"type":"ThisExpression","start":7837,"end":7841},"property":{"type":"Identifier","start":7842,"end":7852,"name":"transUnits"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7853,"end":7857,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7858,"end":7863,"name":"newTu"}],"optional":false}},{"type":"ExpressionStatement","start":7879,"end":7899,"expression":{"type":"CallExpression","start":7879,"end":7898,"callee":{"type":"MemberExpression","start":7879,"end":7896,"object":{"type":"ThisExpression","start":7879,"end":7883},"property":{"type":"Identifier","start":7884,"end":7896,"name":"countNumbers"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ReturnStatement","start":7913,"end":7926,"argument":{"type":"Identifier","start":7920,"end":7925,"name":"newTu"}}]},"alternate":{"type":"BlockStatement","start":7952,"end":7990,"body":[{"type":"ReturnStatement","start":7967,"end":7979,"argument":{"type":"Literal","start":7974,"end":7978,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":8707,"end":9258,"static":false,"computed":false,"key":{"type":"Identifier","start":8707,"end":8735,"name":"createTranslationFileForLang"},"kind":"method","value":{"type":"FunctionExpression","start":8735,"end":9258,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8736,"end":8740,"name":"lang"},{"type":"Identifier","start":8742,"end":8750,"name":"filename"},{"type":"Identifier","start":8752,"end":8765,"name":"isDefaultLang"},{"type":"Identifier","start":8767,"end":8778,"name":"copyContent"}],"body":{"type":"BlockStatement","start":8780,"end":9258,"body":[{"type":"VariableDeclaration","start":8791,"end":8878,"declarations":[{"type":"VariableDeclarator","start":8797,"end":8877,"id":{"type":"Identifier","start":8797,"end":8812,"name":"translationFile"},"init":{"type":"NewExpression","start":8815,"end":8877,"callee":{"type":"Identifier","start":8819,"end":8828,"name":"XliffFile"},"arguments":[{"type":"CallExpression","start":8829,"end":8849,"callee":{"type":"MemberExpression","start":8829,"end":8847,"object":{"type":"ThisExpression","start":8829,"end":8833},"property":{"type":"Identifier","start":8834,"end":8847,"name":"editedContent"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"Identifier","start":8851,"end":8859,"name":"filename"},{"type":"CallExpression","start":8861,"end":8876,"callee":{"type":"MemberExpression","start":8861,"end":8874,"object":{"type":"ThisExpression","start":8861,"end":8865},"property":{"type":"Identifier","start":8866,"end":8874,"name":"encoding"},"computed":false,"optional":false},"arguments":[],"optional":false}]}}],"kind":"const"},{"type":"ExpressionStatement","start":8888,"end":8953,"expression":{"type":"CallExpression","start":8888,"end":8952,"callee":{"type":"MemberExpression","start":8888,"end":8932,"object":{"type":"Identifier","start":8888,"end":8903,"name":"translationFile"},"property":{"type":"Identifier","start":8904,"end":8932,"name":"setNewTransUnitTargetPraefix"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":8933,"end":8951,"object":{"type":"ThisExpression","start":8933,"end":8937},"property":{"type":"Identifier","start":8938,"end":8951,"name":"targetPraefix"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":8963,"end":9026,"expression":{"type":"CallExpression","start":8963,"end":9025,"callee":{"type":"MemberExpression","start":8963,"end":9006,"object":{"type":"Identifier","start":8963,"end":8978,"name":"translationFile"},"property":{"type":"Identifier","start":8979,"end":9006,"name":"setNewTransUnitTargetSuffix"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":9007,"end":9024,"object":{"type":"ThisExpression","start":9007,"end":9011},"property":{"type":"Identifier","start":9012,"end":9024,"name":"targetSuffix"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":9036,"end":9076,"expression":{"type":"CallExpression","start":9036,"end":9075,"callee":{"type":"MemberExpression","start":9036,"end":9069,"object":{"type":"Identifier","start":9036,"end":9051,"name":"translationFile"},"property":{"type":"Identifier","start":9052,"end":9069,"name":"setTargetLanguage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9070,"end":9074,"name":"lang"}],"optional":false}},{"type":"ExpressionStatement","start":9086,"end":9218,"expression":{"type":"CallExpression","start":9086,"end":9217,"callee":{"type":"MemberExpression","start":9086,"end":9118,"object":{"type":"Identifier","start":9086,"end":9101,"name":"translationFile"},"property":{"type":"Identifier","start":9102,"end":9118,"name":"forEachTransUnit"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":9119,"end":9216,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9120,"end":9129,"name":"transUnit"}],"body":{"type":"BlockStatement","start":9134,"end":9216,"body":[{"type":"ExpressionStatement","start":9149,"end":9205,"expression":{"type":"CallExpression","start":9149,"end":9204,"callee":{"type":"MemberExpression","start":9149,"end":9176,"object":{"type":"Identifier","start":9149,"end":9158,"name":"transUnit"},"property":{"type":"Identifier","start":9159,"end":9176,"name":"useSourceAsTarget"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9177,"end":9190,"name":"isDefaultLang"},{"type":"Identifier","start":9192,"end":9203,"name":"copyContent"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":9228,"end":9251,"argument":{"type":"Identifier","start":9235,"end":9250,"name":"translationFile"}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":9263,"end":29809}]},"code":"import { format } from 'util';\r\nimport { FORMAT_XLIFF12, FILETYPE_XLIFF12 } from '../api/constants';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { XliffTransUnit } from './xliff-trans-unit';\r\nimport { AbstractTranslationMessagesFile } from './abstract-translation-messages-file';\r\n/**\r\n * Created by martin on 23.02.2017.\r\n * Ab xliff file read from a source file.\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\nexport class XliffFile extends AbstractTranslationMessagesFile {\r\n    /**\r\n     * Create an xlf-File from source.\r\n     * @param xmlString source read from file.\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return XliffFile\r\n     */\r\n    constructor(xmlString, path, encoding) {\r\n        super();\r\n        this._warnings = [];\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this.initializeFromContent(xmlString, path, encoding);\r\n    }\r\n    initializeFromContent(xmlString, path, encoding) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        const xliffList = this._parsedDocument.getElementsByTagName('xliff');\r\n        if (xliffList.length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff file (should contain an xliff element)', path));\r\n        }\r\n        else {\r\n            const version = xliffList.item(0).getAttribute('version');\r\n            const expectedVersion = '1.2';\r\n            if (version !== expectedVersion) {\r\n                throw new Error(format('File \"%s\" seems to be no xliff 1.2 file, version should be %s, found %s', path, expectedVersion, version));\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    i18nFormat() {\r\n        return FORMAT_XLIFF12;\r\n    }\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 1.2'\r\n     */\r\n    fileType() {\r\n        return FILETYPE_XLIFF12;\r\n    }\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    elementsWithMixedContent() {\r\n        return ['source', 'target', 'tool', 'seg-source', 'g', 'ph', 'bpt', 'ept', 'it', 'sub', 'mrk'];\r\n    }\r\n    initializeTransUnits() {\r\n        this.transUnits = [];\r\n        const transUnitsInFile = this._parsedDocument.getElementsByTagName('trans-unit');\r\n        for (let i = 0; i < transUnitsInFile.length; i++) {\r\n            const transunit = transUnitsInFile.item(i);\r\n            const id = transunit.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, trans-unit without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new XliffTransUnit(transunit, id, this));\r\n        }\r\n    }\r\n    /**\r\n     * Get source language.\r\n     * @return source language.\r\n     */\r\n    sourceLanguage() {\r\n        const fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            return fileElem.getAttribute('source-language');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Edit the source language.\r\n     * @param language language\r\n     */\r\n    setSourceLanguage(language) {\r\n        const fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            fileElem.setAttribute('source-language', language);\r\n        }\r\n    }\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    targetLanguage() {\r\n        const fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            return fileElem.getAttribute('target-language');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    setTargetLanguage(language) {\r\n        const fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            fileElem.setAttribute('target-language', language);\r\n        }\r\n    }\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    importNewTransUnit(foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        const newTu = foreignTransUnit.cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        const bodyElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'body');\r\n        if (!bodyElement) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff 1.2 file (should contain a body element)', this._filename));\r\n        }\r\n        let inserted = false;\r\n        let isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            const insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            bodyElement.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        }\r\n        else if (importAfterElement === null) {\r\n            const firstUnitElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'trans-unit');\r\n            if (firstUnitElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstUnitElement);\r\n                inserted = true;\r\n            }\r\n            else {\r\n                // no trans-unit, empty file, so add to body\r\n                bodyElement.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        }\r\n        else {\r\n            const refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'trans-unit', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    createTranslationFileForLang(lang, filename, isDefaultLang, copyContent) {\r\n        const translationFile = new XliffFile(this.editedContent(), filename, this.encoding());\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.forEachTransUnit((transUnit) => {\r\n            transUnit.useSourceAsTarget(isDefaultLang, copyContent);\r\n        });\r\n        return translationFile;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["util","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff-trans-unit.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-translation-messages-file.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff-file.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { format } from 'util';\r\nimport { FORMAT_XLIFF12, FILETYPE_XLIFF12 } from '../api/constants';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { XliffTransUnit } from './xliff-trans-unit';\r\nimport { AbstractTranslationMessagesFile } from './abstract-translation-messages-file';\r\n/**\r\n * Created by martin on 23.02.2017.\r\n * Ab xliff file read from a source file.\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\nexport class XliffFile extends AbstractTranslationMessagesFile {\r\n    /**\r\n     * Create an xlf-File from source.\r\n     * @param xmlString source read from file.\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return XliffFile\r\n     */\r\n    constructor(xmlString, path, encoding) {\r\n        super();\r\n        this._warnings = [];\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this.initializeFromContent(xmlString, path, encoding);\r\n    }\r\n    initializeFromContent(xmlString, path, encoding) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        const xliffList = this._parsedDocument.getElementsByTagName('xliff');\r\n        if (xliffList.length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff file (should contain an xliff element)', path));\r\n        }\r\n        else {\r\n            const version = xliffList.item(0).getAttribute('version');\r\n            const expectedVersion = '1.2';\r\n            if (version !== expectedVersion) {\r\n                throw new Error(format('File \"%s\" seems to be no xliff 1.2 file, version should be %s, found %s', path, expectedVersion, version));\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    i18nFormat() {\r\n        return FORMAT_XLIFF12;\r\n    }\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 1.2'\r\n     */\r\n    fileType() {\r\n        return FILETYPE_XLIFF12;\r\n    }\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    elementsWithMixedContent() {\r\n        return ['source', 'target', 'tool', 'seg-source', 'g', 'ph', 'bpt', 'ept', 'it', 'sub', 'mrk'];\r\n    }\r\n    initializeTransUnits() {\r\n        this.transUnits = [];\r\n        const transUnitsInFile = this._parsedDocument.getElementsByTagName('trans-unit');\r\n        for (let i = 0; i < transUnitsInFile.length; i++) {\r\n            const transunit = transUnitsInFile.item(i);\r\n            const id = transunit.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, trans-unit without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new XliffTransUnit(transunit, id, this));\r\n        }\r\n    }\r\n    /**\r\n     * Get source language.\r\n     * @return source language.\r\n     */\r\n    sourceLanguage() {\r\n        const fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            return fileElem.getAttribute('source-language');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Edit the source language.\r\n     * @param language language\r\n     */\r\n    setSourceLanguage(language) {\r\n        const fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            fileElem.setAttribute('source-language', language);\r\n        }\r\n    }\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    targetLanguage() {\r\n        const fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            return fileElem.getAttribute('target-language');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    setTargetLanguage(language) {\r\n        const fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            fileElem.setAttribute('target-language', language);\r\n        }\r\n    }\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    importNewTransUnit(foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        const newTu = foreignTransUnit.cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        const bodyElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'body');\r\n        if (!bodyElement) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff 1.2 file (should contain a body element)', this._filename));\r\n        }\r\n        let inserted = false;\r\n        let isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            const insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            bodyElement.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        }\r\n        else if (importAfterElement === null) {\r\n            const firstUnitElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'trans-unit');\r\n            if (firstUnitElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstUnitElement);\r\n                inserted = true;\r\n            }\r\n            else {\r\n                // no trans-unit, empty file, so add to body\r\n                bodyElement.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        }\r\n        else {\r\n            const refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'trans-unit', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    createTranslationFileForLang(lang, filename, isDefaultLang, copyContent) {\r\n        const translationFile = new XliffFile(this.editedContent(), filename, this.encoding());\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.forEachTransUnit((transUnit) => {\r\n            transUnit.useSourceAsTarget(isDefaultLang, copyContent);\r\n        });\r\n        return translationFile;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"xliff-file.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/xliff-file.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[15,0,0,14],[17,0,0,15],[23,0,0,21],[29,0,0,27],[30,0,0,28]],[[0,0,3,0],[7,0,3,7],[9,0,3,8],[23,0,3,22],[25,0,3,24],[41,0,3,40],[43,0,3,41],[49,0,3,47],[67,0,3,65],[68,0,3,66]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[21,0,4,20],[23,0,4,21],[29,0,4,27],[46,0,4,44],[47,0,4,45]],[[0,0,5,0],[7,0,5,7],[9,0,5,8],[23,0,5,22],[25,0,5,23],[31,0,5,29],[51,0,5,49],[52,0,5,50]],[[0,0,6,0],[7,0,6,7],[9,0,6,8],[40,0,6,39],[42,0,6,40],[48,0,6,46],[86,0,6,84],[87,0,6,85]],[[0,0,8,0]],[],[],[],[[3,0,12,3]],[[0,0,14,0],[6,0,14,6],[13,0,14,13],[22,0,14,23],[31,0,14,31],[62,0,14,62]],[[4,0,16,4]],[],[],[],[],[],[],[[7,0,23,7]],[[4,0,24,4],[16,0,24,16],[25,0,24,33],[27,0,24,35],[31,0,24,47],[33,0,24,49],[41,0,24,73]],[[8,0,25,8],[13,0,25,13],[15,0,25,15],[16,0,25,16]],[[8,0,26,8],[12,0,26,12],[13,0,26,13],[22,0,26,22],[25,0,26,25],[27,0,26,27],[28,0,26,28]],[[8,0,27,8],[12,0,27,12],[13,0,27,13],[45,0,27,45],[48,0,27,48],[49,0,27,49],[50,0,27,50]],[[8,0,28,8],[12,0,28,12],[13,0,28,13],[34,0,28,34],[35,0,28,35],[44,0,28,44],[46,0,28,46],[50,0,28,50],[52,0,28,52],[60,0,28,60],[61,0,28,61],[62,0,28,62]],[[4,0,29,4],[5,0,29,5]],[[4,0,31,12],[25,0,31,33],[26,0,31,34],[35,0,31,51],[37,0,31,53],[41,0,31,65],[43,0,31,67],[51,0,31,91]],[[8,0,32,8],[12,0,32,12],[13,0,32,13],[25,0,32,25],[26,0,32,26],[35,0,32,35],[37,0,32,37],[41,0,32,41],[43,0,32,43],[51,0,32,51],[52,0,32,52],[53,0,32,53]],[[8,0,33,8],[14,0,33,14],[23,0,33,23],[26,0,33,26],[30,0,33,30],[31,0,33,31],[46,0,33,46],[47,0,33,47],[67,0,33,67],[68,0,33,68],[75,0,33,75],[76,0,33,76],[77,0,33,77]],[[8,0,34,8],[12,0,34,12],[21,0,34,21],[22,0,34,22],[28,0,34,28],[33,0,34,33],[34,0,34,34],[36,0,34,36]],[[12,0,35,12],[18,0,35,18],[22,0,35,22],[27,0,35,27],[28,0,35,28],[34,0,35,34],[35,0,35,35],[106,0,35,106],[108,0,35,108],[112,0,35,112],[113,0,35,113],[114,0,35,114],[115,0,35,115]],[[9,0,36,9]],[[13,0,36,15]],[[12,0,37,12],[18,0,37,18],[25,0,37,25],[28,0,37,28],[37,0,37,37],[38,0,37,38],[42,0,37,42],[43,0,37,43],[44,0,37,44],[45,0,37,45],[46,0,37,46],[58,0,37,58],[59,0,37,59],[68,0,37,68],[69,0,37,69],[70,0,37,70]],[[12,0,38,12],[18,0,38,18],[33,0,38,33],[36,0,38,36],[41,0,38,41],[42,0,38,42]],[[12,0,39,12],[16,0,39,16],[23,0,39,23],[28,0,39,28],[43,0,39,43],[45,0,39,45]],[[16,0,40,16],[22,0,40,22],[26,0,40,26],[31,0,40,31],[32,0,40,32],[38,0,40,38],[39,0,40,39],[112,0,40,112],[114,0,41,20],[118,0,41,24],[120,0,41,26],[135,0,41,41],[137,0,41,43],[144,0,41,50],[145,0,41,51],[146,0,41,52],[147,0,41,53]],[[13,0,42,13]],[[9,0,43,9]],[[8,0,44,8],[15,0,44,15],[19,0,44,19],[20,0,44,20]],[[4,0,45,4],[5,0,45,5]],[[4,0,47,4]],[],[],[],[[7,0,51,7]],[[4,0,52,11],[14,0,52,21]],[[8,0,53,8],[15,0,53,15],[29,0,53,29],[30,0,53,30]],[[4,0,54,4],[5,0,54,5]],[[4,0,56,4]],[],[],[[7,0,59,7]],[[4,0,60,11],[12,0,60,19]],[[8,0,61,8],[15,0,61,15],[31,0,61,31],[32,0,61,32]],[[4,0,62,4],[5,0,62,5]],[[4,0,64,4]],[],[],[],[[7,0,68,7]],[[4,0,69,14],[28,0,69,38]],[[8,0,70,8],[15,0,70,15],[16,0,70,16],[24,0,70,24],[26,0,70,26],[34,0,70,34],[36,0,70,36],[42,0,70,42],[44,0,70,44],[56,0,70,56],[58,0,70,58],[61,0,70,61],[63,0,70,63],[67,0,70,67],[69,0,70,69],[74,0,70,74],[76,0,70,76],[81,0,70,81],[83,0,70,83],[87,0,70,87],[89,0,70,89],[94,0,70,94],[96,0,70,96],[101,0,70,101],[102,0,70,102],[103,0,70,103]],[[4,0,71,4],[5,0,71,5]],[[4,0,73,14],[24,0,73,34]],[[8,0,74,8],[12,0,74,12],[13,0,74,13],[23,0,74,23],[26,0,74,26],[28,0,74,28],[29,0,74,29]],[[8,0,75,8],[14,0,75,14],[30,0,75,30],[33,0,75,33],[37,0,75,37],[38,0,75,38],[53,0,75,53],[54,0,75,54],[74,0,75,74],[75,0,75,75],[87,0,75,87],[88,0,75,88],[89,0,75,89]],[[8,0,76,8],[13,0,76,13],[17,0,76,17],[18,0,76,18],[21,0,76,21],[22,0,76,22],[24,0,76,24],[25,0,76,25],[28,0,76,28],[44,0,76,44],[45,0,76,45],[51,0,76,51],[53,0,76,53],[54,0,76,54],[56,0,76,56],[58,0,76,58]],[[12,0,77,12],[18,0,77,18],[27,0,77,27],[30,0,77,30],[46,0,77,46],[47,0,77,47],[51,0,77,51],[52,0,77,52],[53,0,77,53],[54,0,77,54],[55,0,77,55]],[[12,0,78,12],[18,0,78,18],[20,0,78,20],[23,0,78,23],[32,0,78,32],[33,0,78,33],[45,0,78,45],[46,0,78,46],[50,0,78,50],[51,0,78,51],[52,0,78,52]],[[12,0,79,12],[16,0,79,16],[17,0,79,17],[19,0,79,19],[21,0,79,21]],[[16,0,80,16],[20,0,80,20],[21,0,80,21],[30,0,80,30],[31,0,80,31],[35,0,80,35],[36,0,80,36],[42,0,80,42],[43,0,80,43],[112,0,80,112],[114,0,80,114],[118,0,80,118],[119,0,80,119],[128,0,80,128],[129,0,80,129],[130,0,80,130],[131,0,80,131]],[[13,0,81,13]],[[12,0,82,12],[16,0,82,16],[17,0,82,17],[27,0,82,27],[28,0,82,28],[32,0,82,32],[33,0,82,33],[37,0,82,37],[51,0,82,51],[52,0,82,52],[61,0,82,61],[63,0,82,63],[65,0,82,65],[67,0,82,67],[71,0,82,71],[72,0,82,72],[73,0,82,73],[74,0,82,74]],[[9,0,83,9]],[[4,0,84,4],[5,0,84,5]],[[4,0,86,4]],[],[],[[7,0,89,7]],[[4,0,90,11],[18,0,90,25]],[[8,0,91,8],[14,0,91,14],[22,0,91,22],[25,0,91,25],[37,0,91,37],[38,0,91,38],[62,0,91,62],[63,0,91,63],[67,0,91,67],[68,0,91,68],[83,0,91,83],[85,0,91,85],[91,0,91,91],[92,0,91,92],[93,0,91,93]],[[8,0,92,8],[12,0,92,12],[20,0,92,20],[22,0,92,22]],[[12,0,93,12],[19,0,93,19],[27,0,93,27],[28,0,93,28],[40,0,93,40],[41,0,93,41],[58,0,93,58],[59,0,93,59],[60,0,93,60]],[[9,0,94,9]],[[13,0,94,15]],[[12,0,95,12],[19,0,95,19],[23,0,95,23],[24,0,95,24]],[[9,0,96,9]],[[4,0,97,4],[5,0,97,5]],[[4,0,99,4]],[],[],[[7,0,102,7]],[[4,0,103,11],[21,0,103,28],[22,0,103,29],[30,0,103,45]],[[8,0,104,8],[14,0,104,14],[22,0,104,22],[25,0,104,25],[37,0,104,37],[38,0,104,38],[62,0,104,62],[63,0,104,63],[67,0,104,67],[68,0,104,68],[83,0,104,83],[85,0,104,85],[91,0,104,91],[92,0,104,92],[93,0,104,93]],[[8,0,105,8],[12,0,105,12],[20,0,105,20],[22,0,105,22]],[[12,0,106,12],[20,0,106,20],[21,0,106,21],[33,0,106,33],[34,0,106,34],[51,0,106,51],[53,0,106,53],[61,0,106,61],[62,0,106,62],[63,0,106,63]],[[9,0,107,9]],[[4,0,108,4],[5,0,108,5]],[[4,0,110,4]],[],[],[[7,0,113,7]],[[4,0,114,11],[18,0,114,25]],[[8,0,115,8],[14,0,115,14],[22,0,115,22],[25,0,115,25],[37,0,115,37],[38,0,115,38],[62,0,115,62],[63,0,115,63],[67,0,115,67],[68,0,115,68],[83,0,115,83],[85,0,115,85],[91,0,115,91],[92,0,115,92],[93,0,115,93]],[[8,0,116,8],[12,0,116,12],[20,0,116,20],[22,0,116,22]],[[12,0,117,12],[19,0,117,19],[27,0,117,27],[28,0,117,28],[40,0,117,40],[41,0,117,41],[58,0,117,58],[59,0,117,59],[60,0,117,60]],[[9,0,118,9]],[[13,0,118,15]],[[12,0,119,12],[19,0,119,19],[23,0,119,23],[24,0,119,24]],[[9,0,120,9]],[[4,0,121,4],[5,0,121,5]],[[4,0,123,4]],[],[],[[7,0,126,7]],[[4,0,127,11],[21,0,127,28],[22,0,127,29],[30,0,127,45]],[[8,0,128,8],[14,0,128,14],[22,0,128,22],[25,0,128,25],[37,0,128,37],[38,0,128,38],[62,0,128,62],[63,0,128,63],[67,0,128,67],[68,0,128,68],[83,0,128,83],[85,0,128,85],[91,0,128,91],[92,0,128,92],[93,0,128,93]],[[8,0,129,8],[12,0,129,12],[20,0,129,20],[22,0,129,22]],[[12,0,130,12],[20,0,130,20],[21,0,130,21],[33,0,130,33],[34,0,130,34],[51,0,130,51],[53,0,130,53],[61,0,130,61],[62,0,130,62],[63,0,130,63]],[[9,0,131,9]],[[4,0,132,4],[5,0,132,5]],[[4,0,134,4]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,155,7]],[[4,0,156,4],[22,0,156,22],[23,0,156,23],[39,0,156,51],[41,0,156,53],[54,0,156,75],[56,0,156,77],[67,0,156,97],[69,0,156,99],[87,0,156,130]],[[8,0,158,8],[12,0,158,12],[16,0,158,16],[17,0,158,17],[32,0,158,32],[33,0,158,33],[49,0,158,49],[50,0,158,50],[52,0,158,52],[53,0,158,53],[55,0,158,55]],[[12,0,159,12],[18,0,159,18],[22,0,159,22],[27,0,159,27],[28,0,159,28],[34,0,159,34],[35,0,159,35],[91,0,159,91],[93,0,159,93],[109,0,159,109],[110,0,159,110],[112,0,159,112],[113,0,159,113],[114,0,159,114],[115,0,159,115]],[[9,0,160,9]],[[8,0,161,8],[14,0,161,14],[19,0,161,19],[22,0,161,43],[38,0,161,60],[39,0,161,61],[62,0,161,84],[63,0,161,85],[76,0,161,98],[78,0,161,100],[89,0,161,111],[91,0,161,113],[95,0,161,117],[96,0,161,118],[97,0,161,119]],[[8,0,162,8],[14,0,162,14],[25,0,162,25],[28,0,162,28],[40,0,162,40],[41,0,162,41],[65,0,162,65],[66,0,162,66],[70,0,162,70],[71,0,162,71],[86,0,162,86],[88,0,162,88],[94,0,162,94],[95,0,162,95],[96,0,162,96]],[[8,0,163,8],[12,0,163,12],[13,0,163,13],[24,0,163,24],[26,0,163,26]],[[12,0,164,12],[18,0,164,18],[22,0,164,22],[27,0,164,27],[28,0,164,28],[34,0,164,34],[35,0,164,35],[108,0,164,108],[110,0,164,110],[114,0,164,114],[115,0,164,115],[124,0,164,124],[125,0,164,125],[126,0,164,126],[127,0,164,127]],[[9,0,165,9]],[[8,0,166,8],[12,0,166,12],[20,0,166,20],[23,0,166,23],[28,0,166,28],[29,0,166,29]],[[8,0,167,8],[12,0,167,12],[36,0,167,36],[39,0,167,39],[44,0,167,44],[45,0,167,45]],[[8,0,168,8],[12,0,168,12],[13,0,168,13],[14,0,168,14],[32,0,168,32],[34,0,168,34]],[[12,0,169,12],[18,0,169,18],[32,0,169,32],[35,0,169,35],[39,0,169,39],[40,0,169,40],[55,0,169,55],[56,0,169,56],[74,0,169,74],[75,0,169,75],[77,0,169,77],[78,0,169,78],[79,0,169,79]],[[12,0,170,12],[16,0,170,16],[17,0,170,17],[18,0,170,18],[32,0,170,32],[34,0,170,34]],[[16,0,171,16],[40,0,171,40],[43,0,171,43],[47,0,171,47],[48,0,171,48]],[[13,0,172,13]],[[9,0,173,9]],[[8,0,174,8],[12,0,174,12],[30,0,174,30],[35,0,174,35],[44,0,174,44],[48,0,174,48],[49,0,174,49],[67,0,174,67],[71,0,174,71],[72,0,174,72],[96,0,174,96],[97,0,174,97],[99,0,174,99]],[[12,0,175,12],[23,0,175,23],[24,0,175,24],[35,0,175,35],[36,0,175,36],[41,0,175,41],[42,0,175,42],[54,0,175,54],[56,0,175,56],[57,0,175,57],[58,0,175,58]],[[12,0,176,12],[20,0,176,20],[23,0,176,23],[27,0,176,27],[28,0,176,28]],[[9,0,177,9]],[[13,0,177,15],[17,0,177,19],[35,0,177,37],[40,0,177,42],[44,0,177,46],[46,0,177,48]],[[12,0,178,12],[18,0,178,18],[34,0,178,34],[37,0,178,37],[49,0,178,49],[50,0,178,50],[74,0,178,74],[75,0,178,75],[79,0,178,79],[80,0,178,80],[95,0,178,95],[97,0,178,97],[109,0,178,109],[110,0,178,110],[111,0,178,111]],[[12,0,179,12],[16,0,179,16],[32,0,179,32],[34,0,179,34]],[[16,0,180,16],[28,0,180,28],[29,0,180,29],[41,0,180,41],[42,0,180,42],[47,0,180,47],[48,0,180,48],[60,0,180,60],[62,0,180,62],[64,0,180,64],[80,0,180,80],[81,0,180,81],[82,0,180,82]],[[16,0,181,16],[24,0,181,24],[27,0,181,27],[31,0,181,31],[32,0,181,32]],[[13,0,182,13]],[[17,0,182,19]],[[16,0,183,16],[60,0,183,60]],[[16,0,184,16],[27,0,184,27],[28,0,184,28],[39,0,184,39],[40,0,184,40],[45,0,184,45],[46,0,184,46],[58,0,184,58],[60,0,184,60],[61,0,184,61],[62,0,184,62]],[[16,0,185,16],[24,0,185,24],[27,0,185,27],[31,0,185,31],[32,0,185,32]],[[13,0,186,13]],[[9,0,187,9]],[[13,0,187,15]],[[12,0,188,12],[18,0,188,18],[32,0,188,32],[35,0,188,35],[47,0,188,47],[48,0,188,48],[72,0,188,72],[73,0,188,73],[77,0,188,77],[78,0,188,78],[93,0,188,93],[95,0,188,95],[107,0,188,107],[109,0,188,109],[127,0,188,127],[128,0,188,128],[130,0,188,130],[131,0,188,131],[132,0,188,132]],[[12,0,189,12],[16,0,189,16],[30,0,189,30],[32,0,189,32]],[[16,0,190,16],[28,0,190,28],[29,0,190,29],[40,0,190,40],[41,0,190,41],[46,0,190,46],[47,0,190,47],[59,0,190,59],[61,0,190,61],[63,0,190,63],[77,0,190,77],[78,0,190,78],[79,0,190,79]],[[16,0,191,16],[24,0,191,24],[27,0,191,27],[31,0,191,31],[32,0,191,32]],[[13,0,192,13]],[[9,0,193,9]],[[8,0,194,8],[12,0,194,12],[20,0,194,20],[22,0,194,22]],[[12,0,195,12],[16,0,195,16],[17,0,195,17],[41,0,195,41],[43,0,195,43],[44,0,195,44]],[[12,0,196,12],[16,0,196,16],[17,0,196,17],[27,0,196,27],[28,0,196,28],[32,0,196,32],[33,0,196,33],[38,0,196,38],[39,0,196,39],[40,0,196,40]],[[12,0,197,12],[16,0,197,16],[17,0,197,17],[29,0,197,29],[31,0,197,31],[32,0,197,32]],[[12,0,198,12],[19,0,198,19],[24,0,198,24],[25,0,198,25]],[[9,0,199,9]],[[13,0,199,15]],[[12,0,200,9],[19,0,200,16],[23,0,200,20],[24,0,200,21]],[[9,0,201,9]],[[4,0,202,4],[5,0,202,5]],[[4,0,204,4]],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,217,7]],[[4,0,218,11],[32,0,218,39],[33,0,218,40],[37,0,218,52],[39,0,218,54],[47,0,218,70],[49,0,218,72],[62,0,218,94],[64,0,218,96],[75,0,218,116]],[[8,0,220,8],[14,0,220,14],[29,0,220,29],[32,0,220,32],[36,0,220,36],[45,0,220,45],[46,0,220,46],[50,0,220,50],[51,0,220,51],[64,0,220,64],[66,0,220,66],[68,0,220,68],[76,0,220,76],[78,0,220,78],[82,0,220,82],[83,0,220,83],[91,0,220,91],[93,0,220,93],[94,0,220,94],[95,0,220,95]],[[8,0,221,8],[23,0,221,23],[24,0,221,24],[52,0,221,52],[53,0,221,53],[57,0,221,57],[58,0,221,58],[71,0,221,71],[72,0,221,72],[73,0,221,73]],[[8,0,222,8],[23,0,222,23],[24,0,222,24],[51,0,222,51],[52,0,222,52],[56,0,222,56],[57,0,222,57],[69,0,222,69],[70,0,222,70],[71,0,222,71]],[[8,0,223,8],[23,0,223,23],[24,0,223,24],[41,0,223,41],[42,0,223,42],[46,0,223,46],[47,0,223,47],[48,0,223,48]],[[8,0,224,8],[23,0,224,23],[24,0,224,24],[40,0,224,40],[41,0,224,41],[42,0,224,42],[51,0,224,63],[53,0,224,65],[55,0,224,67]],[[12,0,225,33],[21,0,225,43],[22,0,225,44],[39,0,225,61],[40,0,225,62],[53,0,225,75],[55,0,225,77],[66,0,225,88],[67,0,225,89],[68,0,225,90]],[[8,0,226,8],[9,0,226,9],[10,0,226,10],[11,0,226,11]],[[8,0,227,8],[15,0,227,15],[30,0,227,30],[31,0,227,31]],[[4,0,228,4],[5,0,228,5]],[[1,0,229,1]]],"sourcesContent":["import {format} from 'util';\r\nimport {ITranslationMessagesFile} from '../api/i-translation-messages-file';\r\nimport {ITransUnit} from '../api/i-trans-unit';\r\nimport {FORMAT_XLIFF12, FILETYPE_XLIFF12} from '../api/constants';\r\nimport {DOMUtilities} from './dom-utilities';\r\nimport {XliffTransUnit} from './xliff-trans-unit';\r\nimport {AbstractTranslationMessagesFile} from './abstract-translation-messages-file';\r\nimport {AbstractTransUnit} from './abstract-trans-unit';\r\n/**\r\n * Created by martin on 23.02.2017.\r\n * Ab xliff file read from a source file.\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\n\r\nexport class XliffFile extends AbstractTranslationMessagesFile implements ITranslationMessagesFile {\r\n\r\n    /**\r\n     * Create an xlf-File from source.\r\n     * @param xmlString source read from file.\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return XliffFile\r\n     */\r\n    constructor(xmlString: string, path: string, encoding: BufferEncoding ) {\r\n        super();\r\n        this._warnings = [];\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this.initializeFromContent(xmlString, path, encoding);\r\n    }\r\n\r\n    private initializeFromContent(xmlString: string, path: string, encoding: BufferEncoding ): XliffFile {\r\n        this.parseContent(xmlString, path, encoding);\r\n        const xliffList = this._parsedDocument.getElementsByTagName('xliff');\r\n        if (xliffList.length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff file (should contain an xliff element)', path));\r\n        } else {\r\n            const version = xliffList.item(0).getAttribute('version');\r\n            const expectedVersion = '1.2';\r\n            if (version !== expectedVersion) {\r\n                throw new Error(format('File \"%s\" seems to be no xliff 1.2 file, version should be %s, found %s',\r\n                    path, expectedVersion, version));\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    public i18nFormat(): string {\r\n        return FORMAT_XLIFF12;\r\n    }\r\n\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 1.2'\r\n     */\r\n    public fileType(): string {\r\n        return FILETYPE_XLIFF12;\r\n    }\r\n\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    protected elementsWithMixedContent(): string[] {\r\n        return ['source', 'target', 'tool', 'seg-source', 'g', 'ph', 'bpt', 'ept', 'it', 'sub', 'mrk'];\r\n    }\r\n\r\n    protected initializeTransUnits() {\r\n        this.transUnits = [];\r\n        const transUnitsInFile = this._parsedDocument.getElementsByTagName('trans-unit');\r\n        for (let i = 0; i < transUnitsInFile.length; i++) {\r\n            const transunit = transUnitsInFile.item(i);\r\n            const id = transunit.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, trans-unit without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new XliffTransUnit(transunit, id, this));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get source language.\r\n     * @return source language.\r\n     */\r\n    public sourceLanguage(): string {\r\n        const fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            return fileElem.getAttribute('source-language');\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Edit the source language.\r\n     * @param language language\r\n     */\r\n    public setSourceLanguage(language: string) {\r\n        const fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            fileElem.setAttribute('source-language', language);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    public targetLanguage(): string {\r\n        const fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            return fileElem.getAttribute('target-language');\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    public setTargetLanguage(language: string) {\r\n        const fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            fileElem.setAttribute('target-language', language);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    importNewTransUnit(foreignTransUnit: ITransUnit, isDefaultLang: boolean, copyContent: boolean, importAfterElement?: ITransUnit)\r\n        : ITransUnit {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        const newTu = (<AbstractTransUnit> foreignTransUnit).cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        const bodyElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'body');\r\n        if (!bodyElement) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff 1.2 file (should contain a body element)', this._filename));\r\n        }\r\n        let inserted = false;\r\n        let isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            const insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            bodyElement.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        } else if (importAfterElement === null) {\r\n            const firstUnitElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'trans-unit');\r\n            if (firstUnitElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstUnitElement);\r\n                inserted = true;\r\n            } else {\r\n                // no trans-unit, empty file, so add to body\r\n                bodyElement.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        } else {\r\n            const refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'trans-unit', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        } else {\r\n         return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    public createTranslationFileForLang(lang: string, filename: string, isDefaultLang: boolean, copyContent: boolean)\r\n        : ITranslationMessagesFile {\r\n        const translationFile = new XliffFile(this.editedContent(), filename, this.encoding());\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.forEachTransUnit((transUnit: ITransUnit) => {\r\n            (<AbstractTransUnit> transUnit).useSourceAsTarget(isDefaultLang, copyContent);\r\n        });\r\n        return translationFile;\r\n    }\r\n}\r\n"]},"resolvedIds":{"util":{"external":true,"id":"util","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../api/constants":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./xliff-trans-unit":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff-trans-unit.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./dom-utilities":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./abstract-translation-messages-file":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-translation-messages-file.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":39401,"body":[{"type":"ImportDeclaration","start":0,"end":66,"specifiers":[{"type":"ImportSpecifier","start":9,"end":30,"imported":{"type":"Identifier","start":9,"end":30,"name":"AbstractMessageParser"},"local":{"type":"Identifier","start":9,"end":30,"name":"AbstractMessageParser"}}],"source":{"type":"Literal","start":38,"end":65,"value":"./abstract-message-parser","raw":"'./abstract-message-parser'"}},{"type":"ImportDeclaration","start":68,"end":115,"specifiers":[{"type":"ImportSpecifier","start":77,"end":89,"imported":{"type":"Identifier","start":77,"end":89,"name":"DOMUtilities"},"local":{"type":"Identifier","start":77,"end":89,"name":"DOMUtilities"}}],"source":{"type":"Literal","start":97,"end":114,"value":"./dom-utilities","raw":"'./dom-utilities'"}},{"type":"ImportDeclaration","start":117,"end":160,"specifiers":[{"type":"ImportSpecifier","start":126,"end":136,"imported":{"type":"Identifier","start":126,"end":136,"name":"TagMapping"},"local":{"type":"Identifier","start":126,"end":136,"name":"TagMapping"}}],"source":{"type":"Literal","start":144,"end":159,"value":"./tag-mapping","raw":"'./tag-mapping'"}},{"type":"ImportDeclaration","start":162,"end":224,"specifiers":[{"type":"ImportSpecifier","start":171,"end":192,"imported":{"type":"Identifier","start":171,"end":192,"name":"ParsedMessagePartType"},"local":{"type":"Identifier","start":171,"end":192,"name":"ParsedMessagePartType"}}],"source":{"type":"Literal","start":200,"end":223,"value":"./parsed-message-part","raw":"'./parsed-message-part'"}},{"type":"ExportNamedDeclaration","start":301,"end":11437,"declaration":{"type":"ClassDeclaration","start":308,"end":11437,"id":{"type":"Identifier","start":314,"end":330,"name":"XmbMessageParser"},"superClass":{"type":"Identifier","start":339,"end":360,"name":"AbstractMessageParser"},"body":{"type":"ClassBody","start":361,"end":11437,"body":[{"type":"MethodDefinition","start":656,"end":3069,"static":false,"computed":false,"key":{"type":"Identifier","start":656,"end":675,"name":"processStartElement"},"kind":"method","value":{"type":"FunctionExpression","start":675,"end":3069,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":676,"end":687,"name":"elementNode"},{"type":"Identifier","start":689,"end":696,"name":"message"}],"body":{"type":"BlockStatement","start":698,"end":3069,"body":[{"type":"VariableDeclaration","start":709,"end":745,"declarations":[{"type":"VariableDeclarator","start":715,"end":744,"id":{"type":"Identifier","start":715,"end":722,"name":"tagName"},"init":{"type":"MemberExpression","start":725,"end":744,"object":{"type":"Identifier","start":725,"end":736,"name":"elementNode"},"property":{"type":"Identifier","start":737,"end":744,"name":"tagName"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":755,"end":3040,"test":{"type":"BinaryExpression","start":759,"end":775,"left":{"type":"Identifier","start":759,"end":766,"name":"tagName"},"operator":"===","right":{"type":"Literal","start":771,"end":775,"value":"ph","raw":"'ph'"}},"consequent":{"type":"BlockStatement","start":777,"end":2930,"body":[{"type":"VariableDeclaration","start":1280,"end":1326,"declarations":[{"type":"VariableDeclarator","start":1286,"end":1325,"id":{"type":"Identifier","start":1286,"end":1290,"name":"name"},"init":{"type":"CallExpression","start":1293,"end":1325,"callee":{"type":"MemberExpression","start":1293,"end":1317,"object":{"type":"Identifier","start":1293,"end":1304,"name":"elementNode"},"property":{"type":"Identifier","start":1305,"end":1317,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1318,"end":1324,"value":"name","raw":"'name'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1340,"end":1418,"test":{"type":"UnaryExpression","start":1344,"end":1349,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":1345,"end":1349,"name":"name"}},"consequent":{"type":"BlockStatement","start":1351,"end":1418,"body":[{"type":"ReturnStatement","start":1370,"end":1382,"argument":{"type":"Literal","start":1377,"end":1381,"value":true,"raw":"true"}}]},"alternate":null},{"type":"IfStatement","start":1432,"end":2919,"test":{"type":"CallExpression","start":1436,"end":1468,"callee":{"type":"MemberExpression","start":1436,"end":1451,"object":{"type":"Identifier","start":1436,"end":1440,"name":"name"},"property":{"type":"Identifier","start":1441,"end":1451,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1452,"end":1467,"value":"INTERPOLATION","raw":"'INTERPOLATION'"}],"optional":false},"consequent":{"type":"BlockStatement","start":1470,"end":1663,"body":[{"type":"VariableDeclaration","start":1489,"end":1544,"declarations":[{"type":"VariableDeclarator","start":1495,"end":1543,"id":{"type":"Identifier","start":1495,"end":1500,"name":"index"},"init":{"type":"CallExpression","start":1503,"end":1543,"callee":{"type":"MemberExpression","start":1503,"end":1537,"object":{"type":"ThisExpression","start":1503,"end":1507},"property":{"type":"Identifier","start":1508,"end":1537,"name":"parsePlaceholderIndexFromName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1538,"end":1542,"name":"name"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":1562,"end":1598,"expression":{"type":"CallExpression","start":1562,"end":1597,"callee":{"type":"MemberExpression","start":1562,"end":1584,"object":{"type":"Identifier","start":1562,"end":1569,"name":"message"},"property":{"type":"Identifier","start":1570,"end":1584,"name":"addPlaceholder"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1585,"end":1590,"name":"index"},{"type":"Literal","start":1592,"end":1596,"value":null,"raw":"null"}],"optional":false}},{"type":"ReturnStatement","start":1616,"end":1629,"argument":{"type":"Literal","start":1623,"end":1628,"value":false,"raw":"false"}}]},"alternate":{"type":"IfStatement","start":1682,"end":2919,"test":{"type":"CallExpression","start":1686,"end":1711,"callee":{"type":"MemberExpression","start":1686,"end":1701,"object":{"type":"Identifier","start":1686,"end":1690,"name":"name"},"property":{"type":"Identifier","start":1691,"end":1701,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1702,"end":1710,"value":"START_","raw":"'START_'"}],"optional":false},"consequent":{"type":"BlockStatement","start":1713,"end":2026,"body":[{"type":"VariableDeclaration","start":1732,"end":1788,"declarations":[{"type":"VariableDeclarator","start":1738,"end":1787,"id":{"type":"Identifier","start":1738,"end":1741,"name":"tag"},"init":{"type":"CallExpression","start":1744,"end":1787,"callee":{"type":"MemberExpression","start":1744,"end":1774,"object":{"type":"ThisExpression","start":1744,"end":1748},"property":{"type":"Identifier","start":1749,"end":1774,"name":"parseTagnameFromPhElement"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1775,"end":1786,"name":"elementNode"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1806,"end":1856,"declarations":[{"type":"VariableDeclarator","start":1812,"end":1855,"id":{"type":"Identifier","start":1812,"end":1821,"name":"idcounter"},"init":{"type":"CallExpression","start":1824,"end":1855,"callee":{"type":"MemberExpression","start":1824,"end":1849,"object":{"type":"ThisExpression","start":1824,"end":1828},"property":{"type":"Identifier","start":1829,"end":1849,"name":"parseIdCountFromName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1850,"end":1854,"name":"name"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1874,"end":1961,"test":{"type":"Identifier","start":1878,"end":1881,"name":"tag"},"consequent":{"type":"BlockStatement","start":1883,"end":1961,"body":[{"type":"ExpressionStatement","start":1906,"end":1942,"expression":{"type":"CallExpression","start":1906,"end":1941,"callee":{"type":"MemberExpression","start":1906,"end":1925,"object":{"type":"Identifier","start":1906,"end":1913,"name":"message"},"property":{"type":"Identifier","start":1914,"end":1925,"name":"addStartTag"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1926,"end":1929,"name":"tag"},{"type":"Identifier","start":1931,"end":1940,"name":"idcounter"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":1979,"end":1992,"argument":{"type":"Literal","start":1986,"end":1991,"value":false,"raw":"false"}}]},"alternate":{"type":"IfStatement","start":2045,"end":2919,"test":{"type":"CallExpression","start":2049,"end":2074,"callee":{"type":"MemberExpression","start":2049,"end":2064,"object":{"type":"Identifier","start":2049,"end":2053,"name":"name"},"property":{"type":"Identifier","start":2054,"end":2064,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2065,"end":2073,"value":"CLOSE_","raw":"'CLOSE_'"}],"optional":false},"consequent":{"type":"BlockStatement","start":2076,"end":2308,"body":[{"type":"VariableDeclaration","start":2095,"end":2151,"declarations":[{"type":"VariableDeclarator","start":2101,"end":2150,"id":{"type":"Identifier","start":2101,"end":2104,"name":"tag"},"init":{"type":"CallExpression","start":2107,"end":2150,"callee":{"type":"MemberExpression","start":2107,"end":2137,"object":{"type":"ThisExpression","start":2107,"end":2111},"property":{"type":"Identifier","start":2112,"end":2137,"name":"parseTagnameFromPhElement"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2138,"end":2149,"name":"elementNode"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":2169,"end":2243,"test":{"type":"Identifier","start":2173,"end":2176,"name":"tag"},"consequent":{"type":"BlockStatement","start":2178,"end":2243,"body":[{"type":"ExpressionStatement","start":2201,"end":2224,"expression":{"type":"CallExpression","start":2201,"end":2223,"callee":{"type":"MemberExpression","start":2201,"end":2218,"object":{"type":"Identifier","start":2201,"end":2208,"name":"message"},"property":{"type":"Identifier","start":2209,"end":2218,"name":"addEndTag"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2219,"end":2222,"name":"tag"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":2261,"end":2274,"argument":{"type":"Literal","start":2268,"end":2273,"value":false,"raw":"false"}}]},"alternate":{"type":"IfStatement","start":2327,"end":2919,"test":{"type":"CallExpression","start":2331,"end":2379,"callee":{"type":"MemberExpression","start":2331,"end":2373,"object":{"type":"NewExpression","start":2331,"end":2347,"callee":{"type":"Identifier","start":2335,"end":2345,"name":"TagMapping"},"arguments":[]},"property":{"type":"Identifier","start":2348,"end":2373,"name":"isEmptyTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2374,"end":2378,"name":"name"}],"optional":false},"consequent":{"type":"BlockStatement","start":2381,"end":2678,"body":[{"type":"VariableDeclaration","start":2400,"end":2482,"declarations":[{"type":"VariableDeclarator","start":2406,"end":2481,"id":{"type":"Identifier","start":2406,"end":2418,"name":"emptyTagName"},"init":{"type":"CallExpression","start":2421,"end":2481,"callee":{"type":"MemberExpression","start":2421,"end":2475,"object":{"type":"NewExpression","start":2421,"end":2437,"callee":{"type":"Identifier","start":2425,"end":2435,"name":"TagMapping"},"arguments":[]},"property":{"type":"Identifier","start":2438,"end":2475,"name":"getTagnameFromEmptyTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2476,"end":2480,"name":"name"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":2500,"end":2550,"declarations":[{"type":"VariableDeclarator","start":2506,"end":2549,"id":{"type":"Identifier","start":2506,"end":2515,"name":"idcounter"},"init":{"type":"CallExpression","start":2518,"end":2549,"callee":{"type":"MemberExpression","start":2518,"end":2543,"object":{"type":"ThisExpression","start":2518,"end":2522},"property":{"type":"Identifier","start":2523,"end":2543,"name":"parseIdCountFromName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2544,"end":2548,"name":"name"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":2568,"end":2613,"expression":{"type":"CallExpression","start":2568,"end":2612,"callee":{"type":"MemberExpression","start":2568,"end":2587,"object":{"type":"Identifier","start":2568,"end":2575,"name":"message"},"property":{"type":"Identifier","start":2576,"end":2587,"name":"addEmptyTag"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2588,"end":2600,"name":"emptyTagName"},{"type":"Identifier","start":2602,"end":2611,"name":"idcounter"}],"optional":false}},{"type":"ReturnStatement","start":2631,"end":2644,"argument":{"type":"Literal","start":2638,"end":2643,"value":false,"raw":"false"}}]},"alternate":{"type":"IfStatement","start":2697,"end":2919,"test":{"type":"CallExpression","start":2701,"end":2723,"callee":{"type":"MemberExpression","start":2701,"end":2716,"object":{"type":"Identifier","start":2701,"end":2705,"name":"name"},"property":{"type":"Identifier","start":2706,"end":2716,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2717,"end":2722,"value":"ICU","raw":"'ICU'"}],"optional":false},"consequent":{"type":"BlockStatement","start":2725,"end":2919,"body":[{"type":"VariableDeclaration","start":2744,"end":2798,"declarations":[{"type":"VariableDeclarator","start":2750,"end":2797,"id":{"type":"Identifier","start":2750,"end":2755,"name":"index"},"init":{"type":"CallExpression","start":2758,"end":2797,"callee":{"type":"MemberExpression","start":2758,"end":2791,"object":{"type":"ThisExpression","start":2758,"end":2762},"property":{"type":"Identifier","start":2763,"end":2791,"name":"parseICUMessageIndexFromName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2792,"end":2796,"name":"name"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":2816,"end":2854,"expression":{"type":"CallExpression","start":2816,"end":2853,"callee":{"type":"MemberExpression","start":2816,"end":2840,"object":{"type":"Identifier","start":2816,"end":2823,"name":"message"},"property":{"type":"Identifier","start":2824,"end":2840,"name":"addICUMessageRef"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2841,"end":2846,"name":"index"},{"type":"Literal","start":2848,"end":2852,"value":null,"raw":"null"}],"optional":false}},{"type":"ReturnStatement","start":2872,"end":2885,"argument":{"type":"Literal","start":2879,"end":2884,"value":false,"raw":"false"}}]},"alternate":null}}}}}]},"alternate":{"type":"IfStatement","start":2945,"end":3040,"test":{"type":"BinaryExpression","start":2949,"end":2969,"left":{"type":"Identifier","start":2949,"end":2956,"name":"tagName"},"operator":"===","right":{"type":"Literal","start":2961,"end":2969,"value":"source","raw":"'source'"}},"consequent":{"type":"BlockStatement","start":2971,"end":3040,"body":[{"type":"ReturnStatement","start":3016,"end":3029,"argument":{"type":"Literal","start":3023,"end":3028,"value":false,"raw":"false"}}]},"alternate":null}},{"type":"ReturnStatement","start":3050,"end":3062,"argument":{"type":"Literal","start":3057,"end":3061,"value":true,"raw":"true"}}]}}},{"type":"MethodDefinition","start":3253,"end":4459,"static":false,"computed":false,"key":{"type":"Identifier","start":3253,"end":3270,"name":"getICUMessageText"},"kind":"method","value":{"type":"FunctionExpression","start":3270,"end":4459,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3271,"end":3275,"name":"node"}],"body":{"type":"BlockStatement","start":3277,"end":4459,"body":[{"type":"VariableDeclaration","start":3288,"end":3321,"declarations":[{"type":"VariableDeclarator","start":3294,"end":3320,"id":{"type":"Identifier","start":3294,"end":3302,"name":"children"},"init":{"type":"MemberExpression","start":3305,"end":3320,"object":{"type":"Identifier","start":3305,"end":3309,"name":"node"},"property":{"type":"Identifier","start":3310,"end":3320,"name":"childNodes"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3331,"end":3396,"test":{"type":"BinaryExpression","start":3335,"end":3356,"left":{"type":"MemberExpression","start":3335,"end":3350,"object":{"type":"Identifier","start":3335,"end":3343,"name":"children"},"property":{"type":"Identifier","start":3344,"end":3350,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":3355,"end":3356,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":3358,"end":3396,"body":[{"type":"ReturnStatement","start":3373,"end":3385,"argument":{"type":"Literal","start":3380,"end":3384,"value":null,"raw":"null"}}]},"alternate":null},{"type":"VariableDeclaration","start":3406,"end":3428,"declarations":[{"type":"VariableDeclarator","start":3410,"end":3427,"id":{"type":"Identifier","start":3410,"end":3420,"name":"firstChild"},"init":{"type":"Literal","start":3423,"end":3427,"value":null,"raw":"null"}}],"kind":"let"},{"type":"VariableDeclaration","start":3494,"end":3500,"declarations":[{"type":"VariableDeclarator","start":3498,"end":3499,"id":{"type":"Identifier","start":3498,"end":3499,"name":"i"},"init":null}],"kind":"let"},{"type":"ForStatement","start":3510,"end":3769,"init":{"type":"AssignmentExpression","start":3515,"end":3520,"operator":"=","left":{"type":"Identifier","start":3515,"end":3516,"name":"i"},"right":{"type":"Literal","start":3519,"end":3520,"value":0,"raw":"0"}},"test":{"type":"BinaryExpression","start":3522,"end":3541,"left":{"type":"Identifier","start":3522,"end":3523,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":3526,"end":3541,"object":{"type":"Identifier","start":3526,"end":3534,"name":"children"},"property":{"type":"Identifier","start":3535,"end":3541,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":3543,"end":3546,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":3543,"end":3544,"name":"i"}},"body":{"type":"BlockStatement","start":3548,"end":3769,"body":[{"type":"VariableDeclaration","start":3563,"end":3594,"declarations":[{"type":"VariableDeclarator","start":3569,"end":3593,"id":{"type":"Identifier","start":3569,"end":3574,"name":"child"},"init":{"type":"CallExpression","start":3577,"end":3593,"callee":{"type":"MemberExpression","start":3577,"end":3590,"object":{"type":"Identifier","start":3577,"end":3585,"name":"children"},"property":{"type":"Identifier","start":3586,"end":3590,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3591,"end":3592,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3608,"end":3758,"test":{"type":"LogicalExpression","start":3612,"end":3679,"left":{"type":"BinaryExpression","start":3612,"end":3649,"left":{"type":"MemberExpression","start":3612,"end":3626,"object":{"type":"Identifier","start":3612,"end":3617,"name":"child"},"property":{"type":"Identifier","start":3618,"end":3626,"name":"nodeType"},"computed":false,"optional":false},"operator":"!==","right":{"type":"MemberExpression","start":3631,"end":3649,"object":{"type":"Identifier","start":3631,"end":3636,"name":"child"},"property":{"type":"Identifier","start":3637,"end":3649,"name":"ELEMENT_NODE"},"computed":false,"optional":false}},"operator":"||","right":{"type":"BinaryExpression","start":3653,"end":3679,"left":{"type":"MemberExpression","start":3653,"end":3666,"object":{"type":"Identifier","start":3653,"end":3658,"name":"child"},"property":{"type":"Identifier","start":3659,"end":3666,"name":"tagName"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Literal","start":3671,"end":3679,"value":"source","raw":"'source'"}}},"consequent":{"type":"BlockStatement","start":3681,"end":3758,"body":[{"type":"ExpressionStatement","start":3700,"end":3719,"expression":{"type":"AssignmentExpression","start":3700,"end":3718,"operator":"=","left":{"type":"Identifier","start":3700,"end":3710,"name":"firstChild"},"right":{"type":"Identifier","start":3713,"end":3718,"name":"child"}}},{"type":"BreakStatement","start":3737,"end":3743,"label":null}]},"alternate":null}]}},{"type":"IfStatement","start":3779,"end":4452,"test":{"type":"LogicalExpression","start":3783,"end":3841,"left":{"type":"Identifier","start":3783,"end":3793,"name":"firstChild"},"operator":"&&","right":{"type":"BinaryExpression","start":3797,"end":3841,"left":{"type":"MemberExpression","start":3797,"end":3816,"object":{"type":"Identifier","start":3797,"end":3807,"name":"firstChild"},"property":{"type":"Identifier","start":3808,"end":3816,"name":"nodeType"},"computed":false,"optional":false},"operator":"===","right":{"type":"MemberExpression","start":3821,"end":3841,"object":{"type":"Identifier","start":3821,"end":3831,"name":"firstChild"},"property":{"type":"Identifier","start":3832,"end":3841,"name":"TEXT_NODE"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":3843,"end":4399,"body":[{"type":"IfStatement","start":3858,"end":4388,"test":{"type":"CallExpression","start":3862,"end":3908,"callee":{"type":"MemberExpression","start":3862,"end":3884,"object":{"type":"ThisExpression","start":3862,"end":3866},"property":{"type":"Identifier","start":3867,"end":3884,"name":"isICUMessageStart"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3885,"end":3907,"object":{"type":"Identifier","start":3885,"end":3895,"name":"firstChild"},"property":{"type":"Identifier","start":3896,"end":3907,"name":"textContent"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":3910,"end":4323,"body":[{"type":"VariableDeclaration","start":3929,"end":3982,"declarations":[{"type":"VariableDeclarator","start":3935,"end":3981,"id":{"type":"Identifier","start":3935,"end":3946,"name":"messageText"},"init":{"type":"CallExpression","start":3949,"end":3981,"callee":{"type":"MemberExpression","start":3949,"end":3975,"object":{"type":"Identifier","start":3949,"end":3961,"name":"DOMUtilities"},"property":{"type":"Identifier","start":3962,"end":3975,"name":"getXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3976,"end":3980,"name":"node"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":4000,"end":4308,"test":{"type":"BinaryExpression","start":4004,"end":4009,"left":{"type":"Identifier","start":4004,"end":4005,"name":"i"},"operator":">","right":{"type":"Literal","start":4008,"end":4009,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":4011,"end":4224,"body":[{"type":"VariableDeclaration","start":4081,"end":4142,"declarations":[{"type":"VariableDeclarator","start":4087,"end":4141,"id":{"type":"Identifier","start":4087,"end":4095,"name":"reSource"},"init":{"type":"NewExpression","start":4098,"end":4141,"callee":{"type":"Identifier","start":4102,"end":4108,"name":"RegExp"},"arguments":[{"type":"Literal","start":4109,"end":4135,"value":"<source[^>]*>.*</source>","raw":"'<source[^>]*>.*</source>'"},{"type":"Literal","start":4137,"end":4140,"value":"g","raw":"'g'"}]}}],"kind":"const"},{"type":"ReturnStatement","start":4164,"end":4205,"argument":{"type":"CallExpression","start":4171,"end":4204,"callee":{"type":"MemberExpression","start":4171,"end":4190,"object":{"type":"Identifier","start":4171,"end":4182,"name":"messageText"},"property":{"type":"Identifier","start":4183,"end":4190,"name":"replace"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4191,"end":4199,"name":"reSource"},{"type":"Literal","start":4201,"end":4203,"value":"","raw":"''"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":4247,"end":4308,"body":[{"type":"ReturnStatement","start":4270,"end":4289,"argument":{"type":"Identifier","start":4277,"end":4288,"name":"messageText"}}]}}]},"alternate":{"type":"BlockStatement","start":4342,"end":4388,"body":[{"type":"ReturnStatement","start":4361,"end":4373,"argument":{"type":"Literal","start":4368,"end":4372,"value":null,"raw":"null"}}]}}]},"alternate":{"type":"BlockStatement","start":4414,"end":4452,"body":[{"type":"ReturnStatement","start":4429,"end":4441,"argument":{"type":"Literal","start":4436,"end":4440,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":4665,"end":4713,"static":false,"computed":false,"key":{"type":"Identifier","start":4665,"end":4682,"name":"processEndElement"},"kind":"method","value":{"type":"FunctionExpression","start":4682,"end":4713,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4683,"end":4694,"name":"elementNode"},{"type":"Identifier","start":4696,"end":4703,"name":"message"}],"body":{"type":"BlockStatement","start":4705,"end":4713,"body":[]}}},{"type":"MethodDefinition","start":4908,"end":5212,"static":false,"computed":false,"key":{"type":"Identifier","start":4908,"end":4937,"name":"parsePlaceholderIndexFromName"},"kind":"method","value":{"type":"FunctionExpression","start":4937,"end":5212,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4938,"end":4942,"name":"name"}],"body":{"type":"BlockStatement","start":4944,"end":5212,"body":[{"type":"VariableDeclaration","start":4955,"end":4976,"declarations":[{"type":"VariableDeclarator","start":4959,"end":4975,"id":{"type":"Identifier","start":4959,"end":4970,"name":"indexString"},"init":{"type":"Literal","start":4973,"end":4975,"value":"","raw":"''"}}],"kind":"let"},{"type":"IfStatement","start":4986,"end":5155,"test":{"type":"BinaryExpression","start":4990,"end":5014,"left":{"type":"Identifier","start":4990,"end":4994,"name":"name"},"operator":"===","right":{"type":"Literal","start":4999,"end":5014,"value":"INTERPOLATION","raw":"'INTERPOLATION'"}},"consequent":{"type":"BlockStatement","start":5016,"end":5060,"body":[{"type":"ExpressionStatement","start":5031,"end":5049,"expression":{"type":"AssignmentExpression","start":5031,"end":5048,"operator":"=","left":{"type":"Identifier","start":5031,"end":5042,"name":"indexString"},"right":{"type":"Literal","start":5045,"end":5048,"value":"0","raw":"'0'"}}}]},"alternate":{"type":"BlockStatement","start":5075,"end":5155,"body":[{"type":"ExpressionStatement","start":5090,"end":5144,"expression":{"type":"AssignmentExpression","start":5090,"end":5143,"operator":"=","left":{"type":"Identifier","start":5090,"end":5101,"name":"indexString"},"right":{"type":"CallExpression","start":5104,"end":5143,"callee":{"type":"MemberExpression","start":5104,"end":5118,"object":{"type":"Identifier","start":5104,"end":5108,"name":"name"},"property":{"type":"Identifier","start":5109,"end":5118,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":5119,"end":5142,"object":{"type":"Literal","start":5119,"end":5135,"value":"INTERPOLATION_","raw":"'INTERPOLATION_'"},"property":{"type":"Identifier","start":5136,"end":5142,"name":"length"},"computed":false,"optional":false}],"optional":false}}}]}},{"type":"ReturnStatement","start":5165,"end":5205,"argument":{"type":"CallExpression","start":5172,"end":5204,"callee":{"type":"MemberExpression","start":5172,"end":5187,"object":{"type":"Identifier","start":5172,"end":5178,"name":"Number"},"property":{"type":"Identifier","start":5179,"end":5187,"name":"parseInt"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5188,"end":5199,"name":"indexString"},{"type":"Literal","start":5201,"end":5203,"value":10,"raw":"10"}],"optional":false}}]}}},{"type":"MethodDefinition","start":5391,"end":5674,"static":false,"computed":false,"key":{"type":"Identifier","start":5391,"end":5419,"name":"parseICUMessageIndexFromName"},"kind":"method","value":{"type":"FunctionExpression","start":5419,"end":5674,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5420,"end":5424,"name":"name"}],"body":{"type":"BlockStatement","start":5426,"end":5674,"body":[{"type":"VariableDeclaration","start":5437,"end":5458,"declarations":[{"type":"VariableDeclarator","start":5441,"end":5457,"id":{"type":"Identifier","start":5441,"end":5452,"name":"indexString"},"init":{"type":"Literal","start":5455,"end":5457,"value":"","raw":"''"}}],"kind":"let"},{"type":"IfStatement","start":5468,"end":5617,"test":{"type":"BinaryExpression","start":5472,"end":5486,"left":{"type":"Identifier","start":5472,"end":5476,"name":"name"},"operator":"===","right":{"type":"Literal","start":5481,"end":5486,"value":"ICU","raw":"'ICU'"}},"consequent":{"type":"BlockStatement","start":5488,"end":5532,"body":[{"type":"ExpressionStatement","start":5503,"end":5521,"expression":{"type":"AssignmentExpression","start":5503,"end":5520,"operator":"=","left":{"type":"Identifier","start":5503,"end":5514,"name":"indexString"},"right":{"type":"Literal","start":5517,"end":5520,"value":"0","raw":"'0'"}}}]},"alternate":{"type":"BlockStatement","start":5547,"end":5617,"body":[{"type":"ExpressionStatement","start":5562,"end":5606,"expression":{"type":"AssignmentExpression","start":5562,"end":5605,"operator":"=","left":{"type":"Identifier","start":5562,"end":5573,"name":"indexString"},"right":{"type":"CallExpression","start":5576,"end":5605,"callee":{"type":"MemberExpression","start":5576,"end":5590,"object":{"type":"Identifier","start":5576,"end":5580,"name":"name"},"property":{"type":"Identifier","start":5581,"end":5590,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":5591,"end":5604,"object":{"type":"Literal","start":5591,"end":5597,"value":"ICU_","raw":"'ICU_'"},"property":{"type":"Identifier","start":5598,"end":5604,"name":"length"},"computed":false,"optional":false}],"optional":false}}}]}},{"type":"ReturnStatement","start":5627,"end":5667,"argument":{"type":"CallExpression","start":5634,"end":5666,"callee":{"type":"MemberExpression","start":5634,"end":5649,"object":{"type":"Identifier","start":5634,"end":5640,"name":"Number"},"property":{"type":"Identifier","start":5641,"end":5649,"name":"parseInt"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5650,"end":5661,"name":"indexString"},{"type":"Literal","start":5663,"end":5665,"value":10,"raw":"10"}],"optional":false}}]}}},{"type":"MethodDefinition","start":5918,"end":6563,"static":false,"computed":false,"key":{"type":"Identifier","start":5918,"end":5943,"name":"parseTagnameFromPhElement"},"kind":"method","value":{"type":"FunctionExpression","start":5943,"end":6563,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5944,"end":5953,"name":"phElement"}],"body":{"type":"BlockStatement","start":5955,"end":6563,"body":[{"type":"VariableDeclaration","start":5966,"end":6039,"declarations":[{"type":"VariableDeclarator","start":5972,"end":6038,"id":{"type":"Identifier","start":5972,"end":5981,"name":"exElement"},"init":{"type":"CallExpression","start":5984,"end":6038,"callee":{"type":"MemberExpression","start":5984,"end":6021,"object":{"type":"Identifier","start":5984,"end":5996,"name":"DOMUtilities"},"property":{"type":"Identifier","start":5997,"end":6021,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6022,"end":6031,"name":"phElement"},{"type":"Literal","start":6033,"end":6037,"value":"ex","raw":"'ex'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":6049,"end":6556,"test":{"type":"Identifier","start":6053,"end":6062,"name":"exElement"},"consequent":{"type":"BlockStatement","start":6064,"end":6503,"body":[{"type":"VariableDeclaration","start":6079,"end":6127,"declarations":[{"type":"VariableDeclarator","start":6085,"end":6126,"id":{"type":"Identifier","start":6085,"end":6090,"name":"value"},"init":{"type":"CallExpression","start":6093,"end":6126,"callee":{"type":"MemberExpression","start":6093,"end":6115,"object":{"type":"Identifier","start":6093,"end":6105,"name":"DOMUtilities"},"property":{"type":"Identifier","start":6106,"end":6115,"name":"getPCDATA"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6116,"end":6125,"name":"exElement"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":6141,"end":6274,"test":{"type":"LogicalExpression","start":6145,"end":6201,"left":{"type":"LogicalExpression","start":6145,"end":6177,"left":{"type":"UnaryExpression","start":6145,"end":6151,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":6146,"end":6151,"name":"value"}},"operator":"||","right":{"type":"UnaryExpression","start":6155,"end":6177,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":6156,"end":6177,"callee":{"type":"MemberExpression","start":6156,"end":6172,"object":{"type":"Identifier","start":6156,"end":6161,"name":"value"},"property":{"type":"Identifier","start":6162,"end":6172,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6173,"end":6176,"value":"<","raw":"'<'"}],"optional":false}}},"operator":"||","right":{"type":"UnaryExpression","start":6181,"end":6201,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":6182,"end":6201,"callee":{"type":"MemberExpression","start":6182,"end":6196,"object":{"type":"Identifier","start":6182,"end":6187,"name":"value"},"property":{"type":"Identifier","start":6188,"end":6196,"name":"endsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6197,"end":6200,"value":">","raw":"'>'"}],"optional":false}}},"consequent":{"type":"BlockStatement","start":6203,"end":6274,"body":[{"type":"ReturnStatement","start":6247,"end":6259,"argument":{"type":"Literal","start":6254,"end":6258,"value":null,"raw":"null"}}]},"alternate":null},{"type":"IfStatement","start":6288,"end":6492,"test":{"type":"BinaryExpression","start":6292,"end":6315,"left":{"type":"CallExpression","start":6292,"end":6307,"callee":{"type":"MemberExpression","start":6292,"end":6304,"object":{"type":"Identifier","start":6292,"end":6297,"name":"value"},"property":{"type":"Identifier","start":6298,"end":6304,"name":"charAt"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6305,"end":6306,"value":1,"raw":"1"}],"optional":false},"operator":"===","right":{"type":"Literal","start":6312,"end":6315,"value":"/","raw":"'/'"}},"consequent":{"type":"BlockStatement","start":6317,"end":6395,"body":[{"type":"ReturnStatement","start":6336,"end":6380,"argument":{"type":"CallExpression","start":6343,"end":6379,"callee":{"type":"MemberExpression","start":6343,"end":6358,"object":{"type":"Identifier","start":6343,"end":6348,"name":"value"},"property":{"type":"Identifier","start":6349,"end":6358,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6359,"end":6360,"value":2,"raw":"2"},{"type":"BinaryExpression","start":6362,"end":6378,"left":{"type":"MemberExpression","start":6362,"end":6374,"object":{"type":"Identifier","start":6362,"end":6367,"name":"value"},"property":{"type":"Identifier","start":6368,"end":6374,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":6377,"end":6378,"value":1,"raw":"1"}}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":6414,"end":6492,"body":[{"type":"ReturnStatement","start":6433,"end":6477,"argument":{"type":"CallExpression","start":6440,"end":6476,"callee":{"type":"MemberExpression","start":6440,"end":6455,"object":{"type":"Identifier","start":6440,"end":6445,"name":"value"},"property":{"type":"Identifier","start":6446,"end":6455,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6456,"end":6457,"value":1,"raw":"1"},{"type":"BinaryExpression","start":6459,"end":6475,"left":{"type":"MemberExpression","start":6459,"end":6471,"object":{"type":"Identifier","start":6459,"end":6464,"name":"value"},"property":{"type":"Identifier","start":6465,"end":6471,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":6474,"end":6475,"value":1,"raw":"1"}}],"optional":false}}]}}]},"alternate":{"type":"BlockStatement","start":6518,"end":6556,"body":[{"type":"ReturnStatement","start":6533,"end":6545,"argument":{"type":"Literal","start":6540,"end":6544,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":6569,"end":6847,"static":false,"computed":false,"key":{"type":"Identifier","start":6569,"end":6595,"name":"addXmlRepresentationToRoot"},"kind":"method","value":{"type":"FunctionExpression","start":6595,"end":6847,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6596,"end":6603,"name":"message"},{"type":"Identifier","start":6605,"end":6613,"name":"rootElem"}],"body":{"type":"BlockStatement","start":6615,"end":6847,"body":[{"type":"ExpressionStatement","start":6626,"end":6840,"expression":{"type":"CallExpression","start":6626,"end":6839,"callee":{"type":"MemberExpression","start":6626,"end":6649,"object":{"type":"CallExpression","start":6626,"end":6641,"callee":{"type":"MemberExpression","start":6626,"end":6639,"object":{"type":"Identifier","start":6626,"end":6633,"name":"message"},"property":{"type":"Identifier","start":6634,"end":6639,"name":"parts"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":6642,"end":6649,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":6650,"end":6838,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6651,"end":6655,"name":"part"}],"body":{"type":"BlockStatement","start":6660,"end":6838,"body":[{"type":"VariableDeclaration","start":6675,"end":6740,"declarations":[{"type":"VariableDeclarator","start":6681,"end":6739,"id":{"type":"Identifier","start":6681,"end":6686,"name":"child"},"init":{"type":"CallExpression","start":6689,"end":6739,"callee":{"type":"MemberExpression","start":6689,"end":6723,"object":{"type":"ThisExpression","start":6689,"end":6693},"property":{"type":"Identifier","start":6694,"end":6723,"name":"createXmlRepresentationOfPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6724,"end":6728,"name":"part"},{"type":"Identifier","start":6730,"end":6738,"name":"rootElem"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":6754,"end":6827,"test":{"type":"Identifier","start":6758,"end":6763,"name":"child"},"consequent":{"type":"BlockStatement","start":6765,"end":6827,"body":[{"type":"ExpressionStatement","start":6784,"end":6812,"expression":{"type":"CallExpression","start":6784,"end":6811,"callee":{"type":"MemberExpression","start":6784,"end":6804,"object":{"type":"Identifier","start":6784,"end":6792,"name":"rootElem"},"property":{"type":"Identifier","start":6793,"end":6804,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6805,"end":6810,"name":"child"}],"optional":false}}]},"alternate":null}]}}],"optional":false}}]}}},{"type":"MethodDefinition","start":6853,"end":7761,"static":false,"computed":false,"key":{"type":"Identifier","start":6853,"end":6882,"name":"createXmlRepresentationOfPart"},"kind":"method","value":{"type":"FunctionExpression","start":6882,"end":7761,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6883,"end":6887,"name":"part"},{"type":"Identifier","start":6889,"end":6897,"name":"rootElem"}],"body":{"type":"BlockStatement","start":6899,"end":7761,"body":[{"type":"SwitchStatement","start":6910,"end":7754,"discriminant":{"type":"MemberExpression","start":6918,"end":6927,"object":{"type":"Identifier","start":6918,"end":6922,"name":"part"},"property":{"type":"Identifier","start":6923,"end":6927,"name":"type"},"computed":false,"optional":false},"cases":[{"type":"SwitchCase","start":6944,"end":7056,"consequent":[{"type":"ReturnStatement","start":6994,"end":7056,"argument":{"type":"CallExpression","start":7001,"end":7055,"callee":{"type":"MemberExpression","start":7001,"end":7039,"object":{"type":"ThisExpression","start":7001,"end":7005},"property":{"type":"Identifier","start":7006,"end":7039,"name":"createXmlRepresentationOfTextPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7040,"end":7044,"name":"part"},{"type":"Identifier","start":7046,"end":7054,"name":"rootElem"}],"optional":false}}],"test":{"type":"MemberExpression","start":6949,"end":6975,"object":{"type":"Identifier","start":6949,"end":6970,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":6971,"end":6975,"name":"TEXT"},"computed":false,"optional":false}},{"type":"SwitchCase","start":7070,"end":7191,"consequent":[{"type":"ReturnStatement","start":7125,"end":7191,"argument":{"type":"CallExpression","start":7132,"end":7190,"callee":{"type":"MemberExpression","start":7132,"end":7174,"object":{"type":"ThisExpression","start":7132,"end":7136},"property":{"type":"Identifier","start":7137,"end":7174,"name":"createXmlRepresentationOfStartTagPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7175,"end":7179,"name":"part"},{"type":"Identifier","start":7181,"end":7189,"name":"rootElem"}],"optional":false}}],"test":{"type":"MemberExpression","start":7075,"end":7106,"object":{"type":"Identifier","start":7075,"end":7096,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":7097,"end":7106,"name":"START_TAG"},"computed":false,"optional":false}},{"type":"SwitchCase","start":7205,"end":7322,"consequent":[{"type":"ReturnStatement","start":7258,"end":7322,"argument":{"type":"CallExpression","start":7265,"end":7321,"callee":{"type":"MemberExpression","start":7265,"end":7305,"object":{"type":"ThisExpression","start":7265,"end":7269},"property":{"type":"Identifier","start":7270,"end":7305,"name":"createXmlRepresentationOfEndTagPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7306,"end":7310,"name":"part"},{"type":"Identifier","start":7312,"end":7320,"name":"rootElem"}],"optional":false}}],"test":{"type":"MemberExpression","start":7210,"end":7239,"object":{"type":"Identifier","start":7210,"end":7231,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":7232,"end":7239,"name":"END_TAG"},"computed":false,"optional":false}},{"type":"SwitchCase","start":7336,"end":7457,"consequent":[{"type":"ReturnStatement","start":7391,"end":7457,"argument":{"type":"CallExpression","start":7398,"end":7456,"callee":{"type":"MemberExpression","start":7398,"end":7440,"object":{"type":"ThisExpression","start":7398,"end":7402},"property":{"type":"Identifier","start":7403,"end":7440,"name":"createXmlRepresentationOfEmptyTagPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7441,"end":7445,"name":"part"},{"type":"Identifier","start":7447,"end":7455,"name":"rootElem"}],"optional":false}}],"test":{"type":"MemberExpression","start":7341,"end":7372,"object":{"type":"Identifier","start":7341,"end":7362,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":7363,"end":7372,"name":"EMPTY_TAG"},"computed":false,"optional":false}},{"type":"SwitchCase","start":7471,"end":7597,"consequent":[{"type":"ReturnStatement","start":7528,"end":7597,"argument":{"type":"CallExpression","start":7535,"end":7596,"callee":{"type":"MemberExpression","start":7535,"end":7580,"object":{"type":"ThisExpression","start":7535,"end":7539},"property":{"type":"Identifier","start":7540,"end":7580,"name":"createXmlRepresentationOfPlaceholderPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7581,"end":7585,"name":"part"},{"type":"Identifier","start":7587,"end":7595,"name":"rootElem"}],"optional":false}}],"test":{"type":"MemberExpression","start":7476,"end":7509,"object":{"type":"Identifier","start":7476,"end":7497,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":7498,"end":7509,"name":"PLACEHOLDER"},"computed":false,"optional":false}},{"type":"SwitchCase","start":7611,"end":7743,"consequent":[{"type":"ReturnStatement","start":7672,"end":7743,"argument":{"type":"CallExpression","start":7679,"end":7742,"callee":{"type":"MemberExpression","start":7679,"end":7726,"object":{"type":"ThisExpression","start":7679,"end":7683},"property":{"type":"Identifier","start":7684,"end":7726,"name":"createXmlRepresentationOfICUMessageRefPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7727,"end":7731,"name":"part"},{"type":"Identifier","start":7733,"end":7741,"name":"rootElem"}],"optional":false}}],"test":{"type":"MemberExpression","start":7616,"end":7653,"object":{"type":"Identifier","start":7616,"end":7637,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":7638,"end":7653,"name":"ICU_MESSAGE_REF"},"computed":false,"optional":false}}]}]}}},{"type":"MethodDefinition","start":7964,"end":8516,"static":false,"computed":false,"key":{"type":"Identifier","start":7964,"end":8001,"name":"createXmlRepresentationOfStartTagPart"},"kind":"method","value":{"type":"FunctionExpression","start":8001,"end":8516,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8002,"end":8006,"name":"part"},{"type":"Identifier","start":8008,"end":8016,"name":"rootElem"}],"body":{"type":"BlockStatement","start":8018,"end":8516,"body":[{"type":"VariableDeclaration","start":8029,"end":8087,"declarations":[{"type":"VariableDeclarator","start":8035,"end":8086,"id":{"type":"Identifier","start":8035,"end":8041,"name":"phElem"},"init":{"type":"CallExpression","start":8044,"end":8086,"callee":{"type":"MemberExpression","start":8044,"end":8080,"object":{"type":"MemberExpression","start":8044,"end":8066,"object":{"type":"Identifier","start":8044,"end":8052,"name":"rootElem"},"property":{"type":"Identifier","start":8053,"end":8066,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8067,"end":8080,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8081,"end":8085,"value":"ph","raw":"'ph'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":8097,"end":8133,"declarations":[{"type":"VariableDeclarator","start":8103,"end":8132,"id":{"type":"Identifier","start":8103,"end":8113,"name":"tagMapping"},"init":{"type":"NewExpression","start":8116,"end":8132,"callee":{"type":"Identifier","start":8120,"end":8130,"name":"TagMapping"},"arguments":[]}}],"kind":"const"},{"type":"VariableDeclaration","start":8143,"end":8234,"declarations":[{"type":"VariableDeclarator","start":8149,"end":8233,"id":{"type":"Identifier","start":8149,"end":8159,"name":"nameAttrib"},"init":{"type":"CallExpression","start":8162,"end":8233,"callee":{"type":"MemberExpression","start":8162,"end":8199,"object":{"type":"Identifier","start":8162,"end":8172,"name":"tagMapping"},"property":{"type":"Identifier","start":8173,"end":8199,"name":"getStartTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":8200,"end":8214,"callee":{"type":"MemberExpression","start":8200,"end":8212,"object":{"type":"Identifier","start":8200,"end":8204,"name":"part"},"property":{"type":"Identifier","start":8205,"end":8212,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"CallExpression","start":8216,"end":8232,"callee":{"type":"MemberExpression","start":8216,"end":8230,"object":{"type":"Identifier","start":8216,"end":8220,"name":"part"},"property":{"type":"Identifier","start":8221,"end":8230,"name":"idCounter"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":8244,"end":8284,"expression":{"type":"CallExpression","start":8244,"end":8283,"callee":{"type":"MemberExpression","start":8244,"end":8263,"object":{"type":"Identifier","start":8244,"end":8250,"name":"phElem"},"property":{"type":"Identifier","start":8251,"end":8263,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8264,"end":8270,"value":"name","raw":"'name'"},{"type":"Identifier","start":8272,"end":8282,"name":"nameAttrib"}],"optional":false}},{"type":"VariableDeclaration","start":8294,"end":8352,"declarations":[{"type":"VariableDeclarator","start":8300,"end":8351,"id":{"type":"Identifier","start":8300,"end":8306,"name":"exElem"},"init":{"type":"CallExpression","start":8309,"end":8351,"callee":{"type":"MemberExpression","start":8309,"end":8345,"object":{"type":"MemberExpression","start":8309,"end":8331,"object":{"type":"Identifier","start":8309,"end":8317,"name":"rootElem"},"property":{"type":"Identifier","start":8318,"end":8331,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8332,"end":8345,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8346,"end":8350,"value":"ex","raw":"'ex'"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":8362,"end":8448,"expression":{"type":"CallExpression","start":8362,"end":8447,"callee":{"type":"MemberExpression","start":8362,"end":8380,"object":{"type":"Identifier","start":8362,"end":8368,"name":"exElem"},"property":{"type":"Identifier","start":8369,"end":8380,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":8381,"end":8446,"callee":{"type":"MemberExpression","start":8381,"end":8418,"object":{"type":"MemberExpression","start":8381,"end":8403,"object":{"type":"Identifier","start":8381,"end":8389,"name":"rootElem"},"property":{"type":"Identifier","start":8390,"end":8403,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8404,"end":8418,"name":"createTextNode"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":8419,"end":8445,"left":{"type":"BinaryExpression","start":8419,"end":8439,"left":{"type":"Literal","start":8419,"end":8422,"value":"<","raw":"'<'"},"operator":"+","right":{"type":"CallExpression","start":8425,"end":8439,"callee":{"type":"MemberExpression","start":8425,"end":8437,"object":{"type":"Identifier","start":8425,"end":8429,"name":"part"},"property":{"type":"Identifier","start":8430,"end":8437,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"+","right":{"type":"Literal","start":8442,"end":8445,"value":">","raw":"'>'"}}],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":8458,"end":8485,"expression":{"type":"CallExpression","start":8458,"end":8484,"callee":{"type":"MemberExpression","start":8458,"end":8476,"object":{"type":"Identifier","start":8458,"end":8464,"name":"phElem"},"property":{"type":"Identifier","start":8465,"end":8476,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8477,"end":8483,"name":"exElem"}],"optional":false}},{"type":"ReturnStatement","start":8495,"end":8509,"argument":{"type":"Identifier","start":8502,"end":8508,"name":"phElem"}}]}}},{"type":"MethodDefinition","start":8717,"end":9250,"static":false,"computed":false,"key":{"type":"Identifier","start":8717,"end":8752,"name":"createXmlRepresentationOfEndTagPart"},"kind":"method","value":{"type":"FunctionExpression","start":8752,"end":9250,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8753,"end":8757,"name":"part"},{"type":"Identifier","start":8759,"end":8767,"name":"rootElem"}],"body":{"type":"BlockStatement","start":8769,"end":9250,"body":[{"type":"VariableDeclaration","start":8780,"end":8838,"declarations":[{"type":"VariableDeclarator","start":8786,"end":8837,"id":{"type":"Identifier","start":8786,"end":8792,"name":"phElem"},"init":{"type":"CallExpression","start":8795,"end":8837,"callee":{"type":"MemberExpression","start":8795,"end":8831,"object":{"type":"MemberExpression","start":8795,"end":8817,"object":{"type":"Identifier","start":8795,"end":8803,"name":"rootElem"},"property":{"type":"Identifier","start":8804,"end":8817,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8818,"end":8831,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8832,"end":8836,"value":"ph","raw":"'ph'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":8848,"end":8884,"declarations":[{"type":"VariableDeclarator","start":8854,"end":8883,"id":{"type":"Identifier","start":8854,"end":8864,"name":"tagMapping"},"init":{"type":"NewExpression","start":8867,"end":8883,"callee":{"type":"Identifier","start":8871,"end":8881,"name":"TagMapping"},"arguments":[]}}],"kind":"const"},{"type":"VariableDeclaration","start":8894,"end":8967,"declarations":[{"type":"VariableDeclarator","start":8900,"end":8966,"id":{"type":"Identifier","start":8900,"end":8910,"name":"nameAttrib"},"init":{"type":"CallExpression","start":8913,"end":8966,"callee":{"type":"MemberExpression","start":8913,"end":8950,"object":{"type":"Identifier","start":8913,"end":8923,"name":"tagMapping"},"property":{"type":"Identifier","start":8924,"end":8950,"name":"getCloseTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":8951,"end":8965,"callee":{"type":"MemberExpression","start":8951,"end":8963,"object":{"type":"Identifier","start":8951,"end":8955,"name":"part"},"property":{"type":"Identifier","start":8956,"end":8963,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":8977,"end":9017,"expression":{"type":"CallExpression","start":8977,"end":9016,"callee":{"type":"MemberExpression","start":8977,"end":8996,"object":{"type":"Identifier","start":8977,"end":8983,"name":"phElem"},"property":{"type":"Identifier","start":8984,"end":8996,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8997,"end":9003,"value":"name","raw":"'name'"},{"type":"Identifier","start":9005,"end":9015,"name":"nameAttrib"}],"optional":false}},{"type":"VariableDeclaration","start":9027,"end":9085,"declarations":[{"type":"VariableDeclarator","start":9033,"end":9084,"id":{"type":"Identifier","start":9033,"end":9039,"name":"exElem"},"init":{"type":"CallExpression","start":9042,"end":9084,"callee":{"type":"MemberExpression","start":9042,"end":9078,"object":{"type":"MemberExpression","start":9042,"end":9064,"object":{"type":"Identifier","start":9042,"end":9050,"name":"rootElem"},"property":{"type":"Identifier","start":9051,"end":9064,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9065,"end":9078,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9079,"end":9083,"value":"ex","raw":"'ex'"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":9095,"end":9182,"expression":{"type":"CallExpression","start":9095,"end":9181,"callee":{"type":"MemberExpression","start":9095,"end":9113,"object":{"type":"Identifier","start":9095,"end":9101,"name":"exElem"},"property":{"type":"Identifier","start":9102,"end":9113,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9114,"end":9180,"callee":{"type":"MemberExpression","start":9114,"end":9151,"object":{"type":"MemberExpression","start":9114,"end":9136,"object":{"type":"Identifier","start":9114,"end":9122,"name":"rootElem"},"property":{"type":"Identifier","start":9123,"end":9136,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9137,"end":9151,"name":"createTextNode"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":9152,"end":9179,"left":{"type":"BinaryExpression","start":9152,"end":9173,"left":{"type":"Literal","start":9152,"end":9156,"value":"</","raw":"'</'"},"operator":"+","right":{"type":"CallExpression","start":9159,"end":9173,"callee":{"type":"MemberExpression","start":9159,"end":9171,"object":{"type":"Identifier","start":9159,"end":9163,"name":"part"},"property":{"type":"Identifier","start":9164,"end":9171,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"+","right":{"type":"Literal","start":9176,"end":9179,"value":">","raw":"'>'"}}],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":9192,"end":9219,"expression":{"type":"CallExpression","start":9192,"end":9218,"callee":{"type":"MemberExpression","start":9192,"end":9210,"object":{"type":"Identifier","start":9192,"end":9198,"name":"phElem"},"property":{"type":"Identifier","start":9199,"end":9210,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9211,"end":9217,"name":"exElem"}],"optional":false}},{"type":"ReturnStatement","start":9229,"end":9243,"argument":{"type":"Identifier","start":9236,"end":9242,"name":"phElem"}}]}}},{"type":"MethodDefinition","start":9453,"end":10005,"static":false,"computed":false,"key":{"type":"Identifier","start":9453,"end":9490,"name":"createXmlRepresentationOfEmptyTagPart"},"kind":"method","value":{"type":"FunctionExpression","start":9490,"end":10005,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9491,"end":9495,"name":"part"},{"type":"Identifier","start":9497,"end":9505,"name":"rootElem"}],"body":{"type":"BlockStatement","start":9507,"end":10005,"body":[{"type":"VariableDeclaration","start":9518,"end":9576,"declarations":[{"type":"VariableDeclarator","start":9524,"end":9575,"id":{"type":"Identifier","start":9524,"end":9530,"name":"phElem"},"init":{"type":"CallExpression","start":9533,"end":9575,"callee":{"type":"MemberExpression","start":9533,"end":9569,"object":{"type":"MemberExpression","start":9533,"end":9555,"object":{"type":"Identifier","start":9533,"end":9541,"name":"rootElem"},"property":{"type":"Identifier","start":9542,"end":9555,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9556,"end":9569,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9570,"end":9574,"value":"ph","raw":"'ph'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":9586,"end":9622,"declarations":[{"type":"VariableDeclarator","start":9592,"end":9621,"id":{"type":"Identifier","start":9592,"end":9602,"name":"tagMapping"},"init":{"type":"NewExpression","start":9605,"end":9621,"callee":{"type":"Identifier","start":9609,"end":9619,"name":"TagMapping"},"arguments":[]}}],"kind":"const"},{"type":"VariableDeclaration","start":9632,"end":9723,"declarations":[{"type":"VariableDeclarator","start":9638,"end":9722,"id":{"type":"Identifier","start":9638,"end":9648,"name":"nameAttrib"},"init":{"type":"CallExpression","start":9651,"end":9722,"callee":{"type":"MemberExpression","start":9651,"end":9688,"object":{"type":"Identifier","start":9651,"end":9661,"name":"tagMapping"},"property":{"type":"Identifier","start":9662,"end":9688,"name":"getEmptyTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9689,"end":9703,"callee":{"type":"MemberExpression","start":9689,"end":9701,"object":{"type":"Identifier","start":9689,"end":9693,"name":"part"},"property":{"type":"Identifier","start":9694,"end":9701,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"CallExpression","start":9705,"end":9721,"callee":{"type":"MemberExpression","start":9705,"end":9719,"object":{"type":"Identifier","start":9705,"end":9709,"name":"part"},"property":{"type":"Identifier","start":9710,"end":9719,"name":"idCounter"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":9733,"end":9773,"expression":{"type":"CallExpression","start":9733,"end":9772,"callee":{"type":"MemberExpression","start":9733,"end":9752,"object":{"type":"Identifier","start":9733,"end":9739,"name":"phElem"},"property":{"type":"Identifier","start":9740,"end":9752,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9753,"end":9759,"value":"name","raw":"'name'"},{"type":"Identifier","start":9761,"end":9771,"name":"nameAttrib"}],"optional":false}},{"type":"VariableDeclaration","start":9783,"end":9841,"declarations":[{"type":"VariableDeclarator","start":9789,"end":9840,"id":{"type":"Identifier","start":9789,"end":9795,"name":"exElem"},"init":{"type":"CallExpression","start":9798,"end":9840,"callee":{"type":"MemberExpression","start":9798,"end":9834,"object":{"type":"MemberExpression","start":9798,"end":9820,"object":{"type":"Identifier","start":9798,"end":9806,"name":"rootElem"},"property":{"type":"Identifier","start":9807,"end":9820,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9821,"end":9834,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9835,"end":9839,"value":"ex","raw":"'ex'"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":9851,"end":9937,"expression":{"type":"CallExpression","start":9851,"end":9936,"callee":{"type":"MemberExpression","start":9851,"end":9869,"object":{"type":"Identifier","start":9851,"end":9857,"name":"exElem"},"property":{"type":"Identifier","start":9858,"end":9869,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9870,"end":9935,"callee":{"type":"MemberExpression","start":9870,"end":9907,"object":{"type":"MemberExpression","start":9870,"end":9892,"object":{"type":"Identifier","start":9870,"end":9878,"name":"rootElem"},"property":{"type":"Identifier","start":9879,"end":9892,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9893,"end":9907,"name":"createTextNode"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":9908,"end":9934,"left":{"type":"BinaryExpression","start":9908,"end":9928,"left":{"type":"Literal","start":9908,"end":9911,"value":"<","raw":"'<'"},"operator":"+","right":{"type":"CallExpression","start":9914,"end":9928,"callee":{"type":"MemberExpression","start":9914,"end":9926,"object":{"type":"Identifier","start":9914,"end":9918,"name":"part"},"property":{"type":"Identifier","start":9919,"end":9926,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false}},"operator":"+","right":{"type":"Literal","start":9931,"end":9934,"value":">","raw":"'>'"}}],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":9947,"end":9974,"expression":{"type":"CallExpression","start":9947,"end":9973,"callee":{"type":"MemberExpression","start":9947,"end":9965,"object":{"type":"Identifier","start":9947,"end":9953,"name":"phElem"},"property":{"type":"Identifier","start":9954,"end":9965,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9966,"end":9972,"name":"exElem"}],"optional":false}},{"type":"ReturnStatement","start":9984,"end":9998,"argument":{"type":"Identifier","start":9991,"end":9997,"name":"phElem"}}]}}},{"type":"MethodDefinition","start":10210,"end":10761,"static":false,"computed":false,"key":{"type":"Identifier","start":10210,"end":10250,"name":"createXmlRepresentationOfPlaceholderPart"},"kind":"method","value":{"type":"FunctionExpression","start":10250,"end":10761,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":10251,"end":10255,"name":"part"},{"type":"Identifier","start":10257,"end":10265,"name":"rootElem"}],"body":{"type":"BlockStatement","start":10267,"end":10761,"body":[{"type":"VariableDeclaration","start":10278,"end":10336,"declarations":[{"type":"VariableDeclarator","start":10284,"end":10335,"id":{"type":"Identifier","start":10284,"end":10290,"name":"phElem"},"init":{"type":"CallExpression","start":10293,"end":10335,"callee":{"type":"MemberExpression","start":10293,"end":10329,"object":{"type":"MemberExpression","start":10293,"end":10315,"object":{"type":"Identifier","start":10293,"end":10301,"name":"rootElem"},"property":{"type":"Identifier","start":10302,"end":10315,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10316,"end":10329,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10330,"end":10334,"value":"ph","raw":"'ph'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":10346,"end":10379,"declarations":[{"type":"VariableDeclarator","start":10350,"end":10378,"id":{"type":"Identifier","start":10350,"end":10360,"name":"nameAttrib"},"init":{"type":"Literal","start":10363,"end":10378,"value":"INTERPOLATION","raw":"'INTERPOLATION'"}}],"kind":"let"},{"type":"IfStatement","start":10389,"end":10495,"test":{"type":"BinaryExpression","start":10393,"end":10409,"left":{"type":"CallExpression","start":10393,"end":10405,"callee":{"type":"MemberExpression","start":10393,"end":10403,"object":{"type":"Identifier","start":10393,"end":10397,"name":"part"},"property":{"type":"Identifier","start":10398,"end":10403,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":">","right":{"type":"Literal","start":10408,"end":10409,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":10411,"end":10495,"body":[{"type":"ExpressionStatement","start":10426,"end":10484,"expression":{"type":"AssignmentExpression","start":10426,"end":10483,"operator":"=","left":{"type":"Identifier","start":10426,"end":10436,"name":"nameAttrib"},"right":{"type":"BinaryExpression","start":10439,"end":10483,"left":{"type":"Literal","start":10439,"end":10455,"value":"INTERPOLATION_","raw":"'INTERPOLATION_'"},"operator":"+","right":{"type":"CallExpression","start":10458,"end":10483,"callee":{"type":"MemberExpression","start":10458,"end":10479,"object":{"type":"CallExpression","start":10458,"end":10470,"callee":{"type":"MemberExpression","start":10458,"end":10468,"object":{"type":"Identifier","start":10458,"end":10462,"name":"part"},"property":{"type":"Identifier","start":10463,"end":10468,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":10471,"end":10479,"name":"toString"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10480,"end":10482,"value":10,"raw":"10"}],"optional":false}}}}]},"alternate":null},{"type":"ExpressionStatement","start":10505,"end":10545,"expression":{"type":"CallExpression","start":10505,"end":10544,"callee":{"type":"MemberExpression","start":10505,"end":10524,"object":{"type":"Identifier","start":10505,"end":10511,"name":"phElem"},"property":{"type":"Identifier","start":10512,"end":10524,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10525,"end":10531,"value":"name","raw":"'name'"},{"type":"Identifier","start":10533,"end":10543,"name":"nameAttrib"}],"optional":false}},{"type":"VariableDeclaration","start":10555,"end":10613,"declarations":[{"type":"VariableDeclarator","start":10561,"end":10612,"id":{"type":"Identifier","start":10561,"end":10567,"name":"exElem"},"init":{"type":"CallExpression","start":10570,"end":10612,"callee":{"type":"MemberExpression","start":10570,"end":10606,"object":{"type":"MemberExpression","start":10570,"end":10592,"object":{"type":"Identifier","start":10570,"end":10578,"name":"rootElem"},"property":{"type":"Identifier","start":10579,"end":10592,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10593,"end":10606,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10607,"end":10611,"value":"ex","raw":"'ex'"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":10623,"end":10693,"expression":{"type":"CallExpression","start":10623,"end":10692,"callee":{"type":"MemberExpression","start":10623,"end":10641,"object":{"type":"Identifier","start":10623,"end":10629,"name":"exElem"},"property":{"type":"Identifier","start":10630,"end":10641,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":10642,"end":10691,"callee":{"type":"MemberExpression","start":10642,"end":10679,"object":{"type":"MemberExpression","start":10642,"end":10664,"object":{"type":"Identifier","start":10642,"end":10650,"name":"rootElem"},"property":{"type":"Identifier","start":10651,"end":10664,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10665,"end":10679,"name":"createTextNode"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10680,"end":10690,"name":"nameAttrib"}],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":10703,"end":10730,"expression":{"type":"CallExpression","start":10703,"end":10729,"callee":{"type":"MemberExpression","start":10703,"end":10721,"object":{"type":"Identifier","start":10703,"end":10709,"name":"phElem"},"property":{"type":"Identifier","start":10710,"end":10721,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10722,"end":10728,"name":"exElem"}],"optional":false}},{"type":"ReturnStatement","start":10740,"end":10754,"argument":{"type":"Identifier","start":10747,"end":10753,"name":"phElem"}}]}}},{"type":"MethodDefinition","start":10901,"end":11434,"static":false,"computed":false,"key":{"type":"Identifier","start":10901,"end":10943,"name":"createXmlRepresentationOfICUMessageRefPart"},"kind":"method","value":{"type":"FunctionExpression","start":10943,"end":11434,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":10944,"end":10948,"name":"part"},{"type":"Identifier","start":10950,"end":10958,"name":"rootElem"}],"body":{"type":"BlockStatement","start":10960,"end":11434,"body":[{"type":"VariableDeclaration","start":10971,"end":11029,"declarations":[{"type":"VariableDeclarator","start":10977,"end":11028,"id":{"type":"Identifier","start":10977,"end":10983,"name":"phElem"},"init":{"type":"CallExpression","start":10986,"end":11028,"callee":{"type":"MemberExpression","start":10986,"end":11022,"object":{"type":"MemberExpression","start":10986,"end":11008,"object":{"type":"Identifier","start":10986,"end":10994,"name":"rootElem"},"property":{"type":"Identifier","start":10995,"end":11008,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11009,"end":11022,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11023,"end":11027,"value":"ph","raw":"'ph'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":11039,"end":11062,"declarations":[{"type":"VariableDeclarator","start":11043,"end":11061,"id":{"type":"Identifier","start":11043,"end":11053,"name":"nameAttrib"},"init":{"type":"Literal","start":11056,"end":11061,"value":"ICU","raw":"'ICU'"}}],"kind":"let"},{"type":"IfStatement","start":11072,"end":11168,"test":{"type":"BinaryExpression","start":11076,"end":11092,"left":{"type":"CallExpression","start":11076,"end":11088,"callee":{"type":"MemberExpression","start":11076,"end":11086,"object":{"type":"Identifier","start":11076,"end":11080,"name":"part"},"property":{"type":"Identifier","start":11081,"end":11086,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":">","right":{"type":"Literal","start":11091,"end":11092,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":11094,"end":11168,"body":[{"type":"ExpressionStatement","start":11109,"end":11157,"expression":{"type":"AssignmentExpression","start":11109,"end":11156,"operator":"=","left":{"type":"Identifier","start":11109,"end":11119,"name":"nameAttrib"},"right":{"type":"BinaryExpression","start":11122,"end":11156,"left":{"type":"Literal","start":11122,"end":11128,"value":"ICU_","raw":"'ICU_'"},"operator":"+","right":{"type":"CallExpression","start":11131,"end":11156,"callee":{"type":"MemberExpression","start":11131,"end":11152,"object":{"type":"CallExpression","start":11131,"end":11143,"callee":{"type":"MemberExpression","start":11131,"end":11141,"object":{"type":"Identifier","start":11131,"end":11135,"name":"part"},"property":{"type":"Identifier","start":11136,"end":11141,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":11144,"end":11152,"name":"toString"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11153,"end":11155,"value":10,"raw":"10"}],"optional":false}}}}]},"alternate":null},{"type":"ExpressionStatement","start":11178,"end":11218,"expression":{"type":"CallExpression","start":11178,"end":11217,"callee":{"type":"MemberExpression","start":11178,"end":11197,"object":{"type":"Identifier","start":11178,"end":11184,"name":"phElem"},"property":{"type":"Identifier","start":11185,"end":11197,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11198,"end":11204,"value":"name","raw":"'name'"},{"type":"Identifier","start":11206,"end":11216,"name":"nameAttrib"}],"optional":false}},{"type":"VariableDeclaration","start":11228,"end":11286,"declarations":[{"type":"VariableDeclarator","start":11234,"end":11285,"id":{"type":"Identifier","start":11234,"end":11240,"name":"exElem"},"init":{"type":"CallExpression","start":11243,"end":11285,"callee":{"type":"MemberExpression","start":11243,"end":11279,"object":{"type":"MemberExpression","start":11243,"end":11265,"object":{"type":"Identifier","start":11243,"end":11251,"name":"rootElem"},"property":{"type":"Identifier","start":11252,"end":11265,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11266,"end":11279,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11280,"end":11284,"value":"ex","raw":"'ex'"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":11296,"end":11366,"expression":{"type":"CallExpression","start":11296,"end":11365,"callee":{"type":"MemberExpression","start":11296,"end":11314,"object":{"type":"Identifier","start":11296,"end":11302,"name":"exElem"},"property":{"type":"Identifier","start":11303,"end":11314,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":11315,"end":11364,"callee":{"type":"MemberExpression","start":11315,"end":11352,"object":{"type":"MemberExpression","start":11315,"end":11337,"object":{"type":"Identifier","start":11315,"end":11323,"name":"rootElem"},"property":{"type":"Identifier","start":11324,"end":11337,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11338,"end":11352,"name":"createTextNode"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11353,"end":11363,"name":"nameAttrib"}],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":11376,"end":11403,"expression":{"type":"CallExpression","start":11376,"end":11402,"callee":{"type":"MemberExpression","start":11376,"end":11394,"object":{"type":"Identifier","start":11376,"end":11382,"name":"phElem"},"property":{"type":"Identifier","start":11383,"end":11394,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11395,"end":11401,"name":"exElem"}],"optional":false}},{"type":"ReturnStatement","start":11413,"end":11427,"argument":{"type":"Identifier","start":11420,"end":11426,"name":"phElem"}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":11439,"end":39401}]},"code":"import { AbstractMessageParser } from './abstract-message-parser';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { TagMapping } from './tag-mapping';\r\nimport { ParsedMessagePartType } from './parsed-message-part';\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XMB\r\n */\r\nexport class XmbMessageParser extends AbstractMessageParser {\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    processStartElement(elementNode, message) {\r\n        const tagName = elementNode.tagName;\r\n        if (tagName === 'ph') {\r\n            // There are 4 different usages of ph element:\r\n            // 1. placeholders are like <ph name=\"INTERPOLATION\"><ex>INTERPOLATION</ex></ph>\r\n            // or <ph name=\"INTERPOLATION_1\"><ex>INTERPOLATION_1</ex></ph>\r\n            // 2. start tags:\r\n            // <ph name=\"START_LINK\"><ex>&lt;a&gt;</ex></ph>\r\n            // 3. empty tags:\r\n            // <ph name=\"TAG_IMG\"><ex>&lt;img&gt;</ex></ph>\r\n            // 4. ICU:\r\n            // <ph name=\"ICU\"><ex>ICU</ex></ph>\r\n            const name = elementNode.getAttribute('name');\r\n            if (!name) {\r\n                return true; // should not happen\r\n            }\r\n            if (name.startsWith('INTERPOLATION')) {\r\n                const index = this.parsePlaceholderIndexFromName(name);\r\n                message.addPlaceholder(index, null);\r\n                return false; // ignore children\r\n            }\r\n            else if (name.startsWith('START_')) {\r\n                const tag = this.parseTagnameFromPhElement(elementNode);\r\n                const idcounter = this.parseIdCountFromName(name);\r\n                if (tag) {\r\n                    message.addStartTag(tag, idcounter);\r\n                }\r\n                return false; // ignore children\r\n            }\r\n            else if (name.startsWith('CLOSE_')) {\r\n                const tag = this.parseTagnameFromPhElement(elementNode);\r\n                if (tag) {\r\n                    message.addEndTag(tag);\r\n                }\r\n                return false; // ignore children\r\n            }\r\n            else if (new TagMapping().isEmptyTagPlaceholderName(name)) {\r\n                const emptyTagName = new TagMapping().getTagnameFromEmptyTagPlaceholderName(name);\r\n                const idcounter = this.parseIdCountFromName(name);\r\n                message.addEmptyTag(emptyTagName, idcounter);\r\n                return false; // ignore children\r\n            }\r\n            else if (name.startsWith('ICU')) {\r\n                const index = this.parseICUMessageIndexFromName(name);\r\n                message.addICUMessageRef(index, null);\r\n                return false; // ignore children\r\n            }\r\n        }\r\n        else if (tagName === 'source') {\r\n            // ignore source\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param node node\r\n     * @return message or null, if it is no ICU Message.\r\n     */\r\n    getICUMessageText(node) {\r\n        const children = node.childNodes;\r\n        if (children.length === 0) {\r\n            return null;\r\n        }\r\n        let firstChild = null;\r\n        // find first child that is no source element.\r\n        let i;\r\n        for (i = 0; i < children.length; i++) {\r\n            const child = children.item(i);\r\n            if (child.nodeType !== child.ELEMENT_NODE || child.tagName !== 'source') {\r\n                firstChild = child;\r\n                break;\r\n            }\r\n        }\r\n        if (firstChild && firstChild.nodeType === firstChild.TEXT_NODE) {\r\n            if (this.isICUMessageStart(firstChild.textContent)) {\r\n                const messageText = DOMUtilities.getXMLContent(node);\r\n                if (i > 0) {\r\n                    // drop <source> elements\r\n                    const reSource = new RegExp('<source[^>]*>.*</source>', 'g');\r\n                    return messageText.replace(reSource, '');\r\n                }\r\n                else {\r\n                    return messageText;\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    processEndElement(elementNode, message) {\r\n    }\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param name name\r\n     * @return id as number\r\n     */\r\n    parsePlaceholderIndexFromName(name) {\r\n        let indexString = '';\r\n        if (name === 'INTERPOLATION') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = name.substring('INTERPOLATION_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    }\r\n    /**\r\n     * Parse id attribute of x element as ICU message ref index.\r\n     * id can be \"ICU\" or \"ICU_n\"\r\n     * @param name name\r\n     * @return id as number\r\n     */\r\n    parseICUMessageIndexFromName(name) {\r\n        let indexString = '';\r\n        if (name === 'ICU') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = name.substring('ICU_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    }\r\n    /**\r\n     * Parse the tag name from a ph element.\r\n     * It contained in the <ex> subelements value and enclosed in <>.\r\n     * Example: <ph name=\"START_BOLD_TEXT\"><ex>&lt;b&gt;</ex></ph>\r\n     * @param phElement phElement\r\n     */\r\n    parseTagnameFromPhElement(phElement) {\r\n        const exElement = DOMUtilities.getFirstElementByTagName(phElement, 'ex');\r\n        if (exElement) {\r\n            const value = DOMUtilities.getPCDATA(exElement);\r\n            if (!value || !value.startsWith('<') || !value.endsWith('>')) {\r\n                // oops\r\n                return null;\r\n            }\r\n            if (value.charAt(1) === '/') {\r\n                return value.substring(2, value.length - 1);\r\n            }\r\n            else {\r\n                return value.substring(1, value.length - 1);\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    addXmlRepresentationToRoot(message, rootElem) {\r\n        message.parts().forEach((part) => {\r\n            const child = this.createXmlRepresentationOfPart(part, rootElem);\r\n            if (child) {\r\n                rootElem.appendChild(child);\r\n            }\r\n        });\r\n    }\r\n    createXmlRepresentationOfPart(part, rootElem) {\r\n        switch (part.type) {\r\n            case ParsedMessagePartType.TEXT:\r\n                return this.createXmlRepresentationOfTextPart(part, rootElem);\r\n            case ParsedMessagePartType.START_TAG:\r\n                return this.createXmlRepresentationOfStartTagPart(part, rootElem);\r\n            case ParsedMessagePartType.END_TAG:\r\n                return this.createXmlRepresentationOfEndTagPart(part, rootElem);\r\n            case ParsedMessagePartType.EMPTY_TAG:\r\n                return this.createXmlRepresentationOfEmptyTagPart(part, rootElem);\r\n            case ParsedMessagePartType.PLACEHOLDER:\r\n                return this.createXmlRepresentationOfPlaceholderPart(part, rootElem);\r\n            case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                return this.createXmlRepresentationOfICUMessageRefPart(part, rootElem);\r\n        }\r\n    }\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfStartTagPart(part, rootElem) {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        const tagMapping = new TagMapping();\r\n        const nameAttrib = tagMapping.getStartTagPlaceholderName(part.tagName(), part.idCounter());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        const exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('<' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    }\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfEndTagPart(part, rootElem) {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        const tagMapping = new TagMapping();\r\n        const nameAttrib = tagMapping.getCloseTagPlaceholderName(part.tagName());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        const exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('</' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    }\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfEmptyTagPart(part, rootElem) {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        const tagMapping = new TagMapping();\r\n        const nameAttrib = tagMapping.getEmptyTagPlaceholderName(part.tagName(), part.idCounter());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        const exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('<' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    }\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfPlaceholderPart(part, rootElem) {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        let nameAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            nameAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('name', nameAttrib);\r\n        const exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode(nameAttrib));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    }\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfICUMessageRefPart(part, rootElem) {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        let nameAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            nameAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('name', nameAttrib);\r\n        const exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode(nameAttrib));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-message-parser.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\tag-mapping.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xmb-message-parser.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { AbstractMessageParser } from './abstract-message-parser';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { TagMapping } from './tag-mapping';\r\nimport { ParsedMessagePartType } from './parsed-message-part';\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XMB\r\n */\r\nexport class XmbMessageParser extends AbstractMessageParser {\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    processStartElement(elementNode, message) {\r\n        const tagName = elementNode.tagName;\r\n        if (tagName === 'ph') {\r\n            // There are 4 different usages of ph element:\r\n            // 1. placeholders are like <ph name=\"INTERPOLATION\"><ex>INTERPOLATION</ex></ph>\r\n            // or <ph name=\"INTERPOLATION_1\"><ex>INTERPOLATION_1</ex></ph>\r\n            // 2. start tags:\r\n            // <ph name=\"START_LINK\"><ex>&lt;a&gt;</ex></ph>\r\n            // 3. empty tags:\r\n            // <ph name=\"TAG_IMG\"><ex>&lt;img&gt;</ex></ph>\r\n            // 4. ICU:\r\n            // <ph name=\"ICU\"><ex>ICU</ex></ph>\r\n            const name = elementNode.getAttribute('name');\r\n            if (!name) {\r\n                return true; // should not happen\r\n            }\r\n            if (name.startsWith('INTERPOLATION')) {\r\n                const index = this.parsePlaceholderIndexFromName(name);\r\n                message.addPlaceholder(index, null);\r\n                return false; // ignore children\r\n            }\r\n            else if (name.startsWith('START_')) {\r\n                const tag = this.parseTagnameFromPhElement(elementNode);\r\n                const idcounter = this.parseIdCountFromName(name);\r\n                if (tag) {\r\n                    message.addStartTag(tag, idcounter);\r\n                }\r\n                return false; // ignore children\r\n            }\r\n            else if (name.startsWith('CLOSE_')) {\r\n                const tag = this.parseTagnameFromPhElement(elementNode);\r\n                if (tag) {\r\n                    message.addEndTag(tag);\r\n                }\r\n                return false; // ignore children\r\n            }\r\n            else if (new TagMapping().isEmptyTagPlaceholderName(name)) {\r\n                const emptyTagName = new TagMapping().getTagnameFromEmptyTagPlaceholderName(name);\r\n                const idcounter = this.parseIdCountFromName(name);\r\n                message.addEmptyTag(emptyTagName, idcounter);\r\n                return false; // ignore children\r\n            }\r\n            else if (name.startsWith('ICU')) {\r\n                const index = this.parseICUMessageIndexFromName(name);\r\n                message.addICUMessageRef(index, null);\r\n                return false; // ignore children\r\n            }\r\n        }\r\n        else if (tagName === 'source') {\r\n            // ignore source\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param node node\r\n     * @return message or null, if it is no ICU Message.\r\n     */\r\n    getICUMessageText(node) {\r\n        const children = node.childNodes;\r\n        if (children.length === 0) {\r\n            return null;\r\n        }\r\n        let firstChild = null;\r\n        // find first child that is no source element.\r\n        let i;\r\n        for (i = 0; i < children.length; i++) {\r\n            const child = children.item(i);\r\n            if (child.nodeType !== child.ELEMENT_NODE || child.tagName !== 'source') {\r\n                firstChild = child;\r\n                break;\r\n            }\r\n        }\r\n        if (firstChild && firstChild.nodeType === firstChild.TEXT_NODE) {\r\n            if (this.isICUMessageStart(firstChild.textContent)) {\r\n                const messageText = DOMUtilities.getXMLContent(node);\r\n                if (i > 0) {\r\n                    // drop <source> elements\r\n                    const reSource = new RegExp('<source[^>]*>.*</source>', 'g');\r\n                    return messageText.replace(reSource, '');\r\n                }\r\n                else {\r\n                    return messageText;\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    processEndElement(elementNode, message) {\r\n    }\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param name name\r\n     * @return id as number\r\n     */\r\n    parsePlaceholderIndexFromName(name) {\r\n        let indexString = '';\r\n        if (name === 'INTERPOLATION') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = name.substring('INTERPOLATION_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    }\r\n    /**\r\n     * Parse id attribute of x element as ICU message ref index.\r\n     * id can be \"ICU\" or \"ICU_n\"\r\n     * @param name name\r\n     * @return id as number\r\n     */\r\n    parseICUMessageIndexFromName(name) {\r\n        let indexString = '';\r\n        if (name === 'ICU') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = name.substring('ICU_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    }\r\n    /**\r\n     * Parse the tag name from a ph element.\r\n     * It contained in the <ex> subelements value and enclosed in <>.\r\n     * Example: <ph name=\"START_BOLD_TEXT\"><ex>&lt;b&gt;</ex></ph>\r\n     * @param phElement phElement\r\n     */\r\n    parseTagnameFromPhElement(phElement) {\r\n        const exElement = DOMUtilities.getFirstElementByTagName(phElement, 'ex');\r\n        if (exElement) {\r\n            const value = DOMUtilities.getPCDATA(exElement);\r\n            if (!value || !value.startsWith('<') || !value.endsWith('>')) {\r\n                // oops\r\n                return null;\r\n            }\r\n            if (value.charAt(1) === '/') {\r\n                return value.substring(2, value.length - 1);\r\n            }\r\n            else {\r\n                return value.substring(1, value.length - 1);\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    addXmlRepresentationToRoot(message, rootElem) {\r\n        message.parts().forEach((part) => {\r\n            const child = this.createXmlRepresentationOfPart(part, rootElem);\r\n            if (child) {\r\n                rootElem.appendChild(child);\r\n            }\r\n        });\r\n    }\r\n    createXmlRepresentationOfPart(part, rootElem) {\r\n        switch (part.type) {\r\n            case ParsedMessagePartType.TEXT:\r\n                return this.createXmlRepresentationOfTextPart(part, rootElem);\r\n            case ParsedMessagePartType.START_TAG:\r\n                return this.createXmlRepresentationOfStartTagPart(part, rootElem);\r\n            case ParsedMessagePartType.END_TAG:\r\n                return this.createXmlRepresentationOfEndTagPart(part, rootElem);\r\n            case ParsedMessagePartType.EMPTY_TAG:\r\n                return this.createXmlRepresentationOfEmptyTagPart(part, rootElem);\r\n            case ParsedMessagePartType.PLACEHOLDER:\r\n                return this.createXmlRepresentationOfPlaceholderPart(part, rootElem);\r\n            case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                return this.createXmlRepresentationOfICUMessageRefPart(part, rootElem);\r\n        }\r\n    }\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfStartTagPart(part, rootElem) {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        const tagMapping = new TagMapping();\r\n        const nameAttrib = tagMapping.getStartTagPlaceholderName(part.tagName(), part.idCounter());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        const exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('<' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    }\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfEndTagPart(part, rootElem) {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        const tagMapping = new TagMapping();\r\n        const nameAttrib = tagMapping.getCloseTagPlaceholderName(part.tagName());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        const exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('</' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    }\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfEmptyTagPart(part, rootElem) {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        const tagMapping = new TagMapping();\r\n        const nameAttrib = tagMapping.getEmptyTagPlaceholderName(part.tagName(), part.idCounter());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        const exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('<' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    }\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfPlaceholderPart(part, rootElem) {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        let nameAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            nameAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('name', nameAttrib);\r\n        const exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode(nameAttrib));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    }\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfICUMessageRefPart(part, rootElem) {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        let nameAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            nameAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('name', nameAttrib);\r\n        const exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode(nameAttrib));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"xmb-message-parser.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/xmb-message-parser.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[30,0,0,29],[32,0,0,30],[38,0,0,36],[65,0,0,63],[66,0,0,64]],[[0,0,2,0],[7,0,2,7],[9,0,2,8],[21,0,2,20],[23,0,2,21],[29,0,2,27],[46,0,2,44],[47,0,2,45]],[[0,0,6,0],[7,0,6,7],[9,0,6,8],[19,0,6,18],[21,0,6,19],[27,0,6,25],[42,0,6,40],[43,0,6,41]],[[0,0,9,0],[7,0,9,7],[9,0,9,27],[30,0,9,48],[32,0,9,49],[38,0,9,55],[61,0,9,78],[62,0,9,79]],[[0,0,11,0]],[],[],[[3,0,14,3]],[[0,0,15,0],[6,0,15,6],[13,0,15,13],[29,0,15,30],[38,0,15,38],[59,0,15,59]],[[4,0,17,4]],[],[],[],[],[],[[7,0,23,7]],[[4,0,24,14],[23,0,24,33],[24,0,24,34],[35,0,24,54],[37,0,24,56],[44,0,24,78]],[[8,0,25,8],[14,0,25,14],[21,0,25,21],[24,0,25,24],[35,0,25,35],[36,0,25,36],[43,0,25,43],[44,0,25,44]],[[8,0,26,8],[12,0,26,12],[19,0,26,19],[24,0,26,24],[28,0,26,28],[30,0,26,30]],[[12,0,27,12],[58,0,27,58]],[[12,0,28,12],[92,0,28,92]],[[12,0,29,12],[74,0,29,74]],[[12,0,30,12],[29,0,30,29]],[[12,0,31,12],[60,0,31,60]],[[12,0,32,12],[29,0,32,29]],[[12,0,33,12],[59,0,33,59]],[[12,0,34,12],[22,0,34,22]],[[12,0,35,12],[47,0,35,47]],[[12,0,36,12],[18,0,36,18],[22,0,36,22],[25,0,36,25],[36,0,36,36],[37,0,36,37],[49,0,36,49],[50,0,36,50],[56,0,36,56],[57,0,36,57],[58,0,36,58]],[[12,0,37,12],[16,0,37,16],[17,0,37,17],[21,0,37,21],[23,0,37,23]],[[16,0,38,16],[23,0,38,23],[27,0,38,27],[28,0,38,28],[29,0,38,29],[49,0,38,49]],[[13,0,39,13]],[[12,0,40,12],[16,0,40,16],[20,0,40,20],[21,0,40,21],[31,0,40,31],[32,0,40,32],[47,0,40,47],[48,0,40,48],[50,0,40,50]],[[16,0,41,16],[22,0,41,22],[27,0,41,27],[30,0,41,30],[34,0,41,34],[35,0,41,35],[64,0,41,64],[65,0,41,65],[69,0,41,69],[70,0,41,70],[71,0,41,71]],[[16,0,42,16],[23,0,42,23],[24,0,42,24],[38,0,42,38],[39,0,42,39],[44,0,42,44],[46,0,42,46],[50,0,42,50],[51,0,42,51],[52,0,42,52]],[[16,0,43,16],[23,0,43,23],[28,0,43,28],[29,0,43,29],[30,0,43,30],[48,0,43,48]],[[13,0,44,13]],[[17,0,44,19],[21,0,44,23],[25,0,44,27],[26,0,44,28],[36,0,44,38],[37,0,44,39],[45,0,44,47],[46,0,44,48],[48,0,44,50]],[[16,0,45,16],[22,0,45,22],[25,0,45,25],[28,0,45,28],[32,0,45,32],[33,0,45,33],[58,0,45,58],[59,0,45,59],[70,0,45,70],[71,0,45,71],[72,0,45,72]],[[16,0,46,16],[22,0,46,22],[31,0,46,31],[34,0,46,34],[38,0,46,38],[39,0,46,39],[59,0,46,59],[60,0,46,60],[64,0,46,64],[65,0,46,65],[66,0,46,66]],[[16,0,47,16],[20,0,47,20],[23,0,47,23],[25,0,47,25]],[[20,0,48,20],[27,0,48,27],[28,0,48,28],[39,0,48,39],[40,0,48,40],[43,0,48,43],[45,0,48,45],[54,0,48,54],[55,0,48,55],[56,0,48,56]],[[17,0,49,17]],[[16,0,50,16],[23,0,50,23],[28,0,50,28],[29,0,50,29],[30,0,50,30],[48,0,50,48]],[[13,0,51,13]],[[17,0,51,19],[21,0,51,23],[25,0,51,27],[26,0,51,28],[36,0,51,38],[37,0,51,39],[45,0,51,47],[46,0,51,48],[48,0,51,50]],[[16,0,52,16],[22,0,52,22],[25,0,52,25],[28,0,52,28],[32,0,52,32],[33,0,52,33],[58,0,52,58],[59,0,52,59],[70,0,52,70],[71,0,52,71],[72,0,52,72]],[[16,0,53,16],[20,0,53,20],[23,0,53,23],[25,0,53,25]],[[20,0,54,20],[27,0,54,27],[28,0,54,28],[37,0,54,37],[38,0,54,38],[41,0,54,41],[42,0,54,42],[43,0,54,43]],[[17,0,55,17]],[[16,0,56,16],[23,0,56,23],[28,0,56,28],[29,0,56,29],[30,0,56,30],[48,0,56,48]],[[13,0,57,13]],[[17,0,57,19],[21,0,57,23],[25,0,57,27],[35,0,57,37],[37,0,57,39],[38,0,57,40],[63,0,57,65],[64,0,57,66],[68,0,57,70],[69,0,57,71],[71,0,57,73]],[[16,0,58,16],[22,0,58,22],[34,0,58,34],[37,0,58,37],[41,0,58,41],[51,0,58,51],[53,0,58,53],[54,0,58,54],[91,0,58,91],[92,0,58,92],[96,0,58,96],[97,0,58,97],[98,0,58,98]],[[16,0,59,16],[22,0,59,22],[31,0,59,31],[34,0,59,34],[38,0,59,38],[39,0,59,39],[59,0,59,59],[60,0,59,60],[64,0,59,64],[65,0,59,65],[66,0,59,66]],[[16,0,60,16],[23,0,60,23],[24,0,60,24],[35,0,60,35],[36,0,60,36],[48,0,60,48],[50,0,60,50],[59,0,60,59],[60,0,60,60],[61,0,60,61]],[[16,0,61,16],[23,0,61,23],[28,0,61,28],[29,0,61,29],[30,0,61,30],[48,0,61,48]],[[13,0,62,13]],[[17,0,62,19],[21,0,62,23],[25,0,62,27],[26,0,62,28],[36,0,62,38],[37,0,62,39],[42,0,62,44],[43,0,62,45],[45,0,62,47]],[[16,0,63,16],[22,0,63,22],[27,0,63,27],[30,0,63,30],[34,0,63,34],[35,0,63,35],[63,0,63,63],[64,0,63,64],[68,0,63,68],[69,0,63,69],[70,0,63,70]],[[16,0,64,16],[23,0,64,23],[24,0,64,24],[40,0,64,40],[41,0,64,41],[46,0,64,46],[48,0,64,48],[52,0,64,52],[53,0,64,53],[54,0,64,54]],[[16,0,65,16],[23,0,65,23],[28,0,65,28],[29,0,65,29],[30,0,65,30],[48,0,65,48]],[[13,0,66,13]],[[9,0,67,9]],[[13,0,67,15],[17,0,67,19],[24,0,67,26],[29,0,67,31],[37,0,67,39],[39,0,67,41]],[[12,0,68,12],[28,0,68,28]],[[12,0,69,12],[19,0,69,19],[24,0,69,24],[25,0,69,25]],[[9,0,70,9]],[[8,0,71,8],[15,0,71,15],[19,0,71,19],[20,0,71,20]],[[4,0,72,4],[5,0,72,5]],[[4,0,74,4]],[],[],[],[[7,0,78,7]],[[4,0,79,14],[21,0,79,31],[22,0,79,32],[26,0,79,42]],[[8,0,80,8],[14,0,80,14],[22,0,80,22],[25,0,80,25],[29,0,80,29],[30,0,80,30],[40,0,80,40],[41,0,80,41]],[[8,0,81,8],[12,0,81,12],[20,0,81,20],[21,0,81,21],[27,0,81,27],[32,0,81,32],[33,0,81,33],[35,0,81,35]],[[12,0,82,12],[19,0,82,19],[23,0,82,23],[24,0,82,24]],[[9,0,83,9]],[[8,0,84,8],[12,0,84,12],[22,0,84,22],[25,0,84,25],[29,0,84,29],[30,0,84,30]],[[8,0,85,8],[54,0,85,54]],[[8,0,86,8],[12,0,86,12],[13,0,86,13],[14,0,86,14]],[[8,0,87,8],[13,0,87,13],[14,0,87,14],[17,0,87,17],[18,0,87,18],[20,0,87,20],[21,0,87,21],[24,0,87,24],[32,0,87,32],[33,0,87,33],[39,0,87,39],[41,0,87,41],[42,0,87,42],[44,0,87,44],[46,0,87,46]],[[12,0,88,12],[18,0,88,18],[23,0,88,23],[26,0,88,26],[34,0,88,34],[35,0,88,35],[39,0,88,39],[40,0,88,40],[41,0,88,41],[42,0,88,42],[43,0,88,43]],[[12,0,89,12],[16,0,89,16],[21,0,89,21],[22,0,89,22],[30,0,89,30],[35,0,89,35],[40,0,89,40],[41,0,89,41],[53,0,89,53],[57,0,89,68],[62,0,89,74],[63,0,89,75],[70,0,89,82],[75,0,89,87],[83,0,89,95],[85,0,89,97]],[[16,0,90,16],[26,0,90,26],[29,0,90,29],[34,0,90,34],[35,0,90,35]],[[16,0,91,16],[22,0,91,22]],[[13,0,92,13]],[[9,0,93,9]],[[8,0,94,8],[12,0,94,12],[22,0,94,22],[26,0,94,26],[36,0,94,36],[37,0,94,37],[45,0,94,45],[50,0,94,50],[60,0,94,60],[61,0,94,61],[70,0,94,70],[72,0,94,72]],[[12,0,95,12],[16,0,95,16],[20,0,95,20],[21,0,95,21],[38,0,95,38],[39,0,95,39],[49,0,95,49],[50,0,95,50],[61,0,95,61],[62,0,95,62],[64,0,95,64]],[[16,0,96,16],[22,0,96,22],[33,0,96,33],[36,0,96,36],[48,0,96,48],[49,0,96,49],[62,0,96,62],[63,0,96,73],[67,0,96,77],[68,0,96,78],[69,0,96,79]],[[16,0,97,16],[20,0,97,20],[21,0,97,21],[24,0,97,24],[25,0,97,25],[27,0,97,27]],[[20,0,98,20],[45,0,98,45]],[[20,0,99,20],[26,0,99,26],[34,0,99,34],[37,0,99,45],[41,0,99,49],[47,0,99,55],[48,0,99,56],[74,0,99,82],[76,0,99,84],[79,0,99,87],[80,0,99,88],[81,0,99,89]],[[20,0,100,20],[27,0,100,27],[38,0,100,38],[39,0,100,39],[46,0,100,46],[47,0,100,47],[55,0,100,55],[57,0,100,57],[59,0,100,59],[60,0,100,60],[61,0,100,61]],[[17,0,101,17]],[[21,0,101,23]],[[20,0,102,20],[27,0,102,27],[38,0,102,38],[39,0,102,39]],[[17,0,103,17]],[[13,0,104,13]],[[17,0,104,19]],[[16,0,105,16],[23,0,105,23],[27,0,105,27],[28,0,105,28]],[[13,0,106,13]],[[9,0,107,9]],[[13,0,107,15]],[[12,0,108,12],[19,0,108,19],[23,0,108,23],[24,0,108,24]],[[9,0,109,9]],[[4,0,110,4],[5,0,110,5]],[[4,0,112,4]],[],[],[],[],[[7,0,117,7]],[[4,0,118,14],[21,0,118,31],[22,0,118,32],[33,0,118,52],[35,0,118,54],[42,0,118,76]],[[4,0,119,4],[5,0,119,5]],[[4,0,121,4]],[],[],[],[],[[7,0,126,7]],[[4,0,127,12],[33,0,127,41],[34,0,127,42],[38,0,127,54]],[[8,0,128,8],[12,0,128,12],[23,0,128,23],[26,0,128,26],[28,0,128,28],[29,0,128,29]],[[8,0,130,8],[12,0,130,12],[16,0,130,16],[21,0,130,21],[36,0,130,36],[38,0,130,38]],[[12,0,131,12],[23,0,131,23],[26,0,131,26],[29,0,131,29],[30,0,131,30]],[[9,0,132,9]],[[13,0,132,15]],[[12,0,133,12],[23,0,133,23],[26,0,133,26],[30,0,133,30],[31,0,133,31],[40,0,133,40],[41,0,133,41],[57,0,133,57],[58,0,133,58],[64,0,133,64],[65,0,133,65],[66,0,133,66]],[[9,0,134,9]],[[8,0,135,8],[15,0,135,15],[21,0,135,21],[22,0,135,22],[30,0,135,30],[31,0,135,31],[42,0,135,42],[44,0,135,44],[46,0,135,46],[47,0,135,47],[48,0,135,48]],[[4,0,136,4],[5,0,136,5]],[[4,0,138,4]],[],[],[],[],[[7,0,143,7]],[[4,0,144,12],[32,0,144,40],[33,0,144,41],[37,0,144,53]],[[8,0,145,8],[12,0,145,12],[23,0,145,23],[26,0,145,26],[28,0,145,28],[29,0,145,29]],[[8,0,147,8],[12,0,147,12],[16,0,147,16],[21,0,147,21],[26,0,147,26],[28,0,147,28]],[[12,0,148,12],[23,0,148,23],[26,0,148,26],[29,0,148,29],[30,0,148,30]],[[9,0,149,9]],[[13,0,149,15]],[[12,0,150,12],[23,0,150,23],[26,0,150,26],[30,0,150,30],[31,0,150,31],[40,0,150,40],[41,0,150,41],[47,0,150,47],[48,0,150,48],[54,0,150,54],[55,0,150,55],[56,0,150,56]],[[9,0,151,9]],[[8,0,152,8],[15,0,152,15],[21,0,152,21],[22,0,152,22],[30,0,152,30],[31,0,152,31],[42,0,152,42],[44,0,152,44],[46,0,152,46],[47,0,152,47],[48,0,152,48]],[[4,0,153,4],[5,0,153,5]],[[4,0,155,4]],[],[],[],[],[[7,0,160,7]],[[4,0,161,12],[29,0,161,37],[30,0,161,38],[39,0,161,56]],[[8,0,162,8],[14,0,162,14],[23,0,162,23],[26,0,162,26],[38,0,162,38],[39,0,162,39],[63,0,162,63],[64,0,162,64],[73,0,162,73],[75,0,162,75],[79,0,162,79],[80,0,162,80],[81,0,162,81]],[[8,0,163,8],[12,0,163,12],[21,0,163,21],[23,0,163,23]],[[12,0,164,12],[18,0,164,18],[23,0,164,23],[26,0,164,26],[38,0,164,38],[39,0,164,39],[48,0,164,48],[49,0,164,49],[58,0,164,58],[59,0,164,59],[60,0,164,60]],[[12,0,165,12],[16,0,165,16],[17,0,165,17],[22,0,165,22],[26,0,165,26],[27,0,165,27],[32,0,165,32],[33,0,165,33],[43,0,165,43],[44,0,165,44],[47,0,165,47],[48,0,165,48],[52,0,165,52],[53,0,165,53],[58,0,165,58],[59,0,165,59],[67,0,165,67],[68,0,165,68],[71,0,165,71],[72,0,165,72],[74,0,165,74]],[[16,0,166,16],[23,0,166,23]],[[16,0,167,16],[23,0,167,23],[27,0,167,27],[28,0,167,28]],[[13,0,168,13]],[[12,0,169,12],[16,0,169,16],[21,0,169,21],[22,0,169,22],[28,0,169,28],[29,0,169,29],[30,0,169,30],[31,0,169,31],[36,0,169,36],[39,0,169,39],[41,0,169,41]],[[16,0,170,16],[23,0,170,23],[28,0,170,28],[29,0,170,29],[38,0,170,38],[39,0,170,39],[40,0,170,40],[42,0,170,42],[47,0,170,47],[48,0,170,48],[54,0,170,54],[57,0,170,57],[58,0,170,58],[59,0,170,59],[60,0,170,60]],[[13,0,171,13]],[[17,0,171,19]],[[16,0,172,16],[23,0,172,23],[28,0,172,28],[29,0,172,29],[38,0,172,38],[39,0,172,39],[40,0,172,40],[42,0,172,42],[47,0,172,47],[48,0,172,48],[54,0,172,54],[57,0,172,57],[58,0,172,58],[59,0,172,59],[60,0,172,60]],[[13,0,173,13]],[[9,0,174,9]],[[13,0,174,15]],[[12,0,175,12],[19,0,175,19],[23,0,175,23],[24,0,175,24]],[[9,0,176,9]],[[4,0,177,4],[5,0,177,5]],[[4,0,179,14],[30,0,179,40],[31,0,179,41],[38,0,179,63],[40,0,179,65],[48,0,179,82]],[[8,0,180,8],[15,0,180,15],[16,0,180,16],[21,0,180,21],[23,0,180,23],[24,0,180,24],[31,0,180,31],[32,0,180,32],[33,0,180,33],[37,0,180,37],[39,0,180,39],[41,0,180,41]],[[12,0,181,12],[18,0,181,18],[23,0,181,23],[26,0,181,26],[30,0,181,30],[31,0,181,31],[60,0,181,60],[61,0,181,61],[65,0,181,65],[67,0,181,67],[75,0,181,75],[76,0,181,76],[77,0,181,77]],[[12,0,182,12],[16,0,182,16],[21,0,182,21],[23,0,182,23]],[[16,0,183,16],[24,0,183,24],[25,0,183,25],[36,0,183,36],[37,0,183,37],[42,0,183,42],[43,0,183,43],[44,0,183,44]],[[13,0,184,13]],[[8,0,185,8],[9,0,185,9],[10,0,185,10],[11,0,185,11]],[[4,0,186,4],[5,0,186,5]],[[4,0,188,14],[33,0,188,43],[34,0,188,44],[38,0,188,67],[40,0,188,69],[48,0,188,86]],[[8,0,189,8],[16,0,189,16],[20,0,189,20],[21,0,189,21],[25,0,189,25],[27,0,189,27]],[[12,0,190,12],[17,0,190,17],[38,0,190,38],[39,0,190,39],[43,0,190,43]],[[16,0,191,16],[23,0,191,23],[27,0,191,27],[28,0,191,28],[61,0,191,61],[62,0,191,86],[66,0,191,90],[68,0,191,92],[76,0,191,100],[77,0,191,101],[78,0,191,102]],[[12,0,192,12],[17,0,192,17],[38,0,192,38],[39,0,192,39],[48,0,192,48]],[[16,0,193,16],[23,0,193,23],[27,0,193,27],[28,0,193,28],[65,0,193,65],[66,0,193,94],[70,0,193,99],[72,0,193,101],[80,0,193,109],[81,0,193,110],[82,0,193,111]],[[12,0,194,12],[17,0,194,17],[38,0,194,38],[39,0,194,39],[46,0,194,46]],[[16,0,195,16],[23,0,195,23],[27,0,195,27],[28,0,195,28],[63,0,195,63],[64,0,195,90],[68,0,195,95],[70,0,195,97],[78,0,195,105],[79,0,195,106],[80,0,195,107]],[[12,0,196,12],[17,0,196,17],[38,0,196,38],[39,0,196,39],[48,0,196,48]],[[16,0,197,16],[23,0,197,23],[27,0,197,27],[28,0,197,28],[65,0,197,65],[66,0,197,94],[70,0,197,99],[72,0,197,101],[80,0,197,109],[81,0,197,110],[82,0,197,111]],[[12,0,198,12],[17,0,198,17],[38,0,198,38],[39,0,198,39],[50,0,198,50]],[[16,0,199,16],[23,0,199,23],[27,0,199,27],[28,0,199,28],[68,0,199,68],[69,0,199,100],[73,0,199,105],[75,0,199,107],[83,0,199,115],[84,0,199,116],[85,0,199,117]],[[12,0,200,12],[17,0,200,17],[38,0,200,38],[39,0,200,39],[54,0,200,54]],[[16,0,201,16],[23,0,201,23],[27,0,201,27],[28,0,201,28],[70,0,201,70],[71,0,201,104],[75,0,201,109],[77,0,201,111],[85,0,201,119],[86,0,201,120],[87,0,201,121]],[[9,0,202,9]],[[4,0,203,4],[5,0,203,5]],[[4,0,205,4]],[],[],[],[],[[7,0,210,7]],[[4,0,211,14],[41,0,211,51],[42,0,211,52],[46,0,211,83],[48,0,211,85],[56,0,211,102]],[[8,0,212,8],[14,0,212,14],[20,0,212,20],[23,0,212,23],[31,0,212,31],[32,0,212,32],[45,0,212,45],[46,0,212,46],[59,0,212,59],[60,0,212,60],[64,0,212,64],[65,0,212,65],[66,0,212,66]],[[8,0,213,8],[14,0,213,14],[24,0,213,24],[27,0,213,27],[31,0,213,31],[41,0,213,41],[43,0,213,43],[44,0,213,44]],[[8,0,214,8],[14,0,214,14],[24,0,214,24],[27,0,214,27],[37,0,214,37],[38,0,214,38],[64,0,214,64],[65,0,214,65],[69,0,214,69],[70,0,214,70],[77,0,214,77],[79,0,214,79],[81,0,214,81],[85,0,214,85],[86,0,214,86],[95,0,214,95],[97,0,214,97],[98,0,214,98],[99,0,214,99]],[[8,0,215,8],[14,0,215,14],[15,0,215,15],[27,0,215,27],[28,0,215,28],[34,0,215,34],[36,0,215,36],[46,0,215,46],[47,0,215,47],[48,0,215,48]],[[8,0,216,8],[14,0,216,14],[20,0,216,20],[23,0,216,23],[31,0,216,31],[32,0,216,32],[45,0,216,45],[46,0,216,46],[59,0,216,59],[60,0,216,60],[64,0,216,64],[65,0,216,65],[66,0,216,66]],[[8,0,217,8],[14,0,217,14],[15,0,217,15],[26,0,217,26],[27,0,217,27],[35,0,217,35],[36,0,217,36],[49,0,217,49],[50,0,217,50],[64,0,217,64],[65,0,217,65],[68,0,217,68],[71,0,217,71],[75,0,217,75],[76,0,217,76],[83,0,217,83],[85,0,217,85],[88,0,217,88],[91,0,217,91],[92,0,217,92],[93,0,217,93],[94,0,217,94]],[[8,0,218,8],[14,0,218,14],[15,0,218,15],[26,0,218,26],[27,0,218,27],[33,0,218,33],[34,0,218,34],[35,0,218,35]],[[8,0,219,8],[15,0,219,15],[21,0,219,21],[22,0,219,22]],[[4,0,220,4],[5,0,220,5]],[[4,0,222,4]],[],[],[],[],[[7,0,227,7]],[[4,0,228,14],[39,0,228,49],[40,0,228,50],[44,0,228,79],[46,0,228,81],[54,0,228,98]],[[8,0,229,8],[14,0,229,14],[20,0,229,20],[23,0,229,23],[31,0,229,31],[32,0,229,32],[45,0,229,45],[46,0,229,46],[59,0,229,59],[60,0,229,60],[64,0,229,64],[65,0,229,65],[66,0,229,66]],[[8,0,230,8],[14,0,230,14],[24,0,230,24],[27,0,230,27],[31,0,230,31],[41,0,230,41],[43,0,230,43],[44,0,230,44]],[[8,0,231,8],[14,0,231,14],[24,0,231,24],[27,0,231,27],[37,0,231,37],[38,0,231,38],[64,0,231,64],[65,0,231,65],[69,0,231,69],[70,0,231,70],[77,0,231,77],[79,0,231,79],[80,0,231,80],[81,0,231,81]],[[8,0,232,8],[14,0,232,14],[15,0,232,15],[27,0,232,27],[28,0,232,28],[34,0,232,34],[36,0,232,36],[46,0,232,46],[47,0,232,47],[48,0,232,48]],[[8,0,233,8],[14,0,233,14],[20,0,233,20],[23,0,233,23],[31,0,233,31],[32,0,233,32],[45,0,233,45],[46,0,233,46],[59,0,233,59],[60,0,233,60],[64,0,233,64],[65,0,233,65],[66,0,233,66]],[[8,0,234,8],[14,0,234,14],[15,0,234,15],[26,0,234,26],[27,0,234,27],[35,0,234,35],[36,0,234,36],[49,0,234,49],[50,0,234,50],[64,0,234,64],[65,0,234,65],[69,0,234,69],[72,0,234,72],[76,0,234,76],[77,0,234,77],[84,0,234,84],[86,0,234,86],[89,0,234,89],[92,0,234,92],[93,0,234,93],[94,0,234,94],[95,0,234,95]],[[8,0,235,8],[14,0,235,14],[15,0,235,15],[26,0,235,26],[27,0,235,27],[33,0,235,33],[34,0,235,34],[35,0,235,35]],[[8,0,236,8],[15,0,236,15],[21,0,236,21],[22,0,236,22]],[[4,0,237,4],[5,0,237,5]],[[4,0,239,4]],[],[],[],[],[[7,0,244,7]],[[4,0,245,14],[41,0,245,51],[42,0,245,52],[46,0,245,83],[48,0,245,85],[56,0,245,102]],[[8,0,246,8],[14,0,246,14],[20,0,246,20],[23,0,246,23],[31,0,246,31],[32,0,246,32],[45,0,246,45],[46,0,246,46],[59,0,246,59],[60,0,246,60],[64,0,246,64],[65,0,246,65],[66,0,246,66]],[[8,0,247,8],[14,0,247,14],[24,0,247,24],[27,0,247,27],[31,0,247,31],[41,0,247,41],[43,0,247,43],[44,0,247,44]],[[8,0,248,8],[14,0,248,14],[24,0,248,24],[27,0,248,27],[37,0,248,37],[38,0,248,38],[64,0,248,64],[65,0,248,65],[69,0,248,69],[70,0,248,70],[77,0,248,77],[79,0,248,79],[81,0,248,81],[85,0,248,85],[86,0,248,86],[95,0,248,95],[97,0,248,97],[98,0,248,98],[99,0,248,99]],[[8,0,249,8],[14,0,249,14],[15,0,249,15],[27,0,249,27],[28,0,249,28],[34,0,249,34],[36,0,249,36],[46,0,249,46],[47,0,249,47],[48,0,249,48]],[[8,0,250,8],[14,0,250,14],[20,0,250,20],[23,0,250,23],[31,0,250,31],[32,0,250,32],[45,0,250,45],[46,0,250,46],[59,0,250,59],[60,0,250,60],[64,0,250,64],[65,0,250,65],[66,0,250,66]],[[8,0,251,8],[14,0,251,14],[15,0,251,15],[26,0,251,26],[27,0,251,27],[35,0,251,35],[36,0,251,36],[49,0,251,49],[50,0,251,50],[64,0,251,64],[65,0,251,65],[68,0,251,68],[71,0,251,71],[75,0,251,75],[76,0,251,76],[83,0,251,83],[85,0,251,85],[88,0,251,88],[91,0,251,91],[92,0,251,92],[93,0,251,93],[94,0,251,94]],[[8,0,252,8],[14,0,252,14],[15,0,252,15],[26,0,252,26],[27,0,252,27],[33,0,252,33],[34,0,252,34],[35,0,252,35]],[[8,0,253,8],[15,0,253,15],[21,0,253,21],[22,0,253,22]],[[4,0,254,4],[5,0,254,5]],[[4,0,256,4]],[],[],[],[],[[7,0,261,7]],[[4,0,262,14],[44,0,262,54],[45,0,262,55],[49,0,262,89],[51,0,262,91],[59,0,262,108]],[[8,0,263,8],[14,0,263,14],[20,0,263,20],[23,0,263,23],[31,0,263,31],[32,0,263,32],[45,0,263,45],[46,0,263,46],[59,0,263,59],[60,0,263,60],[64,0,263,64],[65,0,263,65],[66,0,263,66]],[[8,0,264,8],[12,0,264,12],[22,0,264,22],[25,0,264,25],[40,0,264,40],[41,0,264,41]],[[8,0,265,8],[12,0,265,12],[16,0,265,16],[17,0,265,17],[22,0,265,22],[24,0,265,24],[27,0,265,27],[28,0,265,28],[30,0,265,30]],[[12,0,266,12],[22,0,266,22],[25,0,266,25],[41,0,266,41],[44,0,266,44],[48,0,266,48],[49,0,266,49],[54,0,266,54],[56,0,266,56],[57,0,266,57],[65,0,266,65],[66,0,266,66],[68,0,266,68],[69,0,266,69],[70,0,266,70]],[[9,0,267,9]],[[8,0,268,8],[14,0,268,14],[15,0,268,15],[27,0,268,27],[28,0,268,28],[34,0,268,34],[36,0,268,36],[46,0,268,46],[47,0,268,47],[48,0,268,48]],[[8,0,269,8],[14,0,269,14],[20,0,269,20],[23,0,269,23],[31,0,269,31],[32,0,269,32],[45,0,269,45],[46,0,269,46],[59,0,269,59],[60,0,269,60],[64,0,269,64],[65,0,269,65],[66,0,269,66]],[[8,0,270,8],[14,0,270,14],[15,0,270,15],[26,0,270,26],[27,0,270,27],[35,0,270,35],[36,0,270,36],[49,0,270,49],[50,0,270,50],[64,0,270,64],[65,0,270,65],[75,0,270,75],[76,0,270,76],[77,0,270,77],[78,0,270,78]],[[8,0,271,8],[14,0,271,14],[15,0,271,15],[26,0,271,26],[27,0,271,27],[33,0,271,33],[34,0,271,34],[35,0,271,35]],[[8,0,272,8],[15,0,272,15],[21,0,272,21],[22,0,272,22]],[[4,0,273,4],[5,0,273,5]],[[4,0,275,4]],[],[],[],[[7,0,279,7]],[[4,0,280,14],[46,0,280,56],[47,0,280,57],[51,0,280,93],[53,0,280,95],[61,0,280,112]],[[8,0,281,8],[14,0,281,14],[20,0,281,20],[23,0,281,23],[31,0,281,31],[32,0,281,32],[45,0,281,45],[46,0,281,46],[59,0,281,59],[60,0,281,60],[64,0,281,64],[65,0,281,65],[66,0,281,66]],[[8,0,282,8],[12,0,282,12],[22,0,282,22],[25,0,282,25],[30,0,282,30],[31,0,282,31]],[[8,0,283,8],[12,0,283,12],[16,0,283,16],[17,0,283,17],[22,0,283,22],[24,0,283,24],[27,0,283,27],[28,0,283,28],[30,0,283,30]],[[12,0,284,12],[22,0,284,22],[25,0,284,25],[31,0,284,31],[34,0,284,34],[38,0,284,38],[39,0,284,39],[44,0,284,44],[46,0,284,46],[47,0,284,47],[55,0,284,55],[56,0,284,56],[58,0,284,58],[59,0,284,59],[60,0,284,60]],[[9,0,285,9]],[[8,0,286,8],[14,0,286,14],[15,0,286,15],[27,0,286,27],[28,0,286,28],[34,0,286,34],[36,0,286,36],[46,0,286,46],[47,0,286,47],[48,0,286,48]],[[8,0,287,8],[14,0,287,14],[20,0,287,20],[23,0,287,23],[31,0,287,31],[32,0,287,32],[45,0,287,45],[46,0,287,46],[59,0,287,59],[60,0,287,60],[64,0,287,64],[65,0,287,65],[66,0,287,66]],[[8,0,288,8],[14,0,288,14],[15,0,288,15],[26,0,288,26],[27,0,288,27],[35,0,288,35],[36,0,288,36],[49,0,288,49],[50,0,288,50],[64,0,288,64],[65,0,288,65],[75,0,288,75],[76,0,288,76],[77,0,288,77],[78,0,288,78]],[[8,0,289,8],[14,0,289,14],[15,0,289,15],[26,0,289,26],[27,0,289,27],[33,0,289,33],[34,0,289,34],[35,0,289,35]],[[8,0,290,8],[15,0,290,15],[21,0,290,21],[22,0,290,22]],[[4,0,291,4],[5,0,291,5]],[[1,0,292,1]]],"sourcesContent":["import {AbstractMessageParser} from './abstract-message-parser';\r\nimport {ParsedMessage} from './parsed-message';\r\nimport {DOMUtilities} from './dom-utilities';\r\nimport {ParsedMessagePartStartTag} from './parsed-message-part-start-tag';\r\nimport {ParsedMessagePartEndTag} from './parsed-message-part-end-tag';\r\nimport {ParsedMessagePartPlaceholder} from './parsed-message-part-placeholder';\r\nimport {TagMapping} from './tag-mapping';\r\nimport {ParsedMessagePartEmptyTag} from './parsed-message-part-empty-tag';\r\nimport {ParsedMessagePartICUMessageRef} from './parsed-message-part-icu-message-ref';\r\nimport {ParsedMessagePart, ParsedMessagePartType} from './parsed-message-part';\r\nimport {ParsedMessagePartText} from './parsed-message-part-text';\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XMB\r\n */\r\nexport class XmbMessageParser extends AbstractMessageParser {\r\n\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    protected processStartElement(elementNode: Element, message: ParsedMessage): boolean {\r\n        const tagName = elementNode.tagName;\r\n        if (tagName === 'ph') {\r\n            // There are 4 different usages of ph element:\r\n            // 1. placeholders are like <ph name=\"INTERPOLATION\"><ex>INTERPOLATION</ex></ph>\r\n            // or <ph name=\"INTERPOLATION_1\"><ex>INTERPOLATION_1</ex></ph>\r\n            // 2. start tags:\r\n            // <ph name=\"START_LINK\"><ex>&lt;a&gt;</ex></ph>\r\n            // 3. empty tags:\r\n            // <ph name=\"TAG_IMG\"><ex>&lt;img&gt;</ex></ph>\r\n            // 4. ICU:\r\n            // <ph name=\"ICU\"><ex>ICU</ex></ph>\r\n            const name = elementNode.getAttribute('name');\r\n            if (!name) {\r\n                return true; // should not happen\r\n            }\r\n            if (name.startsWith('INTERPOLATION')) {\r\n                const index = this.parsePlaceholderIndexFromName(name);\r\n                message.addPlaceholder(index, null);\r\n                return false; // ignore children\r\n            } else if (name.startsWith('START_')) {\r\n                const tag = this.parseTagnameFromPhElement(elementNode);\r\n                const idcounter = this.parseIdCountFromName(name);\r\n                if (tag) {\r\n                    message.addStartTag(tag, idcounter);\r\n                }\r\n                return false; // ignore children\r\n            } else if (name.startsWith('CLOSE_')) {\r\n                const tag = this.parseTagnameFromPhElement(elementNode);\r\n                if (tag) {\r\n                    message.addEndTag(tag);\r\n                }\r\n                return false; // ignore children\r\n            } else if (new TagMapping().isEmptyTagPlaceholderName(name)) {\r\n                const emptyTagName = new TagMapping().getTagnameFromEmptyTagPlaceholderName(name);\r\n                const idcounter = this.parseIdCountFromName(name);\r\n                message.addEmptyTag(emptyTagName, idcounter);\r\n                return false; // ignore children\r\n            } else if (name.startsWith('ICU')) {\r\n                const index = this.parseICUMessageIndexFromName(name);\r\n                message.addICUMessageRef(index, null);\r\n                return false; // ignore children\r\n            }\r\n        } else if (tagName === 'source') {\r\n            // ignore source\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param node node\r\n     * @return message or null, if it is no ICU Message.\r\n     */\r\n    protected getICUMessageText(node: Node): string {\r\n        const children = node.childNodes;\r\n        if (children.length === 0) {\r\n            return null;\r\n        }\r\n        let firstChild = null;\r\n        // find first child that is no source element.\r\n        let i;\r\n        for (i = 0; i < children.length; i++) {\r\n            const child = children.item(i);\r\n            if (child.nodeType !== child.ELEMENT_NODE || (<Element> child).tagName !== 'source') {\r\n                firstChild = child;\r\n                break;\r\n            }\r\n        }\r\n        if (firstChild && firstChild.nodeType === firstChild.TEXT_NODE) {\r\n            if (this.isICUMessageStart(firstChild.textContent)) {\r\n                const messageText = DOMUtilities.getXMLContent(<Element> node);\r\n                if (i > 0) {\r\n                    // drop <source> elements\r\n                    const reSource: RegExp = new RegExp('<source[^>]*>.*</source>', 'g');\r\n                    return messageText.replace(reSource, '');\r\n                } else {\r\n                    return messageText;\r\n                }\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    protected processEndElement(elementNode: Element, message: ParsedMessage) {\r\n    }\r\n\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param name name\r\n     * @return id as number\r\n     */\r\n    private parsePlaceholderIndexFromName(name: string): number {\r\n        let indexString = '';\r\n\r\n        if (name === 'INTERPOLATION') {\r\n            indexString = '0';\r\n        } else {\r\n            indexString = name.substring('INTERPOLATION_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    }\r\n\r\n    /**\r\n     * Parse id attribute of x element as ICU message ref index.\r\n     * id can be \"ICU\" or \"ICU_n\"\r\n     * @param name name\r\n     * @return id as number\r\n     */\r\n    private parseICUMessageIndexFromName(name: string): number {\r\n        let indexString = '';\r\n\r\n        if (name === 'ICU') {\r\n            indexString = '0';\r\n        } else {\r\n            indexString = name.substring('ICU_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    }\r\n\r\n    /**\r\n     * Parse the tag name from a ph element.\r\n     * It contained in the <ex> subelements value and enclosed in <>.\r\n     * Example: <ph name=\"START_BOLD_TEXT\"><ex>&lt;b&gt;</ex></ph>\r\n     * @param phElement phElement\r\n     */\r\n    private parseTagnameFromPhElement(phElement: Element): string {\r\n        const exElement = DOMUtilities.getFirstElementByTagName(phElement, 'ex');\r\n        if (exElement) {\r\n            const value = DOMUtilities.getPCDATA(exElement);\r\n            if (!value || !value.startsWith('<') || !value.endsWith('>')) {\r\n                // oops\r\n                return null;\r\n            }\r\n            if (value.charAt(1) === '/') {\r\n                return value.substring(2, value.length - 1);\r\n            } else {\r\n                return value.substring(1, value.length - 1);\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected addXmlRepresentationToRoot(message: ParsedMessage, rootElem: Element) {\r\n        message.parts().forEach((part) => {\r\n            const child = this.createXmlRepresentationOfPart(part, rootElem);\r\n            if (child) {\r\n                rootElem.appendChild(child);\r\n            }\r\n        });\r\n    }\r\n\r\n    protected createXmlRepresentationOfPart(part: ParsedMessagePart, rootElem: Element): Node {\r\n        switch (part.type) {\r\n            case ParsedMessagePartType.TEXT:\r\n                return this.createXmlRepresentationOfTextPart(<ParsedMessagePartText> part, rootElem);\r\n            case ParsedMessagePartType.START_TAG:\r\n                return this.createXmlRepresentationOfStartTagPart((<ParsedMessagePartStartTag>part), rootElem);\r\n            case ParsedMessagePartType.END_TAG:\r\n                return this.createXmlRepresentationOfEndTagPart((<ParsedMessagePartEndTag>part), rootElem);\r\n            case ParsedMessagePartType.EMPTY_TAG:\r\n                return this.createXmlRepresentationOfEmptyTagPart((<ParsedMessagePartEmptyTag>part), rootElem);\r\n            case ParsedMessagePartType.PLACEHOLDER:\r\n                return this.createXmlRepresentationOfPlaceholderPart((<ParsedMessagePartPlaceholder>part), rootElem);\r\n            case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                return this.createXmlRepresentationOfICUMessageRefPart((<ParsedMessagePartICUMessageRef>part), rootElem);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    protected createXmlRepresentationOfStartTagPart(part: ParsedMessagePartStartTag, rootElem: Element): Node {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        const tagMapping = new TagMapping();\r\n        const nameAttrib = tagMapping.getStartTagPlaceholderName(part.tagName(), part.idCounter());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        const exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('<' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    }\r\n\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    protected createXmlRepresentationOfEndTagPart(part: ParsedMessagePartEndTag, rootElem: Element): Node {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        const tagMapping = new TagMapping();\r\n        const nameAttrib = tagMapping.getCloseTagPlaceholderName(part.tagName());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        const exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('</' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    }\r\n\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    protected createXmlRepresentationOfEmptyTagPart(part: ParsedMessagePartEmptyTag, rootElem: Element): Node {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        const tagMapping = new TagMapping();\r\n        const nameAttrib = tagMapping.getEmptyTagPlaceholderName(part.tagName(), part.idCounter());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        const exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('<' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    }\r\n\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    protected createXmlRepresentationOfPlaceholderPart(part: ParsedMessagePartPlaceholder, rootElem: Element): Node {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        let nameAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            nameAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('name', nameAttrib);\r\n        const exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode(nameAttrib));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    }\r\n\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    protected createXmlRepresentationOfICUMessageRefPart(part: ParsedMessagePartICUMessageRef, rootElem: Element): Node {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        let nameAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            nameAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('name', nameAttrib);\r\n        const exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode(nameAttrib));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    }\r\n}\r\n"]},"resolvedIds":{"./dom-utilities":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./parsed-message-part":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./tag-mapping":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\tag-mapping.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./abstract-message-parser":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-message-parser.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":29059,"body":[{"type":"ImportDeclaration","start":0,"end":47,"specifiers":[{"type":"ImportSpecifier","start":9,"end":21,"imported":{"type":"Identifier","start":9,"end":21,"name":"DOMUtilities"},"local":{"type":"Identifier","start":9,"end":21,"name":"DOMUtilities"}}],"source":{"type":"Literal","start":29,"end":46,"value":"./dom-utilities","raw":"'./dom-utilities'"}},{"type":"ImportDeclaration","start":49,"end":107,"specifiers":[{"type":"ImportSpecifier","start":58,"end":75,"imported":{"type":"Identifier","start":58,"end":75,"name":"AbstractTransUnit"},"local":{"type":"Identifier","start":58,"end":75,"name":"AbstractTransUnit"}}],"source":{"type":"Literal","start":83,"end":106,"value":"./abstract-trans-unit","raw":"'./abstract-trans-unit'"}},{"type":"ImportDeclaration","start":109,"end":165,"specifiers":[{"type":"ImportSpecifier","start":118,"end":134,"imported":{"type":"Identifier","start":118,"end":134,"name":"XmbMessageParser"},"local":{"type":"Identifier","start":118,"end":134,"name":"XmbMessageParser"}}],"source":{"type":"Literal","start":142,"end":164,"value":"./xmb-message-parser","raw":"'./xmb-message-parser'"}},{"type":"ExportNamedDeclaration","start":253,"end":9051,"declaration":{"type":"ClassDeclaration","start":260,"end":9051,"id":{"type":"Identifier","start":266,"end":278,"name":"XmbTransUnit"},"superClass":{"type":"Identifier","start":287,"end":304,"name":"AbstractTransUnit"},"body":{"type":"ClassBody","start":305,"end":9051,"body":[{"type":"MethodDefinition","start":312,"end":430,"static":false,"computed":false,"key":{"type":"Identifier","start":312,"end":323,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":323,"end":430,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":324,"end":332,"name":"_element"},{"type":"Identifier","start":334,"end":337,"name":"_id"},{"type":"Identifier","start":339,"end":363,"name":"_translationMessagesFile"}],"body":{"type":"BlockStatement","start":365,"end":430,"body":[{"type":"ExpressionStatement","start":376,"end":423,"expression":{"type":"CallExpression","start":376,"end":422,"callee":{"type":"Super","start":376,"end":381},"arguments":[{"type":"Identifier","start":382,"end":390,"name":"_element"},{"type":"Identifier","start":392,"end":395,"name":"_id"},{"type":"Identifier","start":397,"end":421,"name":"_translationMessagesFile"}],"optional":false}}]}}},{"type":"MethodDefinition","start":651,"end":1122,"static":true,"computed":false,"key":{"type":"Identifier","start":658,"end":675,"name":"parseSourceAndPos"},"kind":"method","value":{"type":"FunctionExpression","start":675,"end":1122,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":676,"end":688,"name":"sourceAndPos"}],"body":{"type":"BlockStatement","start":690,"end":1122,"body":[{"type":"VariableDeclaration","start":701,"end":745,"declarations":[{"type":"VariableDeclarator","start":707,"end":744,"id":{"type":"Identifier","start":707,"end":712,"name":"index"},"init":{"type":"CallExpression","start":715,"end":744,"callee":{"type":"MemberExpression","start":715,"end":739,"object":{"type":"Identifier","start":715,"end":727,"name":"sourceAndPos"},"property":{"type":"Identifier","start":728,"end":739,"name":"lastIndexOf"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":740,"end":743,"value":":","raw":"':'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":755,"end":1115,"test":{"type":"BinaryExpression","start":759,"end":768,"left":{"type":"Identifier","start":759,"end":764,"name":"index"},"operator":"<","right":{"type":"Literal","start":767,"end":768,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":770,"end":894,"body":[{"type":"ReturnStatement","start":785,"end":883,"argument":{"type":"ObjectExpression","start":792,"end":882,"properties":[{"type":"Property","start":811,"end":835,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":811,"end":821,"name":"sourcefile"},"value":{"type":"Identifier","start":823,"end":835,"name":"sourceAndPos"},"kind":"init"},{"type":"Property","start":854,"end":867,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":854,"end":864,"name":"linenumber"},"value":{"type":"Literal","start":866,"end":867,"value":0,"raw":"0"},"kind":"init"}]}}]},"alternate":{"type":"BlockStatement","start":909,"end":1115,"body":[{"type":"ReturnStatement","start":924,"end":1104,"argument":{"type":"ObjectExpression","start":931,"end":1103,"properties":[{"type":"Property","start":950,"end":994,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":950,"end":960,"name":"sourcefile"},"value":{"type":"CallExpression","start":962,"end":994,"callee":{"type":"MemberExpression","start":962,"end":984,"object":{"type":"Identifier","start":962,"end":974,"name":"sourceAndPos"},"property":{"type":"Identifier","start":975,"end":984,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":985,"end":986,"value":0,"raw":"0"},{"type":"Identifier","start":988,"end":993,"name":"index"}],"optional":false},"kind":"init"},{"type":"Property","start":1013,"end":1088,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1013,"end":1023,"name":"linenumber"},"value":{"type":"CallExpression","start":1025,"end":1088,"callee":{"type":"MemberExpression","start":1025,"end":1053,"object":{"type":"Identifier","start":1025,"end":1037,"name":"XmbTransUnit"},"property":{"type":"Identifier","start":1038,"end":1053,"name":"parseLineNumber"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1054,"end":1087,"callee":{"type":"MemberExpression","start":1054,"end":1076,"object":{"type":"Identifier","start":1054,"end":1066,"name":"sourceAndPos"},"property":{"type":"Identifier","start":1067,"end":1076,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":1077,"end":1086,"left":{"type":"Identifier","start":1077,"end":1082,"name":"index"},"operator":"+","right":{"type":"Literal","start":1085,"end":1086,"value":1,"raw":"1"}}],"optional":false}],"optional":false},"kind":"init"}]}}]}}]}}},{"type":"MethodDefinition","start":1128,"end":1232,"static":true,"computed":false,"key":{"type":"Identifier","start":1135,"end":1150,"name":"parseLineNumber"},"kind":"method","value":{"type":"FunctionExpression","start":1150,"end":1232,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1151,"end":1167,"name":"lineNumberString"}],"body":{"type":"BlockStatement","start":1169,"end":1232,"body":[{"type":"ReturnStatement","start":1180,"end":1225,"argument":{"type":"CallExpression","start":1187,"end":1224,"callee":{"type":"MemberExpression","start":1187,"end":1202,"object":{"type":"Identifier","start":1187,"end":1193,"name":"Number"},"property":{"type":"Identifier","start":1194,"end":1202,"name":"parseInt"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1203,"end":1219,"name":"lineNumberString"},{"type":"Literal","start":1221,"end":1223,"value":10,"raw":"10"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1361,"end":1597,"static":false,"computed":false,"key":{"type":"Identifier","start":1361,"end":1374,"name":"sourceContent"},"kind":"method","value":{"type":"FunctionExpression","start":1374,"end":1597,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1377,"end":1597,"body":[{"type":"VariableDeclaration","start":1388,"end":1447,"declarations":[{"type":"VariableDeclarator","start":1392,"end":1446,"id":{"type":"Identifier","start":1392,"end":1402,"name":"msgContent"},"init":{"type":"CallExpression","start":1405,"end":1446,"callee":{"type":"MemberExpression","start":1405,"end":1431,"object":{"type":"Identifier","start":1405,"end":1417,"name":"DOMUtilities"},"property":{"type":"Identifier","start":1418,"end":1431,"name":"getXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":1432,"end":1445,"object":{"type":"ThisExpression","start":1432,"end":1436},"property":{"type":"Identifier","start":1437,"end":1445,"name":"_element"},"computed":false,"optional":false}],"optional":false}}],"kind":"let"},{"type":"VariableDeclaration","start":1457,"end":1502,"declarations":[{"type":"VariableDeclarator","start":1463,"end":1501,"id":{"type":"Identifier","start":1463,"end":1475,"name":"reSourceElem"},"init":{"type":"Literal","start":1478,"end":1501,"value":{},"raw":"/<source>.*<\\/source>/g","regex":{"pattern":"<source>.*<\\/source>","flags":"g"}}}],"kind":"const"},{"type":"ExpressionStatement","start":1512,"end":1562,"expression":{"type":"AssignmentExpression","start":1512,"end":1561,"operator":"=","left":{"type":"Identifier","start":1512,"end":1522,"name":"msgContent"},"right":{"type":"CallExpression","start":1525,"end":1561,"callee":{"type":"MemberExpression","start":1525,"end":1543,"object":{"type":"Identifier","start":1525,"end":1535,"name":"msgContent"},"property":{"type":"Identifier","start":1536,"end":1543,"name":"replace"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1544,"end":1556,"name":"reSourceElem"},{"type":"Literal","start":1558,"end":1560,"value":"","raw":"''"}],"optional":false}}},{"type":"ReturnStatement","start":1572,"end":1590,"argument":{"type":"Identifier","start":1579,"end":1589,"name":"msgContent"}}]}}},{"type":"MethodDefinition","start":1803,"end":1861,"static":false,"computed":false,"key":{"type":"Identifier","start":1803,"end":1827,"name":"supportsSetSourceContent"},"kind":"method","value":{"type":"FunctionExpression","start":1827,"end":1861,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1830,"end":1861,"body":[{"type":"ReturnStatement","start":1841,"end":1854,"argument":{"type":"Literal","start":1848,"end":1853,"value":false,"raw":"false"}}]}}},{"type":"MethodDefinition","start":2111,"end":2174,"static":false,"computed":false,"key":{"type":"Identifier","start":2111,"end":2127,"name":"setSourceContent"},"kind":"method","value":{"type":"FunctionExpression","start":2127,"end":2174,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2128,"end":2138,"name":"newContent"}],"body":{"type":"BlockStatement","start":2140,"end":2174,"body":[]}}},{"type":"MethodDefinition","start":2252,"end":2316,"static":false,"computed":false,"key":{"type":"Identifier","start":2252,"end":2265,"name":"messageParser"},"kind":"method","value":{"type":"FunctionExpression","start":2265,"end":2316,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2268,"end":2316,"body":[{"type":"ReturnStatement","start":2279,"end":2309,"argument":{"type":"NewExpression","start":2286,"end":2308,"callee":{"type":"Identifier","start":2290,"end":2306,"name":"XmbMessageParser"},"arguments":[]}}]}}},{"type":"MethodDefinition","start":2422,"end":2552,"static":false,"computed":false,"key":{"type":"Identifier","start":2422,"end":2451,"name":"createSourceContentNormalized"},"kind":"method","value":{"type":"FunctionExpression","start":2451,"end":2552,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2454,"end":2552,"body":[{"type":"ReturnStatement","start":2465,"end":2545,"argument":{"type":"CallExpression","start":2472,"end":2544,"callee":{"type":"MemberExpression","start":2472,"end":2523,"object":{"type":"CallExpression","start":2472,"end":2492,"callee":{"type":"MemberExpression","start":2472,"end":2490,"object":{"type":"ThisExpression","start":2472,"end":2476},"property":{"type":"Identifier","start":2477,"end":2490,"name":"messageParser"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":2493,"end":2523,"name":"createNormalizedMessageFromXML"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2524,"end":2537,"object":{"type":"ThisExpression","start":2524,"end":2528},"property":{"type":"Identifier","start":2529,"end":2537,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":2539,"end":2543,"value":null,"raw":"null"}],"optional":false}}]}}},{"type":"MethodDefinition","start":2667,"end":2793,"static":false,"computed":false,"key":{"type":"Identifier","start":2667,"end":2680,"name":"targetContent"},"kind":"method","value":{"type":"FunctionExpression","start":2680,"end":2793,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2683,"end":2793,"body":[{"type":"ReturnStatement","start":2758,"end":2786,"argument":{"type":"CallExpression","start":2765,"end":2785,"callee":{"type":"MemberExpression","start":2765,"end":2783,"object":{"type":"ThisExpression","start":2765,"end":2769},"property":{"type":"Identifier","start":2770,"end":2783,"name":"sourceContent"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}},{"type":"MethodDefinition","start":2973,"end":3125,"static":false,"computed":false,"key":{"type":"Identifier","start":2973,"end":2996,"name":"targetContentNormalized"},"kind":"method","value":{"type":"FunctionExpression","start":2996,"end":3125,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2999,"end":3125,"body":[{"type":"ReturnStatement","start":3010,"end":3118,"argument":{"type":"CallExpression","start":3017,"end":3117,"callee":{"type":"MemberExpression","start":3017,"end":3070,"object":{"type":"NewExpression","start":3017,"end":3039,"callee":{"type":"Identifier","start":3021,"end":3037,"name":"XmbMessageParser"},"arguments":[]},"property":{"type":"Identifier","start":3040,"end":3070,"name":"createNormalizedMessageFromXML"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3071,"end":3084,"object":{"type":"ThisExpression","start":3071,"end":3075},"property":{"type":"Identifier","start":3076,"end":3084,"name":"_element"},"computed":false,"optional":false},{"type":"CallExpression","start":3086,"end":3116,"callee":{"type":"MemberExpression","start":3086,"end":3114,"object":{"type":"ThisExpression","start":3086,"end":3090},"property":{"type":"Identifier","start":3091,"end":3114,"name":"sourceContentNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":3214,"end":3288,"static":false,"computed":false,"key":{"type":"Identifier","start":3214,"end":3231,"name":"nativeTargetState"},"kind":"method","value":{"type":"FunctionExpression","start":3231,"end":3288,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":3234,"end":3288,"body":[{"type":"ReturnStatement","start":3245,"end":3257,"argument":{"type":"Literal","start":3252,"end":3256,"value":null,"raw":"null"}}]}}},{"type":"MethodDefinition","start":3605,"end":3665,"static":false,"computed":false,"key":{"type":"Identifier","start":3605,"end":3626,"name":"mapStateToNativeState"},"kind":"method","value":{"type":"FunctionExpression","start":3626,"end":3665,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3627,"end":3632,"name":"state"}],"body":{"type":"BlockStatement","start":3634,"end":3665,"body":[{"type":"ReturnStatement","start":3645,"end":3658,"argument":{"type":"Identifier","start":3652,"end":3657,"name":"state"}}]}}},{"type":"MethodDefinition","start":3862,"end":3934,"static":false,"computed":false,"key":{"type":"Identifier","start":3862,"end":3883,"name":"mapNativeStateToState"},"kind":"method","value":{"type":"FunctionExpression","start":3883,"end":3934,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3884,"end":3895,"name":"nativeState"}],"body":{"type":"BlockStatement","start":3897,"end":3934,"body":[{"type":"ReturnStatement","start":3908,"end":3927,"argument":{"type":"Identifier","start":3915,"end":3926,"name":"nativeState"}}]}}},{"type":"MethodDefinition","start":4054,"end":4130,"static":false,"computed":false,"key":{"type":"Identifier","start":4054,"end":4074,"name":"setNativeTargetState"},"kind":"method","value":{"type":"FunctionExpression","start":4074,"end":4130,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4075,"end":4086,"name":"nativeState"}],"body":{"type":"BlockStatement","start":4088,"end":4130,"body":[]}}},{"type":"MethodDefinition","start":4568,"end":4993,"static":false,"computed":false,"key":{"type":"Identifier","start":4568,"end":4584,"name":"sourceReferences"},"kind":"method","value":{"type":"FunctionExpression","start":4584,"end":4993,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":4587,"end":4993,"body":[{"type":"VariableDeclaration","start":4598,"end":4666,"declarations":[{"type":"VariableDeclarator","start":4604,"end":4665,"id":{"type":"Identifier","start":4604,"end":4618,"name":"sourceElements"},"init":{"type":"CallExpression","start":4621,"end":4665,"callee":{"type":"MemberExpression","start":4621,"end":4655,"object":{"type":"MemberExpression","start":4621,"end":4634,"object":{"type":"ThisExpression","start":4621,"end":4625},"property":{"type":"Identifier","start":4626,"end":4634,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4635,"end":4655,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4656,"end":4664,"value":"source","raw":"'source'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":4676,"end":4698,"declarations":[{"type":"VariableDeclarator","start":4682,"end":4697,"id":{"type":"Identifier","start":4682,"end":4692,"name":"sourceRefs"},"init":{"type":"ArrayExpression","start":4695,"end":4697,"elements":[]}}],"kind":"const"},{"type":"ForStatement","start":4708,"end":4958,"init":{"type":"VariableDeclaration","start":4713,"end":4722,"declarations":[{"type":"VariableDeclarator","start":4717,"end":4722,"id":{"type":"Identifier","start":4717,"end":4718,"name":"i"},"init":{"type":"Literal","start":4721,"end":4722,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":4724,"end":4749,"left":{"type":"Identifier","start":4724,"end":4725,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":4728,"end":4749,"object":{"type":"Identifier","start":4728,"end":4742,"name":"sourceElements"},"property":{"type":"Identifier","start":4743,"end":4749,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":4751,"end":4754,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":4751,"end":4752,"name":"i"}},"body":{"type":"BlockStatement","start":4756,"end":4958,"body":[{"type":"VariableDeclaration","start":4771,"end":4807,"declarations":[{"type":"VariableDeclarator","start":4777,"end":4806,"id":{"type":"Identifier","start":4777,"end":4781,"name":"elem"},"init":{"type":"CallExpression","start":4784,"end":4806,"callee":{"type":"MemberExpression","start":4784,"end":4803,"object":{"type":"Identifier","start":4784,"end":4798,"name":"sourceElements"},"property":{"type":"Identifier","start":4799,"end":4803,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4804,"end":4805,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":4821,"end":4871,"declarations":[{"type":"VariableDeclarator","start":4827,"end":4870,"id":{"type":"Identifier","start":4827,"end":4839,"name":"sourceAndPos"},"init":{"type":"CallExpression","start":4842,"end":4870,"callee":{"type":"MemberExpression","start":4842,"end":4864,"object":{"type":"Identifier","start":4842,"end":4854,"name":"DOMUtilities"},"property":{"type":"Identifier","start":4855,"end":4864,"name":"getPCDATA"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4865,"end":4869,"name":"elem"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":4885,"end":4947,"expression":{"type":"CallExpression","start":4885,"end":4946,"callee":{"type":"MemberExpression","start":4885,"end":4900,"object":{"type":"Identifier","start":4885,"end":4895,"name":"sourceRefs"},"property":{"type":"Identifier","start":4896,"end":4900,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":4901,"end":4945,"callee":{"type":"MemberExpression","start":4901,"end":4931,"object":{"type":"Identifier","start":4901,"end":4913,"name":"XmbTransUnit"},"property":{"type":"Identifier","start":4914,"end":4931,"name":"parseSourceAndPos"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4932,"end":4944,"name":"sourceAndPos"}],"optional":false}],"optional":false}}]}},{"type":"ReturnStatement","start":4968,"end":4986,"argument":{"type":"Identifier","start":4975,"end":4985,"name":"sourceRefs"}}]}}},{"type":"MethodDefinition","start":5261,"end":5832,"static":false,"computed":false,"key":{"type":"Identifier","start":5261,"end":5280,"name":"setSourceReferences"},"kind":"method","value":{"type":"FunctionExpression","start":5280,"end":5832,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5281,"end":5291,"name":"sourceRefs"}],"body":{"type":"BlockStatement","start":5293,"end":5832,"body":[{"type":"ExpressionStatement","start":5304,"end":5337,"expression":{"type":"CallExpression","start":5304,"end":5336,"callee":{"type":"MemberExpression","start":5304,"end":5334,"object":{"type":"ThisExpression","start":5304,"end":5308},"property":{"type":"Identifier","start":5309,"end":5334,"name":"removeAllSourceReferences"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"VariableDeclaration","start":5347,"end":5401,"declarations":[{"type":"VariableDeclarator","start":5351,"end":5400,"id":{"type":"Identifier","start":5351,"end":5365,"name":"insertPosition"},"init":{"type":"CallExpression","start":5368,"end":5400,"callee":{"type":"MemberExpression","start":5368,"end":5397,"object":{"type":"MemberExpression","start":5368,"end":5392,"object":{"type":"MemberExpression","start":5368,"end":5381,"object":{"type":"ThisExpression","start":5368,"end":5372},"property":{"type":"Identifier","start":5373,"end":5381,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5382,"end":5392,"name":"childNodes"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5393,"end":5397,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5398,"end":5399,"value":0,"raw":"0"}],"optional":false}}],"kind":"let"},{"type":"ForStatement","start":5411,"end":5825,"init":{"type":"VariableDeclaration","start":5416,"end":5445,"declarations":[{"type":"VariableDeclarator","start":5420,"end":5445,"id":{"type":"Identifier","start":5420,"end":5421,"name":"i"},"init":{"type":"BinaryExpression","start":5424,"end":5445,"left":{"type":"MemberExpression","start":5424,"end":5441,"object":{"type":"Identifier","start":5424,"end":5434,"name":"sourceRefs"},"property":{"type":"Identifier","start":5435,"end":5441,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":5444,"end":5445,"value":1,"raw":"1"}}}],"kind":"let"},"test":{"type":"BinaryExpression","start":5447,"end":5453,"left":{"type":"Identifier","start":5447,"end":5448,"name":"i"},"operator":">=","right":{"type":"Literal","start":5452,"end":5453,"value":0,"raw":"0"}},"update":{"type":"UpdateExpression","start":5455,"end":5458,"operator":"--","prefix":false,"argument":{"type":"Identifier","start":5455,"end":5456,"name":"i"}},"body":{"type":"BlockStatement","start":5460,"end":5825,"body":[{"type":"VariableDeclaration","start":5475,"end":5501,"declarations":[{"type":"VariableDeclarator","start":5481,"end":5500,"id":{"type":"Identifier","start":5481,"end":5484,"name":"ref"},"init":{"type":"MemberExpression","start":5487,"end":5500,"object":{"type":"Identifier","start":5487,"end":5497,"name":"sourceRefs"},"property":{"type":"Identifier","start":5498,"end":5499,"name":"i"},"computed":true,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":5515,"end":5582,"declarations":[{"type":"VariableDeclarator","start":5521,"end":5581,"id":{"type":"Identifier","start":5521,"end":5527,"name":"source"},"init":{"type":"CallExpression","start":5530,"end":5581,"callee":{"type":"MemberExpression","start":5530,"end":5571,"object":{"type":"MemberExpression","start":5530,"end":5557,"object":{"type":"MemberExpression","start":5530,"end":5543,"object":{"type":"ThisExpression","start":5530,"end":5534},"property":{"type":"Identifier","start":5535,"end":5543,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5544,"end":5557,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5558,"end":5571,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5572,"end":5580,"value":"source","raw":"'source'"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":5596,"end":5711,"expression":{"type":"CallExpression","start":5596,"end":5710,"callee":{"type":"MemberExpression","start":5596,"end":5614,"object":{"type":"Identifier","start":5596,"end":5602,"name":"source"},"property":{"type":"Identifier","start":5603,"end":5614,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":5615,"end":5709,"callee":{"type":"MemberExpression","start":5615,"end":5657,"object":{"type":"MemberExpression","start":5615,"end":5642,"object":{"type":"MemberExpression","start":5615,"end":5628,"object":{"type":"ThisExpression","start":5615,"end":5619},"property":{"type":"Identifier","start":5620,"end":5628,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5629,"end":5642,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5643,"end":5657,"name":"createTextNode"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":5658,"end":5708,"left":{"type":"BinaryExpression","start":5658,"end":5678,"left":{"type":"MemberExpression","start":5658,"end":5672,"object":{"type":"Identifier","start":5658,"end":5661,"name":"ref"},"property":{"type":"Identifier","start":5662,"end":5672,"name":"sourcefile"},"computed":false,"optional":false},"operator":"+","right":{"type":"Literal","start":5675,"end":5678,"value":":","raw":"':'"}},"operator":"+","right":{"type":"CallExpression","start":5681,"end":5708,"callee":{"type":"MemberExpression","start":5681,"end":5704,"object":{"type":"MemberExpression","start":5681,"end":5695,"object":{"type":"Identifier","start":5681,"end":5684,"name":"ref"},"property":{"type":"Identifier","start":5685,"end":5695,"name":"linenumber"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5696,"end":5704,"name":"toString"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5705,"end":5707,"value":10,"raw":"10"}],"optional":false}}],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":5725,"end":5776,"expression":{"type":"CallExpression","start":5725,"end":5775,"callee":{"type":"MemberExpression","start":5725,"end":5751,"object":{"type":"MemberExpression","start":5725,"end":5738,"object":{"type":"ThisExpression","start":5725,"end":5729},"property":{"type":"Identifier","start":5730,"end":5738,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5739,"end":5751,"name":"insertBefore"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5752,"end":5758,"name":"source"},{"type":"Identifier","start":5760,"end":5774,"name":"insertPosition"}],"optional":false}},{"type":"ExpressionStatement","start":5790,"end":5814,"expression":{"type":"AssignmentExpression","start":5790,"end":5813,"operator":"=","left":{"type":"Identifier","start":5790,"end":5804,"name":"insertPosition"},"right":{"type":"Identifier","start":5807,"end":5813,"name":"source"}}}]}}]}}},{"type":"MethodDefinition","start":5838,"end":6222,"static":false,"computed":false,"key":{"type":"Identifier","start":5838,"end":5863,"name":"removeAllSourceReferences"},"kind":"method","value":{"type":"FunctionExpression","start":5863,"end":6222,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":5866,"end":6222,"body":[{"type":"VariableDeclaration","start":5877,"end":5945,"declarations":[{"type":"VariableDeclarator","start":5883,"end":5944,"id":{"type":"Identifier","start":5883,"end":5897,"name":"sourceElements"},"init":{"type":"CallExpression","start":5900,"end":5944,"callee":{"type":"MemberExpression","start":5900,"end":5934,"object":{"type":"MemberExpression","start":5900,"end":5913,"object":{"type":"ThisExpression","start":5900,"end":5904},"property":{"type":"Identifier","start":5905,"end":5913,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5914,"end":5934,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5935,"end":5943,"value":"source","raw":"'source'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":5955,"end":5978,"declarations":[{"type":"VariableDeclarator","start":5961,"end":5977,"id":{"type":"Identifier","start":5961,"end":5972,"name":"toBeRemoved"},"init":{"type":"ArrayExpression","start":5975,"end":5977,"elements":[]}}],"kind":"const"},{"type":"ForStatement","start":5988,"end":6135,"init":{"type":"VariableDeclaration","start":5993,"end":6002,"declarations":[{"type":"VariableDeclarator","start":5997,"end":6002,"id":{"type":"Identifier","start":5997,"end":5998,"name":"i"},"init":{"type":"Literal","start":6001,"end":6002,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":6004,"end":6029,"left":{"type":"Identifier","start":6004,"end":6005,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":6008,"end":6029,"object":{"type":"Identifier","start":6008,"end":6022,"name":"sourceElements"},"property":{"type":"Identifier","start":6023,"end":6029,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":6031,"end":6034,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":6031,"end":6032,"name":"i"}},"body":{"type":"BlockStatement","start":6036,"end":6135,"body":[{"type":"VariableDeclaration","start":6051,"end":6087,"declarations":[{"type":"VariableDeclarator","start":6057,"end":6086,"id":{"type":"Identifier","start":6057,"end":6061,"name":"elem"},"init":{"type":"CallExpression","start":6064,"end":6086,"callee":{"type":"MemberExpression","start":6064,"end":6083,"object":{"type":"Identifier","start":6064,"end":6078,"name":"sourceElements"},"property":{"type":"Identifier","start":6079,"end":6083,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6084,"end":6085,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":6101,"end":6124,"expression":{"type":"CallExpression","start":6101,"end":6123,"callee":{"type":"MemberExpression","start":6101,"end":6117,"object":{"type":"Identifier","start":6101,"end":6112,"name":"toBeRemoved"},"property":{"type":"Identifier","start":6113,"end":6117,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6118,"end":6122,"name":"elem"}],"optional":false}}]}},{"type":"ExpressionStatement","start":6145,"end":6215,"expression":{"type":"CallExpression","start":6145,"end":6214,"callee":{"type":"MemberExpression","start":6145,"end":6164,"object":{"type":"Identifier","start":6145,"end":6156,"name":"toBeRemoved"},"property":{"type":"Identifier","start":6157,"end":6164,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":6165,"end":6213,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6166,"end":6170,"name":"elem"}],"body":{"type":"BlockStatement","start":6175,"end":6213,"body":[{"type":"ExpressionStatement","start":6177,"end":6211,"expression":{"type":"CallExpression","start":6177,"end":6210,"callee":{"type":"MemberExpression","start":6177,"end":6204,"object":{"type":"MemberExpression","start":6177,"end":6192,"object":{"type":"Identifier","start":6177,"end":6181,"name":"elem"},"property":{"type":"Identifier","start":6182,"end":6192,"name":"parentNode"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6193,"end":6204,"name":"removeChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6205,"end":6209,"name":"elem"}],"optional":false}}]}}],"optional":false}}]}}},{"type":"MethodDefinition","start":6412,"end":6486,"static":false,"computed":false,"key":{"type":"Identifier","start":6412,"end":6423,"name":"description"},"kind":"method","value":{"type":"FunctionExpression","start":6423,"end":6486,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":6426,"end":6486,"body":[{"type":"ReturnStatement","start":6437,"end":6479,"argument":{"type":"CallExpression","start":6444,"end":6478,"callee":{"type":"MemberExpression","start":6444,"end":6470,"object":{"type":"MemberExpression","start":6444,"end":6457,"object":{"type":"ThisExpression","start":6444,"end":6448},"property":{"type":"Identifier","start":6449,"end":6457,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6458,"end":6470,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6471,"end":6477,"value":"desc","raw":"'desc'"}],"optional":false}}]}}},{"type":"MethodDefinition","start":6743,"end":6816,"static":false,"computed":false,"key":{"type":"Identifier","start":6743,"end":6750,"name":"meaning"},"kind":"method","value":{"type":"FunctionExpression","start":6750,"end":6816,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":6753,"end":6816,"body":[{"type":"ReturnStatement","start":6764,"end":6809,"argument":{"type":"CallExpression","start":6771,"end":6808,"callee":{"type":"MemberExpression","start":6771,"end":6797,"object":{"type":"MemberExpression","start":6771,"end":6784,"object":{"type":"ThisExpression","start":6771,"end":6775},"property":{"type":"Identifier","start":6776,"end":6784,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6785,"end":6797,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6798,"end":6807,"value":"meaning","raw":"'meaning'"}],"optional":false}}]}}},{"type":"MethodDefinition","start":7030,"end":7096,"static":false,"computed":false,"key":{"type":"Identifier","start":7030,"end":7062,"name":"supportsSetDescriptionAndMeaning"},"kind":"method","value":{"type":"FunctionExpression","start":7062,"end":7096,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":7065,"end":7096,"body":[{"type":"ReturnStatement","start":7076,"end":7089,"argument":{"type":"Literal","start":7083,"end":7088,"value":false,"raw":"false"}}]}}},{"type":"MethodDefinition","start":7210,"end":7284,"static":false,"computed":false,"key":{"type":"Identifier","start":7210,"end":7224,"name":"setDescription"},"kind":"method","value":{"type":"FunctionExpression","start":7224,"end":7284,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7225,"end":7236,"name":"description"}],"body":{"type":"BlockStatement","start":7238,"end":7284,"body":[]}}},{"type":"MethodDefinition","start":7386,"end":7452,"static":false,"computed":false,"key":{"type":"Identifier","start":7386,"end":7396,"name":"setMeaning"},"kind":"method","value":{"type":"FunctionExpression","start":7396,"end":7452,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7397,"end":7404,"name":"meaning"}],"body":{"type":"BlockStatement","start":7406,"end":7452,"body":[]}}},{"type":"MethodDefinition","start":7555,"end":7591,"static":false,"computed":false,"key":{"type":"Identifier","start":7555,"end":7560,"name":"notes"},"kind":"method","value":{"type":"FunctionExpression","start":7560,"end":7591,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":7563,"end":7591,"body":[{"type":"ReturnStatement","start":7574,"end":7584,"argument":{"type":"ArrayExpression","start":7581,"end":7583,"elements":[]}}]}}},{"type":"MethodDefinition","start":7766,"end":7816,"static":false,"computed":false,"key":{"type":"Identifier","start":7766,"end":7782,"name":"supportsSetNotes"},"kind":"method","value":{"type":"FunctionExpression","start":7782,"end":7816,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":7785,"end":7816,"body":[{"type":"ReturnStatement","start":7796,"end":7809,"argument":{"type":"Literal","start":7803,"end":7808,"value":false,"raw":"false"}}]}}},{"type":"MethodDefinition","start":7948,"end":8013,"static":false,"computed":false,"key":{"type":"Identifier","start":7948,"end":7956,"name":"setNotes"},"kind":"method","value":{"type":"FunctionExpression","start":7956,"end":8013,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7957,"end":7965,"name":"newNotes"}],"body":{"type":"BlockStatement","start":7967,"end":8013,"body":[]}}},{"type":"MethodDefinition","start":8363,"end":8457,"static":false,"computed":false,"key":{"type":"Identifier","start":8363,"end":8386,"name":"cloneWithSourceAsTarget"},"kind":"method","value":{"type":"FunctionExpression","start":8386,"end":8457,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8387,"end":8400,"name":"isDefaultLang"},{"type":"Identifier","start":8402,"end":8413,"name":"copyContent"},{"type":"Identifier","start":8415,"end":8425,"name":"targetFile"}],"body":{"type":"BlockStatement","start":8427,"end":8457,"body":[{"type":"ReturnStatement","start":8438,"end":8450,"argument":{"type":"ThisExpression","start":8445,"end":8449}}]}}},{"type":"MethodDefinition","start":8651,"end":8728,"static":false,"computed":false,"key":{"type":"Identifier","start":8651,"end":8668,"name":"useSourceAsTarget"},"kind":"method","value":{"type":"FunctionExpression","start":8668,"end":8728,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8669,"end":8682,"name":"isDefaultLang"},{"type":"Identifier","start":8684,"end":8695,"name":"copyContent"}],"body":{"type":"BlockStatement","start":8697,"end":8728,"body":[]}}},{"type":"MethodDefinition","start":8933,"end":9048,"static":false,"computed":false,"key":{"type":"Identifier","start":8933,"end":8948,"name":"translateNative"},"kind":"method","value":{"type":"FunctionExpression","start":8948,"end":9048,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8949,"end":8960,"name":"translation"}],"body":{"type":"BlockStatement","start":8962,"end":9048,"body":[{"type":"ThrowStatement","start":8973,"end":9041,"argument":{"type":"NewExpression","start":8979,"end":9040,"callee":{"type":"Identifier","start":8983,"end":8988,"name":"Error"},"arguments":[{"type":"Literal","start":8989,"end":9039,"value":"You cannot translate xmb files, use xtb instead.","raw":"'You cannot translate xmb files, use xtb instead.'"}]}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":9053,"end":29059}]},"code":"import { DOMUtilities } from './dom-utilities';\r\nimport { AbstractTransUnit } from './abstract-trans-unit';\r\nimport { XmbMessageParser } from './xmb-message-parser';\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XMB file.\r\n */\r\nexport class XmbTransUnit extends AbstractTransUnit {\r\n    constructor(_element, _id, _translationMessagesFile) {\r\n        super(_element, _id, _translationMessagesFile);\r\n    }\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return source and linenumber\r\n     */\r\n    static parseSourceAndPos(sourceAndPos) {\r\n        const index = sourceAndPos.lastIndexOf(':');\r\n        if (index < 0) {\r\n            return {\r\n                sourcefile: sourceAndPos,\r\n                linenumber: 0\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                sourcefile: sourceAndPos.substring(0, index),\r\n                linenumber: XmbTransUnit.parseLineNumber(sourceAndPos.substring(index + 1))\r\n            };\r\n        }\r\n    }\r\n    static parseLineNumber(lineNumberString) {\r\n        return Number.parseInt(lineNumberString, 10);\r\n    }\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return source content\r\n     */\r\n    sourceContent() {\r\n        let msgContent = DOMUtilities.getXMLContent(this._element);\r\n        const reSourceElem = /<source>.*<\\/source>/g;\r\n        msgContent = msgContent.replace(reSourceElem, '');\r\n        return msgContent;\r\n    }\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetSourceContent() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    setSourceContent(newContent) {\r\n        // not supported\r\n    }\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    messageParser() {\r\n        return new XmbMessageParser();\r\n    }\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    createSourceContentNormalized() {\r\n        return this.messageParser().createNormalizedMessageFromXML(this._element, null);\r\n    }\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    targetContent() {\r\n        // in fact, target and source are just the same in xmb\r\n        return this.sourceContent();\r\n    }\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    targetContentNormalized() {\r\n        return new XmbMessageParser().createNormalizedMessageFromXML(this._element, this.sourceContentNormalized());\r\n    }\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     */\r\n    nativeTargetState() {\r\n        return null; // not supported in xmb\r\n    }\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    mapStateToNativeState(state) {\r\n        return state;\r\n    }\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    mapNativeStateToState(nativeState) {\r\n        return nativeState;\r\n    }\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param nativeState nativeState\r\n     */\r\n    setNativeTargetState(nativeState) {\r\n        // not supported for xmb\r\n    }\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    sourceReferences() {\r\n        const sourceElements = this._element.getElementsByTagName('source');\r\n        const sourceRefs = [];\r\n        for (let i = 0; i < sourceElements.length; i++) {\r\n            const elem = sourceElements.item(i);\r\n            const sourceAndPos = DOMUtilities.getPCDATA(elem);\r\n            sourceRefs.push(XmbTransUnit.parseSourceAndPos(sourceAndPos));\r\n        }\r\n        return sourceRefs;\r\n    }\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    setSourceReferences(sourceRefs) {\r\n        this.removeAllSourceReferences();\r\n        let insertPosition = this._element.childNodes.item(0);\r\n        for (let i = sourceRefs.length - 1; i >= 0; i--) {\r\n            const ref = sourceRefs[i];\r\n            const source = this._element.ownerDocument.createElement('source');\r\n            source.appendChild(this._element.ownerDocument.createTextNode(ref.sourcefile + ':' + ref.linenumber.toString(10)));\r\n            this._element.insertBefore(source, insertPosition);\r\n            insertPosition = source;\r\n        }\r\n    }\r\n    removeAllSourceReferences() {\r\n        const sourceElements = this._element.getElementsByTagName('source');\r\n        const toBeRemoved = [];\r\n        for (let i = 0; i < sourceElements.length; i++) {\r\n            const elem = sourceElements.item(i);\r\n            toBeRemoved.push(elem);\r\n        }\r\n        toBeRemoved.forEach((elem) => { elem.parentNode.removeChild(elem); });\r\n    }\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xmb this is stored in the attribute \"desc\".\r\n     */\r\n    description() {\r\n        return this._element.getAttribute('desc');\r\n    }\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xmb this is stored in the attribute \"meaning\".\r\n     */\r\n    meaning() {\r\n        return this._element.getAttribute('meaning');\r\n    }\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetDescriptionAndMeaning() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    setDescription(description) {\r\n        // not supported, do nothing\r\n    }\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    setMeaning(meaning) {\r\n        // not supported, do nothing\r\n    }\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     */\r\n    notes() {\r\n        return [];\r\n    }\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetNotes() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     */\r\n    setNotes(newNotes) {\r\n        // not supported, do nothing\r\n    }\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xmb there is nothing to do, because there is only a target, no source.\r\n     */\r\n    cloneWithSourceAsTarget(isDefaultLang, copyContent, targetFile) {\r\n        return this;\r\n    }\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    useSourceAsTarget(isDefaultLang, copyContent) {\r\n        // do nothing\r\n    }\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * In fact, xmb cannot be translated.\r\n     * So this throws an error.\r\n     * @param translation translation\r\n     */\r\n    translateNative(translation) {\r\n        throw new Error('You cannot translate xmb files, use xtb instead.');\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-trans-unit.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xmb-message-parser.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xmb-trans-unit.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { DOMUtilities } from './dom-utilities';\r\nimport { AbstractTransUnit } from './abstract-trans-unit';\r\nimport { XmbMessageParser } from './xmb-message-parser';\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XMB file.\r\n */\r\nexport class XmbTransUnit extends AbstractTransUnit {\r\n    constructor(_element, _id, _translationMessagesFile) {\r\n        super(_element, _id, _translationMessagesFile);\r\n    }\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return source and linenumber\r\n     */\r\n    static parseSourceAndPos(sourceAndPos) {\r\n        const index = sourceAndPos.lastIndexOf(':');\r\n        if (index < 0) {\r\n            return {\r\n                sourcefile: sourceAndPos,\r\n                linenumber: 0\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                sourcefile: sourceAndPos.substring(0, index),\r\n                linenumber: XmbTransUnit.parseLineNumber(sourceAndPos.substring(index + 1))\r\n            };\r\n        }\r\n    }\r\n    static parseLineNumber(lineNumberString) {\r\n        return Number.parseInt(lineNumberString, 10);\r\n    }\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return source content\r\n     */\r\n    sourceContent() {\r\n        let msgContent = DOMUtilities.getXMLContent(this._element);\r\n        const reSourceElem = /<source>.*<\\/source>/g;\r\n        msgContent = msgContent.replace(reSourceElem, '');\r\n        return msgContent;\r\n    }\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetSourceContent() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    setSourceContent(newContent) {\r\n        // not supported\r\n    }\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    messageParser() {\r\n        return new XmbMessageParser();\r\n    }\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    createSourceContentNormalized() {\r\n        return this.messageParser().createNormalizedMessageFromXML(this._element, null);\r\n    }\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    targetContent() {\r\n        // in fact, target and source are just the same in xmb\r\n        return this.sourceContent();\r\n    }\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    targetContentNormalized() {\r\n        return new XmbMessageParser().createNormalizedMessageFromXML(this._element, this.sourceContentNormalized());\r\n    }\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     */\r\n    nativeTargetState() {\r\n        return null; // not supported in xmb\r\n    }\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    mapStateToNativeState(state) {\r\n        return state;\r\n    }\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    mapNativeStateToState(nativeState) {\r\n        return nativeState;\r\n    }\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param nativeState nativeState\r\n     */\r\n    setNativeTargetState(nativeState) {\r\n        // not supported for xmb\r\n    }\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    sourceReferences() {\r\n        const sourceElements = this._element.getElementsByTagName('source');\r\n        const sourceRefs = [];\r\n        for (let i = 0; i < sourceElements.length; i++) {\r\n            const elem = sourceElements.item(i);\r\n            const sourceAndPos = DOMUtilities.getPCDATA(elem);\r\n            sourceRefs.push(XmbTransUnit.parseSourceAndPos(sourceAndPos));\r\n        }\r\n        return sourceRefs;\r\n    }\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    setSourceReferences(sourceRefs) {\r\n        this.removeAllSourceReferences();\r\n        let insertPosition = this._element.childNodes.item(0);\r\n        for (let i = sourceRefs.length - 1; i >= 0; i--) {\r\n            const ref = sourceRefs[i];\r\n            const source = this._element.ownerDocument.createElement('source');\r\n            source.appendChild(this._element.ownerDocument.createTextNode(ref.sourcefile + ':' + ref.linenumber.toString(10)));\r\n            this._element.insertBefore(source, insertPosition);\r\n            insertPosition = source;\r\n        }\r\n    }\r\n    removeAllSourceReferences() {\r\n        const sourceElements = this._element.getElementsByTagName('source');\r\n        const toBeRemoved = [];\r\n        for (let i = 0; i < sourceElements.length; i++) {\r\n            const elem = sourceElements.item(i);\r\n            toBeRemoved.push(elem);\r\n        }\r\n        toBeRemoved.forEach((elem) => { elem.parentNode.removeChild(elem); });\r\n    }\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xmb this is stored in the attribute \"desc\".\r\n     */\r\n    description() {\r\n        return this._element.getAttribute('desc');\r\n    }\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xmb this is stored in the attribute \"meaning\".\r\n     */\r\n    meaning() {\r\n        return this._element.getAttribute('meaning');\r\n    }\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetDescriptionAndMeaning() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    setDescription(description) {\r\n        // not supported, do nothing\r\n    }\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    setMeaning(meaning) {\r\n        // not supported, do nothing\r\n    }\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     */\r\n    notes() {\r\n        return [];\r\n    }\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetNotes() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     */\r\n    setNotes(newNotes) {\r\n        // not supported, do nothing\r\n    }\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xmb there is nothing to do, because there is only a target, no source.\r\n     */\r\n    cloneWithSourceAsTarget(isDefaultLang, copyContent, targetFile) {\r\n        return this;\r\n    }\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    useSourceAsTarget(isDefaultLang, copyContent) {\r\n        // do nothing\r\n    }\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * In fact, xmb cannot be translated.\r\n     * So this throws an error.\r\n     * @param translation translation\r\n     */\r\n    translateNative(translation) {\r\n        throw new Error('You cannot translate xmb files, use xtb instead.');\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"xmb-trans-unit.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/xmb-trans-unit.ts"],"names":[],"mappings":[[[0,0,4,0],[7,0,4,7],[9,0,4,8],[21,0,4,20],[23,0,4,21],[29,0,4,27],[46,0,4,44],[47,0,4,45]],[[0,0,5,0],[7,0,5,7],[9,0,5,8],[26,0,5,25],[28,0,5,26],[34,0,5,32],[57,0,5,55],[58,0,5,56]],[[0,0,6,0],[7,0,6,7],[9,0,6,8],[25,0,6,24],[27,0,6,25],[33,0,6,31],[55,0,6,53],[56,0,6,54]],[[0,0,9,0]],[],[],[[3,0,12,3]],[[0,0,14,0],[6,0,14,6],[13,0,14,13],[25,0,14,26],[34,0,14,34],[51,0,14,51]],[[4,0,16,4],[16,0,16,16],[24,0,16,33],[26,0,16,35],[29,0,16,46],[31,0,16,48],[55,0,16,98]],[[8,0,17,8],[13,0,17,13],[14,0,17,14],[22,0,17,22],[24,0,17,24],[27,0,17,27],[29,0,17,29],[53,0,17,53],[54,0,17,54],[55,0,17,55]],[[4,0,18,4],[5,0,18,5]],[[4,0,20,4]],[],[],[],[[7,0,24,7]],[[4,0,25,12],[10,0,25,18],[11,0,25,19],[28,0,25,36],[29,0,25,37],[41,0,25,57]],[[8,0,26,8],[14,0,26,14],[19,0,26,19],[22,0,26,22],[34,0,26,34],[35,0,26,35],[46,0,26,46],[47,0,26,47],[50,0,26,50],[51,0,26,51],[52,0,26,52]],[[8,0,27,8],[12,0,27,12],[17,0,27,17],[20,0,27,20],[21,0,27,21],[23,0,27,23]],[[12,0,28,12],[19,0,28,19]],[[16,0,29,16],[26,0,29,26],[28,0,29,28],[40,0,29,40]],[[16,0,30,16],[26,0,30,26],[28,0,30,28],[29,0,30,29]],[[13,0,31,13],[14,0,31,14]],[[9,0,32,9]],[[13,0,32,15]],[[12,0,33,12],[19,0,33,19]],[[16,0,34,16],[26,0,34,26],[28,0,34,28],[40,0,34,40],[41,0,34,41],[50,0,34,50],[51,0,34,51],[52,0,34,52],[54,0,34,54],[59,0,34,59],[60,0,34,60]],[[16,0,35,16],[26,0,35,26],[28,0,35,28],[40,0,35,40],[41,0,35,41],[56,0,35,56],[57,0,35,57],[69,0,35,69],[70,0,35,70],[79,0,35,79],[80,0,35,80],[85,0,35,85],[88,0,35,88],[89,0,35,89],[90,0,35,90],[91,0,35,91]],[[13,0,36,13],[14,0,36,14]],[[9,0,37,9]],[[4,0,38,4],[5,0,38,5]],[[4,0,40,12],[10,0,40,18],[11,0,40,19],[26,0,40,34],[27,0,40,35],[43,0,40,59]],[[8,0,41,8],[15,0,41,15],[21,0,41,21],[22,0,41,22],[30,0,41,30],[31,0,41,31],[47,0,41,47],[49,0,41,49],[51,0,41,51],[52,0,41,52],[53,0,41,53]],[[4,0,42,4],[5,0,42,5]],[[4,0,44,4]],[],[],[],[[7,0,48,7]],[[4,0,49,11],[17,0,49,24]],[[8,0,50,8],[12,0,50,12],[22,0,50,22],[25,0,50,25],[37,0,50,37],[38,0,50,38],[51,0,50,51],[52,0,50,52],[56,0,50,56],[57,0,50,57],[65,0,50,65],[66,0,50,66],[67,0,50,67]],[[8,0,51,8],[14,0,51,14],[26,0,51,26],[29,0,51,37],[52,0,51,60],[53,0,51,61]],[[8,0,52,8],[18,0,52,18],[21,0,52,21],[31,0,52,31],[32,0,52,32],[39,0,52,39],[40,0,52,40],[52,0,52,52],[54,0,52,54],[56,0,52,56],[57,0,52,57],[58,0,52,58]],[[8,0,53,8],[15,0,53,15],[25,0,53,25],[26,0,53,26]],[[4,0,54,4],[5,0,54,5]],[[4,0,56,4]],[],[],[],[[7,0,60,7]],[[4,0,61,4],[28,0,61,28]],[[8,0,62,8],[15,0,62,15],[20,0,62,20],[21,0,62,21]],[[4,0,63,4],[5,0,63,5]],[[4,0,65,4]],[],[],[],[],[[7,0,70,7]],[[4,0,71,11],[20,0,71,27],[21,0,71,28],[31,0,71,46]],[[8,0,72,8],[24,0,72,24]],[[4,0,73,4],[5,0,73,5]],[[4,0,75,4]],[],[[7,0,77,7]],[[4,0,78,14],[17,0,78,27]],[[8,0,79,8],[15,0,79,15],[19,0,79,19],[35,0,79,35],[37,0,79,37],[38,0,79,38]],[[4,0,80,4],[5,0,80,5]],[[4,0,82,4]],[],[[7,0,84,7]],[[4,0,85,11],[33,0,85,40]],[[8,0,86,8],[15,0,86,15],[19,0,86,19],[20,0,86,20],[33,0,86,33],[35,0,86,35],[36,0,86,36],[66,0,86,66],[67,0,86,67],[71,0,86,71],[72,0,86,72],[80,0,86,80],[82,0,86,82],[86,0,86,86],[87,0,86,87],[88,0,86,88]],[[4,0,87,4],[5,0,87,5]],[[4,0,89,4]],[],[[7,0,91,7]],[[4,0,92,11],[17,0,92,24]],[[8,0,93,8],[62,0,93,62]],[[8,0,94,8],[15,0,94,15],[19,0,94,19],[20,0,94,20],[33,0,94,33],[35,0,94,35],[36,0,94,36]],[[4,0,95,4],[5,0,95,5]],[[4,0,97,4]],[],[],[[7,0,100,7]],[[4,0,101,4],[27,0,101,27]],[[8,0,102,8],[15,0,102,15],[19,0,102,19],[35,0,102,35],[37,0,102,37],[38,0,102,38],[68,0,102,68],[69,0,102,69],[73,0,102,73],[74,0,102,74],[82,0,102,82],[84,0,102,84],[88,0,102,88],[89,0,102,89],[112,0,102,112],[114,0,102,114],[115,0,102,115],[116,0,102,116]],[[4,0,103,4],[5,0,103,5]],[[4,0,105,4]],[],[],[[7,0,108,7]],[[4,0,109,11],[21,0,109,28]],[[8,0,110,8],[15,0,110,15],[19,0,110,19],[20,0,110,20],[21,0,110,21],[44,0,110,44]],[[4,0,111,4],[5,0,111,5]],[[4,0,113,4]],[],[],[],[],[],[[7,0,119,7]],[[4,0,120,14],[25,0,120,35],[26,0,120,36],[31,0,120,49]],[[8,0,121,8],[15,0,121,15],[20,0,121,20],[21,0,121,21]],[[4,0,122,4],[5,0,122,5]],[[4,0,124,4]],[],[],[],[[7,0,128,7]],[[4,0,129,14],[25,0,129,35],[26,0,129,36],[37,0,129,55]],[[8,0,130,8],[15,0,130,15],[26,0,130,26],[27,0,130,27]],[[4,0,131,4],[5,0,131,5]],[[4,0,133,4]],[],[],[],[[7,0,137,7]],[[4,0,138,14],[24,0,138,34],[25,0,138,35],[36,0,138,54]],[[8,0,139,8],[32,0,139,32]],[[4,0,140,4],[5,0,140,5]],[[4,0,142,4]],[],[],[],[],[],[],[[7,0,149,7]],[[4,0,150,11],[20,0,150,27]],[[8,0,151,8],[14,0,151,14],[28,0,151,28],[31,0,151,31],[35,0,151,35],[36,0,151,36],[44,0,151,44],[45,0,151,45],[65,0,151,65],[66,0,151,66],[74,0,151,74],[75,0,151,75],[76,0,151,76]],[[8,0,152,8],[14,0,152,14],[24,0,152,24],[27,0,152,73],[29,0,152,75],[30,0,152,76]],[[8,0,153,8],[13,0,153,13],[17,0,153,17],[18,0,153,18],[21,0,153,21],[22,0,153,22],[24,0,153,24],[25,0,153,25],[28,0,153,28],[42,0,153,42],[43,0,153,43],[49,0,153,49],[51,0,153,51],[52,0,153,52],[54,0,153,54],[56,0,153,56]],[[12,0,154,12],[18,0,154,18],[22,0,154,22],[25,0,154,25],[39,0,154,39],[40,0,154,40],[44,0,154,44],[45,0,154,45],[46,0,154,46],[47,0,154,47],[48,0,154,48]],[[12,0,155,12],[18,0,155,18],[30,0,155,30],[33,0,155,41],[45,0,155,53],[46,0,155,54],[55,0,155,63],[56,0,155,64],[60,0,155,68],[61,0,155,69],[62,0,155,70]],[[12,0,156,12],[22,0,156,22],[23,0,156,23],[27,0,156,27],[28,0,156,28],[40,0,156,40],[41,0,156,41],[58,0,156,58],[59,0,156,59],[71,0,156,71],[72,0,156,72],[73,0,156,73],[74,0,156,74]],[[9,0,157,9]],[[8,0,158,8],[15,0,158,15],[25,0,158,25],[26,0,158,26]],[[4,0,159,4],[5,0,159,5]],[[4,0,161,4]],[],[],[],[],[[7,0,166,7]],[[4,0,167,11],[23,0,167,30],[24,0,167,31],[34,0,167,85]],[[8,0,168,8],[12,0,168,12],[13,0,168,13],[38,0,168,38],[40,0,168,40],[41,0,168,41]],[[8,0,169,8],[12,0,169,12],[26,0,169,26],[29,0,169,29],[33,0,169,33],[34,0,169,34],[42,0,169,42],[43,0,169,43],[53,0,169,53],[54,0,169,54],[58,0,169,58],[59,0,169,59],[60,0,169,60],[61,0,169,61],[62,0,169,62]],[[8,0,170,8],[13,0,170,13],[17,0,170,17],[18,0,170,18],[21,0,170,21],[31,0,170,31],[32,0,170,32],[38,0,170,38],[41,0,170,41],[42,0,170,42],[44,0,170,44],[45,0,170,45],[49,0,170,49],[50,0,170,50],[52,0,170,52],[53,0,170,53],[55,0,170,55],[57,0,170,57]],[[12,0,171,12],[18,0,171,18],[21,0,171,21],[24,0,171,24],[34,0,171,34],[35,0,171,35],[36,0,171,36],[37,0,171,37],[38,0,171,38]],[[12,0,172,12],[18,0,172,18],[24,0,172,24],[27,0,172,27],[31,0,172,31],[32,0,172,32],[40,0,172,40],[41,0,172,41],[54,0,172,54],[55,0,172,55],[68,0,172,68],[69,0,172,69],[77,0,172,77],[78,0,172,78],[79,0,172,79]],[[12,0,173,12],[18,0,173,18],[19,0,173,19],[30,0,173,30],[31,0,173,31],[35,0,173,35],[36,0,173,36],[44,0,173,44],[45,0,173,45],[58,0,173,58],[59,0,173,59],[73,0,173,73],[74,0,173,74],[77,0,173,77],[78,0,173,78],[88,0,173,88],[91,0,173,91],[94,0,173,94],[97,0,173,97],[100,0,173,100],[101,0,173,101],[111,0,173,111],[112,0,173,112],[120,0,173,120],[121,0,173,121],[123,0,173,123],[124,0,173,124],[125,0,173,125],[126,0,173,126],[127,0,173,127]],[[12,0,174,12],[16,0,174,16],[17,0,174,17],[25,0,174,25],[26,0,174,26],[38,0,174,38],[39,0,174,39],[45,0,174,45],[47,0,174,47],[61,0,174,61],[62,0,174,62],[63,0,174,63]],[[12,0,175,12],[26,0,175,26],[29,0,175,29],[35,0,175,35],[36,0,175,36]],[[9,0,176,9]],[[4,0,177,4],[5,0,177,5]],[[4,0,179,12],[29,0,179,37]],[[8,0,180,8],[14,0,180,14],[28,0,180,28],[31,0,180,31],[35,0,180,35],[36,0,180,36],[44,0,180,44],[45,0,180,45],[65,0,180,65],[66,0,180,66],[74,0,180,74],[75,0,180,75],[76,0,180,76]],[[8,0,181,8],[14,0,181,14],[25,0,181,25],[28,0,181,28],[30,0,181,30],[31,0,181,31]],[[8,0,182,8],[13,0,182,13],[17,0,182,17],[18,0,182,18],[21,0,182,21],[22,0,182,22],[24,0,182,24],[25,0,182,25],[28,0,182,28],[42,0,182,42],[43,0,182,43],[49,0,182,49],[51,0,182,51],[52,0,182,52],[54,0,182,54],[56,0,182,56]],[[12,0,183,12],[18,0,183,18],[22,0,183,22],[25,0,183,25],[39,0,183,39],[40,0,183,40],[44,0,183,44],[45,0,183,45],[46,0,183,46],[47,0,183,47],[48,0,183,48]],[[12,0,184,12],[23,0,184,23],[24,0,184,24],[28,0,184,28],[29,0,184,29],[33,0,184,33],[34,0,184,34],[35,0,184,35]],[[9,0,185,9]],[[8,0,186,8],[19,0,186,19],[20,0,186,20],[27,0,186,27],[28,0,186,28],[29,0,186,29],[33,0,186,33],[35,0,186,35],[37,0,186,37],[40,0,186,39],[44,0,186,43],[45,0,186,44],[55,0,186,54],[56,0,186,55],[67,0,186,66],[68,0,186,67],[72,0,186,71],[73,0,186,72],[74,0,186,73],[75,0,186,74],[76,0,186,75],[77,0,186,76],[78,0,186,77]],[[4,0,187,4],[5,0,187,5]],[[4,0,189,4]],[],[],[],[[7,0,193,7]],[[4,0,194,11],[15,0,194,22]],[[8,0,195,8],[15,0,195,15],[19,0,195,19],[20,0,195,20],[28,0,195,28],[29,0,195,29],[41,0,195,41],[42,0,195,42],[48,0,195,48],[49,0,195,49],[50,0,195,50]],[[4,0,196,4],[5,0,196,5]],[[4,0,198,4]],[],[],[],[],[[7,0,203,7]],[[4,0,204,11],[11,0,204,18]],[[8,0,205,8],[15,0,205,15],[19,0,205,19],[20,0,205,20],[28,0,205,28],[29,0,205,29],[41,0,205,41],[42,0,205,42],[51,0,205,51],[52,0,205,52],[53,0,205,53]],[[4,0,206,4],[5,0,206,5]],[[4,0,208,4]],[],[],[],[[7,0,212,7]],[[4,0,213,11],[36,0,213,43]],[[8,0,214,8],[15,0,214,15],[20,0,214,20],[21,0,214,21]],[[4,0,215,4],[5,0,215,5]],[[4,0,217,4]],[],[],[[7,0,220,7]],[[4,0,221,11],[18,0,221,25],[19,0,221,26],[30,0,221,45]],[[8,0,222,8],[36,0,222,36]],[[4,0,223,4],[5,0,223,5]],[[4,0,225,4]],[],[],[[7,0,228,7]],[[4,0,229,11],[14,0,229,21],[15,0,229,22],[22,0,229,37]],[[8,0,230,8],[36,0,230,36]],[[4,0,231,4],[5,0,231,5]],[[4,0,233,4]],[],[],[[7,0,236,7]],[[4,0,237,11],[9,0,237,16]],[[8,0,238,8],[15,0,238,15],[17,0,238,17],[18,0,238,18]],[[4,0,239,4],[5,0,239,5]],[[4,0,241,4]],[],[],[],[[7,0,245,7]],[[4,0,246,11],[20,0,246,27]],[[8,0,247,8],[15,0,247,15],[20,0,247,20],[21,0,247,21]],[[4,0,248,4],[5,0,248,5]],[[4,0,250,4]],[],[],[],[[7,0,254,7]],[[4,0,255,11],[12,0,255,19],[13,0,255,20],[21,0,255,37]],[[8,0,256,8],[36,0,256,36]],[[4,0,257,4],[5,0,257,5]],[[4,0,259,4]],[],[],[],[],[],[[7,0,265,7]],[[4,0,266,11],[27,0,266,34],[28,0,266,35],[41,0,266,57],[43,0,266,59],[54,0,266,79],[56,0,266,81],[66,0,266,117]],[[8,0,267,8],[15,0,267,15],[19,0,267,19],[20,0,267,20]],[[4,0,268,4],[5,0,268,5]],[[4,0,270,4]],[],[],[[7,0,273,7]],[[4,0,274,11],[21,0,274,28],[22,0,274,29],[35,0,274,51],[37,0,274,53],[48,0,274,73]],[[8,0,275,8],[21,0,275,21]],[[4,0,276,4],[5,0,276,5]],[[4,0,278,4]],[],[],[],[],[[7,0,283,7]],[[4,0,284,14],[19,0,284,29],[20,0,284,30],[31,0,284,49]],[[8,0,285,8],[14,0,285,14],[18,0,285,18],[23,0,285,23],[24,0,285,24],[74,0,285,74],[75,0,285,75],[76,0,285,76]],[[4,0,286,4],[5,0,286,5]],[[1,0,288,1]]],"sourcesContent":["import {ITranslationMessagesFile} from '../api/i-translation-messages-file';\r\nimport {INormalizedMessage} from '../api/i-normalized-message';\r\nimport {ITransUnit} from '../api/i-trans-unit';\r\nimport {INote} from '../api/i-note';\r\nimport {DOMUtilities} from './dom-utilities';\r\nimport {AbstractTransUnit} from './abstract-trans-unit';\r\nimport {XmbMessageParser} from './xmb-message-parser';\r\nimport {ParsedMessage} from './parsed-message';\r\nimport {AbstractMessageParser} from './abstract-message-parser';\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XMB file.\r\n */\r\n\r\nexport class XmbTransUnit extends AbstractTransUnit implements ITransUnit {\r\n\r\n    constructor(_element: Element, _id: string, _translationMessagesFile: ITranslationMessagesFile) {\r\n        super(_element, _id, _translationMessagesFile);\r\n    }\r\n\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return source and linenumber\r\n     */\r\n    private static parseSourceAndPos(sourceAndPos: string): { sourcefile: string, linenumber } {\r\n        const index = sourceAndPos.lastIndexOf(':');\r\n        if (index < 0) {\r\n            return {\r\n                sourcefile: sourceAndPos,\r\n                linenumber: 0\r\n            };\r\n        } else {\r\n            return {\r\n                sourcefile: sourceAndPos.substring(0, index),\r\n                linenumber: XmbTransUnit.parseLineNumber(sourceAndPos.substring(index + 1))\r\n            };\r\n        }\r\n    }\r\n\r\n    private static parseLineNumber(lineNumberString: string): number {\r\n        return Number.parseInt(lineNumberString, 10);\r\n    }\r\n\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return source content\r\n     */\r\n    public sourceContent(): string {\r\n        let msgContent = DOMUtilities.getXMLContent(this._element);\r\n        const reSourceElem: RegExp = /<source>.*<\\/source>/g;\r\n        msgContent = msgContent.replace(reSourceElem, '');\r\n        return msgContent;\r\n    }\r\n\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetSourceContent(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    public setSourceContent(newContent: string) {\r\n        // not supported\r\n    }\r\n\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    protected messageParser(): AbstractMessageParser {\r\n        return new XmbMessageParser();\r\n    }\r\n\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    public createSourceContentNormalized(): ParsedMessage {\r\n        return this.messageParser().createNormalizedMessageFromXML(this._element, null);\r\n    }\r\n\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    public targetContent(): string {\r\n        // in fact, target and source are just the same in xmb\r\n        return this.sourceContent();\r\n    }\r\n\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    targetContentNormalized(): INormalizedMessage {\r\n        return new XmbMessageParser().createNormalizedMessageFromXML(this._element, this.sourceContentNormalized());\r\n    }\r\n\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     */\r\n    public nativeTargetState(): string {\r\n        return null; // not supported in xmb\r\n    }\r\n\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    protected mapStateToNativeState(state: string): string {\r\n        return state;\r\n    }\r\n\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    protected mapNativeStateToState(nativeState: string): string {\r\n        return nativeState;\r\n    }\r\n\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param nativeState nativeState\r\n     */\r\n    protected setNativeTargetState(nativeState: string) {\r\n        // not supported for xmb\r\n    }\r\n\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    public sourceReferences(): { sourcefile: string, linenumber: number }[] {\r\n        const sourceElements = this._element.getElementsByTagName('source');\r\n        const sourceRefs: { sourcefile: string, linenumber: number }[] = [];\r\n        for (let i = 0; i < sourceElements.length; i++) {\r\n            const elem = sourceElements.item(i);\r\n            const sourceAndPos: string = DOMUtilities.getPCDATA(elem);\r\n            sourceRefs.push(XmbTransUnit.parseSourceAndPos(sourceAndPos));\r\n        }\r\n        return sourceRefs;\r\n    }\r\n\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    public setSourceReferences(sourceRefs: {sourcefile: string, linenumber: number}[]) {\r\n        this.removeAllSourceReferences();\r\n        let insertPosition = this._element.childNodes.item(0);\r\n        for (let i = sourceRefs.length - 1; i >= 0; i--) {\r\n            const ref = sourceRefs[i];\r\n            const source = this._element.ownerDocument.createElement('source');\r\n            source.appendChild(this._element.ownerDocument.createTextNode(ref.sourcefile + ':' + ref.linenumber.toString(10)));\r\n            this._element.insertBefore(source, insertPosition);\r\n            insertPosition = source;\r\n        }\r\n    }\r\n\r\n    private removeAllSourceReferences() {\r\n        const sourceElements = this._element.getElementsByTagName('source');\r\n        const toBeRemoved = [];\r\n        for (let i = 0; i < sourceElements.length; i++) {\r\n            const elem = sourceElements.item(i);\r\n            toBeRemoved.push(elem);\r\n        }\r\n        toBeRemoved.forEach((elem) => {elem.parentNode.removeChild(elem); });\r\n    }\r\n\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xmb this is stored in the attribute \"desc\".\r\n     */\r\n    public description(): string {\r\n        return this._element.getAttribute('desc');\r\n    }\r\n\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xmb this is stored in the attribute \"meaning\".\r\n     */\r\n    public meaning(): string {\r\n        return this._element.getAttribute('meaning');\r\n    }\r\n\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    public supportsSetDescriptionAndMeaning(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    public setDescription(description: string) {\r\n        // not supported, do nothing\r\n    }\r\n\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    public setMeaning(meaning: string) {\r\n        // not supported, do nothing\r\n    }\r\n\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     */\r\n    public notes(): INote[] {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    public supportsSetNotes(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     */\r\n    public setNotes(newNotes: INote[]) {\r\n        // not supported, do nothing\r\n    }\r\n\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xmb there is nothing to do, because there is only a target, no source.\r\n     */\r\n    public cloneWithSourceAsTarget(isDefaultLang: boolean, copyContent: boolean, targetFile: ITranslationMessagesFile): AbstractTransUnit {\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    public useSourceAsTarget(isDefaultLang: boolean, copyContent: boolean) {\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * In fact, xmb cannot be translated.\r\n     * So this throws an error.\r\n     * @param translation translation\r\n     */\r\n    protected translateNative(translation: string) {\r\n        throw new Error('You cannot translate xmb files, use xtb instead.');\r\n    }\r\n\r\n}\r\n"]},"resolvedIds":{"./dom-utilities":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./abstract-trans-unit":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-trans-unit.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./xmb-message-parser":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xmb-message-parser.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":23637,"body":[{"type":"ImportDeclaration","start":0,"end":72,"specifiers":[{"type":"ImportSpecifier","start":9,"end":19,"imported":{"type":"Identifier","start":9,"end":19,"name":"FORMAT_XMB"},"local":{"type":"Identifier","start":9,"end":19,"name":"FORMAT_XMB"}},{"type":"ImportSpecifier","start":21,"end":33,"imported":{"type":"Identifier","start":21,"end":33,"name":"FILETYPE_XMB"},"local":{"type":"Identifier","start":21,"end":33,"name":"FILETYPE_XMB"}},{"type":"ImportSpecifier","start":35,"end":45,"imported":{"type":"Identifier","start":35,"end":45,"name":"FORMAT_XTB"},"local":{"type":"Identifier","start":35,"end":45,"name":"FORMAT_XTB"}}],"source":{"type":"Literal","start":53,"end":71,"value":"../api/constants","raw":"'../api/constants'"}},{"type":"ImportDeclaration","start":74,"end":104,"specifiers":[{"type":"ImportSpecifier","start":83,"end":89,"imported":{"type":"Identifier","start":83,"end":89,"name":"format"},"local":{"type":"Identifier","start":83,"end":89,"name":"format"}}],"source":{"type":"Literal","start":97,"end":103,"value":"util","raw":"'util'"}},{"type":"ImportDeclaration","start":106,"end":154,"specifiers":[{"type":"ImportSpecifier","start":115,"end":127,"imported":{"type":"Identifier","start":115,"end":127,"name":"XmbTransUnit"},"local":{"type":"Identifier","start":115,"end":127,"name":"XmbTransUnit"}}],"source":{"type":"Literal","start":135,"end":153,"value":"./xmb-trans-unit","raw":"'./xmb-trans-unit'"}},{"type":"ImportDeclaration","start":156,"end":243,"specifiers":[{"type":"ImportSpecifier","start":165,"end":196,"imported":{"type":"Identifier","start":165,"end":196,"name":"AbstractTranslationMessagesFile"},"local":{"type":"Identifier","start":165,"end":196,"name":"AbstractTranslationMessagesFile"}}],"source":{"type":"Literal","start":204,"end":242,"value":"./abstract-translation-messages-file","raw":"'./abstract-translation-messages-file'"}},{"type":"ExportNamedDeclaration","start":393,"end":702,"declaration":{"type":"VariableDeclaration","start":400,"end":702,"declarations":[{"type":"VariableDeclarator","start":406,"end":701,"id":{"type":"Identifier","start":406,"end":417,"name":"XTB_DOCTYPE"},"init":{"type":"TemplateLiteral","start":420,"end":701,"expressions":[],"quasis":[{"type":"TemplateElement","start":421,"end":700,"value":{"raw":"<!DOCTYPE translationbundle [\n  <!ELEMENT translationbundle (translation)*>\n  <!ATTLIST translationbundle lang CDATA #REQUIRED>\n  <!ELEMENT translation (#PCDATA|ph)*>\n  <!ATTLIST translation id CDATA #REQUIRED>\n  <!ELEMENT ph EMPTY>\n  <!ATTLIST ph name CDATA #REQUIRED>\n]>","cooked":"<!DOCTYPE translationbundle [\n  <!ELEMENT translationbundle (translation)*>\n  <!ATTLIST translationbundle lang CDATA #REQUIRED>\n  <!ELEMENT translation (#PCDATA|ph)*>\n  <!ATTLIST translation id CDATA #REQUIRED>\n  <!ELEMENT ph EMPTY>\n  <!ATTLIST ph name CDATA #REQUIRED>\n]>"},"tail":true}]}}],"kind":"const"},"specifiers":[],"source":null},{"type":"ExportNamedDeclaration","start":704,"end":7597,"declaration":{"type":"ClassDeclaration","start":711,"end":7597,"id":{"type":"Identifier","start":717,"end":724,"name":"XmbFile"},"superClass":{"type":"Identifier","start":733,"end":764,"name":"AbstractTranslationMessagesFile"},"body":{"type":"ClassBody","start":765,"end":7597,"body":[{"type":"MethodDefinition","start":1186,"end":1508,"static":false,"computed":false,"key":{"type":"Identifier","start":1186,"end":1197,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":1197,"end":1508,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1198,"end":1228,"name":"_translationMessageFileFactory"},{"type":"Identifier","start":1230,"end":1239,"name":"xmlString"},{"type":"Identifier","start":1241,"end":1245,"name":"path"},{"type":"Identifier","start":1247,"end":1255,"name":"encoding"}],"body":{"type":"BlockStatement","start":1257,"end":1508,"body":[{"type":"ExpressionStatement","start":1268,"end":1276,"expression":{"type":"CallExpression","start":1268,"end":1275,"callee":{"type":"Super","start":1268,"end":1273},"arguments":[],"optional":false}},{"type":"ExpressionStatement","start":1286,"end":1355,"expression":{"type":"AssignmentExpression","start":1286,"end":1354,"operator":"=","left":{"type":"MemberExpression","start":1286,"end":1321,"object":{"type":"ThisExpression","start":1286,"end":1290},"property":{"type":"Identifier","start":1291,"end":1321,"name":"_translationMessageFileFactory"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1324,"end":1354,"name":"_translationMessageFileFactory"}}},{"type":"ExpressionStatement","start":1365,"end":1385,"expression":{"type":"AssignmentExpression","start":1365,"end":1384,"operator":"=","left":{"type":"MemberExpression","start":1365,"end":1379,"object":{"type":"ThisExpression","start":1365,"end":1369},"property":{"type":"Identifier","start":1370,"end":1379,"name":"_warnings"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":1382,"end":1384,"elements":[]}}},{"type":"ExpressionStatement","start":1395,"end":1437,"expression":{"type":"AssignmentExpression","start":1395,"end":1436,"operator":"=","left":{"type":"MemberExpression","start":1395,"end":1432,"object":{"type":"ThisExpression","start":1395,"end":1399},"property":{"type":"Identifier","start":1400,"end":1432,"name":"_numberOfTransUnitsWithMissingId"},"computed":false,"optional":false},"right":{"type":"Literal","start":1435,"end":1436,"value":0,"raw":"0"}}},{"type":"ExpressionStatement","start":1447,"end":1501,"expression":{"type":"CallExpression","start":1447,"end":1500,"callee":{"type":"MemberExpression","start":1447,"end":1473,"object":{"type":"ThisExpression","start":1447,"end":1451},"property":{"type":"Identifier","start":1452,"end":1473,"name":"initializeFromContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1474,"end":1483,"name":"xmlString"},{"type":"Identifier","start":1485,"end":1489,"name":"path"},{"type":"Identifier","start":1491,"end":1499,"name":"encoding"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1514,"end":1869,"static":false,"computed":false,"key":{"type":"Identifier","start":1514,"end":1535,"name":"initializeFromContent"},"kind":"method","value":{"type":"FunctionExpression","start":1535,"end":1869,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1536,"end":1545,"name":"xmlString"},{"type":"Identifier","start":1547,"end":1551,"name":"path"},{"type":"Identifier","start":1553,"end":1561,"name":"encoding"}],"body":{"type":"BlockStatement","start":1563,"end":1869,"body":[{"type":"ExpressionStatement","start":1574,"end":1619,"expression":{"type":"CallExpression","start":1574,"end":1618,"callee":{"type":"MemberExpression","start":1574,"end":1591,"object":{"type":"ThisExpression","start":1574,"end":1578},"property":{"type":"Identifier","start":1579,"end":1591,"name":"parseContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1592,"end":1601,"name":"xmlString"},{"type":"Identifier","start":1603,"end":1607,"name":"path"},{"type":"Identifier","start":1609,"end":1617,"name":"encoding"}],"optional":false}},{"type":"IfStatement","start":1629,"end":1840,"test":{"type":"BinaryExpression","start":1633,"end":1704,"left":{"type":"MemberExpression","start":1633,"end":1698,"object":{"type":"CallExpression","start":1633,"end":1691,"callee":{"type":"MemberExpression","start":1633,"end":1674,"object":{"type":"MemberExpression","start":1633,"end":1653,"object":{"type":"ThisExpression","start":1633,"end":1637},"property":{"type":"Identifier","start":1638,"end":1653,"name":"_parsedDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1654,"end":1674,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1675,"end":1690,"value":"messagebundle","raw":"'messagebundle'"}],"optional":false},"property":{"type":"Identifier","start":1692,"end":1698,"name":"length"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Literal","start":1703,"end":1704,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":1706,"end":1840,"body":[{"type":"ThrowStatement","start":1721,"end":1829,"argument":{"type":"NewExpression","start":1727,"end":1828,"callee":{"type":"Identifier","start":1731,"end":1736,"name":"Error"},"arguments":[{"type":"CallExpression","start":1737,"end":1827,"callee":{"type":"Identifier","start":1737,"end":1743,"name":"format"},"arguments":[{"type":"Literal","start":1744,"end":1820,"value":"File \"%s\" seems to be no xmb file (should contain a messagebundle element)","raw":"'File \"%s\" seems to be no xmb file (should contain a messagebundle element)'"},{"type":"Identifier","start":1822,"end":1826,"name":"path"}],"optional":false}]}}]},"alternate":null},{"type":"ReturnStatement","start":1850,"end":1862,"argument":{"type":"ThisExpression","start":1857,"end":1861}}]}}},{"type":"MethodDefinition","start":1875,"end":2425,"static":false,"computed":false,"key":{"type":"Identifier","start":1875,"end":1895,"name":"initializeTransUnits"},"kind":"method","value":{"type":"FunctionExpression","start":1895,"end":2425,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1898,"end":2425,"body":[{"type":"ExpressionStatement","start":1909,"end":1930,"expression":{"type":"AssignmentExpression","start":1909,"end":1929,"operator":"=","left":{"type":"MemberExpression","start":1909,"end":1924,"object":{"type":"ThisExpression","start":1909,"end":1913},"property":{"type":"Identifier","start":1914,"end":1924,"name":"transUnits"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":1927,"end":1929,"elements":[]}}},{"type":"VariableDeclaration","start":1940,"end":2014,"declarations":[{"type":"VariableDeclarator","start":1946,"end":2013,"id":{"type":"Identifier","start":1946,"end":1962,"name":"transUnitsInFile"},"init":{"type":"CallExpression","start":1965,"end":2013,"callee":{"type":"MemberExpression","start":1965,"end":2006,"object":{"type":"MemberExpression","start":1965,"end":1985,"object":{"type":"ThisExpression","start":1965,"end":1969},"property":{"type":"Identifier","start":1970,"end":1985,"name":"_parsedDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1986,"end":2006,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2007,"end":2012,"value":"msg","raw":"'msg'"}],"optional":false}}],"kind":"const"},{"type":"ForStatement","start":2024,"end":2418,"init":{"type":"VariableDeclaration","start":2029,"end":2038,"declarations":[{"type":"VariableDeclarator","start":2033,"end":2038,"id":{"type":"Identifier","start":2033,"end":2034,"name":"i"},"init":{"type":"Literal","start":2037,"end":2038,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":2040,"end":2067,"left":{"type":"Identifier","start":2040,"end":2041,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":2044,"end":2067,"object":{"type":"Identifier","start":2044,"end":2060,"name":"transUnitsInFile"},"property":{"type":"Identifier","start":2061,"end":2067,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":2069,"end":2072,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":2069,"end":2070,"name":"i"}},"body":{"type":"BlockStatement","start":2074,"end":2418,"body":[{"type":"VariableDeclaration","start":2089,"end":2126,"declarations":[{"type":"VariableDeclarator","start":2095,"end":2125,"id":{"type":"Identifier","start":2095,"end":2098,"name":"msg"},"init":{"type":"CallExpression","start":2101,"end":2125,"callee":{"type":"MemberExpression","start":2101,"end":2122,"object":{"type":"Identifier","start":2101,"end":2117,"name":"transUnitsInFile"},"property":{"type":"Identifier","start":2118,"end":2122,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2123,"end":2124,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":2140,"end":2174,"declarations":[{"type":"VariableDeclarator","start":2146,"end":2173,"id":{"type":"Identifier","start":2146,"end":2148,"name":"id"},"init":{"type":"CallExpression","start":2151,"end":2173,"callee":{"type":"MemberExpression","start":2151,"end":2167,"object":{"type":"Identifier","start":2151,"end":2154,"name":"msg"},"property":{"type":"Identifier","start":2155,"end":2167,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2168,"end":2172,"value":"id","raw":"'id'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":2188,"end":2339,"test":{"type":"UnaryExpression","start":2192,"end":2195,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":2193,"end":2195,"name":"id"}},"consequent":{"type":"BlockStatement","start":2197,"end":2339,"body":[{"type":"ExpressionStatement","start":2216,"end":2324,"expression":{"type":"CallExpression","start":2216,"end":2323,"callee":{"type":"MemberExpression","start":2216,"end":2235,"object":{"type":"MemberExpression","start":2216,"end":2230,"object":{"type":"ThisExpression","start":2216,"end":2220},"property":{"type":"Identifier","start":2221,"end":2230,"name":"_warnings"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2231,"end":2235,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2236,"end":2322,"callee":{"type":"Identifier","start":2236,"end":2242,"name":"format"},"arguments":[{"type":"Literal","start":2243,"end":2305,"value":"oops, msg without \"id\" found in master, please check file %s","raw":"'oops, msg without \"id\" found in master, please check file %s'"},{"type":"MemberExpression","start":2307,"end":2321,"object":{"type":"ThisExpression","start":2307,"end":2311},"property":{"type":"Identifier","start":2312,"end":2321,"name":"_filename"},"computed":false,"optional":false}],"optional":false}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":2353,"end":2407,"expression":{"type":"CallExpression","start":2353,"end":2406,"callee":{"type":"MemberExpression","start":2353,"end":2373,"object":{"type":"MemberExpression","start":2353,"end":2368,"object":{"type":"ThisExpression","start":2353,"end":2357},"property":{"type":"Identifier","start":2358,"end":2368,"name":"transUnits"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2369,"end":2373,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":2374,"end":2405,"callee":{"type":"Identifier","start":2378,"end":2390,"name":"XmbTransUnit"},"arguments":[{"type":"Identifier","start":2391,"end":2394,"name":"msg"},{"type":"Identifier","start":2396,"end":2398,"name":"id"},{"type":"ThisExpression","start":2400,"end":2404}]}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":2586,"end":2635,"static":false,"computed":false,"key":{"type":"Identifier","start":2586,"end":2596,"name":"i18nFormat"},"kind":"method","value":{"type":"FunctionExpression","start":2596,"end":2635,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2599,"end":2635,"body":[{"type":"ReturnStatement","start":2610,"end":2628,"argument":{"type":"Identifier","start":2617,"end":2627,"name":"FORMAT_XMB"}}]}}},{"type":"MethodDefinition","start":2697,"end":2746,"static":false,"computed":false,"key":{"type":"Identifier","start":2697,"end":2705,"name":"fileType"},"kind":"method","value":{"type":"FunctionExpression","start":2705,"end":2746,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2708,"end":2746,"body":[{"type":"ReturnStatement","start":2719,"end":2739,"argument":{"type":"Identifier","start":2726,"end":2738,"name":"FILETYPE_XMB"}}]}}},{"type":"MethodDefinition","start":2933,"end":2997,"static":false,"computed":false,"key":{"type":"Identifier","start":2933,"end":2957,"name":"elementsWithMixedContent"},"kind":"method","value":{"type":"FunctionExpression","start":2957,"end":2997,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2960,"end":2997,"body":[{"type":"ReturnStatement","start":2971,"end":2990,"argument":{"type":"ArrayExpression","start":2978,"end":2989,"elements":[{"type":"Literal","start":2979,"end":2988,"value":"message","raw":"'message'"}]}}]}}},{"type":"MethodDefinition","start":3162,"end":3468,"static":false,"computed":false,"key":{"type":"Identifier","start":3162,"end":3187,"name":"guessLanguageFromFilename"},"kind":"method","value":{"type":"FunctionExpression","start":3187,"end":3468,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":3190,"end":3468,"body":[{"type":"IfStatement","start":3201,"end":3439,"test":{"type":"MemberExpression","start":3205,"end":3219,"object":{"type":"ThisExpression","start":3205,"end":3209},"property":{"type":"Identifier","start":3210,"end":3219,"name":"_filename"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":3221,"end":3439,"body":[{"type":"VariableDeclaration","start":3236,"end":3276,"declarations":[{"type":"VariableDeclarator","start":3242,"end":3275,"id":{"type":"Identifier","start":3242,"end":3247,"name":"parts"},"init":{"type":"CallExpression","start":3250,"end":3275,"callee":{"type":"MemberExpression","start":3250,"end":3270,"object":{"type":"MemberExpression","start":3250,"end":3264,"object":{"type":"ThisExpression","start":3250,"end":3254},"property":{"type":"Identifier","start":3255,"end":3264,"name":"_filename"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3265,"end":3270,"name":"split"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3271,"end":3274,"value":".","raw":"'.'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3290,"end":3428,"test":{"type":"LogicalExpression","start":3294,"end":3361,"left":{"type":"BinaryExpression","start":3294,"end":3310,"left":{"type":"MemberExpression","start":3294,"end":3306,"object":{"type":"Identifier","start":3294,"end":3299,"name":"parts"},"property":{"type":"Identifier","start":3300,"end":3306,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":3309,"end":3310,"value":2,"raw":"2"}},"operator":"&&","right":{"type":"BinaryExpression","start":3314,"end":3361,"left":{"type":"CallExpression","start":3314,"end":3351,"callee":{"type":"MemberExpression","start":3314,"end":3349,"object":{"type":"MemberExpression","start":3314,"end":3337,"object":{"type":"Identifier","start":3314,"end":3319,"name":"parts"},"property":{"type":"BinaryExpression","start":3320,"end":3336,"left":{"type":"MemberExpression","start":3320,"end":3332,"object":{"type":"Identifier","start":3320,"end":3325,"name":"parts"},"property":{"type":"Identifier","start":3326,"end":3332,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":3335,"end":3336,"value":1,"raw":"1"}},"computed":true,"optional":false},"property":{"type":"Identifier","start":3338,"end":3349,"name":"toLowerCase"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"===","right":{"type":"Literal","start":3356,"end":3361,"value":"xmb","raw":"'xmb'"}}},"consequent":{"type":"BlockStatement","start":3363,"end":3428,"body":[{"type":"ReturnStatement","start":3382,"end":3413,"argument":{"type":"MemberExpression","start":3389,"end":3412,"object":{"type":"Identifier","start":3389,"end":3394,"name":"parts"},"property":{"type":"BinaryExpression","start":3395,"end":3411,"left":{"type":"MemberExpression","start":3395,"end":3407,"object":{"type":"Identifier","start":3395,"end":3400,"name":"parts"},"property":{"type":"Identifier","start":3401,"end":3407,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":3410,"end":3411,"value":2,"raw":"2"}},"computed":true,"optional":false}}]},"alternate":null}]},"alternate":null},{"type":"ReturnStatement","start":3449,"end":3461,"argument":{"type":"Literal","start":3456,"end":3460,"value":null,"raw":"null"}}]}}},{"type":"MethodDefinition","start":3629,"end":3704,"static":false,"computed":false,"key":{"type":"Identifier","start":3629,"end":3643,"name":"sourceLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":3643,"end":3704,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":3646,"end":3704,"body":[{"type":"ReturnStatement","start":3657,"end":3697,"argument":{"type":"CallExpression","start":3664,"end":3696,"callee":{"type":"MemberExpression","start":3664,"end":3694,"object":{"type":"ThisExpression","start":3664,"end":3668},"property":{"type":"Identifier","start":3669,"end":3694,"name":"guessLanguageFromFilename"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}},{"type":"MethodDefinition","start":3823,"end":3913,"static":false,"computed":false,"key":{"type":"Identifier","start":3823,"end":3840,"name":"setSourceLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":3840,"end":3913,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3841,"end":3849,"name":"language"}],"body":{"type":"BlockStatement","start":3851,"end":3913,"body":[]}}},{"type":"MethodDefinition","start":4074,"end":4149,"static":false,"computed":false,"key":{"type":"Identifier","start":4074,"end":4088,"name":"targetLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":4088,"end":4149,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":4091,"end":4149,"body":[{"type":"ReturnStatement","start":4102,"end":4142,"argument":{"type":"CallExpression","start":4109,"end":4141,"callee":{"type":"MemberExpression","start":4109,"end":4139,"object":{"type":"ThisExpression","start":4109,"end":4113},"property":{"type":"Identifier","start":4114,"end":4139,"name":"guessLanguageFromFilename"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}},{"type":"MethodDefinition","start":4268,"end":4358,"static":false,"computed":false,"key":{"type":"Identifier","start":4268,"end":4285,"name":"setTargetLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":4285,"end":4358,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4286,"end":4294,"name":"language"}],"body":{"type":"BlockStatement","start":4296,"end":4358,"body":[]}}},{"type":"MethodDefinition","start":5674,"end":5852,"static":false,"computed":false,"key":{"type":"Identifier","start":5674,"end":5692,"name":"importNewTransUnit"},"kind":"method","value":{"type":"FunctionExpression","start":5692,"end":5852,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5693,"end":5709,"name":"foreignTransUnit"},{"type":"Identifier","start":5711,"end":5724,"name":"isDefaultLang"},{"type":"Identifier","start":5726,"end":5737,"name":"copyContent"},{"type":"Identifier","start":5739,"end":5757,"name":"importAfterElement"}],"body":{"type":"BlockStatement","start":5759,"end":5852,"body":[{"type":"ThrowStatement","start":5770,"end":5845,"argument":{"type":"CallExpression","start":5776,"end":5844,"callee":{"type":"Identifier","start":5776,"end":5781,"name":"Error"},"arguments":[{"type":"Literal","start":5782,"end":5843,"value":"xmb file cannot be used to store translations, use xtb file","raw":"'xmb file cannot be used to store translations, use xtb file'"}],"optional":false}}]}}},{"type":"MethodDefinition","start":6562,"end":7594,"static":false,"computed":false,"key":{"type":"Identifier","start":6562,"end":6590,"name":"createTranslationFileForLang"},"kind":"method","value":{"type":"FunctionExpression","start":6590,"end":7594,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6591,"end":6595,"name":"lang"},{"type":"Identifier","start":6597,"end":6605,"name":"filename"},{"type":"Identifier","start":6607,"end":6620,"name":"isDefaultLang"},{"type":"Identifier","start":6622,"end":6633,"name":"copyContent"}],"body":{"type":"BlockStatement","start":6635,"end":7594,"body":[{"type":"VariableDeclaration","start":6646,"end":6788,"declarations":[{"type":"VariableDeclarator","start":6652,"end":6787,"id":{"type":"Identifier","start":6652,"end":6678,"name":"translationbundleXMLSource"},"init":{"type":"BinaryExpression","start":6681,"end":6787,"left":{"type":"BinaryExpression","start":6681,"end":6737,"left":{"type":"Literal","start":6681,"end":6723,"value":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n","raw":"'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n'"},"operator":"+","right":{"type":"Identifier","start":6726,"end":6737,"name":"XTB_DOCTYPE"}},"operator":"+","right":{"type":"Literal","start":6740,"end":6787,"value":"\n<translationbundle>\n</translationbundle>\n","raw":"'\\n<translationbundle>\\n</translationbundle>\\n'"}}}],"kind":"const"},{"type":"VariableDeclaration","start":6798,"end":7039,"declarations":[{"type":"VariableDeclarator","start":6804,"end":7038,"id":{"type":"Identifier","start":6804,"end":6819,"name":"translationFile"},"init":{"type":"CallExpression","start":6822,"end":7038,"callee":{"type":"MemberExpression","start":6822,"end":6883,"object":{"type":"MemberExpression","start":6822,"end":6857,"object":{"type":"ThisExpression","start":6822,"end":6826},"property":{"type":"Identifier","start":6827,"end":6857,"name":"_translationMessageFileFactory"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6858,"end":6883,"name":"createFileFromFileContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6884,"end":6894,"name":"FORMAT_XTB"},{"type":"Identifier","start":6896,"end":6922,"name":"translationbundleXMLSource"},{"type":"Identifier","start":6924,"end":6932,"name":"filename"},{"type":"CallExpression","start":6934,"end":6949,"callee":{"type":"MemberExpression","start":6934,"end":6947,"object":{"type":"ThisExpression","start":6934,"end":6938},"property":{"type":"Identifier","start":6939,"end":6947,"name":"encoding"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"ObjectExpression","start":6951,"end":7037,"properties":[{"type":"Property","start":6953,"end":6985,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":6953,"end":6963,"name":"xmlContent"},"value":{"type":"CallExpression","start":6965,"end":6985,"callee":{"type":"MemberExpression","start":6965,"end":6983,"object":{"type":"ThisExpression","start":6965,"end":6969},"property":{"type":"Identifier","start":6970,"end":6983,"name":"editedContent"},"computed":false,"optional":false},"arguments":[],"optional":false},"kind":"init"},{"type":"Property","start":6987,"end":7008,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":6987,"end":6991,"name":"path"},"value":{"type":"CallExpression","start":6993,"end":7008,"callee":{"type":"MemberExpression","start":6993,"end":7006,"object":{"type":"ThisExpression","start":6993,"end":6997},"property":{"type":"Identifier","start":6998,"end":7006,"name":"filename"},"computed":false,"optional":false},"arguments":[],"optional":false},"kind":"init"},{"type":"Property","start":7010,"end":7035,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":7010,"end":7018,"name":"encoding"},"value":{"type":"CallExpression","start":7020,"end":7035,"callee":{"type":"MemberExpression","start":7020,"end":7033,"object":{"type":"ThisExpression","start":7020,"end":7024},"property":{"type":"Identifier","start":7025,"end":7033,"name":"encoding"},"computed":false,"optional":false},"arguments":[],"optional":false},"kind":"init"}]}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7049,"end":7114,"expression":{"type":"CallExpression","start":7049,"end":7113,"callee":{"type":"MemberExpression","start":7049,"end":7093,"object":{"type":"Identifier","start":7049,"end":7064,"name":"translationFile"},"property":{"type":"Identifier","start":7065,"end":7093,"name":"setNewTransUnitTargetPraefix"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":7094,"end":7112,"object":{"type":"ThisExpression","start":7094,"end":7098},"property":{"type":"Identifier","start":7099,"end":7112,"name":"targetPraefix"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":7124,"end":7187,"expression":{"type":"CallExpression","start":7124,"end":7186,"callee":{"type":"MemberExpression","start":7124,"end":7167,"object":{"type":"Identifier","start":7124,"end":7139,"name":"translationFile"},"property":{"type":"Identifier","start":7140,"end":7167,"name":"setNewTransUnitTargetSuffix"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":7168,"end":7185,"object":{"type":"ThisExpression","start":7168,"end":7172},"property":{"type":"Identifier","start":7173,"end":7185,"name":"targetSuffix"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":7197,"end":7237,"expression":{"type":"CallExpression","start":7197,"end":7236,"callee":{"type":"MemberExpression","start":7197,"end":7230,"object":{"type":"Identifier","start":7197,"end":7212,"name":"translationFile"},"property":{"type":"Identifier","start":7213,"end":7230,"name":"setTargetLanguage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7231,"end":7235,"name":"lang"}],"optional":false}},{"type":"ExpressionStatement","start":7247,"end":7329,"expression":{"type":"CallExpression","start":7247,"end":7328,"callee":{"type":"MemberExpression","start":7247,"end":7291,"object":{"type":"Identifier","start":7247,"end":7262,"name":"translationFile"},"property":{"type":"Identifier","start":7263,"end":7291,"name":"setNewTransUnitTargetPraefix"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7292,"end":7327,"callee":{"type":"MemberExpression","start":7292,"end":7325,"object":{"type":"ThisExpression","start":7292,"end":7296},"property":{"type":"Identifier","start":7297,"end":7325,"name":"getNewTransUnitTargetPraefix"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":7339,"end":7419,"expression":{"type":"CallExpression","start":7339,"end":7418,"callee":{"type":"MemberExpression","start":7339,"end":7382,"object":{"type":"Identifier","start":7339,"end":7354,"name":"translationFile"},"property":{"type":"Identifier","start":7355,"end":7382,"name":"setNewTransUnitTargetSuffix"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7383,"end":7417,"callee":{"type":"MemberExpression","start":7383,"end":7415,"object":{"type":"ThisExpression","start":7383,"end":7387},"property":{"type":"Identifier","start":7388,"end":7415,"name":"getNewTransUnitTargetSuffix"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":7429,"end":7554,"expression":{"type":"CallExpression","start":7429,"end":7553,"callee":{"type":"MemberExpression","start":7429,"end":7450,"object":{"type":"ThisExpression","start":7429,"end":7433},"property":{"type":"Identifier","start":7434,"end":7450,"name":"forEachTransUnit"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":7451,"end":7552,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7452,"end":7454,"name":"tu"}],"body":{"type":"BlockStatement","start":7459,"end":7552,"body":[{"type":"ExpressionStatement","start":7474,"end":7541,"expression":{"type":"CallExpression","start":7474,"end":7540,"callee":{"type":"MemberExpression","start":7474,"end":7508,"object":{"type":"Identifier","start":7474,"end":7489,"name":"translationFile"},"property":{"type":"Identifier","start":7490,"end":7508,"name":"importNewTransUnit"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7509,"end":7511,"name":"tu"},{"type":"Identifier","start":7513,"end":7526,"name":"isDefaultLang"},{"type":"Identifier","start":7528,"end":7539,"name":"copyContent"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":7564,"end":7587,"argument":{"type":"Identifier","start":7571,"end":7586,"name":"translationFile"}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":7599,"end":23637}]},"code":"import { FORMAT_XMB, FILETYPE_XMB, FORMAT_XTB } from '../api/constants';\r\nimport { format } from 'util';\r\nimport { XmbTransUnit } from './xmb-trans-unit';\r\nimport { AbstractTranslationMessagesFile } from './abstract-translation-messages-file';\r\n/**\r\n * Created by martin on 10.03.2017.\r\n * xmb-File access.\r\n */\r\n/**\r\n * Doctype of xtb translation file corresponding with thos xmb file.\r\n */\r\nexport const XTB_DOCTYPE = `<!DOCTYPE translationbundle [\r\n  <!ELEMENT translationbundle (translation)*>\r\n  <!ATTLIST translationbundle lang CDATA #REQUIRED>\r\n  <!ELEMENT translation (#PCDATA|ph)*>\r\n  <!ATTLIST translation id CDATA #REQUIRED>\r\n  <!ELEMENT ph EMPTY>\r\n  <!ATTLIST ph name CDATA #REQUIRED>\r\n]>`;\r\nexport class XmbFile extends AbstractTranslationMessagesFile {\r\n    /**\r\n     * Create an xmb-File from source.\r\n     * @param _translationMessageFileFactory factory to create a translation file (xtb) for the xmb file\r\n     * @param xmlString file content\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return XmbFile\r\n     */\r\n    constructor(_translationMessageFileFactory, xmlString, path, encoding) {\r\n        super();\r\n        this._translationMessageFileFactory = _translationMessageFileFactory;\r\n        this._warnings = [];\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this.initializeFromContent(xmlString, path, encoding);\r\n    }\r\n    initializeFromContent(xmlString, path, encoding) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        if (this._parsedDocument.getElementsByTagName('messagebundle').length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xmb file (should contain a messagebundle element)', path));\r\n        }\r\n        return this;\r\n    }\r\n    initializeTransUnits() {\r\n        this.transUnits = [];\r\n        const transUnitsInFile = this._parsedDocument.getElementsByTagName('msg');\r\n        for (let i = 0; i < transUnitsInFile.length; i++) {\r\n            const msg = transUnitsInFile.item(i);\r\n            const id = msg.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, msg without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new XmbTransUnit(msg, id, this));\r\n        }\r\n    }\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    i18nFormat() {\r\n        return FORMAT_XMB;\r\n    }\r\n    /**\r\n     * File type.\r\n     * Here 'XMB'\r\n     */\r\n    fileType() {\r\n        return FILETYPE_XMB;\r\n    }\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    elementsWithMixedContent() {\r\n        return ['message'];\r\n    }\r\n    /**\r\n     * Guess language from filename.\r\n     * If filename is foo.xy.xmb, than language is assumed to be xy.\r\n     * @return Language or null\r\n     */\r\n    guessLanguageFromFilename() {\r\n        if (this._filename) {\r\n            const parts = this._filename.split('.');\r\n            if (parts.length > 2 && parts[parts.length - 1].toLowerCase() === 'xmb') {\r\n                return parts[parts.length - 2];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return source language.\r\n     */\r\n    sourceLanguage() {\r\n        return this.guessLanguageFromFilename();\r\n    }\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb.\r\n     * @param language language\r\n     */\r\n    setSourceLanguage(language) {\r\n        // do nothing, xmb has no notation for this.\r\n    }\r\n    /**\r\n     * Get target language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return target language.\r\n     */\r\n    targetLanguage() {\r\n        return this.guessLanguageFromFilename();\r\n    }\r\n    /**\r\n     * Edit the target language.\r\n     * Unsupported in xmb.\r\n     * @param language language\r\n     */\r\n    setTargetLanguage(language) {\r\n        // do nothing, xmb has no notation for this.\r\n    }\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    importNewTransUnit(foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        throw Error('xmb file cannot be used to store translations, use xtb file');\r\n    }\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    createTranslationFileForLang(lang, filename, isDefaultLang, copyContent) {\r\n        const translationbundleXMLSource = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' + XTB_DOCTYPE + '\\n<translationbundle>\\n</translationbundle>\\n';\r\n        const translationFile = this._translationMessageFileFactory.createFileFromFileContent(FORMAT_XTB, translationbundleXMLSource, filename, this.encoding(), { xmlContent: this.editedContent(), path: this.filename(), encoding: this.encoding() });\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.setNewTransUnitTargetPraefix(this.getNewTransUnitTargetPraefix());\r\n        translationFile.setNewTransUnitTargetSuffix(this.getNewTransUnitTargetSuffix());\r\n        this.forEachTransUnit((tu) => {\r\n            translationFile.importNewTransUnit(tu, isDefaultLang, copyContent);\r\n        });\r\n        return translationFile;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","util","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xmb-trans-unit.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-translation-messages-file.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xmb-file.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { FORMAT_XMB, FILETYPE_XMB, FORMAT_XTB } from '../api/constants';\r\nimport { format } from 'util';\r\nimport { XmbTransUnit } from './xmb-trans-unit';\r\nimport { AbstractTranslationMessagesFile } from './abstract-translation-messages-file';\r\n/**\r\n * Created by martin on 10.03.2017.\r\n * xmb-File access.\r\n */\r\n/**\r\n * Doctype of xtb translation file corresponding with thos xmb file.\r\n */\r\nexport const XTB_DOCTYPE = `<!DOCTYPE translationbundle [\r\n  <!ELEMENT translationbundle (translation)*>\r\n  <!ATTLIST translationbundle lang CDATA #REQUIRED>\r\n  <!ELEMENT translation (#PCDATA|ph)*>\r\n  <!ATTLIST translation id CDATA #REQUIRED>\r\n  <!ELEMENT ph EMPTY>\r\n  <!ATTLIST ph name CDATA #REQUIRED>\r\n]>`;\r\nexport class XmbFile extends AbstractTranslationMessagesFile {\r\n    /**\r\n     * Create an xmb-File from source.\r\n     * @param _translationMessageFileFactory factory to create a translation file (xtb) for the xmb file\r\n     * @param xmlString file content\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return XmbFile\r\n     */\r\n    constructor(_translationMessageFileFactory, xmlString, path, encoding) {\r\n        super();\r\n        this._translationMessageFileFactory = _translationMessageFileFactory;\r\n        this._warnings = [];\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this.initializeFromContent(xmlString, path, encoding);\r\n    }\r\n    initializeFromContent(xmlString, path, encoding) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        if (this._parsedDocument.getElementsByTagName('messagebundle').length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xmb file (should contain a messagebundle element)', path));\r\n        }\r\n        return this;\r\n    }\r\n    initializeTransUnits() {\r\n        this.transUnits = [];\r\n        const transUnitsInFile = this._parsedDocument.getElementsByTagName('msg');\r\n        for (let i = 0; i < transUnitsInFile.length; i++) {\r\n            const msg = transUnitsInFile.item(i);\r\n            const id = msg.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, msg without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new XmbTransUnit(msg, id, this));\r\n        }\r\n    }\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    i18nFormat() {\r\n        return FORMAT_XMB;\r\n    }\r\n    /**\r\n     * File type.\r\n     * Here 'XMB'\r\n     */\r\n    fileType() {\r\n        return FILETYPE_XMB;\r\n    }\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    elementsWithMixedContent() {\r\n        return ['message'];\r\n    }\r\n    /**\r\n     * Guess language from filename.\r\n     * If filename is foo.xy.xmb, than language is assumed to be xy.\r\n     * @return Language or null\r\n     */\r\n    guessLanguageFromFilename() {\r\n        if (this._filename) {\r\n            const parts = this._filename.split('.');\r\n            if (parts.length > 2 && parts[parts.length - 1].toLowerCase() === 'xmb') {\r\n                return parts[parts.length - 2];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return source language.\r\n     */\r\n    sourceLanguage() {\r\n        return this.guessLanguageFromFilename();\r\n    }\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb.\r\n     * @param language language\r\n     */\r\n    setSourceLanguage(language) {\r\n        // do nothing, xmb has no notation for this.\r\n    }\r\n    /**\r\n     * Get target language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return target language.\r\n     */\r\n    targetLanguage() {\r\n        return this.guessLanguageFromFilename();\r\n    }\r\n    /**\r\n     * Edit the target language.\r\n     * Unsupported in xmb.\r\n     * @param language language\r\n     */\r\n    setTargetLanguage(language) {\r\n        // do nothing, xmb has no notation for this.\r\n    }\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    importNewTransUnit(foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        throw Error('xmb file cannot be used to store translations, use xtb file');\r\n    }\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    createTranslationFileForLang(lang, filename, isDefaultLang, copyContent) {\r\n        const translationbundleXMLSource = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' + XTB_DOCTYPE + '\\n<translationbundle>\\n</translationbundle>\\n';\r\n        const translationFile = this._translationMessageFileFactory.createFileFromFileContent(FORMAT_XTB, translationbundleXMLSource, filename, this.encoding(), { xmlContent: this.editedContent(), path: this.filename(), encoding: this.encoding() });\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.setNewTransUnitTargetPraefix(this.getNewTransUnitTargetPraefix());\r\n        translationFile.setNewTransUnitTargetSuffix(this.getNewTransUnitTargetSuffix());\r\n        this.forEachTransUnit((tu) => {\r\n            translationFile.importNewTransUnit(tu, isDefaultLang, copyContent);\r\n        });\r\n        return translationFile;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"xmb-file.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/xmb-file.ts"],"names":[],"mappings":[[[0,0,3,0],[7,0,3,7],[9,0,3,8],[19,0,3,18],[21,0,3,20],[33,0,3,32],[35,0,3,34],[45,0,3,44],[47,0,3,45],[53,0,3,51],[71,0,3,69],[72,0,3,70]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[15,0,4,14],[17,0,4,15],[23,0,4,21],[29,0,4,27],[30,0,4,28]],[[0,0,5,0],[7,0,5,7],[9,0,5,8],[21,0,5,20],[23,0,5,21],[29,0,5,27],[47,0,5,45],[48,0,5,46]],[[0,0,6,0],[7,0,6,7],[9,0,6,8],[40,0,6,39],[42,0,6,40],[48,0,6,46],[86,0,6,84],[87,0,6,85]],[[0,0,8,0]],[],[],[[3,0,11,3]],[[0,0,13,0]],[],[[3,0,15,3]],[[0,0,16,0],[6,0,16,6],[7,0,16,7],[13,0,16,13],[24,0,16,24],[27,0,16,27]],[],[],[],[],[],[],[[3,0,23,3],[4,0,23,4]],[[0,0,25,0],[6,0,25,6],[13,0,25,13],[20,0,25,21],[29,0,25,29],[60,0,25,60]],[[4,0,27,4]],[],[],[],[],[],[],[],[[7,0,35,7]],[[4,0,36,4],[16,0,37,16],[46,0,37,79],[48,0,38,8],[57,0,38,25],[59,0,38,27],[63,0,38,39],[65,0,38,41],[73,0,38,65]],[[8,0,40,8],[13,0,40,13],[15,0,40,15],[16,0,40,16]],[[8,0,37,16],[43,0,37,46],[46,0,37,16],[76,0,37,46],[77,0,37,79]],[[8,0,41,8],[12,0,41,12],[13,0,41,13],[22,0,41,22],[25,0,41,25],[27,0,41,27],[28,0,41,28]],[[8,0,42,8],[12,0,42,12],[13,0,42,13],[45,0,42,45],[48,0,42,48],[49,0,42,49],[50,0,42,50]],[[8,0,43,8],[12,0,43,12],[13,0,43,13],[34,0,43,34],[35,0,43,35],[44,0,43,44],[46,0,43,46],[50,0,43,50],[52,0,43,52],[60,0,43,60],[61,0,43,61],[62,0,43,62]],[[4,0,44,4],[5,0,44,5]],[[4,0,46,12],[25,0,46,33],[26,0,46,34],[35,0,46,51],[37,0,46,53],[41,0,46,65],[43,0,46,67],[51,0,46,91]],[[8,0,47,8],[12,0,47,12],[13,0,47,13],[25,0,47,25],[26,0,47,26],[35,0,47,35],[37,0,47,37],[41,0,47,41],[43,0,47,43],[51,0,47,51],[52,0,47,52],[53,0,47,53]],[[8,0,48,8],[12,0,48,12],[16,0,48,16],[17,0,48,17],[32,0,48,32],[33,0,48,33],[53,0,48,53],[54,0,48,54],[69,0,48,69],[70,0,48,70],[71,0,48,71],[77,0,48,77],[82,0,48,82],[83,0,48,83],[85,0,48,85]],[[12,0,49,12],[18,0,49,18],[22,0,49,22],[27,0,49,27],[28,0,49,28],[34,0,49,34],[35,0,49,35],[111,0,49,111],[113,0,49,113],[117,0,49,117],[118,0,49,118],[119,0,49,119],[120,0,49,120]],[[9,0,50,9]],[[8,0,51,8],[15,0,51,15],[19,0,51,19],[20,0,51,20]],[[4,0,52,4],[5,0,52,5]],[[4,0,54,14],[24,0,54,34]],[[8,0,55,8],[12,0,55,12],[13,0,55,13],[23,0,55,23],[26,0,55,26],[28,0,55,28],[29,0,55,29]],[[8,0,56,8],[14,0,56,14],[30,0,56,30],[33,0,56,33],[37,0,56,37],[38,0,56,38],[53,0,56,53],[54,0,56,54],[74,0,56,74],[75,0,56,75],[80,0,56,80],[81,0,56,81],[82,0,56,82]],[[8,0,57,8],[13,0,57,13],[17,0,57,17],[18,0,57,18],[21,0,57,21],[22,0,57,22],[24,0,57,24],[25,0,57,25],[28,0,57,28],[44,0,57,44],[45,0,57,45],[51,0,57,51],[53,0,57,53],[54,0,57,54],[56,0,57,56],[58,0,57,58]],[[12,0,58,12],[18,0,58,18],[21,0,58,21],[24,0,58,24],[40,0,58,40],[41,0,58,41],[45,0,58,45],[46,0,58,46],[47,0,58,47],[48,0,58,48],[49,0,58,49]],[[12,0,59,12],[18,0,59,18],[20,0,59,20],[23,0,59,23],[26,0,59,26],[27,0,59,27],[39,0,59,39],[40,0,59,40],[44,0,59,44],[45,0,59,45],[46,0,59,46]],[[12,0,60,12],[16,0,60,16],[17,0,60,17],[19,0,60,19],[21,0,60,21]],[[16,0,61,16],[20,0,61,20],[21,0,61,21],[30,0,61,30],[31,0,61,31],[35,0,61,35],[36,0,61,36],[42,0,61,42],[43,0,61,43],[105,0,61,105],[107,0,61,107],[111,0,61,111],[112,0,61,112],[121,0,61,121],[122,0,61,122],[123,0,61,123],[124,0,61,124]],[[13,0,62,13]],[[12,0,63,12],[16,0,63,16],[17,0,63,17],[27,0,63,27],[28,0,63,28],[32,0,63,32],[33,0,63,33],[37,0,63,37],[49,0,63,49],[50,0,63,50],[53,0,63,53],[55,0,63,55],[57,0,63,57],[59,0,63,59],[63,0,63,63],[64,0,63,64],[65,0,63,65],[66,0,63,66]],[[9,0,64,9]],[[4,0,65,4],[5,0,65,5]],[[4,0,67,4]],[],[],[],[[7,0,71,7]],[[4,0,72,11],[14,0,72,21]],[[8,0,73,8],[15,0,73,15],[25,0,73,25],[26,0,73,26]],[[4,0,74,4],[5,0,74,5]],[[4,0,76,4]],[],[],[[7,0,79,7]],[[4,0,80,11],[12,0,80,19]],[[8,0,81,8],[15,0,81,15],[27,0,81,27],[28,0,81,28]],[[4,0,82,4],[5,0,82,5]],[[4,0,84,4]],[],[],[],[[7,0,88,7]],[[4,0,89,14],[28,0,89,38]],[[8,0,90,8],[15,0,90,15],[16,0,90,16],[25,0,90,25],[26,0,90,26],[27,0,90,27]],[[4,0,91,4],[5,0,91,5]],[[4,0,93,4]],[],[],[],[[7,0,97,7]],[[4,0,98,12],[29,0,98,37]],[[8,0,99,8],[12,0,99,12],[16,0,99,16],[17,0,99,17],[26,0,99,26],[28,0,99,28]],[[12,0,100,12],[18,0,100,18],[23,0,100,23],[26,0,100,36],[30,0,100,40],[31,0,100,41],[40,0,100,50],[41,0,100,51],[46,0,100,56],[47,0,100,57],[50,0,100,60],[51,0,100,61],[52,0,100,62]],[[12,0,101,12],[16,0,101,16],[21,0,101,21],[22,0,101,22],[28,0,101,28],[31,0,101,31],[32,0,101,32],[36,0,101,36],[41,0,101,41],[42,0,101,42],[47,0,101,47],[48,0,101,48],[54,0,101,54],[57,0,101,57],[58,0,101,58],[59,0,101,59],[60,0,101,60],[71,0,101,71],[73,0,101,73],[78,0,101,78],[83,0,101,83],[85,0,101,85]],[[16,0,102,16],[23,0,102,23],[28,0,102,28],[29,0,102,29],[34,0,102,34],[35,0,102,35],[41,0,102,41],[44,0,102,44],[45,0,102,45],[46,0,102,46],[47,0,102,47]],[[13,0,103,13]],[[9,0,104,9]],[[8,0,105,8],[15,0,105,15],[19,0,105,19],[20,0,105,20]],[[4,0,106,4],[5,0,106,5]],[[4,0,108,4]],[],[],[],[],[[7,0,113,7]],[[4,0,114,11],[18,0,114,25]],[[8,0,115,8],[15,0,115,15],[19,0,115,19],[20,0,115,20],[45,0,115,45],[47,0,115,47],[48,0,115,48]],[[4,0,116,4],[5,0,116,5]],[[4,0,118,4]],[],[],[],[[7,0,122,7]],[[4,0,123,11],[21,0,123,28],[22,0,123,29],[30,0,123,45]],[[8,0,124,8],[52,0,124,52]],[[4,0,125,4],[5,0,125,5]],[[4,0,127,4]],[],[],[],[],[[7,0,132,7]],[[4,0,133,11],[18,0,133,25]],[[8,0,134,8],[15,0,134,15],[19,0,134,19],[20,0,134,20],[45,0,134,45],[47,0,134,47],[48,0,134,48]],[[4,0,135,4],[5,0,135,5]],[[4,0,137,4]],[],[],[],[[7,0,141,7]],[[4,0,142,11],[21,0,142,28],[22,0,142,29],[30,0,142,45]],[[8,0,143,8],[52,0,143,52]],[[4,0,144,4],[5,0,144,5]],[[4,0,146,4]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,167,7]],[[4,0,168,4],[22,0,168,22],[23,0,168,23],[39,0,168,51],[41,0,168,53],[54,0,168,75],[56,0,168,77],[67,0,168,97],[69,0,168,99],[87,0,168,130]],[[8,0,170,8],[14,0,170,14],[19,0,170,19],[20,0,170,20],[81,0,170,81],[82,0,170,82],[83,0,170,83]],[[4,0,171,4],[5,0,171,5]],[[4,0,173,4]],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,186,7]],[[4,0,187,11],[32,0,187,39],[33,0,187,40],[37,0,187,52],[39,0,187,54],[47,0,187,70],[49,0,187,72],[62,0,187,94],[64,0,187,96],[75,0,187,116]],[[8,0,189,8],[14,0,189,14],[40,0,189,40],[43,0,190,12],[85,0,190,54],[88,0,190,57],[99,0,190,68],[102,0,190,71],[149,0,190,118],[150,0,190,119]],[[8,0,191,8],[14,0,191,14],[29,0,191,29],[32,0,191,32],[36,0,191,36],[37,0,191,37],[67,0,191,67],[68,0,191,68],[93,0,191,93],[94,0,192,12],[104,0,192,22],[106,0,193,12],[132,0,193,38],[134,0,193,40],[142,0,193,48],[144,0,193,50],[148,0,193,54],[149,0,193,55],[157,0,193,63],[159,0,193,65],[161,0,194,12],[163,0,194,13],[173,0,194,23],[175,0,194,25],[179,0,194,29],[180,0,194,30],[193,0,194,43],[195,0,194,45],[197,0,194,47],[201,0,194,51],[203,0,194,53],[207,0,194,57],[208,0,194,58],[216,0,194,66],[218,0,194,68],[220,0,194,70],[228,0,194,78],[230,0,194,80],[234,0,194,84],[235,0,194,85],[243,0,194,93],[245,0,194,95],[247,0,194,96],[248,0,194,97],[249,0,194,98]],[[8,0,195,8],[23,0,195,23],[24,0,195,24],[52,0,195,52],[53,0,195,53],[57,0,195,57],[58,0,195,58],[71,0,195,71],[72,0,195,72],[73,0,195,73]],[[8,0,196,8],[23,0,196,23],[24,0,196,24],[51,0,196,51],[52,0,196,52],[56,0,196,56],[57,0,196,57],[69,0,196,69],[70,0,196,70],[71,0,196,71]],[[8,0,197,8],[23,0,197,23],[24,0,197,24],[41,0,197,41],[42,0,197,42],[46,0,197,46],[47,0,197,47],[48,0,197,48]],[[8,0,198,8],[23,0,198,23],[24,0,198,24],[52,0,198,52],[53,0,198,53],[57,0,198,57],[58,0,198,58],[86,0,198,86],[88,0,198,88],[89,0,198,89],[90,0,198,90]],[[8,0,199,8],[23,0,199,23],[24,0,199,24],[51,0,199,51],[52,0,199,52],[56,0,199,56],[57,0,199,57],[84,0,199,84],[86,0,199,86],[87,0,199,87],[88,0,199,88]],[[8,0,200,8],[12,0,200,12],[13,0,200,13],[29,0,200,29],[30,0,200,30],[31,0,200,31],[33,0,200,33],[35,0,200,35],[37,0,200,37]],[[12,0,201,12],[27,0,201,27],[28,0,201,28],[46,0,201,46],[47,0,201,47],[49,0,201,49],[51,0,201,51],[64,0,201,64],[66,0,201,66],[77,0,201,77],[78,0,201,78],[79,0,201,79]],[[8,0,202,8],[9,0,202,9],[10,0,202,10],[11,0,202,11]],[[8,0,203,8],[15,0,203,15],[30,0,203,30],[31,0,203,31]],[[4,0,204,4],[5,0,204,5]],[[1,0,206,1]]],"sourcesContent":["import {ITranslationMessagesFileFactory} from '../api/i-translation-messages-file-factory';\r\nimport {ITranslationMessagesFile} from '../api/i-translation-messages-file';\r\nimport {ITransUnit} from '../api/i-trans-unit';\r\nimport {FORMAT_XMB, FILETYPE_XMB, FORMAT_XTB} from '../api/constants';\r\nimport {format} from 'util';\r\nimport {XmbTransUnit} from './xmb-trans-unit';\r\nimport {AbstractTranslationMessagesFile} from './abstract-translation-messages-file';\r\n\r\n/**\r\n * Created by martin on 10.03.2017.\r\n * xmb-File access.\r\n */\r\n\r\n/**\r\n * Doctype of xtb translation file corresponding with thos xmb file.\r\n */\r\nexport const XTB_DOCTYPE = `<!DOCTYPE translationbundle [\r\n  <!ELEMENT translationbundle (translation)*>\r\n  <!ATTLIST translationbundle lang CDATA #REQUIRED>\r\n  <!ELEMENT translation (#PCDATA|ph)*>\r\n  <!ATTLIST translation id CDATA #REQUIRED>\r\n  <!ELEMENT ph EMPTY>\r\n  <!ATTLIST ph name CDATA #REQUIRED>\r\n]>`;\r\n\r\nexport class XmbFile extends AbstractTranslationMessagesFile implements ITranslationMessagesFile {\r\n\r\n    /**\r\n     * Create an xmb-File from source.\r\n     * @param _translationMessageFileFactory factory to create a translation file (xtb) for the xmb file\r\n     * @param xmlString file content\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return XmbFile\r\n     */\r\n    constructor(\r\n        private _translationMessageFileFactory: ITranslationMessagesFileFactory,\r\n        xmlString: string, path: string, encoding: BufferEncoding ) {\r\n\r\n        super();\r\n        this._warnings = [];\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this.initializeFromContent(xmlString, path, encoding);\r\n    }\r\n\r\n    private initializeFromContent(xmlString: string, path: string, encoding: BufferEncoding ): XmbFile {\r\n        this.parseContent(xmlString, path, encoding);\r\n        if (this._parsedDocument.getElementsByTagName('messagebundle').length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xmb file (should contain a messagebundle element)', path));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    protected initializeTransUnits() {\r\n        this.transUnits = [];\r\n        const transUnitsInFile = this._parsedDocument.getElementsByTagName('msg');\r\n        for (let i = 0; i < transUnitsInFile.length; i++) {\r\n            const msg = transUnitsInFile.item(i);\r\n            const id = msg.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, msg without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new XmbTransUnit(msg, id, this));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    public i18nFormat(): string {\r\n        return FORMAT_XMB;\r\n    }\r\n\r\n    /**\r\n     * File type.\r\n     * Here 'XMB'\r\n     */\r\n    public fileType(): string {\r\n        return FILETYPE_XMB;\r\n    }\r\n\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    protected elementsWithMixedContent(): string[] {\r\n        return ['message'];\r\n    }\r\n\r\n    /**\r\n     * Guess language from filename.\r\n     * If filename is foo.xy.xmb, than language is assumed to be xy.\r\n     * @return Language or null\r\n     */\r\n    private guessLanguageFromFilename(): string {\r\n        if (this._filename) {\r\n            const parts: string[] = this._filename.split('.');\r\n            if (parts.length > 2 && parts[parts.length - 1].toLowerCase() === 'xmb') {\r\n                return parts[parts.length - 2];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return source language.\r\n     */\r\n    public sourceLanguage(): string {\r\n        return this.guessLanguageFromFilename();\r\n    }\r\n\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb.\r\n     * @param language language\r\n     */\r\n    public setSourceLanguage(language: string) {\r\n        // do nothing, xmb has no notation for this.\r\n    }\r\n\r\n    /**\r\n     * Get target language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return target language.\r\n     */\r\n    public targetLanguage(): string {\r\n        return this.guessLanguageFromFilename();\r\n    }\r\n\r\n    /**\r\n     * Edit the target language.\r\n     * Unsupported in xmb.\r\n     * @param language language\r\n     */\r\n    public setTargetLanguage(language: string) {\r\n        // do nothing, xmb has no notation for this.\r\n    }\r\n\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    importNewTransUnit(foreignTransUnit: ITransUnit, isDefaultLang: boolean, copyContent: boolean, importAfterElement?: ITransUnit)\r\n        : ITransUnit {\r\n        throw Error('xmb file cannot be used to store translations, use xtb file');\r\n    }\r\n\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    public createTranslationFileForLang(lang: string, filename: string, isDefaultLang: boolean, copyContent: boolean)\r\n        : ITranslationMessagesFile {\r\n        const translationbundleXMLSource =\r\n            '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' + XTB_DOCTYPE + '\\n<translationbundle>\\n</translationbundle>\\n';\r\n        const translationFile = this._translationMessageFileFactory.createFileFromFileContent(\r\n            FORMAT_XTB,\r\n            translationbundleXMLSource, filename, this.encoding(),\r\n            {xmlContent: this.editedContent(), path: this.filename(), encoding: this.encoding()});\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.setNewTransUnitTargetPraefix(this.getNewTransUnitTargetPraefix());\r\n        translationFile.setNewTransUnitTargetSuffix(this.getNewTransUnitTargetSuffix());\r\n        this.forEachTransUnit((tu) => {\r\n            translationFile.importNewTransUnit(tu, isDefaultLang, copyContent);\r\n        });\r\n        return translationFile;\r\n    }\r\n\r\n}\r\n"]},"resolvedIds":{"util":{"external":true,"id":"util","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../api/constants":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./abstract-translation-messages-file":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-translation-messages-file.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./xmb-trans-unit":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xmb-trans-unit.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":40299,"body":[{"type":"ImportDeclaration","start":0,"end":66,"specifiers":[{"type":"ImportSpecifier","start":9,"end":30,"imported":{"type":"Identifier","start":9,"end":30,"name":"AbstractMessageParser"},"local":{"type":"Identifier","start":9,"end":30,"name":"AbstractMessageParser"}}],"source":{"type":"Literal","start":38,"end":65,"value":"./abstract-message-parser","raw":"'./abstract-message-parser'"}},{"type":"ImportDeclaration","start":68,"end":130,"specifiers":[{"type":"ImportSpecifier","start":77,"end":98,"imported":{"type":"Identifier","start":77,"end":98,"name":"ParsedMessagePartType"},"local":{"type":"Identifier","start":77,"end":98,"name":"ParsedMessagePartType"}}],"source":{"type":"Literal","start":106,"end":129,"value":"./parsed-message-part","raw":"'./parsed-message-part'"}},{"type":"ImportDeclaration","start":132,"end":175,"specifiers":[{"type":"ImportSpecifier","start":141,"end":151,"imported":{"type":"Identifier","start":141,"end":151,"name":"TagMapping"},"local":{"type":"Identifier","start":141,"end":151,"name":"TagMapping"}}],"source":{"type":"Literal","start":159,"end":174,"value":"./tag-mapping","raw":"'./tag-mapping'"}},{"type":"ExportNamedDeclaration","start":258,"end":11751,"declaration":{"type":"ClassDeclaration","start":265,"end":11751,"id":{"type":"Identifier","start":271,"end":290,"name":"Xliff2MessageParser"},"superClass":{"type":"Identifier","start":299,"end":320,"name":"AbstractMessageParser"},"body":{"type":"ClassBody","start":321,"end":11751,"body":[{"type":"MethodDefinition","start":616,"end":4108,"static":false,"computed":false,"key":{"type":"Identifier","start":616,"end":635,"name":"processStartElement"},"kind":"method","value":{"type":"FunctionExpression","start":635,"end":4108,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":636,"end":647,"name":"elementNode"},{"type":"Identifier","start":649,"end":656,"name":"message"}],"body":{"type":"BlockStatement","start":658,"end":4108,"body":[{"type":"VariableDeclaration","start":669,"end":705,"declarations":[{"type":"VariableDeclarator","start":675,"end":704,"id":{"type":"Identifier","start":675,"end":682,"name":"tagName"},"init":{"type":"MemberExpression","start":685,"end":704,"object":{"type":"Identifier","start":685,"end":696,"name":"elementNode"},"property":{"type":"Identifier","start":697,"end":704,"name":"tagName"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":715,"end":4079,"test":{"type":"BinaryExpression","start":719,"end":735,"left":{"type":"Identifier","start":719,"end":726,"name":"tagName"},"operator":"===","right":{"type":"Literal","start":731,"end":735,"value":"ph","raw":"'ph'"}},"consequent":{"type":"BlockStatement","start":737,"end":3600,"body":[{"type":"VariableDeclaration","start":1568,"end":1596,"declarations":[{"type":"VariableDeclarator","start":1572,"end":1595,"id":{"type":"Identifier","start":1572,"end":1587,"name":"isInterpolation"},"init":{"type":"Literal","start":1590,"end":1595,"value":false,"raw":"false"}}],"kind":"let"},{"type":"VariableDeclaration","start":1610,"end":1628,"declarations":[{"type":"VariableDeclarator","start":1614,"end":1627,"id":{"type":"Identifier","start":1614,"end":1619,"name":"isICU"},"init":{"type":"Literal","start":1622,"end":1627,"value":false,"raw":"false"}}],"kind":"let"},{"type":"VariableDeclaration","start":1642,"end":1665,"declarations":[{"type":"VariableDeclarator","start":1646,"end":1664,"id":{"type":"Identifier","start":1646,"end":1656,"name":"isEmptyTag"},"init":{"type":"Literal","start":1659,"end":1664,"value":false,"raw":"false"}}],"kind":"let"},{"type":"VariableDeclaration","start":1679,"end":1727,"declarations":[{"type":"VariableDeclarator","start":1685,"end":1726,"id":{"type":"Identifier","start":1685,"end":1690,"name":"equiv"},"init":{"type":"CallExpression","start":1693,"end":1726,"callee":{"type":"MemberExpression","start":1693,"end":1717,"object":{"type":"Identifier","start":1693,"end":1704,"name":"elementNode"},"property":{"type":"Identifier","start":1705,"end":1717,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1718,"end":1725,"value":"equiv","raw":"'equiv'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1741,"end":1787,"declarations":[{"type":"VariableDeclarator","start":1747,"end":1786,"id":{"type":"Identifier","start":1747,"end":1751,"name":"disp"},"init":{"type":"CallExpression","start":1754,"end":1786,"callee":{"type":"MemberExpression","start":1754,"end":1778,"object":{"type":"Identifier","start":1754,"end":1765,"name":"elementNode"},"property":{"type":"Identifier","start":1766,"end":1778,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1779,"end":1785,"value":"disp","raw":"'disp'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1801,"end":1824,"declarations":[{"type":"VariableDeclarator","start":1805,"end":1823,"id":{"type":"Identifier","start":1805,"end":1816,"name":"indexString"},"init":{"type":"Literal","start":1819,"end":1823,"value":null,"raw":"null"}}],"kind":"let"},{"type":"VariableDeclaration","start":1838,"end":1852,"declarations":[{"type":"VariableDeclarator","start":1842,"end":1851,"id":{"type":"Identifier","start":1842,"end":1847,"name":"index"},"init":{"type":"Literal","start":1850,"end":1851,"value":0,"raw":"0"}}],"kind":"let"},{"type":"VariableDeclaration","start":1866,"end":1890,"declarations":[{"type":"VariableDeclarator","start":1870,"end":1889,"id":{"type":"Identifier","start":1870,"end":1882,"name":"emptyTagName"},"init":{"type":"Literal","start":1885,"end":1889,"value":null,"raw":"null"}}],"kind":"let"},{"type":"IfStatement","start":1904,"end":3245,"test":{"type":"UnaryExpression","start":1908,"end":1914,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":1909,"end":1914,"name":"equiv"}},"consequent":{"type":"BlockStatement","start":1916,"end":2139,"body":[{"type":"ExpressionStatement","start":1989,"end":2002,"expression":{"type":"AssignmentExpression","start":1989,"end":2001,"operator":"=","left":{"type":"Identifier","start":1989,"end":1994,"name":"isICU"},"right":{"type":"Literal","start":1997,"end":2001,"value":true,"raw":"true"}}},{"type":"ExpressionStatement","start":2020,"end":2065,"expression":{"type":"AssignmentExpression","start":2020,"end":2064,"operator":"=","left":{"type":"Identifier","start":2020,"end":2031,"name":"indexString"},"right":{"type":"CallExpression","start":2034,"end":2064,"callee":{"type":"MemberExpression","start":2034,"end":2058,"object":{"type":"Identifier","start":2034,"end":2045,"name":"elementNode"},"property":{"type":"Identifier","start":2046,"end":2058,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2059,"end":2063,"value":"id","raw":"'id'"}],"optional":false}}},{"type":"ExpressionStatement","start":2083,"end":2124,"expression":{"type":"AssignmentExpression","start":2083,"end":2123,"operator":"=","left":{"type":"Identifier","start":2083,"end":2088,"name":"index"},"right":{"type":"CallExpression","start":2091,"end":2123,"callee":{"type":"MemberExpression","start":2091,"end":2106,"object":{"type":"Identifier","start":2091,"end":2097,"name":"Number"},"property":{"type":"Identifier","start":2098,"end":2106,"name":"parseInt"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2107,"end":2118,"name":"indexString"},{"type":"Literal","start":2120,"end":2122,"value":10,"raw":"10"}],"optional":false}}}]},"alternate":{"type":"IfStatement","start":2158,"end":3245,"test":{"type":"CallExpression","start":2162,"end":2185,"callee":{"type":"MemberExpression","start":2162,"end":2178,"object":{"type":"Identifier","start":2162,"end":2167,"name":"equiv"},"property":{"type":"Identifier","start":2168,"end":2178,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2179,"end":2184,"value":"ICU","raw":"'ICU'"}],"optional":false},"consequent":{"type":"BlockStatement","start":2187,"end":2556,"body":[{"type":"ExpressionStatement","start":2260,"end":2273,"expression":{"type":"AssignmentExpression","start":2260,"end":2272,"operator":"=","left":{"type":"Identifier","start":2260,"end":2265,"name":"isICU"},"right":{"type":"Literal","start":2268,"end":2272,"value":true,"raw":"true"}}},{"type":"IfStatement","start":2291,"end":2482,"test":{"type":"BinaryExpression","start":2295,"end":2310,"left":{"type":"Identifier","start":2295,"end":2300,"name":"equiv"},"operator":"===","right":{"type":"Literal","start":2305,"end":2310,"value":"ICU","raw":"'ICU'"}},"consequent":{"type":"BlockStatement","start":2312,"end":2372,"body":[{"type":"ExpressionStatement","start":2335,"end":2353,"expression":{"type":"AssignmentExpression","start":2335,"end":2352,"operator":"=","left":{"type":"Identifier","start":2335,"end":2346,"name":"indexString"},"right":{"type":"Literal","start":2349,"end":2352,"value":"0","raw":"'0'"}}}]},"alternate":{"type":"BlockStatement","start":2395,"end":2482,"body":[{"type":"ExpressionStatement","start":2418,"end":2463,"expression":{"type":"AssignmentExpression","start":2418,"end":2462,"operator":"=","left":{"type":"Identifier","start":2418,"end":2429,"name":"indexString"},"right":{"type":"CallExpression","start":2432,"end":2462,"callee":{"type":"MemberExpression","start":2432,"end":2447,"object":{"type":"Identifier","start":2432,"end":2437,"name":"equiv"},"property":{"type":"Identifier","start":2438,"end":2447,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2448,"end":2461,"object":{"type":"Literal","start":2448,"end":2454,"value":"ICU_","raw":"'ICU_'"},"property":{"type":"Identifier","start":2455,"end":2461,"name":"length"},"computed":false,"optional":false}],"optional":false}}}]}},{"type":"ExpressionStatement","start":2500,"end":2541,"expression":{"type":"AssignmentExpression","start":2500,"end":2540,"operator":"=","left":{"type":"Identifier","start":2500,"end":2505,"name":"index"},"right":{"type":"CallExpression","start":2508,"end":2540,"callee":{"type":"MemberExpression","start":2508,"end":2523,"object":{"type":"Identifier","start":2508,"end":2514,"name":"Number"},"property":{"type":"Identifier","start":2515,"end":2523,"name":"parseInt"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2524,"end":2535,"name":"indexString"},{"type":"Literal","start":2537,"end":2539,"value":10,"raw":"10"}],"optional":false}}}]},"alternate":{"type":"IfStatement","start":2575,"end":3245,"test":{"type":"CallExpression","start":2579,"end":2612,"callee":{"type":"MemberExpression","start":2579,"end":2595,"object":{"type":"Identifier","start":2579,"end":2584,"name":"equiv"},"property":{"type":"Identifier","start":2585,"end":2595,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2596,"end":2611,"value":"INTERPOLATION","raw":"'INTERPOLATION'"}],"optional":false},"consequent":{"type":"BlockStatement","start":2614,"end":2959,"body":[{"type":"ExpressionStatement","start":2633,"end":2656,"expression":{"type":"AssignmentExpression","start":2633,"end":2655,"operator":"=","left":{"type":"Identifier","start":2633,"end":2648,"name":"isInterpolation"},"right":{"type":"Literal","start":2651,"end":2655,"value":true,"raw":"true"}}},{"type":"IfStatement","start":2674,"end":2885,"test":{"type":"BinaryExpression","start":2678,"end":2703,"left":{"type":"Identifier","start":2678,"end":2683,"name":"equiv"},"operator":"===","right":{"type":"Literal","start":2688,"end":2703,"value":"INTERPOLATION","raw":"'INTERPOLATION'"}},"consequent":{"type":"BlockStatement","start":2705,"end":2765,"body":[{"type":"ExpressionStatement","start":2728,"end":2746,"expression":{"type":"AssignmentExpression","start":2728,"end":2745,"operator":"=","left":{"type":"Identifier","start":2728,"end":2739,"name":"indexString"},"right":{"type":"Literal","start":2742,"end":2745,"value":"0","raw":"'0'"}}}]},"alternate":{"type":"BlockStatement","start":2788,"end":2885,"body":[{"type":"ExpressionStatement","start":2811,"end":2866,"expression":{"type":"AssignmentExpression","start":2811,"end":2865,"operator":"=","left":{"type":"Identifier","start":2811,"end":2822,"name":"indexString"},"right":{"type":"CallExpression","start":2825,"end":2865,"callee":{"type":"MemberExpression","start":2825,"end":2840,"object":{"type":"Identifier","start":2825,"end":2830,"name":"equiv"},"property":{"type":"Identifier","start":2831,"end":2840,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2841,"end":2864,"object":{"type":"Literal","start":2841,"end":2857,"value":"INTERPOLATION_","raw":"'INTERPOLATION_'"},"property":{"type":"Identifier","start":2858,"end":2864,"name":"length"},"computed":false,"optional":false}],"optional":false}}}]}},{"type":"ExpressionStatement","start":2903,"end":2944,"expression":{"type":"AssignmentExpression","start":2903,"end":2943,"operator":"=","left":{"type":"Identifier","start":2903,"end":2908,"name":"index"},"right":{"type":"CallExpression","start":2911,"end":2943,"callee":{"type":"MemberExpression","start":2911,"end":2926,"object":{"type":"Identifier","start":2911,"end":2917,"name":"Number"},"property":{"type":"Identifier","start":2918,"end":2926,"name":"parseInt"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2927,"end":2938,"name":"indexString"},{"type":"Literal","start":2940,"end":2942,"value":10,"raw":"10"}],"optional":false}}}]},"alternate":{"type":"IfStatement","start":2978,"end":3245,"test":{"type":"CallExpression","start":2982,"end":3031,"callee":{"type":"MemberExpression","start":2982,"end":3024,"object":{"type":"NewExpression","start":2982,"end":2998,"callee":{"type":"Identifier","start":2986,"end":2996,"name":"TagMapping"},"arguments":[]},"property":{"type":"Identifier","start":2999,"end":3024,"name":"isEmptyTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3025,"end":3030,"name":"equiv"}],"optional":false},"consequent":{"type":"BlockStatement","start":3033,"end":3180,"body":[{"type":"ExpressionStatement","start":3052,"end":3070,"expression":{"type":"AssignmentExpression","start":3052,"end":3069,"operator":"=","left":{"type":"Identifier","start":3052,"end":3062,"name":"isEmptyTag"},"right":{"type":"Literal","start":3065,"end":3069,"value":true,"raw":"true"}}},{"type":"ExpressionStatement","start":3088,"end":3165,"expression":{"type":"AssignmentExpression","start":3088,"end":3164,"operator":"=","left":{"type":"Identifier","start":3088,"end":3100,"name":"emptyTagName"},"right":{"type":"CallExpression","start":3103,"end":3164,"callee":{"type":"MemberExpression","start":3103,"end":3157,"object":{"type":"NewExpression","start":3103,"end":3119,"callee":{"type":"Identifier","start":3107,"end":3117,"name":"TagMapping"},"arguments":[]},"property":{"type":"Identifier","start":3120,"end":3157,"name":"getTagnameFromEmptyTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3158,"end":3163,"name":"equiv"}],"optional":false}}}]},"alternate":{"type":"BlockStatement","start":3199,"end":3245,"body":[{"type":"ReturnStatement","start":3218,"end":3230,"argument":{"type":"Literal","start":3225,"end":3229,"value":true,"raw":"true"}}]}}}}},{"type":"IfStatement","start":3259,"end":3589,"test":{"type":"Identifier","start":3263,"end":3278,"name":"isInterpolation"},"consequent":{"type":"BlockStatement","start":3280,"end":3350,"body":[{"type":"ExpressionStatement","start":3299,"end":3335,"expression":{"type":"CallExpression","start":3299,"end":3334,"callee":{"type":"MemberExpression","start":3299,"end":3321,"object":{"type":"Identifier","start":3299,"end":3306,"name":"message"},"property":{"type":"Identifier","start":3307,"end":3321,"name":"addPlaceholder"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3322,"end":3327,"name":"index"},{"type":"Identifier","start":3329,"end":3333,"name":"disp"}],"optional":false}}]},"alternate":{"type":"IfStatement","start":3369,"end":3589,"test":{"type":"Identifier","start":3373,"end":3378,"name":"isICU"},"consequent":{"type":"BlockStatement","start":3380,"end":3452,"body":[{"type":"ExpressionStatement","start":3399,"end":3437,"expression":{"type":"CallExpression","start":3399,"end":3436,"callee":{"type":"MemberExpression","start":3399,"end":3423,"object":{"type":"Identifier","start":3399,"end":3406,"name":"message"},"property":{"type":"Identifier","start":3407,"end":3423,"name":"addICUMessageRef"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3424,"end":3429,"name":"index"},{"type":"Identifier","start":3431,"end":3435,"name":"disp"}],"optional":false}}]},"alternate":{"type":"IfStatement","start":3471,"end":3589,"test":{"type":"Identifier","start":3475,"end":3485,"name":"isEmptyTag"},"consequent":{"type":"BlockStatement","start":3487,"end":3589,"body":[{"type":"ExpressionStatement","start":3506,"end":3574,"expression":{"type":"CallExpression","start":3506,"end":3573,"callee":{"type":"MemberExpression","start":3506,"end":3525,"object":{"type":"Identifier","start":3506,"end":3513,"name":"message"},"property":{"type":"Identifier","start":3514,"end":3525,"name":"addEmptyTag"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3526,"end":3538,"name":"emptyTagName"},{"type":"CallExpression","start":3540,"end":3572,"callee":{"type":"MemberExpression","start":3540,"end":3565,"object":{"type":"ThisExpression","start":3540,"end":3544},"property":{"type":"Identifier","start":3545,"end":3565,"name":"parseIdCountFromName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3566,"end":3571,"name":"equiv"}],"optional":false}],"optional":false}}]},"alternate":null}}}]},"alternate":{"type":"IfStatement","start":3615,"end":4079,"test":{"type":"BinaryExpression","start":3619,"end":3635,"left":{"type":"Identifier","start":3619,"end":3626,"name":"tagName"},"operator":"===","right":{"type":"Literal","start":3631,"end":3635,"value":"pc","raw":"'pc'"}},"consequent":{"type":"BlockStatement","start":3637,"end":4079,"body":[{"type":"VariableDeclaration","start":3832,"end":3895,"declarations":[{"type":"VariableDeclarator","start":3838,"end":3894,"id":{"type":"Identifier","start":3838,"end":3853,"name":"embeddedTagName"},"init":{"type":"CallExpression","start":3856,"end":3894,"callee":{"type":"MemberExpression","start":3856,"end":3881,"object":{"type":"ThisExpression","start":3856,"end":3860},"property":{"type":"Identifier","start":3861,"end":3881,"name":"tagNameFromPCElement"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3882,"end":3893,"name":"elementNode"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3909,"end":4068,"test":{"type":"Identifier","start":3913,"end":3928,"name":"embeddedTagName"},"consequent":{"type":"BlockStatement","start":3930,"end":4068,"body":[{"type":"ExpressionStatement","start":3949,"end":4053,"expression":{"type":"CallExpression","start":3949,"end":4052,"callee":{"type":"MemberExpression","start":3949,"end":3968,"object":{"type":"Identifier","start":3949,"end":3956,"name":"message"},"property":{"type":"Identifier","start":3957,"end":3968,"name":"addStartTag"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3969,"end":3984,"name":"embeddedTagName"},{"type":"CallExpression","start":3986,"end":4051,"callee":{"type":"MemberExpression","start":3986,"end":4011,"object":{"type":"ThisExpression","start":3986,"end":3990},"property":{"type":"Identifier","start":3991,"end":4011,"name":"parseIdCountFromName"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":4012,"end":4050,"callee":{"type":"MemberExpression","start":4012,"end":4036,"object":{"type":"Identifier","start":4012,"end":4023,"name":"elementNode"},"property":{"type":"Identifier","start":4024,"end":4036,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4037,"end":4049,"value":"equivStart","raw":"'equivStart'"}],"optional":false}],"optional":false}],"optional":false}}]},"alternate":null}]},"alternate":null}},{"type":"ReturnStatement","start":4089,"end":4101,"argument":{"type":"Literal","start":4096,"end":4100,"value":true,"raw":"true"}}]}}},{"type":"MethodDefinition","start":4314,"end":4834,"static":false,"computed":false,"key":{"type":"Identifier","start":4314,"end":4331,"name":"processEndElement"},"kind":"method","value":{"type":"FunctionExpression","start":4331,"end":4834,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4332,"end":4343,"name":"elementNode"},{"type":"Identifier","start":4345,"end":4352,"name":"message"}],"body":{"type":"BlockStatement","start":4354,"end":4834,"body":[{"type":"VariableDeclaration","start":4365,"end":4401,"declarations":[{"type":"VariableDeclarator","start":4371,"end":4400,"id":{"type":"Identifier","start":4371,"end":4378,"name":"tagName"},"init":{"type":"MemberExpression","start":4381,"end":4400,"object":{"type":"Identifier","start":4381,"end":4392,"name":"elementNode"},"property":{"type":"Identifier","start":4393,"end":4400,"name":"tagName"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":4411,"end":4827,"test":{"type":"BinaryExpression","start":4415,"end":4431,"left":{"type":"Identifier","start":4415,"end":4422,"name":"tagName"},"operator":"===","right":{"type":"Literal","start":4427,"end":4431,"value":"pc","raw":"'pc'"}},"consequent":{"type":"BlockStatement","start":4433,"end":4827,"body":[{"type":"VariableDeclaration","start":4628,"end":4691,"declarations":[{"type":"VariableDeclarator","start":4634,"end":4690,"id":{"type":"Identifier","start":4634,"end":4649,"name":"embeddedTagName"},"init":{"type":"CallExpression","start":4652,"end":4690,"callee":{"type":"MemberExpression","start":4652,"end":4677,"object":{"type":"ThisExpression","start":4652,"end":4656},"property":{"type":"Identifier","start":4657,"end":4677,"name":"tagNameFromPCElement"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4678,"end":4689,"name":"elementNode"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":4705,"end":4795,"test":{"type":"Identifier","start":4709,"end":4724,"name":"embeddedTagName"},"consequent":{"type":"BlockStatement","start":4726,"end":4795,"body":[{"type":"ExpressionStatement","start":4745,"end":4780,"expression":{"type":"CallExpression","start":4745,"end":4779,"callee":{"type":"MemberExpression","start":4745,"end":4762,"object":{"type":"Identifier","start":4745,"end":4752,"name":"message"},"property":{"type":"Identifier","start":4753,"end":4762,"name":"addEndTag"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":4763,"end":4778,"name":"embeddedTagName"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":4809,"end":4816,"argument":null}]},"alternate":null}]}}},{"type":"MethodDefinition","start":4840,"end":5187,"static":false,"computed":false,"key":{"type":"Identifier","start":4840,"end":4860,"name":"tagNameFromPCElement"},"kind":"method","value":{"type":"FunctionExpression","start":4860,"end":5187,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4861,"end":4867,"name":"pcNode"}],"body":{"type":"BlockStatement","start":4869,"end":5187,"body":[{"type":"VariableDeclaration","start":4880,"end":4929,"declarations":[{"type":"VariableDeclarator","start":4884,"end":4928,"id":{"type":"Identifier","start":4884,"end":4893,"name":"dispStart"},"init":{"type":"CallExpression","start":4896,"end":4928,"callee":{"type":"MemberExpression","start":4896,"end":4915,"object":{"type":"Identifier","start":4896,"end":4902,"name":"pcNode"},"property":{"type":"Identifier","start":4903,"end":4915,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4916,"end":4927,"value":"dispStart","raw":"'dispStart'"}],"optional":false}}],"kind":"let"},{"type":"IfStatement","start":4939,"end":5031,"test":{"type":"CallExpression","start":4943,"end":4968,"callee":{"type":"MemberExpression","start":4943,"end":4963,"object":{"type":"Identifier","start":4943,"end":4952,"name":"dispStart"},"property":{"type":"Identifier","start":4953,"end":4963,"name":"startsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4964,"end":4967,"value":"<","raw":"'<'"}],"optional":false},"consequent":{"type":"BlockStatement","start":4970,"end":5031,"body":[{"type":"ExpressionStatement","start":4985,"end":5020,"expression":{"type":"AssignmentExpression","start":4985,"end":5019,"operator":"=","left":{"type":"Identifier","start":4985,"end":4994,"name":"dispStart"},"right":{"type":"CallExpression","start":4997,"end":5019,"callee":{"type":"MemberExpression","start":4997,"end":5016,"object":{"type":"Identifier","start":4997,"end":5006,"name":"dispStart"},"property":{"type":"Identifier","start":5007,"end":5016,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5017,"end":5018,"value":1,"raw":"1"}],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":5041,"end":5153,"test":{"type":"CallExpression","start":5045,"end":5068,"callee":{"type":"MemberExpression","start":5045,"end":5063,"object":{"type":"Identifier","start":5045,"end":5054,"name":"dispStart"},"property":{"type":"Identifier","start":5055,"end":5063,"name":"endsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5064,"end":5067,"value":">","raw":"'>'"}],"optional":false},"consequent":{"type":"BlockStatement","start":5070,"end":5153,"body":[{"type":"ExpressionStatement","start":5085,"end":5142,"expression":{"type":"AssignmentExpression","start":5085,"end":5141,"operator":"=","left":{"type":"Identifier","start":5085,"end":5094,"name":"dispStart"},"right":{"type":"CallExpression","start":5097,"end":5141,"callee":{"type":"MemberExpression","start":5097,"end":5116,"object":{"type":"Identifier","start":5097,"end":5106,"name":"dispStart"},"property":{"type":"Identifier","start":5107,"end":5116,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5117,"end":5118,"value":0,"raw":"0"},{"type":"BinaryExpression","start":5120,"end":5140,"left":{"type":"MemberExpression","start":5120,"end":5136,"object":{"type":"Identifier","start":5120,"end":5129,"name":"dispStart"},"property":{"type":"Identifier","start":5130,"end":5136,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":5139,"end":5140,"value":1,"raw":"1"}}],"optional":false}}}]},"alternate":null},{"type":"ReturnStatement","start":5163,"end":5180,"argument":{"type":"Identifier","start":5170,"end":5179,"name":"dispStart"}}]}}},{"type":"MethodDefinition","start":5414,"end":7523,"static":false,"computed":false,"key":{"type":"Identifier","start":5414,"end":5440,"name":"addXmlRepresentationToRoot"},"kind":"method","value":{"type":"FunctionExpression","start":5440,"end":7523,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5441,"end":5448,"name":"message"},{"type":"Identifier","start":5450,"end":5458,"name":"rootElem"}],"body":{"type":"BlockStatement","start":5460,"end":7523,"body":[{"type":"VariableDeclaration","start":5471,"end":5526,"declarations":[{"type":"VariableDeclarator","start":5477,"end":5525,"id":{"type":"Identifier","start":5477,"end":5482,"name":"stack"},"init":{"type":"ArrayExpression","start":5485,"end":5525,"elements":[{"type":"ObjectExpression","start":5486,"end":5524,"properties":[{"type":"Property","start":5488,"end":5505,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":5488,"end":5495,"name":"element"},"value":{"type":"Identifier","start":5497,"end":5505,"name":"rootElem"},"kind":"init"},{"type":"Property","start":5507,"end":5522,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":5507,"end":5514,"name":"tagName"},"value":{"type":"Literal","start":5516,"end":5522,"value":"root","raw":"'root'"},"kind":"init"}]}]}}],"kind":"const"},{"type":"VariableDeclaration","start":5536,"end":5547,"declarations":[{"type":"VariableDeclarator","start":5540,"end":5546,"id":{"type":"Identifier","start":5540,"end":5542,"name":"id"},"init":{"type":"Literal","start":5545,"end":5546,"value":0,"raw":"0"}}],"kind":"let"},{"type":"ExpressionStatement","start":5557,"end":7341,"expression":{"type":"CallExpression","start":5557,"end":7340,"callee":{"type":"MemberExpression","start":5557,"end":5580,"object":{"type":"CallExpression","start":5557,"end":5572,"callee":{"type":"MemberExpression","start":5557,"end":5570,"object":{"type":"Identifier","start":5557,"end":5564,"name":"message"},"property":{"type":"Identifier","start":5565,"end":5570,"name":"parts"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":5573,"end":5580,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":5581,"end":7339,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5582,"end":5586,"name":"part"}],"body":{"type":"BlockStatement","start":5591,"end":7339,"body":[{"type":"SwitchStatement","start":5606,"end":7328,"discriminant":{"type":"MemberExpression","start":5614,"end":5623,"object":{"type":"Identifier","start":5614,"end":5618,"name":"part"},"property":{"type":"Identifier","start":5619,"end":5623,"name":"type"},"computed":false,"optional":false},"cases":[{"type":"SwitchCase","start":5644,"end":5826,"consequent":[{"type":"ExpressionStatement","start":5698,"end":5798,"expression":{"type":"CallExpression","start":5698,"end":5797,"callee":{"type":"MemberExpression","start":5698,"end":5741,"object":{"type":"MemberExpression","start":5698,"end":5729,"object":{"type":"MemberExpression","start":5698,"end":5721,"object":{"type":"Identifier","start":5698,"end":5703,"name":"stack"},"property":{"type":"BinaryExpression","start":5704,"end":5720,"left":{"type":"MemberExpression","start":5704,"end":5716,"object":{"type":"Identifier","start":5704,"end":5709,"name":"stack"},"property":{"type":"Identifier","start":5710,"end":5716,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":5719,"end":5720,"value":1,"raw":"1"}},"computed":true,"optional":false},"property":{"type":"Identifier","start":5722,"end":5729,"name":"element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5730,"end":5741,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":5742,"end":5796,"callee":{"type":"MemberExpression","start":5742,"end":5780,"object":{"type":"ThisExpression","start":5742,"end":5746},"property":{"type":"Identifier","start":5747,"end":5780,"name":"createXmlRepresentationOfTextPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5781,"end":5785,"name":"part"},{"type":"Identifier","start":5787,"end":5795,"name":"rootElem"}],"optional":false}],"optional":false}},{"type":"BreakStatement","start":5820,"end":5826,"label":null}],"test":{"type":"MemberExpression","start":5649,"end":5675,"object":{"type":"Identifier","start":5649,"end":5670,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":5671,"end":5675,"name":"TEXT"},"computed":false,"optional":false}},{"type":"SwitchCase","start":5844,"end":6046,"consequent":[{"type":"ExpressionStatement","start":5905,"end":6018,"expression":{"type":"CallExpression","start":5905,"end":6017,"callee":{"type":"MemberExpression","start":5905,"end":5948,"object":{"type":"MemberExpression","start":5905,"end":5936,"object":{"type":"MemberExpression","start":5905,"end":5928,"object":{"type":"Identifier","start":5905,"end":5910,"name":"stack"},"property":{"type":"BinaryExpression","start":5911,"end":5927,"left":{"type":"MemberExpression","start":5911,"end":5923,"object":{"type":"Identifier","start":5911,"end":5916,"name":"stack"},"property":{"type":"Identifier","start":5917,"end":5923,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":5926,"end":5927,"value":1,"raw":"1"}},"computed":true,"optional":false},"property":{"type":"Identifier","start":5929,"end":5936,"name":"element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5937,"end":5948,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":5949,"end":6016,"callee":{"type":"MemberExpression","start":5949,"end":5994,"object":{"type":"ThisExpression","start":5949,"end":5953},"property":{"type":"Identifier","start":5954,"end":5994,"name":"createXmlRepresentationOfPlaceholderPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5995,"end":5999,"name":"part"},{"type":"Identifier","start":6001,"end":6009,"name":"rootElem"},{"type":"UpdateExpression","start":6011,"end":6015,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":6011,"end":6013,"name":"id"}}],"optional":false}],"optional":false}},{"type":"BreakStatement","start":6040,"end":6046,"label":null}],"test":{"type":"MemberExpression","start":5849,"end":5882,"object":{"type":"Identifier","start":5849,"end":5870,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":5871,"end":5882,"name":"PLACEHOLDER"},"computed":false,"optional":false}},{"type":"SwitchCase","start":6064,"end":6266,"consequent":[{"type":"ExpressionStatement","start":6129,"end":6238,"expression":{"type":"CallExpression","start":6129,"end":6237,"callee":{"type":"MemberExpression","start":6129,"end":6172,"object":{"type":"MemberExpression","start":6129,"end":6160,"object":{"type":"MemberExpression","start":6129,"end":6152,"object":{"type":"Identifier","start":6129,"end":6134,"name":"stack"},"property":{"type":"BinaryExpression","start":6135,"end":6151,"left":{"type":"MemberExpression","start":6135,"end":6147,"object":{"type":"Identifier","start":6135,"end":6140,"name":"stack"},"property":{"type":"Identifier","start":6141,"end":6147,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":6150,"end":6151,"value":1,"raw":"1"}},"computed":true,"optional":false},"property":{"type":"Identifier","start":6153,"end":6160,"name":"element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6161,"end":6172,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6173,"end":6236,"callee":{"type":"MemberExpression","start":6173,"end":6220,"object":{"type":"ThisExpression","start":6173,"end":6177},"property":{"type":"Identifier","start":6178,"end":6220,"name":"createXmlRepresentationOfICUMessageRefPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6221,"end":6225,"name":"part"},{"type":"Identifier","start":6227,"end":6235,"name":"rootElem"}],"optional":false}],"optional":false}},{"type":"BreakStatement","start":6260,"end":6266,"label":null}],"test":{"type":"MemberExpression","start":6069,"end":6106,"object":{"type":"Identifier","start":6069,"end":6090,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":6091,"end":6106,"name":"ICU_MESSAGE_REF"},"computed":false,"optional":false}},{"type":"SwitchCase","start":6284,"end":6616,"consequent":[{"type":"VariableDeclaration","start":6343,"end":6427,"declarations":[{"type":"VariableDeclarator","start":6349,"end":6426,"id":{"type":"Identifier","start":6349,"end":6359,"name":"newTagElem"},"init":{"type":"CallExpression","start":6362,"end":6426,"callee":{"type":"MemberExpression","start":6362,"end":6404,"object":{"type":"ThisExpression","start":6362,"end":6366},"property":{"type":"Identifier","start":6367,"end":6404,"name":"createXmlRepresentationOfStartTagPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6405,"end":6409,"name":"part"},{"type":"Identifier","start":6411,"end":6419,"name":"rootElem"},{"type":"UpdateExpression","start":6421,"end":6425,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":6421,"end":6423,"name":"id"}}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":6449,"end":6505,"expression":{"type":"CallExpression","start":6449,"end":6504,"callee":{"type":"MemberExpression","start":6449,"end":6492,"object":{"type":"MemberExpression","start":6449,"end":6480,"object":{"type":"MemberExpression","start":6449,"end":6472,"object":{"type":"Identifier","start":6449,"end":6454,"name":"stack"},"property":{"type":"BinaryExpression","start":6455,"end":6471,"left":{"type":"MemberExpression","start":6455,"end":6467,"object":{"type":"Identifier","start":6455,"end":6460,"name":"stack"},"property":{"type":"Identifier","start":6461,"end":6467,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":6470,"end":6471,"value":1,"raw":"1"}},"computed":true,"optional":false},"property":{"type":"Identifier","start":6473,"end":6480,"name":"element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6481,"end":6492,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6493,"end":6503,"name":"newTagElem"}],"optional":false}},{"type":"ExpressionStatement","start":6527,"end":6588,"expression":{"type":"CallExpression","start":6527,"end":6587,"callee":{"type":"MemberExpression","start":6527,"end":6537,"object":{"type":"Identifier","start":6527,"end":6532,"name":"stack"},"property":{"type":"Identifier","start":6533,"end":6537,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"ObjectExpression","start":6538,"end":6586,"properties":[{"type":"Property","start":6540,"end":6559,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":6540,"end":6547,"name":"element"},"value":{"type":"Identifier","start":6549,"end":6559,"name":"newTagElem"},"kind":"init"},{"type":"Property","start":6561,"end":6584,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":6561,"end":6568,"name":"tagName"},"value":{"type":"CallExpression","start":6570,"end":6584,"callee":{"type":"MemberExpression","start":6570,"end":6582,"object":{"type":"Identifier","start":6570,"end":6574,"name":"part"},"property":{"type":"Identifier","start":6575,"end":6582,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false},"kind":"init"}]}],"optional":false}},{"type":"BreakStatement","start":6610,"end":6616,"label":null}],"test":{"type":"MemberExpression","start":6289,"end":6320,"object":{"type":"Identifier","start":6289,"end":6310,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":6311,"end":6320,"name":"START_TAG"},"computed":false,"optional":false}},{"type":"SwitchCase","start":6634,"end":7042,"consequent":[{"type":"VariableDeclaration","start":6691,"end":6727,"declarations":[{"type":"VariableDeclarator","start":6697,"end":6726,"id":{"type":"Identifier","start":6697,"end":6709,"name":"closeTagName"},"init":{"type":"CallExpression","start":6712,"end":6726,"callee":{"type":"MemberExpression","start":6712,"end":6724,"object":{"type":"Identifier","start":6712,"end":6716,"name":"part"},"property":{"type":"Identifier","start":6717,"end":6724,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":6749,"end":6980,"test":{"type":"LogicalExpression","start":6753,"end":6822,"left":{"type":"BinaryExpression","start":6753,"end":6770,"left":{"type":"MemberExpression","start":6753,"end":6765,"object":{"type":"Identifier","start":6753,"end":6758,"name":"stack"},"property":{"type":"Identifier","start":6759,"end":6765,"name":"length"},"computed":false,"optional":false},"operator":"<=","right":{"type":"Literal","start":6769,"end":6770,"value":1,"raw":"1"}},"operator":"||","right":{"type":"BinaryExpression","start":6774,"end":6822,"left":{"type":"MemberExpression","start":6774,"end":6805,"object":{"type":"MemberExpression","start":6774,"end":6797,"object":{"type":"Identifier","start":6774,"end":6779,"name":"stack"},"property":{"type":"BinaryExpression","start":6780,"end":6796,"left":{"type":"MemberExpression","start":6780,"end":6792,"object":{"type":"Identifier","start":6780,"end":6785,"name":"stack"},"property":{"type":"Identifier","start":6786,"end":6792,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":6795,"end":6796,"value":1,"raw":"1"}},"computed":true,"optional":false},"property":{"type":"Identifier","start":6798,"end":6805,"name":"tagName"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Identifier","start":6810,"end":6822,"name":"closeTagName"}}},"consequent":{"type":"BlockStatement","start":6824,"end":6980,"body":[{"type":"ThrowStatement","start":6901,"end":6957,"argument":{"type":"NewExpression","start":6907,"end":6956,"callee":{"type":"Identifier","start":6911,"end":6916,"name":"Error"},"arguments":[{"type":"BinaryExpression","start":6917,"end":6955,"left":{"type":"Literal","start":6917,"end":6940,"value":"unexpected close tag ","raw":"'unexpected close tag '"},"operator":"+","right":{"type":"Identifier","start":6943,"end":6955,"name":"closeTagName"}}]}}]},"alternate":null},{"type":"ExpressionStatement","start":7002,"end":7014,"expression":{"type":"CallExpression","start":7002,"end":7013,"callee":{"type":"MemberExpression","start":7002,"end":7011,"object":{"type":"Identifier","start":7002,"end":7007,"name":"stack"},"property":{"type":"Identifier","start":7008,"end":7011,"name":"pop"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"BreakStatement","start":7036,"end":7042,"label":null}],"test":{"type":"MemberExpression","start":6639,"end":6668,"object":{"type":"Identifier","start":6639,"end":6660,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":6661,"end":6668,"name":"END_TAG"},"computed":false,"optional":false}},{"type":"SwitchCase","start":7060,"end":7313,"consequent":[{"type":"VariableDeclaration","start":7119,"end":7205,"declarations":[{"type":"VariableDeclarator","start":7125,"end":7204,"id":{"type":"Identifier","start":7125,"end":7137,"name":"emptyTagElem"},"init":{"type":"CallExpression","start":7140,"end":7204,"callee":{"type":"MemberExpression","start":7140,"end":7182,"object":{"type":"ThisExpression","start":7140,"end":7144},"property":{"type":"Identifier","start":7145,"end":7182,"name":"createXmlRepresentationOfEmptyTagPart"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7183,"end":7187,"name":"part"},{"type":"Identifier","start":7189,"end":7197,"name":"rootElem"},{"type":"UpdateExpression","start":7199,"end":7203,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":7199,"end":7201,"name":"id"}}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7227,"end":7285,"expression":{"type":"CallExpression","start":7227,"end":7284,"callee":{"type":"MemberExpression","start":7227,"end":7270,"object":{"type":"MemberExpression","start":7227,"end":7258,"object":{"type":"MemberExpression","start":7227,"end":7250,"object":{"type":"Identifier","start":7227,"end":7232,"name":"stack"},"property":{"type":"BinaryExpression","start":7233,"end":7249,"left":{"type":"MemberExpression","start":7233,"end":7245,"object":{"type":"Identifier","start":7233,"end":7238,"name":"stack"},"property":{"type":"Identifier","start":7239,"end":7245,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":7248,"end":7249,"value":1,"raw":"1"}},"computed":true,"optional":false},"property":{"type":"Identifier","start":7251,"end":7258,"name":"element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7259,"end":7270,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7271,"end":7283,"name":"emptyTagElem"}],"optional":false}},{"type":"BreakStatement","start":7307,"end":7313,"label":null}],"test":{"type":"MemberExpression","start":7065,"end":7096,"object":{"type":"Identifier","start":7065,"end":7086,"name":"ParsedMessagePartType"},"property":{"type":"Identifier","start":7087,"end":7096,"name":"EMPTY_TAG"},"computed":false,"optional":false}}]}]}}],"optional":false}},{"type":"IfStatement","start":7351,"end":7516,"test":{"type":"BinaryExpression","start":7355,"end":7373,"left":{"type":"MemberExpression","start":7355,"end":7367,"object":{"type":"Identifier","start":7355,"end":7360,"name":"stack"},"property":{"type":"Identifier","start":7361,"end":7367,"name":"length"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Literal","start":7372,"end":7373,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":7375,"end":7516,"body":[{"type":"ThrowStatement","start":7433,"end":7505,"argument":{"type":"NewExpression","start":7439,"end":7504,"callee":{"type":"Identifier","start":7443,"end":7448,"name":"Error"},"arguments":[{"type":"BinaryExpression","start":7449,"end":7503,"left":{"type":"Literal","start":7449,"end":7469,"value":"missing close tag ","raw":"'missing close tag '"},"operator":"+","right":{"type":"MemberExpression","start":7472,"end":7503,"object":{"type":"MemberExpression","start":7472,"end":7495,"object":{"type":"Identifier","start":7472,"end":7477,"name":"stack"},"property":{"type":"BinaryExpression","start":7478,"end":7494,"left":{"type":"MemberExpression","start":7478,"end":7490,"object":{"type":"Identifier","start":7478,"end":7483,"name":"stack"},"property":{"type":"Identifier","start":7484,"end":7490,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":7493,"end":7494,"value":1,"raw":"1"}},"computed":true,"optional":false},"property":{"type":"Identifier","start":7496,"end":7503,"name":"tagName"},"computed":false,"optional":false}}]}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":7908,"end":8748,"static":false,"computed":false,"key":{"type":"Identifier","start":7908,"end":7945,"name":"createXmlRepresentationOfStartTagPart"},"kind":"method","value":{"type":"FunctionExpression","start":7945,"end":8748,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7946,"end":7950,"name":"part"},{"type":"Identifier","start":7952,"end":7960,"name":"rootElem"},{"type":"Identifier","start":7962,"end":7964,"name":"id"}],"body":{"type":"BlockStatement","start":7966,"end":8748,"body":[{"type":"VariableDeclaration","start":7977,"end":8013,"declarations":[{"type":"VariableDeclarator","start":7983,"end":8012,"id":{"type":"Identifier","start":7983,"end":7993,"name":"tagMapping"},"init":{"type":"NewExpression","start":7996,"end":8012,"callee":{"type":"Identifier","start":8000,"end":8010,"name":"TagMapping"},"arguments":[]}}],"kind":"const"},{"type":"VariableDeclaration","start":8023,"end":8081,"declarations":[{"type":"VariableDeclarator","start":8029,"end":8080,"id":{"type":"Identifier","start":8029,"end":8035,"name":"pcElem"},"init":{"type":"CallExpression","start":8038,"end":8080,"callee":{"type":"MemberExpression","start":8038,"end":8074,"object":{"type":"MemberExpression","start":8038,"end":8060,"object":{"type":"Identifier","start":8038,"end":8046,"name":"rootElem"},"property":{"type":"Identifier","start":8047,"end":8060,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8061,"end":8074,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8075,"end":8079,"value":"pc","raw":"'pc'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":8091,"end":8122,"declarations":[{"type":"VariableDeclarator","start":8097,"end":8121,"id":{"type":"Identifier","start":8097,"end":8104,"name":"tagName"},"init":{"type":"CallExpression","start":8107,"end":8121,"callee":{"type":"MemberExpression","start":8107,"end":8119,"object":{"type":"Identifier","start":8107,"end":8111,"name":"part"},"property":{"type":"Identifier","start":8112,"end":8119,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":8132,"end":8216,"declarations":[{"type":"VariableDeclarator","start":8138,"end":8215,"id":{"type":"Identifier","start":8138,"end":8148,"name":"equivStart"},"init":{"type":"CallExpression","start":8151,"end":8215,"callee":{"type":"MemberExpression","start":8151,"end":8188,"object":{"type":"Identifier","start":8151,"end":8161,"name":"tagMapping"},"property":{"type":"Identifier","start":8162,"end":8188,"name":"getStartTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8189,"end":8196,"name":"tagName"},{"type":"CallExpression","start":8198,"end":8214,"callee":{"type":"MemberExpression","start":8198,"end":8212,"object":{"type":"Identifier","start":8198,"end":8202,"name":"part"},"property":{"type":"Identifier","start":8203,"end":8212,"name":"idCounter"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":8226,"end":8290,"declarations":[{"type":"VariableDeclarator","start":8232,"end":8289,"id":{"type":"Identifier","start":8232,"end":8240,"name":"equivEnd"},"init":{"type":"CallExpression","start":8243,"end":8289,"callee":{"type":"MemberExpression","start":8243,"end":8280,"object":{"type":"Identifier","start":8243,"end":8253,"name":"tagMapping"},"property":{"type":"Identifier","start":8254,"end":8280,"name":"getCloseTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8281,"end":8288,"name":"tagName"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":8300,"end":8338,"declarations":[{"type":"VariableDeclarator","start":8306,"end":8337,"id":{"type":"Identifier","start":8306,"end":8315,"name":"dispStart"},"init":{"type":"BinaryExpression","start":8318,"end":8337,"left":{"type":"BinaryExpression","start":8318,"end":8331,"left":{"type":"Literal","start":8318,"end":8321,"value":"<","raw":"'<'"},"operator":"+","right":{"type":"Identifier","start":8324,"end":8331,"name":"tagName"}},"operator":"+","right":{"type":"Literal","start":8334,"end":8337,"value":">","raw":"'>'"}}}],"kind":"const"},{"type":"VariableDeclaration","start":8348,"end":8385,"declarations":[{"type":"VariableDeclarator","start":8354,"end":8384,"id":{"type":"Identifier","start":8354,"end":8361,"name":"dispEnd"},"init":{"type":"BinaryExpression","start":8364,"end":8384,"left":{"type":"BinaryExpression","start":8364,"end":8378,"left":{"type":"Literal","start":8364,"end":8368,"value":"</","raw":"'</'"},"operator":"+","right":{"type":"Identifier","start":8371,"end":8378,"name":"tagName"}},"operator":"+","right":{"type":"Literal","start":8381,"end":8384,"value":">","raw":"'>'"}}}],"kind":"const"},{"type":"ExpressionStatement","start":8395,"end":8438,"expression":{"type":"CallExpression","start":8395,"end":8437,"callee":{"type":"MemberExpression","start":8395,"end":8414,"object":{"type":"Identifier","start":8395,"end":8401,"name":"pcElem"},"property":{"type":"Identifier","start":8402,"end":8414,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8415,"end":8419,"value":"id","raw":"'id'"},{"type":"CallExpression","start":8421,"end":8436,"callee":{"type":"MemberExpression","start":8421,"end":8432,"object":{"type":"Identifier","start":8421,"end":8423,"name":"id"},"property":{"type":"Identifier","start":8424,"end":8432,"name":"toString"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8433,"end":8435,"value":10,"raw":"10"}],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":8448,"end":8494,"expression":{"type":"CallExpression","start":8448,"end":8493,"callee":{"type":"MemberExpression","start":8448,"end":8467,"object":{"type":"Identifier","start":8448,"end":8454,"name":"pcElem"},"property":{"type":"Identifier","start":8455,"end":8467,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8468,"end":8480,"value":"equivStart","raw":"'equivStart'"},{"type":"Identifier","start":8482,"end":8492,"name":"equivStart"}],"optional":false}},{"type":"ExpressionStatement","start":8504,"end":8546,"expression":{"type":"CallExpression","start":8504,"end":8545,"callee":{"type":"MemberExpression","start":8504,"end":8523,"object":{"type":"Identifier","start":8504,"end":8510,"name":"pcElem"},"property":{"type":"Identifier","start":8511,"end":8523,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8524,"end":8534,"value":"equivEnd","raw":"'equivEnd'"},{"type":"Identifier","start":8536,"end":8544,"name":"equivEnd"}],"optional":false}},{"type":"ExpressionStatement","start":8556,"end":8613,"expression":{"type":"CallExpression","start":8556,"end":8612,"callee":{"type":"MemberExpression","start":8556,"end":8575,"object":{"type":"Identifier","start":8556,"end":8562,"name":"pcElem"},"property":{"type":"Identifier","start":8563,"end":8575,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8576,"end":8582,"value":"type","raw":"'type'"},{"type":"CallExpression","start":8584,"end":8611,"callee":{"type":"MemberExpression","start":8584,"end":8602,"object":{"type":"ThisExpression","start":8584,"end":8588},"property":{"type":"Identifier","start":8589,"end":8602,"name":"getTypeForTag"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8603,"end":8610,"name":"tagName"}],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":8623,"end":8667,"expression":{"type":"CallExpression","start":8623,"end":8666,"callee":{"type":"MemberExpression","start":8623,"end":8642,"object":{"type":"Identifier","start":8623,"end":8629,"name":"pcElem"},"property":{"type":"Identifier","start":8630,"end":8642,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8643,"end":8654,"value":"dispStart","raw":"'dispStart'"},{"type":"Identifier","start":8656,"end":8665,"name":"dispStart"}],"optional":false}},{"type":"ExpressionStatement","start":8677,"end":8717,"expression":{"type":"CallExpression","start":8677,"end":8716,"callee":{"type":"MemberExpression","start":8677,"end":8696,"object":{"type":"Identifier","start":8677,"end":8683,"name":"pcElem"},"property":{"type":"Identifier","start":8684,"end":8696,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8697,"end":8706,"value":"dispEnd","raw":"'dispEnd'"},{"type":"Identifier","start":8708,"end":8715,"name":"dispEnd"}],"optional":false}},{"type":"ReturnStatement","start":8727,"end":8741,"argument":{"type":"Identifier","start":8734,"end":8740,"name":"pcElem"}}]}}},{"type":"MethodDefinition","start":8941,"end":9044,"static":false,"computed":false,"key":{"type":"Identifier","start":8941,"end":8976,"name":"createXmlRepresentationOfEndTagPart"},"kind":"method","value":{"type":"FunctionExpression","start":8976,"end":9044,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8977,"end":8981,"name":"part"},{"type":"Identifier","start":8983,"end":8991,"name":"rootElem"}],"body":{"type":"BlockStatement","start":8993,"end":9044,"body":[{"type":"ReturnStatement","start":9025,"end":9037,"argument":{"type":"Literal","start":9032,"end":9036,"value":null,"raw":"null"}}]}}},{"type":"MethodDefinition","start":9324,"end":9912,"static":false,"computed":false,"key":{"type":"Identifier","start":9324,"end":9361,"name":"createXmlRepresentationOfEmptyTagPart"},"kind":"method","value":{"type":"FunctionExpression","start":9361,"end":9912,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9362,"end":9366,"name":"part"},{"type":"Identifier","start":9368,"end":9376,"name":"rootElem"},{"type":"Identifier","start":9378,"end":9380,"name":"id"}],"body":{"type":"BlockStatement","start":9382,"end":9912,"body":[{"type":"VariableDeclaration","start":9393,"end":9429,"declarations":[{"type":"VariableDeclarator","start":9399,"end":9428,"id":{"type":"Identifier","start":9399,"end":9409,"name":"tagMapping"},"init":{"type":"NewExpression","start":9412,"end":9428,"callee":{"type":"Identifier","start":9416,"end":9426,"name":"TagMapping"},"arguments":[]}}],"kind":"const"},{"type":"VariableDeclaration","start":9439,"end":9497,"declarations":[{"type":"VariableDeclarator","start":9445,"end":9496,"id":{"type":"Identifier","start":9445,"end":9451,"name":"phElem"},"init":{"type":"CallExpression","start":9454,"end":9496,"callee":{"type":"MemberExpression","start":9454,"end":9490,"object":{"type":"MemberExpression","start":9454,"end":9476,"object":{"type":"Identifier","start":9454,"end":9462,"name":"rootElem"},"property":{"type":"Identifier","start":9463,"end":9476,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9477,"end":9490,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9491,"end":9495,"value":"ph","raw":"'ph'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":9507,"end":9538,"declarations":[{"type":"VariableDeclarator","start":9513,"end":9537,"id":{"type":"Identifier","start":9513,"end":9520,"name":"tagName"},"init":{"type":"CallExpression","start":9523,"end":9537,"callee":{"type":"MemberExpression","start":9523,"end":9535,"object":{"type":"Identifier","start":9523,"end":9527,"name":"part"},"property":{"type":"Identifier","start":9528,"end":9535,"name":"tagName"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":9548,"end":9627,"declarations":[{"type":"VariableDeclarator","start":9554,"end":9626,"id":{"type":"Identifier","start":9554,"end":9559,"name":"equiv"},"init":{"type":"CallExpression","start":9562,"end":9626,"callee":{"type":"MemberExpression","start":9562,"end":9599,"object":{"type":"Identifier","start":9562,"end":9572,"name":"tagMapping"},"property":{"type":"Identifier","start":9573,"end":9599,"name":"getEmptyTagPlaceholderName"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9600,"end":9607,"name":"tagName"},{"type":"CallExpression","start":9609,"end":9625,"callee":{"type":"MemberExpression","start":9609,"end":9623,"object":{"type":"Identifier","start":9609,"end":9613,"name":"part"},"property":{"type":"Identifier","start":9614,"end":9623,"name":"idCounter"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":9637,"end":9671,"declarations":[{"type":"VariableDeclarator","start":9643,"end":9670,"id":{"type":"Identifier","start":9643,"end":9647,"name":"disp"},"init":{"type":"BinaryExpression","start":9650,"end":9670,"left":{"type":"BinaryExpression","start":9650,"end":9663,"left":{"type":"Literal","start":9650,"end":9653,"value":"<","raw":"'<'"},"operator":"+","right":{"type":"Identifier","start":9656,"end":9663,"name":"tagName"}},"operator":"+","right":{"type":"Literal","start":9666,"end":9670,"value":"/>","raw":"'/>'"}}}],"kind":"const"},{"type":"ExpressionStatement","start":9681,"end":9724,"expression":{"type":"CallExpression","start":9681,"end":9723,"callee":{"type":"MemberExpression","start":9681,"end":9700,"object":{"type":"Identifier","start":9681,"end":9687,"name":"phElem"},"property":{"type":"Identifier","start":9688,"end":9700,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9701,"end":9705,"value":"id","raw":"'id'"},{"type":"CallExpression","start":9707,"end":9722,"callee":{"type":"MemberExpression","start":9707,"end":9718,"object":{"type":"Identifier","start":9707,"end":9709,"name":"id"},"property":{"type":"Identifier","start":9710,"end":9718,"name":"toString"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9719,"end":9721,"value":10,"raw":"10"}],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":9734,"end":9770,"expression":{"type":"CallExpression","start":9734,"end":9769,"callee":{"type":"MemberExpression","start":9734,"end":9753,"object":{"type":"Identifier","start":9734,"end":9740,"name":"phElem"},"property":{"type":"Identifier","start":9741,"end":9753,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9754,"end":9761,"value":"equiv","raw":"'equiv'"},{"type":"Identifier","start":9763,"end":9768,"name":"equiv"}],"optional":false}},{"type":"ExpressionStatement","start":9780,"end":9837,"expression":{"type":"CallExpression","start":9780,"end":9836,"callee":{"type":"MemberExpression","start":9780,"end":9799,"object":{"type":"Identifier","start":9780,"end":9786,"name":"phElem"},"property":{"type":"Identifier","start":9787,"end":9799,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9800,"end":9806,"value":"type","raw":"'type'"},{"type":"CallExpression","start":9808,"end":9835,"callee":{"type":"MemberExpression","start":9808,"end":9826,"object":{"type":"ThisExpression","start":9808,"end":9812},"property":{"type":"Identifier","start":9813,"end":9826,"name":"getTypeForTag"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9827,"end":9834,"name":"tagName"}],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":9847,"end":9881,"expression":{"type":"CallExpression","start":9847,"end":9880,"callee":{"type":"MemberExpression","start":9847,"end":9866,"object":{"type":"Identifier","start":9847,"end":9853,"name":"phElem"},"property":{"type":"Identifier","start":9854,"end":9866,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9867,"end":9873,"value":"disp","raw":"'disp'"},{"type":"Identifier","start":9875,"end":9879,"name":"disp"}],"optional":false}},{"type":"ReturnStatement","start":9891,"end":9905,"argument":{"type":"Identifier","start":9898,"end":9904,"name":"phElem"}}]}}},{"type":"MethodDefinition","start":9918,"end":10286,"static":false,"computed":false,"key":{"type":"Identifier","start":9918,"end":9931,"name":"getTypeForTag"},"kind":"method","value":{"type":"FunctionExpression","start":9931,"end":10286,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9932,"end":9935,"name":"tag"}],"body":{"type":"BlockStatement","start":9937,"end":10286,"body":[{"type":"SwitchStatement","start":9948,"end":10279,"discriminant":{"type":"CallExpression","start":9956,"end":9973,"callee":{"type":"MemberExpression","start":9956,"end":9971,"object":{"type":"Identifier","start":9956,"end":9959,"name":"tag"},"property":{"type":"Identifier","start":9960,"end":9971,"name":"toLowerCase"},"computed":false,"optional":false},"arguments":[],"optional":false},"cases":[{"type":"SwitchCase","start":9990,"end":10000,"consequent":[],"test":{"type":"Literal","start":9995,"end":9999,"value":"br","raw":"'br'"}},{"type":"SwitchCase","start":10014,"end":10023,"consequent":[],"test":{"type":"Literal","start":10019,"end":10022,"value":"b","raw":"'b'"}},{"type":"SwitchCase","start":10037,"end":10046,"consequent":[],"test":{"type":"Literal","start":10042,"end":10045,"value":"i","raw":"'i'"}},{"type":"SwitchCase","start":10060,"end":10100,"consequent":[{"type":"ReturnStatement","start":10087,"end":10100,"argument":{"type":"Literal","start":10094,"end":10099,"value":"fmt","raw":"'fmt'"}}],"test":{"type":"Literal","start":10065,"end":10068,"value":"u","raw":"'u'"}},{"type":"SwitchCase","start":10114,"end":10158,"consequent":[{"type":"ReturnStatement","start":10143,"end":10158,"argument":{"type":"Literal","start":10150,"end":10157,"value":"image","raw":"'image'"}}],"test":{"type":"Literal","start":10119,"end":10124,"value":"img","raw":"'img'"}},{"type":"SwitchCase","start":10172,"end":10213,"consequent":[{"type":"ReturnStatement","start":10199,"end":10213,"argument":{"type":"Literal","start":10206,"end":10212,"value":"link","raw":"'link'"}}],"test":{"type":"Literal","start":10177,"end":10180,"value":"a","raw":"'a'"}},{"type":"SwitchCase","start":10227,"end":10268,"consequent":[{"type":"ReturnStatement","start":10253,"end":10268,"argument":{"type":"Literal","start":10260,"end":10267,"value":"other","raw":"'other'"}}],"test":null}]}]}}},{"type":"MethodDefinition","start":10536,"end":11078,"static":false,"computed":false,"key":{"type":"Identifier","start":10536,"end":10576,"name":"createXmlRepresentationOfPlaceholderPart"},"kind":"method","value":{"type":"FunctionExpression","start":10576,"end":11078,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":10577,"end":10581,"name":"part"},{"type":"Identifier","start":10583,"end":10591,"name":"rootElem"},{"type":"Identifier","start":10593,"end":10595,"name":"id"}],"body":{"type":"BlockStatement","start":10597,"end":11078,"body":[{"type":"VariableDeclaration","start":10608,"end":10666,"declarations":[{"type":"VariableDeclarator","start":10614,"end":10665,"id":{"type":"Identifier","start":10614,"end":10620,"name":"phElem"},"init":{"type":"CallExpression","start":10623,"end":10665,"callee":{"type":"MemberExpression","start":10623,"end":10659,"object":{"type":"MemberExpression","start":10623,"end":10645,"object":{"type":"Identifier","start":10623,"end":10631,"name":"rootElem"},"property":{"type":"Identifier","start":10632,"end":10645,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10646,"end":10659,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10660,"end":10664,"value":"ph","raw":"'ph'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":10676,"end":10710,"declarations":[{"type":"VariableDeclarator","start":10680,"end":10709,"id":{"type":"Identifier","start":10680,"end":10691,"name":"equivAttrib"},"init":{"type":"Literal","start":10694,"end":10709,"value":"INTERPOLATION","raw":"'INTERPOLATION'"}}],"kind":"let"},{"type":"IfStatement","start":10720,"end":10827,"test":{"type":"BinaryExpression","start":10724,"end":10740,"left":{"type":"CallExpression","start":10724,"end":10736,"callee":{"type":"MemberExpression","start":10724,"end":10734,"object":{"type":"Identifier","start":10724,"end":10728,"name":"part"},"property":{"type":"Identifier","start":10729,"end":10734,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":">","right":{"type":"Literal","start":10739,"end":10740,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":10742,"end":10827,"body":[{"type":"ExpressionStatement","start":10757,"end":10816,"expression":{"type":"AssignmentExpression","start":10757,"end":10815,"operator":"=","left":{"type":"Identifier","start":10757,"end":10768,"name":"equivAttrib"},"right":{"type":"BinaryExpression","start":10771,"end":10815,"left":{"type":"Literal","start":10771,"end":10787,"value":"INTERPOLATION_","raw":"'INTERPOLATION_'"},"operator":"+","right":{"type":"CallExpression","start":10790,"end":10815,"callee":{"type":"MemberExpression","start":10790,"end":10811,"object":{"type":"CallExpression","start":10790,"end":10802,"callee":{"type":"MemberExpression","start":10790,"end":10800,"object":{"type":"Identifier","start":10790,"end":10794,"name":"part"},"property":{"type":"Identifier","start":10795,"end":10800,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":10803,"end":10811,"name":"toString"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10812,"end":10814,"value":10,"raw":"10"}],"optional":false}}}}]},"alternate":null},{"type":"ExpressionStatement","start":10837,"end":10880,"expression":{"type":"CallExpression","start":10837,"end":10879,"callee":{"type":"MemberExpression","start":10837,"end":10856,"object":{"type":"Identifier","start":10837,"end":10843,"name":"phElem"},"property":{"type":"Identifier","start":10844,"end":10856,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10857,"end":10861,"value":"id","raw":"'id'"},{"type":"CallExpression","start":10863,"end":10878,"callee":{"type":"MemberExpression","start":10863,"end":10874,"object":{"type":"Identifier","start":10863,"end":10865,"name":"id"},"property":{"type":"Identifier","start":10866,"end":10874,"name":"toString"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10875,"end":10877,"value":10,"raw":"10"}],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":10890,"end":10932,"expression":{"type":"CallExpression","start":10890,"end":10931,"callee":{"type":"MemberExpression","start":10890,"end":10909,"object":{"type":"Identifier","start":10890,"end":10896,"name":"phElem"},"property":{"type":"Identifier","start":10897,"end":10909,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10910,"end":10917,"value":"equiv","raw":"'equiv'"},{"type":"Identifier","start":10919,"end":10930,"name":"equivAttrib"}],"optional":false}},{"type":"VariableDeclaration","start":10942,"end":10967,"declarations":[{"type":"VariableDeclarator","start":10948,"end":10966,"id":{"type":"Identifier","start":10948,"end":10952,"name":"disp"},"init":{"type":"CallExpression","start":10955,"end":10966,"callee":{"type":"MemberExpression","start":10955,"end":10964,"object":{"type":"Identifier","start":10955,"end":10959,"name":"part"},"property":{"type":"Identifier","start":10960,"end":10964,"name":"disp"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":10977,"end":11047,"test":{"type":"Identifier","start":10981,"end":10985,"name":"disp"},"consequent":{"type":"BlockStatement","start":10987,"end":11047,"body":[{"type":"ExpressionStatement","start":11002,"end":11036,"expression":{"type":"CallExpression","start":11002,"end":11035,"callee":{"type":"MemberExpression","start":11002,"end":11021,"object":{"type":"Identifier","start":11002,"end":11008,"name":"phElem"},"property":{"type":"Identifier","start":11009,"end":11021,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11022,"end":11028,"value":"disp","raw":"'disp'"},{"type":"Identifier","start":11030,"end":11034,"name":"disp"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":11057,"end":11071,"argument":{"type":"Identifier","start":11064,"end":11070,"name":"phElem"}}]}}},{"type":"MethodDefinition","start":11218,"end":11748,"static":false,"computed":false,"key":{"type":"Identifier","start":11218,"end":11260,"name":"createXmlRepresentationOfICUMessageRefPart"},"kind":"method","value":{"type":"FunctionExpression","start":11260,"end":11748,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11261,"end":11265,"name":"part"},{"type":"Identifier","start":11267,"end":11275,"name":"rootElem"}],"body":{"type":"BlockStatement","start":11277,"end":11748,"body":[{"type":"VariableDeclaration","start":11288,"end":11346,"declarations":[{"type":"VariableDeclarator","start":11294,"end":11345,"id":{"type":"Identifier","start":11294,"end":11300,"name":"phElem"},"init":{"type":"CallExpression","start":11303,"end":11345,"callee":{"type":"MemberExpression","start":11303,"end":11339,"object":{"type":"MemberExpression","start":11303,"end":11325,"object":{"type":"Identifier","start":11303,"end":11311,"name":"rootElem"},"property":{"type":"Identifier","start":11312,"end":11325,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11326,"end":11339,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11340,"end":11344,"value":"ph","raw":"'ph'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":11356,"end":11380,"declarations":[{"type":"VariableDeclarator","start":11360,"end":11379,"id":{"type":"Identifier","start":11360,"end":11371,"name":"equivAttrib"},"init":{"type":"Literal","start":11374,"end":11379,"value":"ICU","raw":"'ICU'"}}],"kind":"let"},{"type":"IfStatement","start":11390,"end":11487,"test":{"type":"BinaryExpression","start":11394,"end":11410,"left":{"type":"CallExpression","start":11394,"end":11406,"callee":{"type":"MemberExpression","start":11394,"end":11404,"object":{"type":"Identifier","start":11394,"end":11398,"name":"part"},"property":{"type":"Identifier","start":11399,"end":11404,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":">","right":{"type":"Literal","start":11409,"end":11410,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":11412,"end":11487,"body":[{"type":"ExpressionStatement","start":11427,"end":11476,"expression":{"type":"AssignmentExpression","start":11427,"end":11475,"operator":"=","left":{"type":"Identifier","start":11427,"end":11438,"name":"equivAttrib"},"right":{"type":"BinaryExpression","start":11441,"end":11475,"left":{"type":"Literal","start":11441,"end":11447,"value":"ICU_","raw":"'ICU_'"},"operator":"+","right":{"type":"CallExpression","start":11450,"end":11475,"callee":{"type":"MemberExpression","start":11450,"end":11471,"object":{"type":"CallExpression","start":11450,"end":11462,"callee":{"type":"MemberExpression","start":11450,"end":11460,"object":{"type":"Identifier","start":11450,"end":11454,"name":"part"},"property":{"type":"Identifier","start":11455,"end":11460,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":11463,"end":11471,"name":"toString"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11472,"end":11474,"value":10,"raw":"10"}],"optional":false}}}}]},"alternate":null},{"type":"ExpressionStatement","start":11497,"end":11550,"expression":{"type":"CallExpression","start":11497,"end":11549,"callee":{"type":"MemberExpression","start":11497,"end":11516,"object":{"type":"Identifier","start":11497,"end":11503,"name":"phElem"},"property":{"type":"Identifier","start":11504,"end":11516,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11517,"end":11521,"value":"id","raw":"'id'"},{"type":"CallExpression","start":11523,"end":11548,"callee":{"type":"MemberExpression","start":11523,"end":11544,"object":{"type":"CallExpression","start":11523,"end":11535,"callee":{"type":"MemberExpression","start":11523,"end":11533,"object":{"type":"Identifier","start":11523,"end":11527,"name":"part"},"property":{"type":"Identifier","start":11528,"end":11533,"name":"index"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":11536,"end":11544,"name":"toString"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11545,"end":11547,"value":10,"raw":"10"}],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":11560,"end":11602,"expression":{"type":"CallExpression","start":11560,"end":11601,"callee":{"type":"MemberExpression","start":11560,"end":11579,"object":{"type":"Identifier","start":11560,"end":11566,"name":"phElem"},"property":{"type":"Identifier","start":11567,"end":11579,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11580,"end":11587,"value":"equiv","raw":"'equiv'"},{"type":"Identifier","start":11589,"end":11600,"name":"equivAttrib"}],"optional":false}},{"type":"VariableDeclaration","start":11612,"end":11637,"declarations":[{"type":"VariableDeclarator","start":11618,"end":11636,"id":{"type":"Identifier","start":11618,"end":11622,"name":"disp"},"init":{"type":"CallExpression","start":11625,"end":11636,"callee":{"type":"MemberExpression","start":11625,"end":11634,"object":{"type":"Identifier","start":11625,"end":11629,"name":"part"},"property":{"type":"Identifier","start":11630,"end":11634,"name":"disp"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":11647,"end":11717,"test":{"type":"Identifier","start":11651,"end":11655,"name":"disp"},"consequent":{"type":"BlockStatement","start":11657,"end":11717,"body":[{"type":"ExpressionStatement","start":11672,"end":11706,"expression":{"type":"CallExpression","start":11672,"end":11705,"callee":{"type":"MemberExpression","start":11672,"end":11691,"object":{"type":"Identifier","start":11672,"end":11678,"name":"phElem"},"property":{"type":"Identifier","start":11679,"end":11691,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11692,"end":11698,"value":"disp","raw":"'disp'"},{"type":"Identifier","start":11700,"end":11704,"name":"disp"}],"optional":false}}]},"alternate":null},{"type":"ReturnStatement","start":11727,"end":11741,"argument":{"type":"Identifier","start":11734,"end":11740,"name":"phElem"}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":11753,"end":40299}]},"code":"import { AbstractMessageParser } from './abstract-message-parser';\r\nimport { ParsedMessagePartType } from './parsed-message-part';\r\nimport { TagMapping } from './tag-mapping';\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 2.0\r\n */\r\nexport class Xliff2MessageParser extends AbstractMessageParser {\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    processStartElement(elementNode, message) {\r\n        const tagName = elementNode.tagName;\r\n        if (tagName === 'ph') {\r\n            // placeholder are like <ph id=\"0\" equiv=\"INTERPOLATION\" disp=\"{{number()}}\"/>\r\n            // They contain the id and also a name (number in the example)\r\n            // TODO make some use of the name (but it is not available in XLIFF 1.2)\r\n            // ICU message are handled with the same tag\r\n            // Before 4.3.2 they did not have an equiv and disp (Bug #17344):\r\n            // e.g. <ph id=\"0\"/>\r\n            // Beginning with 4.3.2 they do have an equiv ICU and disp:\r\n            // e.g. <ph id=\"0\" equiv=\"ICU\" disp=\"{count, plural, =0 {...} =1 {...} other {...}}\"/>\r\n            // and empty tags have equiv other then INTERPOLATION:\r\n            // e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n            // or <ph equiv=\"LINE_BREAK\" type=\"lb\" disp=\"&lt;br/>\"/>\r\n            let isInterpolation = false;\r\n            let isICU = false;\r\n            let isEmptyTag = false;\r\n            const equiv = elementNode.getAttribute('equiv');\r\n            const disp = elementNode.getAttribute('disp');\r\n            let indexString = null;\r\n            let index = 0;\r\n            let emptyTagName = null;\r\n            if (!equiv) {\r\n                // old ICU syntax, fixed with #17344\r\n                isICU = true;\r\n                indexString = elementNode.getAttribute('id');\r\n                index = Number.parseInt(indexString, 10);\r\n            }\r\n            else if (equiv.startsWith('ICU')) {\r\n                // new ICU syntax, fixed with #17344\r\n                isICU = true;\r\n                if (equiv === 'ICU') {\r\n                    indexString = '0';\r\n                }\r\n                else {\r\n                    indexString = equiv.substring('ICU_'.length);\r\n                }\r\n                index = Number.parseInt(indexString, 10);\r\n            }\r\n            else if (equiv.startsWith('INTERPOLATION')) {\r\n                isInterpolation = true;\r\n                if (equiv === 'INTERPOLATION') {\r\n                    indexString = '0';\r\n                }\r\n                else {\r\n                    indexString = equiv.substring('INTERPOLATION_'.length);\r\n                }\r\n                index = Number.parseInt(indexString, 10);\r\n            }\r\n            else if (new TagMapping().isEmptyTagPlaceholderName(equiv)) {\r\n                isEmptyTag = true;\r\n                emptyTagName = new TagMapping().getTagnameFromEmptyTagPlaceholderName(equiv);\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n            if (isInterpolation) {\r\n                message.addPlaceholder(index, disp);\r\n            }\r\n            else if (isICU) {\r\n                message.addICUMessageRef(index, disp);\r\n            }\r\n            else if (isEmptyTag) {\r\n                message.addEmptyTag(emptyTagName, this.parseIdCountFromName(equiv));\r\n            }\r\n        }\r\n        else if (tagName === 'pc') {\r\n            // pc example: <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\"\r\n            // dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">IMPORTANT</pc>\r\n            const embeddedTagName = this.tagNameFromPCElement(elementNode);\r\n            if (embeddedTagName) {\r\n                message.addStartTag(embeddedTagName, this.parseIdCountFromName(elementNode.getAttribute('equivStart')));\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    processEndElement(elementNode, message) {\r\n        const tagName = elementNode.tagName;\r\n        if (tagName === 'pc') {\r\n            // pc example: <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\"\r\n            // dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">IMPORTANT</pc>\r\n            const embeddedTagName = this.tagNameFromPCElement(elementNode);\r\n            if (embeddedTagName) {\r\n                message.addEndTag(embeddedTagName);\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    tagNameFromPCElement(pcNode) {\r\n        let dispStart = pcNode.getAttribute('dispStart');\r\n        if (dispStart.startsWith('<')) {\r\n            dispStart = dispStart.substring(1);\r\n        }\r\n        if (dispStart.endsWith('>')) {\r\n            dispStart = dispStart.substring(0, dispStart.length - 1);\r\n        }\r\n        return dispStart;\r\n    }\r\n    /**\r\n     * reimplemented here, because XLIFF 2.0 uses a deeper xml model.\r\n     * So we cannot simply replace the message parts by xml parts.\r\n     * @param message message\r\n     * @param rootElem rootElem\r\n     */\r\n    addXmlRepresentationToRoot(message, rootElem) {\r\n        const stack = [{ element: rootElem, tagName: 'root' }];\r\n        let id = 0;\r\n        message.parts().forEach((part) => {\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.TEXT:\r\n                    stack[stack.length - 1].element.appendChild(this.createXmlRepresentationOfTextPart(part, rootElem));\r\n                    break;\r\n                case ParsedMessagePartType.PLACEHOLDER:\r\n                    stack[stack.length - 1].element.appendChild(this.createXmlRepresentationOfPlaceholderPart(part, rootElem, id++));\r\n                    break;\r\n                case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                    stack[stack.length - 1].element.appendChild(this.createXmlRepresentationOfICUMessageRefPart(part, rootElem));\r\n                    break;\r\n                case ParsedMessagePartType.START_TAG:\r\n                    const newTagElem = this.createXmlRepresentationOfStartTagPart(part, rootElem, id++);\r\n                    stack[stack.length - 1].element.appendChild(newTagElem);\r\n                    stack.push({ element: newTagElem, tagName: part.tagName() });\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    const closeTagName = part.tagName();\r\n                    if (stack.length <= 1 || stack[stack.length - 1].tagName !== closeTagName) {\r\n                        // oops, not well formed\r\n                        throw new Error('unexpected close tag ' + closeTagName);\r\n                    }\r\n                    stack.pop();\r\n                    break;\r\n                case ParsedMessagePartType.EMPTY_TAG:\r\n                    const emptyTagElem = this.createXmlRepresentationOfEmptyTagPart(part, rootElem, id++);\r\n                    stack[stack.length - 1].element.appendChild(emptyTagElem);\r\n                    break;\r\n            }\r\n        });\r\n        if (stack.length !== 1) {\r\n            // oops, not well closed tags\r\n            throw new Error('missing close tag ' + stack[stack.length - 1].tagName);\r\n        }\r\n    }\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty pc-Element.\r\n     * e.g. <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\" dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">\r\n     * Text content will be added later.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    createXmlRepresentationOfStartTagPart(part, rootElem, id) {\r\n        const tagMapping = new TagMapping();\r\n        const pcElem = rootElem.ownerDocument.createElement('pc');\r\n        const tagName = part.tagName();\r\n        const equivStart = tagMapping.getStartTagPlaceholderName(tagName, part.idCounter());\r\n        const equivEnd = tagMapping.getCloseTagPlaceholderName(tagName);\r\n        const dispStart = '<' + tagName + '>';\r\n        const dispEnd = '</' + tagName + '>';\r\n        pcElem.setAttribute('id', id.toString(10));\r\n        pcElem.setAttribute('equivStart', equivStart);\r\n        pcElem.setAttribute('equivEnd', equivEnd);\r\n        pcElem.setAttribute('type', this.getTypeForTag(tagName));\r\n        pcElem.setAttribute('dispStart', dispStart);\r\n        pcElem.setAttribute('dispEnd', dispEnd);\r\n        return pcElem;\r\n    }\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Not used here, because content is child of start tag.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfEndTagPart(part, rootElem) {\r\n        // not used\r\n        return null;\r\n    }\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty ph-Element.\r\n     * e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    createXmlRepresentationOfEmptyTagPart(part, rootElem, id) {\r\n        const tagMapping = new TagMapping();\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        const tagName = part.tagName();\r\n        const equiv = tagMapping.getEmptyTagPlaceholderName(tagName, part.idCounter());\r\n        const disp = '<' + tagName + '/>';\r\n        phElem.setAttribute('id', id.toString(10));\r\n        phElem.setAttribute('equiv', equiv);\r\n        phElem.setAttribute('type', this.getTypeForTag(tagName));\r\n        phElem.setAttribute('disp', disp);\r\n        return phElem;\r\n    }\r\n    getTypeForTag(tag) {\r\n        switch (tag.toLowerCase()) {\r\n            case 'br':\r\n            case 'b':\r\n            case 'i':\r\n            case 'u':\r\n                return 'fmt';\r\n            case 'img':\r\n                return 'image';\r\n            case 'a':\r\n                return 'link';\r\n            default:\r\n                return 'other';\r\n        }\r\n    }\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns e.g. <ph id=\"1\" equiv=\"INTERPOLATION_1\" disp=\"{{total()}}\"/>\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    createXmlRepresentationOfPlaceholderPart(part, rootElem, id) {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        let equivAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            equivAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('id', id.toString(10));\r\n        phElem.setAttribute('equiv', equivAttrib);\r\n        const disp = part.disp();\r\n        if (disp) {\r\n            phElem.setAttribute('disp', disp);\r\n        }\r\n        return phElem;\r\n    }\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfICUMessageRefPart(part, rootElem) {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        let equivAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            equivAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('id', part.index().toString(10));\r\n        phElem.setAttribute('equiv', equivAttrib);\r\n        const disp = part.disp();\r\n        if (disp) {\r\n            phElem.setAttribute('disp', disp);\r\n        }\r\n        return phElem;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-message-parser.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\tag-mapping.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff2-message-parser.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { AbstractMessageParser } from './abstract-message-parser';\r\nimport { ParsedMessagePartType } from './parsed-message-part';\r\nimport { TagMapping } from './tag-mapping';\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 2.0\r\n */\r\nexport class Xliff2MessageParser extends AbstractMessageParser {\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    processStartElement(elementNode, message) {\r\n        const tagName = elementNode.tagName;\r\n        if (tagName === 'ph') {\r\n            // placeholder are like <ph id=\"0\" equiv=\"INTERPOLATION\" disp=\"{{number()}}\"/>\r\n            // They contain the id and also a name (number in the example)\r\n            // TODO make some use of the name (but it is not available in XLIFF 1.2)\r\n            // ICU message are handled with the same tag\r\n            // Before 4.3.2 they did not have an equiv and disp (Bug #17344):\r\n            // e.g. <ph id=\"0\"/>\r\n            // Beginning with 4.3.2 they do have an equiv ICU and disp:\r\n            // e.g. <ph id=\"0\" equiv=\"ICU\" disp=\"{count, plural, =0 {...} =1 {...} other {...}}\"/>\r\n            // and empty tags have equiv other then INTERPOLATION:\r\n            // e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n            // or <ph equiv=\"LINE_BREAK\" type=\"lb\" disp=\"&lt;br/>\"/>\r\n            let isInterpolation = false;\r\n            let isICU = false;\r\n            let isEmptyTag = false;\r\n            const equiv = elementNode.getAttribute('equiv');\r\n            const disp = elementNode.getAttribute('disp');\r\n            let indexString = null;\r\n            let index = 0;\r\n            let emptyTagName = null;\r\n            if (!equiv) {\r\n                // old ICU syntax, fixed with #17344\r\n                isICU = true;\r\n                indexString = elementNode.getAttribute('id');\r\n                index = Number.parseInt(indexString, 10);\r\n            }\r\n            else if (equiv.startsWith('ICU')) {\r\n                // new ICU syntax, fixed with #17344\r\n                isICU = true;\r\n                if (equiv === 'ICU') {\r\n                    indexString = '0';\r\n                }\r\n                else {\r\n                    indexString = equiv.substring('ICU_'.length);\r\n                }\r\n                index = Number.parseInt(indexString, 10);\r\n            }\r\n            else if (equiv.startsWith('INTERPOLATION')) {\r\n                isInterpolation = true;\r\n                if (equiv === 'INTERPOLATION') {\r\n                    indexString = '0';\r\n                }\r\n                else {\r\n                    indexString = equiv.substring('INTERPOLATION_'.length);\r\n                }\r\n                index = Number.parseInt(indexString, 10);\r\n            }\r\n            else if (new TagMapping().isEmptyTagPlaceholderName(equiv)) {\r\n                isEmptyTag = true;\r\n                emptyTagName = new TagMapping().getTagnameFromEmptyTagPlaceholderName(equiv);\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n            if (isInterpolation) {\r\n                message.addPlaceholder(index, disp);\r\n            }\r\n            else if (isICU) {\r\n                message.addICUMessageRef(index, disp);\r\n            }\r\n            else if (isEmptyTag) {\r\n                message.addEmptyTag(emptyTagName, this.parseIdCountFromName(equiv));\r\n            }\r\n        }\r\n        else if (tagName === 'pc') {\r\n            // pc example: <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\"\r\n            // dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">IMPORTANT</pc>\r\n            const embeddedTagName = this.tagNameFromPCElement(elementNode);\r\n            if (embeddedTagName) {\r\n                message.addStartTag(embeddedTagName, this.parseIdCountFromName(elementNode.getAttribute('equivStart')));\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    processEndElement(elementNode, message) {\r\n        const tagName = elementNode.tagName;\r\n        if (tagName === 'pc') {\r\n            // pc example: <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\"\r\n            // dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">IMPORTANT</pc>\r\n            const embeddedTagName = this.tagNameFromPCElement(elementNode);\r\n            if (embeddedTagName) {\r\n                message.addEndTag(embeddedTagName);\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    tagNameFromPCElement(pcNode) {\r\n        let dispStart = pcNode.getAttribute('dispStart');\r\n        if (dispStart.startsWith('<')) {\r\n            dispStart = dispStart.substring(1);\r\n        }\r\n        if (dispStart.endsWith('>')) {\r\n            dispStart = dispStart.substring(0, dispStart.length - 1);\r\n        }\r\n        return dispStart;\r\n    }\r\n    /**\r\n     * reimplemented here, because XLIFF 2.0 uses a deeper xml model.\r\n     * So we cannot simply replace the message parts by xml parts.\r\n     * @param message message\r\n     * @param rootElem rootElem\r\n     */\r\n    addXmlRepresentationToRoot(message, rootElem) {\r\n        const stack = [{ element: rootElem, tagName: 'root' }];\r\n        let id = 0;\r\n        message.parts().forEach((part) => {\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.TEXT:\r\n                    stack[stack.length - 1].element.appendChild(this.createXmlRepresentationOfTextPart(part, rootElem));\r\n                    break;\r\n                case ParsedMessagePartType.PLACEHOLDER:\r\n                    stack[stack.length - 1].element.appendChild(this.createXmlRepresentationOfPlaceholderPart(part, rootElem, id++));\r\n                    break;\r\n                case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                    stack[stack.length - 1].element.appendChild(this.createXmlRepresentationOfICUMessageRefPart(part, rootElem));\r\n                    break;\r\n                case ParsedMessagePartType.START_TAG:\r\n                    const newTagElem = this.createXmlRepresentationOfStartTagPart(part, rootElem, id++);\r\n                    stack[stack.length - 1].element.appendChild(newTagElem);\r\n                    stack.push({ element: newTagElem, tagName: part.tagName() });\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    const closeTagName = part.tagName();\r\n                    if (stack.length <= 1 || stack[stack.length - 1].tagName !== closeTagName) {\r\n                        // oops, not well formed\r\n                        throw new Error('unexpected close tag ' + closeTagName);\r\n                    }\r\n                    stack.pop();\r\n                    break;\r\n                case ParsedMessagePartType.EMPTY_TAG:\r\n                    const emptyTagElem = this.createXmlRepresentationOfEmptyTagPart(part, rootElem, id++);\r\n                    stack[stack.length - 1].element.appendChild(emptyTagElem);\r\n                    break;\r\n            }\r\n        });\r\n        if (stack.length !== 1) {\r\n            // oops, not well closed tags\r\n            throw new Error('missing close tag ' + stack[stack.length - 1].tagName);\r\n        }\r\n    }\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty pc-Element.\r\n     * e.g. <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\" dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">\r\n     * Text content will be added later.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    createXmlRepresentationOfStartTagPart(part, rootElem, id) {\r\n        const tagMapping = new TagMapping();\r\n        const pcElem = rootElem.ownerDocument.createElement('pc');\r\n        const tagName = part.tagName();\r\n        const equivStart = tagMapping.getStartTagPlaceholderName(tagName, part.idCounter());\r\n        const equivEnd = tagMapping.getCloseTagPlaceholderName(tagName);\r\n        const dispStart = '<' + tagName + '>';\r\n        const dispEnd = '</' + tagName + '>';\r\n        pcElem.setAttribute('id', id.toString(10));\r\n        pcElem.setAttribute('equivStart', equivStart);\r\n        pcElem.setAttribute('equivEnd', equivEnd);\r\n        pcElem.setAttribute('type', this.getTypeForTag(tagName));\r\n        pcElem.setAttribute('dispStart', dispStart);\r\n        pcElem.setAttribute('dispEnd', dispEnd);\r\n        return pcElem;\r\n    }\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Not used here, because content is child of start tag.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfEndTagPart(part, rootElem) {\r\n        // not used\r\n        return null;\r\n    }\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty ph-Element.\r\n     * e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    createXmlRepresentationOfEmptyTagPart(part, rootElem, id) {\r\n        const tagMapping = new TagMapping();\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        const tagName = part.tagName();\r\n        const equiv = tagMapping.getEmptyTagPlaceholderName(tagName, part.idCounter());\r\n        const disp = '<' + tagName + '/>';\r\n        phElem.setAttribute('id', id.toString(10));\r\n        phElem.setAttribute('equiv', equiv);\r\n        phElem.setAttribute('type', this.getTypeForTag(tagName));\r\n        phElem.setAttribute('disp', disp);\r\n        return phElem;\r\n    }\r\n    getTypeForTag(tag) {\r\n        switch (tag.toLowerCase()) {\r\n            case 'br':\r\n            case 'b':\r\n            case 'i':\r\n            case 'u':\r\n                return 'fmt';\r\n            case 'img':\r\n                return 'image';\r\n            case 'a':\r\n                return 'link';\r\n            default:\r\n                return 'other';\r\n        }\r\n    }\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns e.g. <ph id=\"1\" equiv=\"INTERPOLATION_1\" disp=\"{{total()}}\"/>\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    createXmlRepresentationOfPlaceholderPart(part, rootElem, id) {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        let equivAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            equivAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('id', id.toString(10));\r\n        phElem.setAttribute('equiv', equivAttrib);\r\n        const disp = part.disp();\r\n        if (disp) {\r\n            phElem.setAttribute('disp', disp);\r\n        }\r\n        return phElem;\r\n    }\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    createXmlRepresentationOfICUMessageRefPart(part, rootElem) {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        let equivAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            equivAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('id', part.index().toString(10));\r\n        phElem.setAttribute('equiv', equivAttrib);\r\n        const disp = part.disp();\r\n        if (disp) {\r\n            phElem.setAttribute('disp', disp);\r\n        }\r\n        return phElem;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieGxpZmYyLW1lc3NhZ2UtcGFyc2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWkxOG5zdXBwb3J0LWxpYi9zcmMvaW1wbC94bGlmZjItbWVzc2FnZS1wYXJzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFNaEUsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDNUQsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUd6Qzs7O0dBR0c7QUFDSCxNQUFNLE9BQU8sbUJBQW9CLFNBQVEscUJBQXFCO0lBRTFEOzs7Ozs7T0FNRztJQUNPLG1CQUFtQixDQUFDLFdBQW9CLEVBQUUsT0FBc0I7UUFDdEUsTUFBTSxPQUFPLEdBQUcsV0FBVyxDQUFDLE9BQU8sQ0FBQztRQUNwQyxJQUFJLE9BQU8sS0FBSyxJQUFJLEVBQUU7WUFDbEIsOEVBQThFO1lBQzlFLDhEQUE4RDtZQUM5RCx3RUFBd0U7WUFDeEUsNENBQTRDO1lBQzVDLGlFQUFpRTtZQUNqRSxvQkFBb0I7WUFDcEIsMkRBQTJEO1lBQzNELHNGQUFzRjtZQUN0RixzREFBc0Q7WUFDdEQsa0VBQWtFO1lBQ2xFLHdEQUF3RDtZQUN4RCxJQUFJLGVBQWUsR0FBRyxLQUFLLENBQUM7WUFDNUIsSUFBSSxLQUFLLEdBQUcsS0FBSyxDQUFDO1lBQ2xCLElBQUksVUFBVSxHQUFHLEtBQUssQ0FBQztZQUN2QixNQUFNLEtBQUssR0FBRyxXQUFXLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ2hELE1BQU0sSUFBSSxHQUFHLFdBQVcsQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDOUMsSUFBSSxXQUFXLEdBQUcsSUFBSSxDQUFDO1lBQ3ZCLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztZQUNkLElBQUksWUFBWSxHQUFHLElBQUksQ0FBQztZQUN4QixJQUFJLENBQUMsS0FBSyxFQUFFO2dCQUNSLG9DQUFvQztnQkFDcEMsS0FBSyxHQUFHLElBQUksQ0FBQztnQkFDYixXQUFXLEdBQUcsV0FBVyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDN0MsS0FBSyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2FBQzVDO2lCQUFNLElBQUksS0FBSyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDaEMsb0NBQW9DO2dCQUNwQyxLQUFLLEdBQUcsSUFBSSxDQUFDO2dCQUNiLElBQUksS0FBSyxLQUFLLEtBQUssRUFBRTtvQkFDakIsV0FBVyxHQUFHLEdBQUcsQ0FBQztpQkFDckI7cUJBQU07b0JBQ0gsV0FBVyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2lCQUNoRDtnQkFDRCxLQUFLLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUM7YUFDNUM7aUJBQU0sSUFBSSxLQUFLLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FBQyxFQUFFO2dCQUMxQyxlQUFlLEdBQUcsSUFBSSxDQUFDO2dCQUN2QixJQUFJLEtBQUssS0FBSyxlQUFlLEVBQUU7b0JBQzNCLFdBQVcsR0FBRyxHQUFHLENBQUM7aUJBQ3JCO3FCQUFNO29CQUNILFdBQVcsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxDQUFDO2lCQUMxRDtnQkFDRCxLQUFLLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUM7YUFDNUM7aUJBQU0sSUFBSSxJQUFJLFVBQVUsRUFBRSxDQUFDLHlCQUF5QixDQUFDLEtBQUssQ0FBQyxFQUFFO2dCQUMxRCxVQUFVLEdBQUcsSUFBSSxDQUFDO2dCQUNsQixZQUFZLEdBQUcsSUFBSSxVQUFVLEVBQUUsQ0FBQyxxQ0FBcUMsQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUNoRjtpQkFBTTtnQkFDSCxPQUFPLElBQUksQ0FBQzthQUNmO1lBQ0QsSUFBSSxlQUFlLEVBQUU7Z0JBQ2pCLE9BQU8sQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO2FBQ3ZDO2lCQUFNLElBQUksS0FBSyxFQUFFO2dCQUNkLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7YUFDekM7aUJBQU0sSUFBSSxVQUFVLEVBQUU7Z0JBQ25CLE9BQU8sQ0FBQyxXQUFXLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO2FBQ3ZFO1NBQ0o7YUFBTSxJQUFJLE9BQU8sS0FBSyxJQUFJLEVBQUU7WUFDekIsNEZBQTRGO1lBQzVGLDREQUE0RDtZQUM1RCxNQUFNLGVBQWUsR0FBRyxJQUFJLENBQUMsb0JBQW9CLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDL0QsSUFBSSxlQUFlLEVBQUU7Z0JBQ2pCLE9BQU8sQ0FBQyxXQUFXLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUMzRztTQUNKO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ08saUJBQWlCLENBQUMsV0FBb0IsRUFBRSxPQUFzQjtRQUNwRSxNQUFNLE9BQU8sR0FBRyxXQUFXLENBQUMsT0FBTyxDQUFDO1FBQ3BDLElBQUksT0FBTyxLQUFLLElBQUksRUFBRTtZQUNsQiw0RkFBNEY7WUFDNUYsNERBQTREO1lBQzVELE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUMvRCxJQUFJLGVBQWUsRUFBRTtnQkFDakIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsQ0FBQzthQUN0QztZQUNELE9BQU87U0FDVjtJQUNMLENBQUM7SUFFTyxvQkFBb0IsQ0FBQyxNQUFlO1FBQ3hDLElBQUksU0FBUyxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDakQsSUFBSSxTQUFTLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQzNCLFNBQVMsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3RDO1FBQ0QsSUFBSSxTQUFTLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ3pCLFNBQVMsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQzVEO1FBQ0QsT0FBTyxTQUFTLENBQUM7SUFDckIsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ08sMEJBQTBCLENBQUMsT0FBc0IsRUFBRSxRQUFpQjtRQUMxRSxNQUFNLEtBQUssR0FBRyxDQUFDLEVBQUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFDLENBQUMsQ0FBQztRQUNyRCxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDWCxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7WUFDN0IsUUFBUSxJQUFJLENBQUMsSUFBSSxFQUFFO2dCQUNmLEtBQUsscUJBQXFCLENBQUMsSUFBSTtvQkFDM0IsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FDdkMsSUFBSSxDQUFDLGlDQUFpQyxDQUF5QixJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztvQkFDcEYsTUFBTTtnQkFDVixLQUFLLHFCQUFxQixDQUFDLFdBQVc7b0JBQ2xDLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQ3ZDLElBQUksQ0FBQyx3Q0FBd0MsQ0FBZ0MsSUFBSSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7b0JBQ3hHLE1BQU07Z0JBQ1YsS0FBSyxxQkFBcUIsQ0FBQyxlQUFlO29CQUN0QyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUN2QyxJQUFJLENBQUMsMENBQTBDLENBQWtDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO29CQUN0RyxNQUFNO2dCQUNWLEtBQUsscUJBQXFCLENBQUMsU0FBUztvQkFDaEMsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLHFDQUFxQyxDQUE2QixJQUFJLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7b0JBQ2hILEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUM7b0JBQ3hELEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBQyxPQUFPLEVBQVksVUFBVSxFQUFFLE9BQU8sRUFBK0IsSUFBSyxDQUFDLE9BQU8sRUFBRSxFQUFDLENBQUMsQ0FBQztvQkFDbkcsTUFBTTtnQkFDVixLQUFLLHFCQUFxQixDQUFDLE9BQU87b0JBQzlCLE1BQU0sWUFBWSxHQUE4QixJQUFLLENBQUMsT0FBTyxFQUFFLENBQUM7b0JBQ2hFLElBQUksS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDLElBQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsT0FBTyxLQUFLLFlBQVksRUFBRTt3QkFDdkUsd0JBQXdCO3dCQUN4QixNQUFNLElBQUksS0FBSyxDQUFDLHVCQUF1QixHQUFHLFlBQVksQ0FBQyxDQUFDO3FCQUMzRDtvQkFDRCxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUM7b0JBQ1osTUFBTTtnQkFDVixLQUFLLHFCQUFxQixDQUFDLFNBQVM7b0JBQ2hDLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxxQ0FBcUMsQ0FBNkIsSUFBSSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO29CQUNsSCxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxDQUFDO29CQUMxRCxNQUFNO2FBQ2I7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDcEIsNkJBQTZCO1lBQzdCLE1BQU0sSUFBSSxLQUFLLENBQUMsb0JBQW9CLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDM0U7SUFDTCxDQUFDO0lBRUQ7Ozs7Ozs7O09BUUc7SUFDTyxxQ0FBcUMsQ0FBQyxJQUErQixFQUFFLFFBQWlCLEVBQUUsRUFBVTtRQUMxRyxNQUFNLFVBQVUsR0FBRyxJQUFJLFVBQVUsRUFBRSxDQUFDO1FBQ3BDLE1BQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzFELE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUMvQixNQUFNLFVBQVUsR0FBRyxVQUFVLENBQUMsMEJBQTBCLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDO1FBQ3BGLE1BQU0sUUFBUSxHQUFHLFVBQVUsQ0FBQywwQkFBMEIsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNoRSxNQUFNLFNBQVMsR0FBRyxHQUFHLEdBQUcsT0FBTyxHQUFHLEdBQUcsQ0FBQztRQUN0QyxNQUFNLE9BQU8sR0FBRyxJQUFJLEdBQUcsT0FBTyxHQUFHLEdBQUcsQ0FBQztRQUNyQyxNQUFNLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDM0MsTUFBTSxDQUFDLFlBQVksQ0FBQyxZQUFZLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDOUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDMUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3pELE1BQU0sQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQzVDLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3hDLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNPLG1DQUFtQyxDQUFDLElBQTZCLEVBQUUsUUFBaUI7UUFDMUYsV0FBVztRQUNYLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFRDs7Ozs7OztPQU9HO0lBQ08scUNBQXFDLENBQUMsSUFBK0IsRUFBRSxRQUFpQixFQUFFLEVBQVU7UUFDMUcsTUFBTSxVQUFVLEdBQUcsSUFBSSxVQUFVLEVBQUUsQ0FBQztRQUNwQyxNQUFNLE1BQU0sR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMxRCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDL0IsTUFBTSxLQUFLLEdBQUcsVUFBVSxDQUFDLDBCQUEwQixDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQztRQUMvRSxNQUFNLElBQUksR0FBRyxHQUFHLEdBQUcsT0FBTyxHQUFHLElBQUksQ0FBQztRQUNsQyxNQUFNLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDM0MsTUFBTSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDcEMsTUFBTSxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3pELE1BQU0sQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2xDLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFFTyxhQUFhLENBQUMsR0FBVztRQUM3QixRQUFRLEdBQUcsQ0FBQyxXQUFXLEVBQUUsRUFBRTtZQUN2QixLQUFLLElBQUksQ0FBQztZQUNWLEtBQUssR0FBRyxDQUFDO1lBQ1QsS0FBSyxHQUFHLENBQUM7WUFDVCxLQUFLLEdBQUc7Z0JBQ0osT0FBTyxLQUFLLENBQUM7WUFDakIsS0FBSyxLQUFLO2dCQUNOLE9BQU8sT0FBTyxDQUFDO1lBQ25CLEtBQUssR0FBRztnQkFDSixPQUFPLE1BQU0sQ0FBQztZQUNsQjtnQkFDSSxPQUFPLE9BQU8sQ0FBQztTQUN0QjtJQUNMLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDTyx3Q0FBd0MsQ0FBQyxJQUFrQyxFQUFFLFFBQWlCLEVBQUUsRUFBVTtRQUNoSCxNQUFNLE1BQU0sR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMxRCxJQUFJLFdBQVcsR0FBRyxlQUFlLENBQUM7UUFDbEMsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxFQUFFO1lBQ2xCLFdBQVcsR0FBRyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQzlEO1FBQ0QsTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzNDLE1BQU0sQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQzFDLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN6QixJQUFJLElBQUksRUFBRTtZQUNOLE1BQU0sQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ3JDO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUVEOzs7O09BSUc7SUFDTywwQ0FBMEMsQ0FBQyxJQUFvQyxFQUFFLFFBQWlCO1FBQ3hHLE1BQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzFELElBQUksV0FBVyxHQUFHLEtBQUssQ0FBQztRQUN4QixJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLEVBQUU7WUFDbEIsV0FBVyxHQUFHLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQ3BEO1FBQ0QsTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3JELE1BQU0sQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQzFDLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN6QixJQUFJLElBQUksRUFBRTtZQUNOLE1BQU0sQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ3JDO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztDQUVKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBYnN0cmFjdE1lc3NhZ2VQYXJzZXJ9IGZyb20gJy4vYWJzdHJhY3QtbWVzc2FnZS1wYXJzZXInO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2V9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UnO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0U3RhcnRUYWd9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydC1zdGFydC10YWcnO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0RW5kVGFnfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQtZW5kLXRhZyc7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnRQbGFjZWhvbGRlcn0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0LXBsYWNlaG9sZGVyJztcclxuaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydFRleHR9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydC10ZXh0JztcclxuaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydFR5cGV9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydCc7XHJcbmltcG9ydCB7VGFnTWFwcGluZ30gZnJvbSAnLi90YWctbWFwcGluZyc7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnRFbXB0eVRhZ30gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0LWVtcHR5LXRhZyc7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnRJQ1VNZXNzYWdlUmVmfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQtaWN1LW1lc3NhZ2UtcmVmJztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgcm9vYm0gb24gMTAuMDUuMjAxNy5cclxuICogQSBtZXNzYWdlIHBhcnNlciBmb3IgWExJRkYgMi4wXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgWGxpZmYyTWVzc2FnZVBhcnNlciBleHRlbmRzIEFic3RyYWN0TWVzc2FnZVBhcnNlciB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBIYW5kbGUgdGhpcyBlbGVtZW50IG5vZGUuXHJcbiAgICAgKiBUaGlzIGlzIGNhbGxlZCBiZWZvcmUgdGhlIGNoaWxkcmVuIGFyZSBkb25lLlxyXG4gICAgICogQHBhcmFtIGVsZW1lbnROb2RlIGVsZW1lbnROb2RlXHJcbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBtZXNzYWdlIHRvIGJlIGFsdGVyZWRcclxuICAgICAqIEByZXR1cm4gdHJ1ZSwgaWYgY2hpbGRyZW4gc2hvdWxkIGJlIHByb2Nlc3NlZCB0b28sIGZhbHNlIG90aGVyd2lzZSAoY2hpbGRyZW4gaWdub3JlZCB0aGVuKVxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgcHJvY2Vzc1N0YXJ0RWxlbWVudChlbGVtZW50Tm9kZTogRWxlbWVudCwgbWVzc2FnZTogUGFyc2VkTWVzc2FnZSk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGNvbnN0IHRhZ05hbWUgPSBlbGVtZW50Tm9kZS50YWdOYW1lO1xyXG4gICAgICAgIGlmICh0YWdOYW1lID09PSAncGgnKSB7XHJcbiAgICAgICAgICAgIC8vIHBsYWNlaG9sZGVyIGFyZSBsaWtlIDxwaCBpZD1cIjBcIiBlcXVpdj1cIklOVEVSUE9MQVRJT05cIiBkaXNwPVwie3tudW1iZXIoKX19XCIvPlxyXG4gICAgICAgICAgICAvLyBUaGV5IGNvbnRhaW4gdGhlIGlkIGFuZCBhbHNvIGEgbmFtZSAobnVtYmVyIGluIHRoZSBleGFtcGxlKVxyXG4gICAgICAgICAgICAvLyBUT0RPIG1ha2Ugc29tZSB1c2Ugb2YgdGhlIG5hbWUgKGJ1dCBpdCBpcyBub3QgYXZhaWxhYmxlIGluIFhMSUZGIDEuMilcclxuICAgICAgICAgICAgLy8gSUNVIG1lc3NhZ2UgYXJlIGhhbmRsZWQgd2l0aCB0aGUgc2FtZSB0YWdcclxuICAgICAgICAgICAgLy8gQmVmb3JlIDQuMy4yIHRoZXkgZGlkIG5vdCBoYXZlIGFuIGVxdWl2IGFuZCBkaXNwIChCdWcgIzE3MzQ0KTpcclxuICAgICAgICAgICAgLy8gZS5nLiA8cGggaWQ9XCIwXCIvPlxyXG4gICAgICAgICAgICAvLyBCZWdpbm5pbmcgd2l0aCA0LjMuMiB0aGV5IGRvIGhhdmUgYW4gZXF1aXYgSUNVIGFuZCBkaXNwOlxyXG4gICAgICAgICAgICAvLyBlLmcuIDxwaCBpZD1cIjBcIiBlcXVpdj1cIklDVVwiIGRpc3A9XCJ7Y291bnQsIHBsdXJhbCwgPTAgey4uLn0gPTEgey4uLn0gb3RoZXIgey4uLn19XCIvPlxyXG4gICAgICAgICAgICAvLyBhbmQgZW1wdHkgdGFncyBoYXZlIGVxdWl2IG90aGVyIHRoZW4gSU5URVJQT0xBVElPTjpcclxuICAgICAgICAgICAgLy8gZS5nLiA8cGggaWQ9XCIzXCIgZXF1aXY9XCJUQUdfSU1HXCIgdHlwZT1cImltYWdlXCIgZGlzcD1cIiZsdDtpbWcvPlwiLz5cclxuICAgICAgICAgICAgLy8gb3IgPHBoIGVxdWl2PVwiTElORV9CUkVBS1wiIHR5cGU9XCJsYlwiIGRpc3A9XCImbHQ7YnIvPlwiLz5cclxuICAgICAgICAgICAgbGV0IGlzSW50ZXJwb2xhdGlvbiA9IGZhbHNlO1xyXG4gICAgICAgICAgICBsZXQgaXNJQ1UgPSBmYWxzZTtcclxuICAgICAgICAgICAgbGV0IGlzRW1wdHlUYWcgPSBmYWxzZTtcclxuICAgICAgICAgICAgY29uc3QgZXF1aXYgPSBlbGVtZW50Tm9kZS5nZXRBdHRyaWJ1dGUoJ2VxdWl2Jyk7XHJcbiAgICAgICAgICAgIGNvbnN0IGRpc3AgPSBlbGVtZW50Tm9kZS5nZXRBdHRyaWJ1dGUoJ2Rpc3AnKTtcclxuICAgICAgICAgICAgbGV0IGluZGV4U3RyaW5nID0gbnVsbDtcclxuICAgICAgICAgICAgbGV0IGluZGV4ID0gMDtcclxuICAgICAgICAgICAgbGV0IGVtcHR5VGFnTmFtZSA9IG51bGw7XHJcbiAgICAgICAgICAgIGlmICghZXF1aXYpIHtcclxuICAgICAgICAgICAgICAgIC8vIG9sZCBJQ1Ugc3ludGF4LCBmaXhlZCB3aXRoICMxNzM0NFxyXG4gICAgICAgICAgICAgICAgaXNJQ1UgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgaW5kZXhTdHJpbmcgPSBlbGVtZW50Tm9kZS5nZXRBdHRyaWJ1dGUoJ2lkJyk7XHJcbiAgICAgICAgICAgICAgICBpbmRleCA9IE51bWJlci5wYXJzZUludChpbmRleFN0cmluZywgMTApO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGVxdWl2LnN0YXJ0c1dpdGgoJ0lDVScpKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBuZXcgSUNVIHN5bnRheCwgZml4ZWQgd2l0aCAjMTczNDRcclxuICAgICAgICAgICAgICAgIGlzSUNVID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGlmIChlcXVpdiA9PT0gJ0lDVScpIHtcclxuICAgICAgICAgICAgICAgICAgICBpbmRleFN0cmluZyA9ICcwJztcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5kZXhTdHJpbmcgPSBlcXVpdi5zdWJzdHJpbmcoJ0lDVV8nLmxlbmd0aCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpbmRleCA9IE51bWJlci5wYXJzZUludChpbmRleFN0cmluZywgMTApO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGVxdWl2LnN0YXJ0c1dpdGgoJ0lOVEVSUE9MQVRJT04nKSkge1xyXG4gICAgICAgICAgICAgICAgaXNJbnRlcnBvbGF0aW9uID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGlmIChlcXVpdiA9PT0gJ0lOVEVSUE9MQVRJT04nKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5kZXhTdHJpbmcgPSAnMCc7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGluZGV4U3RyaW5nID0gZXF1aXYuc3Vic3RyaW5nKCdJTlRFUlBPTEFUSU9OXycubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGluZGV4ID0gTnVtYmVyLnBhcnNlSW50KGluZGV4U3RyaW5nLCAxMCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobmV3IFRhZ01hcHBpbmcoKS5pc0VtcHR5VGFnUGxhY2Vob2xkZXJOYW1lKGVxdWl2KSkge1xyXG4gICAgICAgICAgICAgICAgaXNFbXB0eVRhZyA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBlbXB0eVRhZ05hbWUgPSBuZXcgVGFnTWFwcGluZygpLmdldFRhZ25hbWVGcm9tRW1wdHlUYWdQbGFjZWhvbGRlck5hbWUoZXF1aXYpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGlzSW50ZXJwb2xhdGlvbikge1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZS5hZGRQbGFjZWhvbGRlcihpbmRleCwgZGlzcCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNJQ1UpIHtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2UuYWRkSUNVTWVzc2FnZVJlZihpbmRleCwgZGlzcCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNFbXB0eVRhZykge1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZS5hZGRFbXB0eVRhZyhlbXB0eVRhZ05hbWUsIHRoaXMucGFyc2VJZENvdW50RnJvbU5hbWUoZXF1aXYpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZiAodGFnTmFtZSA9PT0gJ3BjJykge1xyXG4gICAgICAgICAgICAvLyBwYyBleGFtcGxlOiA8cGMgaWQ9XCIwXCIgZXF1aXZTdGFydD1cIlNUQVJUX0JPTERfVEVYVFwiIGVxdWl2RW5kPVwiQ0xPU0VfQk9MRF9URVhUXCIgdHlwZT1cImZtdFwiXHJcbiAgICAgICAgICAgIC8vIGRpc3BTdGFydD1cIiZsdDtiJmd0O1wiIGRpc3BFbmQ9XCImbHQ7L2ImZ3Q7XCI+SU1QT1JUQU5UPC9wYz5cclxuICAgICAgICAgICAgY29uc3QgZW1iZWRkZWRUYWdOYW1lID0gdGhpcy50YWdOYW1lRnJvbVBDRWxlbWVudChlbGVtZW50Tm9kZSk7XHJcbiAgICAgICAgICAgIGlmIChlbWJlZGRlZFRhZ05hbWUpIHtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2UuYWRkU3RhcnRUYWcoZW1iZWRkZWRUYWdOYW1lLCB0aGlzLnBhcnNlSWRDb3VudEZyb21OYW1lKGVsZW1lbnROb2RlLmdldEF0dHJpYnV0ZSgnZXF1aXZTdGFydCcpKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBIYW5kbGUgZW5kIG9mIHRoaXMgZWxlbWVudCBub2RlLlxyXG4gICAgICogVGhpcyBpcyBjYWxsZWQgYWZ0ZXIgYWxsIGNoaWxkcmVuIGFyZSBwcm9jZXNzZWQuXHJcbiAgICAgKiBAcGFyYW0gZWxlbWVudE5vZGUgZWxlbWVudE5vZGVcclxuICAgICAqIEBwYXJhbSBtZXNzYWdlIG1lc3NhZ2UgdG8gYmUgYWx0ZXJlZFxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgcHJvY2Vzc0VuZEVsZW1lbnQoZWxlbWVudE5vZGU6IEVsZW1lbnQsIG1lc3NhZ2U6IFBhcnNlZE1lc3NhZ2UpIHtcclxuICAgICAgICBjb25zdCB0YWdOYW1lID0gZWxlbWVudE5vZGUudGFnTmFtZTtcclxuICAgICAgICBpZiAodGFnTmFtZSA9PT0gJ3BjJykge1xyXG4gICAgICAgICAgICAvLyBwYyBleGFtcGxlOiA8cGMgaWQ9XCIwXCIgZXF1aXZTdGFydD1cIlNUQVJUX0JPTERfVEVYVFwiIGVxdWl2RW5kPVwiQ0xPU0VfQk9MRF9URVhUXCIgdHlwZT1cImZtdFwiXHJcbiAgICAgICAgICAgIC8vIGRpc3BTdGFydD1cIiZsdDtiJmd0O1wiIGRpc3BFbmQ9XCImbHQ7L2ImZ3Q7XCI+SU1QT1JUQU5UPC9wYz5cclxuICAgICAgICAgICAgY29uc3QgZW1iZWRkZWRUYWdOYW1lID0gdGhpcy50YWdOYW1lRnJvbVBDRWxlbWVudChlbGVtZW50Tm9kZSk7XHJcbiAgICAgICAgICAgIGlmIChlbWJlZGRlZFRhZ05hbWUpIHtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2UuYWRkRW5kVGFnKGVtYmVkZGVkVGFnTmFtZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHRhZ05hbWVGcm9tUENFbGVtZW50KHBjTm9kZTogRWxlbWVudCk6IHN0cmluZyB7XHJcbiAgICAgICAgbGV0IGRpc3BTdGFydCA9IHBjTm9kZS5nZXRBdHRyaWJ1dGUoJ2Rpc3BTdGFydCcpO1xyXG4gICAgICAgIGlmIChkaXNwU3RhcnQuc3RhcnRzV2l0aCgnPCcpKSB7XHJcbiAgICAgICAgICAgIGRpc3BTdGFydCA9IGRpc3BTdGFydC5zdWJzdHJpbmcoMSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChkaXNwU3RhcnQuZW5kc1dpdGgoJz4nKSkge1xyXG4gICAgICAgICAgICBkaXNwU3RhcnQgPSBkaXNwU3RhcnQuc3Vic3RyaW5nKDAsIGRpc3BTdGFydC5sZW5ndGggLSAxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGRpc3BTdGFydDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHJlaW1wbGVtZW50ZWQgaGVyZSwgYmVjYXVzZSBYTElGRiAyLjAgdXNlcyBhIGRlZXBlciB4bWwgbW9kZWwuXHJcbiAgICAgKiBTbyB3ZSBjYW5ub3Qgc2ltcGx5IHJlcGxhY2UgdGhlIG1lc3NhZ2UgcGFydHMgYnkgeG1sIHBhcnRzLlxyXG4gICAgICogQHBhcmFtIG1lc3NhZ2UgbWVzc2FnZVxyXG4gICAgICogQHBhcmFtIHJvb3RFbGVtIHJvb3RFbGVtXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBhZGRYbWxSZXByZXNlbnRhdGlvblRvUm9vdChtZXNzYWdlOiBQYXJzZWRNZXNzYWdlLCByb290RWxlbTogRWxlbWVudCkge1xyXG4gICAgICAgIGNvbnN0IHN0YWNrID0gW3tlbGVtZW50OiByb290RWxlbSwgdGFnTmFtZTogJ3Jvb3QnfV07XHJcbiAgICAgICAgbGV0IGlkID0gMDtcclxuICAgICAgICBtZXNzYWdlLnBhcnRzKCkuZm9yRWFjaCgocGFydCkgPT4ge1xyXG4gICAgICAgICAgICBzd2l0Y2ggKHBhcnQudHlwZSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSBQYXJzZWRNZXNzYWdlUGFydFR5cGUuVEVYVDpcclxuICAgICAgICAgICAgICAgICAgICBzdGFja1tzdGFjay5sZW5ndGggLSAxXS5lbGVtZW50LmFwcGVuZENoaWxkKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNyZWF0ZVhtbFJlcHJlc2VudGF0aW9uT2ZUZXh0UGFydCg8UGFyc2VkTWVzc2FnZVBhcnRUZXh0PiBwYXJ0LCByb290RWxlbSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBQYXJzZWRNZXNzYWdlUGFydFR5cGUuUExBQ0VIT0xERVI6XHJcbiAgICAgICAgICAgICAgICAgICAgc3RhY2tbc3RhY2subGVuZ3RoIC0gMV0uZWxlbWVudC5hcHBlbmRDaGlsZChcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mUGxhY2Vob2xkZXJQYXJ0KDxQYXJzZWRNZXNzYWdlUGFydFBsYWNlaG9sZGVyPiBwYXJ0LCByb290RWxlbSwgaWQrKykpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBQYXJzZWRNZXNzYWdlUGFydFR5cGUuSUNVX01FU1NBR0VfUkVGOlxyXG4gICAgICAgICAgICAgICAgICAgIHN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdLmVsZW1lbnQuYXBwZW5kQ2hpbGQoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY3JlYXRlWG1sUmVwcmVzZW50YXRpb25PZklDVU1lc3NhZ2VSZWZQYXJ0KDxQYXJzZWRNZXNzYWdlUGFydElDVU1lc3NhZ2VSZWY+IHBhcnQsIHJvb3RFbGVtKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5TVEFSVF9UQUc6XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3VGFnRWxlbSA9IHRoaXMuY3JlYXRlWG1sUmVwcmVzZW50YXRpb25PZlN0YXJ0VGFnUGFydCg8UGFyc2VkTWVzc2FnZVBhcnRTdGFydFRhZz4gcGFydCwgcm9vdEVsZW0sIGlkKyspO1xyXG4gICAgICAgICAgICAgICAgICAgIHN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdLmVsZW1lbnQuYXBwZW5kQ2hpbGQobmV3VGFnRWxlbSk7XHJcbiAgICAgICAgICAgICAgICAgICAgc3RhY2sucHVzaCh7ZWxlbWVudDogPEVsZW1lbnQ+IG5ld1RhZ0VsZW0sIHRhZ05hbWU6ICg8UGFyc2VkTWVzc2FnZVBhcnRTdGFydFRhZz4gcGFydCkudGFnTmFtZSgpfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5FTkRfVEFHOlxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNsb3NlVGFnTmFtZSA9ICg8UGFyc2VkTWVzc2FnZVBhcnRFbmRUYWc+IHBhcnQpLnRhZ05hbWUoKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoc3RhY2subGVuZ3RoIDw9IDEgfHwgc3RhY2tbc3RhY2subGVuZ3RoIC0gMV0udGFnTmFtZSAhPT0gY2xvc2VUYWdOYW1lKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG9vcHMsIG5vdCB3ZWxsIGZvcm1lZFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3VuZXhwZWN0ZWQgY2xvc2UgdGFnICcgKyBjbG9zZVRhZ05hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBzdGFjay5wb3AoKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgUGFyc2VkTWVzc2FnZVBhcnRUeXBlLkVNUFRZX1RBRzpcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBlbXB0eVRhZ0VsZW0gPSB0aGlzLmNyZWF0ZVhtbFJlcHJlc2VudGF0aW9uT2ZFbXB0eVRhZ1BhcnQoPFBhcnNlZE1lc3NhZ2VQYXJ0RW1wdHlUYWc+IHBhcnQsIHJvb3RFbGVtLCBpZCsrKTtcclxuICAgICAgICAgICAgICAgICAgICBzdGFja1tzdGFjay5sZW5ndGggLSAxXS5lbGVtZW50LmFwcGVuZENoaWxkKGVtcHR5VGFnRWxlbSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBpZiAoc3RhY2subGVuZ3RoICE9PSAxKSB7XHJcbiAgICAgICAgICAgIC8vIG9vcHMsIG5vdCB3ZWxsIGNsb3NlZCB0YWdzXHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignbWlzc2luZyBjbG9zZSB0YWcgJyArIHN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdLnRhZ05hbWUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHRoZSB4bWwgdXNlZCBmb3Igc3RhcnQgdGFnIGluIHRoZSBtZXNzYWdlLlxyXG4gICAgICogUmV0dXJucyBhbiBlbXB0eSBwYy1FbGVtZW50LlxyXG4gICAgICogZS5nLiA8cGMgaWQ9XCIwXCIgZXF1aXZTdGFydD1cIlNUQVJUX0JPTERfVEVYVFwiIGVxdWl2RW5kPVwiQ0xPU0VfQk9MRF9URVhUXCIgdHlwZT1cImZtdFwiIGRpc3BTdGFydD1cIiZsdDtiJmd0O1wiIGRpc3BFbmQ9XCImbHQ7L2ImZ3Q7XCI+XHJcbiAgICAgKiBUZXh0IGNvbnRlbnQgd2lsbCBiZSBhZGRlZCBsYXRlci5cclxuICAgICAqIEBwYXJhbSBwYXJ0IHBhcnRcclxuICAgICAqIEBwYXJhbSByb290RWxlbSByb290RWxlbVxyXG4gICAgICogQHBhcmFtIGlkIGlkIG51bWJlciBpbiB4bGlmZjJcclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGNyZWF0ZVhtbFJlcHJlc2VudGF0aW9uT2ZTdGFydFRhZ1BhcnQocGFydDogUGFyc2VkTWVzc2FnZVBhcnRTdGFydFRhZywgcm9vdEVsZW06IEVsZW1lbnQsIGlkOiBudW1iZXIpOiBOb2RlIHtcclxuICAgICAgICBjb25zdCB0YWdNYXBwaW5nID0gbmV3IFRhZ01hcHBpbmcoKTtcclxuICAgICAgICBjb25zdCBwY0VsZW0gPSByb290RWxlbS5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3BjJyk7XHJcbiAgICAgICAgY29uc3QgdGFnTmFtZSA9IHBhcnQudGFnTmFtZSgpO1xyXG4gICAgICAgIGNvbnN0IGVxdWl2U3RhcnQgPSB0YWdNYXBwaW5nLmdldFN0YXJ0VGFnUGxhY2Vob2xkZXJOYW1lKHRhZ05hbWUsIHBhcnQuaWRDb3VudGVyKCkpO1xyXG4gICAgICAgIGNvbnN0IGVxdWl2RW5kID0gdGFnTWFwcGluZy5nZXRDbG9zZVRhZ1BsYWNlaG9sZGVyTmFtZSh0YWdOYW1lKTtcclxuICAgICAgICBjb25zdCBkaXNwU3RhcnQgPSAnPCcgKyB0YWdOYW1lICsgJz4nO1xyXG4gICAgICAgIGNvbnN0IGRpc3BFbmQgPSAnPC8nICsgdGFnTmFtZSArICc+JztcclxuICAgICAgICBwY0VsZW0uc2V0QXR0cmlidXRlKCdpZCcsIGlkLnRvU3RyaW5nKDEwKSk7XHJcbiAgICAgICAgcGNFbGVtLnNldEF0dHJpYnV0ZSgnZXF1aXZTdGFydCcsIGVxdWl2U3RhcnQpO1xyXG4gICAgICAgIHBjRWxlbS5zZXRBdHRyaWJ1dGUoJ2VxdWl2RW5kJywgZXF1aXZFbmQpO1xyXG4gICAgICAgIHBjRWxlbS5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCB0aGlzLmdldFR5cGVGb3JUYWcodGFnTmFtZSkpO1xyXG4gICAgICAgIHBjRWxlbS5zZXRBdHRyaWJ1dGUoJ2Rpc3BTdGFydCcsIGRpc3BTdGFydCk7XHJcbiAgICAgICAgcGNFbGVtLnNldEF0dHJpYnV0ZSgnZGlzcEVuZCcsIGRpc3BFbmQpO1xyXG4gICAgICAgIHJldHVybiBwY0VsZW07XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB0aGUgeG1sIHVzZWQgZm9yIGVuZCB0YWcgaW4gdGhlIG1lc3NhZ2UuXHJcbiAgICAgKiBOb3QgdXNlZCBoZXJlLCBiZWNhdXNlIGNvbnRlbnQgaXMgY2hpbGQgb2Ygc3RhcnQgdGFnLlxyXG4gICAgICogQHBhcmFtIHBhcnQgcGFydFxyXG4gICAgICogQHBhcmFtIHJvb3RFbGVtIHJvb3RFbGVtXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBjcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mRW5kVGFnUGFydChwYXJ0OiBQYXJzZWRNZXNzYWdlUGFydEVuZFRhZywgcm9vdEVsZW06IEVsZW1lbnQpOiBOb2RlIHtcclxuICAgICAgICAvLyBub3QgdXNlZFxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogdGhlIHhtbCB1c2VkIGZvciBlbXB0eSB0YWcgaW4gdGhlIG1lc3NhZ2UuXHJcbiAgICAgKiBSZXR1cm5zIGFuIGVtcHR5IHBoLUVsZW1lbnQuXHJcbiAgICAgKiBlLmcuIDxwaCBpZD1cIjNcIiBlcXVpdj1cIlRBR19JTUdcIiB0eXBlPVwiaW1hZ2VcIiBkaXNwPVwiJmx0O2ltZy8+XCIvPlxyXG4gICAgICogQHBhcmFtIHBhcnQgcGFydFxyXG4gICAgICogQHBhcmFtIHJvb3RFbGVtIHJvb3RFbGVtXHJcbiAgICAgKiBAcGFyYW0gaWQgaWQgbnVtYmVyIGluIHhsaWZmMlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgY3JlYXRlWG1sUmVwcmVzZW50YXRpb25PZkVtcHR5VGFnUGFydChwYXJ0OiBQYXJzZWRNZXNzYWdlUGFydEVtcHR5VGFnLCByb290RWxlbTogRWxlbWVudCwgaWQ6IG51bWJlcik6IE5vZGUge1xyXG4gICAgICAgIGNvbnN0IHRhZ01hcHBpbmcgPSBuZXcgVGFnTWFwcGluZygpO1xyXG4gICAgICAgIGNvbnN0IHBoRWxlbSA9IHJvb3RFbGVtLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncGgnKTtcclxuICAgICAgICBjb25zdCB0YWdOYW1lID0gcGFydC50YWdOYW1lKCk7XHJcbiAgICAgICAgY29uc3QgZXF1aXYgPSB0YWdNYXBwaW5nLmdldEVtcHR5VGFnUGxhY2Vob2xkZXJOYW1lKHRhZ05hbWUsIHBhcnQuaWRDb3VudGVyKCkpO1xyXG4gICAgICAgIGNvbnN0IGRpc3AgPSAnPCcgKyB0YWdOYW1lICsgJy8+JztcclxuICAgICAgICBwaEVsZW0uc2V0QXR0cmlidXRlKCdpZCcsIGlkLnRvU3RyaW5nKDEwKSk7XHJcbiAgICAgICAgcGhFbGVtLnNldEF0dHJpYnV0ZSgnZXF1aXYnLCBlcXVpdik7XHJcbiAgICAgICAgcGhFbGVtLnNldEF0dHJpYnV0ZSgndHlwZScsIHRoaXMuZ2V0VHlwZUZvclRhZyh0YWdOYW1lKSk7XHJcbiAgICAgICAgcGhFbGVtLnNldEF0dHJpYnV0ZSgnZGlzcCcsIGRpc3ApO1xyXG4gICAgICAgIHJldHVybiBwaEVsZW07XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBnZXRUeXBlRm9yVGFnKHRhZzogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICBzd2l0Y2ggKHRhZy50b0xvd2VyQ2FzZSgpKSB7XHJcbiAgICAgICAgICAgIGNhc2UgJ2JyJzpcclxuICAgICAgICAgICAgY2FzZSAnYic6XHJcbiAgICAgICAgICAgIGNhc2UgJ2knOlxyXG4gICAgICAgICAgICBjYXNlICd1JzpcclxuICAgICAgICAgICAgICAgIHJldHVybiAnZm10JztcclxuICAgICAgICAgICAgY2FzZSAnaW1nJzpcclxuICAgICAgICAgICAgICAgIHJldHVybiAnaW1hZ2UnO1xyXG4gICAgICAgICAgICBjYXNlICdhJzpcclxuICAgICAgICAgICAgICAgIHJldHVybiAnbGluayc7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ290aGVyJztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB0aGUgeG1sIHVzZWQgZm9yIHBsYWNlaG9sZGVyIGluIHRoZSBtZXNzYWdlLlxyXG4gICAgICogUmV0dXJucyBlLmcuIDxwaCBpZD1cIjFcIiBlcXVpdj1cIklOVEVSUE9MQVRJT05fMVwiIGRpc3A9XCJ7e3RvdGFsKCl9fVwiLz5cclxuICAgICAqIEBwYXJhbSBwYXJ0IHBhcnRcclxuICAgICAqIEBwYXJhbSByb290RWxlbSByb290RWxlbVxyXG4gICAgICogQHBhcmFtIGlkIGlkIG51bWJlciBpbiB4bGlmZjJcclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGNyZWF0ZVhtbFJlcHJlc2VudGF0aW9uT2ZQbGFjZWhvbGRlclBhcnQocGFydDogUGFyc2VkTWVzc2FnZVBhcnRQbGFjZWhvbGRlciwgcm9vdEVsZW06IEVsZW1lbnQsIGlkOiBudW1iZXIpOiBOb2RlIHtcclxuICAgICAgICBjb25zdCBwaEVsZW0gPSByb290RWxlbS5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3BoJyk7XHJcbiAgICAgICAgbGV0IGVxdWl2QXR0cmliID0gJ0lOVEVSUE9MQVRJT04nO1xyXG4gICAgICAgIGlmIChwYXJ0LmluZGV4KCkgPiAwKSB7XHJcbiAgICAgICAgICAgIGVxdWl2QXR0cmliID0gJ0lOVEVSUE9MQVRJT05fJyArIHBhcnQuaW5kZXgoKS50b1N0cmluZygxMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHBoRWxlbS5zZXRBdHRyaWJ1dGUoJ2lkJywgaWQudG9TdHJpbmcoMTApKTtcclxuICAgICAgICBwaEVsZW0uc2V0QXR0cmlidXRlKCdlcXVpdicsIGVxdWl2QXR0cmliKTtcclxuICAgICAgICBjb25zdCBkaXNwID0gcGFydC5kaXNwKCk7XHJcbiAgICAgICAgaWYgKGRpc3ApIHtcclxuICAgICAgICAgICAgcGhFbGVtLnNldEF0dHJpYnV0ZSgnZGlzcCcsIGRpc3ApO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcGhFbGVtO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogdGhlIHhtbCB1c2VkIGZvciBpY3UgbWVzc2FnZSByZWZzIGluIHRoZSBtZXNzYWdlLlxyXG4gICAgICogQHBhcmFtIHBhcnQgcGFydFxyXG4gICAgICogQHBhcmFtIHJvb3RFbGVtIHJvb3RFbGVtXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBjcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mSUNVTWVzc2FnZVJlZlBhcnQocGFydDogUGFyc2VkTWVzc2FnZVBhcnRJQ1VNZXNzYWdlUmVmLCByb290RWxlbTogRWxlbWVudCk6IE5vZGUge1xyXG4gICAgICAgIGNvbnN0IHBoRWxlbSA9IHJvb3RFbGVtLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncGgnKTtcclxuICAgICAgICBsZXQgZXF1aXZBdHRyaWIgPSAnSUNVJztcclxuICAgICAgICBpZiAocGFydC5pbmRleCgpID4gMCkge1xyXG4gICAgICAgICAgICBlcXVpdkF0dHJpYiA9ICdJQ1VfJyArIHBhcnQuaW5kZXgoKS50b1N0cmluZygxMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHBoRWxlbS5zZXRBdHRyaWJ1dGUoJ2lkJywgcGFydC5pbmRleCgpLnRvU3RyaW5nKDEwKSk7XHJcbiAgICAgICAgcGhFbGVtLnNldEF0dHJpYnV0ZSgnZXF1aXYnLCBlcXVpdkF0dHJpYik7XHJcbiAgICAgICAgY29uc3QgZGlzcCA9IHBhcnQuZGlzcCgpO1xyXG4gICAgICAgIGlmIChkaXNwKSB7XHJcbiAgICAgICAgICAgIHBoRWxlbS5zZXRBdHRyaWJ1dGUoJ2Rpc3AnLCBkaXNwKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHBoRWxlbTtcclxuICAgIH1cclxuXHJcbn1cclxuIl19","originalSourcemap":{"version":3,"file":"xliff2-message-parser.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/xliff2-message-parser.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[30,0,0,29],[32,0,0,30],[38,0,0,36],[65,0,0,63],[66,0,0,64]],[[0,0,6,0],[7,0,6,7],[9,0,6,8],[30,0,6,29],[32,0,6,30],[38,0,6,36],[61,0,6,59],[62,0,6,60]],[[0,0,7,0],[7,0,7,7],[9,0,7,8],[19,0,7,18],[21,0,7,19],[27,0,7,25],[42,0,7,40],[43,0,7,41]],[[0,0,10,0]],[],[],[[3,0,13,3]],[[0,0,14,0],[6,0,14,6],[13,0,14,13],[32,0,14,33],[41,0,14,41],[62,0,14,62]],[[4,0,16,4]],[],[],[],[],[],[[7,0,22,7]],[[4,0,23,14],[23,0,23,33],[24,0,23,34],[35,0,23,54],[37,0,23,56],[44,0,23,78]],[[8,0,24,8],[14,0,24,14],[21,0,24,21],[24,0,24,24],[35,0,24,35],[36,0,24,36],[43,0,24,43],[44,0,24,44]],[[8,0,25,8],[12,0,25,12],[19,0,25,19],[24,0,25,24],[28,0,25,28],[30,0,25,30]],[[12,0,26,12],[90,0,26,90]],[[12,0,27,12],[74,0,27,74]],[[12,0,28,12],[84,0,28,84]],[[12,0,29,12],[56,0,29,56]],[[12,0,30,12],[77,0,30,77]],[[12,0,31,12],[32,0,31,32]],[[12,0,32,12],[71,0,32,71]],[[12,0,33,12],[98,0,33,98]],[[12,0,34,12],[66,0,34,66]],[[12,0,35,12],[78,0,35,78]],[[12,0,36,12],[68,0,36,68]],[[12,0,37,12],[16,0,37,16],[31,0,37,31],[34,0,37,34],[39,0,37,39],[40,0,37,40]],[[12,0,38,12],[16,0,38,16],[21,0,38,21],[24,0,38,24],[29,0,38,29],[30,0,38,30]],[[12,0,39,12],[16,0,39,16],[26,0,39,26],[29,0,39,29],[34,0,39,34],[35,0,39,35]],[[12,0,40,12],[18,0,40,18],[23,0,40,23],[26,0,40,26],[37,0,40,37],[38,0,40,38],[50,0,40,50],[51,0,40,51],[58,0,40,58],[59,0,40,59],[60,0,40,60]],[[12,0,41,12],[18,0,41,18],[22,0,41,22],[25,0,41,25],[36,0,41,36],[37,0,41,37],[49,0,41,49],[50,0,41,50],[56,0,41,56],[57,0,41,57],[58,0,41,58]],[[12,0,42,12],[16,0,42,16],[27,0,42,27],[30,0,42,30],[34,0,42,34],[35,0,42,35]],[[12,0,43,12],[16,0,43,16],[21,0,43,21],[24,0,43,24],[25,0,43,25],[26,0,43,26]],[[12,0,44,12],[16,0,44,16],[28,0,44,28],[31,0,44,31],[35,0,44,35],[36,0,44,36]],[[12,0,45,12],[16,0,45,16],[17,0,45,17],[22,0,45,22],[24,0,45,24]],[[16,0,46,16],[52,0,46,52]],[[16,0,47,16],[21,0,47,21],[24,0,47,24],[28,0,47,28],[29,0,47,29]],[[16,0,48,16],[27,0,48,27],[30,0,48,30],[41,0,48,41],[42,0,48,42],[54,0,48,54],[55,0,48,55],[59,0,48,59],[60,0,48,60],[61,0,48,61]],[[16,0,49,16],[21,0,49,21],[24,0,49,24],[30,0,49,30],[31,0,49,31],[39,0,49,39],[40,0,49,40],[51,0,49,51],[53,0,49,53],[55,0,49,55],[56,0,49,56],[57,0,49,57]],[[13,0,50,13]],[[17,0,50,19],[21,0,50,23],[26,0,50,28],[27,0,50,29],[37,0,50,39],[38,0,50,40],[43,0,50,45],[44,0,50,46],[46,0,50,48]],[[16,0,51,16],[52,0,51,52]],[[16,0,52,16],[21,0,52,21],[24,0,52,24],[28,0,52,28],[29,0,52,29]],[[16,0,53,16],[20,0,53,20],[25,0,53,25],[30,0,53,30],[35,0,53,35],[37,0,53,37]],[[20,0,54,20],[31,0,54,31],[34,0,54,34],[37,0,54,37],[38,0,54,38]],[[17,0,55,17]],[[21,0,55,23]],[[20,0,56,20],[31,0,56,31],[34,0,56,34],[39,0,56,39],[40,0,56,40],[49,0,56,49],[50,0,56,50],[56,0,56,56],[57,0,56,57],[63,0,56,63],[64,0,56,64],[65,0,56,65]],[[17,0,57,17]],[[16,0,58,16],[21,0,58,21],[24,0,58,24],[30,0,58,30],[31,0,58,31],[39,0,58,39],[40,0,58,40],[51,0,58,51],[53,0,58,53],[55,0,58,55],[56,0,58,56],[57,0,58,57]],[[13,0,59,13]],[[17,0,59,19],[21,0,59,23],[26,0,59,28],[27,0,59,29],[37,0,59,39],[38,0,59,40],[53,0,59,55],[54,0,59,56],[56,0,59,58]],[[16,0,60,16],[31,0,60,31],[34,0,60,34],[38,0,60,38],[39,0,60,39]],[[16,0,61,16],[20,0,61,20],[25,0,61,25],[30,0,61,30],[45,0,61,45],[47,0,61,47]],[[20,0,62,20],[31,0,62,31],[34,0,62,34],[37,0,62,37],[38,0,62,38]],[[17,0,63,17]],[[21,0,63,23]],[[20,0,64,20],[31,0,64,31],[34,0,64,34],[39,0,64,39],[40,0,64,40],[49,0,64,49],[50,0,64,50],[66,0,64,66],[67,0,64,67],[73,0,64,73],[74,0,64,74],[75,0,64,75]],[[17,0,65,17]],[[16,0,66,16],[21,0,66,21],[24,0,66,24],[30,0,66,30],[31,0,66,31],[39,0,66,39],[40,0,66,40],[51,0,66,51],[53,0,66,53],[55,0,66,55],[56,0,66,56],[57,0,66,57]],[[13,0,67,13]],[[17,0,67,19],[21,0,67,23],[25,0,67,27],[35,0,67,37],[37,0,67,39],[38,0,67,40],[63,0,67,65],[64,0,67,66],[69,0,67,71],[70,0,67,72],[72,0,67,74]],[[16,0,68,16],[26,0,68,26],[29,0,68,29],[33,0,68,33],[34,0,68,34]],[[16,0,69,16],[28,0,69,28],[31,0,69,31],[35,0,69,35],[45,0,69,45],[47,0,69,47],[48,0,69,48],[85,0,69,85],[86,0,69,86],[91,0,69,91],[92,0,69,92],[93,0,69,93]],[[13,0,70,13]],[[17,0,70,19]],[[16,0,71,16],[23,0,71,23],[27,0,71,27],[28,0,71,28]],[[13,0,72,13]],[[12,0,73,12],[16,0,73,16],[31,0,73,31],[33,0,73,33]],[[16,0,74,16],[23,0,74,23],[24,0,74,24],[38,0,74,38],[39,0,74,39],[44,0,74,44],[46,0,74,46],[50,0,74,50],[51,0,74,51],[52,0,74,52]],[[13,0,75,13]],[[17,0,75,19],[21,0,75,23],[26,0,75,28],[28,0,75,30]],[[16,0,76,16],[23,0,76,23],[24,0,76,24],[40,0,76,40],[41,0,76,41],[46,0,76,46],[48,0,76,48],[52,0,76,52],[53,0,76,53],[54,0,76,54]],[[13,0,77,13]],[[17,0,77,19],[21,0,77,23],[31,0,77,33],[33,0,77,35]],[[16,0,78,16],[23,0,78,23],[24,0,78,24],[35,0,78,35],[36,0,78,36],[48,0,78,48],[50,0,78,50],[54,0,78,54],[55,0,78,55],[75,0,78,75],[76,0,78,76],[81,0,78,81],[82,0,78,82],[83,0,78,83],[84,0,78,84]],[[13,0,79,13]],[[9,0,80,9]],[[13,0,80,15],[17,0,80,19],[24,0,80,26],[29,0,80,31],[33,0,80,35],[35,0,80,37]],[[12,0,81,12],[104,0,81,104]],[[12,0,82,12],[72,0,82,72]],[[12,0,83,12],[18,0,83,18],[33,0,83,33],[36,0,83,36],[40,0,83,40],[41,0,83,41],[61,0,83,61],[62,0,83,62],[73,0,83,73],[74,0,83,74],[75,0,83,75]],[[12,0,84,12],[16,0,84,16],[31,0,84,31],[33,0,84,33]],[[16,0,85,16],[23,0,85,23],[24,0,85,24],[35,0,85,35],[36,0,85,36],[51,0,85,51],[53,0,85,53],[57,0,85,57],[58,0,85,58],[78,0,85,78],[79,0,85,79],[90,0,85,90],[91,0,85,91],[103,0,85,103],[104,0,85,104],[116,0,85,116],[117,0,85,117],[118,0,85,118],[119,0,85,119],[120,0,85,120]],[[13,0,86,13]],[[9,0,87,9]],[[8,0,88,8],[15,0,88,15],[19,0,88,19],[20,0,88,20]],[[4,0,89,4],[5,0,89,5]],[[4,0,91,4]],[],[],[],[],[[7,0,96,7]],[[4,0,97,14],[21,0,97,31],[22,0,97,32],[33,0,97,52],[35,0,97,54],[42,0,97,76]],[[8,0,98,8],[14,0,98,14],[21,0,98,21],[24,0,98,24],[35,0,98,35],[36,0,98,36],[43,0,98,43],[44,0,98,44]],[[8,0,99,8],[12,0,99,12],[19,0,99,19],[24,0,99,24],[28,0,99,28],[30,0,99,30]],[[12,0,100,12],[104,0,100,104]],[[12,0,101,12],[72,0,101,72]],[[12,0,102,12],[18,0,102,18],[33,0,102,33],[36,0,102,36],[40,0,102,40],[41,0,102,41],[61,0,102,61],[62,0,102,62],[73,0,102,73],[74,0,102,74],[75,0,102,75]],[[12,0,103,12],[16,0,103,16],[31,0,103,31],[33,0,103,33]],[[16,0,104,16],[23,0,104,23],[24,0,104,24],[33,0,104,33],[34,0,104,34],[49,0,104,49],[50,0,104,50],[51,0,104,51]],[[13,0,105,13]],[[12,0,106,12],[19,0,106,19]],[[9,0,107,9]],[[4,0,108,4],[5,0,108,5]],[[4,0,110,12],[24,0,110,32],[25,0,110,33],[31,0,110,48]],[[8,0,111,8],[12,0,111,12],[21,0,111,21],[24,0,111,24],[30,0,111,30],[31,0,111,31],[43,0,111,43],[44,0,111,44],[55,0,111,55],[56,0,111,56],[57,0,111,57]],[[8,0,112,8],[12,0,112,12],[21,0,112,21],[22,0,112,22],[32,0,112,32],[33,0,112,33],[36,0,112,36],[37,0,112,37],[39,0,112,39]],[[12,0,113,12],[21,0,113,21],[24,0,113,24],[33,0,113,33],[34,0,113,34],[43,0,113,43],[44,0,113,44],[45,0,113,45],[46,0,113,46],[47,0,113,47]],[[9,0,114,9]],[[8,0,115,8],[12,0,115,12],[21,0,115,21],[22,0,115,22],[30,0,115,30],[31,0,115,31],[34,0,115,34],[35,0,115,35],[37,0,115,37]],[[12,0,116,12],[21,0,116,21],[24,0,116,24],[33,0,116,33],[34,0,116,34],[43,0,116,43],[44,0,116,44],[45,0,116,45],[47,0,116,47],[56,0,116,56],[57,0,116,57],[63,0,116,63],[66,0,116,66],[67,0,116,67],[68,0,116,68],[69,0,116,69]],[[9,0,117,9]],[[8,0,118,8],[15,0,118,15],[24,0,118,24],[25,0,118,25]],[[4,0,119,4],[5,0,119,5]],[[4,0,121,4]],[],[],[],[],[[7,0,126,7]],[[4,0,127,14],[30,0,127,40],[31,0,127,41],[38,0,127,63],[40,0,127,65],[48,0,127,82]],[[8,0,128,8],[14,0,128,14],[19,0,128,19],[22,0,128,22],[23,0,128,23],[25,0,128,24],[32,0,128,31],[34,0,128,33],[42,0,128,41],[44,0,128,43],[51,0,128,50],[53,0,128,52],[59,0,128,58],[61,0,128,59],[62,0,128,60],[63,0,128,61]],[[8,0,129,8],[12,0,129,12],[14,0,129,14],[17,0,129,17],[18,0,129,18],[19,0,129,19]],[[8,0,130,8],[15,0,130,15],[16,0,130,16],[21,0,130,21],[23,0,130,23],[24,0,130,24],[31,0,130,31],[32,0,130,32],[33,0,130,33],[37,0,130,37],[39,0,130,39],[41,0,130,41]],[[12,0,131,12],[20,0,131,20],[24,0,131,24],[25,0,131,25],[29,0,131,29],[31,0,131,31]],[[16,0,132,16],[21,0,132,21],[42,0,132,42],[43,0,132,43],[47,0,132,47]],[[20,0,133,20],[25,0,133,25],[26,0,133,26],[31,0,133,31],[32,0,133,32],[38,0,133,38],[41,0,133,41],[42,0,133,42],[43,0,133,43],[44,0,133,44],[51,0,133,51],[52,0,133,52],[63,0,133,63],[64,0,134,24],[68,0,134,28],[69,0,134,29],[102,0,134,62],[103,0,134,87],[107,0,134,91],[109,0,134,93],[117,0,134,101],[118,0,134,102],[119,0,134,103],[120,0,134,104]],[[20,0,135,20],[26,0,135,26]],[[16,0,136,16],[21,0,136,21],[42,0,136,42],[43,0,136,43],[54,0,136,54]],[[20,0,137,20],[25,0,137,25],[26,0,137,26],[31,0,137,31],[32,0,137,32],[38,0,137,38],[41,0,137,41],[42,0,137,42],[43,0,137,43],[44,0,137,44],[51,0,137,51],[52,0,137,52],[63,0,137,63],[64,0,138,24],[68,0,138,28],[69,0,138,29],[109,0,138,69],[110,0,138,101],[114,0,138,105],[116,0,138,107],[124,0,138,115],[126,0,138,117],[128,0,138,119],[130,0,138,121],[131,0,138,122],[132,0,138,123],[133,0,138,124]],[[20,0,139,20],[26,0,139,26]],[[16,0,140,16],[21,0,140,21],[42,0,140,42],[43,0,140,43],[58,0,140,58]],[[20,0,141,20],[25,0,141,25],[26,0,141,26],[31,0,141,31],[32,0,141,32],[38,0,141,38],[41,0,141,41],[42,0,141,42],[43,0,141,43],[44,0,141,44],[51,0,141,51],[52,0,141,52],[63,0,141,63],[64,0,142,24],[68,0,142,28],[69,0,142,29],[111,0,142,71],[112,0,142,105],[116,0,142,109],[118,0,142,111],[126,0,142,119],[127,0,142,120],[128,0,142,121],[129,0,142,122]],[[20,0,143,20],[26,0,143,26]],[[16,0,144,16],[21,0,144,21],[42,0,144,42],[43,0,144,43],[52,0,144,52]],[[20,0,145,20],[26,0,145,26],[36,0,145,36],[39,0,145,39],[43,0,145,43],[44,0,145,44],[81,0,145,81],[82,0,145,110],[86,0,145,114],[88,0,145,116],[96,0,145,124],[98,0,145,126],[100,0,145,128],[102,0,145,130],[103,0,145,131],[104,0,145,132]],[[20,0,146,20],[25,0,146,25],[26,0,146,26],[31,0,146,31],[32,0,146,32],[38,0,146,38],[41,0,146,41],[42,0,146,42],[43,0,146,43],[44,0,146,44],[51,0,146,51],[52,0,146,52],[63,0,146,63],[64,0,146,64],[74,0,146,74],[75,0,146,75],[76,0,146,76]],[[20,0,147,20],[25,0,147,25],[26,0,147,26],[30,0,147,30],[31,0,147,31],[33,0,147,32],[40,0,147,39],[42,0,147,51],[52,0,147,61],[54,0,147,63],[61,0,147,70],[63,0,147,101],[67,0,147,106],[68,0,147,107],[75,0,147,114],[77,0,147,116],[79,0,147,117],[80,0,147,118],[81,0,147,119]],[[20,0,148,20],[26,0,148,26]],[[16,0,149,16],[21,0,149,21],[42,0,149,42],[43,0,149,43],[50,0,149,50]],[[20,0,150,20],[26,0,150,26],[38,0,150,38],[41,0,150,68],[45,0,150,73],[46,0,150,74],[53,0,150,81],[55,0,150,83],[56,0,150,84]],[[20,0,151,20],[24,0,151,24],[29,0,151,29],[30,0,151,30],[36,0,151,36],[40,0,151,40],[41,0,151,41],[45,0,151,45],[50,0,151,50],[51,0,151,51],[56,0,151,56],[57,0,151,57],[63,0,151,63],[66,0,151,66],[67,0,151,67],[68,0,151,68],[69,0,151,69],[76,0,151,76],[81,0,151,81],[93,0,151,93],[95,0,151,95]],[[24,0,152,24],[48,0,152,48]],[[24,0,153,24],[30,0,153,30],[34,0,153,34],[39,0,153,39],[40,0,153,40],[63,0,153,63],[66,0,153,66],[78,0,153,78],[79,0,153,79],[80,0,153,80]],[[21,0,154,21]],[[20,0,155,20],[25,0,155,25],[26,0,155,26],[29,0,155,29],[31,0,155,31],[32,0,155,32]],[[20,0,156,20],[26,0,156,26]],[[16,0,157,16],[21,0,157,21],[42,0,157,42],[43,0,157,43],[52,0,157,52]],[[20,0,158,20],[26,0,158,26],[38,0,158,38],[41,0,158,41],[45,0,158,45],[46,0,158,46],[83,0,158,83],[84,0,158,112],[88,0,158,116],[90,0,158,118],[98,0,158,126],[100,0,158,128],[102,0,158,130],[104,0,158,132],[105,0,158,133],[106,0,158,134]],[[20,0,159,20],[25,0,159,25],[26,0,159,26],[31,0,159,31],[32,0,159,32],[38,0,159,38],[41,0,159,41],[42,0,159,42],[43,0,159,43],[44,0,159,44],[51,0,159,51],[52,0,159,52],[63,0,159,63],[64,0,159,64],[76,0,159,76],[77,0,159,77],[78,0,159,78]],[[20,0,160,20],[26,0,160,26]],[[13,0,161,13]],[[8,0,162,8],[9,0,162,9],[10,0,162,10],[11,0,162,11]],[[8,0,163,8],[12,0,163,12],[17,0,163,17],[18,0,163,18],[24,0,163,24],[29,0,163,29],[30,0,163,30],[32,0,163,32]],[[12,0,164,12],[41,0,164,41]],[[12,0,165,12],[18,0,165,18],[22,0,165,22],[27,0,165,27],[28,0,165,28],[48,0,165,48],[51,0,165,51],[56,0,165,56],[57,0,165,57],[62,0,165,62],[63,0,165,63],[69,0,165,69],[72,0,165,72],[73,0,165,73],[74,0,165,74],[75,0,165,75],[82,0,165,82],[83,0,165,83],[84,0,165,84]],[[9,0,166,9]],[[4,0,167,4],[5,0,167,5]],[[4,0,169,4]],[],[],[],[],[],[],[],[[7,0,177,7]],[[4,0,178,14],[41,0,178,51],[42,0,178,52],[46,0,178,83],[48,0,178,85],[56,0,178,102],[58,0,178,104],[60,0,178,114]],[[8,0,179,8],[14,0,179,14],[24,0,179,24],[27,0,179,27],[31,0,179,31],[41,0,179,41],[43,0,179,43],[44,0,179,44]],[[8,0,180,8],[14,0,180,14],[20,0,180,20],[23,0,180,23],[31,0,180,31],[32,0,180,32],[45,0,180,45],[46,0,180,46],[59,0,180,59],[60,0,180,60],[64,0,180,64],[65,0,180,65],[66,0,180,66]],[[8,0,181,8],[14,0,181,14],[21,0,181,21],[24,0,181,24],[28,0,181,28],[29,0,181,29],[36,0,181,36],[38,0,181,38],[39,0,181,39]],[[8,0,182,8],[14,0,182,14],[24,0,182,24],[27,0,182,27],[37,0,182,37],[38,0,182,38],[64,0,182,64],[65,0,182,65],[72,0,182,72],[74,0,182,74],[78,0,182,78],[79,0,182,79],[88,0,182,88],[90,0,182,90],[91,0,182,91],[92,0,182,92]],[[8,0,183,8],[14,0,183,14],[22,0,183,22],[25,0,183,25],[35,0,183,35],[36,0,183,36],[62,0,183,62],[63,0,183,63],[70,0,183,70],[71,0,183,71],[72,0,183,72]],[[8,0,184,8],[14,0,184,14],[23,0,184,23],[26,0,184,26],[29,0,184,29],[32,0,184,32],[39,0,184,39],[42,0,184,42],[45,0,184,45],[46,0,184,46]],[[8,0,185,8],[14,0,185,14],[21,0,185,21],[24,0,185,24],[28,0,185,28],[31,0,185,31],[38,0,185,38],[41,0,185,41],[44,0,185,44],[45,0,185,45]],[[8,0,186,8],[14,0,186,14],[15,0,186,15],[27,0,186,27],[28,0,186,28],[32,0,186,32],[34,0,186,34],[36,0,186,36],[37,0,186,37],[45,0,186,45],[46,0,186,46],[48,0,186,48],[49,0,186,49],[50,0,186,50],[51,0,186,51]],[[8,0,187,8],[14,0,187,14],[15,0,187,15],[27,0,187,27],[28,0,187,28],[40,0,187,40],[42,0,187,42],[52,0,187,52],[53,0,187,53],[54,0,187,54]],[[8,0,188,8],[14,0,188,14],[15,0,188,15],[27,0,188,27],[28,0,188,28],[38,0,188,38],[40,0,188,40],[48,0,188,48],[49,0,188,49],[50,0,188,50]],[[8,0,189,8],[14,0,189,14],[15,0,189,15],[27,0,189,27],[28,0,189,28],[34,0,189,34],[36,0,189,36],[40,0,189,40],[41,0,189,41],[54,0,189,54],[55,0,189,55],[62,0,189,62],[63,0,189,63],[64,0,189,64],[65,0,189,65]],[[8,0,190,8],[14,0,190,14],[15,0,190,15],[27,0,190,27],[28,0,190,28],[39,0,190,39],[41,0,190,41],[50,0,190,50],[51,0,190,51],[52,0,190,52]],[[8,0,191,8],[14,0,191,14],[15,0,191,15],[27,0,191,27],[28,0,191,28],[37,0,191,37],[39,0,191,39],[46,0,191,46],[47,0,191,47],[48,0,191,48]],[[8,0,192,8],[15,0,192,15],[21,0,192,21],[22,0,192,22]],[[4,0,193,4],[5,0,193,5]],[[4,0,195,4]],[],[],[],[],[[7,0,200,7]],[[4,0,201,14],[39,0,201,49],[40,0,201,50],[44,0,201,79],[46,0,201,81],[54,0,201,98]],[[8,0,202,8],[19,0,202,19]],[[8,0,203,8],[15,0,203,15],[19,0,203,19],[20,0,203,20]],[[4,0,204,4],[5,0,204,5]],[[4,0,206,4]],[],[],[],[],[],[],[[7,0,213,7]],[[4,0,214,14],[41,0,214,51],[42,0,214,52],[46,0,214,83],[48,0,214,85],[56,0,214,102],[58,0,214,104],[60,0,214,114]],[[8,0,215,8],[14,0,215,14],[24,0,215,24],[27,0,215,27],[31,0,215,31],[41,0,215,41],[43,0,215,43],[44,0,215,44]],[[8,0,216,8],[14,0,216,14],[20,0,216,20],[23,0,216,23],[31,0,216,31],[32,0,216,32],[45,0,216,45],[46,0,216,46],[59,0,216,59],[60,0,216,60],[64,0,216,64],[65,0,216,65],[66,0,216,66]],[[8,0,217,8],[14,0,217,14],[21,0,217,21],[24,0,217,24],[28,0,217,28],[29,0,217,29],[36,0,217,36],[38,0,217,38],[39,0,217,39]],[[8,0,218,8],[14,0,218,14],[19,0,218,19],[22,0,218,22],[32,0,218,32],[33,0,218,33],[59,0,218,59],[60,0,218,60],[67,0,218,67],[69,0,218,69],[73,0,218,73],[74,0,218,74],[83,0,218,83],[85,0,218,85],[86,0,218,86],[87,0,218,87]],[[8,0,219,8],[14,0,219,14],[18,0,219,18],[21,0,219,21],[24,0,219,24],[27,0,219,27],[34,0,219,34],[37,0,219,37],[41,0,219,41],[42,0,219,42]],[[8,0,220,8],[14,0,220,14],[15,0,220,15],[27,0,220,27],[28,0,220,28],[32,0,220,32],[34,0,220,34],[36,0,220,36],[37,0,220,37],[45,0,220,45],[46,0,220,46],[48,0,220,48],[49,0,220,49],[50,0,220,50],[51,0,220,51]],[[8,0,221,8],[14,0,221,14],[15,0,221,15],[27,0,221,27],[28,0,221,28],[35,0,221,35],[37,0,221,37],[42,0,221,42],[43,0,221,43],[44,0,221,44]],[[8,0,222,8],[14,0,222,14],[15,0,222,15],[27,0,222,27],[28,0,222,28],[34,0,222,34],[36,0,222,36],[40,0,222,40],[41,0,222,41],[54,0,222,54],[55,0,222,55],[62,0,222,62],[63,0,222,63],[64,0,222,64],[65,0,222,65]],[[8,0,223,8],[14,0,223,14],[15,0,223,15],[27,0,223,27],[28,0,223,28],[34,0,223,34],[36,0,223,36],[40,0,223,40],[41,0,223,41],[42,0,223,42]],[[8,0,224,8],[15,0,224,15],[21,0,224,21],[22,0,224,22]],[[4,0,225,4],[5,0,225,5]],[[4,0,227,12],[17,0,227,25],[18,0,227,26],[21,0,227,37]],[[8,0,228,8],[16,0,228,16],[19,0,228,19],[20,0,228,20],[31,0,228,31],[33,0,228,33],[35,0,228,35]],[[12,0,229,12],[17,0,229,17],[21,0,229,21],[22,0,229,22]],[[12,0,230,12],[17,0,230,17],[20,0,230,20],[21,0,230,21]],[[12,0,231,12],[17,0,231,17],[20,0,231,20],[21,0,231,21]],[[12,0,232,12],[17,0,232,17],[20,0,232,20]],[[16,0,233,16],[23,0,233,23],[28,0,233,28],[29,0,233,29]],[[12,0,234,12],[17,0,234,17],[22,0,234,22]],[[16,0,235,16],[23,0,235,23],[30,0,235,30],[31,0,235,31]],[[12,0,236,12],[17,0,236,17],[20,0,236,20]],[[16,0,237,16],[23,0,237,23],[29,0,237,29],[30,0,237,30]],[[12,0,238,12]],[[16,0,239,16],[23,0,239,23],[30,0,239,30],[31,0,239,31]],[[9,0,240,9]],[[4,0,241,4],[5,0,241,5]],[[4,0,243,4]],[],[],[],[],[],[[7,0,249,7]],[[4,0,250,14],[44,0,250,54],[45,0,250,55],[49,0,250,89],[51,0,250,91],[59,0,250,108],[61,0,250,110],[63,0,250,120]],[[8,0,251,8],[14,0,251,14],[20,0,251,20],[23,0,251,23],[31,0,251,31],[32,0,251,32],[45,0,251,45],[46,0,251,46],[59,0,251,59],[60,0,251,60],[64,0,251,64],[65,0,251,65],[66,0,251,66]],[[8,0,252,8],[12,0,252,12],[23,0,252,23],[26,0,252,26],[41,0,252,41],[42,0,252,42]],[[8,0,253,8],[12,0,253,12],[16,0,253,16],[17,0,253,17],[22,0,253,22],[24,0,253,24],[27,0,253,27],[28,0,253,28],[30,0,253,30]],[[12,0,254,12],[23,0,254,23],[26,0,254,26],[42,0,254,42],[45,0,254,45],[49,0,254,49],[50,0,254,50],[55,0,254,55],[57,0,254,57],[58,0,254,58],[66,0,254,66],[67,0,254,67],[69,0,254,69],[70,0,254,70],[71,0,254,71]],[[9,0,255,9]],[[8,0,256,8],[14,0,256,14],[15,0,256,15],[27,0,256,27],[28,0,256,28],[32,0,256,32],[34,0,256,34],[36,0,256,36],[37,0,256,37],[45,0,256,45],[46,0,256,46],[48,0,256,48],[49,0,256,49],[50,0,256,50],[51,0,256,51]],[[8,0,257,8],[14,0,257,14],[15,0,257,15],[27,0,257,27],[28,0,257,28],[35,0,257,35],[37,0,257,37],[48,0,257,48],[49,0,257,49],[50,0,257,50]],[[8,0,258,8],[14,0,258,14],[18,0,258,18],[21,0,258,21],[25,0,258,25],[26,0,258,26],[30,0,258,30],[32,0,258,32],[33,0,258,33]],[[8,0,259,8],[12,0,259,12],[16,0,259,16],[18,0,259,18]],[[12,0,260,12],[18,0,260,18],[19,0,260,19],[31,0,260,31],[32,0,260,32],[38,0,260,38],[40,0,260,40],[44,0,260,44],[45,0,260,45],[46,0,260,46]],[[9,0,261,9]],[[8,0,262,8],[15,0,262,15],[21,0,262,21],[22,0,262,22]],[[4,0,263,4],[5,0,263,5]],[[4,0,265,4]],[],[],[],[[7,0,269,7]],[[4,0,270,14],[46,0,270,56],[47,0,270,57],[51,0,270,93],[53,0,270,95],[61,0,270,112]],[[8,0,271,8],[14,0,271,14],[20,0,271,20],[23,0,271,23],[31,0,271,31],[32,0,271,32],[45,0,271,45],[46,0,271,46],[59,0,271,59],[60,0,271,60],[64,0,271,64],[65,0,271,65],[66,0,271,66]],[[8,0,272,8],[12,0,272,12],[23,0,272,23],[26,0,272,26],[31,0,272,31],[32,0,272,32]],[[8,0,273,8],[12,0,273,12],[16,0,273,16],[17,0,273,17],[22,0,273,22],[24,0,273,24],[27,0,273,27],[28,0,273,28],[30,0,273,30]],[[12,0,274,12],[23,0,274,23],[26,0,274,26],[32,0,274,32],[35,0,274,35],[39,0,274,39],[40,0,274,40],[45,0,274,45],[47,0,274,47],[48,0,274,48],[56,0,274,56],[57,0,274,57],[59,0,274,59],[60,0,274,60],[61,0,274,61]],[[9,0,275,9]],[[8,0,276,8],[14,0,276,14],[15,0,276,15],[27,0,276,27],[28,0,276,28],[32,0,276,32],[34,0,276,34],[38,0,276,38],[39,0,276,39],[44,0,276,44],[46,0,276,46],[47,0,276,47],[55,0,276,55],[56,0,276,56],[58,0,276,58],[59,0,276,59],[60,0,276,60],[61,0,276,61]],[[8,0,277,8],[14,0,277,14],[15,0,277,15],[27,0,277,27],[28,0,277,28],[35,0,277,35],[37,0,277,37],[48,0,277,48],[49,0,277,49],[50,0,277,50]],[[8,0,278,8],[14,0,278,14],[18,0,278,18],[21,0,278,21],[25,0,278,25],[26,0,278,26],[30,0,278,30],[32,0,278,32],[33,0,278,33]],[[8,0,279,8],[12,0,279,12],[16,0,279,16],[18,0,279,18]],[[12,0,280,12],[18,0,280,18],[19,0,280,19],[31,0,280,31],[32,0,280,32],[38,0,280,38],[40,0,280,40],[44,0,280,44],[45,0,280,45],[46,0,280,46]],[[9,0,281,9]],[[8,0,282,8],[15,0,282,15],[21,0,282,21],[22,0,282,22]],[[4,0,283,4],[5,0,283,5]],[[1,0,285,1]]],"sourcesContent":["import {AbstractMessageParser} from './abstract-message-parser';\r\nimport {ParsedMessage} from './parsed-message';\r\nimport {ParsedMessagePartStartTag} from './parsed-message-part-start-tag';\r\nimport {ParsedMessagePartEndTag} from './parsed-message-part-end-tag';\r\nimport {ParsedMessagePartPlaceholder} from './parsed-message-part-placeholder';\r\nimport {ParsedMessagePartText} from './parsed-message-part-text';\r\nimport {ParsedMessagePartType} from './parsed-message-part';\r\nimport {TagMapping} from './tag-mapping';\r\nimport {ParsedMessagePartEmptyTag} from './parsed-message-part-empty-tag';\r\nimport {ParsedMessagePartICUMessageRef} from './parsed-message-part-icu-message-ref';\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 2.0\r\n */\r\nexport class Xliff2MessageParser extends AbstractMessageParser {\r\n\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    protected processStartElement(elementNode: Element, message: ParsedMessage): boolean {\r\n        const tagName = elementNode.tagName;\r\n        if (tagName === 'ph') {\r\n            // placeholder are like <ph id=\"0\" equiv=\"INTERPOLATION\" disp=\"{{number()}}\"/>\r\n            // They contain the id and also a name (number in the example)\r\n            // TODO make some use of the name (but it is not available in XLIFF 1.2)\r\n            // ICU message are handled with the same tag\r\n            // Before 4.3.2 they did not have an equiv and disp (Bug #17344):\r\n            // e.g. <ph id=\"0\"/>\r\n            // Beginning with 4.3.2 they do have an equiv ICU and disp:\r\n            // e.g. <ph id=\"0\" equiv=\"ICU\" disp=\"{count, plural, =0 {...} =1 {...} other {...}}\"/>\r\n            // and empty tags have equiv other then INTERPOLATION:\r\n            // e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n            // or <ph equiv=\"LINE_BREAK\" type=\"lb\" disp=\"&lt;br/>\"/>\r\n            let isInterpolation = false;\r\n            let isICU = false;\r\n            let isEmptyTag = false;\r\n            const equiv = elementNode.getAttribute('equiv');\r\n            const disp = elementNode.getAttribute('disp');\r\n            let indexString = null;\r\n            let index = 0;\r\n            let emptyTagName = null;\r\n            if (!equiv) {\r\n                // old ICU syntax, fixed with #17344\r\n                isICU = true;\r\n                indexString = elementNode.getAttribute('id');\r\n                index = Number.parseInt(indexString, 10);\r\n            } else if (equiv.startsWith('ICU')) {\r\n                // new ICU syntax, fixed with #17344\r\n                isICU = true;\r\n                if (equiv === 'ICU') {\r\n                    indexString = '0';\r\n                } else {\r\n                    indexString = equiv.substring('ICU_'.length);\r\n                }\r\n                index = Number.parseInt(indexString, 10);\r\n            } else if (equiv.startsWith('INTERPOLATION')) {\r\n                isInterpolation = true;\r\n                if (equiv === 'INTERPOLATION') {\r\n                    indexString = '0';\r\n                } else {\r\n                    indexString = equiv.substring('INTERPOLATION_'.length);\r\n                }\r\n                index = Number.parseInt(indexString, 10);\r\n            } else if (new TagMapping().isEmptyTagPlaceholderName(equiv)) {\r\n                isEmptyTag = true;\r\n                emptyTagName = new TagMapping().getTagnameFromEmptyTagPlaceholderName(equiv);\r\n            } else {\r\n                return true;\r\n            }\r\n            if (isInterpolation) {\r\n                message.addPlaceholder(index, disp);\r\n            } else if (isICU) {\r\n                message.addICUMessageRef(index, disp);\r\n            } else if (isEmptyTag) {\r\n                message.addEmptyTag(emptyTagName, this.parseIdCountFromName(equiv));\r\n            }\r\n        } else if (tagName === 'pc') {\r\n            // pc example: <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\"\r\n            // dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">IMPORTANT</pc>\r\n            const embeddedTagName = this.tagNameFromPCElement(elementNode);\r\n            if (embeddedTagName) {\r\n                message.addStartTag(embeddedTagName, this.parseIdCountFromName(elementNode.getAttribute('equivStart')));\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    protected processEndElement(elementNode: Element, message: ParsedMessage) {\r\n        const tagName = elementNode.tagName;\r\n        if (tagName === 'pc') {\r\n            // pc example: <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\"\r\n            // dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">IMPORTANT</pc>\r\n            const embeddedTagName = this.tagNameFromPCElement(elementNode);\r\n            if (embeddedTagName) {\r\n                message.addEndTag(embeddedTagName);\r\n            }\r\n            return;\r\n        }\r\n    }\r\n\r\n    private tagNameFromPCElement(pcNode: Element): string {\r\n        let dispStart = pcNode.getAttribute('dispStart');\r\n        if (dispStart.startsWith('<')) {\r\n            dispStart = dispStart.substring(1);\r\n        }\r\n        if (dispStart.endsWith('>')) {\r\n            dispStart = dispStart.substring(0, dispStart.length - 1);\r\n        }\r\n        return dispStart;\r\n    }\r\n\r\n    /**\r\n     * reimplemented here, because XLIFF 2.0 uses a deeper xml model.\r\n     * So we cannot simply replace the message parts by xml parts.\r\n     * @param message message\r\n     * @param rootElem rootElem\r\n     */\r\n    protected addXmlRepresentationToRoot(message: ParsedMessage, rootElem: Element) {\r\n        const stack = [{element: rootElem, tagName: 'root'}];\r\n        let id = 0;\r\n        message.parts().forEach((part) => {\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.TEXT:\r\n                    stack[stack.length - 1].element.appendChild(\r\n                        this.createXmlRepresentationOfTextPart(<ParsedMessagePartText> part, rootElem));\r\n                    break;\r\n                case ParsedMessagePartType.PLACEHOLDER:\r\n                    stack[stack.length - 1].element.appendChild(\r\n                        this.createXmlRepresentationOfPlaceholderPart(<ParsedMessagePartPlaceholder> part, rootElem, id++));\r\n                    break;\r\n                case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                    stack[stack.length - 1].element.appendChild(\r\n                        this.createXmlRepresentationOfICUMessageRefPart(<ParsedMessagePartICUMessageRef> part, rootElem));\r\n                    break;\r\n                case ParsedMessagePartType.START_TAG:\r\n                    const newTagElem = this.createXmlRepresentationOfStartTagPart(<ParsedMessagePartStartTag> part, rootElem, id++);\r\n                    stack[stack.length - 1].element.appendChild(newTagElem);\r\n                    stack.push({element: <Element> newTagElem, tagName: (<ParsedMessagePartStartTag> part).tagName()});\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    const closeTagName = (<ParsedMessagePartEndTag> part).tagName();\r\n                    if (stack.length <= 1 || stack[stack.length - 1].tagName !== closeTagName) {\r\n                        // oops, not well formed\r\n                        throw new Error('unexpected close tag ' + closeTagName);\r\n                    }\r\n                    stack.pop();\r\n                    break;\r\n                case ParsedMessagePartType.EMPTY_TAG:\r\n                    const emptyTagElem = this.createXmlRepresentationOfEmptyTagPart(<ParsedMessagePartEmptyTag> part, rootElem, id++);\r\n                    stack[stack.length - 1].element.appendChild(emptyTagElem);\r\n                    break;\r\n            }\r\n        });\r\n        if (stack.length !== 1) {\r\n            // oops, not well closed tags\r\n            throw new Error('missing close tag ' + stack[stack.length - 1].tagName);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty pc-Element.\r\n     * e.g. <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\" dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">\r\n     * Text content will be added later.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    protected createXmlRepresentationOfStartTagPart(part: ParsedMessagePartStartTag, rootElem: Element, id: number): Node {\r\n        const tagMapping = new TagMapping();\r\n        const pcElem = rootElem.ownerDocument.createElement('pc');\r\n        const tagName = part.tagName();\r\n        const equivStart = tagMapping.getStartTagPlaceholderName(tagName, part.idCounter());\r\n        const equivEnd = tagMapping.getCloseTagPlaceholderName(tagName);\r\n        const dispStart = '<' + tagName + '>';\r\n        const dispEnd = '</' + tagName + '>';\r\n        pcElem.setAttribute('id', id.toString(10));\r\n        pcElem.setAttribute('equivStart', equivStart);\r\n        pcElem.setAttribute('equivEnd', equivEnd);\r\n        pcElem.setAttribute('type', this.getTypeForTag(tagName));\r\n        pcElem.setAttribute('dispStart', dispStart);\r\n        pcElem.setAttribute('dispEnd', dispEnd);\r\n        return pcElem;\r\n    }\r\n\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Not used here, because content is child of start tag.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    protected createXmlRepresentationOfEndTagPart(part: ParsedMessagePartEndTag, rootElem: Element): Node {\r\n        // not used\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty ph-Element.\r\n     * e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    protected createXmlRepresentationOfEmptyTagPart(part: ParsedMessagePartEmptyTag, rootElem: Element, id: number): Node {\r\n        const tagMapping = new TagMapping();\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        const tagName = part.tagName();\r\n        const equiv = tagMapping.getEmptyTagPlaceholderName(tagName, part.idCounter());\r\n        const disp = '<' + tagName + '/>';\r\n        phElem.setAttribute('id', id.toString(10));\r\n        phElem.setAttribute('equiv', equiv);\r\n        phElem.setAttribute('type', this.getTypeForTag(tagName));\r\n        phElem.setAttribute('disp', disp);\r\n        return phElem;\r\n    }\r\n\r\n    private getTypeForTag(tag: string): string {\r\n        switch (tag.toLowerCase()) {\r\n            case 'br':\r\n            case 'b':\r\n            case 'i':\r\n            case 'u':\r\n                return 'fmt';\r\n            case 'img':\r\n                return 'image';\r\n            case 'a':\r\n                return 'link';\r\n            default:\r\n                return 'other';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns e.g. <ph id=\"1\" equiv=\"INTERPOLATION_1\" disp=\"{{total()}}\"/>\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    protected createXmlRepresentationOfPlaceholderPart(part: ParsedMessagePartPlaceholder, rootElem: Element, id: number): Node {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        let equivAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            equivAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('id', id.toString(10));\r\n        phElem.setAttribute('equiv', equivAttrib);\r\n        const disp = part.disp();\r\n        if (disp) {\r\n            phElem.setAttribute('disp', disp);\r\n        }\r\n        return phElem;\r\n    }\r\n\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    protected createXmlRepresentationOfICUMessageRefPart(part: ParsedMessagePartICUMessageRef, rootElem: Element): Node {\r\n        const phElem = rootElem.ownerDocument.createElement('ph');\r\n        let equivAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            equivAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('id', part.index().toString(10));\r\n        phElem.setAttribute('equiv', equivAttrib);\r\n        const disp = part.disp();\r\n        if (disp) {\r\n            phElem.setAttribute('disp', disp);\r\n        }\r\n        return phElem;\r\n    }\r\n\r\n}\r\n"]},"resolvedIds":{"./parsed-message-part":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\parsed-message-part.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./tag-mapping":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\tag-mapping.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./abstract-message-parser":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-message-parser.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":59930,"body":[{"type":"ImportDeclaration","start":0,"end":76,"specifiers":[{"type":"ImportSpecifier","start":9,"end":18,"imported":{"type":"Identifier","start":9,"end":18,"name":"STATE_NEW"},"local":{"type":"Identifier","start":9,"end":18,"name":"STATE_NEW"}},{"type":"ImportSpecifier","start":20,"end":36,"imported":{"type":"Identifier","start":20,"end":36,"name":"STATE_TRANSLATED"},"local":{"type":"Identifier","start":20,"end":36,"name":"STATE_TRANSLATED"}},{"type":"ImportSpecifier","start":38,"end":49,"imported":{"type":"Identifier","start":38,"end":49,"name":"STATE_FINAL"},"local":{"type":"Identifier","start":38,"end":49,"name":"STATE_FINAL"}}],"source":{"type":"Literal","start":57,"end":75,"value":"../api/constants","raw":"'../api/constants'"}},{"type":"ImportDeclaration","start":78,"end":125,"specifiers":[{"type":"ImportSpecifier","start":87,"end":99,"imported":{"type":"Identifier","start":87,"end":99,"name":"DOMUtilities"},"local":{"type":"Identifier","start":87,"end":99,"name":"DOMUtilities"}}],"source":{"type":"Literal","start":107,"end":124,"value":"./dom-utilities","raw":"'./dom-utilities'"}},{"type":"ImportDeclaration","start":127,"end":185,"specifiers":[{"type":"ImportSpecifier","start":136,"end":153,"imported":{"type":"Identifier","start":136,"end":153,"name":"AbstractTransUnit"},"local":{"type":"Identifier","start":136,"end":153,"name":"AbstractTransUnit"}}],"source":{"type":"Literal","start":161,"end":184,"value":"./abstract-trans-unit","raw":"'./abstract-trans-unit'"}},{"type":"ImportDeclaration","start":187,"end":249,"specifiers":[{"type":"ImportSpecifier","start":196,"end":215,"imported":{"type":"Identifier","start":196,"end":215,"name":"Xliff2MessageParser"},"local":{"type":"Identifier","start":196,"end":215,"name":"Xliff2MessageParser"}}],"source":{"type":"Literal","start":223,"end":248,"value":"./xliff2-message-parser","raw":"'./xliff2-message-parser'"}},{"type":"ImportDeclaration","start":251,"end":292,"specifiers":[{"type":"ImportSpecifier","start":260,"end":277,"imported":{"type":"Identifier","start":260,"end":277,"name":"isNullOrUndefined"},"local":{"type":"Identifier","start":260,"end":277,"name":"isNullOrUndefined"}}],"source":{"type":"Literal","start":285,"end":291,"value":"util","raw":"'util'"}},{"type":"ExportNamedDeclaration","start":386,"end":18166,"declaration":{"type":"ClassDeclaration","start":393,"end":18166,"id":{"type":"Identifier","start":399,"end":414,"name":"Xliff2TransUnit"},"superClass":{"type":"Identifier","start":423,"end":440,"name":"AbstractTransUnit"},"body":{"type":"ClassBody","start":441,"end":18166,"body":[{"type":"MethodDefinition","start":448,"end":566,"static":false,"computed":false,"key":{"type":"Identifier","start":448,"end":459,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":459,"end":566,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":460,"end":468,"name":"_element"},{"type":"Identifier","start":470,"end":473,"name":"_id"},{"type":"Identifier","start":475,"end":499,"name":"_translationMessagesFile"}],"body":{"type":"BlockStatement","start":501,"end":566,"body":[{"type":"ExpressionStatement","start":512,"end":559,"expression":{"type":"CallExpression","start":512,"end":558,"callee":{"type":"Super","start":512,"end":517},"arguments":[{"type":"Identifier","start":518,"end":526,"name":"_element"},{"type":"Identifier","start":528,"end":531,"name":"_id"},{"type":"Identifier","start":533,"end":557,"name":"_translationMessagesFile"}],"optional":false}}]}}},{"type":"MethodDefinition","start":572,"end":750,"static":false,"computed":false,"key":{"type":"Identifier","start":572,"end":585,"name":"sourceContent"},"kind":"method","value":{"type":"FunctionExpression","start":585,"end":750,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":588,"end":750,"body":[{"type":"VariableDeclaration","start":599,"end":684,"declarations":[{"type":"VariableDeclarator","start":605,"end":683,"id":{"type":"Identifier","start":605,"end":618,"name":"sourceElement"},"init":{"type":"CallExpression","start":621,"end":683,"callee":{"type":"MemberExpression","start":621,"end":658,"object":{"type":"Identifier","start":621,"end":633,"name":"DOMUtilities"},"property":{"type":"Identifier","start":634,"end":658,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":659,"end":672,"object":{"type":"ThisExpression","start":659,"end":663},"property":{"type":"Identifier","start":664,"end":672,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":674,"end":682,"value":"source","raw":"'source'"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":694,"end":743,"argument":{"type":"CallExpression","start":701,"end":742,"callee":{"type":"MemberExpression","start":701,"end":727,"object":{"type":"Identifier","start":701,"end":713,"name":"DOMUtilities"},"property":{"type":"Identifier","start":714,"end":727,"name":"getXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":728,"end":741,"name":"sourceElement"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1000,"end":1515,"static":false,"computed":false,"key":{"type":"Identifier","start":1000,"end":1016,"name":"setSourceContent"},"kind":"method","value":{"type":"FunctionExpression","start":1016,"end":1515,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1017,"end":1027,"name":"newContent"}],"body":{"type":"BlockStatement","start":1029,"end":1515,"body":[{"type":"VariableDeclaration","start":1040,"end":1116,"declarations":[{"type":"VariableDeclarator","start":1044,"end":1115,"id":{"type":"Identifier","start":1044,"end":1050,"name":"source"},"init":{"type":"CallExpression","start":1053,"end":1115,"callee":{"type":"MemberExpression","start":1053,"end":1090,"object":{"type":"Identifier","start":1053,"end":1065,"name":"DOMUtilities"},"property":{"type":"Identifier","start":1066,"end":1090,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":1091,"end":1104,"object":{"type":"ThisExpression","start":1091,"end":1095},"property":{"type":"Identifier","start":1096,"end":1104,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":1106,"end":1114,"value":"source","raw":"'source'"}],"optional":false}}],"kind":"let"},{"type":"IfStatement","start":1126,"end":1436,"test":{"type":"UnaryExpression","start":1130,"end":1137,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":1131,"end":1137,"name":"source"}},"consequent":{"type":"BlockStatement","start":1139,"end":1436,"body":[{"type":"VariableDeclaration","start":1238,"end":1318,"declarations":[{"type":"VariableDeclarator","start":1244,"end":1317,"id":{"type":"Identifier","start":1244,"end":1251,"name":"segment"},"init":{"type":"CallExpression","start":1254,"end":1317,"callee":{"type":"MemberExpression","start":1254,"end":1291,"object":{"type":"Identifier","start":1254,"end":1266,"name":"DOMUtilities"},"property":{"type":"Identifier","start":1267,"end":1291,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":1292,"end":1305,"object":{"type":"ThisExpression","start":1292,"end":1296},"property":{"type":"Identifier","start":1297,"end":1305,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":1307,"end":1316,"value":"segment","raw":"'segment'"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":1332,"end":1425,"expression":{"type":"AssignmentExpression","start":1332,"end":1424,"operator":"=","left":{"type":"Identifier","start":1332,"end":1338,"name":"source"},"right":{"type":"CallExpression","start":1341,"end":1424,"callee":{"type":"MemberExpression","start":1341,"end":1371,"object":{"type":"MemberExpression","start":1341,"end":1359,"object":{"type":"Identifier","start":1341,"end":1348,"name":"segment"},"property":{"type":"Identifier","start":1349,"end":1359,"name":"parentNode"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1360,"end":1371,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":1372,"end":1423,"callee":{"type":"MemberExpression","start":1372,"end":1413,"object":{"type":"MemberExpression","start":1372,"end":1399,"object":{"type":"MemberExpression","start":1372,"end":1385,"object":{"type":"ThisExpression","start":1372,"end":1376},"property":{"type":"Identifier","start":1377,"end":1385,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1386,"end":1399,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1400,"end":1413,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1414,"end":1422,"value":"source","raw":"'source'"}],"optional":false}],"optional":false}}}]},"alternate":null},{"type":"ExpressionStatement","start":1446,"end":1508,"expression":{"type":"CallExpression","start":1446,"end":1507,"callee":{"type":"MemberExpression","start":1446,"end":1487,"object":{"type":"Identifier","start":1446,"end":1458,"name":"DOMUtilities"},"property":{"type":"Identifier","start":1459,"end":1487,"name":"replaceContentWithXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1488,"end":1494,"name":"source"},{"type":"Identifier","start":1496,"end":1506,"name":"newContent"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1593,"end":1660,"static":false,"computed":false,"key":{"type":"Identifier","start":1593,"end":1606,"name":"messageParser"},"kind":"method","value":{"type":"FunctionExpression","start":1606,"end":1660,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1609,"end":1660,"body":[{"type":"ReturnStatement","start":1620,"end":1653,"argument":{"type":"NewExpression","start":1627,"end":1652,"callee":{"type":"Identifier","start":1631,"end":1650,"name":"Xliff2MessageParser"},"arguments":[]}}]}}},{"type":"MethodDefinition","start":1766,"end":2089,"static":false,"computed":false,"key":{"type":"Identifier","start":1766,"end":1795,"name":"createSourceContentNormalized"},"kind":"method","value":{"type":"FunctionExpression","start":1795,"end":2089,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1798,"end":2089,"body":[{"type":"VariableDeclaration","start":1809,"end":1894,"declarations":[{"type":"VariableDeclarator","start":1815,"end":1893,"id":{"type":"Identifier","start":1815,"end":1828,"name":"sourceElement"},"init":{"type":"CallExpression","start":1831,"end":1893,"callee":{"type":"MemberExpression","start":1831,"end":1868,"object":{"type":"Identifier","start":1831,"end":1843,"name":"DOMUtilities"},"property":{"type":"Identifier","start":1844,"end":1868,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":1869,"end":1882,"object":{"type":"ThisExpression","start":1869,"end":1873},"property":{"type":"Identifier","start":1874,"end":1882,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":1884,"end":1892,"value":"source","raw":"'source'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1904,"end":2082,"test":{"type":"Identifier","start":1908,"end":1921,"name":"sourceElement"},"consequent":{"type":"BlockStatement","start":1923,"end":2029,"body":[{"type":"ReturnStatement","start":1938,"end":2018,"argument":{"type":"CallExpression","start":1945,"end":2017,"callee":{"type":"MemberExpression","start":1945,"end":1996,"object":{"type":"CallExpression","start":1945,"end":1965,"callee":{"type":"MemberExpression","start":1945,"end":1963,"object":{"type":"ThisExpression","start":1945,"end":1949},"property":{"type":"Identifier","start":1950,"end":1963,"name":"messageParser"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":1966,"end":1996,"name":"createNormalizedMessageFromXML"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1997,"end":2010,"name":"sourceElement"},{"type":"Literal","start":2012,"end":2016,"value":null,"raw":"null"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":2044,"end":2082,"body":[{"type":"ReturnStatement","start":2059,"end":2071,"argument":{"type":"Literal","start":2066,"end":2070,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":2204,"end":2382,"static":false,"computed":false,"key":{"type":"Identifier","start":2204,"end":2217,"name":"targetContent"},"kind":"method","value":{"type":"FunctionExpression","start":2217,"end":2382,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2220,"end":2382,"body":[{"type":"VariableDeclaration","start":2231,"end":2316,"declarations":[{"type":"VariableDeclarator","start":2237,"end":2315,"id":{"type":"Identifier","start":2237,"end":2250,"name":"targetElement"},"init":{"type":"CallExpression","start":2253,"end":2315,"callee":{"type":"MemberExpression","start":2253,"end":2290,"object":{"type":"Identifier","start":2253,"end":2265,"name":"DOMUtilities"},"property":{"type":"Identifier","start":2266,"end":2290,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2291,"end":2304,"object":{"type":"ThisExpression","start":2291,"end":2295},"property":{"type":"Identifier","start":2296,"end":2304,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":2306,"end":2314,"value":"target","raw":"'target'"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":2326,"end":2375,"argument":{"type":"CallExpression","start":2333,"end":2374,"callee":{"type":"MemberExpression","start":2333,"end":2359,"object":{"type":"Identifier","start":2333,"end":2345,"name":"DOMUtilities"},"property":{"type":"Identifier","start":2346,"end":2359,"name":"getXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2360,"end":2373,"name":"targetElement"}],"optional":false}}]}}},{"type":"MethodDefinition","start":2562,"end":2812,"static":false,"computed":false,"key":{"type":"Identifier","start":2562,"end":2585,"name":"targetContentNormalized"},"kind":"method","value":{"type":"FunctionExpression","start":2585,"end":2812,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2588,"end":2812,"body":[{"type":"VariableDeclaration","start":2599,"end":2684,"declarations":[{"type":"VariableDeclarator","start":2605,"end":2683,"id":{"type":"Identifier","start":2605,"end":2618,"name":"targetElement"},"init":{"type":"CallExpression","start":2621,"end":2683,"callee":{"type":"MemberExpression","start":2621,"end":2658,"object":{"type":"Identifier","start":2621,"end":2633,"name":"DOMUtilities"},"property":{"type":"Identifier","start":2634,"end":2658,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2659,"end":2672,"object":{"type":"ThisExpression","start":2659,"end":2663},"property":{"type":"Identifier","start":2664,"end":2672,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":2674,"end":2682,"value":"target","raw":"'target'"}],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":2694,"end":2805,"argument":{"type":"CallExpression","start":2701,"end":2804,"callee":{"type":"MemberExpression","start":2701,"end":2757,"object":{"type":"NewExpression","start":2701,"end":2726,"callee":{"type":"Identifier","start":2705,"end":2724,"name":"Xliff2MessageParser"},"arguments":[]},"property":{"type":"Identifier","start":2727,"end":2757,"name":"createNormalizedMessageFromXML"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2758,"end":2771,"name":"targetElement"},{"type":"CallExpression","start":2773,"end":2803,"callee":{"type":"MemberExpression","start":2773,"end":2801,"object":{"type":"ThisExpression","start":2773,"end":2777},"property":{"type":"Identifier","start":2778,"end":2801,"name":"sourceContentNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":2891,"end":3169,"static":false,"computed":false,"key":{"type":"Identifier","start":2891,"end":2908,"name":"nativeTargetState"},"kind":"method","value":{"type":"FunctionExpression","start":2908,"end":3169,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2911,"end":3169,"body":[{"type":"VariableDeclaration","start":2922,"end":3009,"declarations":[{"type":"VariableDeclarator","start":2928,"end":3008,"id":{"type":"Identifier","start":2928,"end":2942,"name":"segmentElement"},"init":{"type":"CallExpression","start":2945,"end":3008,"callee":{"type":"MemberExpression","start":2945,"end":2982,"object":{"type":"Identifier","start":2945,"end":2957,"name":"DOMUtilities"},"property":{"type":"Identifier","start":2958,"end":2982,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2983,"end":2996,"object":{"type":"ThisExpression","start":2983,"end":2987},"property":{"type":"Identifier","start":2988,"end":2996,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":2998,"end":3007,"value":"segment","raw":"'segment'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3019,"end":3162,"test":{"type":"Identifier","start":3023,"end":3037,"name":"segmentElement"},"consequent":{"type":"BlockStatement","start":3039,"end":3109,"body":[{"type":"ReturnStatement","start":3054,"end":3098,"argument":{"type":"CallExpression","start":3061,"end":3097,"callee":{"type":"MemberExpression","start":3061,"end":3088,"object":{"type":"Identifier","start":3061,"end":3075,"name":"segmentElement"},"property":{"type":"Identifier","start":3076,"end":3088,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3089,"end":3096,"value":"state","raw":"'state'"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":3124,"end":3162,"body":[{"type":"ReturnStatement","start":3139,"end":3151,"argument":{"type":"Literal","start":3146,"end":3150,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":3258,"end":3503,"static":false,"computed":false,"key":{"type":"Identifier","start":3258,"end":3278,"name":"setNativeTargetState"},"kind":"method","value":{"type":"FunctionExpression","start":3278,"end":3503,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3279,"end":3290,"name":"nativeState"}],"body":{"type":"BlockStatement","start":3292,"end":3503,"body":[{"type":"VariableDeclaration","start":3303,"end":3390,"declarations":[{"type":"VariableDeclarator","start":3309,"end":3389,"id":{"type":"Identifier","start":3309,"end":3323,"name":"segmentElement"},"init":{"type":"CallExpression","start":3326,"end":3389,"callee":{"type":"MemberExpression","start":3326,"end":3363,"object":{"type":"Identifier","start":3326,"end":3338,"name":"DOMUtilities"},"property":{"type":"Identifier","start":3339,"end":3363,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3364,"end":3377,"object":{"type":"ThisExpression","start":3364,"end":3368},"property":{"type":"Identifier","start":3369,"end":3377,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":3379,"end":3388,"value":"segment","raw":"'segment'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3400,"end":3496,"test":{"type":"Identifier","start":3404,"end":3418,"name":"segmentElement"},"consequent":{"type":"BlockStatement","start":3420,"end":3496,"body":[{"type":"ExpressionStatement","start":3435,"end":3485,"expression":{"type":"CallExpression","start":3435,"end":3484,"callee":{"type":"MemberExpression","start":3435,"end":3462,"object":{"type":"Identifier","start":3435,"end":3449,"name":"segmentElement"},"property":{"type":"Identifier","start":3450,"end":3462,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3463,"end":3470,"value":"state","raw":"'state'"},{"type":"Identifier","start":3472,"end":3483,"name":"nativeState"}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":3820,"end":4178,"static":false,"computed":false,"key":{"type":"Identifier","start":3820,"end":3841,"name":"mapStateToNativeState"},"kind":"method","value":{"type":"FunctionExpression","start":3841,"end":4178,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3842,"end":3847,"name":"state"}],"body":{"type":"BlockStatement","start":3849,"end":4178,"body":[{"type":"SwitchStatement","start":3860,"end":4171,"discriminant":{"type":"Identifier","start":3868,"end":3873,"name":"state"},"cases":[{"type":"SwitchCase","start":3890,"end":3940,"consequent":[{"type":"ReturnStatement","start":3923,"end":3940,"argument":{"type":"Literal","start":3930,"end":3939,"value":"initial","raw":"'initial'"}}],"test":{"type":"Identifier","start":3895,"end":3904,"name":"STATE_NEW"}},{"type":"SwitchCase","start":3954,"end":4014,"consequent":[{"type":"ReturnStatement","start":3994,"end":4014,"argument":{"type":"Literal","start":4001,"end":4013,"value":"translated","raw":"'translated'"}}],"test":{"type":"Identifier","start":3959,"end":3975,"name":"STATE_TRANSLATED"}},{"type":"SwitchCase","start":4028,"end":4078,"consequent":[{"type":"ReturnStatement","start":4063,"end":4078,"argument":{"type":"Literal","start":4070,"end":4077,"value":"final","raw":"'final'"}}],"test":{"type":"Identifier","start":4033,"end":4044,"name":"STATE_FINAL"}},{"type":"SwitchCase","start":4092,"end":4160,"consequent":[{"type":"ThrowStatement","start":4118,"end":4160,"argument":{"type":"NewExpression","start":4124,"end":4159,"callee":{"type":"Identifier","start":4128,"end":4133,"name":"Error"},"arguments":[{"type":"BinaryExpression","start":4134,"end":4158,"left":{"type":"Literal","start":4134,"end":4150,"value":"unknown state ","raw":"'unknown state '"},"operator":"+","right":{"type":"Identifier","start":4153,"end":4158,"name":"state"}}]}}],"test":null}]}]}}},{"type":"MethodDefinition","start":4375,"end":4814,"static":false,"computed":false,"key":{"type":"Identifier","start":4375,"end":4396,"name":"mapNativeStateToState"},"kind":"method","value":{"type":"FunctionExpression","start":4396,"end":4814,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4397,"end":4408,"name":"nativeState"}],"body":{"type":"BlockStatement","start":4410,"end":4814,"body":[{"type":"SwitchStatement","start":4421,"end":4807,"discriminant":{"type":"Identifier","start":4429,"end":4440,"name":"nativeState"},"cases":[{"type":"SwitchCase","start":4457,"end":4507,"consequent":[{"type":"ReturnStatement","start":4490,"end":4507,"argument":{"type":"Identifier","start":4497,"end":4506,"name":"STATE_NEW"}}],"test":{"type":"Literal","start":4462,"end":4471,"value":"initial","raw":"'initial'"}},{"type":"SwitchCase","start":4521,"end":4581,"consequent":[{"type":"ReturnStatement","start":4557,"end":4581,"argument":{"type":"Identifier","start":4564,"end":4580,"name":"STATE_TRANSLATED"}}],"test":{"type":"Literal","start":4526,"end":4538,"value":"translated","raw":"'translated'"}},{"type":"SwitchCase","start":4595,"end":4675,"consequent":[{"type":"ReturnStatement","start":4651,"end":4675,"argument":{"type":"Identifier","start":4658,"end":4674,"name":"STATE_TRANSLATED"}}],"test":{"type":"Literal","start":4600,"end":4610,"value":"reviewed","raw":"'reviewed'"}},{"type":"SwitchCase","start":4689,"end":4739,"consequent":[{"type":"ReturnStatement","start":4720,"end":4739,"argument":{"type":"Identifier","start":4727,"end":4738,"name":"STATE_FINAL"}}],"test":{"type":"Literal","start":4694,"end":4701,"value":"final","raw":"'final'"}},{"type":"SwitchCase","start":4753,"end":4796,"consequent":[{"type":"ReturnStatement","start":4779,"end":4796,"argument":{"type":"Identifier","start":4786,"end":4795,"name":"STATE_NEW"}}],"test":null}]}]}}},{"type":"MethodDefinition","start":5252,"end":5839,"static":false,"computed":false,"key":{"type":"Identifier","start":5252,"end":5268,"name":"sourceReferences"},"kind":"method","value":{"type":"FunctionExpression","start":5268,"end":5839,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":5271,"end":5839,"body":[{"type":"VariableDeclaration","start":5360,"end":5424,"declarations":[{"type":"VariableDeclarator","start":5366,"end":5423,"id":{"type":"Identifier","start":5366,"end":5378,"name":"noteElements"},"init":{"type":"CallExpression","start":5381,"end":5423,"callee":{"type":"MemberExpression","start":5381,"end":5415,"object":{"type":"MemberExpression","start":5381,"end":5394,"object":{"type":"ThisExpression","start":5381,"end":5385},"property":{"type":"Identifier","start":5386,"end":5394,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5395,"end":5415,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5416,"end":5422,"value":"note","raw":"'note'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":5434,"end":5456,"declarations":[{"type":"VariableDeclarator","start":5440,"end":5455,"id":{"type":"Identifier","start":5440,"end":5450,"name":"sourceRefs"},"init":{"type":"ArrayExpression","start":5453,"end":5455,"elements":[]}}],"kind":"const"},{"type":"ForStatement","start":5466,"end":5804,"init":{"type":"VariableDeclaration","start":5471,"end":5480,"declarations":[{"type":"VariableDeclarator","start":5475,"end":5480,"id":{"type":"Identifier","start":5475,"end":5476,"name":"i"},"init":{"type":"Literal","start":5479,"end":5480,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":5482,"end":5505,"left":{"type":"Identifier","start":5482,"end":5483,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":5486,"end":5505,"object":{"type":"Identifier","start":5486,"end":5498,"name":"noteElements"},"property":{"type":"Identifier","start":5499,"end":5505,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":5507,"end":5510,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":5507,"end":5508,"name":"i"}},"body":{"type":"BlockStatement","start":5512,"end":5804,"body":[{"type":"VariableDeclaration","start":5527,"end":5565,"declarations":[{"type":"VariableDeclarator","start":5533,"end":5564,"id":{"type":"Identifier","start":5533,"end":5541,"name":"noteElem"},"init":{"type":"CallExpression","start":5544,"end":5564,"callee":{"type":"MemberExpression","start":5544,"end":5561,"object":{"type":"Identifier","start":5544,"end":5556,"name":"noteElements"},"property":{"type":"Identifier","start":5557,"end":5561,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5562,"end":5563,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":5579,"end":5793,"test":{"type":"BinaryExpression","start":5583,"end":5631,"left":{"type":"CallExpression","start":5583,"end":5616,"callee":{"type":"MemberExpression","start":5583,"end":5604,"object":{"type":"Identifier","start":5583,"end":5591,"name":"noteElem"},"property":{"type":"Identifier","start":5592,"end":5604,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5605,"end":5615,"value":"category","raw":"'category'"}],"optional":false},"operator":"===","right":{"type":"Literal","start":5621,"end":5631,"value":"location","raw":"'location'"}},"consequent":{"type":"BlockStatement","start":5633,"end":5793,"body":[{"type":"VariableDeclaration","start":5652,"end":5706,"declarations":[{"type":"VariableDeclarator","start":5658,"end":5705,"id":{"type":"Identifier","start":5658,"end":5670,"name":"sourceAndPos"},"init":{"type":"CallExpression","start":5673,"end":5705,"callee":{"type":"MemberExpression","start":5673,"end":5695,"object":{"type":"Identifier","start":5673,"end":5685,"name":"DOMUtilities"},"property":{"type":"Identifier","start":5686,"end":5695,"name":"getPCDATA"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5696,"end":5704,"name":"noteElem"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":5724,"end":5778,"expression":{"type":"CallExpression","start":5724,"end":5777,"callee":{"type":"MemberExpression","start":5724,"end":5739,"object":{"type":"Identifier","start":5724,"end":5734,"name":"sourceRefs"},"property":{"type":"Identifier","start":5735,"end":5739,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":5740,"end":5776,"callee":{"type":"MemberExpression","start":5740,"end":5762,"object":{"type":"ThisExpression","start":5740,"end":5744},"property":{"type":"Identifier","start":5745,"end":5762,"name":"parseSourceAndPos"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5763,"end":5775,"name":"sourceAndPos"}],"optional":false}],"optional":false}}]},"alternate":null}]}},{"type":"ReturnStatement","start":5814,"end":5832,"argument":{"type":"Identifier","start":5821,"end":5831,"name":"sourceRefs"}}]}}},{"type":"MethodDefinition","start":6061,"end":6517,"static":false,"computed":false,"key":{"type":"Identifier","start":6061,"end":6078,"name":"parseSourceAndPos"},"kind":"method","value":{"type":"FunctionExpression","start":6078,"end":6517,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6079,"end":6091,"name":"sourceAndPos"}],"body":{"type":"BlockStatement","start":6093,"end":6517,"body":[{"type":"VariableDeclaration","start":6104,"end":6148,"declarations":[{"type":"VariableDeclarator","start":6110,"end":6147,"id":{"type":"Identifier","start":6110,"end":6115,"name":"index"},"init":{"type":"CallExpression","start":6118,"end":6147,"callee":{"type":"MemberExpression","start":6118,"end":6142,"object":{"type":"Identifier","start":6118,"end":6130,"name":"sourceAndPos"},"property":{"type":"Identifier","start":6131,"end":6142,"name":"lastIndexOf"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6143,"end":6146,"value":":","raw":"':'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":6158,"end":6510,"test":{"type":"BinaryExpression","start":6162,"end":6171,"left":{"type":"Identifier","start":6162,"end":6167,"name":"index"},"operator":"<","right":{"type":"Literal","start":6170,"end":6171,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":6173,"end":6297,"body":[{"type":"ReturnStatement","start":6188,"end":6286,"argument":{"type":"ObjectExpression","start":6195,"end":6285,"properties":[{"type":"Property","start":6214,"end":6238,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":6214,"end":6224,"name":"sourcefile"},"value":{"type":"Identifier","start":6226,"end":6238,"name":"sourceAndPos"},"kind":"init"},{"type":"Property","start":6257,"end":6270,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":6257,"end":6267,"name":"linenumber"},"value":{"type":"Literal","start":6269,"end":6270,"value":0,"raw":"0"},"kind":"init"}]}}]},"alternate":{"type":"BlockStatement","start":6312,"end":6510,"body":[{"type":"ReturnStatement","start":6327,"end":6499,"argument":{"type":"ObjectExpression","start":6334,"end":6498,"properties":[{"type":"Property","start":6353,"end":6397,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":6353,"end":6363,"name":"sourcefile"},"value":{"type":"CallExpression","start":6365,"end":6397,"callee":{"type":"MemberExpression","start":6365,"end":6387,"object":{"type":"Identifier","start":6365,"end":6377,"name":"sourceAndPos"},"property":{"type":"Identifier","start":6378,"end":6387,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":6388,"end":6389,"value":0,"raw":"0"},{"type":"Identifier","start":6391,"end":6396,"name":"index"}],"optional":false},"kind":"init"},{"type":"Property","start":6416,"end":6483,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":6416,"end":6426,"name":"linenumber"},"value":{"type":"CallExpression","start":6428,"end":6483,"callee":{"type":"MemberExpression","start":6428,"end":6448,"object":{"type":"ThisExpression","start":6428,"end":6432},"property":{"type":"Identifier","start":6433,"end":6448,"name":"parseLineNumber"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6449,"end":6482,"callee":{"type":"MemberExpression","start":6449,"end":6471,"object":{"type":"Identifier","start":6449,"end":6461,"name":"sourceAndPos"},"property":{"type":"Identifier","start":6462,"end":6471,"name":"substring"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":6472,"end":6481,"left":{"type":"Identifier","start":6472,"end":6477,"name":"index"},"operator":"+","right":{"type":"Literal","start":6480,"end":6481,"value":1,"raw":"1"}}],"optional":false}],"optional":false},"kind":"init"}]}}]}}]}}},{"type":"MethodDefinition","start":6523,"end":6620,"static":false,"computed":false,"key":{"type":"Identifier","start":6523,"end":6538,"name":"parseLineNumber"},"kind":"method","value":{"type":"FunctionExpression","start":6538,"end":6620,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6539,"end":6555,"name":"lineNumberString"}],"body":{"type":"BlockStatement","start":6557,"end":6620,"body":[{"type":"ReturnStatement","start":6568,"end":6613,"argument":{"type":"CallExpression","start":6575,"end":6612,"callee":{"type":"MemberExpression","start":6575,"end":6590,"object":{"type":"Identifier","start":6575,"end":6581,"name":"Number"},"property":{"type":"Identifier","start":6582,"end":6590,"name":"parseInt"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6591,"end":6607,"name":"lineNumberString"},{"type":"Literal","start":6609,"end":6611,"value":10,"raw":"10"}],"optional":false}}]}}},{"type":"MethodDefinition","start":6888,"end":7902,"static":false,"computed":false,"key":{"type":"Identifier","start":6888,"end":6907,"name":"setSourceReferences"},"kind":"method","value":{"type":"FunctionExpression","start":6907,"end":7902,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6908,"end":6918,"name":"sourceRefs"}],"body":{"type":"BlockStatement","start":6920,"end":7902,"body":[{"type":"ExpressionStatement","start":6931,"end":6964,"expression":{"type":"CallExpression","start":6931,"end":6963,"callee":{"type":"MemberExpression","start":6931,"end":6961,"object":{"type":"ThisExpression","start":6931,"end":6935},"property":{"type":"Identifier","start":6936,"end":6961,"name":"removeAllSourceReferences"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"VariableDeclaration","start":6974,"end":7055,"declarations":[{"type":"VariableDeclarator","start":6978,"end":7054,"id":{"type":"Identifier","start":6978,"end":6990,"name":"notesElement"},"init":{"type":"CallExpression","start":6993,"end":7054,"callee":{"type":"MemberExpression","start":6993,"end":7030,"object":{"type":"Identifier","start":6993,"end":7005,"name":"DOMUtilities"},"property":{"type":"Identifier","start":7006,"end":7030,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":7031,"end":7044,"object":{"type":"ThisExpression","start":7031,"end":7035},"property":{"type":"Identifier","start":7036,"end":7044,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":7046,"end":7053,"value":"notes","raw":"'notes'"}],"optional":false}}],"kind":"let"},{"type":"IfStatement","start":7065,"end":7310,"test":{"type":"LogicalExpression","start":7069,"end":7168,"left":{"type":"LogicalExpression","start":7069,"end":7128,"left":{"type":"BinaryExpression","start":7069,"end":7092,"left":{"type":"MemberExpression","start":7069,"end":7086,"object":{"type":"Identifier","start":7069,"end":7079,"name":"sourceRefs"},"property":{"type":"Identifier","start":7080,"end":7086,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":7091,"end":7092,"value":0,"raw":"0"}},"operator":"&&","right":{"type":"UnaryExpression","start":7096,"end":7128,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":7097,"end":7128,"callee":{"type":"Identifier","start":7097,"end":7114,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":7115,"end":7127,"name":"notesElement"}],"optional":false}}},"operator":"&&","right":{"type":"BinaryExpression","start":7132,"end":7168,"left":{"type":"MemberExpression","start":7132,"end":7162,"object":{"type":"MemberExpression","start":7132,"end":7155,"object":{"type":"Identifier","start":7132,"end":7144,"name":"notesElement"},"property":{"type":"Identifier","start":7145,"end":7155,"name":"childNodes"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7156,"end":7162,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":7167,"end":7168,"value":0,"raw":"0"}}},"consequent":{"type":"BlockStatement","start":7170,"end":7310,"body":[{"type":"ExpressionStatement","start":7228,"end":7278,"expression":{"type":"CallExpression","start":7228,"end":7277,"callee":{"type":"MemberExpression","start":7228,"end":7263,"object":{"type":"MemberExpression","start":7228,"end":7251,"object":{"type":"Identifier","start":7228,"end":7240,"name":"notesElement"},"property":{"type":"Identifier","start":7241,"end":7251,"name":"parentNode"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7252,"end":7263,"name":"removeChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7264,"end":7276,"name":"notesElement"}],"optional":false}},{"type":"ReturnStatement","start":7292,"end":7299,"argument":null}]},"alternate":null},{"type":"IfStatement","start":7320,"end":7538,"test":{"type":"CallExpression","start":7324,"end":7355,"callee":{"type":"Identifier","start":7324,"end":7341,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":7342,"end":7354,"name":"notesElement"}],"optional":false},"consequent":{"type":"BlockStatement","start":7357,"end":7538,"body":[{"type":"ExpressionStatement","start":7372,"end":7438,"expression":{"type":"AssignmentExpression","start":7372,"end":7437,"operator":"=","left":{"type":"Identifier","start":7372,"end":7384,"name":"notesElement"},"right":{"type":"CallExpression","start":7387,"end":7437,"callee":{"type":"MemberExpression","start":7387,"end":7428,"object":{"type":"MemberExpression","start":7387,"end":7414,"object":{"type":"MemberExpression","start":7387,"end":7400,"object":{"type":"ThisExpression","start":7387,"end":7391},"property":{"type":"Identifier","start":7392,"end":7400,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7401,"end":7414,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7415,"end":7428,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7429,"end":7436,"value":"notes","raw":"'notes'"}],"optional":false}}},{"type":"ExpressionStatement","start":7452,"end":7527,"expression":{"type":"CallExpression","start":7452,"end":7526,"callee":{"type":"MemberExpression","start":7452,"end":7478,"object":{"type":"MemberExpression","start":7452,"end":7465,"object":{"type":"ThisExpression","start":7452,"end":7456},"property":{"type":"Identifier","start":7457,"end":7465,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7466,"end":7478,"name":"insertBefore"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7479,"end":7491,"name":"notesElement"},{"type":"CallExpression","start":7493,"end":7525,"callee":{"type":"MemberExpression","start":7493,"end":7522,"object":{"type":"MemberExpression","start":7493,"end":7517,"object":{"type":"MemberExpression","start":7493,"end":7506,"object":{"type":"ThisExpression","start":7493,"end":7497},"property":{"type":"Identifier","start":7498,"end":7506,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7507,"end":7517,"name":"childNodes"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7518,"end":7522,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7523,"end":7524,"value":0,"raw":"0"}],"optional":false}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":7548,"end":7895,"expression":{"type":"CallExpression","start":7548,"end":7894,"callee":{"type":"MemberExpression","start":7548,"end":7566,"object":{"type":"Identifier","start":7548,"end":7558,"name":"sourceRefs"},"property":{"type":"Identifier","start":7559,"end":7566,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":7567,"end":7893,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7568,"end":7571,"name":"ref"}],"body":{"type":"BlockStatement","start":7576,"end":7893,"body":[{"type":"VariableDeclaration","start":7591,"end":7654,"declarations":[{"type":"VariableDeclarator","start":7597,"end":7653,"id":{"type":"Identifier","start":7597,"end":7601,"name":"note"},"init":{"type":"CallExpression","start":7604,"end":7653,"callee":{"type":"MemberExpression","start":7604,"end":7645,"object":{"type":"MemberExpression","start":7604,"end":7631,"object":{"type":"MemberExpression","start":7604,"end":7617,"object":{"type":"ThisExpression","start":7604,"end":7608},"property":{"type":"Identifier","start":7609,"end":7617,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7618,"end":7631,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7632,"end":7645,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7646,"end":7652,"value":"note","raw":"'note'"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7668,"end":7710,"expression":{"type":"CallExpression","start":7668,"end":7709,"callee":{"type":"MemberExpression","start":7668,"end":7685,"object":{"type":"Identifier","start":7668,"end":7672,"name":"note"},"property":{"type":"Identifier","start":7673,"end":7685,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7686,"end":7696,"value":"category","raw":"'category'"},{"type":"Literal","start":7698,"end":7708,"value":"location","raw":"'location'"}],"optional":false}},{"type":"ExpressionStatement","start":7724,"end":7837,"expression":{"type":"CallExpression","start":7724,"end":7836,"callee":{"type":"MemberExpression","start":7724,"end":7740,"object":{"type":"Identifier","start":7724,"end":7728,"name":"note"},"property":{"type":"Identifier","start":7729,"end":7740,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7741,"end":7835,"callee":{"type":"MemberExpression","start":7741,"end":7783,"object":{"type":"MemberExpression","start":7741,"end":7768,"object":{"type":"MemberExpression","start":7741,"end":7754,"object":{"type":"ThisExpression","start":7741,"end":7745},"property":{"type":"Identifier","start":7746,"end":7754,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7755,"end":7768,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7769,"end":7783,"name":"createTextNode"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":7784,"end":7834,"left":{"type":"BinaryExpression","start":7784,"end":7804,"left":{"type":"MemberExpression","start":7784,"end":7798,"object":{"type":"Identifier","start":7784,"end":7787,"name":"ref"},"property":{"type":"Identifier","start":7788,"end":7798,"name":"sourcefile"},"computed":false,"optional":false},"operator":"+","right":{"type":"Literal","start":7801,"end":7804,"value":":","raw":"':'"}},"operator":"+","right":{"type":"CallExpression","start":7807,"end":7834,"callee":{"type":"MemberExpression","start":7807,"end":7830,"object":{"type":"MemberExpression","start":7807,"end":7821,"object":{"type":"Identifier","start":7807,"end":7810,"name":"ref"},"property":{"type":"Identifier","start":7811,"end":7821,"name":"linenumber"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7822,"end":7830,"name":"toString"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7831,"end":7833,"value":10,"raw":"10"}],"optional":false}}],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":7851,"end":7882,"expression":{"type":"CallExpression","start":7851,"end":7881,"callee":{"type":"MemberExpression","start":7851,"end":7875,"object":{"type":"Identifier","start":7851,"end":7863,"name":"notesElement"},"property":{"type":"Identifier","start":7864,"end":7875,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7876,"end":7880,"name":"note"}],"optional":false}}]}}],"optional":false}}]}}},{"type":"MethodDefinition","start":7908,"end":8368,"static":false,"computed":false,"key":{"type":"Identifier","start":7908,"end":7933,"name":"removeAllSourceReferences"},"kind":"method","value":{"type":"FunctionExpression","start":7933,"end":8368,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":7936,"end":8368,"body":[{"type":"VariableDeclaration","start":7947,"end":8011,"declarations":[{"type":"VariableDeclarator","start":7953,"end":8010,"id":{"type":"Identifier","start":7953,"end":7965,"name":"noteElements"},"init":{"type":"CallExpression","start":7968,"end":8010,"callee":{"type":"MemberExpression","start":7968,"end":8002,"object":{"type":"MemberExpression","start":7968,"end":7981,"object":{"type":"ThisExpression","start":7968,"end":7972},"property":{"type":"Identifier","start":7973,"end":7981,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7982,"end":8002,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8003,"end":8009,"value":"note","raw":"'note'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":8021,"end":8044,"declarations":[{"type":"VariableDeclarator","start":8027,"end":8043,"id":{"type":"Identifier","start":8027,"end":8038,"name":"toBeRemoved"},"init":{"type":"ArrayExpression","start":8041,"end":8043,"elements":[]}}],"kind":"const"},{"type":"ForStatement","start":8054,"end":8281,"init":{"type":"VariableDeclaration","start":8059,"end":8068,"declarations":[{"type":"VariableDeclarator","start":8063,"end":8068,"id":{"type":"Identifier","start":8063,"end":8064,"name":"i"},"init":{"type":"Literal","start":8067,"end":8068,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":8070,"end":8093,"left":{"type":"Identifier","start":8070,"end":8071,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":8074,"end":8093,"object":{"type":"Identifier","start":8074,"end":8086,"name":"noteElements"},"property":{"type":"Identifier","start":8087,"end":8093,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":8095,"end":8098,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":8095,"end":8096,"name":"i"}},"body":{"type":"BlockStatement","start":8100,"end":8281,"body":[{"type":"VariableDeclaration","start":8115,"end":8149,"declarations":[{"type":"VariableDeclarator","start":8121,"end":8148,"id":{"type":"Identifier","start":8121,"end":8125,"name":"elem"},"init":{"type":"CallExpression","start":8128,"end":8148,"callee":{"type":"MemberExpression","start":8128,"end":8145,"object":{"type":"Identifier","start":8128,"end":8140,"name":"noteElements"},"property":{"type":"Identifier","start":8141,"end":8145,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8146,"end":8147,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":8163,"end":8270,"test":{"type":"BinaryExpression","start":8167,"end":8211,"left":{"type":"CallExpression","start":8167,"end":8196,"callee":{"type":"MemberExpression","start":8167,"end":8184,"object":{"type":"Identifier","start":8167,"end":8171,"name":"elem"},"property":{"type":"Identifier","start":8172,"end":8184,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8185,"end":8195,"value":"category","raw":"'category'"}],"optional":false},"operator":"===","right":{"type":"Literal","start":8201,"end":8211,"value":"location","raw":"'location'"}},"consequent":{"type":"BlockStatement","start":8213,"end":8270,"body":[{"type":"ExpressionStatement","start":8232,"end":8255,"expression":{"type":"CallExpression","start":8232,"end":8254,"callee":{"type":"MemberExpression","start":8232,"end":8248,"object":{"type":"Identifier","start":8232,"end":8243,"name":"toBeRemoved"},"property":{"type":"Identifier","start":8244,"end":8248,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8249,"end":8253,"name":"elem"}],"optional":false}}]},"alternate":null}]}},{"type":"ExpressionStatement","start":8291,"end":8361,"expression":{"type":"CallExpression","start":8291,"end":8360,"callee":{"type":"MemberExpression","start":8291,"end":8310,"object":{"type":"Identifier","start":8291,"end":8302,"name":"toBeRemoved"},"property":{"type":"Identifier","start":8303,"end":8310,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":8311,"end":8359,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8312,"end":8316,"name":"elem"}],"body":{"type":"BlockStatement","start":8321,"end":8359,"body":[{"type":"ExpressionStatement","start":8323,"end":8357,"expression":{"type":"CallExpression","start":8323,"end":8356,"callee":{"type":"MemberExpression","start":8323,"end":8350,"object":{"type":"MemberExpression","start":8323,"end":8338,"object":{"type":"Identifier","start":8323,"end":8327,"name":"elem"},"property":{"type":"Identifier","start":8328,"end":8338,"name":"parentNode"},"computed":false,"optional":false},"property":{"type":"Identifier","start":8339,"end":8350,"name":"removeChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8351,"end":8355,"name":"elem"}],"optional":false}}]}}],"optional":false}}]}}},{"type":"MethodDefinition","start":8596,"end":8845,"static":false,"computed":false,"key":{"type":"Identifier","start":8596,"end":8607,"name":"description"},"kind":"method","value":{"type":"FunctionExpression","start":8607,"end":8845,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":8610,"end":8845,"body":[{"type":"VariableDeclaration","start":8621,"end":8695,"declarations":[{"type":"VariableDeclarator","start":8627,"end":8694,"id":{"type":"Identifier","start":8627,"end":8635,"name":"noteElem"},"init":{"type":"CallExpression","start":8638,"end":8694,"callee":{"type":"MemberExpression","start":8638,"end":8679,"object":{"type":"ThisExpression","start":8638,"end":8642},"property":{"type":"Identifier","start":8643,"end":8679,"name":"findNoteElementWithCategoryAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":8680,"end":8693,"value":"description","raw":"'description'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":8705,"end":8838,"test":{"type":"Identifier","start":8709,"end":8717,"name":"noteElem"},"consequent":{"type":"BlockStatement","start":8719,"end":8785,"body":[{"type":"ReturnStatement","start":8734,"end":8774,"argument":{"type":"CallExpression","start":8741,"end":8773,"callee":{"type":"MemberExpression","start":8741,"end":8763,"object":{"type":"Identifier","start":8741,"end":8753,"name":"DOMUtilities"},"property":{"type":"Identifier","start":8754,"end":8763,"name":"getPCDATA"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8764,"end":8772,"name":"noteElem"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":8800,"end":8838,"body":[{"type":"ReturnStatement","start":8815,"end":8827,"argument":{"type":"Literal","start":8822,"end":8826,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":8959,"end":9619,"static":false,"computed":false,"key":{"type":"Identifier","start":8959,"end":8973,"name":"setDescription"},"kind":"method","value":{"type":"FunctionExpression","start":8973,"end":9619,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8974,"end":8985,"name":"description"}],"body":{"type":"BlockStatement","start":8987,"end":9619,"body":[{"type":"VariableDeclaration","start":8998,"end":9072,"declarations":[{"type":"VariableDeclarator","start":9004,"end":9071,"id":{"type":"Identifier","start":9004,"end":9012,"name":"noteElem"},"init":{"type":"CallExpression","start":9015,"end":9071,"callee":{"type":"MemberExpression","start":9015,"end":9056,"object":{"type":"ThisExpression","start":9015,"end":9019},"property":{"type":"Identifier","start":9020,"end":9056,"name":"findNoteElementWithCategoryAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9057,"end":9070,"value":"description","raw":"'description'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":9082,"end":9612,"test":{"type":"Identifier","start":9086,"end":9097,"name":"description"},"consequent":{"type":"BlockStatement","start":9099,"end":9412,"body":[{"type":"IfStatement","start":9114,"end":9401,"test":{"type":"CallExpression","start":9118,"end":9145,"callee":{"type":"Identifier","start":9118,"end":9135,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":9136,"end":9144,"name":"noteElem"}],"optional":false},"consequent":{"type":"BlockStatement","start":9147,"end":9283,"body":[{"type":"ExpressionStatement","start":9196,"end":9268,"expression":{"type":"CallExpression","start":9196,"end":9267,"callee":{"type":"MemberExpression","start":9196,"end":9239,"object":{"type":"ThisExpression","start":9196,"end":9200},"property":{"type":"Identifier","start":9201,"end":9239,"name":"createNoteElementWithCategoryAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9240,"end":9253,"value":"description","raw":"'description'"},{"type":"Identifier","start":9255,"end":9266,"name":"description"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":9302,"end":9401,"body":[{"type":"ExpressionStatement","start":9321,"end":9386,"expression":{"type":"CallExpression","start":9321,"end":9385,"callee":{"type":"MemberExpression","start":9321,"end":9362,"object":{"type":"Identifier","start":9321,"end":9333,"name":"DOMUtilities"},"property":{"type":"Identifier","start":9334,"end":9362,"name":"replaceContentWithXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9363,"end":9371,"name":"noteElem"},{"type":"Identifier","start":9373,"end":9384,"name":"description"}],"optional":false}}]}}]},"alternate":{"type":"BlockStatement","start":9427,"end":9612,"body":[{"type":"IfStatement","start":9442,"end":9601,"test":{"type":"UnaryExpression","start":9446,"end":9474,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":9447,"end":9474,"callee":{"type":"Identifier","start":9447,"end":9464,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":9465,"end":9473,"name":"noteElem"}],"optional":false}},"consequent":{"type":"BlockStatement","start":9476,"end":9601,"body":[{"type":"ExpressionStatement","start":9527,"end":9586,"expression":{"type":"CallExpression","start":9527,"end":9585,"callee":{"type":"MemberExpression","start":9527,"end":9570,"object":{"type":"ThisExpression","start":9527,"end":9531},"property":{"type":"Identifier","start":9532,"end":9570,"name":"removeNoteElementWithCategoryAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9571,"end":9584,"value":"description","raw":"'description'"}],"optional":false}}]},"alternate":null}]}}]}}},{"type":"MethodDefinition","start":9804,"end":10193,"static":false,"computed":false,"key":{"type":"Identifier","start":9804,"end":9840,"name":"findNoteElementWithCategoryAttribute"},"kind":"method","value":{"type":"FunctionExpression","start":9840,"end":10193,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9841,"end":9850,"name":"attrValue"}],"body":{"type":"BlockStatement","start":9852,"end":10193,"body":[{"type":"VariableDeclaration","start":9863,"end":9927,"declarations":[{"type":"VariableDeclarator","start":9869,"end":9926,"id":{"type":"Identifier","start":9869,"end":9881,"name":"noteElements"},"init":{"type":"CallExpression","start":9884,"end":9926,"callee":{"type":"MemberExpression","start":9884,"end":9918,"object":{"type":"MemberExpression","start":9884,"end":9897,"object":{"type":"ThisExpression","start":9884,"end":9888},"property":{"type":"Identifier","start":9889,"end":9897,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9898,"end":9918,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":9919,"end":9925,"value":"note","raw":"'note'"}],"optional":false}}],"kind":"const"},{"type":"ForStatement","start":9937,"end":10164,"init":{"type":"VariableDeclaration","start":9942,"end":9951,"declarations":[{"type":"VariableDeclarator","start":9946,"end":9951,"id":{"type":"Identifier","start":9946,"end":9947,"name":"i"},"init":{"type":"Literal","start":9950,"end":9951,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":9953,"end":9976,"left":{"type":"Identifier","start":9953,"end":9954,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":9957,"end":9976,"object":{"type":"Identifier","start":9957,"end":9969,"name":"noteElements"},"property":{"type":"Identifier","start":9970,"end":9976,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":9978,"end":9981,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":9978,"end":9979,"name":"i"}},"body":{"type":"BlockStatement","start":9983,"end":10164,"body":[{"type":"VariableDeclaration","start":9998,"end":10036,"declarations":[{"type":"VariableDeclarator","start":10004,"end":10035,"id":{"type":"Identifier","start":10004,"end":10012,"name":"noteElem"},"init":{"type":"CallExpression","start":10015,"end":10035,"callee":{"type":"MemberExpression","start":10015,"end":10032,"object":{"type":"Identifier","start":10015,"end":10027,"name":"noteElements"},"property":{"type":"Identifier","start":10028,"end":10032,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10033,"end":10034,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":10050,"end":10153,"test":{"type":"BinaryExpression","start":10054,"end":10101,"left":{"type":"CallExpression","start":10054,"end":10087,"callee":{"type":"MemberExpression","start":10054,"end":10075,"object":{"type":"Identifier","start":10054,"end":10062,"name":"noteElem"},"property":{"type":"Identifier","start":10063,"end":10075,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10076,"end":10086,"value":"category","raw":"'category'"}],"optional":false},"operator":"===","right":{"type":"Identifier","start":10092,"end":10101,"name":"attrValue"}},"consequent":{"type":"BlockStatement","start":10103,"end":10153,"body":[{"type":"ReturnStatement","start":10122,"end":10138,"argument":{"type":"Identifier","start":10129,"end":10137,"name":"noteElem"}}]},"alternate":null}]}},{"type":"ReturnStatement","start":10174,"end":10186,"argument":{"type":"Literal","start":10181,"end":10185,"value":null,"raw":"null"}}]}}},{"type":"MethodDefinition","start":10323,"end":10817,"static":false,"computed":false,"key":{"type":"Identifier","start":10323,"end":10352,"name":"findAllAdditionalNoteElements"},"kind":"method","value":{"type":"FunctionExpression","start":10352,"end":10817,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":10355,"end":10817,"body":[{"type":"VariableDeclaration","start":10366,"end":10430,"declarations":[{"type":"VariableDeclarator","start":10372,"end":10429,"id":{"type":"Identifier","start":10372,"end":10384,"name":"noteElements"},"init":{"type":"CallExpression","start":10387,"end":10429,"callee":{"type":"MemberExpression","start":10387,"end":10421,"object":{"type":"MemberExpression","start":10387,"end":10400,"object":{"type":"ThisExpression","start":10387,"end":10391},"property":{"type":"Identifier","start":10392,"end":10400,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10401,"end":10421,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10422,"end":10428,"value":"note","raw":"'note'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":10440,"end":10458,"declarations":[{"type":"VariableDeclarator","start":10446,"end":10457,"id":{"type":"Identifier","start":10446,"end":10452,"name":"result"},"init":{"type":"ArrayExpression","start":10455,"end":10457,"elements":[]}}],"kind":"const"},{"type":"ForStatement","start":10468,"end":10786,"init":{"type":"VariableDeclaration","start":10473,"end":10482,"declarations":[{"type":"VariableDeclarator","start":10477,"end":10482,"id":{"type":"Identifier","start":10477,"end":10478,"name":"i"},"init":{"type":"Literal","start":10481,"end":10482,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":10484,"end":10507,"left":{"type":"Identifier","start":10484,"end":10485,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":10488,"end":10507,"object":{"type":"Identifier","start":10488,"end":10500,"name":"noteElements"},"property":{"type":"Identifier","start":10501,"end":10507,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":10509,"end":10512,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":10509,"end":10510,"name":"i"}},"body":{"type":"BlockStatement","start":10514,"end":10786,"body":[{"type":"VariableDeclaration","start":10529,"end":10567,"declarations":[{"type":"VariableDeclarator","start":10535,"end":10566,"id":{"type":"Identifier","start":10535,"end":10543,"name":"noteElem"},"init":{"type":"CallExpression","start":10546,"end":10566,"callee":{"type":"MemberExpression","start":10546,"end":10563,"object":{"type":"Identifier","start":10546,"end":10558,"name":"noteElements"},"property":{"type":"Identifier","start":10559,"end":10563,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10564,"end":10565,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":10581,"end":10637,"declarations":[{"type":"VariableDeclarator","start":10587,"end":10636,"id":{"type":"Identifier","start":10587,"end":10600,"name":"fromAttribute"},"init":{"type":"CallExpression","start":10603,"end":10636,"callee":{"type":"MemberExpression","start":10603,"end":10624,"object":{"type":"Identifier","start":10603,"end":10611,"name":"noteElem"},"property":{"type":"Identifier","start":10612,"end":10624,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10625,"end":10635,"value":"category","raw":"'category'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":10651,"end":10775,"test":{"type":"LogicalExpression","start":10655,"end":10717,"left":{"type":"BinaryExpression","start":10655,"end":10686,"left":{"type":"Identifier","start":10655,"end":10668,"name":"fromAttribute"},"operator":"!==","right":{"type":"Literal","start":10673,"end":10686,"value":"description","raw":"'description'"}},"operator":"&&","right":{"type":"BinaryExpression","start":10690,"end":10717,"left":{"type":"Identifier","start":10690,"end":10703,"name":"fromAttribute"},"operator":"!==","right":{"type":"Literal","start":10708,"end":10717,"value":"meaning","raw":"'meaning'"}}},"consequent":{"type":"BlockStatement","start":10719,"end":10775,"body":[{"type":"ExpressionStatement","start":10738,"end":10760,"expression":{"type":"CallExpression","start":10738,"end":10759,"callee":{"type":"MemberExpression","start":10738,"end":10749,"object":{"type":"Identifier","start":10738,"end":10744,"name":"result"},"property":{"type":"Identifier","start":10745,"end":10749,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10750,"end":10758,"name":"noteElem"}],"optional":false}}]},"alternate":null}]}},{"type":"ReturnStatement","start":10796,"end":10810,"argument":{"type":"Identifier","start":10803,"end":10809,"name":"result"}}]}}},{"type":"MethodDefinition","start":11046,"end":11792,"static":false,"computed":false,"key":{"type":"Identifier","start":11046,"end":11084,"name":"createNoteElementWithCategoryAttribute"},"kind":"method","value":{"type":"FunctionExpression","start":11084,"end":11792,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11085,"end":11094,"name":"attrValue"},{"type":"Identifier","start":11096,"end":11103,"name":"content"}],"body":{"type":"BlockStatement","start":11105,"end":11792,"body":[{"type":"VariableDeclaration","start":11116,"end":11197,"declarations":[{"type":"VariableDeclarator","start":11120,"end":11196,"id":{"type":"Identifier","start":11120,"end":11132,"name":"notesElement"},"init":{"type":"CallExpression","start":11135,"end":11196,"callee":{"type":"MemberExpression","start":11135,"end":11172,"object":{"type":"Identifier","start":11135,"end":11147,"name":"DOMUtilities"},"property":{"type":"Identifier","start":11148,"end":11172,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":11173,"end":11186,"object":{"type":"ThisExpression","start":11173,"end":11177},"property":{"type":"Identifier","start":11178,"end":11186,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":11188,"end":11195,"value":"notes","raw":"'notes'"}],"optional":false}}],"kind":"let"},{"type":"IfStatement","start":11207,"end":11416,"test":{"type":"CallExpression","start":11211,"end":11242,"callee":{"type":"Identifier","start":11211,"end":11228,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":11229,"end":11241,"name":"notesElement"}],"optional":false},"consequent":{"type":"BlockStatement","start":11244,"end":11416,"body":[{"type":"ExpressionStatement","start":11285,"end":11351,"expression":{"type":"AssignmentExpression","start":11285,"end":11350,"operator":"=","left":{"type":"Identifier","start":11285,"end":11297,"name":"notesElement"},"right":{"type":"CallExpression","start":11300,"end":11350,"callee":{"type":"MemberExpression","start":11300,"end":11341,"object":{"type":"MemberExpression","start":11300,"end":11327,"object":{"type":"MemberExpression","start":11300,"end":11313,"object":{"type":"ThisExpression","start":11300,"end":11304},"property":{"type":"Identifier","start":11305,"end":11313,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11314,"end":11327,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11328,"end":11341,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11342,"end":11349,"value":"notes","raw":"'notes'"}],"optional":false}}},{"type":"ExpressionStatement","start":11365,"end":11405,"expression":{"type":"CallExpression","start":11365,"end":11404,"callee":{"type":"MemberExpression","start":11365,"end":11390,"object":{"type":"MemberExpression","start":11365,"end":11378,"object":{"type":"ThisExpression","start":11365,"end":11369},"property":{"type":"Identifier","start":11370,"end":11378,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11379,"end":11390,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11391,"end":11403,"name":"notesElement"}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":11426,"end":11496,"declarations":[{"type":"VariableDeclarator","start":11432,"end":11495,"id":{"type":"Identifier","start":11432,"end":11443,"name":"noteElement"},"init":{"type":"CallExpression","start":11446,"end":11495,"callee":{"type":"MemberExpression","start":11446,"end":11487,"object":{"type":"MemberExpression","start":11446,"end":11473,"object":{"type":"MemberExpression","start":11446,"end":11459,"object":{"type":"ThisExpression","start":11446,"end":11450},"property":{"type":"Identifier","start":11451,"end":11459,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11460,"end":11473,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11474,"end":11487,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11488,"end":11494,"value":"note","raw":"'note'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":11506,"end":11595,"test":{"type":"Identifier","start":11510,"end":11519,"name":"attrValue"},"consequent":{"type":"BlockStatement","start":11521,"end":11595,"body":[{"type":"ExpressionStatement","start":11536,"end":11584,"expression":{"type":"CallExpression","start":11536,"end":11583,"callee":{"type":"MemberExpression","start":11536,"end":11560,"object":{"type":"Identifier","start":11536,"end":11547,"name":"noteElement"},"property":{"type":"Identifier","start":11548,"end":11560,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":11561,"end":11571,"value":"category","raw":"'category'"},{"type":"Identifier","start":11573,"end":11582,"name":"attrValue"}],"optional":false}}]},"alternate":null},{"type":"IfStatement","start":11605,"end":11708,"test":{"type":"Identifier","start":11609,"end":11616,"name":"content"},"consequent":{"type":"BlockStatement","start":11618,"end":11708,"body":[{"type":"ExpressionStatement","start":11633,"end":11697,"expression":{"type":"CallExpression","start":11633,"end":11696,"callee":{"type":"MemberExpression","start":11633,"end":11674,"object":{"type":"Identifier","start":11633,"end":11645,"name":"DOMUtilities"},"property":{"type":"Identifier","start":11646,"end":11674,"name":"replaceContentWithXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11675,"end":11686,"name":"noteElement"},{"type":"Identifier","start":11688,"end":11695,"name":"content"}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":11718,"end":11756,"expression":{"type":"CallExpression","start":11718,"end":11755,"callee":{"type":"MemberExpression","start":11718,"end":11742,"object":{"type":"Identifier","start":11718,"end":11730,"name":"notesElement"},"property":{"type":"Identifier","start":11731,"end":11742,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11743,"end":11754,"name":"noteElement"}],"optional":false}},{"type":"ReturnStatement","start":11766,"end":11785,"argument":{"type":"Identifier","start":11773,"end":11784,"name":"noteElement"}}]}}},{"type":"MethodDefinition","start":11798,"end":12215,"static":false,"computed":false,"key":{"type":"Identifier","start":11798,"end":11823,"name":"removeNotesElementIfEmpty"},"kind":"method","value":{"type":"FunctionExpression","start":11823,"end":12215,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":11826,"end":12215,"body":[{"type":"VariableDeclaration","start":11837,"end":11920,"declarations":[{"type":"VariableDeclarator","start":11843,"end":11919,"id":{"type":"Identifier","start":11843,"end":11855,"name":"notesElement"},"init":{"type":"CallExpression","start":11858,"end":11919,"callee":{"type":"MemberExpression","start":11858,"end":11895,"object":{"type":"Identifier","start":11858,"end":11870,"name":"DOMUtilities"},"property":{"type":"Identifier","start":11871,"end":11895,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":11896,"end":11909,"object":{"type":"ThisExpression","start":11896,"end":11900},"property":{"type":"Identifier","start":11901,"end":11909,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":11911,"end":11918,"value":"notes","raw":"'notes'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":11930,"end":12208,"test":{"type":"Identifier","start":11934,"end":11946,"name":"notesElement"},"consequent":{"type":"BlockStatement","start":11948,"end":12208,"body":[{"type":"VariableDeclaration","start":11963,"end":12042,"declarations":[{"type":"VariableDeclarator","start":11969,"end":12041,"id":{"type":"Identifier","start":11969,"end":11978,"name":"childNote"},"init":{"type":"CallExpression","start":11981,"end":12041,"callee":{"type":"MemberExpression","start":11981,"end":12018,"object":{"type":"Identifier","start":11981,"end":11993,"name":"DOMUtilities"},"property":{"type":"Identifier","start":11994,"end":12018,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":12019,"end":12032,"object":{"type":"ThisExpression","start":12019,"end":12023},"property":{"type":"Identifier","start":12024,"end":12032,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":12034,"end":12040,"value":"note","raw":"'note'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":12056,"end":12197,"test":{"type":"UnaryExpression","start":12060,"end":12070,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":12061,"end":12070,"name":"childNote"}},"consequent":{"type":"BlockStatement","start":12072,"end":12197,"body":[{"type":"ExpressionStatement","start":12132,"end":12182,"expression":{"type":"CallExpression","start":12132,"end":12181,"callee":{"type":"MemberExpression","start":12132,"end":12167,"object":{"type":"MemberExpression","start":12132,"end":12155,"object":{"type":"Identifier","start":12132,"end":12144,"name":"notesElement"},"property":{"type":"Identifier","start":12145,"end":12155,"name":"parentNode"},"computed":false,"optional":false},"property":{"type":"Identifier","start":12156,"end":12167,"name":"removeChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12168,"end":12180,"name":"notesElement"}],"optional":false}}]},"alternate":null}]},"alternate":null}]}}},{"type":"MethodDefinition","start":12336,"end":12621,"static":false,"computed":false,"key":{"type":"Identifier","start":12336,"end":12374,"name":"removeNoteElementWithCategoryAttribute"},"kind":"method","value":{"type":"FunctionExpression","start":12374,"end":12621,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12375,"end":12384,"name":"attrValue"}],"body":{"type":"BlockStatement","start":12386,"end":12621,"body":[{"type":"VariableDeclaration","start":12397,"end":12470,"declarations":[{"type":"VariableDeclarator","start":12403,"end":12469,"id":{"type":"Identifier","start":12403,"end":12414,"name":"noteElement"},"init":{"type":"CallExpression","start":12417,"end":12469,"callee":{"type":"MemberExpression","start":12417,"end":12458,"object":{"type":"ThisExpression","start":12417,"end":12421},"property":{"type":"Identifier","start":12422,"end":12458,"name":"findNoteElementWithCategoryAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12459,"end":12468,"name":"attrValue"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":12480,"end":12571,"test":{"type":"Identifier","start":12484,"end":12495,"name":"noteElement"},"consequent":{"type":"BlockStatement","start":12497,"end":12571,"body":[{"type":"ExpressionStatement","start":12512,"end":12560,"expression":{"type":"CallExpression","start":12512,"end":12559,"callee":{"type":"MemberExpression","start":12512,"end":12546,"object":{"type":"MemberExpression","start":12512,"end":12534,"object":{"type":"Identifier","start":12512,"end":12523,"name":"noteElement"},"property":{"type":"Identifier","start":12524,"end":12534,"name":"parentNode"},"computed":false,"optional":false},"property":{"type":"Identifier","start":12535,"end":12546,"name":"removeChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12547,"end":12558,"name":"noteElement"}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":12581,"end":12614,"expression":{"type":"CallExpression","start":12581,"end":12613,"callee":{"type":"MemberExpression","start":12581,"end":12611,"object":{"type":"ThisExpression","start":12581,"end":12585},"property":{"type":"Identifier","start":12586,"end":12611,"name":"removeNotesElementIfEmpty"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}},{"type":"MethodDefinition","start":12732,"end":13009,"static":false,"computed":false,"key":{"type":"Identifier","start":12732,"end":12763,"name":"removeAllAdditionalNoteElements"},"kind":"method","value":{"type":"FunctionExpression","start":12763,"end":13009,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":12766,"end":13009,"body":[{"type":"VariableDeclaration","start":12777,"end":12835,"declarations":[{"type":"VariableDeclarator","start":12783,"end":12834,"id":{"type":"Identifier","start":12783,"end":12795,"name":"noteElements"},"init":{"type":"CallExpression","start":12798,"end":12834,"callee":{"type":"MemberExpression","start":12798,"end":12832,"object":{"type":"ThisExpression","start":12798,"end":12802},"property":{"type":"Identifier","start":12803,"end":12832,"name":"findAllAdditionalNoteElements"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":12845,"end":12959,"expression":{"type":"CallExpression","start":12845,"end":12958,"callee":{"type":"MemberExpression","start":12845,"end":12865,"object":{"type":"Identifier","start":12845,"end":12857,"name":"noteElements"},"property":{"type":"Identifier","start":12858,"end":12865,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":12866,"end":12957,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12867,"end":12878,"name":"noteElement"}],"body":{"type":"BlockStatement","start":12883,"end":12957,"body":[{"type":"ExpressionStatement","start":12898,"end":12946,"expression":{"type":"CallExpression","start":12898,"end":12945,"callee":{"type":"MemberExpression","start":12898,"end":12932,"object":{"type":"MemberExpression","start":12898,"end":12920,"object":{"type":"Identifier","start":12898,"end":12909,"name":"noteElement"},"property":{"type":"Identifier","start":12910,"end":12920,"name":"parentNode"},"computed":false,"optional":false},"property":{"type":"Identifier","start":12921,"end":12932,"name":"removeChild"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12933,"end":12944,"name":"noteElement"}],"optional":false}}]}}],"optional":false}},{"type":"ExpressionStatement","start":12969,"end":13002,"expression":{"type":"CallExpression","start":12969,"end":13001,"callee":{"type":"MemberExpression","start":12969,"end":12999,"object":{"type":"ThisExpression","start":12969,"end":12973},"property":{"type":"Identifier","start":12974,"end":12999,"name":"removeNotesElementIfEmpty"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}},{"type":"MethodDefinition","start":13297,"end":13538,"static":false,"computed":false,"key":{"type":"Identifier","start":13297,"end":13304,"name":"meaning"},"kind":"method","value":{"type":"FunctionExpression","start":13304,"end":13538,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":13307,"end":13538,"body":[{"type":"VariableDeclaration","start":13318,"end":13388,"declarations":[{"type":"VariableDeclarator","start":13324,"end":13387,"id":{"type":"Identifier","start":13324,"end":13332,"name":"noteElem"},"init":{"type":"CallExpression","start":13335,"end":13387,"callee":{"type":"MemberExpression","start":13335,"end":13376,"object":{"type":"ThisExpression","start":13335,"end":13339},"property":{"type":"Identifier","start":13340,"end":13376,"name":"findNoteElementWithCategoryAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":13377,"end":13386,"value":"meaning","raw":"'meaning'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":13398,"end":13531,"test":{"type":"Identifier","start":13402,"end":13410,"name":"noteElem"},"consequent":{"type":"BlockStatement","start":13412,"end":13478,"body":[{"type":"ReturnStatement","start":13427,"end":13467,"argument":{"type":"CallExpression","start":13434,"end":13466,"callee":{"type":"MemberExpression","start":13434,"end":13456,"object":{"type":"Identifier","start":13434,"end":13446,"name":"DOMUtilities"},"property":{"type":"Identifier","start":13447,"end":13456,"name":"getPCDATA"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":13457,"end":13465,"name":"noteElem"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":13493,"end":13531,"body":[{"type":"ReturnStatement","start":13508,"end":13520,"argument":{"type":"Literal","start":13515,"end":13519,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":13640,"end":14268,"static":false,"computed":false,"key":{"type":"Identifier","start":13640,"end":13650,"name":"setMeaning"},"kind":"method","value":{"type":"FunctionExpression","start":13650,"end":14268,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13651,"end":13658,"name":"meaning"}],"body":{"type":"BlockStatement","start":13660,"end":14268,"body":[{"type":"VariableDeclaration","start":13671,"end":13741,"declarations":[{"type":"VariableDeclarator","start":13677,"end":13740,"id":{"type":"Identifier","start":13677,"end":13685,"name":"noteElem"},"init":{"type":"CallExpression","start":13688,"end":13740,"callee":{"type":"MemberExpression","start":13688,"end":13729,"object":{"type":"ThisExpression","start":13688,"end":13692},"property":{"type":"Identifier","start":13693,"end":13729,"name":"findNoteElementWithCategoryAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":13730,"end":13739,"value":"meaning","raw":"'meaning'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":13751,"end":14261,"test":{"type":"Identifier","start":13755,"end":13762,"name":"meaning"},"consequent":{"type":"BlockStatement","start":13764,"end":14065,"body":[{"type":"IfStatement","start":13779,"end":14054,"test":{"type":"CallExpression","start":13783,"end":13810,"callee":{"type":"Identifier","start":13783,"end":13800,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":13801,"end":13809,"name":"noteElem"}],"optional":false},"consequent":{"type":"BlockStatement","start":13812,"end":13940,"body":[{"type":"ExpressionStatement","start":13861,"end":13925,"expression":{"type":"CallExpression","start":13861,"end":13924,"callee":{"type":"MemberExpression","start":13861,"end":13904,"object":{"type":"ThisExpression","start":13861,"end":13865},"property":{"type":"Identifier","start":13866,"end":13904,"name":"createNoteElementWithCategoryAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":13905,"end":13914,"value":"meaning","raw":"'meaning'"},{"type":"Identifier","start":13916,"end":13923,"name":"meaning"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":13959,"end":14054,"body":[{"type":"ExpressionStatement","start":13978,"end":14039,"expression":{"type":"CallExpression","start":13978,"end":14038,"callee":{"type":"MemberExpression","start":13978,"end":14019,"object":{"type":"Identifier","start":13978,"end":13990,"name":"DOMUtilities"},"property":{"type":"Identifier","start":13991,"end":14019,"name":"replaceContentWithXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":14020,"end":14028,"name":"noteElem"},{"type":"Identifier","start":14030,"end":14037,"name":"meaning"}],"optional":false}}]}}]},"alternate":{"type":"BlockStatement","start":14080,"end":14261,"body":[{"type":"IfStatement","start":14095,"end":14250,"test":{"type":"UnaryExpression","start":14099,"end":14127,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":14100,"end":14127,"callee":{"type":"Identifier","start":14100,"end":14117,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":14118,"end":14126,"name":"noteElem"}],"optional":false}},"consequent":{"type":"BlockStatement","start":14129,"end":14250,"body":[{"type":"ExpressionStatement","start":14180,"end":14235,"expression":{"type":"CallExpression","start":14180,"end":14234,"callee":{"type":"MemberExpression","start":14180,"end":14223,"object":{"type":"ThisExpression","start":14180,"end":14184},"property":{"type":"Identifier","start":14185,"end":14223,"name":"removeNoteElementWithCategoryAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":14224,"end":14233,"value":"meaning","raw":"'meaning'"}],"optional":false}}]},"alternate":null}]}}]}}},{"type":"MethodDefinition","start":14438,"end":14722,"static":false,"computed":false,"key":{"type":"Identifier","start":14438,"end":14443,"name":"notes"},"kind":"method","value":{"type":"FunctionExpression","start":14443,"end":14722,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":14446,"end":14722,"body":[{"type":"VariableDeclaration","start":14457,"end":14515,"declarations":[{"type":"VariableDeclarator","start":14463,"end":14514,"id":{"type":"Identifier","start":14463,"end":14475,"name":"noteElememts"},"init":{"type":"CallExpression","start":14478,"end":14514,"callee":{"type":"MemberExpression","start":14478,"end":14512,"object":{"type":"ThisExpression","start":14478,"end":14482},"property":{"type":"Identifier","start":14483,"end":14512,"name":"findAllAdditionalNoteElements"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ReturnStatement","start":14525,"end":14715,"argument":{"type":"CallExpression","start":14532,"end":14714,"callee":{"type":"MemberExpression","start":14532,"end":14548,"object":{"type":"Identifier","start":14532,"end":14544,"name":"noteElememts"},"property":{"type":"Identifier","start":14545,"end":14548,"name":"map"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":14549,"end":14713,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":14549,"end":14553,"name":"elem"}],"body":{"type":"BlockStatement","start":14557,"end":14713,"body":[{"type":"ReturnStatement","start":14572,"end":14702,"argument":{"type":"ObjectExpression","start":14579,"end":14701,"properties":[{"type":"Property","start":14598,"end":14633,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":14598,"end":14602,"name":"from"},"value":{"type":"CallExpression","start":14604,"end":14633,"callee":{"type":"MemberExpression","start":14604,"end":14621,"object":{"type":"Identifier","start":14604,"end":14608,"name":"elem"},"property":{"type":"Identifier","start":14609,"end":14621,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":14622,"end":14632,"value":"category","raw":"'category'"}],"optional":false},"kind":"init"},{"type":"Property","start":14652,"end":14686,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":14652,"end":14656,"name":"text"},"value":{"type":"CallExpression","start":14658,"end":14686,"callee":{"type":"MemberExpression","start":14658,"end":14680,"object":{"type":"Identifier","start":14658,"end":14670,"name":"DOMUtilities"},"property":{"type":"Identifier","start":14671,"end":14680,"name":"getPCDATA"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":14681,"end":14685,"name":"elem"}],"optional":false},"kind":"init"}]}}]}}],"optional":false}}]}}},{"type":"MethodDefinition","start":14897,"end":14946,"static":false,"computed":false,"key":{"type":"Identifier","start":14897,"end":14913,"name":"supportsSetNotes"},"kind":"method","value":{"type":"FunctionExpression","start":14913,"end":14946,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":14916,"end":14946,"body":[{"type":"ReturnStatement","start":14927,"end":14939,"argument":{"type":"Literal","start":14934,"end":14938,"value":true,"raw":"true"}}]}}},{"type":"MethodDefinition","start":15045,"end":15416,"static":false,"computed":false,"key":{"type":"Identifier","start":15045,"end":15053,"name":"setNotes"},"kind":"method","value":{"type":"FunctionExpression","start":15053,"end":15416,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":15054,"end":15062,"name":"newNotes"}],"body":{"type":"BlockStatement","start":15064,"end":15416,"body":[{"type":"IfStatement","start":15075,"end":15161,"test":{"type":"UnaryExpression","start":15079,"end":15107,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":15080,"end":15107,"callee":{"type":"Identifier","start":15080,"end":15097,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":15098,"end":15106,"name":"newNotes"}],"optional":false}},"consequent":{"type":"BlockStatement","start":15109,"end":15161,"body":[{"type":"ExpressionStatement","start":15124,"end":15150,"expression":{"type":"CallExpression","start":15124,"end":15149,"callee":{"type":"MemberExpression","start":15124,"end":15139,"object":{"type":"ThisExpression","start":15124,"end":15128},"property":{"type":"Identifier","start":15129,"end":15139,"name":"checkNotes"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":15140,"end":15148,"name":"newNotes"}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":15171,"end":15210,"expression":{"type":"CallExpression","start":15171,"end":15209,"callee":{"type":"MemberExpression","start":15171,"end":15207,"object":{"type":"ThisExpression","start":15171,"end":15175},"property":{"type":"Identifier","start":15176,"end":15207,"name":"removeAllAdditionalNoteElements"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"IfStatement","start":15220,"end":15409,"test":{"type":"UnaryExpression","start":15224,"end":15252,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":15225,"end":15252,"callee":{"type":"Identifier","start":15225,"end":15242,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":15243,"end":15251,"name":"newNotes"}],"optional":false}},"consequent":{"type":"BlockStatement","start":15254,"end":15409,"body":[{"type":"ExpressionStatement","start":15269,"end":15398,"expression":{"type":"CallExpression","start":15269,"end":15397,"callee":{"type":"MemberExpression","start":15269,"end":15285,"object":{"type":"Identifier","start":15269,"end":15277,"name":"newNotes"},"property":{"type":"Identifier","start":15278,"end":15285,"name":"forEach"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":15286,"end":15396,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":15287,"end":15291,"name":"note"}],"body":{"type":"BlockStatement","start":15296,"end":15396,"body":[{"type":"ExpressionStatement","start":15315,"end":15381,"expression":{"type":"CallExpression","start":15315,"end":15380,"callee":{"type":"MemberExpression","start":15315,"end":15358,"object":{"type":"ThisExpression","start":15315,"end":15319},"property":{"type":"Identifier","start":15320,"end":15358,"name":"createNoteElementWithCategoryAttribute"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":15359,"end":15368,"object":{"type":"Identifier","start":15359,"end":15363,"name":"note"},"property":{"type":"Identifier","start":15364,"end":15368,"name":"from"},"computed":false,"optional":false},{"type":"MemberExpression","start":15370,"end":15379,"object":{"type":"Identifier","start":15370,"end":15374,"name":"note"},"property":{"type":"Identifier","start":15375,"end":15379,"name":"text"},"computed":false,"optional":false}],"optional":false}}]}}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":15545,"end":16022,"static":false,"computed":false,"key":{"type":"Identifier","start":15545,"end":15560,"name":"translateNative"},"kind":"method","value":{"type":"FunctionExpression","start":15560,"end":16022,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":15561,"end":15572,"name":"translation"}],"body":{"type":"BlockStatement","start":15574,"end":16022,"body":[{"type":"VariableDeclaration","start":15585,"end":15661,"declarations":[{"type":"VariableDeclarator","start":15589,"end":15660,"id":{"type":"Identifier","start":15589,"end":15595,"name":"target"},"init":{"type":"CallExpression","start":15598,"end":15660,"callee":{"type":"MemberExpression","start":15598,"end":15635,"object":{"type":"Identifier","start":15598,"end":15610,"name":"DOMUtilities"},"property":{"type":"Identifier","start":15611,"end":15635,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":15636,"end":15649,"object":{"type":"ThisExpression","start":15636,"end":15640},"property":{"type":"Identifier","start":15641,"end":15649,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":15651,"end":15659,"value":"target","raw":"'target'"}],"optional":false}}],"kind":"let"},{"type":"IfStatement","start":15671,"end":15894,"test":{"type":"UnaryExpression","start":15675,"end":15682,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":15676,"end":15682,"name":"target"}},"consequent":{"type":"BlockStatement","start":15684,"end":15894,"body":[{"type":"VariableDeclaration","start":15699,"end":15777,"declarations":[{"type":"VariableDeclarator","start":15705,"end":15776,"id":{"type":"Identifier","start":15705,"end":15711,"name":"source"},"init":{"type":"CallExpression","start":15714,"end":15776,"callee":{"type":"MemberExpression","start":15714,"end":15751,"object":{"type":"Identifier","start":15714,"end":15726,"name":"DOMUtilities"},"property":{"type":"Identifier","start":15727,"end":15751,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":15752,"end":15765,"object":{"type":"ThisExpression","start":15752,"end":15756},"property":{"type":"Identifier","start":15757,"end":15765,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":15767,"end":15775,"value":"source","raw":"'source'"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":15791,"end":15883,"expression":{"type":"AssignmentExpression","start":15791,"end":15882,"operator":"=","left":{"type":"Identifier","start":15791,"end":15797,"name":"target"},"right":{"type":"CallExpression","start":15800,"end":15882,"callee":{"type":"MemberExpression","start":15800,"end":15829,"object":{"type":"MemberExpression","start":15800,"end":15817,"object":{"type":"Identifier","start":15800,"end":15806,"name":"source"},"property":{"type":"Identifier","start":15807,"end":15817,"name":"parentNode"},"computed":false,"optional":false},"property":{"type":"Identifier","start":15818,"end":15829,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":15830,"end":15881,"callee":{"type":"MemberExpression","start":15830,"end":15871,"object":{"type":"MemberExpression","start":15830,"end":15857,"object":{"type":"MemberExpression","start":15830,"end":15843,"object":{"type":"ThisExpression","start":15830,"end":15834},"property":{"type":"Identifier","start":15835,"end":15843,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":15844,"end":15857,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":15858,"end":15871,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":15872,"end":15880,"value":"target","raw":"'target'"}],"optional":false}],"optional":false}}}]},"alternate":null},{"type":"ExpressionStatement","start":15904,"end":15967,"expression":{"type":"CallExpression","start":15904,"end":15966,"callee":{"type":"MemberExpression","start":15904,"end":15945,"object":{"type":"Identifier","start":15904,"end":15916,"name":"DOMUtilities"},"property":{"type":"Identifier","start":15917,"end":15945,"name":"replaceContentWithXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":15946,"end":15952,"name":"target"},{"type":"Identifier","start":15954,"end":15965,"name":"translation"}],"optional":false}},{"type":"ExpressionStatement","start":15977,"end":16015,"expression":{"type":"CallExpression","start":15977,"end":16014,"callee":{"type":"MemberExpression","start":15977,"end":15996,"object":{"type":"ThisExpression","start":15977,"end":15981},"property":{"type":"Identifier","start":15982,"end":15996,"name":"setTargetState"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":15997,"end":16013,"name":"STATE_TRANSLATED"}],"optional":false}}]}}},{"type":"MethodDefinition","start":16290,"end":16578,"static":false,"computed":false,"key":{"type":"Identifier","start":16290,"end":16313,"name":"cloneWithSourceAsTarget"},"kind":"method","value":{"type":"FunctionExpression","start":16313,"end":16578,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16314,"end":16327,"name":"isDefaultLang"},{"type":"Identifier","start":16329,"end":16340,"name":"copyContent"},{"type":"Identifier","start":16342,"end":16352,"name":"targetFile"}],"body":{"type":"BlockStatement","start":16354,"end":16578,"body":[{"type":"VariableDeclaration","start":16365,"end":16411,"declarations":[{"type":"VariableDeclarator","start":16371,"end":16410,"id":{"type":"Identifier","start":16371,"end":16378,"name":"element"},"init":{"type":"CallExpression","start":16381,"end":16410,"callee":{"type":"MemberExpression","start":16381,"end":16404,"object":{"type":"MemberExpression","start":16381,"end":16394,"object":{"type":"ThisExpression","start":16381,"end":16385},"property":{"type":"Identifier","start":16386,"end":16394,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":16395,"end":16404,"name":"cloneNode"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":16405,"end":16409,"value":true,"raw":"true"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":16421,"end":16486,"declarations":[{"type":"VariableDeclarator","start":16427,"end":16485,"id":{"type":"Identifier","start":16427,"end":16432,"name":"clone"},"init":{"type":"NewExpression","start":16435,"end":16485,"callee":{"type":"Identifier","start":16439,"end":16454,"name":"Xliff2TransUnit"},"arguments":[{"type":"Identifier","start":16455,"end":16462,"name":"element"},{"type":"MemberExpression","start":16464,"end":16472,"object":{"type":"ThisExpression","start":16464,"end":16468},"property":{"type":"Identifier","start":16469,"end":16472,"name":"_id"},"computed":false,"optional":false},{"type":"Identifier","start":16474,"end":16484,"name":"targetFile"}]}}],"kind":"const"},{"type":"ExpressionStatement","start":16496,"end":16548,"expression":{"type":"CallExpression","start":16496,"end":16547,"callee":{"type":"MemberExpression","start":16496,"end":16519,"object":{"type":"Identifier","start":16496,"end":16501,"name":"clone"},"property":{"type":"Identifier","start":16502,"end":16519,"name":"useSourceAsTarget"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":16520,"end":16533,"name":"isDefaultLang"},{"type":"Identifier","start":16535,"end":16546,"name":"copyContent"}],"optional":false}},{"type":"ReturnStatement","start":16558,"end":16571,"argument":{"type":"Identifier","start":16565,"end":16570,"name":"clone"}}]}}},{"type":"MethodDefinition","start":16772,"end":18163,"static":false,"computed":false,"key":{"type":"Identifier","start":16772,"end":16789,"name":"useSourceAsTarget"},"kind":"method","value":{"type":"FunctionExpression","start":16789,"end":18163,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":16790,"end":16803,"name":"isDefaultLang"},{"type":"Identifier","start":16805,"end":16816,"name":"copyContent"}],"body":{"type":"BlockStatement","start":16818,"end":18163,"body":[{"type":"VariableDeclaration","start":16829,"end":16907,"declarations":[{"type":"VariableDeclarator","start":16835,"end":16906,"id":{"type":"Identifier","start":16835,"end":16841,"name":"source"},"init":{"type":"CallExpression","start":16844,"end":16906,"callee":{"type":"MemberExpression","start":16844,"end":16881,"object":{"type":"Identifier","start":16844,"end":16856,"name":"DOMUtilities"},"property":{"type":"Identifier","start":16857,"end":16881,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":16882,"end":16895,"object":{"type":"ThisExpression","start":16882,"end":16886},"property":{"type":"Identifier","start":16887,"end":16895,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":16897,"end":16905,"value":"source","raw":"'source'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":16917,"end":16993,"declarations":[{"type":"VariableDeclarator","start":16921,"end":16992,"id":{"type":"Identifier","start":16921,"end":16927,"name":"target"},"init":{"type":"CallExpression","start":16930,"end":16992,"callee":{"type":"MemberExpression","start":16930,"end":16967,"object":{"type":"Identifier","start":16930,"end":16942,"name":"DOMUtilities"},"property":{"type":"Identifier","start":16943,"end":16967,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":16968,"end":16981,"object":{"type":"ThisExpression","start":16968,"end":16972},"property":{"type":"Identifier","start":16973,"end":16981,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":16983,"end":16991,"value":"target","raw":"'target'"}],"optional":false}}],"kind":"let"},{"type":"IfStatement","start":17003,"end":17134,"test":{"type":"UnaryExpression","start":17007,"end":17014,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":17008,"end":17014,"name":"target"}},"consequent":{"type":"BlockStatement","start":17016,"end":17134,"body":[{"type":"ExpressionStatement","start":17031,"end":17123,"expression":{"type":"AssignmentExpression","start":17031,"end":17122,"operator":"=","left":{"type":"Identifier","start":17031,"end":17037,"name":"target"},"right":{"type":"CallExpression","start":17040,"end":17122,"callee":{"type":"MemberExpression","start":17040,"end":17069,"object":{"type":"MemberExpression","start":17040,"end":17057,"object":{"type":"Identifier","start":17040,"end":17046,"name":"source"},"property":{"type":"Identifier","start":17047,"end":17057,"name":"parentNode"},"computed":false,"optional":false},"property":{"type":"Identifier","start":17058,"end":17069,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":17070,"end":17121,"callee":{"type":"MemberExpression","start":17070,"end":17111,"object":{"type":"MemberExpression","start":17070,"end":17097,"object":{"type":"MemberExpression","start":17070,"end":17083,"object":{"type":"ThisExpression","start":17070,"end":17074},"property":{"type":"Identifier","start":17075,"end":17083,"name":"_element"},"computed":false,"optional":false},"property":{"type":"Identifier","start":17084,"end":17097,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":17098,"end":17111,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":17112,"end":17120,"value":"target","raw":"'target'"}],"optional":false}],"optional":false}}}]},"alternate":null},{"type":"IfStatement","start":17144,"end":17771,"test":{"type":"LogicalExpression","start":17148,"end":17176,"left":{"type":"Identifier","start":17148,"end":17161,"name":"isDefaultLang"},"operator":"||","right":{"type":"Identifier","start":17165,"end":17176,"name":"copyContent"}},"consequent":{"type":"BlockStatement","start":17178,"end":17676,"body":[{"type":"VariableDeclaration","start":17193,"end":17249,"declarations":[{"type":"VariableDeclarator","start":17199,"end":17248,"id":{"type":"Identifier","start":17199,"end":17211,"name":"sourceString"},"init":{"type":"CallExpression","start":17214,"end":17248,"callee":{"type":"MemberExpression","start":17214,"end":17240,"object":{"type":"Identifier","start":17214,"end":17226,"name":"DOMUtilities"},"property":{"type":"Identifier","start":17227,"end":17240,"name":"getXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17241,"end":17247,"name":"source"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":17263,"end":17298,"declarations":[{"type":"VariableDeclarator","start":17267,"end":17297,"id":{"type":"Identifier","start":17267,"end":17282,"name":"newTargetString"},"init":{"type":"Identifier","start":17285,"end":17297,"name":"sourceString"}}],"kind":"let"},{"type":"IfStatement","start":17312,"end":17584,"test":{"type":"UnaryExpression","start":17316,"end":17348,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":17317,"end":17348,"callee":{"type":"MemberExpression","start":17317,"end":17334,"object":{"type":"ThisExpression","start":17317,"end":17321},"property":{"type":"Identifier","start":17322,"end":17334,"name":"isICUMessage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17335,"end":17347,"name":"sourceString"}],"optional":false}},"consequent":{"type":"BlockStatement","start":17350,"end":17584,"body":[{"type":"ExpressionStatement","start":17369,"end":17569,"expression":{"type":"AssignmentExpression","start":17369,"end":17568,"operator":"=","left":{"type":"Identifier","start":17369,"end":17384,"name":"newTargetString"},"right":{"type":"BinaryExpression","start":17387,"end":17568,"left":{"type":"BinaryExpression","start":17387,"end":17484,"left":{"type":"CallExpression","start":17387,"end":17448,"callee":{"type":"MemberExpression","start":17387,"end":17446,"object":{"type":"CallExpression","start":17387,"end":17417,"callee":{"type":"MemberExpression","start":17387,"end":17415,"object":{"type":"ThisExpression","start":17387,"end":17391},"property":{"type":"Identifier","start":17392,"end":17415,"name":"translationMessagesFile"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":17418,"end":17446,"name":"getNewTransUnitTargetPraefix"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"+","right":{"type":"Identifier","start":17472,"end":17484,"name":"sourceString"}},"operator":"+","right":{"type":"CallExpression","start":17508,"end":17568,"callee":{"type":"MemberExpression","start":17508,"end":17566,"object":{"type":"CallExpression","start":17508,"end":17538,"callee":{"type":"MemberExpression","start":17508,"end":17536,"object":{"type":"ThisExpression","start":17508,"end":17512},"property":{"type":"Identifier","start":17513,"end":17536,"name":"translationMessagesFile"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":17539,"end":17566,"name":"getNewTransUnitTargetSuffix"},"computed":false,"optional":false},"arguments":[],"optional":false}}}}]},"alternate":null},{"type":"ExpressionStatement","start":17598,"end":17665,"expression":{"type":"CallExpression","start":17598,"end":17664,"callee":{"type":"MemberExpression","start":17598,"end":17639,"object":{"type":"Identifier","start":17598,"end":17610,"name":"DOMUtilities"},"property":{"type":"Identifier","start":17611,"end":17639,"name":"replaceContentWithXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17640,"end":17646,"name":"target"},{"type":"Identifier","start":17648,"end":17663,"name":"newTargetString"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":17691,"end":17771,"body":[{"type":"ExpressionStatement","start":17706,"end":17760,"expression":{"type":"CallExpression","start":17706,"end":17759,"callee":{"type":"MemberExpression","start":17706,"end":17747,"object":{"type":"Identifier","start":17706,"end":17718,"name":"DOMUtilities"},"property":{"type":"Identifier","start":17719,"end":17747,"name":"replaceContentWithXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17748,"end":17754,"name":"target"},{"type":"Literal","start":17756,"end":17758,"value":"","raw":"''"}],"optional":false}}]}},{"type":"VariableDeclaration","start":17781,"end":17861,"declarations":[{"type":"VariableDeclarator","start":17787,"end":17860,"id":{"type":"Identifier","start":17787,"end":17794,"name":"segment"},"init":{"type":"CallExpression","start":17797,"end":17860,"callee":{"type":"MemberExpression","start":17797,"end":17834,"object":{"type":"Identifier","start":17797,"end":17809,"name":"DOMUtilities"},"property":{"type":"Identifier","start":17810,"end":17834,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":17835,"end":17848,"object":{"type":"ThisExpression","start":17835,"end":17839},"property":{"type":"Identifier","start":17840,"end":17848,"name":"_element"},"computed":false,"optional":false},{"type":"Literal","start":17850,"end":17859,"value":"segment","raw":"'segment'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":17871,"end":18156,"test":{"type":"Identifier","start":17875,"end":17882,"name":"segment"},"consequent":{"type":"BlockStatement","start":17884,"end":18156,"body":[{"type":"IfStatement","start":17899,"end":18145,"test":{"type":"Identifier","start":17903,"end":17916,"name":"isDefaultLang"},"consequent":{"type":"BlockStatement","start":17918,"end":18023,"body":[{"type":"ExpressionStatement","start":17937,"end":18008,"expression":{"type":"CallExpression","start":17937,"end":18007,"callee":{"type":"MemberExpression","start":17937,"end":17957,"object":{"type":"Identifier","start":17937,"end":17944,"name":"segment"},"property":{"type":"Identifier","start":17945,"end":17957,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":17958,"end":17965,"value":"state","raw":"'state'"},{"type":"CallExpression","start":17967,"end":18006,"callee":{"type":"MemberExpression","start":17967,"end":17993,"object":{"type":"ThisExpression","start":17967,"end":17971},"property":{"type":"Identifier","start":17972,"end":17993,"name":"mapStateToNativeState"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":17994,"end":18005,"name":"STATE_FINAL"}],"optional":false}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":18042,"end":18145,"body":[{"type":"ExpressionStatement","start":18061,"end":18130,"expression":{"type":"CallExpression","start":18061,"end":18129,"callee":{"type":"MemberExpression","start":18061,"end":18081,"object":{"type":"Identifier","start":18061,"end":18068,"name":"segment"},"property":{"type":"Identifier","start":18069,"end":18081,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":18082,"end":18089,"value":"state","raw":"'state'"},{"type":"CallExpression","start":18091,"end":18128,"callee":{"type":"MemberExpression","start":18091,"end":18117,"object":{"type":"ThisExpression","start":18091,"end":18095},"property":{"type":"Identifier","start":18096,"end":18117,"name":"mapStateToNativeState"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":18118,"end":18127,"name":"STATE_NEW"}],"optional":false}],"optional":false}}]}}]},"alternate":null}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":18168,"end":59930}]},"code":"import { STATE_NEW, STATE_TRANSLATED, STATE_FINAL } from '../api/constants';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { AbstractTransUnit } from './abstract-trans-unit';\r\nimport { Xliff2MessageParser } from './xliff2-message-parser';\r\nimport { isNullOrUndefined } from 'util';\r\n/**\r\n * Created by martin on 04.05.2017.\r\n * A Translation Unit in an XLIFF 2.0 file.\r\n */\r\nexport class Xliff2TransUnit extends AbstractTransUnit {\r\n    constructor(_element, _id, _translationMessagesFile) {\r\n        super(_element, _id, _translationMessagesFile);\r\n    }\r\n    sourceContent() {\r\n        const sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        return DOMUtilities.getXMLContent(sourceElement);\r\n    }\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    setSourceContent(newContent) {\r\n        let source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (!source) {\r\n            // should not happen, there always has to be a source, but who knows..\r\n            const segment = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n            source = segment.parentNode.appendChild(this._element.ownerDocument.createElement('source'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(source, newContent);\r\n    }\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    messageParser() {\r\n        return new Xliff2MessageParser();\r\n    }\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    createSourceContentNormalized() {\r\n        const sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (sourceElement) {\r\n            return this.messageParser().createNormalizedMessageFromXML(sourceElement, null);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    targetContent() {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return DOMUtilities.getXMLContent(targetElement);\r\n    }\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    targetContentNormalized() {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return new Xliff2MessageParser().createNormalizedMessageFromXML(targetElement, this.sourceContentNormalized());\r\n    }\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     */\r\n    nativeTargetState() {\r\n        const segmentElement = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segmentElement) {\r\n            return segmentElement.getAttribute('state');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * set state in xml.\r\n     * @param nativeState nativeState\r\n     */\r\n    setNativeTargetState(nativeState) {\r\n        const segmentElement = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segmentElement) {\r\n            segmentElement.setAttribute('state', nativeState);\r\n        }\r\n    }\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    mapStateToNativeState(state) {\r\n        switch (state) {\r\n            case STATE_NEW:\r\n                return 'initial';\r\n            case STATE_TRANSLATED:\r\n                return 'translated';\r\n            case STATE_FINAL:\r\n                return 'final';\r\n            default:\r\n                throw new Error('unknown state ' + state);\r\n        }\r\n    }\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    mapNativeStateToState(nativeState) {\r\n        switch (nativeState) {\r\n            case 'initial':\r\n                return STATE_NEW;\r\n            case 'translated':\r\n                return STATE_TRANSLATED;\r\n            case 'reviewed': // same as translated\r\n                return STATE_TRANSLATED;\r\n            case 'final':\r\n                return STATE_FINAL;\r\n            default:\r\n                return STATE_NEW;\r\n        }\r\n    }\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    sourceReferences() {\r\n        // Source is found as <file>:<line> in <note category=\"location\">...\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        const sourceRefs = [];\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('category') === 'location') {\r\n                const sourceAndPos = DOMUtilities.getPCDATA(noteElem);\r\n                sourceRefs.push(this.parseSourceAndPos(sourceAndPos));\r\n            }\r\n        }\r\n        return sourceRefs;\r\n    }\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return source and line number\r\n     */\r\n    parseSourceAndPos(sourceAndPos) {\r\n        const index = sourceAndPos.lastIndexOf(':');\r\n        if (index < 0) {\r\n            return {\r\n                sourcefile: sourceAndPos,\r\n                linenumber: 0\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                sourcefile: sourceAndPos.substring(0, index),\r\n                linenumber: this.parseLineNumber(sourceAndPos.substring(index + 1))\r\n            };\r\n        }\r\n    }\r\n    parseLineNumber(lineNumberString) {\r\n        return Number.parseInt(lineNumberString, 10);\r\n    }\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    setSourceReferences(sourceRefs) {\r\n        this.removeAllSourceReferences();\r\n        let notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (sourceRefs.length === 0 && !isNullOrUndefined(notesElement) && notesElement.childNodes.length === 0) {\r\n            // remove empty notes element\r\n            notesElement.parentNode.removeChild(notesElement);\r\n            return;\r\n        }\r\n        if (isNullOrUndefined(notesElement)) {\r\n            notesElement = this._element.ownerDocument.createElement('notes');\r\n            this._element.insertBefore(notesElement, this._element.childNodes.item(0));\r\n        }\r\n        sourceRefs.forEach((ref) => {\r\n            const note = this._element.ownerDocument.createElement('note');\r\n            note.setAttribute('category', 'location');\r\n            note.appendChild(this._element.ownerDocument.createTextNode(ref.sourcefile + ':' + ref.linenumber.toString(10)));\r\n            notesElement.appendChild(note);\r\n        });\r\n    }\r\n    removeAllSourceReferences() {\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        const toBeRemoved = [];\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const elem = noteElements.item(i);\r\n            if (elem.getAttribute('category') === 'location') {\r\n                toBeRemoved.push(elem);\r\n            }\r\n        }\r\n        toBeRemoved.forEach((elem) => { elem.parentNode.removeChild(elem); });\r\n    }\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"description\".\r\n     */\r\n    description() {\r\n        const noteElem = this.findNoteElementWithCategoryAttribute('description');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    setDescription(description) {\r\n        const noteElem = this.findNoteElementWithCategoryAttribute('description');\r\n        if (description) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                this.createNoteElementWithCategoryAttribute('description', description);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, description);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithCategoryAttribute('description');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Find a note element with attribute category='<attrValue>'\r\n     * @param attrValue value of category attribute\r\n     * @return element or null is absent\r\n     */\r\n    findNoteElementWithCategoryAttribute(attrValue) {\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('category') === attrValue) {\r\n                return noteElem;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return elements\r\n     */\r\n    findAllAdditionalNoteElements() {\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        const result = [];\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const noteElem = noteElements.item(i);\r\n            const fromAttribute = noteElem.getAttribute('category');\r\n            if (fromAttribute !== 'description' && fromAttribute !== 'meaning') {\r\n                result.push(noteElem);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param attrValue category attribute value\r\n     * @param content content of note element\r\n     * @return the new created element\r\n     */\r\n    createNoteElementWithCategoryAttribute(attrValue, content) {\r\n        let notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (isNullOrUndefined(notesElement)) {\r\n            // create it\r\n            notesElement = this._element.ownerDocument.createElement('notes');\r\n            this._element.appendChild(notesElement);\r\n        }\r\n        const noteElement = this._element.ownerDocument.createElement('note');\r\n        if (attrValue) {\r\n            noteElement.setAttribute('category', attrValue);\r\n        }\r\n        if (content) {\r\n            DOMUtilities.replaceContentWithXMLContent(noteElement, content);\r\n        }\r\n        notesElement.appendChild(noteElement);\r\n        return noteElement;\r\n    }\r\n    removeNotesElementIfEmpty() {\r\n        const notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (notesElement) {\r\n            const childNote = DOMUtilities.getFirstElementByTagName(this._element, 'note');\r\n            if (!childNote) {\r\n                // remove notes element\r\n                notesElement.parentNode.removeChild(notesElement);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     */\r\n    removeNoteElementWithCategoryAttribute(attrValue) {\r\n        const noteElement = this.findNoteElementWithCategoryAttribute(attrValue);\r\n        if (noteElement) {\r\n            noteElement.parentNode.removeChild(noteElement);\r\n        }\r\n        this.removeNotesElementIfEmpty();\r\n    }\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     */\r\n    removeAllAdditionalNoteElements() {\r\n        const noteElements = this.findAllAdditionalNoteElements();\r\n        noteElements.forEach((noteElement) => {\r\n            noteElement.parentNode.removeChild(noteElement);\r\n        });\r\n        this.removeNotesElementIfEmpty();\r\n    }\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"meaning\".\r\n     */\r\n    meaning() {\r\n        const noteElem = this.findNoteElementWithCategoryAttribute('meaning');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    setMeaning(meaning) {\r\n        const noteElem = this.findNoteElementWithCategoryAttribute('meaning');\r\n        if (meaning) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                this.createNoteElementWithCategoryAttribute('meaning', meaning);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, meaning);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithCategoryAttribute('meaning');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     */\r\n    notes() {\r\n        const noteElememts = this.findAllAdditionalNoteElements();\r\n        return noteElememts.map(elem => {\r\n            return {\r\n                from: elem.getAttribute('category'),\r\n                text: DOMUtilities.getPCDATA(elem)\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetNotes() {\r\n        return true;\r\n    }\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     */\r\n    setNotes(newNotes) {\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            this.checkNotes(newNotes);\r\n        }\r\n        this.removeAllAdditionalNoteElements();\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            newNotes.forEach((note) => {\r\n                this.createNoteElementWithCategoryAttribute(note.from, note.text);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    translateNative(translation) {\r\n        let target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            const source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n            target = source.parentNode.appendChild(this._element.ownerDocument.createElement('target'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, translation);\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    }\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     */\r\n    cloneWithSourceAsTarget(isDefaultLang, copyContent, targetFile) {\r\n        const element = this._element.cloneNode(true);\r\n        const clone = new Xliff2TransUnit(element, this._id, targetFile);\r\n        clone.useSourceAsTarget(isDefaultLang, copyContent);\r\n        return clone;\r\n    }\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    useSourceAsTarget(isDefaultLang, copyContent) {\r\n        const source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        let target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            target = source.parentNode.appendChild(this._element.ownerDocument.createElement('target'));\r\n        }\r\n        if (isDefaultLang || copyContent) {\r\n            const sourceString = DOMUtilities.getXMLContent(source);\r\n            let newTargetString = sourceString;\r\n            if (!this.isICUMessage(sourceString)) {\r\n                newTargetString = this.translationMessagesFile().getNewTransUnitTargetPraefix()\r\n                    + sourceString\r\n                    + this.translationMessagesFile().getNewTransUnitTargetSuffix();\r\n            }\r\n            DOMUtilities.replaceContentWithXMLContent(target, newTargetString);\r\n        }\r\n        else {\r\n            DOMUtilities.replaceContentWithXMLContent(target, '');\r\n        }\r\n        const segment = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segment) {\r\n            if (isDefaultLang) {\r\n                segment.setAttribute('state', this.mapStateToNativeState(STATE_FINAL));\r\n            }\r\n            else {\r\n                segment.setAttribute('state', this.mapStateToNativeState(STATE_NEW));\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-trans-unit.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff2-message-parser.mjs","util"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff2-trans-unit.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { STATE_NEW, STATE_TRANSLATED, STATE_FINAL } from '../api/constants';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { AbstractTransUnit } from './abstract-trans-unit';\r\nimport { Xliff2MessageParser } from './xliff2-message-parser';\r\nimport { isNullOrUndefined } from 'util';\r\n/**\r\n * Created by martin on 04.05.2017.\r\n * A Translation Unit in an XLIFF 2.0 file.\r\n */\r\nexport class Xliff2TransUnit extends AbstractTransUnit {\r\n    constructor(_element, _id, _translationMessagesFile) {\r\n        super(_element, _id, _translationMessagesFile);\r\n    }\r\n    sourceContent() {\r\n        const sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        return DOMUtilities.getXMLContent(sourceElement);\r\n    }\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    setSourceContent(newContent) {\r\n        let source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (!source) {\r\n            // should not happen, there always has to be a source, but who knows..\r\n            const segment = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n            source = segment.parentNode.appendChild(this._element.ownerDocument.createElement('source'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(source, newContent);\r\n    }\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    messageParser() {\r\n        return new Xliff2MessageParser();\r\n    }\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    createSourceContentNormalized() {\r\n        const sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (sourceElement) {\r\n            return this.messageParser().createNormalizedMessageFromXML(sourceElement, null);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    targetContent() {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return DOMUtilities.getXMLContent(targetElement);\r\n    }\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    targetContentNormalized() {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return new Xliff2MessageParser().createNormalizedMessageFromXML(targetElement, this.sourceContentNormalized());\r\n    }\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     */\r\n    nativeTargetState() {\r\n        const segmentElement = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segmentElement) {\r\n            return segmentElement.getAttribute('state');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * set state in xml.\r\n     * @param nativeState nativeState\r\n     */\r\n    setNativeTargetState(nativeState) {\r\n        const segmentElement = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segmentElement) {\r\n            segmentElement.setAttribute('state', nativeState);\r\n        }\r\n    }\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    mapStateToNativeState(state) {\r\n        switch (state) {\r\n            case STATE_NEW:\r\n                return 'initial';\r\n            case STATE_TRANSLATED:\r\n                return 'translated';\r\n            case STATE_FINAL:\r\n                return 'final';\r\n            default:\r\n                throw new Error('unknown state ' + state);\r\n        }\r\n    }\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    mapNativeStateToState(nativeState) {\r\n        switch (nativeState) {\r\n            case 'initial':\r\n                return STATE_NEW;\r\n            case 'translated':\r\n                return STATE_TRANSLATED;\r\n            case 'reviewed': // same as translated\r\n                return STATE_TRANSLATED;\r\n            case 'final':\r\n                return STATE_FINAL;\r\n            default:\r\n                return STATE_NEW;\r\n        }\r\n    }\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    sourceReferences() {\r\n        // Source is found as <file>:<line> in <note category=\"location\">...\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        const sourceRefs = [];\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('category') === 'location') {\r\n                const sourceAndPos = DOMUtilities.getPCDATA(noteElem);\r\n                sourceRefs.push(this.parseSourceAndPos(sourceAndPos));\r\n            }\r\n        }\r\n        return sourceRefs;\r\n    }\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return source and line number\r\n     */\r\n    parseSourceAndPos(sourceAndPos) {\r\n        const index = sourceAndPos.lastIndexOf(':');\r\n        if (index < 0) {\r\n            return {\r\n                sourcefile: sourceAndPos,\r\n                linenumber: 0\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                sourcefile: sourceAndPos.substring(0, index),\r\n                linenumber: this.parseLineNumber(sourceAndPos.substring(index + 1))\r\n            };\r\n        }\r\n    }\r\n    parseLineNumber(lineNumberString) {\r\n        return Number.parseInt(lineNumberString, 10);\r\n    }\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    setSourceReferences(sourceRefs) {\r\n        this.removeAllSourceReferences();\r\n        let notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (sourceRefs.length === 0 && !isNullOrUndefined(notesElement) && notesElement.childNodes.length === 0) {\r\n            // remove empty notes element\r\n            notesElement.parentNode.removeChild(notesElement);\r\n            return;\r\n        }\r\n        if (isNullOrUndefined(notesElement)) {\r\n            notesElement = this._element.ownerDocument.createElement('notes');\r\n            this._element.insertBefore(notesElement, this._element.childNodes.item(0));\r\n        }\r\n        sourceRefs.forEach((ref) => {\r\n            const note = this._element.ownerDocument.createElement('note');\r\n            note.setAttribute('category', 'location');\r\n            note.appendChild(this._element.ownerDocument.createTextNode(ref.sourcefile + ':' + ref.linenumber.toString(10)));\r\n            notesElement.appendChild(note);\r\n        });\r\n    }\r\n    removeAllSourceReferences() {\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        const toBeRemoved = [];\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const elem = noteElements.item(i);\r\n            if (elem.getAttribute('category') === 'location') {\r\n                toBeRemoved.push(elem);\r\n            }\r\n        }\r\n        toBeRemoved.forEach((elem) => { elem.parentNode.removeChild(elem); });\r\n    }\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"description\".\r\n     */\r\n    description() {\r\n        const noteElem = this.findNoteElementWithCategoryAttribute('description');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    setDescription(description) {\r\n        const noteElem = this.findNoteElementWithCategoryAttribute('description');\r\n        if (description) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                this.createNoteElementWithCategoryAttribute('description', description);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, description);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithCategoryAttribute('description');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Find a note element with attribute category='<attrValue>'\r\n     * @param attrValue value of category attribute\r\n     * @return element or null is absent\r\n     */\r\n    findNoteElementWithCategoryAttribute(attrValue) {\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('category') === attrValue) {\r\n                return noteElem;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return elements\r\n     */\r\n    findAllAdditionalNoteElements() {\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        const result = [];\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const noteElem = noteElements.item(i);\r\n            const fromAttribute = noteElem.getAttribute('category');\r\n            if (fromAttribute !== 'description' && fromAttribute !== 'meaning') {\r\n                result.push(noteElem);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param attrValue category attribute value\r\n     * @param content content of note element\r\n     * @return the new created element\r\n     */\r\n    createNoteElementWithCategoryAttribute(attrValue, content) {\r\n        let notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (isNullOrUndefined(notesElement)) {\r\n            // create it\r\n            notesElement = this._element.ownerDocument.createElement('notes');\r\n            this._element.appendChild(notesElement);\r\n        }\r\n        const noteElement = this._element.ownerDocument.createElement('note');\r\n        if (attrValue) {\r\n            noteElement.setAttribute('category', attrValue);\r\n        }\r\n        if (content) {\r\n            DOMUtilities.replaceContentWithXMLContent(noteElement, content);\r\n        }\r\n        notesElement.appendChild(noteElement);\r\n        return noteElement;\r\n    }\r\n    removeNotesElementIfEmpty() {\r\n        const notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (notesElement) {\r\n            const childNote = DOMUtilities.getFirstElementByTagName(this._element, 'note');\r\n            if (!childNote) {\r\n                // remove notes element\r\n                notesElement.parentNode.removeChild(notesElement);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     */\r\n    removeNoteElementWithCategoryAttribute(attrValue) {\r\n        const noteElement = this.findNoteElementWithCategoryAttribute(attrValue);\r\n        if (noteElement) {\r\n            noteElement.parentNode.removeChild(noteElement);\r\n        }\r\n        this.removeNotesElementIfEmpty();\r\n    }\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     */\r\n    removeAllAdditionalNoteElements() {\r\n        const noteElements = this.findAllAdditionalNoteElements();\r\n        noteElements.forEach((noteElement) => {\r\n            noteElement.parentNode.removeChild(noteElement);\r\n        });\r\n        this.removeNotesElementIfEmpty();\r\n    }\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"meaning\".\r\n     */\r\n    meaning() {\r\n        const noteElem = this.findNoteElementWithCategoryAttribute('meaning');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    setMeaning(meaning) {\r\n        const noteElem = this.findNoteElementWithCategoryAttribute('meaning');\r\n        if (meaning) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                this.createNoteElementWithCategoryAttribute('meaning', meaning);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, meaning);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithCategoryAttribute('meaning');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     */\r\n    notes() {\r\n        const noteElememts = this.findAllAdditionalNoteElements();\r\n        return noteElememts.map(elem => {\r\n            return {\r\n                from: elem.getAttribute('category'),\r\n                text: DOMUtilities.getPCDATA(elem)\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetNotes() {\r\n        return true;\r\n    }\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     */\r\n    setNotes(newNotes) {\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            this.checkNotes(newNotes);\r\n        }\r\n        this.removeAllAdditionalNoteElements();\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            newNotes.forEach((note) => {\r\n                this.createNoteElementWithCategoryAttribute(note.from, note.text);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    translateNative(translation) {\r\n        let target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            const source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n            target = source.parentNode.appendChild(this._element.ownerDocument.createElement('target'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, translation);\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    }\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     */\r\n    cloneWithSourceAsTarget(isDefaultLang, copyContent, targetFile) {\r\n        const element = this._element.cloneNode(true);\r\n        const clone = new Xliff2TransUnit(element, this._id, targetFile);\r\n        clone.useSourceAsTarget(isDefaultLang, copyContent);\r\n        return clone;\r\n    }\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    useSourceAsTarget(isDefaultLang, copyContent) {\r\n        const source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        let target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            target = source.parentNode.appendChild(this._element.ownerDocument.createElement('target'));\r\n        }\r\n        if (isDefaultLang || copyContent) {\r\n            const sourceString = DOMUtilities.getXMLContent(source);\r\n            let newTargetString = sourceString;\r\n            if (!this.isICUMessage(sourceString)) {\r\n                newTargetString = this.translationMessagesFile().getNewTransUnitTargetPraefix()\r\n                    + sourceString\r\n                    + this.translationMessagesFile().getNewTransUnitTargetSuffix();\r\n            }\r\n            DOMUtilities.replaceContentWithXMLContent(target, newTargetString);\r\n        }\r\n        else {\r\n            DOMUtilities.replaceContentWithXMLContent(target, '');\r\n        }\r\n        const segment = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segment) {\r\n            if (isDefaultLang) {\r\n                segment.setAttribute('state', this.mapStateToNativeState(STATE_FINAL));\r\n            }\r\n            else {\r\n                segment.setAttribute('state', this.mapStateToNativeState(STATE_NEW));\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"xliff2-trans-unit.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/xliff2-trans-unit.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[18,0,0,17],[20,0,0,19],[36,0,0,35],[38,0,0,37],[49,0,0,48],[51,0,0,49],[57,0,0,55],[75,0,0,73],[76,0,0,74]],[[0,0,5,0],[7,0,5,7],[9,0,5,8],[21,0,5,20],[23,0,5,21],[29,0,5,27],[46,0,5,44],[47,0,5,45]],[[0,0,7,0],[7,0,7,7],[9,0,7,8],[26,0,7,25],[28,0,7,26],[34,0,7,32],[57,0,7,55],[58,0,7,56]],[[0,0,8,0],[7,0,8,7],[9,0,8,8],[28,0,8,27],[30,0,8,28],[36,0,8,34],[61,0,8,59],[62,0,8,60]],[[0,0,10,0],[7,0,10,7],[9,0,10,8],[26,0,10,25],[28,0,10,26],[34,0,10,32],[40,0,10,38],[41,0,10,39]],[[0,0,11,0]],[],[],[[3,0,14,3]],[[0,0,16,0],[6,0,16,6],[13,0,16,13],[28,0,16,29],[37,0,16,37],[54,0,16,54]],[[4,0,18,4],[16,0,18,16],[24,0,18,33],[26,0,18,35],[29,0,18,46],[31,0,18,48],[55,0,18,98]],[[8,0,19,8],[13,0,19,13],[14,0,19,14],[22,0,19,22],[24,0,19,24],[27,0,19,27],[29,0,19,29],[53,0,19,53],[54,0,19,54],[55,0,19,55]],[[4,0,20,4],[5,0,20,5]],[[4,0,22,11],[17,0,22,24]],[[8,0,23,8],[14,0,23,14],[27,0,23,27],[30,0,23,30],[42,0,23,42],[43,0,23,43],[67,0,23,67],[68,0,23,68],[72,0,23,72],[73,0,23,73],[81,0,23,81],[83,0,23,83],[91,0,23,91],[92,0,23,92],[93,0,23,93]],[[8,0,24,8],[15,0,24,15],[27,0,24,27],[28,0,24,28],[41,0,24,41],[42,0,24,42],[55,0,24,55],[56,0,24,56],[57,0,24,57]],[[4,0,25,4],[5,0,25,5]],[[4,0,27,4]],[],[],[],[],[[7,0,32,7]],[[4,0,33,11],[20,0,33,27],[21,0,33,28],[31,0,33,46]],[[8,0,34,8],[12,0,34,12],[18,0,34,18],[21,0,34,21],[33,0,34,33],[34,0,34,34],[58,0,34,58],[59,0,34,59],[63,0,34,63],[64,0,34,64],[72,0,34,72],[74,0,34,74],[82,0,34,82],[83,0,34,83],[84,0,34,84]],[[8,0,35,8],[12,0,35,12],[13,0,35,13],[19,0,35,19],[21,0,35,21]],[[12,0,36,12],[82,0,36,82]],[[12,0,37,12],[18,0,37,18],[25,0,37,25],[28,0,37,28],[40,0,37,40],[41,0,37,41],[65,0,37,65],[66,0,37,66],[70,0,37,70],[71,0,37,71],[79,0,37,79],[81,0,37,81],[90,0,37,90],[91,0,37,91],[92,0,37,92]],[[12,0,38,12],[18,0,38,18],[21,0,38,21],[28,0,38,28],[29,0,38,29],[39,0,38,39],[40,0,38,40],[51,0,38,51],[52,0,38,52],[56,0,38,56],[57,0,38,57],[65,0,38,65],[66,0,38,66],[79,0,38,79],[80,0,38,80],[93,0,38,93],[94,0,38,94],[102,0,38,102],[103,0,38,103],[104,0,38,104],[105,0,38,105]],[[9,0,39,9]],[[8,0,40,8],[20,0,40,20],[21,0,40,21],[49,0,40,49],[50,0,40,50],[56,0,40,56],[58,0,40,58],[68,0,40,68],[69,0,40,69],[70,0,40,70]],[[4,0,41,4],[5,0,41,5]],[[4,0,43,4]],[],[[7,0,45,7]],[[4,0,46,14],[17,0,46,27]],[[8,0,47,8],[15,0,47,15],[19,0,47,19],[38,0,47,38],[40,0,47,40],[41,0,47,41]],[[4,0,48,4],[5,0,48,5]],[[4,0,50,4]],[],[[7,0,52,7]],[[4,0,53,11],[33,0,53,40]],[[8,0,54,8],[14,0,54,14],[27,0,54,27],[30,0,54,30],[42,0,54,42],[43,0,54,43],[67,0,54,67],[68,0,54,68],[72,0,54,72],[73,0,54,73],[81,0,54,81],[83,0,54,83],[91,0,54,91],[92,0,54,92],[93,0,54,93]],[[8,0,55,8],[12,0,55,12],[25,0,55,25],[27,0,55,27]],[[12,0,56,12],[19,0,56,19],[23,0,56,23],[24,0,56,24],[37,0,56,37],[39,0,56,39],[40,0,56,40],[70,0,56,70],[71,0,56,71],[84,0,56,84],[86,0,56,86],[90,0,56,90],[91,0,56,91],[92,0,56,92]],[[9,0,57,9]],[[13,0,57,15]],[[12,0,58,12],[19,0,58,19],[23,0,58,23],[24,0,58,24]],[[9,0,59,9]],[[4,0,60,4],[5,0,60,5]],[[4,0,62,4]],[],[[7,0,64,7]],[[4,0,65,11],[17,0,65,24]],[[8,0,66,8],[14,0,66,14],[27,0,66,27],[30,0,66,30],[42,0,66,42],[43,0,66,43],[67,0,66,67],[68,0,66,68],[72,0,66,72],[73,0,66,73],[81,0,66,81],[83,0,66,83],[91,0,66,91],[92,0,66,92],[93,0,66,93]],[[8,0,67,8],[15,0,67,15],[27,0,67,27],[28,0,67,28],[41,0,67,41],[42,0,67,42],[55,0,67,55],[56,0,67,56],[57,0,67,57]],[[4,0,68,4],[5,0,68,5]],[[4,0,70,4]],[],[],[[7,0,73,7]],[[4,0,74,4],[27,0,74,27]],[[8,0,75,8],[14,0,75,14],[27,0,75,27],[30,0,75,30],[42,0,75,42],[43,0,75,43],[67,0,75,67],[68,0,75,68],[72,0,75,72],[73,0,75,73],[81,0,75,81],[83,0,75,83],[91,0,75,91],[92,0,75,92],[93,0,75,93]],[[8,0,76,8],[15,0,76,15],[19,0,76,19],[38,0,76,38],[40,0,76,40],[41,0,76,41],[71,0,76,71],[72,0,76,72],[85,0,76,85],[87,0,76,87],[91,0,76,91],[92,0,76,92],[115,0,76,115],[117,0,76,117],[118,0,76,118],[119,0,76,119]],[[4,0,77,4],[5,0,77,5]],[[4,0,79,4]],[],[[7,0,81,7]],[[4,0,82,11],[21,0,82,28]],[[8,0,83,8],[14,0,83,14],[28,0,83,28],[31,0,83,31],[43,0,83,43],[44,0,83,44],[68,0,83,68],[69,0,83,69],[73,0,83,73],[74,0,83,74],[82,0,83,82],[84,0,83,84],[93,0,83,93],[94,0,83,94],[95,0,83,95]],[[8,0,84,8],[12,0,84,12],[26,0,84,26],[28,0,84,28]],[[12,0,85,12],[19,0,85,19],[33,0,85,33],[34,0,85,34],[46,0,85,46],[47,0,85,47],[54,0,85,54],[55,0,85,55],[56,0,85,56]],[[9,0,86,9]],[[13,0,86,15]],[[12,0,87,12],[19,0,87,19],[23,0,87,23],[24,0,87,24]],[[9,0,88,9]],[[4,0,89,4],[5,0,89,5]],[[4,0,91,4]],[],[],[[7,0,94,7]],[[4,0,95,14],[24,0,95,34],[25,0,95,35],[36,0,95,54]],[[8,0,96,8],[14,0,96,14],[28,0,96,28],[31,0,96,31],[43,0,96,43],[44,0,96,44],[68,0,96,68],[69,0,96,69],[73,0,96,73],[74,0,96,74],[82,0,96,82],[84,0,96,84],[93,0,96,93],[94,0,96,94],[95,0,96,95]],[[8,0,97,8],[12,0,97,12],[26,0,97,26],[28,0,97,28]],[[12,0,98,12],[26,0,98,26],[27,0,98,27],[39,0,98,39],[40,0,98,40],[47,0,98,47],[49,0,98,49],[60,0,98,60],[61,0,98,61],[62,0,98,62]],[[9,0,99,9]],[[4,0,100,4],[5,0,100,5]],[[4,0,102,4]],[],[],[],[],[],[[7,0,108,7]],[[4,0,109,14],[25,0,109,35],[26,0,109,36],[31,0,109,49]],[[8,0,110,8],[16,0,110,17],[21,0,110,22],[23,0,110,24]],[[12,0,111,12],[17,0,111,17],[26,0,111,26]],[[16,0,112,16],[23,0,112,23],[32,0,112,32],[33,0,112,33]],[[12,0,113,12],[17,0,113,17],[33,0,113,33]],[[16,0,114,16],[23,0,114,23],[35,0,114,35],[36,0,114,36]],[[12,0,115,12],[17,0,115,17],[28,0,115,28]],[[16,0,116,16],[23,0,116,23],[30,0,116,30],[31,0,116,31]],[[12,0,117,12]],[[16,0,118,16],[22,0,118,22],[26,0,118,26],[31,0,118,31],[32,0,118,32],[48,0,118,48],[51,0,118,52],[56,0,118,57],[57,0,118,58],[58,0,118,59]],[[9,0,119,9]],[[4,0,120,4],[5,0,120,5]],[[4,0,122,4]],[],[],[],[[7,0,126,7]],[[4,0,127,14],[25,0,127,35],[26,0,127,36],[37,0,127,55]],[[8,0,128,8],[16,0,128,17],[27,0,128,28],[29,0,128,30]],[[12,0,129,12],[17,0,129,17],[26,0,129,26]],[[16,0,130,16],[23,0,130,23],[32,0,130,32],[33,0,130,33]],[[12,0,131,12],[17,0,131,17],[29,0,131,29]],[[16,0,132,16],[23,0,132,23],[39,0,132,39],[40,0,132,40]],[[12,0,133,12],[17,0,133,17],[27,0,133,27],[29,0,133,29],[50,0,133,50]],[[16,0,134,16],[23,0,134,23],[39,0,134,39],[40,0,134,40]],[[12,0,135,12],[17,0,135,17],[24,0,135,24]],[[16,0,136,16],[23,0,136,23],[34,0,136,34],[35,0,136,35]],[[12,0,137,12]],[[16,0,138,16],[23,0,138,23],[32,0,138,32],[33,0,138,33]],[[9,0,139,9]],[[4,0,140,4],[5,0,140,5]],[[4,0,142,4]],[],[],[],[],[],[],[[7,0,149,7]],[[4,0,150,11],[20,0,150,27]],[[8,0,151,8],[76,0,151,76]],[[8,0,152,8],[14,0,152,14],[26,0,152,26],[29,0,152,29],[33,0,152,33],[34,0,152,34],[42,0,152,42],[43,0,152,43],[63,0,152,63],[64,0,152,64],[70,0,152,70],[71,0,152,71],[72,0,152,72]],[[8,0,153,8],[14,0,153,14],[24,0,153,24],[27,0,153,73],[29,0,153,75],[30,0,153,76]],[[8,0,154,8],[13,0,154,13],[17,0,154,17],[18,0,154,18],[21,0,154,21],[22,0,154,22],[24,0,154,24],[25,0,154,25],[28,0,154,28],[40,0,154,40],[41,0,154,41],[47,0,154,47],[49,0,154,49],[50,0,154,50],[52,0,154,52],[54,0,154,54]],[[12,0,155,12],[18,0,155,18],[26,0,155,26],[29,0,155,29],[41,0,155,41],[42,0,155,42],[46,0,155,46],[47,0,155,47],[48,0,155,48],[49,0,155,49],[50,0,155,50]],[[12,0,156,12],[16,0,156,16],[24,0,156,24],[25,0,156,25],[37,0,156,37],[38,0,156,38],[48,0,156,48],[49,0,156,49],[54,0,156,54],[64,0,156,64],[66,0,156,66]],[[16,0,157,16],[22,0,157,22],[34,0,157,34],[37,0,157,45],[49,0,157,57],[50,0,157,58],[59,0,157,67],[60,0,157,68],[68,0,157,76],[69,0,157,77],[70,0,157,78]],[[16,0,158,16],[26,0,158,26],[27,0,158,27],[31,0,158,31],[32,0,158,32],[36,0,158,36],[37,0,158,37],[54,0,158,54],[55,0,158,55],[67,0,158,67],[68,0,158,68],[69,0,158,69],[70,0,158,70]],[[13,0,159,13]],[[9,0,160,9]],[[8,0,161,8],[15,0,161,15],[25,0,161,25],[26,0,161,26]],[[4,0,162,4],[5,0,162,5]],[[4,0,164,4]],[],[],[],[[7,0,168,7]],[[4,0,169,12],[21,0,169,29],[22,0,169,30],[34,0,169,50]],[[8,0,170,8],[14,0,170,14],[19,0,170,19],[22,0,170,22],[34,0,170,34],[35,0,170,35],[46,0,170,46],[47,0,170,47],[50,0,170,50],[51,0,170,51],[52,0,170,52]],[[8,0,171,8],[12,0,171,12],[17,0,171,17],[20,0,171,20],[21,0,171,21],[23,0,171,23]],[[12,0,172,12],[19,0,172,19]],[[16,0,173,16],[26,0,173,26],[28,0,173,28],[40,0,173,40]],[[16,0,174,16],[26,0,174,26],[28,0,174,28],[29,0,174,29]],[[13,0,175,13],[14,0,175,14]],[[9,0,176,9]],[[13,0,176,15]],[[12,0,177,12],[19,0,177,19]],[[16,0,178,16],[26,0,178,26],[28,0,178,28],[40,0,178,40],[41,0,178,41],[50,0,178,50],[51,0,178,51],[52,0,178,52],[54,0,178,54],[59,0,178,59],[60,0,178,60]],[[16,0,179,16],[26,0,179,26],[28,0,179,28],[32,0,179,32],[33,0,179,33],[48,0,179,48],[49,0,179,49],[61,0,179,61],[62,0,179,62],[71,0,179,71],[72,0,179,72],[77,0,179,77],[80,0,179,80],[81,0,179,81],[82,0,179,82],[83,0,179,83]],[[13,0,180,13],[14,0,180,14]],[[9,0,181,9]],[[4,0,182,4],[5,0,182,5]],[[4,0,184,12],[19,0,184,27],[20,0,184,28],[36,0,184,52]],[[8,0,185,8],[15,0,185,15],[21,0,185,21],[22,0,185,22],[30,0,185,30],[31,0,185,31],[47,0,185,47],[49,0,185,49],[51,0,185,51],[52,0,185,52],[53,0,185,53]],[[4,0,186,4],[5,0,186,5]],[[4,0,188,4]],[],[],[],[],[[7,0,193,7]],[[4,0,194,11],[23,0,194,30],[24,0,194,31],[34,0,194,85]],[[8,0,195,8],[12,0,195,12],[13,0,195,13],[38,0,195,38],[40,0,195,40],[41,0,195,41]],[[8,0,196,8],[12,0,196,12],[24,0,196,24],[27,0,196,27],[39,0,196,39],[40,0,196,40],[64,0,196,64],[65,0,196,65],[69,0,196,69],[70,0,196,70],[78,0,196,78],[80,0,196,80],[87,0,196,87],[88,0,196,88],[89,0,196,89]],[[8,0,197,8],[12,0,197,12],[22,0,197,22],[23,0,197,23],[29,0,197,29],[34,0,197,34],[35,0,197,35],[39,0,197,39],[40,0,197,40],[57,0,197,57],[58,0,197,58],[70,0,197,70],[71,0,197,71],[75,0,197,75],[87,0,197,87],[88,0,197,88],[98,0,197,98],[99,0,197,99],[105,0,197,105],[110,0,197,110],[111,0,197,111],[113,0,197,113]],[[12,0,198,12],[41,0,198,41]],[[12,0,199,12],[24,0,199,24],[25,0,199,25],[35,0,199,35],[36,0,199,36],[47,0,199,47],[48,0,199,48],[60,0,199,60],[61,0,199,61],[62,0,199,62]],[[12,0,200,12],[19,0,200,19]],[[9,0,201,9]],[[8,0,202,8],[12,0,202,12],[29,0,202,29],[30,0,202,30],[42,0,202,42],[43,0,202,43],[45,0,202,45]],[[12,0,203,12],[24,0,203,24],[27,0,203,27],[31,0,203,31],[32,0,203,32],[40,0,203,40],[41,0,203,41],[54,0,203,54],[55,0,203,55],[68,0,203,68],[69,0,203,69],[76,0,203,76],[77,0,203,77],[78,0,203,78]],[[12,0,204,12],[16,0,204,16],[17,0,204,17],[25,0,204,25],[26,0,204,26],[38,0,204,38],[39,0,204,39],[51,0,204,51],[53,0,204,53],[57,0,204,57],[58,0,204,58],[66,0,204,66],[67,0,204,67],[77,0,204,77],[78,0,204,78],[82,0,204,82],[83,0,204,83],[84,0,204,84],[85,0,204,85],[86,0,204,86],[87,0,204,87]],[[9,0,205,9]],[[8,0,206,8],[18,0,206,18],[19,0,206,19],[26,0,206,26],[27,0,206,27],[28,0,206,28],[31,0,206,31],[33,0,206,33],[35,0,206,35]],[[12,0,207,12],[18,0,207,18],[22,0,207,22],[25,0,207,25],[29,0,207,29],[30,0,207,30],[38,0,207,38],[39,0,207,39],[52,0,207,52],[53,0,207,53],[66,0,207,66],[67,0,207,67],[73,0,207,73],[74,0,207,74],[75,0,207,75]],[[12,0,208,12],[16,0,208,16],[17,0,208,17],[29,0,208,29],[30,0,208,30],[40,0,208,40],[42,0,208,42],[52,0,208,52],[53,0,208,53],[54,0,208,54]],[[12,0,209,12],[16,0,209,16],[17,0,209,17],[28,0,209,28],[29,0,209,29],[33,0,209,33],[34,0,209,34],[42,0,209,42],[43,0,209,43],[56,0,209,56],[57,0,209,57],[71,0,209,71],[72,0,209,72],[75,0,209,75],[76,0,209,76],[86,0,209,86],[89,0,209,89],[92,0,209,92],[95,0,209,95],[98,0,209,98],[99,0,209,99],[109,0,209,109],[110,0,209,110],[118,0,209,118],[119,0,209,119],[121,0,209,121],[122,0,209,122],[123,0,209,123],[124,0,209,124],[125,0,209,125]],[[12,0,210,12],[24,0,210,24],[25,0,210,25],[36,0,210,36],[37,0,210,37],[41,0,210,41],[42,0,210,42],[43,0,210,43]],[[8,0,211,8],[9,0,211,9],[10,0,211,10],[11,0,211,11]],[[4,0,212,4],[5,0,212,5]],[[4,0,214,12],[29,0,214,37]],[[8,0,215,8],[14,0,215,14],[26,0,215,26],[29,0,215,29],[33,0,215,33],[34,0,215,34],[42,0,215,42],[43,0,215,43],[63,0,215,63],[64,0,215,64],[70,0,215,70],[71,0,215,71],[72,0,215,72]],[[8,0,216,8],[14,0,216,14],[25,0,216,25],[28,0,216,28],[30,0,216,30],[31,0,216,31]],[[8,0,217,8],[13,0,217,13],[17,0,217,17],[18,0,217,18],[21,0,217,21],[22,0,217,22],[24,0,217,24],[25,0,217,25],[28,0,217,28],[40,0,217,40],[41,0,217,41],[47,0,217,47],[49,0,217,49],[50,0,217,50],[52,0,217,52],[54,0,217,54]],[[12,0,218,12],[18,0,218,18],[22,0,218,22],[25,0,218,25],[37,0,218,37],[38,0,218,38],[42,0,218,42],[43,0,218,43],[44,0,218,44],[45,0,218,45],[46,0,218,46]],[[12,0,219,12],[16,0,219,16],[20,0,219,20],[21,0,219,21],[33,0,219,33],[34,0,219,34],[44,0,219,44],[45,0,219,45],[50,0,219,50],[60,0,219,60],[62,0,219,62]],[[16,0,220,16],[27,0,220,27],[28,0,220,28],[32,0,220,32],[33,0,220,33],[37,0,220,37],[38,0,220,38],[39,0,220,39]],[[13,0,221,13]],[[9,0,222,9]],[[8,0,223,8],[19,0,223,19],[20,0,223,20],[27,0,223,27],[28,0,223,28],[29,0,223,29],[33,0,223,33],[35,0,223,35],[37,0,223,37],[40,0,223,39],[44,0,223,43],[45,0,223,44],[55,0,223,54],[56,0,223,55],[67,0,223,66],[68,0,223,67],[72,0,223,71],[73,0,223,72],[74,0,223,73],[75,0,223,74],[76,0,223,75],[77,0,223,76],[78,0,223,77]],[[4,0,224,4],[5,0,224,5]],[[4,0,226,4]],[],[],[],[[7,0,230,7]],[[4,0,231,11],[15,0,231,22]],[[8,0,232,8],[14,0,232,14],[22,0,232,22],[25,0,232,25],[29,0,232,29],[30,0,232,30],[66,0,232,66],[67,0,232,67],[80,0,232,80],[81,0,232,81],[82,0,232,82]],[[8,0,233,8],[12,0,233,12],[20,0,233,20],[22,0,233,22]],[[12,0,234,12],[19,0,234,19],[31,0,234,31],[32,0,234,32],[41,0,234,41],[42,0,234,42],[50,0,234,50],[51,0,234,51],[52,0,234,52]],[[9,0,235,9]],[[13,0,235,15]],[[12,0,236,12],[19,0,236,19],[23,0,236,23],[24,0,236,24]],[[9,0,237,9]],[[4,0,238,4],[5,0,238,5]],[[4,0,240,4]],[],[],[[7,0,243,7]],[[4,0,244,11],[18,0,244,25],[19,0,244,26],[30,0,244,45]],[[8,0,245,8],[14,0,245,14],[22,0,245,22],[25,0,245,25],[29,0,245,29],[30,0,245,30],[66,0,245,66],[67,0,245,67],[80,0,245,80],[81,0,245,81],[82,0,245,82]],[[8,0,246,8],[12,0,246,12],[23,0,246,23],[25,0,246,25]],[[12,0,247,12],[16,0,247,16],[33,0,247,33],[34,0,247,34],[42,0,247,42],[43,0,247,43],[45,0,247,45]],[[16,0,248,16],[28,0,248,28]],[[16,0,249,16],[20,0,249,20],[21,0,249,21],[59,0,249,59],[60,0,249,60],[73,0,249,73],[75,0,249,75],[86,0,249,86],[87,0,249,87],[88,0,249,88]],[[13,0,250,13]],[[17,0,250,19]],[[16,0,251,16],[28,0,251,28],[29,0,251,29],[57,0,251,57],[58,0,251,58],[66,0,251,66],[68,0,251,68],[79,0,251,79],[80,0,251,80],[81,0,251,81]],[[13,0,252,13]],[[9,0,253,9]],[[13,0,253,15]],[[12,0,254,12],[16,0,254,16],[17,0,254,17],[34,0,254,34],[35,0,254,35],[43,0,254,43],[44,0,254,44],[46,0,254,46]],[[16,0,255,16],[30,0,255,30]],[[16,0,256,16],[20,0,256,20],[21,0,256,21],[59,0,256,59],[60,0,256,60],[73,0,256,73],[74,0,256,74],[75,0,256,75]],[[13,0,257,13]],[[9,0,258,9]],[[4,0,259,4],[5,0,259,5]],[[4,0,261,4]],[],[],[],[[7,0,265,7]],[[4,0,266,12],[40,0,266,48],[41,0,266,49],[50,0,266,66]],[[8,0,267,8],[14,0,267,14],[26,0,267,26],[29,0,267,29],[33,0,267,33],[34,0,267,34],[42,0,267,42],[43,0,267,43],[63,0,267,63],[64,0,267,64],[70,0,267,70],[71,0,267,71],[72,0,267,72]],[[8,0,268,8],[13,0,268,13],[17,0,268,17],[18,0,268,18],[21,0,268,21],[22,0,268,22],[24,0,268,24],[25,0,268,25],[28,0,268,28],[40,0,268,40],[41,0,268,41],[47,0,268,47],[49,0,268,49],[50,0,268,50],[52,0,268,52],[54,0,268,54]],[[12,0,269,12],[18,0,269,18],[26,0,269,26],[29,0,269,29],[41,0,269,41],[42,0,269,42],[46,0,269,46],[47,0,269,47],[48,0,269,48],[49,0,269,49],[50,0,269,50]],[[12,0,270,12],[16,0,270,16],[24,0,270,24],[25,0,270,25],[37,0,270,37],[38,0,270,38],[48,0,270,48],[49,0,270,49],[54,0,270,54],[63,0,270,63],[65,0,270,65]],[[16,0,271,16],[23,0,271,23],[31,0,271,31],[32,0,271,32]],[[13,0,272,13]],[[9,0,273,9]],[[8,0,274,8],[15,0,274,15],[19,0,274,19],[20,0,274,20]],[[4,0,275,4],[5,0,275,5]],[[4,0,277,4]],[],[],[[7,0,280,7]],[[4,0,281,12],[33,0,281,41]],[[8,0,282,8],[14,0,282,14],[26,0,282,26],[29,0,282,29],[33,0,282,33],[34,0,282,34],[42,0,282,42],[43,0,282,43],[63,0,282,63],[64,0,282,64],[70,0,282,70],[71,0,282,71],[72,0,282,72]],[[8,0,283,8],[14,0,283,14],[20,0,283,20],[23,0,283,34],[25,0,283,36],[26,0,283,37]],[[8,0,284,8],[13,0,284,13],[17,0,284,17],[18,0,284,18],[21,0,284,21],[22,0,284,22],[24,0,284,24],[25,0,284,25],[28,0,284,28],[40,0,284,40],[41,0,284,41],[47,0,284,47],[49,0,284,49],[50,0,284,50],[52,0,284,52],[54,0,284,54]],[[12,0,285,12],[18,0,285,18],[26,0,285,26],[29,0,285,29],[41,0,285,41],[42,0,285,42],[46,0,285,46],[47,0,285,47],[48,0,285,48],[49,0,285,49],[50,0,285,50]],[[12,0,286,12],[18,0,286,18],[31,0,286,31],[34,0,286,34],[42,0,286,42],[43,0,286,43],[55,0,286,55],[56,0,286,56],[66,0,286,66],[67,0,286,67],[68,0,286,68]],[[12,0,287,12],[16,0,287,16],[29,0,287,29],[34,0,287,34],[47,0,287,47],[51,0,287,51],[64,0,287,64],[69,0,287,69],[78,0,287,78],[80,0,287,80]],[[16,0,288,16],[22,0,288,22],[23,0,288,23],[27,0,288,27],[28,0,288,28],[36,0,288,36],[37,0,288,37],[38,0,288,38]],[[13,0,289,13]],[[9,0,290,9]],[[8,0,291,8],[15,0,291,15],[21,0,291,21],[22,0,291,22]],[[4,0,292,4],[5,0,292,5]],[[4,0,294,4]],[],[],[],[],[[7,0,299,7]],[[4,0,300,12],[42,0,300,50],[43,0,300,51],[52,0,300,68],[54,0,300,70],[61,0,300,85]],[[8,0,301,8],[12,0,301,12],[24,0,301,24],[27,0,301,27],[39,0,301,39],[40,0,301,40],[64,0,301,64],[65,0,301,65],[69,0,301,69],[70,0,301,70],[78,0,301,78],[80,0,301,80],[87,0,301,87],[88,0,301,88],[89,0,301,89]],[[8,0,302,8],[12,0,302,12],[29,0,302,29],[30,0,302,30],[42,0,302,42],[43,0,302,43],[45,0,302,45]],[[12,0,303,12],[24,0,303,24]],[[12,0,304,12],[24,0,304,24],[27,0,304,27],[31,0,304,31],[32,0,304,32],[40,0,304,40],[41,0,304,41],[54,0,304,54],[55,0,304,55],[68,0,304,68],[69,0,304,69],[76,0,304,76],[77,0,304,77],[78,0,304,78]],[[12,0,305,12],[16,0,305,16],[17,0,305,17],[25,0,305,25],[26,0,305,26],[37,0,305,37],[38,0,305,38],[50,0,305,50],[51,0,305,51],[52,0,305,52]],[[9,0,306,9]],[[8,0,307,8],[14,0,307,14],[25,0,307,25],[28,0,307,28],[32,0,307,32],[33,0,307,33],[41,0,307,41],[42,0,307,42],[55,0,307,55],[56,0,307,56],[69,0,307,69],[70,0,307,70],[76,0,307,76],[77,0,307,77],[78,0,307,78]],[[8,0,308,8],[12,0,308,12],[21,0,308,21],[23,0,308,23]],[[12,0,309,12],[23,0,309,23],[24,0,309,24],[36,0,309,36],[37,0,309,37],[47,0,309,47],[49,0,309,49],[58,0,309,58],[59,0,309,59],[60,0,309,60]],[[9,0,310,9]],[[8,0,311,8],[12,0,311,12],[19,0,311,19],[21,0,311,21]],[[12,0,312,12],[24,0,312,24],[25,0,312,25],[53,0,312,53],[54,0,312,54],[65,0,312,65],[67,0,312,67],[74,0,312,74],[75,0,312,75],[76,0,312,76]],[[9,0,313,9]],[[8,0,314,8],[20,0,314,20],[21,0,314,21],[32,0,314,32],[33,0,314,33],[44,0,314,44],[45,0,314,45],[46,0,314,46]],[[8,0,315,8],[15,0,315,15],[26,0,315,26],[27,0,315,27]],[[4,0,316,4],[5,0,316,5]],[[4,0,318,12],[29,0,318,37]],[[8,0,319,8],[14,0,319,14],[26,0,319,26],[29,0,319,29],[41,0,319,41],[42,0,319,42],[66,0,319,66],[67,0,319,67],[71,0,319,71],[72,0,319,72],[80,0,319,80],[82,0,319,82],[89,0,319,89],[90,0,319,90],[91,0,319,91]],[[8,0,320,8],[12,0,320,12],[24,0,320,24],[26,0,320,26]],[[12,0,321,12],[18,0,321,18],[27,0,321,27],[30,0,321,30],[42,0,321,42],[43,0,321,43],[67,0,321,67],[68,0,321,68],[72,0,321,72],[73,0,321,73],[81,0,321,81],[83,0,321,83],[89,0,321,89],[90,0,321,90],[91,0,321,91]],[[12,0,322,12],[16,0,322,16],[17,0,322,17],[26,0,322,26],[28,0,322,28]],[[16,0,323,16],[39,0,323,39]],[[16,0,324,16],[28,0,324,28],[29,0,324,29],[39,0,324,39],[40,0,324,40],[51,0,324,51],[52,0,324,52],[64,0,324,64],[65,0,324,65],[66,0,324,66]],[[13,0,325,13]],[[9,0,326,9]],[[4,0,327,4],[5,0,327,5]],[[4,0,329,4]],[],[],[[7,0,332,7]],[[4,0,333,12],[42,0,333,50],[43,0,333,51],[52,0,333,68]],[[8,0,334,8],[14,0,334,14],[25,0,334,25],[28,0,334,28],[32,0,334,32],[33,0,334,33],[69,0,334,69],[70,0,334,70],[79,0,334,79],[80,0,334,80],[81,0,334,81]],[[8,0,335,8],[12,0,335,12],[23,0,335,23],[25,0,335,25]],[[12,0,336,12],[23,0,336,23],[24,0,336,24],[34,0,336,34],[35,0,336,35],[46,0,336,46],[47,0,336,47],[58,0,336,58],[59,0,336,59],[60,0,336,60]],[[9,0,337,9]],[[8,0,338,8],[12,0,338,12],[13,0,338,13],[38,0,338,38],[40,0,338,40],[41,0,338,41]],[[4,0,339,4],[5,0,339,5]],[[4,0,341,4]],[],[[7,0,343,7]],[[4,0,344,12],[35,0,344,43]],[[8,0,345,8],[14,0,345,14],[26,0,345,26],[29,0,345,29],[33,0,345,33],[34,0,345,34],[63,0,345,63],[65,0,345,65],[66,0,345,66]],[[8,0,346,8],[20,0,346,20],[21,0,346,21],[28,0,346,28],[29,0,346,29],[30,0,346,30],[41,0,346,41],[43,0,346,43],[45,0,346,45]],[[12,0,347,12],[23,0,347,23],[24,0,347,24],[34,0,347,34],[35,0,347,35],[46,0,347,46],[47,0,347,47],[58,0,347,58],[59,0,347,59],[60,0,347,60]],[[8,0,348,8],[9,0,348,9],[10,0,348,10],[11,0,348,11]],[[8,0,349,8],[12,0,349,12],[13,0,349,13],[38,0,349,38],[40,0,349,40],[41,0,349,41]],[[4,0,350,4],[5,0,350,5]],[[4,0,352,4]],[],[],[],[],[[7,0,357,7]],[[4,0,358,11],[11,0,358,18]],[[8,0,359,8],[14,0,359,14],[22,0,359,22],[25,0,359,25],[29,0,359,29],[30,0,359,30],[66,0,359,66],[67,0,359,67],[76,0,359,76],[77,0,359,77],[78,0,359,78]],[[8,0,360,8],[12,0,360,12],[20,0,360,20],[22,0,360,22]],[[12,0,361,12],[19,0,361,19],[31,0,361,31],[32,0,361,32],[41,0,361,41],[42,0,361,42],[50,0,361,50],[51,0,361,51],[52,0,361,52]],[[9,0,362,9]],[[13,0,362,15]],[[12,0,363,12],[19,0,363,19],[23,0,363,23],[24,0,363,24]],[[9,0,364,9]],[[4,0,365,4],[5,0,365,5]],[[4,0,367,4]],[],[],[[7,0,370,7]],[[4,0,371,11],[14,0,371,21],[15,0,371,22],[22,0,371,37]],[[8,0,372,8],[14,0,372,14],[22,0,372,22],[25,0,372,25],[29,0,372,29],[30,0,372,30],[66,0,372,66],[67,0,372,67],[76,0,372,76],[77,0,372,77],[78,0,372,78]],[[8,0,373,8],[12,0,373,12],[19,0,373,19],[21,0,373,21]],[[12,0,374,12],[16,0,374,16],[33,0,374,33],[34,0,374,34],[42,0,374,42],[43,0,374,43],[45,0,374,45]],[[16,0,375,16],[28,0,375,28]],[[16,0,376,16],[20,0,376,20],[21,0,376,21],[59,0,376,59],[60,0,376,60],[69,0,376,69],[71,0,376,71],[78,0,376,78],[79,0,376,79],[80,0,376,80]],[[13,0,377,13]],[[17,0,377,19]],[[16,0,378,16],[28,0,378,28],[29,0,378,29],[57,0,378,57],[58,0,378,58],[66,0,378,66],[68,0,378,68],[75,0,378,75],[76,0,378,76],[77,0,378,77]],[[13,0,379,13]],[[9,0,380,9]],[[13,0,380,15]],[[12,0,381,12],[16,0,381,16],[17,0,381,17],[34,0,381,34],[35,0,381,35],[43,0,381,43],[44,0,381,44],[46,0,381,46]],[[16,0,382,16],[30,0,382,30]],[[16,0,383,16],[20,0,383,20],[21,0,383,21],[59,0,383,59],[60,0,383,60],[69,0,383,69],[70,0,383,70],[71,0,383,71]],[[13,0,384,13]],[[9,0,385,9]],[[4,0,386,4],[5,0,386,5]],[[4,0,388,4]],[],[],[],[[7,0,392,7]],[[4,0,393,11],[9,0,393,16]],[[8,0,394,8],[14,0,394,14],[26,0,394,26],[29,0,394,40],[33,0,394,44],[34,0,394,45],[63,0,394,74],[65,0,394,76],[66,0,394,77]],[[8,0,395,8],[15,0,395,15],[27,0,395,27],[28,0,395,28],[31,0,395,31],[32,0,395,32],[36,0,395,36],[37,0,395,37],[39,0,395,39]],[[12,0,396,12],[19,0,396,19]],[[16,0,397,16],[20,0,397,20],[22,0,397,22],[26,0,397,26],[27,0,397,27],[39,0,397,39],[40,0,397,40],[50,0,397,50],[51,0,397,51]],[[16,0,398,16],[20,0,398,20],[22,0,398,22],[34,0,398,34],[35,0,398,35],[44,0,398,44],[45,0,398,45],[49,0,398,49],[50,0,398,50]],[[13,0,399,13],[14,0,399,14]],[[8,0,400,8],[9,0,400,9],[10,0,400,10],[11,0,400,11]],[[4,0,401,4],[5,0,401,5]],[[4,0,403,4]],[],[],[],[[7,0,407,7]],[[4,0,408,11],[20,0,408,27]],[[8,0,409,8],[15,0,409,15],[19,0,409,19],[20,0,409,20]],[[4,0,410,4],[5,0,410,5]],[[4,0,412,4]],[],[],[[7,0,415,7]],[[4,0,416,11],[12,0,416,19],[13,0,416,20],[21,0,416,37]],[[8,0,417,8],[12,0,417,12],[13,0,417,13],[30,0,417,30],[31,0,417,31],[39,0,417,39],[40,0,417,40],[42,0,417,42]],[[12,0,418,12],[16,0,418,16],[17,0,418,17],[27,0,418,27],[28,0,418,28],[36,0,418,36],[37,0,418,37],[38,0,418,38]],[[9,0,419,9]],[[8,0,420,8],[12,0,420,12],[13,0,420,13],[44,0,420,44],[46,0,420,46],[47,0,420,47]],[[8,0,421,8],[12,0,421,12],[13,0,421,13],[30,0,421,30],[31,0,421,31],[39,0,421,39],[40,0,421,40],[42,0,421,42]],[[12,0,422,12],[20,0,422,20],[21,0,422,21],[28,0,422,28],[29,0,422,29],[30,0,422,30],[34,0,422,34],[36,0,422,36],[38,0,422,38]],[[16,0,423,16],[20,0,423,20],[21,0,423,21],[59,0,423,59],[60,0,423,60],[64,0,423,64],[65,0,423,65],[69,0,423,69],[71,0,423,71],[75,0,423,75],[76,0,423,76],[80,0,423,80],[81,0,423,81],[82,0,423,82]],[[12,0,424,12],[13,0,424,13],[14,0,424,14],[15,0,424,15]],[[9,0,425,9]],[[4,0,426,4],[5,0,426,5]],[[4,0,428,4]],[],[],[[7,0,431,7]],[[4,0,432,14],[19,0,432,29],[20,0,432,30],[31,0,432,49]],[[8,0,433,8],[12,0,433,12],[18,0,433,18],[21,0,433,21],[33,0,433,33],[34,0,433,34],[58,0,433,58],[59,0,433,59],[63,0,433,63],[64,0,433,64],[72,0,433,72],[74,0,433,74],[82,0,433,82],[83,0,433,83],[84,0,433,84]],[[8,0,434,8],[12,0,434,12],[13,0,434,13],[19,0,434,19],[21,0,434,21]],[[12,0,435,12],[18,0,435,18],[24,0,435,24],[27,0,435,27],[39,0,435,39],[40,0,435,40],[64,0,435,64],[65,0,435,65],[69,0,435,69],[70,0,435,70],[78,0,435,78],[80,0,435,80],[88,0,435,88],[89,0,435,89],[90,0,435,90]],[[12,0,436,12],[18,0,436,18],[21,0,436,21],[27,0,436,27],[28,0,436,28],[38,0,436,38],[39,0,436,39],[50,0,436,50],[51,0,436,51],[55,0,436,55],[56,0,436,56],[64,0,436,64],[65,0,436,65],[78,0,436,78],[79,0,436,79],[92,0,436,92],[93,0,436,93],[101,0,436,101],[102,0,436,102],[103,0,436,103],[104,0,436,104]],[[9,0,437,9]],[[8,0,438,8],[20,0,438,20],[21,0,438,21],[49,0,438,49],[50,0,438,50],[56,0,438,56],[58,0,438,67],[69,0,438,78],[70,0,438,79],[71,0,438,80]],[[8,0,439,8],[12,0,439,12],[13,0,439,13],[27,0,439,27],[28,0,439,28],[44,0,439,44],[45,0,439,45],[46,0,439,46]],[[4,0,440,4],[5,0,440,5]],[[4,0,442,4]],[],[],[],[],[[7,0,447,7]],[[4,0,448,11],[27,0,448,34],[28,0,448,35],[41,0,448,57],[43,0,448,59],[54,0,448,79],[56,0,448,81],[66,0,448,117]],[[8,0,449,8],[14,0,449,14],[21,0,449,21],[24,0,449,34],[28,0,449,38],[29,0,449,39],[37,0,449,47],[38,0,449,48],[47,0,449,57],[48,0,449,58],[52,0,449,62],[53,0,449,63],[54,0,449,64]],[[8,0,450,8],[14,0,450,14],[19,0,450,19],[22,0,450,22],[26,0,450,26],[41,0,450,41],[42,0,450,42],[49,0,450,49],[51,0,450,51],[55,0,450,55],[56,0,450,56],[59,0,450,59],[61,0,450,61],[71,0,450,71],[72,0,450,72],[73,0,450,73]],[[8,0,451,8],[13,0,451,13],[14,0,451,14],[31,0,451,31],[32,0,451,32],[45,0,451,45],[47,0,451,47],[58,0,451,58],[59,0,451,59],[60,0,451,60]],[[8,0,452,8],[15,0,452,15],[20,0,452,20],[21,0,452,21]],[[4,0,453,4],[5,0,453,5]],[[4,0,455,4]],[],[],[[7,0,458,7]],[[4,0,459,11],[21,0,459,28],[22,0,459,29],[35,0,459,51],[37,0,459,53],[48,0,459,73]],[[8,0,460,8],[14,0,460,14],[20,0,460,20],[23,0,460,23],[35,0,460,35],[36,0,460,36],[60,0,460,60],[61,0,460,61],[65,0,460,65],[66,0,460,66],[74,0,460,74],[76,0,460,76],[84,0,460,84],[85,0,460,85],[86,0,460,86]],[[8,0,461,8],[12,0,461,12],[18,0,461,18],[21,0,461,21],[33,0,461,33],[34,0,461,34],[58,0,461,58],[59,0,461,59],[63,0,461,63],[64,0,461,64],[72,0,461,72],[74,0,461,74],[82,0,461,82],[83,0,461,83],[84,0,461,84]],[[8,0,462,8],[12,0,462,12],[13,0,462,13],[19,0,462,19],[21,0,462,21]],[[12,0,463,12],[18,0,463,18],[21,0,463,21],[27,0,463,27],[28,0,463,28],[38,0,463,38],[39,0,463,39],[50,0,463,50],[51,0,463,51],[55,0,463,55],[56,0,463,56],[64,0,463,64],[65,0,463,65],[78,0,463,78],[79,0,463,79],[92,0,463,92],[93,0,463,93],[101,0,463,101],[102,0,463,102],[103,0,463,103],[104,0,463,104]],[[9,0,464,9]],[[8,0,465,8],[12,0,465,12],[25,0,465,25],[29,0,465,29],[40,0,465,40],[42,0,465,42]],[[12,0,466,12],[18,0,466,18],[30,0,466,30],[33,0,466,33],[45,0,466,45],[46,0,466,46],[59,0,466,59],[60,0,466,60],[66,0,466,66],[67,0,466,67],[68,0,466,68]],[[12,0,467,12],[16,0,467,16],[31,0,467,31],[34,0,467,34],[46,0,467,46],[47,0,467,47]],[[12,0,468,12],[16,0,468,16],[17,0,468,17],[21,0,468,21],[22,0,468,22],[34,0,468,34],[35,0,468,35],[47,0,468,47],[48,0,468,48],[50,0,468,50]],[[16,0,469,16],[31,0,469,31],[34,0,469,34],[38,0,469,38],[39,0,469,39],[62,0,469,62],[64,0,469,64],[65,0,469,65],[93,0,469,93],[95,0,469,95]],[[22,0,470,22],[34,0,470,34]],[[22,0,471,22],[26,0,471,26],[27,0,471,27],[50,0,471,50],[52,0,471,52],[53,0,471,53],[80,0,471,80],[82,0,471,82],[83,0,471,83]],[[13,0,472,13]],[[12,0,473,12],[24,0,473,24],[25,0,473,25],[53,0,473,53],[54,0,473,54],[60,0,473,60],[62,0,473,62],[77,0,473,77],[78,0,473,78],[79,0,473,79]],[[9,0,474,9]],[[13,0,474,15]],[[12,0,475,12],[24,0,475,24],[25,0,475,25],[53,0,475,53],[54,0,475,54],[60,0,475,60],[62,0,475,62],[64,0,475,64],[65,0,475,65],[66,0,475,66]],[[9,0,476,9]],[[8,0,477,8],[14,0,477,14],[21,0,477,21],[24,0,477,24],[36,0,477,36],[37,0,477,37],[61,0,477,61],[62,0,477,62],[66,0,477,66],[67,0,477,67],[75,0,477,75],[77,0,477,77],[86,0,477,86],[87,0,477,87],[88,0,477,88]],[[8,0,478,8],[12,0,478,12],[19,0,478,19],[21,0,478,21]],[[12,0,479,12],[16,0,479,16],[29,0,479,29],[31,0,479,31]],[[16,0,480,16],[23,0,480,23],[24,0,480,24],[36,0,480,36],[37,0,480,37],[44,0,480,44],[46,0,480,46],[50,0,480,50],[51,0,480,51],[72,0,480,72],[73,0,480,73],[84,0,480,84],[85,0,480,85],[86,0,480,86],[87,0,480,87]],[[13,0,481,13]],[[17,0,481,19]],[[16,0,482,16],[23,0,482,23],[24,0,482,24],[36,0,482,36],[37,0,482,37],[44,0,482,44],[46,0,482,46],[50,0,482,50],[51,0,482,51],[72,0,482,72],[73,0,482,73],[82,0,482,82],[83,0,482,83],[84,0,482,84],[85,0,482,85]],[[13,0,483,13]],[[9,0,484,9]],[[4,0,485,4],[5,0,485,5]],[[1,0,487,1]]],"sourcesContent":["import {STATE_NEW, STATE_TRANSLATED, STATE_FINAL} from '../api/constants';\r\nimport {ITranslationMessagesFile} from '../api/i-translation-messages-file';\r\nimport {INormalizedMessage} from '../api/i-normalized-message';\r\nimport {ITransUnit} from '../api/i-trans-unit';\r\nimport {INote} from '../api/i-note';\r\nimport {DOMUtilities} from './dom-utilities';\r\nimport {ParsedMessage} from './parsed-message';\r\nimport {AbstractTransUnit} from './abstract-trans-unit';\r\nimport {Xliff2MessageParser} from './xliff2-message-parser';\r\nimport {AbstractMessageParser} from './abstract-message-parser';\r\nimport {isNullOrUndefined} from 'util';\r\n/**\r\n * Created by martin on 04.05.2017.\r\n * A Translation Unit in an XLIFF 2.0 file.\r\n */\r\n\r\nexport class Xliff2TransUnit extends AbstractTransUnit  implements ITransUnit {\r\n\r\n    constructor(_element: Element, _id: string, _translationMessagesFile: ITranslationMessagesFile) {\r\n        super(_element, _id, _translationMessagesFile);\r\n    }\r\n\r\n    public sourceContent(): string {\r\n        const sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        return DOMUtilities.getXMLContent(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    public setSourceContent(newContent: string) {\r\n        let source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (!source) {\r\n            // should not happen, there always has to be a source, but who knows..\r\n            const segment = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n            source = segment.parentNode.appendChild(this._element.ownerDocument.createElement('source'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(source, newContent);\r\n    }\r\n\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    protected messageParser(): AbstractMessageParser {\r\n        return new Xliff2MessageParser();\r\n    }\r\n\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    public createSourceContentNormalized(): ParsedMessage {\r\n        const sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (sourceElement) {\r\n            return this.messageParser().createNormalizedMessageFromXML(sourceElement, null);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    public targetContent(): string {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return DOMUtilities.getXMLContent(targetElement);\r\n    }\r\n\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    targetContentNormalized(): INormalizedMessage {\r\n        const targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return new Xliff2MessageParser().createNormalizedMessageFromXML(targetElement, this.sourceContentNormalized());\r\n    }\r\n\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     */\r\n    public nativeTargetState(): string {\r\n        const segmentElement = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segmentElement) {\r\n            return segmentElement.getAttribute('state');\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set state in xml.\r\n     * @param nativeState nativeState\r\n     */\r\n    protected setNativeTargetState(nativeState: string) {\r\n        const segmentElement = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segmentElement) {\r\n            segmentElement.setAttribute('state', nativeState);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    protected mapStateToNativeState(state: string): string {\r\n        switch ( state) {\r\n            case STATE_NEW:\r\n                return 'initial';\r\n            case STATE_TRANSLATED:\r\n                return 'translated';\r\n            case STATE_FINAL:\r\n                return 'final';\r\n            default:\r\n                throw new Error('unknown state ' +  state);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    protected mapNativeStateToState(nativeState: string): string {\r\n        switch ( nativeState) {\r\n            case 'initial':\r\n                return STATE_NEW;\r\n            case 'translated':\r\n                return STATE_TRANSLATED;\r\n            case 'reviewed': // same as translated\r\n                return STATE_TRANSLATED;\r\n            case 'final':\r\n                return STATE_FINAL;\r\n            default:\r\n                return STATE_NEW;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    public sourceReferences(): {sourcefile: string, linenumber: number}[] {\r\n        // Source is found as <file>:<line> in <note category=\"location\">...\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        const sourceRefs: { sourcefile: string, linenumber: number }[] = [];\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('category') === 'location') {\r\n                const sourceAndPos: string = DOMUtilities.getPCDATA(noteElem);\r\n                sourceRefs.push(this.parseSourceAndPos(sourceAndPos));\r\n            }\r\n        }\r\n        return sourceRefs;\r\n    }\r\n\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return source and line number\r\n     */\r\n    private parseSourceAndPos(sourceAndPos: string): { sourcefile: string, linenumber } {\r\n        const index = sourceAndPos.lastIndexOf(':');\r\n        if (index < 0) {\r\n            return {\r\n                sourcefile: sourceAndPos,\r\n                linenumber: 0\r\n            };\r\n        } else {\r\n            return {\r\n                sourcefile: sourceAndPos.substring(0, index),\r\n                linenumber: this.parseLineNumber(sourceAndPos.substring(index + 1))\r\n            };\r\n        }\r\n    }\r\n\r\n    private parseLineNumber(lineNumberString: string): number {\r\n        return Number.parseInt(lineNumberString, 10);\r\n    }\r\n\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    public setSourceReferences(sourceRefs: {sourcefile: string, linenumber: number}[]) {\r\n        this.removeAllSourceReferences();\r\n        let notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (sourceRefs.length === 0 && !isNullOrUndefined(notesElement) && notesElement.childNodes.length === 0) {\r\n            // remove empty notes element\r\n            notesElement.parentNode.removeChild(notesElement);\r\n            return;\r\n        }\r\n        if (isNullOrUndefined(notesElement)) {\r\n            notesElement = this._element.ownerDocument.createElement('notes');\r\n            this._element.insertBefore(notesElement, this._element.childNodes.item(0));\r\n        }\r\n        sourceRefs.forEach((ref) => {\r\n            const note = this._element.ownerDocument.createElement('note');\r\n            note.setAttribute('category', 'location');\r\n            note.appendChild(this._element.ownerDocument.createTextNode(ref.sourcefile + ':' + ref.linenumber.toString(10)));\r\n            notesElement.appendChild(note);\r\n        });\r\n    }\r\n\r\n    private removeAllSourceReferences() {\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        const toBeRemoved = [];\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const elem = noteElements.item(i);\r\n            if (elem.getAttribute('category') === 'location') {\r\n                toBeRemoved.push(elem);\r\n            }\r\n        }\r\n        toBeRemoved.forEach((elem) => {elem.parentNode.removeChild(elem); });\r\n    }\r\n\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"description\".\r\n     */\r\n    public description(): string {\r\n        const noteElem = this.findNoteElementWithCategoryAttribute('description');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    public setDescription(description: string) {\r\n        const noteElem = this.findNoteElementWithCategoryAttribute('description');\r\n        if (description) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                this.createNoteElementWithCategoryAttribute('description', description);\r\n            } else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, description);\r\n            }\r\n        } else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithCategoryAttribute('description');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Find a note element with attribute category='<attrValue>'\r\n     * @param attrValue value of category attribute\r\n     * @return element or null is absent\r\n     */\r\n    private findNoteElementWithCategoryAttribute(attrValue: string): Element {\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('category') === attrValue) {\r\n                return noteElem;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return elements\r\n     */\r\n    private findAllAdditionalNoteElements(): Element[] {\r\n        const noteElements = this._element.getElementsByTagName('note');\r\n        const result: Element[] = [];\r\n        for (let i = 0; i < noteElements.length; i++) {\r\n            const noteElem = noteElements.item(i);\r\n            const fromAttribute = noteElem.getAttribute('category');\r\n            if (fromAttribute !== 'description' && fromAttribute !== 'meaning') {\r\n                result.push(noteElem);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param attrValue category attribute value\r\n     * @param content content of note element\r\n     * @return the new created element\r\n     */\r\n    private createNoteElementWithCategoryAttribute(attrValue: string, content: string): Element {\r\n        let notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (isNullOrUndefined(notesElement)) {\r\n            // create it\r\n            notesElement = this._element.ownerDocument.createElement('notes');\r\n            this._element.appendChild(notesElement);\r\n        }\r\n        const noteElement = this._element.ownerDocument.createElement('note');\r\n        if (attrValue) {\r\n            noteElement.setAttribute('category', attrValue);\r\n        }\r\n        if (content) {\r\n            DOMUtilities.replaceContentWithXMLContent(noteElement, content);\r\n        }\r\n        notesElement.appendChild(noteElement);\r\n        return noteElement;\r\n    }\r\n\r\n    private removeNotesElementIfEmpty() {\r\n        const notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (notesElement) {\r\n            const childNote = DOMUtilities.getFirstElementByTagName(this._element, 'note');\r\n            if (!childNote) {\r\n                // remove notes element\r\n                notesElement.parentNode.removeChild(notesElement);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     */\r\n    private removeNoteElementWithCategoryAttribute(attrValue: string) {\r\n        const noteElement = this.findNoteElementWithCategoryAttribute(attrValue);\r\n        if (noteElement) {\r\n            noteElement.parentNode.removeChild(noteElement);\r\n        }\r\n        this.removeNotesElementIfEmpty();\r\n    }\r\n\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     */\r\n    private removeAllAdditionalNoteElements() {\r\n        const noteElements = this.findAllAdditionalNoteElements();\r\n        noteElements.forEach((noteElement) => {\r\n            noteElement.parentNode.removeChild(noteElement);\r\n        });\r\n        this.removeNotesElementIfEmpty();\r\n    }\r\n\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"meaning\".\r\n     */\r\n    public meaning(): string {\r\n        const noteElem = this.findNoteElementWithCategoryAttribute('meaning');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    public setMeaning(meaning: string) {\r\n        const noteElem = this.findNoteElementWithCategoryAttribute('meaning');\r\n        if (meaning) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                this.createNoteElementWithCategoryAttribute('meaning', meaning);\r\n            } else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, meaning);\r\n            }\r\n        } else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithCategoryAttribute('meaning');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     */\r\n    public notes(): INote[] {\r\n        const noteElememts: Element[] = this.findAllAdditionalNoteElements();\r\n        return noteElememts.map(elem => {\r\n            return {\r\n                from: elem.getAttribute('category'),\r\n                text: DOMUtilities.getPCDATA(elem)\r\n            };\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    public supportsSetNotes(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     */\r\n    public setNotes(newNotes: INote[]) {\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            this.checkNotes(newNotes);\r\n        }\r\n        this.removeAllAdditionalNoteElements();\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            newNotes.forEach((note) => {\r\n                this.createNoteElementWithCategoryAttribute(note.from, note.text);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    protected translateNative(translation: string) {\r\n        let target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            const source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n            target = source.parentNode.appendChild(this._element.ownerDocument.createElement('target'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, <string> translation);\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    }\r\n\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     */\r\n    public cloneWithSourceAsTarget(isDefaultLang: boolean, copyContent: boolean, targetFile: ITranslationMessagesFile): AbstractTransUnit {\r\n        const element = <Element> this._element.cloneNode(true);\r\n        const clone = new Xliff2TransUnit(element, this._id, targetFile);\r\n        clone.useSourceAsTarget(isDefaultLang, copyContent);\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    public useSourceAsTarget(isDefaultLang: boolean, copyContent: boolean) {\r\n        const source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        let target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            target = source.parentNode.appendChild(this._element.ownerDocument.createElement('target'));\r\n        }\r\n        if (isDefaultLang || copyContent) {\r\n            const sourceString = DOMUtilities.getXMLContent(source);\r\n            let newTargetString = sourceString;\r\n            if (!this.isICUMessage(sourceString)) {\r\n                newTargetString = this.translationMessagesFile().getNewTransUnitTargetPraefix()\r\n                    + sourceString\r\n                    + this.translationMessagesFile().getNewTransUnitTargetSuffix();\r\n            }\r\n            DOMUtilities.replaceContentWithXMLContent(target, newTargetString);\r\n        } else {\r\n            DOMUtilities.replaceContentWithXMLContent(target, '');\r\n        }\r\n        const segment = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segment) {\r\n            if (isDefaultLang) {\r\n                segment.setAttribute('state', this.mapStateToNativeState(STATE_FINAL));\r\n            } else {\r\n                segment.setAttribute('state', this.mapStateToNativeState(STATE_NEW));\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n"]},"resolvedIds":{"util":{"external":true,"id":"util","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./dom-utilities":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../api/constants":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./abstract-trans-unit":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-trans-unit.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./xliff2-message-parser":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff2-message-parser.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":29931,"body":[{"type":"ImportDeclaration","start":0,"end":30,"specifiers":[{"type":"ImportSpecifier","start":9,"end":15,"imported":{"type":"Identifier","start":9,"end":15,"name":"format"},"local":{"type":"Identifier","start":9,"end":15,"name":"format"}}],"source":{"type":"Literal","start":23,"end":29,"value":"util","raw":"'util'"}},{"type":"ImportDeclaration","start":32,"end":100,"specifiers":[{"type":"ImportSpecifier","start":41,"end":55,"imported":{"type":"Identifier","start":41,"end":55,"name":"FORMAT_XLIFF20"},"local":{"type":"Identifier","start":41,"end":55,"name":"FORMAT_XLIFF20"}},{"type":"ImportSpecifier","start":57,"end":73,"imported":{"type":"Identifier","start":57,"end":73,"name":"FILETYPE_XLIFF20"},"local":{"type":"Identifier","start":57,"end":73,"name":"FILETYPE_XLIFF20"}}],"source":{"type":"Literal","start":81,"end":99,"value":"../api/constants","raw":"'../api/constants'"}},{"type":"ImportDeclaration","start":102,"end":149,"specifiers":[{"type":"ImportSpecifier","start":111,"end":123,"imported":{"type":"Identifier","start":111,"end":123,"name":"DOMUtilities"},"local":{"type":"Identifier","start":111,"end":123,"name":"DOMUtilities"}}],"source":{"type":"Literal","start":131,"end":148,"value":"./dom-utilities","raw":"'./dom-utilities'"}},{"type":"ImportDeclaration","start":151,"end":205,"specifiers":[{"type":"ImportSpecifier","start":160,"end":175,"imported":{"type":"Identifier","start":160,"end":175,"name":"Xliff2TransUnit"},"local":{"type":"Identifier","start":160,"end":175,"name":"Xliff2TransUnit"}}],"source":{"type":"Literal","start":183,"end":204,"value":"./xliff2-trans-unit","raw":"'./xliff2-trans-unit'"}},{"type":"ImportDeclaration","start":207,"end":294,"specifiers":[{"type":"ImportSpecifier","start":216,"end":247,"imported":{"type":"Identifier","start":216,"end":247,"name":"AbstractTranslationMessagesFile"},"local":{"type":"Identifier","start":216,"end":247,"name":"AbstractTranslationMessagesFile"}}],"source":{"type":"Literal","start":255,"end":293,"value":"./abstract-translation-messages-file","raw":"'./abstract-translation-messages-file'"}},{"type":"ExportNamedDeclaration","start":580,"end":9335,"declaration":{"type":"ClassDeclaration","start":587,"end":9335,"id":{"type":"Identifier","start":593,"end":603,"name":"Xliff2File"},"superClass":{"type":"Identifier","start":612,"end":643,"name":"AbstractTranslationMessagesFile"},"body":{"type":"ClassBody","start":644,"end":9335,"body":[{"type":"MethodDefinition","start":978,"end":1189,"static":false,"computed":false,"key":{"type":"Identifier","start":978,"end":989,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":989,"end":1189,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":990,"end":999,"name":"xmlString"},{"type":"Identifier","start":1001,"end":1005,"name":"path"},{"type":"Identifier","start":1007,"end":1015,"name":"encoding"}],"body":{"type":"BlockStatement","start":1017,"end":1189,"body":[{"type":"ExpressionStatement","start":1028,"end":1036,"expression":{"type":"CallExpression","start":1028,"end":1035,"callee":{"type":"Super","start":1028,"end":1033},"arguments":[],"optional":false}},{"type":"ExpressionStatement","start":1046,"end":1066,"expression":{"type":"AssignmentExpression","start":1046,"end":1065,"operator":"=","left":{"type":"MemberExpression","start":1046,"end":1060,"object":{"type":"ThisExpression","start":1046,"end":1050},"property":{"type":"Identifier","start":1051,"end":1060,"name":"_warnings"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":1063,"end":1065,"elements":[]}}},{"type":"ExpressionStatement","start":1076,"end":1118,"expression":{"type":"AssignmentExpression","start":1076,"end":1117,"operator":"=","left":{"type":"MemberExpression","start":1076,"end":1113,"object":{"type":"ThisExpression","start":1076,"end":1080},"property":{"type":"Identifier","start":1081,"end":1113,"name":"_numberOfTransUnitsWithMissingId"},"computed":false,"optional":false},"right":{"type":"Literal","start":1116,"end":1117,"value":0,"raw":"0"}}},{"type":"ExpressionStatement","start":1128,"end":1182,"expression":{"type":"CallExpression","start":1128,"end":1181,"callee":{"type":"MemberExpression","start":1128,"end":1154,"object":{"type":"ThisExpression","start":1128,"end":1132},"property":{"type":"Identifier","start":1133,"end":1154,"name":"initializeFromContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1155,"end":1164,"name":"xmlString"},{"type":"Identifier","start":1166,"end":1170,"name":"path"},{"type":"Identifier","start":1172,"end":1180,"name":"encoding"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1195,"end":1928,"static":false,"computed":false,"key":{"type":"Identifier","start":1195,"end":1216,"name":"initializeFromContent"},"kind":"method","value":{"type":"FunctionExpression","start":1216,"end":1928,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1217,"end":1226,"name":"xmlString"},{"type":"Identifier","start":1228,"end":1232,"name":"path"},{"type":"Identifier","start":1234,"end":1242,"name":"encoding"}],"body":{"type":"BlockStatement","start":1244,"end":1928,"body":[{"type":"ExpressionStatement","start":1255,"end":1300,"expression":{"type":"CallExpression","start":1255,"end":1299,"callee":{"type":"MemberExpression","start":1255,"end":1272,"object":{"type":"ThisExpression","start":1255,"end":1259},"property":{"type":"Identifier","start":1260,"end":1272,"name":"parseContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1273,"end":1282,"name":"xmlString"},{"type":"Identifier","start":1284,"end":1288,"name":"path"},{"type":"Identifier","start":1290,"end":1298,"name":"encoding"}],"optional":false}},{"type":"VariableDeclaration","start":1310,"end":1379,"declarations":[{"type":"VariableDeclarator","start":1316,"end":1378,"id":{"type":"Identifier","start":1316,"end":1325,"name":"xliffList"},"init":{"type":"CallExpression","start":1328,"end":1378,"callee":{"type":"MemberExpression","start":1328,"end":1369,"object":{"type":"MemberExpression","start":1328,"end":1348,"object":{"type":"ThisExpression","start":1328,"end":1332},"property":{"type":"Identifier","start":1333,"end":1348,"name":"_parsedDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1349,"end":1369,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1370,"end":1377,"value":"xliff","raw":"'xliff'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1389,"end":1899,"test":{"type":"BinaryExpression","start":1393,"end":1415,"left":{"type":"MemberExpression","start":1393,"end":1409,"object":{"type":"Identifier","start":1393,"end":1402,"name":"xliffList"},"property":{"type":"Identifier","start":1403,"end":1409,"name":"length"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Literal","start":1414,"end":1415,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":1417,"end":1546,"body":[{"type":"ThrowStatement","start":1432,"end":1535,"argument":{"type":"NewExpression","start":1438,"end":1534,"callee":{"type":"Identifier","start":1442,"end":1447,"name":"Error"},"arguments":[{"type":"CallExpression","start":1448,"end":1533,"callee":{"type":"Identifier","start":1448,"end":1454,"name":"format"},"arguments":[{"type":"Literal","start":1455,"end":1526,"value":"File \"%s\" seems to be no xliff file (should contain an xliff element)","raw":"'File \"%s\" seems to be no xliff file (should contain an xliff element)'"},{"type":"Identifier","start":1528,"end":1532,"name":"path"}],"optional":false}]}}]},"alternate":{"type":"BlockStatement","start":1561,"end":1899,"body":[{"type":"VariableDeclaration","start":1576,"end":1634,"declarations":[{"type":"VariableDeclarator","start":1582,"end":1633,"id":{"type":"Identifier","start":1582,"end":1589,"name":"version"},"init":{"type":"CallExpression","start":1592,"end":1633,"callee":{"type":"MemberExpression","start":1592,"end":1622,"object":{"type":"CallExpression","start":1592,"end":1609,"callee":{"type":"MemberExpression","start":1592,"end":1606,"object":{"type":"Identifier","start":1592,"end":1601,"name":"xliffList"},"property":{"type":"Identifier","start":1602,"end":1606,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1607,"end":1608,"value":0,"raw":"0"}],"optional":false},"property":{"type":"Identifier","start":1610,"end":1622,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1623,"end":1632,"value":"version","raw":"'version'"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1648,"end":1678,"declarations":[{"type":"VariableDeclarator","start":1654,"end":1677,"id":{"type":"Identifier","start":1654,"end":1669,"name":"expectedVersion"},"init":{"type":"Literal","start":1672,"end":1677,"value":"2.0","raw":"'2.0'"}}],"kind":"const"},{"type":"IfStatement","start":1692,"end":1888,"test":{"type":"BinaryExpression","start":1696,"end":1723,"left":{"type":"Identifier","start":1696,"end":1703,"name":"version"},"operator":"!==","right":{"type":"Identifier","start":1708,"end":1723,"name":"expectedVersion"}},"consequent":{"type":"BlockStatement","start":1725,"end":1888,"body":[{"type":"ThrowStatement","start":1744,"end":1873,"argument":{"type":"NewExpression","start":1750,"end":1872,"callee":{"type":"Identifier","start":1754,"end":1759,"name":"Error"},"arguments":[{"type":"CallExpression","start":1760,"end":1871,"callee":{"type":"Identifier","start":1760,"end":1766,"name":"format"},"arguments":[{"type":"Literal","start":1767,"end":1838,"value":"File \"%s\" seems to be no xliff 2 file, version should be %s, found %s","raw":"'File \"%s\" seems to be no xliff 2 file, version should be %s, found %s'"},{"type":"Identifier","start":1840,"end":1844,"name":"path"},{"type":"Identifier","start":1846,"end":1861,"name":"expectedVersion"},{"type":"Identifier","start":1863,"end":1870,"name":"version"}],"optional":false}]}}]},"alternate":null}]}},{"type":"ReturnStatement","start":1909,"end":1921,"argument":{"type":"ThisExpression","start":1916,"end":1920}}]}}},{"type":"MethodDefinition","start":2089,"end":2142,"static":false,"computed":false,"key":{"type":"Identifier","start":2089,"end":2099,"name":"i18nFormat"},"kind":"method","value":{"type":"FunctionExpression","start":2099,"end":2142,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2102,"end":2142,"body":[{"type":"ReturnStatement","start":2113,"end":2135,"argument":{"type":"Identifier","start":2120,"end":2134,"name":"FORMAT_XLIFF20"}}]}}},{"type":"MethodDefinition","start":2210,"end":2263,"static":false,"computed":false,"key":{"type":"Identifier","start":2210,"end":2218,"name":"fileType"},"kind":"method","value":{"type":"FunctionExpression","start":2218,"end":2263,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2221,"end":2263,"body":[{"type":"ReturnStatement","start":2232,"end":2256,"argument":{"type":"Identifier","start":2239,"end":2255,"name":"FILETYPE_XLIFF20"}}]}}},{"type":"MethodDefinition","start":2450,"end":2564,"static":false,"computed":false,"key":{"type":"Identifier","start":2450,"end":2474,"name":"elementsWithMixedContent"},"kind":"method","value":{"type":"FunctionExpression","start":2474,"end":2564,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2477,"end":2564,"body":[{"type":"ReturnStatement","start":2488,"end":2557,"argument":{"type":"ArrayExpression","start":2495,"end":2556,"elements":[{"type":"Literal","start":2496,"end":2506,"value":"skeleton","raw":"'skeleton'"},{"type":"Literal","start":2508,"end":2514,"value":"note","raw":"'note'"},{"type":"Literal","start":2516,"end":2522,"value":"data","raw":"'data'"},{"type":"Literal","start":2524,"end":2532,"value":"source","raw":"'source'"},{"type":"Literal","start":2534,"end":2542,"value":"target","raw":"'target'"},{"type":"Literal","start":2544,"end":2548,"value":"pc","raw":"'pc'"},{"type":"Literal","start":2550,"end":2555,"value":"mrk","raw":"'mrk'"}]}}]}}},{"type":"MethodDefinition","start":2570,"end":3149,"static":false,"computed":false,"key":{"type":"Identifier","start":2570,"end":2590,"name":"initializeTransUnits"},"kind":"method","value":{"type":"FunctionExpression","start":2590,"end":3149,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2593,"end":3149,"body":[{"type":"ExpressionStatement","start":2604,"end":2625,"expression":{"type":"AssignmentExpression","start":2604,"end":2624,"operator":"=","left":{"type":"MemberExpression","start":2604,"end":2619,"object":{"type":"ThisExpression","start":2604,"end":2608},"property":{"type":"Identifier","start":2609,"end":2619,"name":"transUnits"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":2622,"end":2624,"elements":[]}}},{"type":"VariableDeclaration","start":2635,"end":2710,"declarations":[{"type":"VariableDeclarator","start":2641,"end":2709,"id":{"type":"Identifier","start":2641,"end":2657,"name":"transUnitsInFile"},"init":{"type":"CallExpression","start":2660,"end":2709,"callee":{"type":"MemberExpression","start":2660,"end":2701,"object":{"type":"MemberExpression","start":2660,"end":2680,"object":{"type":"ThisExpression","start":2660,"end":2664},"property":{"type":"Identifier","start":2665,"end":2680,"name":"_parsedDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2681,"end":2701,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2702,"end":2708,"value":"unit","raw":"'unit'"}],"optional":false}}],"kind":"const"},{"type":"ForStatement","start":2720,"end":3142,"init":{"type":"VariableDeclaration","start":2725,"end":2734,"declarations":[{"type":"VariableDeclarator","start":2729,"end":2734,"id":{"type":"Identifier","start":2729,"end":2730,"name":"i"},"init":{"type":"Literal","start":2733,"end":2734,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":2736,"end":2763,"left":{"type":"Identifier","start":2736,"end":2737,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":2740,"end":2763,"object":{"type":"Identifier","start":2740,"end":2756,"name":"transUnitsInFile"},"property":{"type":"Identifier","start":2757,"end":2763,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":2765,"end":2768,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":2765,"end":2766,"name":"i"}},"body":{"type":"BlockStatement","start":2770,"end":3142,"body":[{"type":"VariableDeclaration","start":2785,"end":2828,"declarations":[{"type":"VariableDeclarator","start":2791,"end":2827,"id":{"type":"Identifier","start":2791,"end":2800,"name":"transunit"},"init":{"type":"CallExpression","start":2803,"end":2827,"callee":{"type":"MemberExpression","start":2803,"end":2824,"object":{"type":"Identifier","start":2803,"end":2819,"name":"transUnitsInFile"},"property":{"type":"Identifier","start":2820,"end":2824,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2825,"end":2826,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":2842,"end":2882,"declarations":[{"type":"VariableDeclarator","start":2848,"end":2881,"id":{"type":"Identifier","start":2848,"end":2850,"name":"id"},"init":{"type":"CallExpression","start":2853,"end":2881,"callee":{"type":"MemberExpression","start":2853,"end":2875,"object":{"type":"Identifier","start":2853,"end":2862,"name":"transunit"},"property":{"type":"Identifier","start":2863,"end":2875,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2876,"end":2880,"value":"id","raw":"'id'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":2896,"end":3054,"test":{"type":"UnaryExpression","start":2900,"end":2903,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":2901,"end":2903,"name":"id"}},"consequent":{"type":"BlockStatement","start":2905,"end":3054,"body":[{"type":"ExpressionStatement","start":2924,"end":3039,"expression":{"type":"CallExpression","start":2924,"end":3038,"callee":{"type":"MemberExpression","start":2924,"end":2943,"object":{"type":"MemberExpression","start":2924,"end":2938,"object":{"type":"ThisExpression","start":2924,"end":2928},"property":{"type":"Identifier","start":2929,"end":2938,"name":"_warnings"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2939,"end":2943,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2944,"end":3037,"callee":{"type":"Identifier","start":2944,"end":2950,"name":"format"},"arguments":[{"type":"Literal","start":2951,"end":3020,"value":"oops, trans-unit without \"id\" found in master, please check file %s","raw":"'oops, trans-unit without \"id\" found in master, please check file %s'"},{"type":"MemberExpression","start":3022,"end":3036,"object":{"type":"ThisExpression","start":3022,"end":3026},"property":{"type":"Identifier","start":3027,"end":3036,"name":"_filename"},"computed":false,"optional":false}],"optional":false}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":3068,"end":3131,"expression":{"type":"CallExpression","start":3068,"end":3130,"callee":{"type":"MemberExpression","start":3068,"end":3088,"object":{"type":"MemberExpression","start":3068,"end":3083,"object":{"type":"ThisExpression","start":3068,"end":3072},"property":{"type":"Identifier","start":3073,"end":3083,"name":"transUnits"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3084,"end":3088,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":3089,"end":3129,"callee":{"type":"Identifier","start":3093,"end":3108,"name":"Xliff2TransUnit"},"arguments":[{"type":"Identifier","start":3109,"end":3118,"name":"transunit"},{"type":"Identifier","start":3120,"end":3122,"name":"id"},{"type":"ThisExpression","start":3124,"end":3128}]}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":3235,"end":3502,"static":false,"computed":false,"key":{"type":"Identifier","start":3235,"end":3249,"name":"sourceLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":3249,"end":3502,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":3252,"end":3502,"body":[{"type":"VariableDeclaration","start":3263,"end":3350,"declarations":[{"type":"VariableDeclarator","start":3269,"end":3349,"id":{"type":"Identifier","start":3269,"end":3278,"name":"xliffElem"},"init":{"type":"CallExpression","start":3281,"end":3349,"callee":{"type":"MemberExpression","start":3281,"end":3318,"object":{"type":"Identifier","start":3281,"end":3293,"name":"DOMUtilities"},"property":{"type":"Identifier","start":3294,"end":3318,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3319,"end":3339,"object":{"type":"ThisExpression","start":3319,"end":3323},"property":{"type":"Identifier","start":3324,"end":3339,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":3341,"end":3348,"value":"xliff","raw":"'xliff'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3360,"end":3495,"test":{"type":"Identifier","start":3364,"end":3373,"name":"xliffElem"},"consequent":{"type":"BlockStatement","start":3375,"end":3442,"body":[{"type":"ReturnStatement","start":3390,"end":3431,"argument":{"type":"CallExpression","start":3397,"end":3430,"callee":{"type":"MemberExpression","start":3397,"end":3419,"object":{"type":"Identifier","start":3397,"end":3406,"name":"xliffElem"},"property":{"type":"Identifier","start":3407,"end":3419,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3420,"end":3429,"value":"srcLang","raw":"'srcLang'"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":3457,"end":3495,"body":[{"type":"ReturnStatement","start":3472,"end":3484,"argument":{"type":"Literal","start":3479,"end":3483,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":3593,"end":3821,"static":false,"computed":false,"key":{"type":"Identifier","start":3593,"end":3610,"name":"setSourceLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":3610,"end":3821,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3611,"end":3619,"name":"language"}],"body":{"type":"BlockStatement","start":3621,"end":3821,"body":[{"type":"VariableDeclaration","start":3632,"end":3719,"declarations":[{"type":"VariableDeclarator","start":3638,"end":3718,"id":{"type":"Identifier","start":3638,"end":3647,"name":"xliffElem"},"init":{"type":"CallExpression","start":3650,"end":3718,"callee":{"type":"MemberExpression","start":3650,"end":3687,"object":{"type":"Identifier","start":3650,"end":3662,"name":"DOMUtilities"},"property":{"type":"Identifier","start":3663,"end":3687,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3688,"end":3708,"object":{"type":"ThisExpression","start":3688,"end":3692},"property":{"type":"Identifier","start":3693,"end":3708,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":3710,"end":3717,"value":"xliff","raw":"'xliff'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3729,"end":3814,"test":{"type":"Identifier","start":3733,"end":3742,"name":"xliffElem"},"consequent":{"type":"BlockStatement","start":3744,"end":3814,"body":[{"type":"ExpressionStatement","start":3759,"end":3803,"expression":{"type":"CallExpression","start":3759,"end":3802,"callee":{"type":"MemberExpression","start":3759,"end":3781,"object":{"type":"Identifier","start":3759,"end":3768,"name":"xliffElem"},"property":{"type":"Identifier","start":3769,"end":3781,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3782,"end":3791,"value":"srcLang","raw":"'srcLang'"},{"type":"Identifier","start":3793,"end":3801,"name":"language"}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":3907,"end":4174,"static":false,"computed":false,"key":{"type":"Identifier","start":3907,"end":3921,"name":"targetLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":3921,"end":4174,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":3924,"end":4174,"body":[{"type":"VariableDeclaration","start":3935,"end":4022,"declarations":[{"type":"VariableDeclarator","start":3941,"end":4021,"id":{"type":"Identifier","start":3941,"end":3950,"name":"xliffElem"},"init":{"type":"CallExpression","start":3953,"end":4021,"callee":{"type":"MemberExpression","start":3953,"end":3990,"object":{"type":"Identifier","start":3953,"end":3965,"name":"DOMUtilities"},"property":{"type":"Identifier","start":3966,"end":3990,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":3991,"end":4011,"object":{"type":"ThisExpression","start":3991,"end":3995},"property":{"type":"Identifier","start":3996,"end":4011,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":4013,"end":4020,"value":"xliff","raw":"'xliff'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":4032,"end":4167,"test":{"type":"Identifier","start":4036,"end":4045,"name":"xliffElem"},"consequent":{"type":"BlockStatement","start":4047,"end":4114,"body":[{"type":"ReturnStatement","start":4062,"end":4103,"argument":{"type":"CallExpression","start":4069,"end":4102,"callee":{"type":"MemberExpression","start":4069,"end":4091,"object":{"type":"Identifier","start":4069,"end":4078,"name":"xliffElem"},"property":{"type":"Identifier","start":4079,"end":4091,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4092,"end":4101,"value":"trgLang","raw":"'trgLang'"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":4129,"end":4167,"body":[{"type":"ReturnStatement","start":4144,"end":4156,"argument":{"type":"Literal","start":4151,"end":4155,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":4265,"end":4493,"static":false,"computed":false,"key":{"type":"Identifier","start":4265,"end":4282,"name":"setTargetLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":4282,"end":4493,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4283,"end":4291,"name":"language"}],"body":{"type":"BlockStatement","start":4293,"end":4493,"body":[{"type":"VariableDeclaration","start":4304,"end":4391,"declarations":[{"type":"VariableDeclarator","start":4310,"end":4390,"id":{"type":"Identifier","start":4310,"end":4319,"name":"xliffElem"},"init":{"type":"CallExpression","start":4322,"end":4390,"callee":{"type":"MemberExpression","start":4322,"end":4359,"object":{"type":"Identifier","start":4322,"end":4334,"name":"DOMUtilities"},"property":{"type":"Identifier","start":4335,"end":4359,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":4360,"end":4380,"object":{"type":"ThisExpression","start":4360,"end":4364},"property":{"type":"Identifier","start":4365,"end":4380,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":4382,"end":4389,"value":"xliff","raw":"'xliff'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":4401,"end":4486,"test":{"type":"Identifier","start":4405,"end":4414,"name":"xliffElem"},"consequent":{"type":"BlockStatement","start":4416,"end":4486,"body":[{"type":"ExpressionStatement","start":4431,"end":4475,"expression":{"type":"CallExpression","start":4431,"end":4474,"callee":{"type":"MemberExpression","start":4431,"end":4453,"object":{"type":"Identifier","start":4431,"end":4440,"name":"xliffElem"},"property":{"type":"Identifier","start":4441,"end":4453,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4454,"end":4463,"value":"trgLang","raw":"'trgLang'"},{"type":"Identifier","start":4465,"end":4473,"name":"language"}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":5809,"end":8070,"static":false,"computed":false,"key":{"type":"Identifier","start":5809,"end":5827,"name":"importNewTransUnit"},"kind":"method","value":{"type":"FunctionExpression","start":5827,"end":8070,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5828,"end":5844,"name":"foreignTransUnit"},{"type":"Identifier","start":5846,"end":5859,"name":"isDefaultLang"},{"type":"Identifier","start":5861,"end":5872,"name":"copyContent"},{"type":"Identifier","start":5874,"end":5892,"name":"importAfterElement"}],"body":{"type":"BlockStatement","start":5894,"end":8070,"body":[{"type":"IfStatement","start":5905,"end":6081,"test":{"type":"CallExpression","start":5909,"end":5950,"callee":{"type":"MemberExpression","start":5909,"end":5929,"object":{"type":"ThisExpression","start":5909,"end":5913},"property":{"type":"Identifier","start":5914,"end":5929,"name":"transUnitWithId"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":5930,"end":5949,"object":{"type":"Identifier","start":5930,"end":5946,"name":"foreignTransUnit"},"property":{"type":"Identifier","start":5947,"end":5949,"name":"id"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":5952,"end":6081,"body":[{"type":"ThrowStatement","start":5967,"end":6070,"argument":{"type":"NewExpression","start":5973,"end":6069,"callee":{"type":"Identifier","start":5977,"end":5982,"name":"Error"},"arguments":[{"type":"CallExpression","start":5983,"end":6068,"callee":{"type":"Identifier","start":5983,"end":5989,"name":"format"},"arguments":[{"type":"Literal","start":5990,"end":6046,"value":"tu with id %s already exists in file, cannot import it","raw":"'tu with id %s already exists in file, cannot import it'"},{"type":"MemberExpression","start":6048,"end":6067,"object":{"type":"Identifier","start":6048,"end":6064,"name":"foreignTransUnit"},"property":{"type":"Identifier","start":6065,"end":6067,"name":"id"},"computed":false,"optional":false}],"optional":false}]}}]},"alternate":null},{"type":"VariableDeclaration","start":6091,"end":6180,"declarations":[{"type":"VariableDeclarator","start":6097,"end":6179,"id":{"type":"Identifier","start":6097,"end":6102,"name":"newTu"},"init":{"type":"CallExpression","start":6105,"end":6179,"callee":{"type":"MemberExpression","start":6105,"end":6145,"object":{"type":"Identifier","start":6105,"end":6121,"name":"foreignTransUnit"},"property":{"type":"Identifier","start":6122,"end":6145,"name":"cloneWithSourceAsTarget"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6146,"end":6159,"name":"isDefaultLang"},{"type":"Identifier","start":6161,"end":6172,"name":"copyContent"},{"type":"ThisExpression","start":6174,"end":6178}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":6190,"end":6278,"declarations":[{"type":"VariableDeclarator","start":6196,"end":6277,"id":{"type":"Identifier","start":6196,"end":6207,"name":"fileElement"},"init":{"type":"CallExpression","start":6210,"end":6277,"callee":{"type":"MemberExpression","start":6210,"end":6247,"object":{"type":"Identifier","start":6210,"end":6222,"name":"DOMUtilities"},"property":{"type":"Identifier","start":6223,"end":6247,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6248,"end":6268,"object":{"type":"ThisExpression","start":6248,"end":6252},"property":{"type":"Identifier","start":6253,"end":6268,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":6270,"end":6276,"value":"file","raw":"'file'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":6288,"end":6447,"test":{"type":"UnaryExpression","start":6292,"end":6304,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":6293,"end":6304,"name":"fileElement"}},"consequent":{"type":"BlockStatement","start":6306,"end":6447,"body":[{"type":"ThrowStatement","start":6321,"end":6436,"argument":{"type":"NewExpression","start":6327,"end":6435,"callee":{"type":"Identifier","start":6331,"end":6336,"name":"Error"},"arguments":[{"type":"CallExpression","start":6337,"end":6434,"callee":{"type":"Identifier","start":6337,"end":6343,"name":"format"},"arguments":[{"type":"Literal","start":6344,"end":6417,"value":"File \"%s\" seems to be no xliff 2.0 file (should contain a file element)","raw":"'File \"%s\" seems to be no xliff 2.0 file (should contain a file element)'"},{"type":"MemberExpression","start":6419,"end":6433,"object":{"type":"ThisExpression","start":6419,"end":6423},"property":{"type":"Identifier","start":6424,"end":6433,"name":"_filename"},"computed":false,"optional":false}],"optional":false}]}}]},"alternate":null},{"type":"VariableDeclaration","start":6457,"end":6478,"declarations":[{"type":"VariableDeclarator","start":6461,"end":6477,"id":{"type":"Identifier","start":6461,"end":6469,"name":"inserted"},"init":{"type":"Literal","start":6472,"end":6477,"value":false,"raw":"false"}}],"kind":"let"},{"type":"VariableDeclaration","start":6488,"end":6525,"declarations":[{"type":"VariableDeclarator","start":6492,"end":6524,"id":{"type":"Identifier","start":6492,"end":6516,"name":"isAfterElementPartOfFile"},"init":{"type":"Literal","start":6519,"end":6524,"value":false,"raw":"false"}}],"kind":"let"},{"type":"IfStatement","start":6535,"end":6756,"test":{"type":"UnaryExpression","start":6539,"end":6559,"operator":"!","prefix":true,"argument":{"type":"UnaryExpression","start":6540,"end":6559,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":6541,"end":6559,"name":"importAfterElement"}}},"consequent":{"type":"BlockStatement","start":6561,"end":6756,"body":[{"type":"VariableDeclaration","start":6576,"end":6643,"declarations":[{"type":"VariableDeclarator","start":6582,"end":6642,"id":{"type":"Identifier","start":6582,"end":6596,"name":"insertionPoint"},"init":{"type":"CallExpression","start":6599,"end":6642,"callee":{"type":"MemberExpression","start":6599,"end":6619,"object":{"type":"ThisExpression","start":6599,"end":6603},"property":{"type":"Identifier","start":6604,"end":6619,"name":"transUnitWithId"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6620,"end":6641,"object":{"type":"Identifier","start":6620,"end":6638,"name":"importAfterElement"},"property":{"type":"Identifier","start":6639,"end":6641,"name":"id"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":6657,"end":6745,"test":{"type":"UnaryExpression","start":6661,"end":6677,"operator":"!","prefix":true,"argument":{"type":"UnaryExpression","start":6662,"end":6677,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":6663,"end":6677,"name":"insertionPoint"}}},"consequent":{"type":"BlockStatement","start":6679,"end":6745,"body":[{"type":"ExpressionStatement","start":6698,"end":6730,"expression":{"type":"AssignmentExpression","start":6698,"end":6729,"operator":"=","left":{"type":"Identifier","start":6698,"end":6722,"name":"isAfterElementPartOfFile"},"right":{"type":"Literal","start":6725,"end":6729,"value":true,"raw":"true"}}}]},"alternate":null}]},"alternate":null},{"type":"IfStatement","start":6766,"end":7825,"test":{"type":"LogicalExpression","start":6770,"end":6855,"left":{"type":"BinaryExpression","start":6770,"end":6802,"left":{"type":"Identifier","start":6770,"end":6788,"name":"importAfterElement"},"operator":"===","right":{"type":"Identifier","start":6793,"end":6802,"name":"undefined"}},"operator":"||","right":{"type":"LogicalExpression","start":6807,"end":6854,"left":{"type":"Identifier","start":6807,"end":6825,"name":"importAfterElement"},"operator":"&&","right":{"type":"UnaryExpression","start":6829,"end":6854,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":6830,"end":6854,"name":"isAfterElementPartOfFile"}}}},"consequent":{"type":"BlockStatement","start":6857,"end":6959,"body":[{"type":"ExpressionStatement","start":6872,"end":6918,"expression":{"type":"CallExpression","start":6872,"end":6917,"callee":{"type":"MemberExpression","start":6872,"end":6895,"object":{"type":"Identifier","start":6872,"end":6883,"name":"fileElement"},"property":{"type":"Identifier","start":6884,"end":6895,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":6896,"end":6916,"callee":{"type":"MemberExpression","start":6896,"end":6914,"object":{"type":"Identifier","start":6896,"end":6901,"name":"newTu"},"property":{"type":"Identifier","start":6902,"end":6914,"name":"asXmlElement"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":6932,"end":6948,"expression":{"type":"AssignmentExpression","start":6932,"end":6947,"operator":"=","left":{"type":"Identifier","start":6932,"end":6940,"name":"inserted"},"right":{"type":"Literal","start":6943,"end":6947,"value":true,"raw":"true"}}}]},"alternate":{"type":"IfStatement","start":6974,"end":7825,"test":{"type":"BinaryExpression","start":6978,"end":7005,"left":{"type":"Identifier","start":6978,"end":6996,"name":"importAfterElement"},"operator":"===","right":{"type":"Literal","start":7001,"end":7005,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":7007,"end":7505,"body":[{"type":"VariableDeclaration","start":7022,"end":7115,"declarations":[{"type":"VariableDeclarator","start":7028,"end":7114,"id":{"type":"Identifier","start":7028,"end":7044,"name":"firstUnitElement"},"init":{"type":"CallExpression","start":7047,"end":7114,"callee":{"type":"MemberExpression","start":7047,"end":7084,"object":{"type":"Identifier","start":7047,"end":7059,"name":"DOMUtilities"},"property":{"type":"Identifier","start":7060,"end":7084,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":7085,"end":7105,"object":{"type":"ThisExpression","start":7085,"end":7089},"property":{"type":"Identifier","start":7090,"end":7105,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":7107,"end":7113,"value":"unit","raw":"'unit'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":7129,"end":7494,"test":{"type":"Identifier","start":7133,"end":7149,"name":"firstUnitElement"},"consequent":{"type":"BlockStatement","start":7151,"end":7285,"body":[{"type":"ExpressionStatement","start":7170,"end":7236,"expression":{"type":"CallExpression","start":7170,"end":7235,"callee":{"type":"MemberExpression","start":7170,"end":7195,"object":{"type":"Identifier","start":7170,"end":7182,"name":"DOMUtilities"},"property":{"type":"Identifier","start":7183,"end":7195,"name":"insertBefore"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7196,"end":7216,"callee":{"type":"MemberExpression","start":7196,"end":7214,"object":{"type":"Identifier","start":7196,"end":7201,"name":"newTu"},"property":{"type":"Identifier","start":7202,"end":7214,"name":"asXmlElement"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"Identifier","start":7218,"end":7234,"name":"firstUnitElement"}],"optional":false}},{"type":"ExpressionStatement","start":7254,"end":7270,"expression":{"type":"AssignmentExpression","start":7254,"end":7269,"operator":"=","left":{"type":"Identifier","start":7254,"end":7262,"name":"inserted"},"right":{"type":"Literal","start":7265,"end":7269,"value":true,"raw":"true"}}}]},"alternate":{"type":"BlockStatement","start":7304,"end":7494,"body":[{"type":"ExpressionStatement","start":7399,"end":7445,"expression":{"type":"CallExpression","start":7399,"end":7444,"callee":{"type":"MemberExpression","start":7399,"end":7422,"object":{"type":"Identifier","start":7399,"end":7410,"name":"fileElement"},"property":{"type":"Identifier","start":7411,"end":7422,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7423,"end":7443,"callee":{"type":"MemberExpression","start":7423,"end":7441,"object":{"type":"Identifier","start":7423,"end":7428,"name":"newTu"},"property":{"type":"Identifier","start":7429,"end":7441,"name":"asXmlElement"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":7463,"end":7479,"expression":{"type":"AssignmentExpression","start":7463,"end":7478,"operator":"=","left":{"type":"Identifier","start":7463,"end":7471,"name":"inserted"},"right":{"type":"Literal","start":7474,"end":7478,"value":true,"raw":"true"}}}]}}]},"alternate":{"type":"BlockStatement","start":7520,"end":7825,"body":[{"type":"VariableDeclaration","start":7535,"end":7649,"declarations":[{"type":"VariableDeclarator","start":7541,"end":7648,"id":{"type":"Identifier","start":7541,"end":7555,"name":"refUnitElement"},"init":{"type":"CallExpression","start":7558,"end":7648,"callee":{"type":"MemberExpression","start":7558,"end":7595,"object":{"type":"Identifier","start":7558,"end":7570,"name":"DOMUtilities"},"property":{"type":"Identifier","start":7571,"end":7595,"name":"getElementByTagNameAndId"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":7596,"end":7616,"object":{"type":"ThisExpression","start":7596,"end":7600},"property":{"type":"Identifier","start":7601,"end":7616,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":7618,"end":7624,"value":"unit","raw":"'unit'"},{"type":"MemberExpression","start":7626,"end":7647,"object":{"type":"Identifier","start":7626,"end":7644,"name":"importAfterElement"},"property":{"type":"Identifier","start":7645,"end":7647,"name":"id"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":7663,"end":7814,"test":{"type":"Identifier","start":7667,"end":7681,"name":"refUnitElement"},"consequent":{"type":"BlockStatement","start":7683,"end":7814,"body":[{"type":"ExpressionStatement","start":7702,"end":7765,"expression":{"type":"CallExpression","start":7702,"end":7764,"callee":{"type":"MemberExpression","start":7702,"end":7726,"object":{"type":"Identifier","start":7702,"end":7714,"name":"DOMUtilities"},"property":{"type":"Identifier","start":7715,"end":7726,"name":"insertAfter"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":7727,"end":7747,"callee":{"type":"MemberExpression","start":7727,"end":7745,"object":{"type":"Identifier","start":7727,"end":7732,"name":"newTu"},"property":{"type":"Identifier","start":7733,"end":7745,"name":"asXmlElement"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"Identifier","start":7749,"end":7763,"name":"refUnitElement"}],"optional":false}},{"type":"ExpressionStatement","start":7783,"end":7799,"expression":{"type":"AssignmentExpression","start":7783,"end":7798,"operator":"=","left":{"type":"Identifier","start":7783,"end":7791,"name":"inserted"},"right":{"type":"Literal","start":7794,"end":7798,"value":true,"raw":"true"}}}]},"alternate":null}]}}},{"type":"IfStatement","start":7835,"end":8063,"test":{"type":"Identifier","start":7839,"end":7847,"name":"inserted"},"consequent":{"type":"BlockStatement","start":7849,"end":8010,"body":[{"type":"ExpressionStatement","start":7864,"end":7896,"expression":{"type":"CallExpression","start":7864,"end":7895,"callee":{"type":"MemberExpression","start":7864,"end":7893,"object":{"type":"ThisExpression","start":7864,"end":7868},"property":{"type":"Identifier","start":7869,"end":7893,"name":"lazyInitializeTransUnits"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ExpressionStatement","start":7910,"end":7938,"expression":{"type":"CallExpression","start":7910,"end":7937,"callee":{"type":"MemberExpression","start":7910,"end":7930,"object":{"type":"MemberExpression","start":7910,"end":7925,"object":{"type":"ThisExpression","start":7910,"end":7914},"property":{"type":"Identifier","start":7915,"end":7925,"name":"transUnits"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7926,"end":7930,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7931,"end":7936,"name":"newTu"}],"optional":false}},{"type":"ExpressionStatement","start":7952,"end":7972,"expression":{"type":"CallExpression","start":7952,"end":7971,"callee":{"type":"MemberExpression","start":7952,"end":7969,"object":{"type":"ThisExpression","start":7952,"end":7956},"property":{"type":"Identifier","start":7957,"end":7969,"name":"countNumbers"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ReturnStatement","start":7986,"end":7999,"argument":{"type":"Identifier","start":7993,"end":7998,"name":"newTu"}}]},"alternate":{"type":"BlockStatement","start":8025,"end":8063,"body":[{"type":"ReturnStatement","start":8040,"end":8052,"argument":{"type":"Literal","start":8047,"end":8051,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":8780,"end":9332,"static":false,"computed":false,"key":{"type":"Identifier","start":8780,"end":8808,"name":"createTranslationFileForLang"},"kind":"method","value":{"type":"FunctionExpression","start":8808,"end":9332,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8809,"end":8813,"name":"lang"},{"type":"Identifier","start":8815,"end":8823,"name":"filename"},{"type":"Identifier","start":8825,"end":8838,"name":"isDefaultLang"},{"type":"Identifier","start":8840,"end":8851,"name":"copyContent"}],"body":{"type":"BlockStatement","start":8853,"end":9332,"body":[{"type":"VariableDeclaration","start":8864,"end":8952,"declarations":[{"type":"VariableDeclarator","start":8870,"end":8951,"id":{"type":"Identifier","start":8870,"end":8885,"name":"translationFile"},"init":{"type":"NewExpression","start":8888,"end":8951,"callee":{"type":"Identifier","start":8892,"end":8902,"name":"Xliff2File"},"arguments":[{"type":"CallExpression","start":8903,"end":8923,"callee":{"type":"MemberExpression","start":8903,"end":8921,"object":{"type":"ThisExpression","start":8903,"end":8907},"property":{"type":"Identifier","start":8908,"end":8921,"name":"editedContent"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"Identifier","start":8925,"end":8933,"name":"filename"},{"type":"CallExpression","start":8935,"end":8950,"callee":{"type":"MemberExpression","start":8935,"end":8948,"object":{"type":"ThisExpression","start":8935,"end":8939},"property":{"type":"Identifier","start":8940,"end":8948,"name":"encoding"},"computed":false,"optional":false},"arguments":[],"optional":false}]}}],"kind":"const"},{"type":"ExpressionStatement","start":8962,"end":9027,"expression":{"type":"CallExpression","start":8962,"end":9026,"callee":{"type":"MemberExpression","start":8962,"end":9006,"object":{"type":"Identifier","start":8962,"end":8977,"name":"translationFile"},"property":{"type":"Identifier","start":8978,"end":9006,"name":"setNewTransUnitTargetPraefix"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":9007,"end":9025,"object":{"type":"ThisExpression","start":9007,"end":9011},"property":{"type":"Identifier","start":9012,"end":9025,"name":"targetPraefix"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":9037,"end":9100,"expression":{"type":"CallExpression","start":9037,"end":9099,"callee":{"type":"MemberExpression","start":9037,"end":9080,"object":{"type":"Identifier","start":9037,"end":9052,"name":"translationFile"},"property":{"type":"Identifier","start":9053,"end":9080,"name":"setNewTransUnitTargetSuffix"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":9081,"end":9098,"object":{"type":"ThisExpression","start":9081,"end":9085},"property":{"type":"Identifier","start":9086,"end":9098,"name":"targetSuffix"},"computed":false,"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":9110,"end":9150,"expression":{"type":"CallExpression","start":9110,"end":9149,"callee":{"type":"MemberExpression","start":9110,"end":9143,"object":{"type":"Identifier","start":9110,"end":9125,"name":"translationFile"},"property":{"type":"Identifier","start":9126,"end":9143,"name":"setTargetLanguage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9144,"end":9148,"name":"lang"}],"optional":false}},{"type":"ExpressionStatement","start":9160,"end":9292,"expression":{"type":"CallExpression","start":9160,"end":9291,"callee":{"type":"MemberExpression","start":9160,"end":9192,"object":{"type":"Identifier","start":9160,"end":9175,"name":"translationFile"},"property":{"type":"Identifier","start":9176,"end":9192,"name":"forEachTransUnit"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":9193,"end":9290,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":9194,"end":9203,"name":"transUnit"}],"body":{"type":"BlockStatement","start":9208,"end":9290,"body":[{"type":"ExpressionStatement","start":9223,"end":9279,"expression":{"type":"CallExpression","start":9223,"end":9278,"callee":{"type":"MemberExpression","start":9223,"end":9250,"object":{"type":"Identifier","start":9223,"end":9232,"name":"transUnit"},"property":{"type":"Identifier","start":9233,"end":9250,"name":"useSourceAsTarget"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9251,"end":9264,"name":"isDefaultLang"},{"type":"Identifier","start":9266,"end":9277,"name":"copyContent"}],"optional":false}}]}}],"optional":false}},{"type":"ReturnStatement","start":9302,"end":9325,"argument":{"type":"Identifier","start":9309,"end":9324,"name":"translationFile"}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":9337,"end":29931}]},"code":"import { format } from 'util';\r\nimport { FORMAT_XLIFF20, FILETYPE_XLIFF20 } from '../api/constants';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { Xliff2TransUnit } from './xliff2-trans-unit';\r\nimport { AbstractTranslationMessagesFile } from './abstract-translation-messages-file';\r\n/**\r\n * Created by martin on 04.05.2017.\r\n * An XLIFF 2.0 file read from a source file.\r\n * Format definition is: http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\r\n *\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\nexport class Xliff2File extends AbstractTranslationMessagesFile {\r\n    /**\r\n     * Create an XLIFF 2.0-File from source.\r\n     * @param xmlString source read from file.\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return xliff file\r\n     */\r\n    constructor(xmlString, path, encoding) {\r\n        super();\r\n        this._warnings = [];\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this.initializeFromContent(xmlString, path, encoding);\r\n    }\r\n    initializeFromContent(xmlString, path, encoding) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        const xliffList = this._parsedDocument.getElementsByTagName('xliff');\r\n        if (xliffList.length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff file (should contain an xliff element)', path));\r\n        }\r\n        else {\r\n            const version = xliffList.item(0).getAttribute('version');\r\n            const expectedVersion = '2.0';\r\n            if (version !== expectedVersion) {\r\n                throw new Error(format('File \"%s\" seems to be no xliff 2 file, version should be %s, found %s', path, expectedVersion, version));\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    i18nFormat() {\r\n        return FORMAT_XLIFF20;\r\n    }\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 2.0'\r\n     */\r\n    fileType() {\r\n        return FILETYPE_XLIFF20;\r\n    }\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    elementsWithMixedContent() {\r\n        return ['skeleton', 'note', 'data', 'source', 'target', 'pc', 'mrk'];\r\n    }\r\n    initializeTransUnits() {\r\n        this.transUnits = [];\r\n        const transUnitsInFile = this._parsedDocument.getElementsByTagName('unit');\r\n        for (let i = 0; i < transUnitsInFile.length; i++) {\r\n            const transunit = transUnitsInFile.item(i);\r\n            const id = transunit.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, trans-unit without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new Xliff2TransUnit(transunit, id, this));\r\n        }\r\n    }\r\n    /**\r\n     * Get source language.\r\n     * @return source language.\r\n     */\r\n    sourceLanguage() {\r\n        const xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            return xliffElem.getAttribute('srcLang');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Edit the source language.\r\n     * @param language language\r\n     */\r\n    setSourceLanguage(language) {\r\n        const xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            xliffElem.setAttribute('srcLang', language);\r\n        }\r\n    }\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    targetLanguage() {\r\n        const xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            return xliffElem.getAttribute('trgLang');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    setTargetLanguage(language) {\r\n        const xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            xliffElem.setAttribute('trgLang', language);\r\n        }\r\n    }\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    importNewTransUnit(foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        const newTu = foreignTransUnit.cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        const fileElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (!fileElement) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff 2.0 file (should contain a file element)', this._filename));\r\n        }\r\n        let inserted = false;\r\n        let isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            const insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            fileElement.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        }\r\n        else if (importAfterElement === null) {\r\n            const firstUnitElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'unit');\r\n            if (firstUnitElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstUnitElement);\r\n                inserted = true;\r\n            }\r\n            else {\r\n                // no trans-unit, empty file, so add to first file element\r\n                fileElement.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        }\r\n        else {\r\n            const refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'unit', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    createTranslationFileForLang(lang, filename, isDefaultLang, copyContent) {\r\n        const translationFile = new Xliff2File(this.editedContent(), filename, this.encoding());\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.forEachTransUnit((transUnit) => {\r\n            transUnit.useSourceAsTarget(isDefaultLang, copyContent);\r\n        });\r\n        return translationFile;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["util","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff2-trans-unit.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-translation-messages-file.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff2-file.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { format } from 'util';\r\nimport { FORMAT_XLIFF20, FILETYPE_XLIFF20 } from '../api/constants';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { Xliff2TransUnit } from './xliff2-trans-unit';\r\nimport { AbstractTranslationMessagesFile } from './abstract-translation-messages-file';\r\n/**\r\n * Created by martin on 04.05.2017.\r\n * An XLIFF 2.0 file read from a source file.\r\n * Format definition is: http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\r\n *\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\nexport class Xliff2File extends AbstractTranslationMessagesFile {\r\n    /**\r\n     * Create an XLIFF 2.0-File from source.\r\n     * @param xmlString source read from file.\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return xliff file\r\n     */\r\n    constructor(xmlString, path, encoding) {\r\n        super();\r\n        this._warnings = [];\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this.initializeFromContent(xmlString, path, encoding);\r\n    }\r\n    initializeFromContent(xmlString, path, encoding) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        const xliffList = this._parsedDocument.getElementsByTagName('xliff');\r\n        if (xliffList.length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff file (should contain an xliff element)', path));\r\n        }\r\n        else {\r\n            const version = xliffList.item(0).getAttribute('version');\r\n            const expectedVersion = '2.0';\r\n            if (version !== expectedVersion) {\r\n                throw new Error(format('File \"%s\" seems to be no xliff 2 file, version should be %s, found %s', path, expectedVersion, version));\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    i18nFormat() {\r\n        return FORMAT_XLIFF20;\r\n    }\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 2.0'\r\n     */\r\n    fileType() {\r\n        return FILETYPE_XLIFF20;\r\n    }\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    elementsWithMixedContent() {\r\n        return ['skeleton', 'note', 'data', 'source', 'target', 'pc', 'mrk'];\r\n    }\r\n    initializeTransUnits() {\r\n        this.transUnits = [];\r\n        const transUnitsInFile = this._parsedDocument.getElementsByTagName('unit');\r\n        for (let i = 0; i < transUnitsInFile.length; i++) {\r\n            const transunit = transUnitsInFile.item(i);\r\n            const id = transunit.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, trans-unit without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new Xliff2TransUnit(transunit, id, this));\r\n        }\r\n    }\r\n    /**\r\n     * Get source language.\r\n     * @return source language.\r\n     */\r\n    sourceLanguage() {\r\n        const xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            return xliffElem.getAttribute('srcLang');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Edit the source language.\r\n     * @param language language\r\n     */\r\n    setSourceLanguage(language) {\r\n        const xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            xliffElem.setAttribute('srcLang', language);\r\n        }\r\n    }\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    targetLanguage() {\r\n        const xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            return xliffElem.getAttribute('trgLang');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    setTargetLanguage(language) {\r\n        const xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            xliffElem.setAttribute('trgLang', language);\r\n        }\r\n    }\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    importNewTransUnit(foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        const newTu = foreignTransUnit.cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        const fileElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (!fileElement) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff 2.0 file (should contain a file element)', this._filename));\r\n        }\r\n        let inserted = false;\r\n        let isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            const insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            fileElement.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        }\r\n        else if (importAfterElement === null) {\r\n            const firstUnitElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'unit');\r\n            if (firstUnitElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstUnitElement);\r\n                inserted = true;\r\n            }\r\n            else {\r\n                // no trans-unit, empty file, so add to first file element\r\n                fileElement.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        }\r\n        else {\r\n            const refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'unit', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    createTranslationFileForLang(lang, filename, isDefaultLang, copyContent) {\r\n        const translationFile = new Xliff2File(this.editedContent(), filename, this.encoding());\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.forEachTransUnit((transUnit) => {\r\n            transUnit.useSourceAsTarget(isDefaultLang, copyContent);\r\n        });\r\n        return translationFile;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"xliff2-file.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/xliff2-file.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[15,0,0,14],[17,0,0,15],[23,0,0,21],[29,0,0,27],[30,0,0,28]],[[0,0,3,0],[7,0,3,7],[9,0,3,8],[23,0,3,22],[25,0,3,24],[41,0,3,40],[43,0,3,41],[49,0,3,47],[67,0,3,65],[68,0,3,66]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[21,0,4,20],[23,0,4,21],[29,0,4,27],[46,0,4,44],[47,0,4,45]],[[0,0,5,0],[7,0,5,7],[9,0,5,8],[24,0,5,23],[26,0,5,24],[32,0,5,30],[53,0,5,51],[54,0,5,52]],[[0,0,6,0],[7,0,6,7],[9,0,6,8],[40,0,6,39],[42,0,6,40],[48,0,6,46],[86,0,6,84],[87,0,6,85]],[[0,0,8,0]],[],[],[],[],[],[[3,0,14,3]],[[0,0,16,0],[6,0,16,6],[13,0,16,13],[23,0,16,24],[32,0,16,32],[63,0,16,63]],[[4,0,18,4]],[],[],[],[],[],[],[[7,0,25,7]],[[4,0,26,4],[16,0,26,16],[25,0,26,33],[27,0,26,35],[31,0,26,47],[33,0,26,49],[41,0,26,73]],[[8,0,27,8],[13,0,27,13],[15,0,27,15],[16,0,27,16]],[[8,0,28,8],[12,0,28,12],[13,0,28,13],[22,0,28,22],[25,0,28,25],[27,0,28,27],[28,0,28,28]],[[8,0,29,8],[12,0,29,12],[13,0,29,13],[45,0,29,45],[48,0,29,48],[49,0,29,49],[50,0,29,50]],[[8,0,30,8],[12,0,30,12],[13,0,30,13],[34,0,30,34],[35,0,30,35],[44,0,30,44],[46,0,30,46],[50,0,30,50],[52,0,30,52],[60,0,30,60],[61,0,30,61],[62,0,30,62]],[[4,0,31,4],[5,0,31,5]],[[4,0,33,12],[25,0,33,33],[26,0,33,34],[35,0,33,51],[37,0,33,53],[41,0,33,65],[43,0,33,67],[51,0,33,91]],[[8,0,34,8],[12,0,34,12],[13,0,34,13],[25,0,34,25],[26,0,34,26],[35,0,34,35],[37,0,34,37],[41,0,34,41],[43,0,34,43],[51,0,34,51],[52,0,34,52],[53,0,34,53]],[[8,0,35,8],[14,0,35,14],[23,0,35,23],[26,0,35,26],[30,0,35,30],[31,0,35,31],[46,0,35,46],[47,0,35,47],[67,0,35,67],[68,0,35,68],[75,0,35,75],[76,0,35,76],[77,0,35,77]],[[8,0,36,8],[12,0,36,12],[21,0,36,21],[22,0,36,22],[28,0,36,28],[33,0,36,33],[34,0,36,34],[36,0,36,36]],[[12,0,37,12],[18,0,37,18],[22,0,37,22],[27,0,37,27],[28,0,37,28],[34,0,37,34],[35,0,37,35],[106,0,37,106],[108,0,37,108],[112,0,37,112],[113,0,37,113],[114,0,37,114],[115,0,37,115]],[[9,0,38,9]],[[13,0,38,15]],[[12,0,39,12],[18,0,39,18],[25,0,39,25],[28,0,39,28],[37,0,39,37],[38,0,39,38],[42,0,39,42],[43,0,39,43],[44,0,39,44],[45,0,39,45],[46,0,39,46],[58,0,39,58],[59,0,39,59],[68,0,39,68],[69,0,39,69],[70,0,39,70]],[[12,0,40,12],[18,0,40,18],[33,0,40,33],[36,0,40,36],[41,0,40,41],[42,0,40,42]],[[12,0,41,12],[16,0,41,16],[23,0,41,23],[28,0,41,28],[43,0,41,43],[45,0,41,45]],[[16,0,42,16],[22,0,42,22],[26,0,42,26],[31,0,42,31],[32,0,42,32],[38,0,42,38],[39,0,42,39],[110,0,42,110],[112,0,43,20],[116,0,43,24],[118,0,43,26],[133,0,43,41],[135,0,43,43],[142,0,43,50],[143,0,43,51],[144,0,43,52],[145,0,43,53]],[[13,0,44,13]],[[9,0,45,9]],[[8,0,46,8],[15,0,46,15],[19,0,46,19],[20,0,46,20]],[[4,0,47,4],[5,0,47,5]],[[4,0,49,4]],[],[],[],[[7,0,53,7]],[[4,0,54,11],[14,0,54,21]],[[8,0,55,8],[15,0,55,15],[29,0,55,29],[30,0,55,30]],[[4,0,56,4],[5,0,56,5]],[[4,0,58,4]],[],[],[[7,0,61,7]],[[4,0,62,11],[12,0,62,19]],[[8,0,63,8],[15,0,63,15],[31,0,63,31],[32,0,63,32]],[[4,0,64,4],[5,0,64,5]],[[4,0,66,4]],[],[],[],[[7,0,70,7]],[[4,0,71,14],[28,0,71,38]],[[8,0,72,8],[15,0,72,15],[16,0,72,16],[26,0,72,26],[28,0,72,28],[34,0,72,34],[36,0,72,36],[42,0,72,42],[44,0,72,44],[52,0,72,52],[54,0,72,54],[62,0,72,62],[64,0,72,64],[68,0,72,68],[70,0,72,70],[75,0,72,75],[76,0,72,76],[77,0,72,77]],[[4,0,73,4],[5,0,73,5]],[[4,0,75,14],[24,0,75,34]],[[8,0,76,8],[12,0,76,12],[13,0,76,13],[23,0,76,23],[26,0,76,26],[28,0,76,28],[29,0,76,29]],[[8,0,77,8],[14,0,77,14],[30,0,77,30],[33,0,77,33],[37,0,77,37],[38,0,77,38],[53,0,77,53],[54,0,77,54],[74,0,77,74],[75,0,77,75],[81,0,77,81],[82,0,77,82],[83,0,77,83]],[[8,0,78,8],[13,0,78,13],[17,0,78,17],[18,0,78,18],[21,0,78,21],[22,0,78,22],[24,0,78,24],[25,0,78,25],[28,0,78,28],[44,0,78,44],[45,0,78,45],[51,0,78,51],[53,0,78,53],[54,0,78,54],[56,0,78,56],[58,0,78,58]],[[12,0,79,12],[18,0,79,18],[27,0,79,27],[30,0,79,30],[46,0,79,46],[47,0,79,47],[51,0,79,51],[52,0,79,52],[53,0,79,53],[54,0,79,54],[55,0,79,55]],[[12,0,80,12],[18,0,80,18],[20,0,80,20],[23,0,80,23],[32,0,80,32],[33,0,80,33],[45,0,80,45],[46,0,80,46],[50,0,80,50],[51,0,80,51],[52,0,80,52]],[[12,0,81,12],[16,0,81,16],[17,0,81,17],[19,0,81,19],[21,0,81,21]],[[16,0,82,16],[20,0,82,20],[21,0,82,21],[30,0,82,30],[31,0,82,31],[35,0,82,35],[36,0,82,36],[42,0,82,42],[43,0,82,43],[112,0,82,112],[114,0,82,114],[118,0,82,118],[119,0,82,119],[128,0,82,128],[129,0,82,129],[130,0,82,130],[131,0,82,131]],[[13,0,83,13]],[[12,0,84,12],[16,0,84,16],[17,0,84,17],[27,0,84,27],[28,0,84,28],[32,0,84,32],[33,0,84,33],[37,0,84,37],[52,0,84,52],[53,0,84,53],[62,0,84,62],[64,0,84,64],[66,0,84,66],[68,0,84,68],[72,0,84,72],[73,0,84,73],[74,0,84,74],[75,0,84,75]],[[9,0,85,9]],[[4,0,86,4],[5,0,86,5]],[[4,0,88,4]],[],[],[[7,0,91,7]],[[4,0,92,11],[18,0,92,25]],[[8,0,93,8],[14,0,93,14],[23,0,93,23],[26,0,93,26],[38,0,93,38],[39,0,93,39],[63,0,93,63],[64,0,93,64],[68,0,93,68],[69,0,93,69],[84,0,93,84],[86,0,93,86],[93,0,93,93],[94,0,93,94],[95,0,93,95]],[[8,0,94,8],[12,0,94,12],[21,0,94,21],[23,0,94,23]],[[12,0,95,12],[19,0,95,19],[28,0,95,28],[29,0,95,29],[41,0,95,41],[42,0,95,42],[51,0,95,51],[52,0,95,52],[53,0,95,53]],[[9,0,96,9]],[[13,0,96,15]],[[12,0,97,12],[19,0,97,19],[23,0,97,23],[24,0,97,24]],[[9,0,98,9]],[[4,0,99,4],[5,0,99,5]],[[4,0,101,4]],[],[],[[7,0,104,7]],[[4,0,105,11],[21,0,105,28],[22,0,105,29],[30,0,105,45]],[[8,0,106,8],[14,0,106,14],[23,0,106,23],[26,0,106,26],[38,0,106,38],[39,0,106,39],[63,0,106,63],[64,0,106,64],[68,0,106,68],[69,0,106,69],[84,0,106,84],[86,0,106,86],[93,0,106,93],[94,0,106,94],[95,0,106,95]],[[8,0,107,8],[12,0,107,12],[21,0,107,21],[23,0,107,23]],[[12,0,108,12],[21,0,108,21],[22,0,108,22],[34,0,108,34],[35,0,108,35],[44,0,108,44],[46,0,108,46],[54,0,108,54],[55,0,108,55],[56,0,108,56]],[[9,0,109,9]],[[4,0,110,4],[5,0,110,5]],[[4,0,112,4]],[],[],[[7,0,115,7]],[[4,0,116,11],[18,0,116,25]],[[8,0,117,8],[14,0,117,14],[23,0,117,23],[26,0,117,26],[38,0,117,38],[39,0,117,39],[63,0,117,63],[64,0,117,64],[68,0,117,68],[69,0,117,69],[84,0,117,84],[86,0,117,86],[93,0,117,93],[94,0,117,94],[95,0,117,95]],[[8,0,118,8],[12,0,118,12],[21,0,118,21],[23,0,118,23]],[[12,0,119,12],[19,0,119,19],[28,0,119,28],[29,0,119,29],[41,0,119,41],[42,0,119,42],[51,0,119,51],[52,0,119,52],[53,0,119,53]],[[9,0,120,9]],[[13,0,120,15]],[[12,0,121,12],[19,0,121,19],[23,0,121,23],[24,0,121,24]],[[9,0,122,9]],[[4,0,123,4],[5,0,123,5]],[[4,0,125,4]],[],[],[[7,0,128,7]],[[4,0,129,11],[21,0,129,28],[22,0,129,29],[30,0,129,45]],[[8,0,130,8],[14,0,130,14],[23,0,130,23],[26,0,130,26],[38,0,130,38],[39,0,130,39],[63,0,130,63],[64,0,130,64],[68,0,130,68],[69,0,130,69],[84,0,130,84],[86,0,130,86],[93,0,130,93],[94,0,130,94],[95,0,130,95]],[[8,0,131,8],[12,0,131,12],[21,0,131,21],[23,0,131,23]],[[12,0,132,12],[21,0,132,21],[22,0,132,22],[34,0,132,34],[35,0,132,35],[44,0,132,44],[46,0,132,46],[54,0,132,54],[55,0,132,55],[56,0,132,56]],[[9,0,133,9]],[[4,0,134,4],[5,0,134,5]],[[4,0,136,4]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,157,7]],[[4,0,158,4],[22,0,158,22],[23,0,158,23],[39,0,158,51],[41,0,158,53],[54,0,158,75],[56,0,158,77],[67,0,158,97],[69,0,158,99],[87,0,158,130]],[[8,0,160,8],[12,0,160,12],[16,0,160,16],[17,0,160,17],[32,0,160,32],[33,0,160,33],[49,0,160,49],[50,0,160,50],[52,0,160,52],[53,0,160,53],[55,0,160,55]],[[12,0,161,12],[18,0,161,18],[22,0,161,22],[27,0,161,27],[28,0,161,28],[34,0,161,34],[35,0,161,35],[91,0,161,91],[93,0,161,93],[109,0,161,109],[110,0,161,110],[112,0,161,112],[113,0,161,113],[114,0,161,114],[115,0,161,115]],[[9,0,162,9]],[[8,0,163,8],[14,0,163,14],[19,0,163,19],[22,0,163,43],[38,0,163,60],[39,0,163,61],[62,0,163,84],[63,0,163,85],[76,0,163,98],[78,0,163,100],[89,0,163,111],[91,0,163,113],[95,0,163,117],[96,0,163,118],[97,0,163,119]],[[8,0,164,8],[14,0,164,14],[25,0,164,25],[28,0,164,28],[40,0,164,40],[41,0,164,41],[65,0,164,65],[66,0,164,66],[70,0,164,70],[71,0,164,71],[86,0,164,86],[88,0,164,88],[94,0,164,94],[95,0,164,95],[96,0,164,96]],[[8,0,165,8],[12,0,165,12],[13,0,165,13],[24,0,165,24],[26,0,165,26]],[[12,0,166,12],[18,0,166,18],[22,0,166,22],[27,0,166,27],[28,0,166,28],[34,0,166,34],[35,0,166,35],[108,0,166,108],[110,0,166,110],[114,0,166,114],[115,0,166,115],[124,0,166,124],[125,0,166,125],[126,0,166,126],[127,0,166,127]],[[9,0,167,9]],[[8,0,168,8],[12,0,168,12],[20,0,168,20],[23,0,168,23],[28,0,168,28],[29,0,168,29]],[[8,0,169,8],[12,0,169,12],[36,0,169,36],[39,0,169,39],[44,0,169,44],[45,0,169,45]],[[8,0,170,8],[12,0,170,12],[13,0,170,13],[14,0,170,14],[32,0,170,32],[34,0,170,34]],[[12,0,171,12],[18,0,171,18],[32,0,171,32],[35,0,171,35],[39,0,171,39],[40,0,171,40],[55,0,171,55],[56,0,171,56],[74,0,171,74],[75,0,171,75],[77,0,171,77],[78,0,171,78],[79,0,171,79]],[[12,0,172,12],[16,0,172,16],[17,0,172,17],[18,0,172,18],[32,0,172,32],[34,0,172,34]],[[16,0,173,16],[40,0,173,40],[43,0,173,43],[47,0,173,47],[48,0,173,48]],[[13,0,174,13]],[[9,0,175,9]],[[8,0,176,8],[12,0,176,12],[30,0,176,30],[35,0,176,35],[44,0,176,44],[48,0,176,48],[49,0,176,49],[67,0,176,67],[71,0,176,71],[72,0,176,72],[96,0,176,96],[97,0,176,97],[99,0,176,99]],[[12,0,177,12],[23,0,177,23],[24,0,177,24],[35,0,177,35],[36,0,177,36],[41,0,177,41],[42,0,177,42],[54,0,177,54],[56,0,177,56],[57,0,177,57],[58,0,177,58]],[[12,0,178,12],[20,0,178,20],[23,0,178,23],[27,0,178,27],[28,0,178,28]],[[9,0,179,9]],[[13,0,179,15],[17,0,179,19],[35,0,179,37],[40,0,179,42],[44,0,179,46],[46,0,179,48]],[[12,0,180,12],[18,0,180,18],[34,0,180,34],[37,0,180,37],[49,0,180,49],[50,0,180,50],[74,0,180,74],[75,0,180,75],[79,0,180,79],[80,0,180,80],[95,0,180,95],[97,0,180,97],[103,0,180,103],[104,0,180,104],[105,0,180,105]],[[12,0,181,12],[16,0,181,16],[32,0,181,32],[34,0,181,34]],[[16,0,182,16],[28,0,182,28],[29,0,182,29],[41,0,182,41],[42,0,182,42],[47,0,182,47],[48,0,182,48],[60,0,182,60],[62,0,182,62],[64,0,182,64],[80,0,182,80],[81,0,182,81],[82,0,182,82]],[[16,0,183,16],[24,0,183,24],[27,0,183,27],[31,0,183,31],[32,0,183,32]],[[13,0,184,13]],[[17,0,184,19]],[[16,0,185,16],[74,0,185,74]],[[16,0,186,16],[27,0,186,27],[28,0,186,28],[39,0,186,39],[40,0,186,40],[45,0,186,45],[46,0,186,46],[58,0,186,58],[60,0,186,60],[61,0,186,61],[62,0,186,62]],[[16,0,187,16],[24,0,187,24],[27,0,187,27],[31,0,187,31],[32,0,187,32]],[[13,0,188,13]],[[9,0,189,9]],[[13,0,189,15]],[[12,0,190,12],[18,0,190,18],[32,0,190,32],[35,0,190,35],[47,0,190,47],[48,0,190,48],[72,0,190,72],[73,0,190,73],[77,0,190,77],[78,0,190,78],[93,0,190,93],[95,0,190,95],[101,0,190,101],[103,0,190,103],[121,0,190,121],[122,0,190,122],[124,0,190,124],[125,0,190,125],[126,0,190,126]],[[12,0,191,12],[16,0,191,16],[30,0,191,30],[32,0,191,32]],[[16,0,192,16],[28,0,192,28],[29,0,192,29],[40,0,192,40],[41,0,192,41],[46,0,192,46],[47,0,192,47],[59,0,192,59],[61,0,192,61],[63,0,192,63],[77,0,192,77],[78,0,192,78],[79,0,192,79]],[[16,0,193,16],[24,0,193,24],[27,0,193,27],[31,0,193,31],[32,0,193,32]],[[13,0,194,13]],[[9,0,195,9]],[[8,0,196,8],[12,0,196,12],[20,0,196,20],[22,0,196,22]],[[12,0,197,12],[16,0,197,16],[17,0,197,17],[41,0,197,41],[43,0,197,43],[44,0,197,44]],[[12,0,198,12],[16,0,198,16],[17,0,198,17],[27,0,198,27],[28,0,198,28],[32,0,198,32],[33,0,198,33],[38,0,198,38],[39,0,198,39],[40,0,198,40]],[[12,0,199,12],[16,0,199,16],[17,0,199,17],[29,0,199,29],[31,0,199,31],[32,0,199,32]],[[12,0,200,12],[19,0,200,19],[24,0,200,24],[25,0,200,25]],[[9,0,201,9]],[[13,0,201,15]],[[12,0,202,12],[19,0,202,19],[23,0,202,23],[24,0,202,24]],[[9,0,203,9]],[[4,0,204,4],[5,0,204,5]],[[4,0,206,4]],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,219,7]],[[4,0,220,11],[32,0,220,39],[33,0,220,40],[37,0,220,52],[39,0,220,54],[47,0,220,70],[49,0,220,72],[62,0,220,94],[64,0,220,96],[75,0,220,116]],[[8,0,222,8],[14,0,222,14],[29,0,222,29],[32,0,222,32],[36,0,222,36],[46,0,222,46],[47,0,222,47],[51,0,222,51],[52,0,222,52],[65,0,222,65],[67,0,222,67],[69,0,222,69],[77,0,222,77],[79,0,222,79],[83,0,222,83],[84,0,222,84],[92,0,222,92],[94,0,222,94],[95,0,222,95],[96,0,222,96]],[[8,0,223,8],[23,0,223,23],[24,0,223,24],[52,0,223,52],[53,0,223,53],[57,0,223,57],[58,0,223,58],[71,0,223,71],[72,0,223,72],[73,0,223,73]],[[8,0,224,8],[23,0,224,23],[24,0,224,24],[51,0,224,51],[52,0,224,52],[56,0,224,56],[57,0,224,57],[69,0,224,69],[70,0,224,70],[71,0,224,71]],[[8,0,225,8],[23,0,225,23],[24,0,225,24],[41,0,225,41],[42,0,225,42],[46,0,225,46],[47,0,225,47],[48,0,225,48]],[[8,0,226,8],[23,0,226,23],[24,0,226,24],[40,0,226,40],[41,0,226,41],[42,0,226,42],[51,0,226,63],[53,0,226,65],[55,0,226,67]],[[12,0,227,33],[21,0,227,43],[22,0,227,44],[39,0,227,61],[40,0,227,62],[53,0,227,75],[55,0,227,77],[66,0,227,88],[67,0,227,89],[68,0,227,90]],[[8,0,228,8],[9,0,228,9],[10,0,228,10],[11,0,228,11]],[[8,0,229,8],[15,0,229,15],[30,0,229,30],[31,0,229,31]],[[4,0,230,4],[5,0,230,5]],[[1,0,231,1]]],"sourcesContent":["import {format} from 'util';\r\nimport {ITranslationMessagesFile} from '../api/i-translation-messages-file';\r\nimport {ITransUnit} from '../api/i-trans-unit';\r\nimport {FORMAT_XLIFF20, FILETYPE_XLIFF20} from '../api/constants';\r\nimport {DOMUtilities} from './dom-utilities';\r\nimport {Xliff2TransUnit} from './xliff2-trans-unit';\r\nimport {AbstractTranslationMessagesFile} from './abstract-translation-messages-file';\r\nimport {AbstractTransUnit} from './abstract-trans-unit';\r\n/**\r\n * Created by martin on 04.05.2017.\r\n * An XLIFF 2.0 file read from a source file.\r\n * Format definition is: http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\r\n *\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\n\r\nexport class Xliff2File extends AbstractTranslationMessagesFile implements ITranslationMessagesFile {\r\n\r\n    /**\r\n     * Create an XLIFF 2.0-File from source.\r\n     * @param xmlString source read from file.\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return xliff file\r\n     */\r\n    constructor(xmlString: string, path: string, encoding: BufferEncoding ) {\r\n        super();\r\n        this._warnings = [];\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this.initializeFromContent(xmlString, path, encoding);\r\n    }\r\n\r\n    private initializeFromContent(xmlString: string, path: string, encoding: BufferEncoding ): Xliff2File {\r\n        this.parseContent(xmlString, path, encoding);\r\n        const xliffList = this._parsedDocument.getElementsByTagName('xliff');\r\n        if (xliffList.length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff file (should contain an xliff element)', path));\r\n        } else {\r\n            const version = xliffList.item(0).getAttribute('version');\r\n            const expectedVersion = '2.0';\r\n            if (version !== expectedVersion) {\r\n                throw new Error(format('File \"%s\" seems to be no xliff 2 file, version should be %s, found %s',\r\n                    path, expectedVersion, version));\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    public i18nFormat(): string {\r\n        return FORMAT_XLIFF20;\r\n    }\r\n\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 2.0'\r\n     */\r\n    public fileType(): string {\r\n        return FILETYPE_XLIFF20;\r\n    }\r\n\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    protected elementsWithMixedContent(): string[] {\r\n        return ['skeleton', 'note', 'data', 'source', 'target', 'pc', 'mrk'];\r\n    }\r\n\r\n    protected initializeTransUnits() {\r\n        this.transUnits = [];\r\n        const transUnitsInFile = this._parsedDocument.getElementsByTagName('unit');\r\n        for (let i = 0; i < transUnitsInFile.length; i++) {\r\n            const transunit = transUnitsInFile.item(i);\r\n            const id = transunit.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, trans-unit without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new Xliff2TransUnit(transunit, id, this));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get source language.\r\n     * @return source language.\r\n     */\r\n    public sourceLanguage(): string {\r\n        const xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            return xliffElem.getAttribute('srcLang');\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Edit the source language.\r\n     * @param language language\r\n     */\r\n    public setSourceLanguage(language: string) {\r\n        const xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            xliffElem.setAttribute('srcLang', language);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    public targetLanguage(): string {\r\n        const xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            return xliffElem.getAttribute('trgLang');\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    public setTargetLanguage(language: string) {\r\n        const xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            xliffElem.setAttribute('trgLang', language);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    importNewTransUnit(foreignTransUnit: ITransUnit, isDefaultLang: boolean, copyContent: boolean, importAfterElement?: ITransUnit)\r\n        : ITransUnit {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        const newTu = (<AbstractTransUnit> foreignTransUnit).cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        const fileElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (!fileElement) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff 2.0 file (should contain a file element)', this._filename));\r\n        }\r\n        let inserted = false;\r\n        let isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            const insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            fileElement.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        } else if (importAfterElement === null) {\r\n            const firstUnitElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'unit');\r\n            if (firstUnitElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstUnitElement);\r\n                inserted = true;\r\n            } else {\r\n                // no trans-unit, empty file, so add to first file element\r\n                fileElement.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        } else {\r\n            const refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'unit', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    public createTranslationFileForLang(lang: string, filename: string, isDefaultLang: boolean, copyContent: boolean)\r\n        : ITranslationMessagesFile {\r\n        const translationFile = new Xliff2File(this.editedContent(), filename, this.encoding());\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.forEachTransUnit((transUnit: ITransUnit) => {\r\n            (<AbstractTransUnit> transUnit).useSourceAsTarget(isDefaultLang, copyContent);\r\n        });\r\n        return translationFile;\r\n    }\r\n}\r\n"]},"resolvedIds":{"util":{"external":true,"id":"util","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../api/constants":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./dom-utilities":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./abstract-translation-messages-file":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-translation-messages-file.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./xliff2-trans-unit":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff2-trans-unit.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":25998,"body":[{"type":"ImportDeclaration","start":0,"end":41,"specifiers":[{"type":"ImportSpecifier","start":9,"end":26,"imported":{"type":"Identifier","start":9,"end":26,"name":"isNullOrUndefined"},"local":{"type":"Identifier","start":9,"end":26,"name":"isNullOrUndefined"}}],"source":{"type":"Literal","start":34,"end":40,"value":"util","raw":"'util'"}},{"type":"ImportDeclaration","start":43,"end":90,"specifiers":[{"type":"ImportSpecifier","start":52,"end":64,"imported":{"type":"Identifier","start":52,"end":64,"name":"DOMUtilities"},"local":{"type":"Identifier","start":52,"end":64,"name":"DOMUtilities"}}],"source":{"type":"Literal","start":72,"end":89,"value":"./dom-utilities","raw":"'./dom-utilities'"}},{"type":"ImportDeclaration","start":92,"end":150,"specifiers":[{"type":"ImportSpecifier","start":101,"end":118,"imported":{"type":"Identifier","start":101,"end":118,"name":"AbstractTransUnit"},"local":{"type":"Identifier","start":101,"end":118,"name":"AbstractTransUnit"}}],"source":{"type":"Literal","start":126,"end":149,"value":"./abstract-trans-unit","raw":"'./abstract-trans-unit'"}},{"type":"ImportDeclaration","start":152,"end":208,"specifiers":[{"type":"ImportSpecifier","start":161,"end":177,"imported":{"type":"Identifier","start":161,"end":177,"name":"XmbMessageParser"},"local":{"type":"Identifier","start":161,"end":177,"name":"XmbMessageParser"}}],"source":{"type":"Literal","start":185,"end":207,"value":"./xmb-message-parser","raw":"'./xmb-message-parser'"}},{"type":"ExportNamedDeclaration","start":296,"end":8426,"declaration":{"type":"ClassDeclaration","start":303,"end":8426,"id":{"type":"Identifier","start":309,"end":321,"name":"XtbTransUnit"},"superClass":{"type":"Identifier","start":330,"end":347,"name":"AbstractTransUnit"},"body":{"type":"ClassBody","start":348,"end":8426,"body":[{"type":"MethodDefinition","start":355,"end":572,"static":false,"computed":false,"key":{"type":"Identifier","start":355,"end":366,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":366,"end":572,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":367,"end":375,"name":"_element"},{"type":"Identifier","start":377,"end":380,"name":"_id"},{"type":"Identifier","start":382,"end":406,"name":"_translationMessagesFile"},{"type":"Identifier","start":408,"end":434,"name":"_sourceTransUnitFromMaster"}],"body":{"type":"BlockStatement","start":436,"end":572,"body":[{"type":"ExpressionStatement","start":447,"end":494,"expression":{"type":"CallExpression","start":447,"end":493,"callee":{"type":"Super","start":447,"end":452},"arguments":[{"type":"Identifier","start":453,"end":461,"name":"_element"},{"type":"Identifier","start":463,"end":466,"name":"_id"},{"type":"Identifier","start":468,"end":492,"name":"_translationMessagesFile"}],"optional":false}},{"type":"ExpressionStatement","start":504,"end":565,"expression":{"type":"AssignmentExpression","start":504,"end":564,"operator":"=","left":{"type":"MemberExpression","start":504,"end":535,"object":{"type":"ThisExpression","start":504,"end":508},"property":{"type":"Identifier","start":509,"end":535,"name":"_sourceTransUnitFromMaster"},"computed":false,"optional":false},"right":{"type":"Identifier","start":538,"end":564,"name":"_sourceTransUnitFromMaster"}}}]}}},{"type":"MethodDefinition","start":708,"end":913,"static":false,"computed":false,"key":{"type":"Identifier","start":708,"end":721,"name":"sourceContent"},"kind":"method","value":{"type":"FunctionExpression","start":721,"end":913,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":724,"end":913,"body":[{"type":"IfStatement","start":735,"end":906,"test":{"type":"MemberExpression","start":739,"end":770,"object":{"type":"ThisExpression","start":739,"end":743},"property":{"type":"Identifier","start":744,"end":770,"name":"_sourceTransUnitFromMaster"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":772,"end":853,"body":[{"type":"ReturnStatement","start":787,"end":842,"argument":{"type":"CallExpression","start":794,"end":841,"callee":{"type":"MemberExpression","start":794,"end":839,"object":{"type":"MemberExpression","start":794,"end":825,"object":{"type":"ThisExpression","start":794,"end":798},"property":{"type":"Identifier","start":799,"end":825,"name":"_sourceTransUnitFromMaster"},"computed":false,"optional":false},"property":{"type":"Identifier","start":826,"end":839,"name":"sourceContent"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":{"type":"BlockStatement","start":868,"end":906,"body":[{"type":"ReturnStatement","start":883,"end":895,"argument":{"type":"Literal","start":890,"end":894,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":1119,"end":1177,"static":false,"computed":false,"key":{"type":"Identifier","start":1119,"end":1143,"name":"supportsSetSourceContent"},"kind":"method","value":{"type":"FunctionExpression","start":1143,"end":1177,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1146,"end":1177,"body":[{"type":"ReturnStatement","start":1157,"end":1170,"argument":{"type":"Literal","start":1164,"end":1169,"value":false,"raw":"false"}}]}}},{"type":"MethodDefinition","start":1427,"end":1531,"static":false,"computed":false,"key":{"type":"Identifier","start":1427,"end":1443,"name":"setSourceContent"},"kind":"method","value":{"type":"FunctionExpression","start":1443,"end":1531,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1444,"end":1454,"name":"newContent"}],"body":{"type":"BlockStatement","start":1456,"end":1531,"body":[]}}},{"type":"MethodDefinition","start":1609,"end":1702,"static":false,"computed":false,"key":{"type":"Identifier","start":1609,"end":1622,"name":"messageParser"},"kind":"method","value":{"type":"FunctionExpression","start":1622,"end":1702,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1625,"end":1702,"body":[{"type":"ReturnStatement","start":1636,"end":1666,"argument":{"type":"NewExpression","start":1643,"end":1665,"callee":{"type":"Identifier","start":1647,"end":1663,"name":"XmbMessageParser"},"arguments":[]}}]}}},{"type":"MethodDefinition","start":1808,"end":2045,"static":false,"computed":false,"key":{"type":"Identifier","start":1808,"end":1837,"name":"createSourceContentNormalized"},"kind":"method","value":{"type":"FunctionExpression","start":1837,"end":2045,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1840,"end":2045,"body":[{"type":"IfStatement","start":1851,"end":2038,"test":{"type":"MemberExpression","start":1855,"end":1886,"object":{"type":"ThisExpression","start":1855,"end":1859},"property":{"type":"Identifier","start":1860,"end":1886,"name":"_sourceTransUnitFromMaster"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":1888,"end":1985,"body":[{"type":"ReturnStatement","start":1903,"end":1974,"argument":{"type":"CallExpression","start":1910,"end":1973,"callee":{"type":"MemberExpression","start":1910,"end":1971,"object":{"type":"MemberExpression","start":1910,"end":1941,"object":{"type":"ThisExpression","start":1910,"end":1914},"property":{"type":"Identifier","start":1915,"end":1941,"name":"_sourceTransUnitFromMaster"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1942,"end":1971,"name":"createSourceContentNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":{"type":"BlockStatement","start":2000,"end":2038,"body":[{"type":"ReturnStatement","start":2015,"end":2027,"argument":{"type":"Literal","start":2022,"end":2026,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":2160,"end":2243,"static":false,"computed":false,"key":{"type":"Identifier","start":2160,"end":2173,"name":"targetContent"},"kind":"method","value":{"type":"FunctionExpression","start":2173,"end":2243,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2176,"end":2243,"body":[{"type":"ReturnStatement","start":2187,"end":2236,"argument":{"type":"CallExpression","start":2194,"end":2235,"callee":{"type":"MemberExpression","start":2194,"end":2220,"object":{"type":"Identifier","start":2194,"end":2206,"name":"DOMUtilities"},"property":{"type":"Identifier","start":2207,"end":2220,"name":"getXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2221,"end":2234,"object":{"type":"ThisExpression","start":2221,"end":2225},"property":{"type":"Identifier","start":2226,"end":2234,"name":"_element"},"computed":false,"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":2423,"end":2573,"static":false,"computed":false,"key":{"type":"Identifier","start":2423,"end":2446,"name":"targetContentNormalized"},"kind":"method","value":{"type":"FunctionExpression","start":2446,"end":2573,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2449,"end":2573,"body":[{"type":"ReturnStatement","start":2460,"end":2566,"argument":{"type":"CallExpression","start":2467,"end":2565,"callee":{"type":"MemberExpression","start":2467,"end":2518,"object":{"type":"CallExpression","start":2467,"end":2487,"callee":{"type":"MemberExpression","start":2467,"end":2485,"object":{"type":"ThisExpression","start":2467,"end":2471},"property":{"type":"Identifier","start":2472,"end":2485,"name":"messageParser"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":2488,"end":2518,"name":"createNormalizedMessageFromXML"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":2519,"end":2532,"object":{"type":"ThisExpression","start":2519,"end":2523},"property":{"type":"Identifier","start":2524,"end":2532,"name":"_element"},"computed":false,"optional":false},{"type":"CallExpression","start":2534,"end":2564,"callee":{"type":"MemberExpression","start":2534,"end":2562,"object":{"type":"ThisExpression","start":2534,"end":2538},"property":{"type":"Identifier","start":2539,"end":2562,"name":"sourceContentNormalized"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}]}}},{"type":"MethodDefinition","start":2770,"end":3203,"static":false,"computed":false,"key":{"type":"Identifier","start":2770,"end":2787,"name":"nativeTargetState"},"kind":"method","value":{"type":"FunctionExpression","start":2787,"end":3203,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2790,"end":3203,"body":[{"type":"IfStatement","start":2801,"end":3150,"test":{"type":"MemberExpression","start":2805,"end":2836,"object":{"type":"ThisExpression","start":2805,"end":2809},"property":{"type":"Identifier","start":2810,"end":2836,"name":"_sourceTransUnitFromMaster"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":2838,"end":3150,"body":[{"type":"VariableDeclaration","start":2853,"end":2923,"declarations":[{"type":"VariableDeclarator","start":2859,"end":2922,"id":{"type":"Identifier","start":2859,"end":2872,"name":"sourceContent"},"init":{"type":"CallExpression","start":2875,"end":2922,"callee":{"type":"MemberExpression","start":2875,"end":2920,"object":{"type":"MemberExpression","start":2875,"end":2906,"object":{"type":"ThisExpression","start":2875,"end":2879},"property":{"type":"Identifier","start":2880,"end":2906,"name":"_sourceTransUnitFromMaster"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2907,"end":2920,"name":"sourceContent"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":2937,"end":3139,"test":{"type":"LogicalExpression","start":2941,"end":3022,"left":{"type":"LogicalExpression","start":2941,"end":2997,"left":{"type":"UnaryExpression","start":2941,"end":2955,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":2942,"end":2955,"name":"sourceContent"}},"operator":"||","right":{"type":"BinaryExpression","start":2959,"end":2997,"left":{"type":"Identifier","start":2959,"end":2972,"name":"sourceContent"},"operator":"===","right":{"type":"CallExpression","start":2977,"end":2997,"callee":{"type":"MemberExpression","start":2977,"end":2995,"object":{"type":"ThisExpression","start":2977,"end":2981},"property":{"type":"Identifier","start":2982,"end":2995,"name":"targetContent"},"computed":false,"optional":false},"arguments":[],"optional":false}}},"operator":"||","right":{"type":"UnaryExpression","start":3001,"end":3022,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":3002,"end":3022,"callee":{"type":"MemberExpression","start":3002,"end":3020,"object":{"type":"ThisExpression","start":3002,"end":3006},"property":{"type":"Identifier","start":3007,"end":3020,"name":"targetContent"},"computed":false,"optional":false},"arguments":[],"optional":false}}},"consequent":{"type":"BlockStatement","start":3024,"end":3071,"body":[{"type":"ReturnStatement","start":3043,"end":3056,"argument":{"type":"Literal","start":3050,"end":3055,"value":"new","raw":"'new'"}}]},"alternate":{"type":"BlockStatement","start":3090,"end":3139,"body":[{"type":"ReturnStatement","start":3109,"end":3124,"argument":{"type":"Literal","start":3116,"end":3123,"value":"final","raw":"'final'"}}]}}]},"alternate":null},{"type":"ReturnStatement","start":3160,"end":3172,"argument":{"type":"Literal","start":3167,"end":3171,"value":null,"raw":"null"}}]}}},{"type":"MethodDefinition","start":3520,"end":3580,"static":false,"computed":false,"key":{"type":"Identifier","start":3520,"end":3541,"name":"mapStateToNativeState"},"kind":"method","value":{"type":"FunctionExpression","start":3541,"end":3580,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3542,"end":3547,"name":"state"}],"body":{"type":"BlockStatement","start":3549,"end":3580,"body":[{"type":"ReturnStatement","start":3560,"end":3573,"argument":{"type":"Identifier","start":3567,"end":3572,"name":"state"}}]}}},{"type":"MethodDefinition","start":3777,"end":3849,"static":false,"computed":false,"key":{"type":"Identifier","start":3777,"end":3798,"name":"mapNativeStateToState"},"kind":"method","value":{"type":"FunctionExpression","start":3798,"end":3849,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3799,"end":3810,"name":"nativeState"}],"body":{"type":"BlockStatement","start":3812,"end":3849,"body":[{"type":"ReturnStatement","start":3823,"end":3842,"argument":{"type":"Identifier","start":3830,"end":3841,"name":"nativeState"}}]}}},{"type":"MethodDefinition","start":3969,"end":4060,"static":false,"computed":false,"key":{"type":"Identifier","start":3969,"end":3989,"name":"setNativeTargetState"},"kind":"method","value":{"type":"FunctionExpression","start":3989,"end":4060,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3990,"end":4001,"name":"nativeState"}],"body":{"type":"BlockStatement","start":4003,"end":4060,"body":[]}}},{"type":"MethodDefinition","start":4498,"end":4707,"static":false,"computed":false,"key":{"type":"Identifier","start":4498,"end":4514,"name":"sourceReferences"},"kind":"method","value":{"type":"FunctionExpression","start":4514,"end":4707,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":4517,"end":4707,"body":[{"type":"IfStatement","start":4528,"end":4700,"test":{"type":"MemberExpression","start":4532,"end":4563,"object":{"type":"ThisExpression","start":4532,"end":4536},"property":{"type":"Identifier","start":4537,"end":4563,"name":"_sourceTransUnitFromMaster"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":4565,"end":4649,"body":[{"type":"ReturnStatement","start":4580,"end":4638,"argument":{"type":"CallExpression","start":4587,"end":4637,"callee":{"type":"MemberExpression","start":4587,"end":4635,"object":{"type":"MemberExpression","start":4587,"end":4618,"object":{"type":"ThisExpression","start":4587,"end":4591},"property":{"type":"Identifier","start":4592,"end":4618,"name":"_sourceTransUnitFromMaster"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4619,"end":4635,"name":"sourceReferences"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":{"type":"BlockStatement","start":4664,"end":4700,"body":[{"type":"ReturnStatement","start":4679,"end":4689,"argument":{"type":"ArrayExpression","start":4686,"end":4688,"elements":[]}}]}}]}}},{"type":"MethodDefinition","start":4899,"end":4960,"static":false,"computed":false,"key":{"type":"Identifier","start":4899,"end":4926,"name":"supportsSetSourceReferences"},"kind":"method","value":{"type":"FunctionExpression","start":4926,"end":4960,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":4929,"end":4960,"body":[{"type":"ReturnStatement","start":4940,"end":4953,"argument":{"type":"Literal","start":4947,"end":4952,"value":false,"raw":"false"}}]}}},{"type":"MethodDefinition","start":5228,"end":5332,"static":false,"computed":false,"key":{"type":"Identifier","start":5228,"end":5247,"name":"setSourceReferences"},"kind":"method","value":{"type":"FunctionExpression","start":5247,"end":5332,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5248,"end":5258,"name":"sourceRefs"}],"body":{"type":"BlockStatement","start":5260,"end":5332,"body":[]}}},{"type":"MethodDefinition","start":5509,"end":5710,"static":false,"computed":false,"key":{"type":"Identifier","start":5509,"end":5520,"name":"description"},"kind":"method","value":{"type":"FunctionExpression","start":5520,"end":5710,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":5523,"end":5710,"body":[{"type":"IfStatement","start":5534,"end":5703,"test":{"type":"MemberExpression","start":5538,"end":5569,"object":{"type":"ThisExpression","start":5538,"end":5542},"property":{"type":"Identifier","start":5543,"end":5569,"name":"_sourceTransUnitFromMaster"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":5571,"end":5650,"body":[{"type":"ReturnStatement","start":5586,"end":5639,"argument":{"type":"CallExpression","start":5593,"end":5638,"callee":{"type":"MemberExpression","start":5593,"end":5636,"object":{"type":"MemberExpression","start":5593,"end":5624,"object":{"type":"ThisExpression","start":5593,"end":5597},"property":{"type":"Identifier","start":5598,"end":5624,"name":"_sourceTransUnitFromMaster"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5625,"end":5636,"name":"description"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":{"type":"BlockStatement","start":5665,"end":5703,"body":[{"type":"ReturnStatement","start":5680,"end":5692,"argument":{"type":"Literal","start":5687,"end":5691,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":5951,"end":6144,"static":false,"computed":false,"key":{"type":"Identifier","start":5951,"end":5958,"name":"meaning"},"kind":"method","value":{"type":"FunctionExpression","start":5958,"end":6144,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":5961,"end":6144,"body":[{"type":"IfStatement","start":5972,"end":6137,"test":{"type":"MemberExpression","start":5976,"end":6007,"object":{"type":"ThisExpression","start":5976,"end":5980},"property":{"type":"Identifier","start":5981,"end":6007,"name":"_sourceTransUnitFromMaster"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":6009,"end":6084,"body":[{"type":"ReturnStatement","start":6024,"end":6073,"argument":{"type":"CallExpression","start":6031,"end":6072,"callee":{"type":"MemberExpression","start":6031,"end":6070,"object":{"type":"MemberExpression","start":6031,"end":6062,"object":{"type":"ThisExpression","start":6031,"end":6035},"property":{"type":"Identifier","start":6036,"end":6062,"name":"_sourceTransUnitFromMaster"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6063,"end":6070,"name":"meaning"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":{"type":"BlockStatement","start":6099,"end":6137,"body":[{"type":"ReturnStatement","start":6114,"end":6126,"argument":{"type":"Literal","start":6121,"end":6125,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":6358,"end":6424,"static":false,"computed":false,"key":{"type":"Identifier","start":6358,"end":6390,"name":"supportsSetDescriptionAndMeaning"},"kind":"method","value":{"type":"FunctionExpression","start":6390,"end":6424,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":6393,"end":6424,"body":[{"type":"ReturnStatement","start":6404,"end":6417,"argument":{"type":"Literal","start":6411,"end":6416,"value":false,"raw":"false"}}]}}},{"type":"MethodDefinition","start":6538,"end":6612,"static":false,"computed":false,"key":{"type":"Identifier","start":6538,"end":6552,"name":"setDescription"},"kind":"method","value":{"type":"FunctionExpression","start":6552,"end":6612,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6553,"end":6564,"name":"description"}],"body":{"type":"BlockStatement","start":6566,"end":6612,"body":[]}}},{"type":"MethodDefinition","start":6714,"end":6780,"static":false,"computed":false,"key":{"type":"Identifier","start":6714,"end":6724,"name":"setMeaning"},"kind":"method","value":{"type":"FunctionExpression","start":6724,"end":6780,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6725,"end":6732,"name":"meaning"}],"body":{"type":"BlockStatement","start":6734,"end":6780,"body":[]}}},{"type":"MethodDefinition","start":6883,"end":6919,"static":false,"computed":false,"key":{"type":"Identifier","start":6883,"end":6888,"name":"notes"},"kind":"method","value":{"type":"FunctionExpression","start":6888,"end":6919,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":6891,"end":6919,"body":[{"type":"ReturnStatement","start":6902,"end":6912,"argument":{"type":"ArrayExpression","start":6909,"end":6911,"elements":[]}}]}}},{"type":"MethodDefinition","start":7094,"end":7144,"static":false,"computed":false,"key":{"type":"Identifier","start":7094,"end":7110,"name":"supportsSetNotes"},"kind":"method","value":{"type":"FunctionExpression","start":7110,"end":7144,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":7113,"end":7144,"body":[{"type":"ReturnStatement","start":7124,"end":7137,"argument":{"type":"Literal","start":7131,"end":7136,"value":false,"raw":"false"}}]}}},{"type":"MethodDefinition","start":7276,"end":7341,"static":false,"computed":false,"key":{"type":"Identifier","start":7276,"end":7284,"name":"setNotes"},"kind":"method","value":{"type":"FunctionExpression","start":7284,"end":7341,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7285,"end":7293,"name":"newNotes"}],"body":{"type":"BlockStatement","start":7295,"end":7341,"body":[]}}},{"type":"MethodDefinition","start":7691,"end":7785,"static":false,"computed":false,"key":{"type":"Identifier","start":7691,"end":7714,"name":"cloneWithSourceAsTarget"},"kind":"method","value":{"type":"FunctionExpression","start":7714,"end":7785,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7715,"end":7728,"name":"isDefaultLang"},{"type":"Identifier","start":7730,"end":7741,"name":"copyContent"},{"type":"Identifier","start":7743,"end":7753,"name":"targetFile"}],"body":{"type":"BlockStatement","start":7755,"end":7785,"body":[{"type":"ReturnStatement","start":7766,"end":7778,"argument":{"type":"ThisExpression","start":7773,"end":7777}}]}}},{"type":"MethodDefinition","start":7979,"end":8056,"static":false,"computed":false,"key":{"type":"Identifier","start":7979,"end":7996,"name":"useSourceAsTarget"},"kind":"method","value":{"type":"FunctionExpression","start":7996,"end":8056,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7997,"end":8010,"name":"isDefaultLang"},{"type":"Identifier","start":8012,"end":8023,"name":"copyContent"}],"body":{"type":"BlockStatement","start":8025,"end":8056,"body":[]}}},{"type":"MethodDefinition","start":8185,"end":8423,"static":false,"computed":false,"key":{"type":"Identifier","start":8185,"end":8200,"name":"translateNative"},"kind":"method","value":{"type":"FunctionExpression","start":8200,"end":8423,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":8201,"end":8212,"name":"translation"}],"body":{"type":"BlockStatement","start":8214,"end":8423,"body":[{"type":"VariableDeclaration","start":8225,"end":8254,"declarations":[{"type":"VariableDeclarator","start":8231,"end":8253,"id":{"type":"Identifier","start":8231,"end":8237,"name":"target"},"init":{"type":"MemberExpression","start":8240,"end":8253,"object":{"type":"ThisExpression","start":8240,"end":8244},"property":{"type":"Identifier","start":8245,"end":8253,"name":"_element"},"computed":false,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":8264,"end":8343,"test":{"type":"CallExpression","start":8268,"end":8298,"callee":{"type":"Identifier","start":8268,"end":8285,"name":"isNullOrUndefined"},"arguments":[{"type":"Identifier","start":8286,"end":8297,"name":"translation"}],"optional":false},"consequent":{"type":"BlockStatement","start":8300,"end":8343,"body":[{"type":"ExpressionStatement","start":8315,"end":8332,"expression":{"type":"AssignmentExpression","start":8315,"end":8331,"operator":"=","left":{"type":"Identifier","start":8315,"end":8326,"name":"translation"},"right":{"type":"Literal","start":8329,"end":8331,"value":"","raw":"''"}}}]},"alternate":null},{"type":"ExpressionStatement","start":8353,"end":8416,"expression":{"type":"CallExpression","start":8353,"end":8415,"callee":{"type":"MemberExpression","start":8353,"end":8394,"object":{"type":"Identifier","start":8353,"end":8365,"name":"DOMUtilities"},"property":{"type":"Identifier","start":8366,"end":8394,"name":"replaceContentWithXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":8395,"end":8401,"name":"target"},{"type":"Identifier","start":8403,"end":8414,"name":"translation"}],"optional":false}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":8428,"end":25998}]},"code":"import { isNullOrUndefined } from 'util';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { AbstractTransUnit } from './abstract-trans-unit';\r\nimport { XmbMessageParser } from './xmb-message-parser';\r\n/**\r\n * Created by martin on 23.05.2017.\r\n * A Translation Unit in an XTB file.\r\n */\r\nexport class XtbTransUnit extends AbstractTransUnit {\r\n    constructor(_element, _id, _translationMessagesFile, _sourceTransUnitFromMaster) {\r\n        super(_element, _id, _translationMessagesFile);\r\n        this._sourceTransUnitFromMaster = _sourceTransUnitFromMaster;\r\n    }\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return content to translate.\r\n     */\r\n    sourceContent() {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.sourceContent();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetSourceContent() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    setSourceContent(newContent) {\r\n        // xtb has no source content, they are part of the master\r\n    }\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    messageParser() {\r\n        return new XmbMessageParser(); // no typo!, Same as for Xmb\r\n    }\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    createSourceContentNormalized() {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.createSourceContentNormalized();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    targetContent() {\r\n        return DOMUtilities.getXMLContent(this._element);\r\n    }\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    targetContentNormalized() {\r\n        return this.messageParser().createNormalizedMessageFromXML(this._element, this.sourceContentNormalized());\r\n    }\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * If we have a master, we assumed it is translated if the content is not the same as the masters one.\r\n     */\r\n    nativeTargetState() {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            const sourceContent = this._sourceTransUnitFromMaster.sourceContent();\r\n            if (!sourceContent || sourceContent === this.targetContent() || !this.targetContent()) {\r\n                return 'new';\r\n            }\r\n            else {\r\n                return 'final';\r\n            }\r\n        }\r\n        return null; // not supported in xmb\r\n    }\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    mapStateToNativeState(state) {\r\n        return state;\r\n    }\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    mapNativeStateToState(nativeState) {\r\n        return nativeState;\r\n    }\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param nativeState nativeState\r\n     */\r\n    setNativeTargetState(nativeState) {\r\n        // TODO some logic to store it anywhere\r\n    }\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    sourceReferences() {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.sourceReferences();\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetSourceReferences() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    setSourceReferences(sourceRefs) {\r\n        // xtb has no source refs, they are part of the master\r\n    }\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xtb only the master stores it.\r\n     */\r\n    description() {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.description();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xtb only the master stores it.\r\n     */\r\n    meaning() {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.meaning();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetDescriptionAndMeaning() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    setDescription(description) {\r\n        // not supported, do nothing\r\n    }\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    setMeaning(meaning) {\r\n        // not supported, do nothing\r\n    }\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     */\r\n    notes() {\r\n        return [];\r\n    }\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetNotes() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     */\r\n    setNotes(newNotes) {\r\n        // not supported, do nothing\r\n    }\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xtb there is nothing to do, because there is only a target, no source.\r\n     */\r\n    cloneWithSourceAsTarget(isDefaultLang, copyContent, targetFile) {\r\n        return this;\r\n    }\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    useSourceAsTarget(isDefaultLang, copyContent) {\r\n        // do nothing\r\n    }\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    translateNative(translation) {\r\n        const target = this._element;\r\n        if (isNullOrUndefined(translation)) {\r\n            translation = '';\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, translation);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["util","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-trans-unit.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xmb-message-parser.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xtb-trans-unit.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { isNullOrUndefined } from 'util';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { AbstractTransUnit } from './abstract-trans-unit';\r\nimport { XmbMessageParser } from './xmb-message-parser';\r\n/**\r\n * Created by martin on 23.05.2017.\r\n * A Translation Unit in an XTB file.\r\n */\r\nexport class XtbTransUnit extends AbstractTransUnit {\r\n    constructor(_element, _id, _translationMessagesFile, _sourceTransUnitFromMaster) {\r\n        super(_element, _id, _translationMessagesFile);\r\n        this._sourceTransUnitFromMaster = _sourceTransUnitFromMaster;\r\n    }\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return content to translate.\r\n     */\r\n    sourceContent() {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.sourceContent();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetSourceContent() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    setSourceContent(newContent) {\r\n        // xtb has no source content, they are part of the master\r\n    }\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    messageParser() {\r\n        return new XmbMessageParser(); // no typo!, Same as for Xmb\r\n    }\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    createSourceContentNormalized() {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.createSourceContentNormalized();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    targetContent() {\r\n        return DOMUtilities.getXMLContent(this._element);\r\n    }\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    targetContentNormalized() {\r\n        return this.messageParser().createNormalizedMessageFromXML(this._element, this.sourceContentNormalized());\r\n    }\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * If we have a master, we assumed it is translated if the content is not the same as the masters one.\r\n     */\r\n    nativeTargetState() {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            const sourceContent = this._sourceTransUnitFromMaster.sourceContent();\r\n            if (!sourceContent || sourceContent === this.targetContent() || !this.targetContent()) {\r\n                return 'new';\r\n            }\r\n            else {\r\n                return 'final';\r\n            }\r\n        }\r\n        return null; // not supported in xmb\r\n    }\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    mapStateToNativeState(state) {\r\n        return state;\r\n    }\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    mapNativeStateToState(nativeState) {\r\n        return nativeState;\r\n    }\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param nativeState nativeState\r\n     */\r\n    setNativeTargetState(nativeState) {\r\n        // TODO some logic to store it anywhere\r\n    }\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    sourceReferences() {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.sourceReferences();\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetSourceReferences() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    setSourceReferences(sourceRefs) {\r\n        // xtb has no source refs, they are part of the master\r\n    }\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xtb only the master stores it.\r\n     */\r\n    description() {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.description();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xtb only the master stores it.\r\n     */\r\n    meaning() {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.meaning();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetDescriptionAndMeaning() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    setDescription(description) {\r\n        // not supported, do nothing\r\n    }\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    setMeaning(meaning) {\r\n        // not supported, do nothing\r\n    }\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     */\r\n    notes() {\r\n        return [];\r\n    }\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetNotes() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     */\r\n    setNotes(newNotes) {\r\n        // not supported, do nothing\r\n    }\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xtb there is nothing to do, because there is only a target, no source.\r\n     */\r\n    cloneWithSourceAsTarget(isDefaultLang, copyContent, targetFile) {\r\n        return this;\r\n    }\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    useSourceAsTarget(isDefaultLang, copyContent) {\r\n        // do nothing\r\n    }\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    translateNative(translation) {\r\n        const target = this._element;\r\n        if (isNullOrUndefined(translation)) {\r\n            translation = '';\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, translation);\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"xtb-trans-unit.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/xtb-trans-unit.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,8],[26,0,0,25],[28,0,0,26],[34,0,0,32],[40,0,0,38],[41,0,0,39]],[[0,0,5,0],[7,0,5,7],[9,0,5,8],[21,0,5,20],[23,0,5,21],[29,0,5,27],[46,0,5,44],[47,0,5,45]],[[0,0,6,0],[7,0,6,7],[9,0,6,8],[26,0,6,25],[28,0,6,26],[34,0,6,32],[57,0,6,55],[58,0,6,56]],[[0,0,7,0],[7,0,7,7],[9,0,7,8],[25,0,7,24],[27,0,7,25],[33,0,7,31],[55,0,7,53],[56,0,7,54]],[[0,0,10,0]],[],[],[[3,0,13,3]],[[0,0,15,0],[6,0,15,6],[13,0,15,13],[25,0,15,26],[34,0,15,34],[51,0,15,51]],[[4,0,19,4],[16,0,19,16],[24,0,19,33],[26,0,19,35],[29,0,19,46],[31,0,19,48],[55,0,19,98],[57,0,20,16],[83,0,20,61]],[[8,0,21,8],[13,0,21,13],[14,0,21,14],[22,0,21,22],[24,0,21,24],[27,0,21,27],[29,0,21,29],[53,0,21,53],[54,0,21,54],[55,0,21,55]],[[8,0,22,8],[12,0,22,12],[13,0,22,13],[39,0,22,39],[42,0,22,42],[68,0,22,68],[69,0,22,69]],[[4,0,23,4],[5,0,23,5]],[[4,0,25,4]],[],[],[],[[7,0,29,7]],[[4,0,30,11],[17,0,30,24]],[[8,0,31,8],[12,0,31,12],[16,0,31,16],[17,0,31,17],[43,0,31,43],[45,0,31,45]],[[12,0,32,12],[19,0,32,19],[23,0,32,23],[24,0,32,24],[50,0,32,50],[51,0,32,51],[64,0,32,64],[66,0,32,66],[67,0,32,67]],[[9,0,33,9]],[[13,0,33,15]],[[12,0,34,12],[19,0,34,19],[23,0,34,23],[24,0,34,24]],[[9,0,35,9]],[[4,0,36,4],[5,0,36,5]],[[4,0,38,4]],[],[],[],[[7,0,42,7]],[[4,0,43,4],[28,0,43,28]],[[8,0,44,8],[15,0,44,15],[20,0,44,20],[21,0,44,21]],[[4,0,45,4],[5,0,45,5]],[[4,0,47,4]],[],[],[],[],[[7,0,52,7]],[[4,0,53,11],[20,0,53,27],[21,0,53,28],[31,0,53,46]],[[8,0,54,8],[65,0,54,65]],[[4,0,55,4],[5,0,55,5]],[[4,0,57,4]],[],[[7,0,59,7]],[[4,0,60,14],[17,0,60,27]],[[8,0,61,8],[15,0,61,15],[19,0,61,19],[35,0,61,35],[37,0,61,37],[38,0,61,38],[39,0,61,39],[67,0,61,67]],[[4,0,62,4],[5,0,62,5]],[[4,0,64,4]],[],[[7,0,66,7]],[[4,0,67,11],[33,0,67,40]],[[8,0,68,8],[12,0,68,12],[16,0,68,16],[17,0,68,17],[43,0,68,43],[45,0,68,45]],[[12,0,69,12],[19,0,69,19],[23,0,69,23],[24,0,69,24],[50,0,69,50],[51,0,69,51],[80,0,69,80],[82,0,69,82],[83,0,69,83]],[[9,0,70,9]],[[13,0,70,15]],[[12,0,71,12],[19,0,71,19],[23,0,71,23],[24,0,71,24]],[[9,0,72,9]],[[4,0,73,4],[5,0,73,5]],[[4,0,75,4]],[],[[7,0,77,7]],[[4,0,78,11],[17,0,78,24]],[[8,0,79,8],[15,0,79,15],[27,0,79,27],[28,0,79,28],[41,0,79,41],[42,0,79,42],[46,0,79,46],[47,0,79,47],[55,0,79,55],[56,0,79,56],[57,0,79,57]],[[4,0,80,4],[5,0,80,5]],[[4,0,82,4]],[],[],[[7,0,85,7]],[[4,0,86,4],[27,0,86,27]],[[8,0,87,8],[15,0,87,15],[19,0,87,19],[20,0,87,20],[33,0,87,33],[35,0,87,35],[36,0,87,36],[66,0,87,66],[67,0,87,67],[71,0,87,71],[72,0,87,72],[80,0,87,80],[82,0,87,82],[86,0,87,86],[87,0,87,87],[110,0,87,110],[112,0,87,112],[113,0,87,113],[114,0,87,114]],[[4,0,88,4],[5,0,88,5]],[[4,0,90,4]],[],[],[],[[7,0,94,7]],[[4,0,95,11],[21,0,95,28]],[[8,0,96,8],[12,0,96,12],[16,0,96,16],[17,0,96,17],[43,0,96,43],[45,0,96,45]],[[12,0,97,12],[18,0,97,18],[31,0,97,31],[34,0,97,34],[38,0,97,38],[39,0,97,39],[65,0,97,65],[66,0,97,66],[79,0,97,79],[81,0,97,81],[82,0,97,82]],[[12,0,98,12],[16,0,98,16],[17,0,98,17],[30,0,98,30],[34,0,98,34],[47,0,98,47],[52,0,98,52],[56,0,98,56],[57,0,98,57],[70,0,98,70],[72,0,98,72],[76,0,98,76],[77,0,98,77],[81,0,98,81],[82,0,98,82],[95,0,98,95],[97,0,98,97],[99,0,98,99]],[[16,0,99,16],[23,0,99,23],[28,0,99,28],[29,0,99,29]],[[13,0,100,13]],[[17,0,100,19]],[[16,0,101,16],[23,0,101,23],[30,0,101,30],[31,0,101,31]],[[13,0,102,13]],[[9,0,103,9]],[[8,0,104,8],[15,0,104,15],[19,0,104,19],[20,0,104,20],[21,0,104,21],[44,0,104,44]],[[4,0,105,4],[5,0,105,5]],[[4,0,107,4]],[],[],[],[],[],[[7,0,113,7]],[[4,0,114,14],[25,0,114,35],[26,0,114,36],[31,0,114,49]],[[8,0,115,8],[15,0,115,15],[20,0,115,20],[21,0,115,21]],[[4,0,116,4],[5,0,116,5]],[[4,0,118,4]],[],[],[],[[7,0,122,7]],[[4,0,123,14],[25,0,123,35],[26,0,123,36],[37,0,123,55]],[[8,0,124,8],[15,0,124,15],[26,0,124,26],[27,0,124,27]],[[4,0,125,4],[5,0,125,5]],[[4,0,127,4]],[],[],[],[[7,0,131,7]],[[4,0,132,14],[24,0,132,34],[25,0,132,35],[36,0,132,54]],[[8,0,133,8],[47,0,133,47]],[[4,0,134,4],[5,0,134,5]],[[4,0,136,4]],[],[],[],[],[],[],[[7,0,143,7]],[[4,0,144,11],[20,0,144,27]],[[8,0,145,8],[12,0,145,12],[16,0,145,16],[17,0,145,17],[43,0,145,43],[45,0,145,45]],[[12,0,146,12],[19,0,146,19],[23,0,146,23],[24,0,146,24],[50,0,146,50],[51,0,146,51],[67,0,146,67],[69,0,146,69],[70,0,146,70]],[[9,0,147,9]],[[13,0,147,15]],[[12,0,148,12],[19,0,148,19],[21,0,148,21],[22,0,148,22]],[[9,0,149,9]],[[4,0,150,4],[5,0,150,5]],[[4,0,152,4]],[],[],[],[[7,0,156,7]],[[4,0,157,11],[31,0,157,38]],[[8,0,158,8],[15,0,158,15],[20,0,158,20],[21,0,158,21]],[[4,0,159,4],[5,0,159,5]],[[4,0,161,4]],[],[],[],[],[[7,0,166,7]],[[4,0,167,11],[23,0,167,30],[24,0,167,31],[34,0,167,85]],[[8,0,168,8],[62,0,168,62]],[[4,0,169,4],[5,0,169,5]],[[4,0,171,4]],[],[],[],[[7,0,175,7]],[[4,0,176,11],[15,0,176,22]],[[8,0,177,8],[12,0,177,12],[16,0,177,16],[17,0,177,17],[43,0,177,43],[45,0,177,45]],[[12,0,178,12],[19,0,178,19],[23,0,178,23],[24,0,178,24],[50,0,178,50],[51,0,178,51],[62,0,178,62],[64,0,178,64],[65,0,178,65]],[[9,0,179,9]],[[13,0,179,15]],[[12,0,180,12],[19,0,180,19],[23,0,180,23],[24,0,180,24]],[[9,0,181,9]],[[4,0,182,4],[5,0,182,5]],[[4,0,184,4]],[],[],[],[],[[7,0,189,7]],[[4,0,190,11],[11,0,190,18]],[[8,0,191,8],[12,0,191,12],[16,0,191,16],[17,0,191,17],[43,0,191,43],[45,0,191,45]],[[12,0,192,12],[19,0,192,19],[23,0,192,23],[24,0,192,24],[50,0,192,50],[51,0,192,51],[58,0,192,58],[60,0,192,60],[61,0,192,61]],[[9,0,193,9]],[[13,0,193,15]],[[12,0,194,12],[19,0,194,19],[23,0,194,23],[24,0,194,24]],[[9,0,195,9]],[[4,0,196,4],[5,0,196,5]],[[4,0,198,4]],[],[],[],[[7,0,202,7]],[[4,0,203,11],[36,0,203,43]],[[8,0,204,8],[15,0,204,15],[20,0,204,20],[21,0,204,21]],[[4,0,205,4],[5,0,205,5]],[[4,0,207,4]],[],[],[[7,0,210,7]],[[4,0,211,11],[18,0,211,25],[19,0,211,26],[30,0,211,45]],[[8,0,212,8],[36,0,212,36]],[[4,0,213,4],[5,0,213,5]],[[4,0,215,4]],[],[],[[7,0,218,7]],[[4,0,219,11],[14,0,219,21],[15,0,219,22],[22,0,219,37]],[[8,0,220,8],[36,0,220,36]],[[4,0,221,4],[5,0,221,5]],[[4,0,223,4]],[],[],[[7,0,226,7]],[[4,0,227,11],[9,0,227,16]],[[8,0,228,8],[15,0,228,15],[17,0,228,17],[18,0,228,18]],[[4,0,229,4],[5,0,229,5]],[[4,0,231,4]],[],[],[],[[7,0,235,7]],[[4,0,236,11],[20,0,236,27]],[[8,0,237,8],[15,0,237,15],[20,0,237,20],[21,0,237,21]],[[4,0,238,4],[5,0,238,5]],[[4,0,240,4]],[],[],[],[[7,0,244,7]],[[4,0,245,11],[12,0,245,19],[13,0,245,20],[21,0,245,37]],[[8,0,246,8],[36,0,246,36]],[[4,0,247,4],[5,0,247,5]],[[4,0,249,4]],[],[],[],[],[],[[7,0,255,7]],[[4,0,256,11],[27,0,256,34],[28,0,256,35],[41,0,256,57],[43,0,256,59],[54,0,256,79],[56,0,256,81],[66,0,256,117]],[[8,0,257,8],[15,0,257,15],[19,0,257,19],[20,0,257,20]],[[4,0,258,4],[5,0,258,5]],[[4,0,260,4]],[],[],[[7,0,263,7]],[[4,0,264,11],[21,0,264,28],[22,0,264,29],[35,0,264,51],[37,0,264,53],[48,0,264,73]],[[8,0,265,8],[21,0,265,21]],[[4,0,266,4],[5,0,266,5]],[[4,0,268,4]],[],[],[[7,0,271,7]],[[4,0,272,14],[19,0,272,29],[20,0,272,30],[31,0,272,49]],[[8,0,273,8],[14,0,273,14],[20,0,273,20],[23,0,273,23],[27,0,273,27],[28,0,273,28],[36,0,273,36],[37,0,273,37]],[[8,0,274,8],[12,0,274,12],[29,0,274,29],[30,0,274,30],[41,0,274,41],[42,0,274,42],[44,0,274,44]],[[12,0,275,12],[23,0,275,23],[26,0,275,26],[28,0,275,28],[29,0,275,29]],[[9,0,276,9]],[[8,0,277,8],[20,0,277,20],[21,0,277,21],[49,0,277,49],[50,0,277,50],[56,0,277,56],[58,0,277,58],[69,0,277,69],[70,0,277,70],[71,0,277,71]],[[4,0,278,4],[5,0,278,5]],[[1,0,280,1]]],"sourcesContent":["import {isNullOrUndefined} from 'util';\r\nimport {ITranslationMessagesFile} from '../api/i-translation-messages-file';\r\nimport {INormalizedMessage} from '../api/i-normalized-message';\r\nimport {ITransUnit} from '../api/i-trans-unit';\r\nimport {INote} from '../api/i-note';\r\nimport {DOMUtilities} from './dom-utilities';\r\nimport {AbstractTransUnit} from './abstract-trans-unit';\r\nimport {XmbMessageParser} from './xmb-message-parser';\r\nimport {ParsedMessage} from './parsed-message';\r\nimport {AbstractMessageParser} from './abstract-message-parser';\r\n/**\r\n * Created by martin on 23.05.2017.\r\n * A Translation Unit in an XTB file.\r\n */\r\n\r\nexport class XtbTransUnit extends AbstractTransUnit implements ITransUnit {\r\n\r\n    private _sourceTransUnitFromMaster: AbstractTransUnit;\r\n\r\n    constructor(_element: Element, _id: string, _translationMessagesFile: ITranslationMessagesFile,\r\n                _sourceTransUnitFromMaster: AbstractTransUnit) {\r\n        super(_element, _id, _translationMessagesFile);\r\n        this._sourceTransUnitFromMaster = _sourceTransUnitFromMaster;\r\n    }\r\n\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return content to translate.\r\n     */\r\n    public sourceContent(): string {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.sourceContent();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    supportsSetSourceContent(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    public setSourceContent(newContent: string) {\r\n        // xtb has no source content, they are part of the master\r\n    }\r\n\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    protected messageParser(): AbstractMessageParser {\r\n        return new XmbMessageParser(); // no typo!, Same as for Xmb\r\n    }\r\n\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    public createSourceContentNormalized(): ParsedMessage {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.createSourceContentNormalized();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    public targetContent(): string {\r\n        return DOMUtilities.getXMLContent(this._element);\r\n    }\r\n\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    targetContentNormalized(): INormalizedMessage {\r\n        return this.messageParser().createNormalizedMessageFromXML(this._element, this.sourceContentNormalized());\r\n    }\r\n\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * If we have a master, we assumed it is translated if the content is not the same as the masters one.\r\n     */\r\n    public nativeTargetState(): string {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            const sourceContent = this._sourceTransUnitFromMaster.sourceContent();\r\n            if (!sourceContent || sourceContent === this.targetContent() || !this.targetContent()) {\r\n                return 'new';\r\n            } else {\r\n                return 'final';\r\n            }\r\n        }\r\n        return null; // not supported in xmb\r\n    }\r\n\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    protected mapStateToNativeState(state: string): string {\r\n        return state;\r\n    }\r\n\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    protected mapNativeStateToState(nativeState: string): string {\r\n        return nativeState;\r\n    }\r\n\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param nativeState nativeState\r\n     */\r\n    protected setNativeTargetState(nativeState: string) {\r\n        // TODO some logic to store it anywhere\r\n    }\r\n\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    public sourceReferences(): { sourcefile: string, linenumber: number }[] {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.sourceReferences();\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    public supportsSetSourceReferences(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    public setSourceReferences(sourceRefs: {sourcefile: string, linenumber: number}[]) {\r\n        // xtb has no source refs, they are part of the master\r\n    }\r\n\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xtb only the master stores it.\r\n     */\r\n    public description(): string {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.description();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xtb only the master stores it.\r\n     */\r\n    public meaning(): string {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.meaning();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    public supportsSetDescriptionAndMeaning(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    public setDescription(description: string) {\r\n        // not supported, do nothing\r\n    }\r\n\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    public setMeaning(meaning: string) {\r\n        // not supported, do nothing\r\n    }\r\n\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     */\r\n    public notes(): INote[] {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    public supportsSetNotes(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     */\r\n    public setNotes(newNotes: INote[]) {\r\n        // not supported, do nothing\r\n    }\r\n\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xtb there is nothing to do, because there is only a target, no source.\r\n     */\r\n    public cloneWithSourceAsTarget(isDefaultLang: boolean, copyContent: boolean, targetFile: ITranslationMessagesFile): AbstractTransUnit {\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    public useSourceAsTarget(isDefaultLang: boolean, copyContent: boolean) {\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    protected translateNative(translation: string) {\r\n        const target = this._element;\r\n        if (isNullOrUndefined(translation)) {\r\n            translation = '';\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, translation);\r\n    }\r\n\r\n}\r\n"]},"resolvedIds":{"util":{"external":true,"id":"util","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./abstract-trans-unit":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-trans-unit.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./dom-utilities":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./xmb-message-parser":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xmb-message-parser.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":34214,"body":[{"type":"ImportDeclaration","start":0,"end":72,"specifiers":[{"type":"ImportSpecifier","start":9,"end":19,"imported":{"type":"Identifier","start":9,"end":19,"name":"FORMAT_XTB"},"local":{"type":"Identifier","start":9,"end":19,"name":"FORMAT_XTB"}},{"type":"ImportSpecifier","start":21,"end":33,"imported":{"type":"Identifier","start":21,"end":33,"name":"FILETYPE_XTB"},"local":{"type":"Identifier","start":21,"end":33,"name":"FILETYPE_XTB"}},{"type":"ImportSpecifier","start":35,"end":45,"imported":{"type":"Identifier","start":35,"end":45,"name":"FORMAT_XMB"},"local":{"type":"Identifier","start":35,"end":45,"name":"FORMAT_XMB"}}],"source":{"type":"Literal","start":53,"end":71,"value":"../api/constants","raw":"'../api/constants'"}},{"type":"ImportDeclaration","start":74,"end":104,"specifiers":[{"type":"ImportSpecifier","start":83,"end":89,"imported":{"type":"Identifier","start":83,"end":89,"name":"format"},"local":{"type":"Identifier","start":83,"end":89,"name":"format"}}],"source":{"type":"Literal","start":97,"end":103,"value":"util","raw":"'util'"}},{"type":"ImportDeclaration","start":106,"end":153,"specifiers":[{"type":"ImportSpecifier","start":115,"end":127,"imported":{"type":"Identifier","start":115,"end":127,"name":"DOMUtilities"},"local":{"type":"Identifier","start":115,"end":127,"name":"DOMUtilities"}}],"source":{"type":"Literal","start":135,"end":152,"value":"./dom-utilities","raw":"'./dom-utilities'"}},{"type":"ImportDeclaration","start":155,"end":242,"specifiers":[{"type":"ImportSpecifier","start":164,"end":195,"imported":{"type":"Identifier","start":164,"end":195,"name":"AbstractTranslationMessagesFile"},"local":{"type":"Identifier","start":164,"end":195,"name":"AbstractTranslationMessagesFile"}}],"source":{"type":"Literal","start":203,"end":241,"value":"./abstract-translation-messages-file","raw":"'./abstract-translation-messages-file'"}},{"type":"ImportDeclaration","start":244,"end":292,"specifiers":[{"type":"ImportSpecifier","start":253,"end":265,"imported":{"type":"Identifier","start":253,"end":265,"name":"XtbTransUnit"},"local":{"type":"Identifier","start":253,"end":265,"name":"XtbTransUnit"}}],"source":{"type":"Literal","start":273,"end":291,"value":"./xtb-trans-unit","raw":"'./xtb-trans-unit'"}},{"type":"ExportNamedDeclaration","start":408,"end":10578,"declaration":{"type":"ClassDeclaration","start":415,"end":10578,"id":{"type":"Identifier","start":421,"end":428,"name":"XtbFile"},"superClass":{"type":"Identifier","start":437,"end":468,"name":"AbstractTranslationMessagesFile"},"body":{"type":"ClassBody","start":469,"end":10578,"body":[{"type":"MethodDefinition","start":1094,"end":1448,"static":false,"computed":false,"key":{"type":"Identifier","start":1094,"end":1105,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":1105,"end":1448,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1106,"end":1136,"name":"_translationMessageFileFactory"},{"type":"Identifier","start":1138,"end":1147,"name":"xmlString"},{"type":"Identifier","start":1149,"end":1153,"name":"path"},{"type":"Identifier","start":1155,"end":1163,"name":"encoding"},{"type":"Identifier","start":1165,"end":1179,"name":"optionalMaster"}],"body":{"type":"BlockStatement","start":1181,"end":1448,"body":[{"type":"ExpressionStatement","start":1192,"end":1200,"expression":{"type":"CallExpression","start":1192,"end":1199,"callee":{"type":"Super","start":1192,"end":1197},"arguments":[],"optional":false}},{"type":"ExpressionStatement","start":1210,"end":1279,"expression":{"type":"AssignmentExpression","start":1210,"end":1278,"operator":"=","left":{"type":"MemberExpression","start":1210,"end":1245,"object":{"type":"ThisExpression","start":1210,"end":1214},"property":{"type":"Identifier","start":1215,"end":1245,"name":"_translationMessageFileFactory"},"computed":false,"optional":false},"right":{"type":"Identifier","start":1248,"end":1278,"name":"_translationMessageFileFactory"}}},{"type":"ExpressionStatement","start":1289,"end":1309,"expression":{"type":"AssignmentExpression","start":1289,"end":1308,"operator":"=","left":{"type":"MemberExpression","start":1289,"end":1303,"object":{"type":"ThisExpression","start":1289,"end":1293},"property":{"type":"Identifier","start":1294,"end":1303,"name":"_warnings"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":1306,"end":1308,"elements":[]}}},{"type":"ExpressionStatement","start":1319,"end":1361,"expression":{"type":"AssignmentExpression","start":1319,"end":1360,"operator":"=","left":{"type":"MemberExpression","start":1319,"end":1356,"object":{"type":"ThisExpression","start":1319,"end":1323},"property":{"type":"Identifier","start":1324,"end":1356,"name":"_numberOfTransUnitsWithMissingId"},"computed":false,"optional":false},"right":{"type":"Literal","start":1359,"end":1360,"value":0,"raw":"0"}}},{"type":"ExpressionStatement","start":1371,"end":1441,"expression":{"type":"CallExpression","start":1371,"end":1440,"callee":{"type":"MemberExpression","start":1371,"end":1397,"object":{"type":"ThisExpression","start":1371,"end":1375},"property":{"type":"Identifier","start":1376,"end":1397,"name":"initializeFromContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1398,"end":1407,"name":"xmlString"},{"type":"Identifier","start":1409,"end":1413,"name":"path"},{"type":"Identifier","start":1415,"end":1423,"name":"encoding"},{"type":"Identifier","start":1425,"end":1439,"name":"optionalMaster"}],"optional":false}}]}}},{"type":"MethodDefinition","start":1454,"end":2715,"static":false,"computed":false,"key":{"type":"Identifier","start":1454,"end":1475,"name":"initializeFromContent"},"kind":"method","value":{"type":"FunctionExpression","start":1475,"end":2715,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1476,"end":1485,"name":"xmlString"},{"type":"Identifier","start":1487,"end":1491,"name":"path"},{"type":"Identifier","start":1493,"end":1501,"name":"encoding"},{"type":"Identifier","start":1503,"end":1517,"name":"optionalMaster"}],"body":{"type":"BlockStatement","start":1519,"end":2715,"body":[{"type":"ExpressionStatement","start":1530,"end":1575,"expression":{"type":"CallExpression","start":1530,"end":1574,"callee":{"type":"MemberExpression","start":1530,"end":1547,"object":{"type":"ThisExpression","start":1530,"end":1534},"property":{"type":"Identifier","start":1535,"end":1547,"name":"parseContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1548,"end":1557,"name":"xmlString"},{"type":"Identifier","start":1559,"end":1563,"name":"path"},{"type":"Identifier","start":1565,"end":1573,"name":"encoding"}],"optional":false}},{"type":"IfStatement","start":1585,"end":1804,"test":{"type":"BinaryExpression","start":1589,"end":1664,"left":{"type":"MemberExpression","start":1589,"end":1658,"object":{"type":"CallExpression","start":1589,"end":1651,"callee":{"type":"MemberExpression","start":1589,"end":1630,"object":{"type":"MemberExpression","start":1589,"end":1609,"object":{"type":"ThisExpression","start":1589,"end":1593},"property":{"type":"Identifier","start":1594,"end":1609,"name":"_parsedDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1610,"end":1630,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":1631,"end":1650,"value":"translationbundle","raw":"'translationbundle'"}],"optional":false},"property":{"type":"Identifier","start":1652,"end":1658,"name":"length"},"computed":false,"optional":false},"operator":"!==","right":{"type":"Literal","start":1663,"end":1664,"value":1,"raw":"1"}},"consequent":{"type":"BlockStatement","start":1666,"end":1804,"body":[{"type":"ThrowStatement","start":1681,"end":1793,"argument":{"type":"NewExpression","start":1687,"end":1792,"callee":{"type":"Identifier","start":1691,"end":1696,"name":"Error"},"arguments":[{"type":"CallExpression","start":1697,"end":1791,"callee":{"type":"Identifier","start":1697,"end":1703,"name":"format"},"arguments":[{"type":"Literal","start":1704,"end":1784,"value":"File \"%s\" seems to be no xtb file (should contain a translationbundle element)","raw":"'File \"%s\" seems to be no xtb file (should contain a translationbundle element)'"},{"type":"Identifier","start":1786,"end":1790,"name":"path"}],"optional":false}]}}]},"alternate":null},{"type":"IfStatement","start":1814,"end":2686,"test":{"type":"Identifier","start":1818,"end":1832,"name":"optionalMaster"},"consequent":{"type":"BlockStatement","start":1834,"end":2686,"body":[{"type":"TryStatement","start":1849,"end":2675,"block":{"type":"BlockStatement","start":1853,"end":2492,"body":[{"type":"ExpressionStatement","start":1872,"end":2038,"expression":{"type":"AssignmentExpression","start":1872,"end":2037,"operator":"=","left":{"type":"MemberExpression","start":1872,"end":1888,"object":{"type":"ThisExpression","start":1872,"end":1876},"property":{"type":"Identifier","start":1877,"end":1888,"name":"_masterFile"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":1891,"end":2037,"callee":{"type":"MemberExpression","start":1891,"end":1952,"object":{"type":"MemberExpression","start":1891,"end":1926,"object":{"type":"ThisExpression","start":1891,"end":1895},"property":{"type":"Identifier","start":1896,"end":1926,"name":"_translationMessageFileFactory"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1927,"end":1952,"name":"createFileFromFileContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1953,"end":1963,"name":"FORMAT_XMB"},{"type":"MemberExpression","start":1965,"end":1990,"object":{"type":"Identifier","start":1965,"end":1979,"name":"optionalMaster"},"property":{"type":"Identifier","start":1980,"end":1990,"name":"xmlContent"},"computed":false,"optional":false},{"type":"MemberExpression","start":1992,"end":2011,"object":{"type":"Identifier","start":1992,"end":2006,"name":"optionalMaster"},"property":{"type":"Identifier","start":2007,"end":2011,"name":"path"},"computed":false,"optional":false},{"type":"MemberExpression","start":2013,"end":2036,"object":{"type":"Identifier","start":2013,"end":2027,"name":"optionalMaster"},"property":{"type":"Identifier","start":2028,"end":2036,"name":"encoding"},"computed":false,"optional":false}],"optional":false}}},{"type":"VariableDeclaration","start":2117,"end":2178,"declarations":[{"type":"VariableDeclarator","start":2123,"end":2177,"id":{"type":"Identifier","start":2123,"end":2137,"name":"numberInMaster"},"init":{"type":"CallExpression","start":2140,"end":2177,"callee":{"type":"MemberExpression","start":2140,"end":2175,"object":{"type":"MemberExpression","start":2140,"end":2156,"object":{"type":"ThisExpression","start":2140,"end":2144},"property":{"type":"Identifier","start":2145,"end":2156,"name":"_masterFile"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2157,"end":2175,"name":"numberOfTransUnits"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":2196,"end":2239,"declarations":[{"type":"VariableDeclarator","start":2202,"end":2238,"id":{"type":"Identifier","start":2202,"end":2210,"name":"myNumber"},"init":{"type":"CallExpression","start":2213,"end":2238,"callee":{"type":"MemberExpression","start":2213,"end":2236,"object":{"type":"ThisExpression","start":2213,"end":2217},"property":{"type":"Identifier","start":2218,"end":2236,"name":"numberOfTransUnits"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":2257,"end":2477,"test":{"type":"BinaryExpression","start":2261,"end":2288,"left":{"type":"Identifier","start":2261,"end":2275,"name":"numberInMaster"},"operator":"!==","right":{"type":"Identifier","start":2280,"end":2288,"name":"myNumber"}},"consequent":{"type":"BlockStatement","start":2290,"end":2477,"body":[{"type":"ExpressionStatement","start":2313,"end":2458,"expression":{"type":"CallExpression","start":2313,"end":2457,"callee":{"type":"MemberExpression","start":2313,"end":2332,"object":{"type":"MemberExpression","start":2313,"end":2327,"object":{"type":"ThisExpression","start":2313,"end":2317},"property":{"type":"Identifier","start":2318,"end":2327,"name":"_warnings"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2328,"end":2332,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":2333,"end":2456,"callee":{"type":"Identifier","start":2333,"end":2339,"name":"format"},"arguments":[{"type":"Literal","start":2340,"end":2429,"value":"%s trans units found in master, but this file has %s. Check if it is the correct master","raw":"'%s trans units found in master, but this file has %s. Check if it is the correct master'"},{"type":"Identifier","start":2431,"end":2445,"name":"numberInMaster"},{"type":"Identifier","start":2447,"end":2455,"name":"myNumber"}],"optional":false}],"optional":false}}]},"alternate":null}]},"handler":{"type":"CatchClause","start":2506,"end":2675,"param":{"type":"Identifier","start":2513,"end":2518,"name":"error"},"body":{"type":"BlockStatement","start":2520,"end":2675,"body":[{"type":"ThrowStatement","start":2539,"end":2660,"argument":{"type":"NewExpression","start":2545,"end":2659,"callee":{"type":"Identifier","start":2549,"end":2554,"name":"Error"},"arguments":[{"type":"CallExpression","start":2555,"end":2658,"callee":{"type":"Identifier","start":2555,"end":2561,"name":"format"},"arguments":[{"type":"Literal","start":2562,"end":2636,"value":"File \"%s\" seems to be no xmb file. An xtb file needs xmb as master file.","raw":"'File \"%s\" seems to be no xmb file. An xtb file needs xmb as master file.'"},{"type":"MemberExpression","start":2638,"end":2657,"object":{"type":"Identifier","start":2638,"end":2652,"name":"optionalMaster"},"property":{"type":"Identifier","start":2653,"end":2657,"name":"path"},"computed":false,"optional":false}],"optional":false}]}}]}},"finalizer":null}]},"alternate":null},{"type":"ReturnStatement","start":2696,"end":2708,"argument":{"type":"ThisExpression","start":2703,"end":2707}}]}}},{"type":"MethodDefinition","start":2721,"end":3447,"static":false,"computed":false,"key":{"type":"Identifier","start":2721,"end":2741,"name":"initializeTransUnits"},"kind":"method","value":{"type":"FunctionExpression","start":2741,"end":3447,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2744,"end":3447,"body":[{"type":"ExpressionStatement","start":2755,"end":2776,"expression":{"type":"AssignmentExpression","start":2755,"end":2775,"operator":"=","left":{"type":"MemberExpression","start":2755,"end":2770,"object":{"type":"ThisExpression","start":2755,"end":2759},"property":{"type":"Identifier","start":2760,"end":2770,"name":"transUnits"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":2773,"end":2775,"elements":[]}}},{"type":"VariableDeclaration","start":2786,"end":2868,"declarations":[{"type":"VariableDeclarator","start":2792,"end":2867,"id":{"type":"Identifier","start":2792,"end":2808,"name":"transUnitsInFile"},"init":{"type":"CallExpression","start":2811,"end":2867,"callee":{"type":"MemberExpression","start":2811,"end":2852,"object":{"type":"MemberExpression","start":2811,"end":2831,"object":{"type":"ThisExpression","start":2811,"end":2815},"property":{"type":"Identifier","start":2816,"end":2831,"name":"_parsedDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2832,"end":2852,"name":"getElementsByTagName"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":2853,"end":2866,"value":"translation","raw":"'translation'"}],"optional":false}}],"kind":"const"},{"type":"ForStatement","start":2878,"end":3440,"init":{"type":"VariableDeclaration","start":2883,"end":2892,"declarations":[{"type":"VariableDeclarator","start":2887,"end":2892,"id":{"type":"Identifier","start":2887,"end":2888,"name":"i"},"init":{"type":"Literal","start":2891,"end":2892,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":2894,"end":2921,"left":{"type":"Identifier","start":2894,"end":2895,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":2898,"end":2921,"object":{"type":"Identifier","start":2898,"end":2914,"name":"transUnitsInFile"},"property":{"type":"Identifier","start":2915,"end":2921,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":2923,"end":2926,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":2923,"end":2924,"name":"i"}},"body":{"type":"BlockStatement","start":2928,"end":3440,"body":[{"type":"VariableDeclaration","start":2943,"end":2980,"declarations":[{"type":"VariableDeclarator","start":2949,"end":2979,"id":{"type":"Identifier","start":2949,"end":2952,"name":"msg"},"init":{"type":"CallExpression","start":2955,"end":2979,"callee":{"type":"MemberExpression","start":2955,"end":2976,"object":{"type":"Identifier","start":2955,"end":2971,"name":"transUnitsInFile"},"property":{"type":"Identifier","start":2972,"end":2976,"name":"item"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2977,"end":2978,"name":"i"}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":2994,"end":3028,"declarations":[{"type":"VariableDeclarator","start":3000,"end":3027,"id":{"type":"Identifier","start":3000,"end":3002,"name":"id"},"init":{"type":"CallExpression","start":3005,"end":3027,"callee":{"type":"MemberExpression","start":3005,"end":3021,"object":{"type":"Identifier","start":3005,"end":3008,"name":"msg"},"property":{"type":"Identifier","start":3009,"end":3021,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":3022,"end":3026,"value":"id","raw":"'id'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":3042,"end":3193,"test":{"type":"UnaryExpression","start":3046,"end":3049,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":3047,"end":3049,"name":"id"}},"consequent":{"type":"BlockStatement","start":3051,"end":3193,"body":[{"type":"ExpressionStatement","start":3070,"end":3178,"expression":{"type":"CallExpression","start":3070,"end":3177,"callee":{"type":"MemberExpression","start":3070,"end":3089,"object":{"type":"MemberExpression","start":3070,"end":3084,"object":{"type":"ThisExpression","start":3070,"end":3074},"property":{"type":"Identifier","start":3075,"end":3084,"name":"_warnings"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3085,"end":3089,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":3090,"end":3176,"callee":{"type":"Identifier","start":3090,"end":3096,"name":"format"},"arguments":[{"type":"Literal","start":3097,"end":3159,"value":"oops, msg without \"id\" found in master, please check file %s","raw":"'oops, msg without \"id\" found in master, please check file %s'"},{"type":"MemberExpression","start":3161,"end":3175,"object":{"type":"ThisExpression","start":3161,"end":3165},"property":{"type":"Identifier","start":3166,"end":3175,"name":"_filename"},"computed":false,"optional":false}],"optional":false}],"optional":false}}]},"alternate":null},{"type":"VariableDeclaration","start":3207,"end":3229,"declarations":[{"type":"VariableDeclarator","start":3211,"end":3228,"id":{"type":"Identifier","start":3211,"end":3221,"name":"masterUnit"},"init":{"type":"Literal","start":3224,"end":3228,"value":null,"raw":"null"}}],"kind":"let"},{"type":"IfStatement","start":3243,"end":3349,"test":{"type":"MemberExpression","start":3247,"end":3263,"object":{"type":"ThisExpression","start":3247,"end":3251},"property":{"type":"Identifier","start":3252,"end":3263,"name":"_masterFile"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":3265,"end":3349,"body":[{"type":"ExpressionStatement","start":3284,"end":3334,"expression":{"type":"AssignmentExpression","start":3284,"end":3333,"operator":"=","left":{"type":"Identifier","start":3284,"end":3294,"name":"masterUnit"},"right":{"type":"CallExpression","start":3297,"end":3333,"callee":{"type":"MemberExpression","start":3297,"end":3329,"object":{"type":"MemberExpression","start":3297,"end":3313,"object":{"type":"ThisExpression","start":3297,"end":3301},"property":{"type":"Identifier","start":3302,"end":3313,"name":"_masterFile"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3314,"end":3329,"name":"transUnitWithId"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":3330,"end":3332,"name":"id"}],"optional":false}}}]},"alternate":null},{"type":"ExpressionStatement","start":3363,"end":3429,"expression":{"type":"CallExpression","start":3363,"end":3428,"callee":{"type":"MemberExpression","start":3363,"end":3383,"object":{"type":"MemberExpression","start":3363,"end":3378,"object":{"type":"ThisExpression","start":3363,"end":3367},"property":{"type":"Identifier","start":3368,"end":3378,"name":"transUnits"},"computed":false,"optional":false},"property":{"type":"Identifier","start":3379,"end":3383,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"NewExpression","start":3384,"end":3427,"callee":{"type":"Identifier","start":3388,"end":3400,"name":"XtbTransUnit"},"arguments":[{"type":"Identifier","start":3401,"end":3404,"name":"msg"},{"type":"Identifier","start":3406,"end":3408,"name":"id"},{"type":"ThisExpression","start":3410,"end":3414},{"type":"Identifier","start":3416,"end":3426,"name":"masterUnit"}]}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":3615,"end":3664,"static":false,"computed":false,"key":{"type":"Identifier","start":3615,"end":3625,"name":"i18nFormat"},"kind":"method","value":{"type":"FunctionExpression","start":3625,"end":3664,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":3628,"end":3664,"body":[{"type":"ReturnStatement","start":3639,"end":3657,"argument":{"type":"Identifier","start":3646,"end":3656,"name":"FORMAT_XTB"}}]}}},{"type":"MethodDefinition","start":3726,"end":3775,"static":false,"computed":false,"key":{"type":"Identifier","start":3726,"end":3734,"name":"fileType"},"kind":"method","value":{"type":"FunctionExpression","start":3734,"end":3775,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":3737,"end":3775,"body":[{"type":"ReturnStatement","start":3748,"end":3768,"argument":{"type":"Identifier","start":3755,"end":3767,"name":"FILETYPE_XTB"}}]}}},{"type":"MethodDefinition","start":3962,"end":4030,"static":false,"computed":false,"key":{"type":"Identifier","start":3962,"end":3986,"name":"elementsWithMixedContent"},"kind":"method","value":{"type":"FunctionExpression","start":3986,"end":4030,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":3989,"end":4030,"body":[{"type":"ReturnStatement","start":4000,"end":4023,"argument":{"type":"ArrayExpression","start":4007,"end":4022,"elements":[{"type":"Literal","start":4008,"end":4021,"value":"translation","raw":"'translation'"}]}}]}}},{"type":"MethodDefinition","start":4202,"end":4379,"static":false,"computed":false,"key":{"type":"Identifier","start":4202,"end":4216,"name":"sourceLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":4216,"end":4379,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":4219,"end":4379,"body":[{"type":"IfStatement","start":4230,"end":4372,"test":{"type":"MemberExpression","start":4234,"end":4250,"object":{"type":"ThisExpression","start":4234,"end":4238},"property":{"type":"Identifier","start":4239,"end":4250,"name":"_masterFile"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":4252,"end":4319,"body":[{"type":"ReturnStatement","start":4267,"end":4308,"argument":{"type":"CallExpression","start":4274,"end":4307,"callee":{"type":"MemberExpression","start":4274,"end":4305,"object":{"type":"MemberExpression","start":4274,"end":4290,"object":{"type":"ThisExpression","start":4274,"end":4278},"property":{"type":"Identifier","start":4279,"end":4290,"name":"_masterFile"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4291,"end":4305,"name":"sourceLanguage"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":{"type":"BlockStatement","start":4334,"end":4372,"body":[{"type":"ReturnStatement","start":4349,"end":4361,"argument":{"type":"Literal","start":4356,"end":4360,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":4502,"end":4592,"static":false,"computed":false,"key":{"type":"Identifier","start":4502,"end":4519,"name":"setSourceLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":4519,"end":4592,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4520,"end":4528,"name":"language"}],"body":{"type":"BlockStatement","start":4530,"end":4592,"body":[]}}},{"type":"MethodDefinition","start":4678,"end":4990,"static":false,"computed":false,"key":{"type":"Identifier","start":4678,"end":4692,"name":"targetLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":4692,"end":4990,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":4695,"end":4990,"body":[{"type":"VariableDeclaration","start":4706,"end":4817,"declarations":[{"type":"VariableDeclarator","start":4712,"end":4816,"id":{"type":"Identifier","start":4712,"end":4733,"name":"translationbundleElem"},"init":{"type":"CallExpression","start":4736,"end":4816,"callee":{"type":"MemberExpression","start":4736,"end":4773,"object":{"type":"Identifier","start":4736,"end":4748,"name":"DOMUtilities"},"property":{"type":"Identifier","start":4749,"end":4773,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":4774,"end":4794,"object":{"type":"ThisExpression","start":4774,"end":4778},"property":{"type":"Identifier","start":4779,"end":4794,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":4796,"end":4815,"value":"translationbundle","raw":"'translationbundle'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":4827,"end":4983,"test":{"type":"Identifier","start":4831,"end":4852,"name":"translationbundleElem"},"consequent":{"type":"BlockStatement","start":4854,"end":4930,"body":[{"type":"ReturnStatement","start":4869,"end":4919,"argument":{"type":"CallExpression","start":4876,"end":4918,"callee":{"type":"MemberExpression","start":4876,"end":4910,"object":{"type":"Identifier","start":4876,"end":4897,"name":"translationbundleElem"},"property":{"type":"Identifier","start":4898,"end":4910,"name":"getAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4911,"end":4917,"value":"lang","raw":"'lang'"}],"optional":false}}]},"alternate":{"type":"BlockStatement","start":4945,"end":4983,"body":[{"type":"ReturnStatement","start":4960,"end":4972,"argument":{"type":"Literal","start":4967,"end":4971,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":5081,"end":5354,"static":false,"computed":false,"key":{"type":"Identifier","start":5081,"end":5098,"name":"setTargetLanguage"},"kind":"method","value":{"type":"FunctionExpression","start":5098,"end":5354,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5099,"end":5107,"name":"language"}],"body":{"type":"BlockStatement","start":5109,"end":5354,"body":[{"type":"VariableDeclaration","start":5120,"end":5231,"declarations":[{"type":"VariableDeclarator","start":5126,"end":5230,"id":{"type":"Identifier","start":5126,"end":5147,"name":"translationbundleElem"},"init":{"type":"CallExpression","start":5150,"end":5230,"callee":{"type":"MemberExpression","start":5150,"end":5187,"object":{"type":"Identifier","start":5150,"end":5162,"name":"DOMUtilities"},"property":{"type":"Identifier","start":5163,"end":5187,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":5188,"end":5208,"object":{"type":"ThisExpression","start":5188,"end":5192},"property":{"type":"Identifier","start":5193,"end":5208,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":5210,"end":5229,"value":"translationbundle","raw":"'translationbundle'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":5241,"end":5347,"test":{"type":"Identifier","start":5245,"end":5266,"name":"translationbundleElem"},"consequent":{"type":"BlockStatement","start":5268,"end":5347,"body":[{"type":"ExpressionStatement","start":5283,"end":5336,"expression":{"type":"CallExpression","start":5283,"end":5335,"callee":{"type":"MemberExpression","start":5283,"end":5317,"object":{"type":"Identifier","start":5283,"end":5304,"name":"translationbundleElem"},"property":{"type":"Identifier","start":5305,"end":5317,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5318,"end":5324,"value":"lang","raw":"'lang'"},{"type":"Identifier","start":5326,"end":5334,"name":"language"}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":6670,"end":9664,"static":false,"computed":false,"key":{"type":"Identifier","start":6670,"end":6688,"name":"importNewTransUnit"},"kind":"method","value":{"type":"FunctionExpression","start":6688,"end":9664,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6689,"end":6705,"name":"foreignTransUnit"},{"type":"Identifier","start":6707,"end":6720,"name":"isDefaultLang"},{"type":"Identifier","start":6722,"end":6733,"name":"copyContent"},{"type":"Identifier","start":6735,"end":6753,"name":"importAfterElement"}],"body":{"type":"BlockStatement","start":6755,"end":9664,"body":[{"type":"IfStatement","start":6766,"end":6942,"test":{"type":"CallExpression","start":6770,"end":6811,"callee":{"type":"MemberExpression","start":6770,"end":6790,"object":{"type":"ThisExpression","start":6770,"end":6774},"property":{"type":"Identifier","start":6775,"end":6790,"name":"transUnitWithId"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6791,"end":6810,"object":{"type":"Identifier","start":6791,"end":6807,"name":"foreignTransUnit"},"property":{"type":"Identifier","start":6808,"end":6810,"name":"id"},"computed":false,"optional":false}],"optional":false},"consequent":{"type":"BlockStatement","start":6813,"end":6942,"body":[{"type":"ThrowStatement","start":6828,"end":6931,"argument":{"type":"NewExpression","start":6834,"end":6930,"callee":{"type":"Identifier","start":6838,"end":6843,"name":"Error"},"arguments":[{"type":"CallExpression","start":6844,"end":6929,"callee":{"type":"Identifier","start":6844,"end":6850,"name":"format"},"arguments":[{"type":"Literal","start":6851,"end":6907,"value":"tu with id %s already exists in file, cannot import it","raw":"'tu with id %s already exists in file, cannot import it'"},{"type":"MemberExpression","start":6909,"end":6928,"object":{"type":"Identifier","start":6909,"end":6925,"name":"foreignTransUnit"},"property":{"type":"Identifier","start":6926,"end":6928,"name":"id"},"computed":false,"optional":false}],"optional":false}]}}]},"alternate":null},{"type":"VariableDeclaration","start":6952,"end":7047,"declarations":[{"type":"VariableDeclarator","start":6958,"end":7046,"id":{"type":"Identifier","start":6958,"end":6969,"name":"newMasterTu"},"init":{"type":"CallExpression","start":6972,"end":7046,"callee":{"type":"MemberExpression","start":6972,"end":7012,"object":{"type":"Identifier","start":6972,"end":6988,"name":"foreignTransUnit"},"property":{"type":"Identifier","start":6989,"end":7012,"name":"cloneWithSourceAsTarget"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7013,"end":7026,"name":"isDefaultLang"},{"type":"Identifier","start":7028,"end":7039,"name":"copyContent"},{"type":"ThisExpression","start":7041,"end":7045}],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":7057,"end":7168,"declarations":[{"type":"VariableDeclarator","start":7063,"end":7167,"id":{"type":"Identifier","start":7063,"end":7084,"name":"translationbundleElem"},"init":{"type":"CallExpression","start":7087,"end":7167,"callee":{"type":"MemberExpression","start":7087,"end":7124,"object":{"type":"Identifier","start":7087,"end":7099,"name":"DOMUtilities"},"property":{"type":"Identifier","start":7100,"end":7124,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":7125,"end":7145,"object":{"type":"ThisExpression","start":7125,"end":7129},"property":{"type":"Identifier","start":7130,"end":7145,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":7147,"end":7166,"value":"translationbundle","raw":"'translationbundle'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":7178,"end":7354,"test":{"type":"UnaryExpression","start":7182,"end":7204,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":7183,"end":7204,"name":"translationbundleElem"}},"consequent":{"type":"BlockStatement","start":7206,"end":7354,"body":[{"type":"ThrowStatement","start":7221,"end":7343,"argument":{"type":"NewExpression","start":7227,"end":7342,"callee":{"type":"Identifier","start":7231,"end":7236,"name":"Error"},"arguments":[{"type":"CallExpression","start":7237,"end":7341,"callee":{"type":"Identifier","start":7237,"end":7243,"name":"format"},"arguments":[{"type":"Literal","start":7244,"end":7324,"value":"File \"%s\" seems to be no xtb file (should contain a translationbundle element)","raw":"'File \"%s\" seems to be no xtb file (should contain a translationbundle element)'"},{"type":"MemberExpression","start":7326,"end":7340,"object":{"type":"ThisExpression","start":7326,"end":7330},"property":{"type":"Identifier","start":7331,"end":7340,"name":"_filename"},"computed":false,"optional":false}],"optional":false}]}}]},"alternate":null},{"type":"VariableDeclaration","start":7364,"end":7456,"declarations":[{"type":"VariableDeclarator","start":7370,"end":7455,"id":{"type":"Identifier","start":7370,"end":7388,"name":"translationElement"},"init":{"type":"CallExpression","start":7391,"end":7455,"callee":{"type":"MemberExpression","start":7391,"end":7440,"object":{"type":"MemberExpression","start":7391,"end":7426,"object":{"type":"Identifier","start":7391,"end":7412,"name":"translationbundleElem"},"property":{"type":"Identifier","start":7413,"end":7426,"name":"ownerDocument"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7427,"end":7440,"name":"createElement"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7441,"end":7454,"value":"translation","raw":"'translation'"}],"optional":false}}],"kind":"const"},{"type":"ExpressionStatement","start":7466,"end":7525,"expression":{"type":"CallExpression","start":7466,"end":7524,"callee":{"type":"MemberExpression","start":7466,"end":7497,"object":{"type":"Identifier","start":7466,"end":7484,"name":"translationElement"},"property":{"type":"Identifier","start":7485,"end":7497,"name":"setAttribute"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":7498,"end":7502,"value":"id","raw":"'id'"},{"type":"MemberExpression","start":7504,"end":7523,"object":{"type":"Identifier","start":7504,"end":7520,"name":"foreignTransUnit"},"property":{"type":"Identifier","start":7521,"end":7523,"name":"id"},"computed":false,"optional":false}],"optional":false}},{"type":"VariableDeclaration","start":7535,"end":7623,"declarations":[{"type":"VariableDeclarator","start":7539,"end":7622,"id":{"type":"Identifier","start":7539,"end":7549,"name":"newContent"},"init":{"type":"ConditionalExpression","start":7552,"end":7622,"test":{"type":"LogicalExpression","start":7553,"end":7581,"left":{"type":"Identifier","start":7553,"end":7564,"name":"copyContent"},"operator":"||","right":{"type":"Identifier","start":7568,"end":7581,"name":"isDefaultLang"}},"consequent":{"type":"CallExpression","start":7585,"end":7617,"callee":{"type":"MemberExpression","start":7585,"end":7615,"object":{"type":"Identifier","start":7585,"end":7601,"name":"foreignTransUnit"},"property":{"type":"Identifier","start":7602,"end":7615,"name":"sourceContent"},"computed":false,"optional":false},"arguments":[],"optional":false},"alternate":{"type":"Literal","start":7620,"end":7622,"value":"","raw":"''"}}}],"kind":"let"},{"type":"IfStatement","start":7633,"end":7806,"test":{"type":"UnaryExpression","start":7637,"end":7679,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":7638,"end":7679,"callee":{"type":"MemberExpression","start":7638,"end":7667,"object":{"type":"Identifier","start":7638,"end":7654,"name":"foreignTransUnit"},"property":{"type":"Identifier","start":7655,"end":7667,"name":"isICUMessage"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7668,"end":7678,"name":"newContent"}],"optional":false}},"consequent":{"type":"BlockStatement","start":7681,"end":7806,"body":[{"type":"ExpressionStatement","start":7696,"end":7795,"expression":{"type":"AssignmentExpression","start":7696,"end":7794,"operator":"=","left":{"type":"Identifier","start":7696,"end":7706,"name":"newContent"},"right":{"type":"BinaryExpression","start":7709,"end":7794,"left":{"type":"BinaryExpression","start":7709,"end":7757,"left":{"type":"CallExpression","start":7709,"end":7744,"callee":{"type":"MemberExpression","start":7709,"end":7742,"object":{"type":"ThisExpression","start":7709,"end":7713},"property":{"type":"Identifier","start":7714,"end":7742,"name":"getNewTransUnitTargetPraefix"},"computed":false,"optional":false},"arguments":[],"optional":false},"operator":"+","right":{"type":"Identifier","start":7747,"end":7757,"name":"newContent"}},"operator":"+","right":{"type":"CallExpression","start":7760,"end":7794,"callee":{"type":"MemberExpression","start":7760,"end":7792,"object":{"type":"ThisExpression","start":7760,"end":7764},"property":{"type":"Identifier","start":7765,"end":7792,"name":"getNewTransUnitTargetSuffix"},"computed":false,"optional":false},"arguments":[],"optional":false}}}}]},"alternate":null},{"type":"ExpressionStatement","start":7816,"end":7890,"expression":{"type":"CallExpression","start":7816,"end":7889,"callee":{"type":"MemberExpression","start":7816,"end":7857,"object":{"type":"Identifier","start":7816,"end":7828,"name":"DOMUtilities"},"property":{"type":"Identifier","start":7829,"end":7857,"name":"replaceContentWithXMLContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7858,"end":7876,"name":"translationElement"},{"type":"Identifier","start":7878,"end":7888,"name":"newContent"}],"optional":false}},{"type":"VariableDeclaration","start":7900,"end":7991,"declarations":[{"type":"VariableDeclarator","start":7906,"end":7990,"id":{"type":"Identifier","start":7906,"end":7911,"name":"newTu"},"init":{"type":"NewExpression","start":7914,"end":7990,"callee":{"type":"Identifier","start":7918,"end":7930,"name":"XtbTransUnit"},"arguments":[{"type":"Identifier","start":7931,"end":7949,"name":"translationElement"},{"type":"MemberExpression","start":7951,"end":7970,"object":{"type":"Identifier","start":7951,"end":7967,"name":"foreignTransUnit"},"property":{"type":"Identifier","start":7968,"end":7970,"name":"id"},"computed":false,"optional":false},{"type":"ThisExpression","start":7972,"end":7976},{"type":"Identifier","start":7978,"end":7989,"name":"newMasterTu"}]}}],"kind":"const"},{"type":"VariableDeclaration","start":8001,"end":8022,"declarations":[{"type":"VariableDeclarator","start":8005,"end":8021,"id":{"type":"Identifier","start":8005,"end":8013,"name":"inserted"},"init":{"type":"Literal","start":8016,"end":8021,"value":false,"raw":"false"}}],"kind":"let"},{"type":"VariableDeclaration","start":8032,"end":8069,"declarations":[{"type":"VariableDeclarator","start":8036,"end":8068,"id":{"type":"Identifier","start":8036,"end":8060,"name":"isAfterElementPartOfFile"},"init":{"type":"Literal","start":8063,"end":8068,"value":false,"raw":"false"}}],"kind":"let"},{"type":"IfStatement","start":8079,"end":8300,"test":{"type":"UnaryExpression","start":8083,"end":8103,"operator":"!","prefix":true,"argument":{"type":"UnaryExpression","start":8084,"end":8103,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":8085,"end":8103,"name":"importAfterElement"}}},"consequent":{"type":"BlockStatement","start":8105,"end":8300,"body":[{"type":"VariableDeclaration","start":8120,"end":8187,"declarations":[{"type":"VariableDeclarator","start":8126,"end":8186,"id":{"type":"Identifier","start":8126,"end":8140,"name":"insertionPoint"},"init":{"type":"CallExpression","start":8143,"end":8186,"callee":{"type":"MemberExpression","start":8143,"end":8163,"object":{"type":"ThisExpression","start":8143,"end":8147},"property":{"type":"Identifier","start":8148,"end":8163,"name":"transUnitWithId"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":8164,"end":8185,"object":{"type":"Identifier","start":8164,"end":8182,"name":"importAfterElement"},"property":{"type":"Identifier","start":8183,"end":8185,"name":"id"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":8201,"end":8289,"test":{"type":"UnaryExpression","start":8205,"end":8221,"operator":"!","prefix":true,"argument":{"type":"UnaryExpression","start":8206,"end":8221,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":8207,"end":8221,"name":"insertionPoint"}}},"consequent":{"type":"BlockStatement","start":8223,"end":8289,"body":[{"type":"ExpressionStatement","start":8242,"end":8274,"expression":{"type":"AssignmentExpression","start":8242,"end":8273,"operator":"=","left":{"type":"Identifier","start":8242,"end":8266,"name":"isAfterElementPartOfFile"},"right":{"type":"Literal","start":8269,"end":8273,"value":true,"raw":"true"}}}]},"alternate":null}]},"alternate":null},{"type":"IfStatement","start":8310,"end":9419,"test":{"type":"LogicalExpression","start":8314,"end":8399,"left":{"type":"BinaryExpression","start":8314,"end":8346,"left":{"type":"Identifier","start":8314,"end":8332,"name":"importAfterElement"},"operator":"===","right":{"type":"Identifier","start":8337,"end":8346,"name":"undefined"}},"operator":"||","right":{"type":"LogicalExpression","start":8351,"end":8398,"left":{"type":"Identifier","start":8351,"end":8369,"name":"importAfterElement"},"operator":"&&","right":{"type":"UnaryExpression","start":8373,"end":8398,"operator":"!","prefix":true,"argument":{"type":"Identifier","start":8374,"end":8398,"name":"isAfterElementPartOfFile"}}}},"consequent":{"type":"BlockStatement","start":8401,"end":8513,"body":[{"type":"ExpressionStatement","start":8416,"end":8472,"expression":{"type":"CallExpression","start":8416,"end":8471,"callee":{"type":"MemberExpression","start":8416,"end":8449,"object":{"type":"Identifier","start":8416,"end":8437,"name":"translationbundleElem"},"property":{"type":"Identifier","start":8438,"end":8449,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":8450,"end":8470,"callee":{"type":"MemberExpression","start":8450,"end":8468,"object":{"type":"Identifier","start":8450,"end":8455,"name":"newTu"},"property":{"type":"Identifier","start":8456,"end":8468,"name":"asXmlElement"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":8486,"end":8502,"expression":{"type":"AssignmentExpression","start":8486,"end":8501,"operator":"=","left":{"type":"Identifier","start":8486,"end":8494,"name":"inserted"},"right":{"type":"Literal","start":8497,"end":8501,"value":true,"raw":"true"}}}]},"alternate":{"type":"IfStatement","start":8528,"end":9419,"test":{"type":"BinaryExpression","start":8532,"end":8559,"left":{"type":"Identifier","start":8532,"end":8550,"name":"importAfterElement"},"operator":"===","right":{"type":"Literal","start":8555,"end":8559,"value":null,"raw":"null"}},"consequent":{"type":"BlockStatement","start":8561,"end":9092,"body":[{"type":"VariableDeclaration","start":8576,"end":8683,"declarations":[{"type":"VariableDeclarator","start":8582,"end":8682,"id":{"type":"Identifier","start":8582,"end":8605,"name":"firstTranslationElement"},"init":{"type":"CallExpression","start":8608,"end":8682,"callee":{"type":"MemberExpression","start":8608,"end":8645,"object":{"type":"Identifier","start":8608,"end":8620,"name":"DOMUtilities"},"property":{"type":"Identifier","start":8621,"end":8645,"name":"getFirstElementByTagName"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":8646,"end":8666,"object":{"type":"ThisExpression","start":8646,"end":8650},"property":{"type":"Identifier","start":8651,"end":8666,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":8668,"end":8681,"value":"translation","raw":"'translation'"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":8697,"end":9081,"test":{"type":"Identifier","start":8701,"end":8724,"name":"firstTranslationElement"},"consequent":{"type":"BlockStatement","start":8726,"end":8867,"body":[{"type":"ExpressionStatement","start":8745,"end":8818,"expression":{"type":"CallExpression","start":8745,"end":8817,"callee":{"type":"MemberExpression","start":8745,"end":8770,"object":{"type":"Identifier","start":8745,"end":8757,"name":"DOMUtilities"},"property":{"type":"Identifier","start":8758,"end":8770,"name":"insertBefore"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":8771,"end":8791,"callee":{"type":"MemberExpression","start":8771,"end":8789,"object":{"type":"Identifier","start":8771,"end":8776,"name":"newTu"},"property":{"type":"Identifier","start":8777,"end":8789,"name":"asXmlElement"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"Identifier","start":8793,"end":8816,"name":"firstTranslationElement"}],"optional":false}},{"type":"ExpressionStatement","start":8836,"end":8852,"expression":{"type":"AssignmentExpression","start":8836,"end":8851,"operator":"=","left":{"type":"Identifier","start":8836,"end":8844,"name":"inserted"},"right":{"type":"Literal","start":8847,"end":8851,"value":true,"raw":"true"}}}]},"alternate":{"type":"BlockStatement","start":8886,"end":9081,"body":[{"type":"ExpressionStatement","start":8976,"end":9032,"expression":{"type":"CallExpression","start":8976,"end":9031,"callee":{"type":"MemberExpression","start":8976,"end":9009,"object":{"type":"Identifier","start":8976,"end":8997,"name":"translationbundleElem"},"property":{"type":"Identifier","start":8998,"end":9009,"name":"appendChild"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9010,"end":9030,"callee":{"type":"MemberExpression","start":9010,"end":9028,"object":{"type":"Identifier","start":9010,"end":9015,"name":"newTu"},"property":{"type":"Identifier","start":9016,"end":9028,"name":"asXmlElement"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}},{"type":"ExpressionStatement","start":9050,"end":9066,"expression":{"type":"AssignmentExpression","start":9050,"end":9065,"operator":"=","left":{"type":"Identifier","start":9050,"end":9058,"name":"inserted"},"right":{"type":"Literal","start":9061,"end":9065,"value":true,"raw":"true"}}}]}}]},"alternate":{"type":"BlockStatement","start":9107,"end":9419,"body":[{"type":"VariableDeclaration","start":9122,"end":9243,"declarations":[{"type":"VariableDeclarator","start":9128,"end":9242,"id":{"type":"Identifier","start":9128,"end":9142,"name":"refUnitElement"},"init":{"type":"CallExpression","start":9145,"end":9242,"callee":{"type":"MemberExpression","start":9145,"end":9182,"object":{"type":"Identifier","start":9145,"end":9157,"name":"DOMUtilities"},"property":{"type":"Identifier","start":9158,"end":9182,"name":"getElementByTagNameAndId"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":9183,"end":9203,"object":{"type":"ThisExpression","start":9183,"end":9187},"property":{"type":"Identifier","start":9188,"end":9203,"name":"_parsedDocument"},"computed":false,"optional":false},{"type":"Literal","start":9205,"end":9218,"value":"translation","raw":"'translation'"},{"type":"MemberExpression","start":9220,"end":9241,"object":{"type":"Identifier","start":9220,"end":9238,"name":"importAfterElement"},"property":{"type":"Identifier","start":9239,"end":9241,"name":"id"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":9257,"end":9408,"test":{"type":"Identifier","start":9261,"end":9275,"name":"refUnitElement"},"consequent":{"type":"BlockStatement","start":9277,"end":9408,"body":[{"type":"ExpressionStatement","start":9296,"end":9359,"expression":{"type":"CallExpression","start":9296,"end":9358,"callee":{"type":"MemberExpression","start":9296,"end":9320,"object":{"type":"Identifier","start":9296,"end":9308,"name":"DOMUtilities"},"property":{"type":"Identifier","start":9309,"end":9320,"name":"insertAfter"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9321,"end":9341,"callee":{"type":"MemberExpression","start":9321,"end":9339,"object":{"type":"Identifier","start":9321,"end":9326,"name":"newTu"},"property":{"type":"Identifier","start":9327,"end":9339,"name":"asXmlElement"},"computed":false,"optional":false},"arguments":[],"optional":false},{"type":"Identifier","start":9343,"end":9357,"name":"refUnitElement"}],"optional":false}},{"type":"ExpressionStatement","start":9377,"end":9393,"expression":{"type":"AssignmentExpression","start":9377,"end":9392,"operator":"=","left":{"type":"Identifier","start":9377,"end":9385,"name":"inserted"},"right":{"type":"Literal","start":9388,"end":9392,"value":true,"raw":"true"}}}]},"alternate":null}]}}},{"type":"IfStatement","start":9429,"end":9657,"test":{"type":"Identifier","start":9433,"end":9441,"name":"inserted"},"consequent":{"type":"BlockStatement","start":9443,"end":9604,"body":[{"type":"ExpressionStatement","start":9458,"end":9490,"expression":{"type":"CallExpression","start":9458,"end":9489,"callee":{"type":"MemberExpression","start":9458,"end":9487,"object":{"type":"ThisExpression","start":9458,"end":9462},"property":{"type":"Identifier","start":9463,"end":9487,"name":"lazyInitializeTransUnits"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ExpressionStatement","start":9504,"end":9532,"expression":{"type":"CallExpression","start":9504,"end":9531,"callee":{"type":"MemberExpression","start":9504,"end":9524,"object":{"type":"MemberExpression","start":9504,"end":9519,"object":{"type":"ThisExpression","start":9504,"end":9508},"property":{"type":"Identifier","start":9509,"end":9519,"name":"transUnits"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9520,"end":9524,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9525,"end":9530,"name":"newTu"}],"optional":false}},{"type":"ExpressionStatement","start":9546,"end":9566,"expression":{"type":"CallExpression","start":9546,"end":9565,"callee":{"type":"MemberExpression","start":9546,"end":9563,"object":{"type":"ThisExpression","start":9546,"end":9550},"property":{"type":"Identifier","start":9551,"end":9563,"name":"countNumbers"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ReturnStatement","start":9580,"end":9593,"argument":{"type":"Identifier","start":9587,"end":9592,"name":"newTu"}}]},"alternate":{"type":"BlockStatement","start":9619,"end":9657,"body":[{"type":"ReturnStatement","start":9634,"end":9646,"argument":{"type":"Literal","start":9641,"end":9645,"value":null,"raw":"null"}}]}}]}}},{"type":"MethodDefinition","start":10374,"end":10575,"static":false,"computed":false,"key":{"type":"Identifier","start":10374,"end":10402,"name":"createTranslationFileForLang"},"kind":"method","value":{"type":"FunctionExpression","start":10402,"end":10575,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":10403,"end":10407,"name":"lang"},{"type":"Identifier","start":10409,"end":10417,"name":"filename"},{"type":"Identifier","start":10419,"end":10432,"name":"isDefaultLang"},{"type":"Identifier","start":10434,"end":10445,"name":"copyContent"}],"body":{"type":"BlockStatement","start":10447,"end":10575,"body":[{"type":"ThrowStatement","start":10458,"end":10568,"argument":{"type":"NewExpression","start":10464,"end":10567,"callee":{"type":"Identifier","start":10468,"end":10473,"name":"Error"},"arguments":[{"type":"CallExpression","start":10474,"end":10566,"callee":{"type":"Identifier","start":10474,"end":10480,"name":"format"},"arguments":[{"type":"Literal","start":10481,"end":10555,"value":"File \"%s\", xtb files are not translatable, they are already translations","raw":"'File \"%s\", xtb files are not translatable, they are already translations'"},{"type":"Identifier","start":10557,"end":10565,"name":"filename"}],"optional":false}]}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":10580,"end":34214}]},"code":"import { FORMAT_XTB, FILETYPE_XTB, FORMAT_XMB } from '../api/constants';\r\nimport { format } from 'util';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { AbstractTranslationMessagesFile } from './abstract-translation-messages-file';\r\nimport { XtbTransUnit } from './xtb-trans-unit';\r\n/**\r\n * Created by martin on 23.05.2017.\r\n * xtb-File access.\r\n * xtb is the translated counterpart to xmb.\r\n */\r\nexport class XtbFile extends AbstractTranslationMessagesFile {\r\n    /**\r\n     * Create an xmb-File from source.\r\n     * @param _translationMessageFileFactory factory to create a translation file (xtb) for the xmb file\r\n     * @param xmlString file content\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * @return XmbFile\r\n     */\r\n    constructor(_translationMessageFileFactory, xmlString, path, encoding, optionalMaster) {\r\n        super();\r\n        this._translationMessageFileFactory = _translationMessageFileFactory;\r\n        this._warnings = [];\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this.initializeFromContent(xmlString, path, encoding, optionalMaster);\r\n    }\r\n    initializeFromContent(xmlString, path, encoding, optionalMaster) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        if (this._parsedDocument.getElementsByTagName('translationbundle').length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xtb file (should contain a translationbundle element)', path));\r\n        }\r\n        if (optionalMaster) {\r\n            try {\r\n                this._masterFile = this._translationMessageFileFactory.createFileFromFileContent(FORMAT_XMB, optionalMaster.xmlContent, optionalMaster.path, optionalMaster.encoding);\r\n                // check, wether this can be the master ...\r\n                const numberInMaster = this._masterFile.numberOfTransUnits();\r\n                const myNumber = this.numberOfTransUnits();\r\n                if (numberInMaster !== myNumber) {\r\n                    this._warnings.push(format('%s trans units found in master, but this file has %s. Check if it is the correct master', numberInMaster, myNumber));\r\n                }\r\n            }\r\n            catch (error) {\r\n                throw new Error(format('File \"%s\" seems to be no xmb file. An xtb file needs xmb as master file.', optionalMaster.path));\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    initializeTransUnits() {\r\n        this.transUnits = [];\r\n        const transUnitsInFile = this._parsedDocument.getElementsByTagName('translation');\r\n        for (let i = 0; i < transUnitsInFile.length; i++) {\r\n            const msg = transUnitsInFile.item(i);\r\n            const id = msg.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, msg without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            let masterUnit = null;\r\n            if (this._masterFile) {\r\n                masterUnit = this._masterFile.transUnitWithId(id);\r\n            }\r\n            this.transUnits.push(new XtbTransUnit(msg, id, this, masterUnit));\r\n        }\r\n    }\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xlf2', 'xmb', 'xtb'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    i18nFormat() {\r\n        return FORMAT_XTB;\r\n    }\r\n    /**\r\n     * File type.\r\n     * Here 'XTB'\r\n     */\r\n    fileType() {\r\n        return FILETYPE_XTB;\r\n    }\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    elementsWithMixedContent() {\r\n        return ['translation'];\r\n    }\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb/xtb.\r\n     * Try to guess it from master filename if any..\r\n     * @return source language.\r\n     */\r\n    sourceLanguage() {\r\n        if (this._masterFile) {\r\n            return this._masterFile.sourceLanguage();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb/xtb.\r\n     * @param language language\r\n     */\r\n    setSourceLanguage(language) {\r\n        // do nothing, xtb has no notation for this.\r\n    }\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    targetLanguage() {\r\n        const translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (translationbundleElem) {\r\n            return translationbundleElem.getAttribute('lang');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    setTargetLanguage(language) {\r\n        const translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (translationbundleElem) {\r\n            translationbundleElem.setAttribute('lang', language);\r\n        }\r\n    }\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    importNewTransUnit(foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        const newMasterTu = foreignTransUnit.cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        const translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (!translationbundleElem) {\r\n            throw new Error(format('File \"%s\" seems to be no xtb file (should contain a translationbundle element)', this._filename));\r\n        }\r\n        const translationElement = translationbundleElem.ownerDocument.createElement('translation');\r\n        translationElement.setAttribute('id', foreignTransUnit.id);\r\n        let newContent = (copyContent || isDefaultLang) ? foreignTransUnit.sourceContent() : '';\r\n        if (!foreignTransUnit.isICUMessage(newContent)) {\r\n            newContent = this.getNewTransUnitTargetPraefix() + newContent + this.getNewTransUnitTargetSuffix();\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(translationElement, newContent);\r\n        const newTu = new XtbTransUnit(translationElement, foreignTransUnit.id, this, newMasterTu);\r\n        let inserted = false;\r\n        let isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            const insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            translationbundleElem.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        }\r\n        else if (importAfterElement === null) {\r\n            const firstTranslationElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translation');\r\n            if (firstTranslationElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstTranslationElement);\r\n                inserted = true;\r\n            }\r\n            else {\r\n                // no trans-unit, empty file, so add to bundle at end\r\n                translationbundleElem.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        }\r\n        else {\r\n            const refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'translation', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    createTranslationFileForLang(lang, filename, isDefaultLang, copyContent) {\r\n        throw new Error(format('File \"%s\", xtb files are not translatable, they are already translations', filename));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieHRiLWZpbGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9pbXBsL3h0Yi1maWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sRUFBQyxVQUFVLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBQ3RFLE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDNUIsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQywrQkFBK0IsRUFBQyxNQUFNLHNDQUFzQyxDQUFDO0FBQ3JGLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU5Qzs7OztHQUlHO0FBRUgsTUFBTSxPQUFPLE9BQVEsU0FBUSwrQkFBK0I7SUFNeEQ7Ozs7Ozs7Ozs7T0FVRztJQUNILFlBQW9CLDhCQUErRCxFQUN2RSxTQUFpQixFQUFFLElBQVksRUFBRSxRQUF3QixFQUN6RCxjQUFnRjtRQUN4RixLQUFLLEVBQUUsQ0FBQztRQUhRLG1DQUE4QixHQUE5Qiw4QkFBOEIsQ0FBaUM7UUFJL0UsSUFBSSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7UUFDcEIsSUFBSSxDQUFDLGdDQUFnQyxHQUFHLENBQUMsQ0FBQztRQUMxQyxJQUFJLENBQUMscUJBQXFCLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFDMUUsQ0FBQztJQUVPLHFCQUFxQixDQUFDLFNBQWlCLEVBQUUsSUFBWSxFQUFFLFFBQXdCLEVBQ3pELGNBQWdGO1FBQzFHLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztRQUM3QyxJQUFJLElBQUksQ0FBQyxlQUFlLENBQUMsb0JBQW9CLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQzdFLE1BQU0sSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLGdGQUFnRixFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDbkg7UUFDRCxJQUFJLGNBQWMsRUFBRTtZQUNoQixJQUFJO2dCQUNBLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLDhCQUE4QixDQUFDLHlCQUF5QixDQUM1RSxVQUFVLEVBQ1YsY0FBYyxDQUFDLFVBQVUsRUFDekIsY0FBYyxDQUFDLElBQUksRUFDbkIsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUM3QiwyQ0FBMkM7Z0JBQzNDLE1BQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztnQkFDN0QsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixFQUFFLENBQUM7Z0JBQzNDLElBQUksY0FBYyxLQUFLLFFBQVEsRUFBRTtvQkFDN0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUN0Qix5RkFBeUYsRUFDekYsY0FBYyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7aUJBQ2xDO2FBQ0o7WUFBQyxPQUFPLEtBQUssRUFBRTtnQkFDWixNQUFNLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQywwRUFBMEUsRUFBRSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQzthQUM1SDtTQUNKO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVTLG9CQUFvQjtRQUMxQixJQUFJLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQztRQUNyQixNQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsb0JBQW9CLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDbEYsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUM5QyxNQUFNLEdBQUcsR0FBRyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckMsTUFBTSxFQUFFLEdBQUcsR0FBRyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNsQyxJQUFJLENBQUMsRUFBRSxFQUFFO2dCQUNMLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyw4REFBOEQsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQzthQUMvRztZQUNELElBQUksVUFBVSxHQUFlLElBQUksQ0FBQztZQUNsQyxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7Z0JBQ2xCLFVBQVUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGVBQWUsQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUNyRDtZQUNELElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksWUFBWSxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFzQixVQUFVLENBQUMsQ0FBQyxDQUFDO1NBQ3pGO0lBQ0wsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxVQUFVO1FBQ2IsT0FBTyxVQUFVLENBQUM7SUFDdEIsQ0FBQztJQUVEOzs7T0FHRztJQUNJLFFBQVE7UUFDWCxPQUFPLFlBQVksQ0FBQztJQUN4QixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNPLHdCQUF3QjtRQUM5QixPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDM0IsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0ksY0FBYztRQUNqQixJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDbEIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQzVDO2FBQU07WUFDSCxPQUFPLElBQUksQ0FBQztTQUNmO0lBQ0wsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxpQkFBaUIsQ0FBQyxRQUFnQjtRQUNyQyw0Q0FBNEM7SUFDaEQsQ0FBQztJQUVEOzs7T0FHRztJQUNJLGNBQWM7UUFDakIsTUFBTSxxQkFBcUIsR0FBRyxZQUFZLENBQUMsd0JBQXdCLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO1FBQy9HLElBQUkscUJBQXFCLEVBQUU7WUFDdkIsT0FBTyxxQkFBcUIsQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDckQ7YUFBTTtZQUNILE9BQU8sSUFBSSxDQUFDO1NBQ2Y7SUFDTCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksaUJBQWlCLENBQUMsUUFBZ0I7UUFDckMsTUFBTSxxQkFBcUIsR0FBRyxZQUFZLENBQUMsd0JBQXdCLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO1FBQy9HLElBQUkscUJBQXFCLEVBQUU7WUFDdkIscUJBQXFCLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztTQUN4RDtJQUNMLENBQUM7SUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O09BcUJHO0lBQ0gsa0JBQWtCLENBQUMsZ0JBQTRCLEVBQUUsYUFBc0IsRUFBRSxXQUFvQixFQUFFLGtCQUErQjtRQUUxSCxJQUFJLElBQUksQ0FBQyxlQUFlLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLEVBQUU7WUFDM0MsTUFBTSxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsd0RBQXdELEVBQUUsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUMxRztRQUNELE1BQU0sV0FBVyxHQUF3QixnQkFBaUIsQ0FBQyx1QkFBdUIsQ0FBQyxhQUFhLEVBQUUsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3JILE1BQU0scUJBQXFCLEdBQUcsWUFBWSxDQUFDLHdCQUF3QixDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztRQUMvRyxJQUFJLENBQUMscUJBQXFCLEVBQUU7WUFDeEIsTUFBTSxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsZ0ZBQWdGLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7U0FDN0g7UUFDRCxNQUFNLGtCQUFrQixHQUFHLHFCQUFxQixDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDNUYsa0JBQWtCLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMzRCxJQUFJLFVBQVUsR0FBRyxDQUFDLFdBQVcsSUFBSSxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUN4RixJQUFJLENBQXNCLGdCQUFpQixDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsRUFBRTtZQUNsRSxVQUFVLEdBQUcsSUFBSSxDQUFDLDRCQUE0QixFQUFFLEdBQUcsVUFBVSxHQUFHLElBQUksQ0FBQywyQkFBMkIsRUFBRSxDQUFDO1NBQ3RHO1FBQ0QsWUFBWSxDQUFDLDRCQUE0QixDQUFDLGtCQUFrQixFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQzFFLE1BQU0sS0FBSyxHQUFHLElBQUksWUFBWSxDQUFDLGtCQUFrQixFQUFFLGdCQUFnQixDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFDM0YsSUFBSSxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLElBQUksd0JBQXdCLEdBQUcsS0FBSyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxDQUFDLGtCQUFrQixFQUFFO1lBQ3RCLE1BQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsa0JBQWtCLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDbkUsSUFBSSxDQUFDLENBQUMsY0FBYyxFQUFFO2dCQUNsQix3QkFBd0IsR0FBRyxJQUFJLENBQUM7YUFDbkM7U0FDSjtRQUNELElBQUksa0JBQWtCLEtBQUssU0FBUyxJQUFJLENBQUMsa0JBQWtCLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxFQUFFO1lBQ3ZGLHFCQUFxQixDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQztZQUN4RCxRQUFRLEdBQUcsSUFBSSxDQUFDO1NBQ25CO2FBQU0sSUFBSSxrQkFBa0IsS0FBSyxJQUFJLEVBQUU7WUFDcEMsTUFBTSx1QkFBdUIsR0FBRyxZQUFZLENBQUMsd0JBQXdCLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRSxhQUFhLENBQUMsQ0FBQztZQUMzRyxJQUFJLHVCQUF1QixFQUFFO2dCQUN6QixZQUFZLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxZQUFZLEVBQUUsRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO2dCQUN6RSxRQUFRLEdBQUcsSUFBSSxDQUFDO2FBQ25CO2lCQUFNO2dCQUNILHFEQUFxRDtnQkFDckQscUJBQXFCLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDO2dCQUN4RCxRQUFRLEdBQUcsSUFBSSxDQUFDO2FBQ25CO1NBQ0o7YUFBTTtZQUNILE1BQU0sY0FBYyxHQUFHLFlBQVksQ0FBQyx3QkFBd0IsQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLGFBQWEsRUFBRSxrQkFBa0IsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUN6SCxJQUFJLGNBQWMsRUFBRTtnQkFDaEIsWUFBWSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsWUFBWSxFQUFFLEVBQUUsY0FBYyxDQUFDLENBQUM7Z0JBQy9ELFFBQVEsR0FBRyxJQUFJLENBQUM7YUFDbkI7U0FDSjtRQUNELElBQUksUUFBUSxFQUFFO1lBQ1YsSUFBSSxDQUFDLHdCQUF3QixFQUFFLENBQUM7WUFDaEMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDNUIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1lBQ3BCLE9BQU8sS0FBSyxDQUFDO1NBQ2hCO2FBQU07WUFDSCxPQUFPLElBQUksQ0FBQztTQUNmO0lBQ0wsQ0FBQztJQUVEOzs7Ozs7Ozs7Ozs7O09BYUc7SUFDSSw0QkFBNEIsQ0FBQyxJQUFZLEVBQUUsUUFBZ0IsRUFBRSxhQUFzQixFQUFFLFdBQW9CO1FBRTVHLE1BQU0sSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLDBFQUEwRSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDbEgsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVGYWN0b3J5fSBmcm9tICcuLi9hcGkvaS10cmFuc2xhdGlvbi1tZXNzYWdlcy1maWxlLWZhY3RvcnknO1xyXG5pbXBvcnQge0lUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZX0gZnJvbSAnLi4vYXBpL2ktdHJhbnNsYXRpb24tbWVzc2FnZXMtZmlsZSc7XHJcbmltcG9ydCB7SVRyYW5zVW5pdH0gZnJvbSAnLi4vYXBpL2ktdHJhbnMtdW5pdCc7XHJcbmltcG9ydCB7Rk9STUFUX1hUQiwgRklMRVRZUEVfWFRCLCBGT1JNQVRfWE1CfSBmcm9tICcuLi9hcGkvY29uc3RhbnRzJztcclxuaW1wb3J0IHtmb3JtYXR9IGZyb20gJ3V0aWwnO1xyXG5pbXBvcnQge0RPTVV0aWxpdGllc30gZnJvbSAnLi9kb20tdXRpbGl0aWVzJztcclxuaW1wb3J0IHtBYnN0cmFjdFRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlfSBmcm9tICcuL2Fic3RyYWN0LXRyYW5zbGF0aW9uLW1lc3NhZ2VzLWZpbGUnO1xyXG5pbXBvcnQge1h0YlRyYW5zVW5pdH0gZnJvbSAnLi94dGItdHJhbnMtdW5pdCc7XHJcbmltcG9ydCB7QWJzdHJhY3RUcmFuc1VuaXR9IGZyb20gJy4vYWJzdHJhY3QtdHJhbnMtdW5pdCc7XHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAyMy4wNS4yMDE3LlxyXG4gKiB4dGItRmlsZSBhY2Nlc3MuXHJcbiAqIHh0YiBpcyB0aGUgdHJhbnNsYXRlZCBjb3VudGVycGFydCB0byB4bWIuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFh0YkZpbGUgZXh0ZW5kcyBBYnN0cmFjdFRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlIGltcGxlbWVudHMgSVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlIHtcclxuXHJcbiAgICAvLyBhdHRhY2hlZCBtYXN0ZXIgZmlsZSwgaWYgYW55XHJcbiAgICAvLyB1c2VkIGFzIHNvdXJjZSB0byBkZXRlcm1pbmUgc3RhdGUgLi4uXHJcbiAgICBwcml2YXRlIF9tYXN0ZXJGaWxlOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGU7IC8vIGFuIHhtYi1maWxlXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGUgYW4geG1iLUZpbGUgZnJvbSBzb3VyY2UuXHJcbiAgICAgKiBAcGFyYW0gX3RyYW5zbGF0aW9uTWVzc2FnZUZpbGVGYWN0b3J5IGZhY3RvcnkgdG8gY3JlYXRlIGEgdHJhbnNsYXRpb24gZmlsZSAoeHRiKSBmb3IgdGhlIHhtYiBmaWxlXHJcbiAgICAgKiBAcGFyYW0geG1sU3RyaW5nIGZpbGUgY29udGVudFxyXG4gICAgICogQHBhcmFtIHBhdGggUGF0aCB0byBmaWxlXHJcbiAgICAgKiBAcGFyYW0gZW5jb2Rpbmcgb3B0aW9uYWwgZW5jb2Rpbmcgb2YgdGhlIHhtbC5cclxuICAgICAqIFRoaXMgaXMgcmVhZCBmcm9tIHRoZSBmaWxlLCBidXQgaWYgeW91IGtub3cgaXQgYmVmb3JlLCB5b3UgY2FuIGF2b2lkIHJlYWRpbmcgdGhlIGZpbGUgdHdpY2UuXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9uYWxNYXN0ZXIgaW4gY2FzZSBvZiB4bWIgdGhlIG1hc3RlciBmaWxlLCB0aGF0IGNvbnRhaW5zIHRoZSBvcmlnaW5hbCB0ZXh0cy5cclxuICAgICAqICh0aGlzIGlzIHVzZWQgdG8gc3VwcG9ydCBzdGF0ZSBpbmZvcywgdGhhdCBhcmUgYmFzZWQgb24gY29tcGFyaW5nIG9yaWdpbmFsIHdpdGggdHJhbnNsYXRlZCB2ZXJzaW9uKVxyXG4gICAgICogQHJldHVybiBYbWJGaWxlXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX3RyYW5zbGF0aW9uTWVzc2FnZUZpbGVGYWN0b3J5OiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVGYWN0b3J5LFxyXG4gICAgICAgICAgICAgICAgeG1sU3RyaW5nOiBzdHJpbmcsIHBhdGg6IHN0cmluZywgZW5jb2Rpbmc6IEJ1ZmZlckVuY29kaW5nICxcclxuICAgICAgICAgICAgICAgIG9wdGlvbmFsTWFzdGVyPzogeyB4bWxDb250ZW50OiBzdHJpbmcsIHBhdGg6IHN0cmluZywgZW5jb2Rpbmc6IEJ1ZmZlckVuY29kaW5nICB9KSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLl93YXJuaW5ncyA9IFtdO1xyXG4gICAgICAgIHRoaXMuX251bWJlck9mVHJhbnNVbml0c1dpdGhNaXNzaW5nSWQgPSAwO1xyXG4gICAgICAgIHRoaXMuaW5pdGlhbGl6ZUZyb21Db250ZW50KHhtbFN0cmluZywgcGF0aCwgZW5jb2RpbmcsIG9wdGlvbmFsTWFzdGVyKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGluaXRpYWxpemVGcm9tQ29udGVudCh4bWxTdHJpbmc6IHN0cmluZywgcGF0aDogc3RyaW5nLCBlbmNvZGluZzogQnVmZmVyRW5jb2RpbmcgLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uYWxNYXN0ZXI/OiB7IHhtbENvbnRlbnQ6IHN0cmluZywgcGF0aDogc3RyaW5nLCBlbmNvZGluZzogQnVmZmVyRW5jb2RpbmcgIH0pOiBYdGJGaWxlIHtcclxuICAgICAgICB0aGlzLnBhcnNlQ29udGVudCh4bWxTdHJpbmcsIHBhdGgsIGVuY29kaW5nKTtcclxuICAgICAgICBpZiAodGhpcy5fcGFyc2VkRG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3RyYW5zbGF0aW9uYnVuZGxlJykubGVuZ3RoICE9PSAxKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihmb3JtYXQoJ0ZpbGUgXCIlc1wiIHNlZW1zIHRvIGJlIG5vIHh0YiBmaWxlIChzaG91bGQgY29udGFpbiBhIHRyYW5zbGF0aW9uYnVuZGxlIGVsZW1lbnQpJywgcGF0aCkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAob3B0aW9uYWxNYXN0ZXIpIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX21hc3RlckZpbGUgPSB0aGlzLl90cmFuc2xhdGlvbk1lc3NhZ2VGaWxlRmFjdG9yeS5jcmVhdGVGaWxlRnJvbUZpbGVDb250ZW50KFxyXG4gICAgICAgICAgICAgICAgICAgIEZPUk1BVF9YTUIsXHJcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9uYWxNYXN0ZXIueG1sQ29udGVudCxcclxuICAgICAgICAgICAgICAgICAgICBvcHRpb25hbE1hc3Rlci5wYXRoLFxyXG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbmFsTWFzdGVyLmVuY29kaW5nKTtcclxuICAgICAgICAgICAgICAgIC8vIGNoZWNrLCB3ZXRoZXIgdGhpcyBjYW4gYmUgdGhlIG1hc3RlciAuLi5cclxuICAgICAgICAgICAgICAgIGNvbnN0IG51bWJlckluTWFzdGVyID0gdGhpcy5fbWFzdGVyRmlsZS5udW1iZXJPZlRyYW5zVW5pdHMoKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG15TnVtYmVyID0gdGhpcy5udW1iZXJPZlRyYW5zVW5pdHMoKTtcclxuICAgICAgICAgICAgICAgIGlmIChudW1iZXJJbk1hc3RlciAhPT0gbXlOdW1iZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl93YXJuaW5ncy5wdXNoKGZvcm1hdChcclxuICAgICAgICAgICAgICAgICAgICAgICAgJyVzIHRyYW5zIHVuaXRzIGZvdW5kIGluIG1hc3RlciwgYnV0IHRoaXMgZmlsZSBoYXMgJXMuIENoZWNrIGlmIGl0IGlzIHRoZSBjb3JyZWN0IG1hc3RlcicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG51bWJlckluTWFzdGVyLCBteU51bWJlcikpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdCgnRmlsZSBcIiVzXCIgc2VlbXMgdG8gYmUgbm8geG1iIGZpbGUuIEFuIHh0YiBmaWxlIG5lZWRzIHhtYiBhcyBtYXN0ZXIgZmlsZS4nLCBvcHRpb25hbE1hc3Rlci5wYXRoKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIGluaXRpYWxpemVUcmFuc1VuaXRzKCkge1xyXG4gICAgICAgIHRoaXMudHJhbnNVbml0cyA9IFtdO1xyXG4gICAgICAgIGNvbnN0IHRyYW5zVW5pdHNJbkZpbGUgPSB0aGlzLl9wYXJzZWREb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgndHJhbnNsYXRpb24nKTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRyYW5zVW5pdHNJbkZpbGUubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgbXNnID0gdHJhbnNVbml0c0luRmlsZS5pdGVtKGkpO1xyXG4gICAgICAgICAgICBjb25zdCBpZCA9IG1zZy5nZXRBdHRyaWJ1dGUoJ2lkJyk7XHJcbiAgICAgICAgICAgIGlmICghaWQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3dhcm5pbmdzLnB1c2goZm9ybWF0KCdvb3BzLCBtc2cgd2l0aG91dCBcImlkXCIgZm91bmQgaW4gbWFzdGVyLCBwbGVhc2UgY2hlY2sgZmlsZSAlcycsIHRoaXMuX2ZpbGVuYW1lKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGV0IG1hc3RlclVuaXQ6IElUcmFuc1VuaXQgPSBudWxsO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fbWFzdGVyRmlsZSkge1xyXG4gICAgICAgICAgICAgICAgbWFzdGVyVW5pdCA9IHRoaXMuX21hc3RlckZpbGUudHJhbnNVbml0V2l0aElkKGlkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnRyYW5zVW5pdHMucHVzaChuZXcgWHRiVHJhbnNVbml0KG1zZywgaWQsIHRoaXMsIDxBYnN0cmFjdFRyYW5zVW5pdD4gbWFzdGVyVW5pdCkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEZpbGUgZm9ybWF0IGFzIGl0IGlzIHVzZWQgaW4gY29uZmlnIGZpbGVzLlxyXG4gICAgICogQ3VycmVudGx5ICd4bGYnLCAneGxmMicsICd4bWInLCAneHRiJ1xyXG4gICAgICogUmV0dXJucyBvbmUgb2YgdGhlIGNvbnN0YW50cyBGT1JNQVRfLi5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGkxOG5Gb3JtYXQoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gRk9STUFUX1hUQjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEZpbGUgdHlwZS5cclxuICAgICAqIEhlcmUgJ1hUQidcclxuICAgICAqL1xyXG4gICAgcHVibGljIGZpbGVUeXBlKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIEZJTEVUWVBFX1hUQjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHJldHVybiB0YWcgbmFtZXMgb2YgYWxsIGVsZW1lbnRzIHRoYXQgaGF2ZSBtaXhlZCBjb250ZW50LlxyXG4gICAgICogVGhlc2UgZWxlbWVudHMgd2lsbCBub3QgYmUgYmVhdXRpZmllZC5cclxuICAgICAqIFR5cGljYWwgY2FuZGlkYXRlcyBhcmUgc291cmNlIGFuZCB0YXJnZXQuXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBlbGVtZW50c1dpdGhNaXhlZENvbnRlbnQoKTogc3RyaW5nW10ge1xyXG4gICAgICAgIHJldHVybiBbJ3RyYW5zbGF0aW9uJ107XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgc291cmNlIGxhbmd1YWdlLlxyXG4gICAgICogVW5zdXBwb3J0ZWQgaW4geG1iL3h0Yi5cclxuICAgICAqIFRyeSB0byBndWVzcyBpdCBmcm9tIG1hc3RlciBmaWxlbmFtZSBpZiBhbnkuLlxyXG4gICAgICogQHJldHVybiBzb3VyY2UgbGFuZ3VhZ2UuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzb3VyY2VMYW5ndWFnZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIGlmICh0aGlzLl9tYXN0ZXJGaWxlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9tYXN0ZXJGaWxlLnNvdXJjZUxhbmd1YWdlKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogRWRpdCB0aGUgc291cmNlIGxhbmd1YWdlLlxyXG4gICAgICogVW5zdXBwb3J0ZWQgaW4geG1iL3h0Yi5cclxuICAgICAqIEBwYXJhbSBsYW5ndWFnZSBsYW5ndWFnZVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2V0U291cmNlTGFuZ3VhZ2UobGFuZ3VhZ2U6IHN0cmluZykge1xyXG4gICAgICAgIC8vIGRvIG5vdGhpbmcsIHh0YiBoYXMgbm8gbm90YXRpb24gZm9yIHRoaXMuXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgdGFyZ2V0IGxhbmd1YWdlLlxyXG4gICAgICogQHJldHVybiB0YXJnZXQgbGFuZ3VhZ2UuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyB0YXJnZXRMYW5ndWFnZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IHRyYW5zbGF0aW9uYnVuZGxlRWxlbSA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fcGFyc2VkRG9jdW1lbnQsICd0cmFuc2xhdGlvbmJ1bmRsZScpO1xyXG4gICAgICAgIGlmICh0cmFuc2xhdGlvbmJ1bmRsZUVsZW0pIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRyYW5zbGF0aW9uYnVuZGxlRWxlbS5nZXRBdHRyaWJ1dGUoJ2xhbmcnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBFZGl0IHRoZSB0YXJnZXQgbGFuZ3VhZ2UuXHJcbiAgICAgKiBAcGFyYW0gbGFuZ3VhZ2UgbGFuZ3VhZ2VcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldFRhcmdldExhbmd1YWdlKGxhbmd1YWdlOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCB0cmFuc2xhdGlvbmJ1bmRsZUVsZW0gPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX3BhcnNlZERvY3VtZW50LCAndHJhbnNsYXRpb25idW5kbGUnKTtcclxuICAgICAgICBpZiAodHJhbnNsYXRpb25idW5kbGVFbGVtKSB7XHJcbiAgICAgICAgICAgIHRyYW5zbGF0aW9uYnVuZGxlRWxlbS5zZXRBdHRyaWJ1dGUoJ2xhbmcnLCBsYW5ndWFnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQWRkIGEgbmV3IHRyYW5zLXVuaXQgdG8gdGhpcyBmaWxlLlxyXG4gICAgICogVGhlIHRyYW5zIHVuaXQgc3RlbXMgZnJvbSBhbm90aGVyIGZpbGUuXHJcbiAgICAgKiBJdCBjb3BpZXMgdGhlIHNvdXJjZSBjb250ZW50IG9mIHRoZSB0dSB0byB0aGUgdGFyZ2V0IGNvbnRlbnQgdG9vLFxyXG4gICAgICogZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgb2YgaXNEZWZhdWx0TGFuZyBhbmQgY29weUNvbnRlbnQuXHJcbiAgICAgKiBTbyB0aGUgc291cmNlIGNhbiBiZSB1c2VkIGFzIGEgZHVtbXkgdHJhbnNsYXRpb24uXHJcbiAgICAgKiAodXNlZCBieSB4bGlmZm1lcmdlKVxyXG4gICAgICogQHBhcmFtIGZvcmVpZ25UcmFuc1VuaXQgdGhlIHRyYW5zIHVuaXQgdG8gYmUgaW1wb3J0ZWQuXHJcbiAgICAgKiBAcGFyYW0gaXNEZWZhdWx0TGFuZyBGbGFnLCB3ZXRoZXIgZmlsZSBjb250YWlucyB0aGUgZGVmYXVsdCBsYW5ndWFnZS5cclxuICAgICAqIFRoZW4gc291cmNlIGFuZCB0YXJnZXQgYXJlIGp1c3QgZXF1YWwuXHJcbiAgICAgKiBUaGUgY29udGVudCB3aWxsIGJlIGNvcGllZC5cclxuICAgICAqIFN0YXRlIHdpbGwgYmUgZmluYWwuXHJcbiAgICAgKiBAcGFyYW0gY29weUNvbnRlbnQgRmxhZywgd2V0aGVyIHRvIGNvcHkgY29udGVudCBvciBsZWF2ZSBpdCBlbXB0eS5cclxuICAgICAqIFdiZW4gdHJ1ZSwgY29udGVudCB3aWxsIGJlIGNvcGllZCBmcm9tIHNvdXJjZS5cclxuICAgICAqIFdoZW4gZmFsc2UsIGNvbnRlbnQgd2lsbCBiZSBsZWZ0IGVtcHR5IChpZiBpdCBpcyBub3QgdGhlIGRlZmF1bHQgbGFuZ3VhZ2UpLlxyXG4gICAgICogQHBhcmFtIGltcG9ydEFmdGVyRWxlbWVudCBvcHRpb25hbCAoc2luY2UgMS4xMCkgb3RoZXIgdHJhbnN1bml0IChwYXJ0IG9mIHRoaXMgZmlsZSksIHRoYXQgc2hvdWxkIGJlIHVzZWQgYXMgYW5jZXN0b3IuXHJcbiAgICAgKiBOZXdseSBpbXBvcnRlZCB0cmFucyB1bml0IGlzIHRoZW4gaW5zZXJ0ZWQgZGlyZWN0bHkgYWZ0ZXIgdGhpcyBlbGVtZW50LlxyXG4gICAgICogSWYgbm90IHNldCBvciBub3QgcGFydCBvZiB0aGlzIGZpbGUsIG5ldyB1bml0IHdpbGwgYmUgaW1wb3J0ZWQgYXQgdGhlIGVuZC5cclxuICAgICAqIElmIGV4cGxpY2l0eSBzZXQgdG8gbnVsbCwgbmV3IHVuaXQgd2lsbCBiZSBpbXBvcnRlZCBhdCB0aGUgc3RhcnQuXHJcbiAgICAgKiBAcmV0dXJuIHRoZSBuZXdseSBpbXBvcnRlZCB0cmFucyB1bml0IChzaW5jZSB2ZXJzaW9uIDEuNy4wKVxyXG4gICAgICogQHRocm93cyBhbiBlcnJvciBpZiB0cmFucy11bml0IHdpdGggc2FtZSBpZCBhbHJlYWR5IGlzIGluIHRoZSBmaWxlLlxyXG4gICAgICovXHJcbiAgICBpbXBvcnROZXdUcmFuc1VuaXQoZm9yZWlnblRyYW5zVW5pdDogSVRyYW5zVW5pdCwgaXNEZWZhdWx0TGFuZzogYm9vbGVhbiwgY29weUNvbnRlbnQ6IGJvb2xlYW4sIGltcG9ydEFmdGVyRWxlbWVudD86IElUcmFuc1VuaXQpXHJcbiAgICAgICAgOiBJVHJhbnNVbml0IHtcclxuICAgICAgICBpZiAodGhpcy50cmFuc1VuaXRXaXRoSWQoZm9yZWlnblRyYW5zVW5pdC5pZCkpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdCgndHUgd2l0aCBpZCAlcyBhbHJlYWR5IGV4aXN0cyBpbiBmaWxlLCBjYW5ub3QgaW1wb3J0IGl0JywgZm9yZWlnblRyYW5zVW5pdC5pZCkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBuZXdNYXN0ZXJUdSA9ICg8QWJzdHJhY3RUcmFuc1VuaXQ+IGZvcmVpZ25UcmFuc1VuaXQpLmNsb25lV2l0aFNvdXJjZUFzVGFyZ2V0KGlzRGVmYXVsdExhbmcsIGNvcHlDb250ZW50LCB0aGlzKTtcclxuICAgICAgICBjb25zdCB0cmFuc2xhdGlvbmJ1bmRsZUVsZW0gPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX3BhcnNlZERvY3VtZW50LCAndHJhbnNsYXRpb25idW5kbGUnKTtcclxuICAgICAgICBpZiAoIXRyYW5zbGF0aW9uYnVuZGxlRWxlbSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZm9ybWF0KCdGaWxlIFwiJXNcIiBzZWVtcyB0byBiZSBubyB4dGIgZmlsZSAoc2hvdWxkIGNvbnRhaW4gYSB0cmFuc2xhdGlvbmJ1bmRsZSBlbGVtZW50KScsIHRoaXMuX2ZpbGVuYW1lKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHRyYW5zbGF0aW9uRWxlbWVudCA9IHRyYW5zbGF0aW9uYnVuZGxlRWxlbS5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RyYW5zbGF0aW9uJyk7XHJcbiAgICAgICAgdHJhbnNsYXRpb25FbGVtZW50LnNldEF0dHJpYnV0ZSgnaWQnLCBmb3JlaWduVHJhbnNVbml0LmlkKTtcclxuICAgICAgICBsZXQgbmV3Q29udGVudCA9IChjb3B5Q29udGVudCB8fCBpc0RlZmF1bHRMYW5nKSA/IGZvcmVpZ25UcmFuc1VuaXQuc291cmNlQ29udGVudCgpIDogJyc7XHJcbiAgICAgICAgaWYgKCEoPEFic3RyYWN0VHJhbnNVbml0PiBmb3JlaWduVHJhbnNVbml0KS5pc0lDVU1lc3NhZ2UobmV3Q29udGVudCkpIHtcclxuICAgICAgICAgICAgbmV3Q29udGVudCA9IHRoaXMuZ2V0TmV3VHJhbnNVbml0VGFyZ2V0UHJhZWZpeCgpICsgbmV3Q29udGVudCArIHRoaXMuZ2V0TmV3VHJhbnNVbml0VGFyZ2V0U3VmZml4KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIERPTVV0aWxpdGllcy5yZXBsYWNlQ29udGVudFdpdGhYTUxDb250ZW50KHRyYW5zbGF0aW9uRWxlbWVudCwgbmV3Q29udGVudCk7XHJcbiAgICAgICAgY29uc3QgbmV3VHUgPSBuZXcgWHRiVHJhbnNVbml0KHRyYW5zbGF0aW9uRWxlbWVudCwgZm9yZWlnblRyYW5zVW5pdC5pZCwgdGhpcywgbmV3TWFzdGVyVHUpO1xyXG4gICAgICAgIGxldCBpbnNlcnRlZCA9IGZhbHNlO1xyXG4gICAgICAgIGxldCBpc0FmdGVyRWxlbWVudFBhcnRPZkZpbGUgPSBmYWxzZTtcclxuICAgICAgICBpZiAoISFpbXBvcnRBZnRlckVsZW1lbnQpIHtcclxuICAgICAgICAgICAgY29uc3QgaW5zZXJ0aW9uUG9pbnQgPSB0aGlzLnRyYW5zVW5pdFdpdGhJZChpbXBvcnRBZnRlckVsZW1lbnQuaWQpO1xyXG4gICAgICAgICAgICBpZiAoISFpbnNlcnRpb25Qb2ludCkge1xyXG4gICAgICAgICAgICAgICAgaXNBZnRlckVsZW1lbnRQYXJ0T2ZGaWxlID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaW1wb3J0QWZ0ZXJFbGVtZW50ID09PSB1bmRlZmluZWQgfHwgKGltcG9ydEFmdGVyRWxlbWVudCAmJiAhaXNBZnRlckVsZW1lbnRQYXJ0T2ZGaWxlKSkge1xyXG4gICAgICAgICAgICB0cmFuc2xhdGlvbmJ1bmRsZUVsZW0uYXBwZW5kQ2hpbGQobmV3VHUuYXNYbWxFbGVtZW50KCkpO1xyXG4gICAgICAgICAgICBpbnNlcnRlZCA9IHRydWU7XHJcbiAgICAgICAgfSBlbHNlIGlmIChpbXBvcnRBZnRlckVsZW1lbnQgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgY29uc3QgZmlyc3RUcmFuc2xhdGlvbkVsZW1lbnQgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX3BhcnNlZERvY3VtZW50LCAndHJhbnNsYXRpb24nKTtcclxuICAgICAgICAgICAgaWYgKGZpcnN0VHJhbnNsYXRpb25FbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICBET01VdGlsaXRpZXMuaW5zZXJ0QmVmb3JlKG5ld1R1LmFzWG1sRWxlbWVudCgpLCBmaXJzdFRyYW5zbGF0aW9uRWxlbWVudCk7XHJcbiAgICAgICAgICAgICAgICBpbnNlcnRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAvLyBubyB0cmFucy11bml0LCBlbXB0eSBmaWxlLCBzbyBhZGQgdG8gYnVuZGxlIGF0IGVuZFxyXG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25idW5kbGVFbGVtLmFwcGVuZENoaWxkKG5ld1R1LmFzWG1sRWxlbWVudCgpKTtcclxuICAgICAgICAgICAgICAgIGluc2VydGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlZlVuaXRFbGVtZW50ID0gRE9NVXRpbGl0aWVzLmdldEVsZW1lbnRCeVRhZ05hbWVBbmRJZCh0aGlzLl9wYXJzZWREb2N1bWVudCwgJ3RyYW5zbGF0aW9uJywgaW1wb3J0QWZ0ZXJFbGVtZW50LmlkKTtcclxuICAgICAgICAgICAgaWYgKHJlZlVuaXRFbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICBET01VdGlsaXRpZXMuaW5zZXJ0QWZ0ZXIobmV3VHUuYXNYbWxFbGVtZW50KCksIHJlZlVuaXRFbGVtZW50KTtcclxuICAgICAgICAgICAgICAgIGluc2VydGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaW5zZXJ0ZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5sYXp5SW5pdGlhbGl6ZVRyYW5zVW5pdHMoKTtcclxuICAgICAgICAgICAgdGhpcy50cmFuc1VuaXRzLnB1c2gobmV3VHUpO1xyXG4gICAgICAgICAgICB0aGlzLmNvdW50TnVtYmVycygpO1xyXG4gICAgICAgICAgICByZXR1cm4gbmV3VHU7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIGEgbmV3IHRyYW5zbGF0aW9uIGZpbGUgZm9yIHRoaXMgZmlsZSBmb3IgYSBnaXZlbiBsYW5ndWFnZS5cclxuICAgICAqIE5vcm1hbGx5LCB0aGlzIGlzIGp1c3QgYSBjb3B5IG9mIHRoZSBvcmlnaW5hbCBvbmUuXHJcbiAgICAgKiBCdXQgZm9yIFhNQiB0aGUgdHJhbnNsYXRpb24gZmlsZSBoYXMgZm9ybWF0ICdYVEInLlxyXG4gICAgICogQHBhcmFtIGxhbmcgTGFuZ3VhZ2UgY29kZVxyXG4gICAgICogQHBhcmFtIGZpbGVuYW1lIGV4cGVjdGVkIGZpbGVuYW1lIHRvIHN0b3JlIGZpbGVcclxuICAgICAqIEBwYXJhbSBpc0RlZmF1bHRMYW5nIEZsYWcsIHdldGhlciBmaWxlIGNvbnRhaW5zIHRoZSBkZWZhdWx0IGxhbmd1YWdlLlxyXG4gICAgICogVGhlbiBzb3VyY2UgYW5kIHRhcmdldCBhcmUganVzdCBlcXVhbC5cclxuICAgICAqIFRoZSBjb250ZW50IHdpbGwgYmUgY29waWVkLlxyXG4gICAgICogU3RhdGUgd2lsbCBiZSBmaW5hbC5cclxuICAgICAqIEBwYXJhbSBjb3B5Q29udGVudCBGbGFnLCB3ZXRoZXIgdG8gY29weSBjb250ZW50IG9yIGxlYXZlIGl0IGVtcHR5LlxyXG4gICAgICogV2JlbiB0cnVlLCBjb250ZW50IHdpbGwgYmUgY29waWVkIGZyb20gc291cmNlLlxyXG4gICAgICogV2hlbiBmYWxzZSwgY29udGVudCB3aWxsIGJlIGxlZnQgZW1wdHkgKGlmIGl0IGlzIG5vdCB0aGUgZGVmYXVsdCBsYW5ndWFnZSkuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBjcmVhdGVUcmFuc2xhdGlvbkZpbGVGb3JMYW5nKGxhbmc6IHN0cmluZywgZmlsZW5hbWU6IHN0cmluZywgaXNEZWZhdWx0TGFuZzogYm9vbGVhbiwgY29weUNvbnRlbnQ6IGJvb2xlYW4pXHJcbiAgICAgICAgOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihmb3JtYXQoJ0ZpbGUgXCIlc1wiLCB4dGIgZmlsZXMgYXJlIG5vdCB0cmFuc2xhdGFibGUsIHRoZXkgYXJlIGFscmVhZHkgdHJhbnNsYXRpb25zJywgZmlsZW5hbWUpKTtcclxuICAgIH1cclxufVxyXG4iXX0=","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","util","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-translation-messages-file.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xtb-trans-unit.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xtb-file.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { FORMAT_XTB, FILETYPE_XTB, FORMAT_XMB } from '../api/constants';\r\nimport { format } from 'util';\r\nimport { DOMUtilities } from './dom-utilities';\r\nimport { AbstractTranslationMessagesFile } from './abstract-translation-messages-file';\r\nimport { XtbTransUnit } from './xtb-trans-unit';\r\n/**\r\n * Created by martin on 23.05.2017.\r\n * xtb-File access.\r\n * xtb is the translated counterpart to xmb.\r\n */\r\nexport class XtbFile extends AbstractTranslationMessagesFile {\r\n    /**\r\n     * Create an xmb-File from source.\r\n     * @param _translationMessageFileFactory factory to create a translation file (xtb) for the xmb file\r\n     * @param xmlString file content\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * @return XmbFile\r\n     */\r\n    constructor(_translationMessageFileFactory, xmlString, path, encoding, optionalMaster) {\r\n        super();\r\n        this._translationMessageFileFactory = _translationMessageFileFactory;\r\n        this._warnings = [];\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this.initializeFromContent(xmlString, path, encoding, optionalMaster);\r\n    }\r\n    initializeFromContent(xmlString, path, encoding, optionalMaster) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        if (this._parsedDocument.getElementsByTagName('translationbundle').length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xtb file (should contain a translationbundle element)', path));\r\n        }\r\n        if (optionalMaster) {\r\n            try {\r\n                this._masterFile = this._translationMessageFileFactory.createFileFromFileContent(FORMAT_XMB, optionalMaster.xmlContent, optionalMaster.path, optionalMaster.encoding);\r\n                // check, wether this can be the master ...\r\n                const numberInMaster = this._masterFile.numberOfTransUnits();\r\n                const myNumber = this.numberOfTransUnits();\r\n                if (numberInMaster !== myNumber) {\r\n                    this._warnings.push(format('%s trans units found in master, but this file has %s. Check if it is the correct master', numberInMaster, myNumber));\r\n                }\r\n            }\r\n            catch (error) {\r\n                throw new Error(format('File \"%s\" seems to be no xmb file. An xtb file needs xmb as master file.', optionalMaster.path));\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    initializeTransUnits() {\r\n        this.transUnits = [];\r\n        const transUnitsInFile = this._parsedDocument.getElementsByTagName('translation');\r\n        for (let i = 0; i < transUnitsInFile.length; i++) {\r\n            const msg = transUnitsInFile.item(i);\r\n            const id = msg.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, msg without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            let masterUnit = null;\r\n            if (this._masterFile) {\r\n                masterUnit = this._masterFile.transUnitWithId(id);\r\n            }\r\n            this.transUnits.push(new XtbTransUnit(msg, id, this, masterUnit));\r\n        }\r\n    }\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xlf2', 'xmb', 'xtb'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    i18nFormat() {\r\n        return FORMAT_XTB;\r\n    }\r\n    /**\r\n     * File type.\r\n     * Here 'XTB'\r\n     */\r\n    fileType() {\r\n        return FILETYPE_XTB;\r\n    }\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    elementsWithMixedContent() {\r\n        return ['translation'];\r\n    }\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb/xtb.\r\n     * Try to guess it from master filename if any..\r\n     * @return source language.\r\n     */\r\n    sourceLanguage() {\r\n        if (this._masterFile) {\r\n            return this._masterFile.sourceLanguage();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb/xtb.\r\n     * @param language language\r\n     */\r\n    setSourceLanguage(language) {\r\n        // do nothing, xtb has no notation for this.\r\n    }\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    targetLanguage() {\r\n        const translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (translationbundleElem) {\r\n            return translationbundleElem.getAttribute('lang');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    setTargetLanguage(language) {\r\n        const translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (translationbundleElem) {\r\n            translationbundleElem.setAttribute('lang', language);\r\n        }\r\n    }\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    importNewTransUnit(foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        const newMasterTu = foreignTransUnit.cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        const translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (!translationbundleElem) {\r\n            throw new Error(format('File \"%s\" seems to be no xtb file (should contain a translationbundle element)', this._filename));\r\n        }\r\n        const translationElement = translationbundleElem.ownerDocument.createElement('translation');\r\n        translationElement.setAttribute('id', foreignTransUnit.id);\r\n        let newContent = (copyContent || isDefaultLang) ? foreignTransUnit.sourceContent() : '';\r\n        if (!foreignTransUnit.isICUMessage(newContent)) {\r\n            newContent = this.getNewTransUnitTargetPraefix() + newContent + this.getNewTransUnitTargetSuffix();\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(translationElement, newContent);\r\n        const newTu = new XtbTransUnit(translationElement, foreignTransUnit.id, this, newMasterTu);\r\n        let inserted = false;\r\n        let isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            const insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            translationbundleElem.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        }\r\n        else if (importAfterElement === null) {\r\n            const firstTranslationElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translation');\r\n            if (firstTranslationElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstTranslationElement);\r\n                inserted = true;\r\n            }\r\n            else {\r\n                // no trans-unit, empty file, so add to bundle at end\r\n                translationbundleElem.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        }\r\n        else {\r\n            const refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'translation', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    createTranslationFileForLang(lang, filename, isDefaultLang, copyContent) {\r\n        throw new Error(format('File \"%s\", xtb files are not translatable, they are already translations', filename));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"xtb-file.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/xtb-file.ts"],"names":[],"mappings":[[[0,0,3,0],[7,0,3,7],[9,0,3,8],[19,0,3,18],[21,0,3,20],[33,0,3,32],[35,0,3,34],[45,0,3,44],[47,0,3,45],[53,0,3,51],[71,0,3,69],[72,0,3,70]],[[0,0,4,0],[7,0,4,7],[9,0,4,8],[15,0,4,14],[17,0,4,15],[23,0,4,21],[29,0,4,27],[30,0,4,28]],[[0,0,5,0],[7,0,5,7],[9,0,5,8],[21,0,5,20],[23,0,5,21],[29,0,5,27],[46,0,5,44],[47,0,5,45]],[[0,0,6,0],[7,0,6,7],[9,0,6,8],[40,0,6,39],[42,0,6,40],[48,0,6,46],[86,0,6,84],[87,0,6,85]],[[0,0,7,0],[7,0,7,7],[9,0,7,8],[21,0,7,20],[23,0,7,21],[29,0,7,27],[47,0,7,45],[48,0,7,46]],[[0,0,9,0]],[],[],[],[[3,0,13,3]],[[0,0,15,0],[6,0,15,6],[13,0,15,13],[20,0,15,21],[29,0,15,29],[60,0,15,60]],[[4,0,21,4]],[],[],[],[],[],[],[],[],[],[[7,0,31,7]],[[4,0,32,4],[16,0,32,24],[46,0,32,87],[48,0,33,16],[57,0,33,33],[59,0,33,35],[63,0,33,47],[65,0,33,49],[73,0,33,73],[75,0,34,16],[89,0,34,96]],[[8,0,35,8],[13,0,35,13],[15,0,35,15],[16,0,35,16]],[[8,0,32,24],[43,0,32,54],[46,0,32,24],[76,0,32,54],[77,0,32,87]],[[8,0,36,8],[12,0,36,12],[13,0,36,13],[22,0,36,22],[25,0,36,25],[27,0,36,27],[28,0,36,28]],[[8,0,37,8],[12,0,37,12],[13,0,37,13],[45,0,37,45],[48,0,37,48],[49,0,37,49],[50,0,37,50]],[[8,0,38,8],[12,0,38,12],[13,0,38,13],[34,0,38,34],[35,0,38,35],[44,0,38,44],[46,0,38,46],[50,0,38,50],[52,0,38,52],[60,0,38,60],[62,0,38,62],[76,0,38,76],[77,0,38,77],[78,0,38,78]],[[4,0,39,4],[5,0,39,5]],[[4,0,41,12],[25,0,41,33],[26,0,41,34],[35,0,41,51],[37,0,41,53],[41,0,41,65],[43,0,41,67],[51,0,41,91],[53,0,42,34],[67,0,42,114]],[[8,0,43,8],[12,0,43,12],[13,0,43,13],[25,0,43,25],[26,0,43,26],[35,0,43,35],[37,0,43,37],[41,0,43,41],[43,0,43,43],[51,0,43,51],[52,0,43,52],[53,0,43,53]],[[8,0,44,8],[12,0,44,12],[16,0,44,16],[17,0,44,17],[32,0,44,32],[33,0,44,33],[53,0,44,53],[54,0,44,54],[73,0,44,73],[74,0,44,74],[75,0,44,75],[81,0,44,81],[86,0,44,86],[87,0,44,87],[89,0,44,89]],[[12,0,45,12],[18,0,45,18],[22,0,45,22],[27,0,45,27],[28,0,45,28],[34,0,45,34],[35,0,45,35],[115,0,45,115],[117,0,45,117],[121,0,45,121],[122,0,45,122],[123,0,45,123],[124,0,45,124]],[[9,0,46,9]],[[8,0,47,8],[12,0,47,12],[26,0,47,26],[28,0,47,28]],[[12,0,48,12],[16,0,48,16]],[[16,0,49,16],[20,0,49,20],[21,0,49,21],[32,0,49,32],[35,0,49,35],[39,0,49,39],[40,0,49,40],[70,0,49,70],[71,0,49,71],[96,0,49,96],[97,0,50,20],[107,0,50,30],[109,0,51,20],[123,0,51,34],[124,0,51,35],[134,0,51,45],[136,0,52,20],[150,0,52,34],[151,0,52,35],[155,0,52,39],[157,0,53,20],[171,0,53,34],[172,0,53,35],[180,0,53,43],[181,0,53,44],[182,0,53,45]],[[16,0,54,16],[59,0,54,59]],[[16,0,55,16],[22,0,55,22],[36,0,55,36],[39,0,55,39],[43,0,55,43],[44,0,55,44],[55,0,55,55],[56,0,55,56],[74,0,55,74],[76,0,55,76],[77,0,55,77]],[[16,0,56,16],[22,0,56,22],[30,0,56,30],[33,0,56,33],[37,0,56,37],[38,0,56,38],[56,0,56,56],[58,0,56,58],[59,0,56,59]],[[16,0,57,16],[20,0,57,20],[34,0,57,34],[39,0,57,39],[47,0,57,47],[49,0,57,49]],[[20,0,58,20],[24,0,58,24],[25,0,58,25],[34,0,58,34],[35,0,58,35],[39,0,58,39],[40,0,58,40],[46,0,58,46],[47,0,59,24],[136,0,59,113],[138,0,60,24],[152,0,60,38],[154,0,60,40],[162,0,60,48],[163,0,60,49],[164,0,60,50],[165,0,60,51]],[[17,0,61,17]],[[13,0,62,13]],[[12,0,62,14],[19,0,62,21],[24,0,62,26],[26,0,62,28]],[[16,0,63,16],[22,0,63,22],[26,0,63,26],[31,0,63,31],[32,0,63,32],[38,0,63,38],[39,0,63,39],[113,0,63,113],[115,0,63,115],[129,0,63,129],[130,0,63,130],[134,0,63,134],[135,0,63,135],[136,0,63,136],[137,0,63,137]],[[13,0,64,13]],[[9,0,65,9]],[[8,0,66,8],[15,0,66,15],[19,0,66,19],[20,0,66,20]],[[4,0,67,4],[5,0,67,5]],[[4,0,69,14],[24,0,69,34]],[[8,0,70,8],[12,0,70,12],[13,0,70,13],[23,0,70,23],[26,0,70,26],[28,0,70,28],[29,0,70,29]],[[8,0,71,8],[14,0,71,14],[30,0,71,30],[33,0,71,33],[37,0,71,37],[38,0,71,38],[53,0,71,53],[54,0,71,54],[74,0,71,74],[75,0,71,75],[88,0,71,88],[89,0,71,89],[90,0,71,90]],[[8,0,72,8],[13,0,72,13],[17,0,72,17],[18,0,72,18],[21,0,72,21],[22,0,72,22],[24,0,72,24],[25,0,72,25],[28,0,72,28],[44,0,72,44],[45,0,72,45],[51,0,72,51],[53,0,72,53],[54,0,72,54],[56,0,72,56],[58,0,72,58]],[[12,0,73,12],[18,0,73,18],[21,0,73,21],[24,0,73,24],[40,0,73,40],[41,0,73,41],[45,0,73,45],[46,0,73,46],[47,0,73,47],[48,0,73,48],[49,0,73,49]],[[12,0,74,12],[18,0,74,18],[20,0,74,20],[23,0,74,23],[26,0,74,26],[27,0,74,27],[39,0,74,39],[40,0,74,40],[44,0,74,44],[45,0,74,45],[46,0,74,46]],[[12,0,75,12],[16,0,75,16],[17,0,75,17],[19,0,75,19],[21,0,75,21]],[[16,0,76,16],[20,0,76,20],[21,0,76,21],[30,0,76,30],[31,0,76,31],[35,0,76,35],[36,0,76,36],[42,0,76,42],[43,0,76,43],[105,0,76,105],[107,0,76,107],[111,0,76,111],[112,0,76,112],[121,0,76,121],[122,0,76,122],[123,0,76,123],[124,0,76,124]],[[13,0,77,13]],[[12,0,78,12],[16,0,78,16],[26,0,78,26],[29,0,78,41],[33,0,78,45],[34,0,78,46]],[[12,0,79,12],[16,0,79,16],[20,0,79,20],[21,0,79,21],[32,0,79,32],[34,0,79,34]],[[16,0,80,16],[26,0,80,26],[29,0,80,29],[33,0,80,33],[34,0,80,34],[45,0,80,45],[46,0,80,46],[61,0,80,61],[62,0,80,62],[64,0,80,64],[65,0,80,65],[66,0,80,66]],[[13,0,81,13]],[[12,0,82,12],[16,0,82,16],[17,0,82,17],[27,0,82,27],[28,0,82,28],[32,0,82,32],[33,0,82,33],[37,0,82,37],[49,0,82,49],[50,0,82,50],[53,0,82,53],[55,0,82,55],[57,0,82,57],[59,0,82,59],[63,0,82,63],[65,0,82,85],[75,0,82,95],[76,0,82,96],[77,0,82,97],[78,0,82,98]],[[9,0,83,9]],[[4,0,84,4],[5,0,84,5]],[[4,0,86,4]],[],[],[],[[7,0,90,7]],[[4,0,91,11],[14,0,91,21]],[[8,0,92,8],[15,0,92,15],[25,0,92,25],[26,0,92,26]],[[4,0,93,4],[5,0,93,5]],[[4,0,95,4]],[],[],[[7,0,98,7]],[[4,0,99,11],[12,0,99,19]],[[8,0,100,8],[15,0,100,15],[27,0,100,27],[28,0,100,28]],[[4,0,101,4],[5,0,101,5]],[[4,0,103,4]],[],[],[],[[7,0,107,7]],[[4,0,108,14],[28,0,108,38]],[[8,0,109,8],[15,0,109,15],[16,0,109,16],[29,0,109,29],[30,0,109,30],[31,0,109,31]],[[4,0,110,4],[5,0,110,5]],[[4,0,112,4]],[],[],[],[],[[7,0,117,7]],[[4,0,118,11],[18,0,118,25]],[[8,0,119,8],[12,0,119,12],[16,0,119,16],[17,0,119,17],[28,0,119,28],[30,0,119,30]],[[12,0,120,12],[19,0,120,19],[23,0,120,23],[24,0,120,24],[35,0,120,35],[36,0,120,36],[50,0,120,50],[52,0,120,52],[53,0,120,53]],[[9,0,121,9]],[[13,0,121,15]],[[12,0,122,12],[19,0,122,19],[23,0,122,23],[24,0,122,24]],[[9,0,123,9]],[[4,0,124,4],[5,0,124,5]],[[4,0,126,4]],[],[],[],[[7,0,130,7]],[[4,0,131,11],[21,0,131,28],[22,0,131,29],[30,0,131,45]],[[8,0,132,8],[52,0,132,52]],[[4,0,133,4],[5,0,133,5]],[[4,0,135,4]],[],[],[[7,0,138,7]],[[4,0,139,11],[18,0,139,25]],[[8,0,140,8],[14,0,140,14],[35,0,140,35],[38,0,140,38],[50,0,140,50],[51,0,140,51],[75,0,140,75],[76,0,140,76],[80,0,140,80],[81,0,140,81],[96,0,140,96],[98,0,140,98],[117,0,140,117],[118,0,140,118],[119,0,140,119]],[[8,0,141,8],[12,0,141,12],[33,0,141,33],[35,0,141,35]],[[12,0,142,12],[19,0,142,19],[40,0,142,40],[41,0,142,41],[53,0,142,53],[54,0,142,54],[60,0,142,60],[61,0,142,61],[62,0,142,62]],[[9,0,143,9]],[[13,0,143,15]],[[12,0,144,12],[19,0,144,19],[23,0,144,23],[24,0,144,24]],[[9,0,145,9]],[[4,0,146,4],[5,0,146,5]],[[4,0,148,4]],[],[],[[7,0,151,7]],[[4,0,152,11],[21,0,152,28],[22,0,152,29],[30,0,152,45]],[[8,0,153,8],[14,0,153,14],[35,0,153,35],[38,0,153,38],[50,0,153,50],[51,0,153,51],[75,0,153,75],[76,0,153,76],[80,0,153,80],[81,0,153,81],[96,0,153,96],[98,0,153,98],[117,0,153,117],[118,0,153,118],[119,0,153,119]],[[8,0,154,8],[12,0,154,12],[33,0,154,33],[35,0,154,35]],[[12,0,155,12],[33,0,155,33],[34,0,155,34],[46,0,155,46],[47,0,155,47],[53,0,155,53],[55,0,155,55],[63,0,155,63],[64,0,155,64],[65,0,155,65]],[[9,0,156,9]],[[4,0,157,4],[5,0,157,5]],[[4,0,159,4]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,180,7]],[[4,0,181,4],[22,0,181,22],[23,0,181,23],[39,0,181,51],[41,0,181,53],[54,0,181,75],[56,0,181,77],[67,0,181,97],[69,0,181,99],[87,0,181,130]],[[8,0,183,8],[12,0,183,12],[16,0,183,16],[17,0,183,17],[32,0,183,32],[33,0,183,33],[49,0,183,49],[50,0,183,50],[52,0,183,52],[53,0,183,53],[55,0,183,55]],[[12,0,184,12],[18,0,184,18],[22,0,184,22],[27,0,184,27],[28,0,184,28],[34,0,184,34],[35,0,184,35],[91,0,184,91],[93,0,184,93],[109,0,184,109],[110,0,184,110],[112,0,184,112],[113,0,184,113],[114,0,184,114],[115,0,184,115]],[[9,0,185,9]],[[8,0,186,8],[14,0,186,14],[25,0,186,25],[28,0,186,49],[44,0,186,66],[45,0,186,67],[68,0,186,90],[69,0,186,91],[82,0,186,104],[84,0,186,106],[95,0,186,117],[97,0,186,119],[101,0,186,123],[102,0,186,124],[103,0,186,125]],[[8,0,187,8],[14,0,187,14],[35,0,187,35],[38,0,187,38],[50,0,187,50],[51,0,187,51],[75,0,187,75],[76,0,187,76],[80,0,187,80],[81,0,187,81],[96,0,187,96],[98,0,187,98],[117,0,187,117],[118,0,187,118],[119,0,187,119]],[[8,0,188,8],[12,0,188,12],[13,0,188,13],[34,0,188,34],[36,0,188,36]],[[12,0,189,12],[18,0,189,18],[22,0,189,22],[27,0,189,27],[28,0,189,28],[34,0,189,34],[35,0,189,35],[115,0,189,115],[117,0,189,117],[121,0,189,121],[122,0,189,122],[131,0,189,131],[132,0,189,132],[133,0,189,133],[134,0,189,134]],[[9,0,190,9]],[[8,0,191,8],[14,0,191,14],[32,0,191,32],[35,0,191,35],[56,0,191,56],[57,0,191,57],[70,0,191,70],[71,0,191,71],[84,0,191,84],[85,0,191,85],[98,0,191,98],[99,0,191,99],[100,0,191,100]],[[8,0,192,8],[26,0,192,26],[27,0,192,27],[39,0,192,39],[40,0,192,40],[44,0,192,44],[46,0,192,46],[62,0,192,62],[63,0,192,63],[65,0,192,65],[66,0,192,66],[67,0,192,67]],[[8,0,193,8],[12,0,193,12],[22,0,193,22],[25,0,193,25],[26,0,193,26],[37,0,193,37],[41,0,193,41],[54,0,193,54],[55,0,193,55],[56,0,193,56],[57,0,193,57],[58,0,193,58],[74,0,193,74],[75,0,193,75],[88,0,193,88],[90,0,193,90],[91,0,193,91],[92,0,193,92],[93,0,193,93],[95,0,193,95],[96,0,193,96]],[[8,0,194,8],[12,0,194,12],[13,0,194,34],[29,0,194,51],[30,0,194,52],[42,0,194,64],[43,0,194,65],[53,0,194,75],[54,0,194,76],[56,0,194,78]],[[12,0,195,12],[22,0,195,22],[25,0,195,25],[29,0,195,29],[30,0,195,30],[58,0,195,58],[60,0,195,60],[63,0,195,63],[73,0,195,73],[76,0,195,76],[80,0,195,80],[81,0,195,81],[108,0,195,108],[110,0,195,110],[111,0,195,111]],[[9,0,196,9]],[[8,0,197,8],[20,0,197,20],[21,0,197,21],[49,0,197,49],[50,0,197,50],[68,0,197,68],[70,0,197,70],[80,0,197,80],[81,0,197,81],[82,0,197,82]],[[8,0,198,8],[14,0,198,14],[19,0,198,19],[22,0,198,22],[26,0,198,26],[38,0,198,38],[39,0,198,39],[57,0,198,57],[59,0,198,59],[75,0,198,75],[76,0,198,76],[78,0,198,78],[80,0,198,80],[84,0,198,84],[86,0,198,86],[97,0,198,97],[98,0,198,98],[99,0,198,99]],[[8,0,199,8],[12,0,199,12],[20,0,199,20],[23,0,199,23],[28,0,199,28],[29,0,199,29]],[[8,0,200,8],[12,0,200,12],[36,0,200,36],[39,0,200,39],[44,0,200,44],[45,0,200,45]],[[8,0,201,8],[12,0,201,12],[13,0,201,13],[14,0,201,14],[32,0,201,32],[34,0,201,34]],[[12,0,202,12],[18,0,202,18],[32,0,202,32],[35,0,202,35],[39,0,202,39],[40,0,202,40],[55,0,202,55],[56,0,202,56],[74,0,202,74],[75,0,202,75],[77,0,202,77],[78,0,202,78],[79,0,202,79]],[[12,0,203,12],[16,0,203,16],[17,0,203,17],[18,0,203,18],[32,0,203,32],[34,0,203,34]],[[16,0,204,16],[40,0,204,40],[43,0,204,43],[47,0,204,47],[48,0,204,48]],[[13,0,205,13]],[[9,0,206,9]],[[8,0,207,8],[12,0,207,12],[30,0,207,30],[35,0,207,35],[44,0,207,44],[48,0,207,48],[49,0,207,49],[67,0,207,67],[71,0,207,71],[72,0,207,72],[96,0,207,96],[97,0,207,97],[99,0,207,99]],[[12,0,208,12],[33,0,208,33],[34,0,208,34],[45,0,208,45],[46,0,208,46],[51,0,208,51],[52,0,208,52],[64,0,208,64],[66,0,208,66],[67,0,208,67],[68,0,208,68]],[[12,0,209,12],[20,0,209,20],[23,0,209,23],[27,0,209,27],[28,0,209,28]],[[9,0,210,9]],[[13,0,210,15],[17,0,210,19],[35,0,210,37],[40,0,210,42],[44,0,210,46],[46,0,210,48]],[[12,0,211,12],[18,0,211,18],[41,0,211,41],[44,0,211,44],[56,0,211,56],[57,0,211,57],[81,0,211,81],[82,0,211,82],[86,0,211,86],[87,0,211,87],[102,0,211,102],[104,0,211,104],[117,0,211,117],[118,0,211,118],[119,0,211,119]],[[12,0,212,12],[16,0,212,16],[39,0,212,39],[41,0,212,41]],[[16,0,213,16],[28,0,213,28],[29,0,213,29],[41,0,213,41],[42,0,213,42],[47,0,213,47],[48,0,213,48],[60,0,213,60],[62,0,213,62],[64,0,213,64],[87,0,213,87],[88,0,213,88],[89,0,213,89]],[[16,0,214,16],[24,0,214,24],[27,0,214,27],[31,0,214,31],[32,0,214,32]],[[13,0,215,13]],[[17,0,215,19]],[[16,0,216,16],[69,0,216,69]],[[16,0,217,16],[37,0,217,37],[38,0,217,38],[49,0,217,49],[50,0,217,50],[55,0,217,55],[56,0,217,56],[68,0,217,68],[70,0,217,70],[71,0,217,71],[72,0,217,72]],[[16,0,218,16],[24,0,218,24],[27,0,218,27],[31,0,218,31],[32,0,218,32]],[[13,0,219,13]],[[9,0,220,9]],[[13,0,220,15]],[[12,0,221,12],[18,0,221,18],[32,0,221,32],[35,0,221,35],[47,0,221,47],[48,0,221,48],[72,0,221,72],[73,0,221,73],[77,0,221,77],[78,0,221,78],[93,0,221,93],[95,0,221,95],[108,0,221,108],[110,0,221,110],[128,0,221,128],[129,0,221,129],[131,0,221,131],[132,0,221,132],[133,0,221,133]],[[12,0,222,12],[16,0,222,16],[30,0,222,30],[32,0,222,32]],[[16,0,223,16],[28,0,223,28],[29,0,223,29],[40,0,223,40],[41,0,223,41],[46,0,223,46],[47,0,223,47],[59,0,223,59],[61,0,223,61],[63,0,223,63],[77,0,223,77],[78,0,223,78],[79,0,223,79]],[[16,0,224,16],[24,0,224,24],[27,0,224,27],[31,0,224,31],[32,0,224,32]],[[13,0,225,13]],[[9,0,226,9]],[[8,0,227,8],[12,0,227,12],[20,0,227,20],[22,0,227,22]],[[12,0,228,12],[16,0,228,16],[17,0,228,17],[41,0,228,41],[43,0,228,43],[44,0,228,44]],[[12,0,229,12],[16,0,229,16],[17,0,229,17],[27,0,229,27],[28,0,229,28],[32,0,229,32],[33,0,229,33],[38,0,229,38],[39,0,229,39],[40,0,229,40]],[[12,0,230,12],[16,0,230,16],[17,0,230,17],[29,0,230,29],[31,0,230,31],[32,0,230,32]],[[12,0,231,12],[19,0,231,19],[24,0,231,24],[25,0,231,25]],[[9,0,232,9]],[[13,0,232,15]],[[12,0,233,12],[19,0,233,19],[23,0,233,23],[24,0,233,24]],[[9,0,234,9]],[[4,0,235,4],[5,0,235,5]],[[4,0,237,4]],[],[],[],[],[],[],[],[],[],[],[],[],[[7,0,250,7]],[[4,0,251,11],[32,0,251,39],[33,0,251,40],[37,0,251,52],[39,0,251,54],[47,0,251,70],[49,0,251,72],[62,0,251,94],[64,0,251,96],[75,0,251,116]],[[8,0,253,8],[14,0,253,14],[18,0,253,18],[23,0,253,23],[24,0,253,24],[30,0,253,30],[31,0,253,31],[105,0,253,105],[107,0,253,107],[115,0,253,115],[116,0,253,116],[117,0,253,117],[118,0,253,118]],[[4,0,254,4],[5,0,254,5]],[[1,0,255,1]]],"sourcesContent":["import {ITranslationMessagesFileFactory} from '../api/i-translation-messages-file-factory';\r\nimport {ITranslationMessagesFile} from '../api/i-translation-messages-file';\r\nimport {ITransUnit} from '../api/i-trans-unit';\r\nimport {FORMAT_XTB, FILETYPE_XTB, FORMAT_XMB} from '../api/constants';\r\nimport {format} from 'util';\r\nimport {DOMUtilities} from './dom-utilities';\r\nimport {AbstractTranslationMessagesFile} from './abstract-translation-messages-file';\r\nimport {XtbTransUnit} from './xtb-trans-unit';\r\nimport {AbstractTransUnit} from './abstract-trans-unit';\r\n/**\r\n * Created by martin on 23.05.2017.\r\n * xtb-File access.\r\n * xtb is the translated counterpart to xmb.\r\n */\r\n\r\nexport class XtbFile extends AbstractTranslationMessagesFile implements ITranslationMessagesFile {\r\n\r\n    // attached master file, if any\r\n    // used as source to determine state ...\r\n    private _masterFile: ITranslationMessagesFile; // an xmb-file\r\n\r\n    /**\r\n     * Create an xmb-File from source.\r\n     * @param _translationMessageFileFactory factory to create a translation file (xtb) for the xmb file\r\n     * @param xmlString file content\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * @return XmbFile\r\n     */\r\n    constructor(private _translationMessageFileFactory: ITranslationMessagesFileFactory,\r\n                xmlString: string, path: string, encoding: BufferEncoding ,\r\n                optionalMaster?: { xmlContent: string, path: string, encoding: BufferEncoding  }) {\r\n        super();\r\n        this._warnings = [];\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this.initializeFromContent(xmlString, path, encoding, optionalMaster);\r\n    }\r\n\r\n    private initializeFromContent(xmlString: string, path: string, encoding: BufferEncoding ,\r\n                                  optionalMaster?: { xmlContent: string, path: string, encoding: BufferEncoding  }): XtbFile {\r\n        this.parseContent(xmlString, path, encoding);\r\n        if (this._parsedDocument.getElementsByTagName('translationbundle').length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xtb file (should contain a translationbundle element)', path));\r\n        }\r\n        if (optionalMaster) {\r\n            try {\r\n                this._masterFile = this._translationMessageFileFactory.createFileFromFileContent(\r\n                    FORMAT_XMB,\r\n                    optionalMaster.xmlContent,\r\n                    optionalMaster.path,\r\n                    optionalMaster.encoding);\r\n                // check, wether this can be the master ...\r\n                const numberInMaster = this._masterFile.numberOfTransUnits();\r\n                const myNumber = this.numberOfTransUnits();\r\n                if (numberInMaster !== myNumber) {\r\n                    this._warnings.push(format(\r\n                        '%s trans units found in master, but this file has %s. Check if it is the correct master',\r\n                        numberInMaster, myNumber));\r\n                }\r\n            } catch (error) {\r\n                throw new Error(format('File \"%s\" seems to be no xmb file. An xtb file needs xmb as master file.', optionalMaster.path));\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    protected initializeTransUnits() {\r\n        this.transUnits = [];\r\n        const transUnitsInFile = this._parsedDocument.getElementsByTagName('translation');\r\n        for (let i = 0; i < transUnitsInFile.length; i++) {\r\n            const msg = transUnitsInFile.item(i);\r\n            const id = msg.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, msg without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            let masterUnit: ITransUnit = null;\r\n            if (this._masterFile) {\r\n                masterUnit = this._masterFile.transUnitWithId(id);\r\n            }\r\n            this.transUnits.push(new XtbTransUnit(msg, id, this, <AbstractTransUnit> masterUnit));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xlf2', 'xmb', 'xtb'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    public i18nFormat(): string {\r\n        return FORMAT_XTB;\r\n    }\r\n\r\n    /**\r\n     * File type.\r\n     * Here 'XTB'\r\n     */\r\n    public fileType(): string {\r\n        return FILETYPE_XTB;\r\n    }\r\n\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    protected elementsWithMixedContent(): string[] {\r\n        return ['translation'];\r\n    }\r\n\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb/xtb.\r\n     * Try to guess it from master filename if any..\r\n     * @return source language.\r\n     */\r\n    public sourceLanguage(): string {\r\n        if (this._masterFile) {\r\n            return this._masterFile.sourceLanguage();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb/xtb.\r\n     * @param language language\r\n     */\r\n    public setSourceLanguage(language: string) {\r\n        // do nothing, xtb has no notation for this.\r\n    }\r\n\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    public targetLanguage(): string {\r\n        const translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (translationbundleElem) {\r\n            return translationbundleElem.getAttribute('lang');\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    public setTargetLanguage(language: string) {\r\n        const translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (translationbundleElem) {\r\n            translationbundleElem.setAttribute('lang', language);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    importNewTransUnit(foreignTransUnit: ITransUnit, isDefaultLang: boolean, copyContent: boolean, importAfterElement?: ITransUnit)\r\n        : ITransUnit {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        const newMasterTu = (<AbstractTransUnit> foreignTransUnit).cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        const translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (!translationbundleElem) {\r\n            throw new Error(format('File \"%s\" seems to be no xtb file (should contain a translationbundle element)', this._filename));\r\n        }\r\n        const translationElement = translationbundleElem.ownerDocument.createElement('translation');\r\n        translationElement.setAttribute('id', foreignTransUnit.id);\r\n        let newContent = (copyContent || isDefaultLang) ? foreignTransUnit.sourceContent() : '';\r\n        if (!(<AbstractTransUnit> foreignTransUnit).isICUMessage(newContent)) {\r\n            newContent = this.getNewTransUnitTargetPraefix() + newContent + this.getNewTransUnitTargetSuffix();\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(translationElement, newContent);\r\n        const newTu = new XtbTransUnit(translationElement, foreignTransUnit.id, this, newMasterTu);\r\n        let inserted = false;\r\n        let isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            const insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            translationbundleElem.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        } else if (importAfterElement === null) {\r\n            const firstTranslationElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translation');\r\n            if (firstTranslationElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstTranslationElement);\r\n                inserted = true;\r\n            } else {\r\n                // no trans-unit, empty file, so add to bundle at end\r\n                translationbundleElem.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        } else {\r\n            const refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'translation', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    public createTranslationFileForLang(lang: string, filename: string, isDefaultLang: boolean, copyContent: boolean)\r\n        : ITranslationMessagesFile {\r\n        throw new Error(format('File \"%s\", xtb files are not translatable, they are already translations', filename));\r\n    }\r\n}\r\n"]},"resolvedIds":{"util":{"external":true,"id":"util","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../api/constants":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./dom-utilities":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\dom-utilities.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./abstract-translation-messages-file":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\abstract-translation-messages-file.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./xtb-trans-unit":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xtb-trans-unit.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":18884,"body":[{"type":"ImportDeclaration","start":0,"end":47,"specifiers":[{"type":"ImportSpecifier","start":9,"end":18,"imported":{"type":"Identifier","start":9,"end":18,"name":"XliffFile"},"local":{"type":"Identifier","start":9,"end":18,"name":"XliffFile"}}],"source":{"type":"Literal","start":26,"end":46,"value":"../impl/xliff-file","raw":"'../impl/xliff-file'"}},{"type":"ImportDeclaration","start":49,"end":92,"specifiers":[{"type":"ImportSpecifier","start":58,"end":65,"imported":{"type":"Identifier","start":58,"end":65,"name":"XmbFile"},"local":{"type":"Identifier","start":58,"end":65,"name":"XmbFile"}}],"source":{"type":"Literal","start":73,"end":91,"value":"../impl/xmb-file","raw":"'../impl/xmb-file'"}},{"type":"ImportDeclaration","start":94,"end":124,"specifiers":[{"type":"ImportSpecifier","start":103,"end":109,"imported":{"type":"Identifier","start":103,"end":109,"name":"format"},"local":{"type":"Identifier","start":103,"end":109,"name":"format"}}],"source":{"type":"Literal","start":117,"end":123,"value":"util","raw":"'util'"}},{"type":"ImportDeclaration","start":126,"end":175,"specifiers":[{"type":"ImportSpecifier","start":135,"end":145,"imported":{"type":"Identifier","start":135,"end":145,"name":"Xliff2File"},"local":{"type":"Identifier","start":135,"end":145,"name":"Xliff2File"}}],"source":{"type":"Literal","start":153,"end":174,"value":"../impl/xliff2-file","raw":"'../impl/xliff2-file'"}},{"type":"ImportDeclaration","start":177,"end":262,"specifiers":[{"type":"ImportSpecifier","start":186,"end":200,"imported":{"type":"Identifier","start":186,"end":200,"name":"FORMAT_XLIFF12"},"local":{"type":"Identifier","start":186,"end":200,"name":"FORMAT_XLIFF12"}},{"type":"ImportSpecifier","start":202,"end":216,"imported":{"type":"Identifier","start":202,"end":216,"name":"FORMAT_XLIFF20"},"local":{"type":"Identifier","start":202,"end":216,"name":"FORMAT_XLIFF20"}},{"type":"ImportSpecifier","start":218,"end":228,"imported":{"type":"Identifier","start":218,"end":228,"name":"FORMAT_XMB"},"local":{"type":"Identifier","start":218,"end":228,"name":"FORMAT_XMB"}},{"type":"ImportSpecifier","start":230,"end":240,"imported":{"type":"Identifier","start":230,"end":240,"name":"FORMAT_XTB"},"local":{"type":"Identifier","start":230,"end":240,"name":"FORMAT_XTB"}}],"source":{"type":"Literal","start":248,"end":261,"value":"./constants","raw":"'./constants'"}},{"type":"ImportDeclaration","start":264,"end":307,"specifiers":[{"type":"ImportSpecifier","start":273,"end":280,"imported":{"type":"Identifier","start":273,"end":280,"name":"XtbFile"},"local":{"type":"Identifier","start":273,"end":280,"name":"XtbFile"}}],"source":{"type":"Literal","start":288,"end":306,"value":"../impl/xtb-file","raw":"'../impl/xtb-file'"}},{"type":"ExportNamedDeclaration","start":418,"end":5824,"declaration":{"type":"ClassDeclaration","start":425,"end":5824,"id":{"type":"Identifier","start":431,"end":461,"name":"TranslationMessagesFileFactory"},"superClass":null,"body":{"type":"ClassBody","start":462,"end":5824,"body":[{"type":"MethodDefinition","start":1203,"end":1426,"static":true,"computed":false,"key":{"type":"Identifier","start":1210,"end":1225,"name":"fromFileContent"},"kind":"method","value":{"type":"FunctionExpression","start":1225,"end":1426,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1226,"end":1236,"name":"i18nFormat"},{"type":"Identifier","start":1238,"end":1248,"name":"xmlContent"},{"type":"Identifier","start":1250,"end":1254,"name":"path"},{"type":"Identifier","start":1256,"end":1264,"name":"encoding"},{"type":"Identifier","start":1266,"end":1280,"name":"optionalMaster"}],"body":{"type":"BlockStatement","start":1282,"end":1426,"body":[{"type":"ReturnStatement","start":1293,"end":1419,"argument":{"type":"CallExpression","start":1300,"end":1418,"callee":{"type":"MemberExpression","start":1300,"end":1362,"object":{"type":"NewExpression","start":1300,"end":1336,"callee":{"type":"Identifier","start":1304,"end":1334,"name":"TranslationMessagesFileFactory"},"arguments":[]},"property":{"type":"Identifier","start":1337,"end":1362,"name":"createFileFromFileContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":1363,"end":1373,"name":"i18nFormat"},{"type":"Identifier","start":1375,"end":1385,"name":"xmlContent"},{"type":"Identifier","start":1387,"end":1391,"name":"path"},{"type":"Identifier","start":1393,"end":1401,"name":"encoding"},{"type":"Identifier","start":1403,"end":1417,"name":"optionalMaster"}],"optional":false}}]}}},{"type":"MethodDefinition","start":2232,"end":2457,"static":true,"computed":false,"key":{"type":"Identifier","start":2239,"end":2267,"name":"fromUnknownFormatFileContent"},"kind":"method","value":{"type":"FunctionExpression","start":2267,"end":2457,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2268,"end":2278,"name":"xmlContent"},{"type":"Identifier","start":2280,"end":2284,"name":"path"},{"type":"Identifier","start":2286,"end":2294,"name":"encoding"},{"type":"Identifier","start":2296,"end":2310,"name":"optionalMaster"}],"body":{"type":"BlockStatement","start":2312,"end":2457,"body":[{"type":"ReturnStatement","start":2323,"end":2450,"argument":{"type":"CallExpression","start":2330,"end":2449,"callee":{"type":"MemberExpression","start":2330,"end":2405,"object":{"type":"NewExpression","start":2330,"end":2366,"callee":{"type":"Identifier","start":2334,"end":2364,"name":"TranslationMessagesFileFactory"},"arguments":[]},"property":{"type":"Identifier","start":2367,"end":2405,"name":"createFileFromUnknownFormatFileContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":2406,"end":2416,"name":"xmlContent"},{"type":"Identifier","start":2418,"end":2422,"name":"path"},{"type":"Identifier","start":2424,"end":2432,"name":"encoding"},{"type":"Identifier","start":2434,"end":2448,"name":"optionalMaster"}],"optional":false}}]}}},{"type":"MethodDefinition","start":3197,"end":3863,"static":false,"computed":false,"key":{"type":"Identifier","start":3197,"end":3222,"name":"createFileFromFileContent"},"kind":"method","value":{"type":"FunctionExpression","start":3222,"end":3863,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3223,"end":3233,"name":"i18nFormat"},{"type":"Identifier","start":3235,"end":3245,"name":"xmlContent"},{"type":"Identifier","start":3247,"end":3251,"name":"path"},{"type":"Identifier","start":3253,"end":3261,"name":"encoding"},{"type":"Identifier","start":3263,"end":3277,"name":"optionalMaster"}],"body":{"type":"BlockStatement","start":3279,"end":3863,"body":[{"type":"IfStatement","start":3290,"end":3400,"test":{"type":"BinaryExpression","start":3294,"end":3323,"left":{"type":"Identifier","start":3294,"end":3304,"name":"i18nFormat"},"operator":"===","right":{"type":"Identifier","start":3309,"end":3323,"name":"FORMAT_XLIFF12"}},"consequent":{"type":"BlockStatement","start":3325,"end":3400,"body":[{"type":"ReturnStatement","start":3340,"end":3389,"argument":{"type":"NewExpression","start":3347,"end":3388,"callee":{"type":"Identifier","start":3351,"end":3360,"name":"XliffFile"},"arguments":[{"type":"Identifier","start":3361,"end":3371,"name":"xmlContent"},{"type":"Identifier","start":3373,"end":3377,"name":"path"},{"type":"Identifier","start":3379,"end":3387,"name":"encoding"}]}}]},"alternate":null},{"type":"IfStatement","start":3410,"end":3521,"test":{"type":"BinaryExpression","start":3414,"end":3443,"left":{"type":"Identifier","start":3414,"end":3424,"name":"i18nFormat"},"operator":"===","right":{"type":"Identifier","start":3429,"end":3443,"name":"FORMAT_XLIFF20"}},"consequent":{"type":"BlockStatement","start":3445,"end":3521,"body":[{"type":"ReturnStatement","start":3460,"end":3510,"argument":{"type":"NewExpression","start":3467,"end":3509,"callee":{"type":"Identifier","start":3471,"end":3481,"name":"Xliff2File"},"arguments":[{"type":"Identifier","start":3482,"end":3492,"name":"xmlContent"},{"type":"Identifier","start":3494,"end":3498,"name":"path"},{"type":"Identifier","start":3500,"end":3508,"name":"encoding"}]}}]},"alternate":null},{"type":"IfStatement","start":3531,"end":3641,"test":{"type":"BinaryExpression","start":3535,"end":3560,"left":{"type":"Identifier","start":3535,"end":3545,"name":"i18nFormat"},"operator":"===","right":{"type":"Identifier","start":3550,"end":3560,"name":"FORMAT_XMB"}},"consequent":{"type":"BlockStatement","start":3562,"end":3641,"body":[{"type":"ReturnStatement","start":3577,"end":3630,"argument":{"type":"NewExpression","start":3584,"end":3629,"callee":{"type":"Identifier","start":3588,"end":3595,"name":"XmbFile"},"arguments":[{"type":"ThisExpression","start":3596,"end":3600},{"type":"Identifier","start":3602,"end":3612,"name":"xmlContent"},{"type":"Identifier","start":3614,"end":3618,"name":"path"},{"type":"Identifier","start":3620,"end":3628,"name":"encoding"}]}}]},"alternate":null},{"type":"IfStatement","start":3651,"end":3777,"test":{"type":"BinaryExpression","start":3655,"end":3680,"left":{"type":"Identifier","start":3655,"end":3665,"name":"i18nFormat"},"operator":"===","right":{"type":"Identifier","start":3670,"end":3680,"name":"FORMAT_XTB"}},"consequent":{"type":"BlockStatement","start":3682,"end":3777,"body":[{"type":"ReturnStatement","start":3697,"end":3766,"argument":{"type":"NewExpression","start":3704,"end":3765,"callee":{"type":"Identifier","start":3708,"end":3715,"name":"XtbFile"},"arguments":[{"type":"ThisExpression","start":3716,"end":3720},{"type":"Identifier","start":3722,"end":3732,"name":"xmlContent"},{"type":"Identifier","start":3734,"end":3738,"name":"path"},{"type":"Identifier","start":3740,"end":3748,"name":"encoding"},{"type":"Identifier","start":3750,"end":3764,"name":"optionalMaster"}]}}]},"alternate":null},{"type":"ThrowStatement","start":3787,"end":3856,"argument":{"type":"NewExpression","start":3793,"end":3855,"callee":{"type":"Identifier","start":3797,"end":3802,"name":"Error"},"arguments":[{"type":"CallExpression","start":3803,"end":3854,"callee":{"type":"Identifier","start":3803,"end":3809,"name":"format"},"arguments":[{"type":"Literal","start":3810,"end":3841,"value":"oops, unsupported format \"%s\"","raw":"'oops, unsupported format \"%s\"'"},{"type":"Identifier","start":3843,"end":3853,"name":"i18nFormat"}],"optional":false}]}}]}}},{"type":"MethodDefinition","start":4669,"end":5821,"static":false,"computed":false,"key":{"type":"Identifier","start":4669,"end":4707,"name":"createFileFromUnknownFormatFileContent"},"kind":"method","value":{"type":"FunctionExpression","start":4707,"end":5821,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":4708,"end":4718,"name":"xmlContent"},{"type":"Identifier","start":4720,"end":4724,"name":"path"},{"type":"Identifier","start":4726,"end":4734,"name":"encoding"},{"type":"Identifier","start":4736,"end":4750,"name":"optionalMaster"}],"body":{"type":"BlockStatement","start":4752,"end":5821,"body":[{"type":"VariableDeclaration","start":4763,"end":4843,"declarations":[{"type":"VariableDeclarator","start":4767,"end":4842,"id":{"type":"Identifier","start":4767,"end":4783,"name":"formatCandidates"},"init":{"type":"ArrayExpression","start":4786,"end":4842,"elements":[{"type":"Identifier","start":4787,"end":4801,"name":"FORMAT_XLIFF12"},{"type":"Identifier","start":4803,"end":4817,"name":"FORMAT_XLIFF20"},{"type":"Identifier","start":4819,"end":4829,"name":"FORMAT_XMB"},{"type":"Identifier","start":4831,"end":4841,"name":"FORMAT_XTB"}]}}],"kind":"let"},{"type":"IfStatement","start":4853,"end":4989,"test":{"type":"LogicalExpression","start":4857,"end":4885,"left":{"type":"Identifier","start":4857,"end":4861,"name":"path"},"operator":"&&","right":{"type":"CallExpression","start":4865,"end":4885,"callee":{"type":"MemberExpression","start":4865,"end":4878,"object":{"type":"Identifier","start":4865,"end":4869,"name":"path"},"property":{"type":"Identifier","start":4870,"end":4878,"name":"endsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":4879,"end":4884,"value":"xmb","raw":"'xmb'"}],"optional":false}},"consequent":{"type":"BlockStatement","start":4887,"end":4989,"body":[{"type":"ExpressionStatement","start":4902,"end":4978,"expression":{"type":"AssignmentExpression","start":4902,"end":4977,"operator":"=","left":{"type":"Identifier","start":4902,"end":4918,"name":"formatCandidates"},"right":{"type":"ArrayExpression","start":4921,"end":4977,"elements":[{"type":"Identifier","start":4922,"end":4932,"name":"FORMAT_XMB"},{"type":"Identifier","start":4934,"end":4944,"name":"FORMAT_XTB"},{"type":"Identifier","start":4946,"end":4960,"name":"FORMAT_XLIFF12"},{"type":"Identifier","start":4962,"end":4976,"name":"FORMAT_XLIFF20"}]}}}]},"alternate":null},{"type":"IfStatement","start":4999,"end":5135,"test":{"type":"LogicalExpression","start":5003,"end":5031,"left":{"type":"Identifier","start":5003,"end":5007,"name":"path"},"operator":"&&","right":{"type":"CallExpression","start":5011,"end":5031,"callee":{"type":"MemberExpression","start":5011,"end":5024,"object":{"type":"Identifier","start":5011,"end":5015,"name":"path"},"property":{"type":"Identifier","start":5016,"end":5024,"name":"endsWith"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5025,"end":5030,"value":"xtb","raw":"'xtb'"}],"optional":false}},"consequent":{"type":"BlockStatement","start":5033,"end":5135,"body":[{"type":"ExpressionStatement","start":5048,"end":5124,"expression":{"type":"AssignmentExpression","start":5048,"end":5123,"operator":"=","left":{"type":"Identifier","start":5048,"end":5064,"name":"formatCandidates"},"right":{"type":"ArrayExpression","start":5067,"end":5123,"elements":[{"type":"Identifier","start":5068,"end":5078,"name":"FORMAT_XTB"},{"type":"Identifier","start":5080,"end":5090,"name":"FORMAT_XMB"},{"type":"Identifier","start":5092,"end":5106,"name":"FORMAT_XLIFF12"},{"type":"Identifier","start":5108,"end":5122,"name":"FORMAT_XLIFF20"}]}}}]},"alternate":null},{"type":"ForStatement","start":5204,"end":5701,"init":{"type":"VariableDeclaration","start":5209,"end":5218,"declarations":[{"type":"VariableDeclarator","start":5213,"end":5218,"id":{"type":"Identifier","start":5213,"end":5214,"name":"i"},"init":{"type":"Literal","start":5217,"end":5218,"value":0,"raw":"0"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":5220,"end":5247,"left":{"type":"Identifier","start":5220,"end":5221,"name":"i"},"operator":"<","right":{"type":"MemberExpression","start":5224,"end":5247,"object":{"type":"Identifier","start":5224,"end":5240,"name":"formatCandidates"},"property":{"type":"Identifier","start":5241,"end":5247,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":5249,"end":5252,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":5249,"end":5250,"name":"i"}},"body":{"type":"BlockStatement","start":5254,"end":5701,"body":[{"type":"VariableDeclaration","start":5269,"end":5313,"declarations":[{"type":"VariableDeclarator","start":5275,"end":5312,"id":{"type":"Identifier","start":5275,"end":5290,"name":"formatCandidate"},"init":{"type":"MemberExpression","start":5293,"end":5312,"object":{"type":"Identifier","start":5293,"end":5309,"name":"formatCandidates"},"property":{"type":"Identifier","start":5310,"end":5311,"name":"i"},"computed":true,"optional":false}}],"kind":"const"},{"type":"TryStatement","start":5327,"end":5690,"block":{"type":"BlockStatement","start":5331,"end":5601,"body":[{"type":"VariableDeclaration","start":5350,"end":5482,"declarations":[{"type":"VariableDeclarator","start":5356,"end":5481,"id":{"type":"Identifier","start":5356,"end":5371,"name":"translationFile"},"init":{"type":"CallExpression","start":5374,"end":5481,"callee":{"type":"MemberExpression","start":5374,"end":5420,"object":{"type":"Identifier","start":5374,"end":5404,"name":"TranslationMessagesFileFactory"},"property":{"type":"Identifier","start":5405,"end":5420,"name":"fromFileContent"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5421,"end":5436,"name":"formatCandidate"},{"type":"Identifier","start":5438,"end":5448,"name":"xmlContent"},{"type":"Identifier","start":5450,"end":5454,"name":"path"},{"type":"Identifier","start":5456,"end":5464,"name":"encoding"},{"type":"Identifier","start":5466,"end":5480,"name":"optionalMaster"}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":5500,"end":5586,"test":{"type":"Identifier","start":5504,"end":5519,"name":"translationFile"},"consequent":{"type":"BlockStatement","start":5521,"end":5586,"body":[{"type":"ReturnStatement","start":5544,"end":5567,"argument":{"type":"Identifier","start":5551,"end":5566,"name":"translationFile"}}]},"alternate":null}]},"handler":{"type":"CatchClause","start":5615,"end":5690,"param":{"type":"Identifier","start":5622,"end":5623,"name":"e"},"body":{"type":"BlockStatement","start":5625,"end":5690,"body":[]}},"finalizer":null}]}},{"type":"ThrowStatement","start":5711,"end":5814,"argument":{"type":"NewExpression","start":5717,"end":5813,"callee":{"type":"Identifier","start":5721,"end":5726,"name":"Error"},"arguments":[{"type":"CallExpression","start":5727,"end":5812,"callee":{"type":"Identifier","start":5727,"end":5733,"name":"format"},"arguments":[{"type":"Literal","start":5734,"end":5811,"value":"could not identify file format, it is neiter XLIFF (1.2 or 2.0) nor XMB/XTB","raw":"'could not identify file format, it is neiter XLIFF (1.2 or 2.0) nor XMB/XTB'"}],"optional":false}]}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":5826,"end":18884}]},"code":"import { XliffFile } from '../impl/xliff-file';\r\nimport { XmbFile } from '../impl/xmb-file';\r\nimport { format } from 'util';\r\nimport { Xliff2File } from '../impl/xliff2-file';\r\nimport { FORMAT_XLIFF12, FORMAT_XLIFF20, FORMAT_XMB, FORMAT_XTB } from './constants';\r\nimport { XtbFile } from '../impl/xtb-file';\r\n/**\r\n * Helper class to read translation files depending on format.\r\n * This is part of the public api\r\n */\r\nexport class TranslationMessagesFileFactory {\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    static fromFileContent(i18nFormat, xmlContent, path, encoding, optionalMaster) {\r\n        return new TranslationMessagesFileFactory().createFileFromFileContent(i18nFormat, xmlContent, path, encoding, optionalMaster);\r\n    }\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    static fromUnknownFormatFileContent(xmlContent, path, encoding, optionalMaster) {\r\n        return new TranslationMessagesFileFactory().createFileFromUnknownFormatFileContent(xmlContent, path, encoding, optionalMaster);\r\n    }\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    createFileFromFileContent(i18nFormat, xmlContent, path, encoding, optionalMaster) {\r\n        if (i18nFormat === FORMAT_XLIFF12) {\r\n            return new XliffFile(xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XLIFF20) {\r\n            return new Xliff2File(xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XMB) {\r\n            return new XmbFile(this, xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XTB) {\r\n            return new XtbFile(this, xmlContent, path, encoding, optionalMaster);\r\n        }\r\n        throw new Error(format('oops, unsupported format \"%s\"', i18nFormat));\r\n    }\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    createFileFromUnknownFormatFileContent(xmlContent, path, encoding, optionalMaster) {\r\n        let formatCandidates = [FORMAT_XLIFF12, FORMAT_XLIFF20, FORMAT_XMB, FORMAT_XTB];\r\n        if (path && path.endsWith('xmb')) {\r\n            formatCandidates = [FORMAT_XMB, FORMAT_XTB, FORMAT_XLIFF12, FORMAT_XLIFF20];\r\n        }\r\n        if (path && path.endsWith('xtb')) {\r\n            formatCandidates = [FORMAT_XTB, FORMAT_XMB, FORMAT_XLIFF12, FORMAT_XLIFF20];\r\n        }\r\n        // try all candidate formats to get the right one\r\n        for (let i = 0; i < formatCandidates.length; i++) {\r\n            const formatCandidate = formatCandidates[i];\r\n            try {\r\n                const translationFile = TranslationMessagesFileFactory.fromFileContent(formatCandidate, xmlContent, path, encoding, optionalMaster);\r\n                if (translationFile) {\r\n                    return translationFile;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // seams to be the wrong format\r\n            }\r\n        }\r\n        throw new Error(format('could not identify file format, it is neiter XLIFF (1.2 or 2.0) nor XMB/XTB'));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff-file.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xmb-file.mjs","util","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff2-file.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xtb-file.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\translation-messages-file-factory.mjs","meta":{},"moduleSideEffects":true,"originalCode":"import { XliffFile } from '../impl/xliff-file';\r\nimport { XmbFile } from '../impl/xmb-file';\r\nimport { format } from 'util';\r\nimport { Xliff2File } from '../impl/xliff2-file';\r\nimport { FORMAT_XLIFF12, FORMAT_XLIFF20, FORMAT_XMB, FORMAT_XTB } from './constants';\r\nimport { XtbFile } from '../impl/xtb-file';\r\n/**\r\n * Helper class to read translation files depending on format.\r\n * This is part of the public api\r\n */\r\nexport class TranslationMessagesFileFactory {\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    static fromFileContent(i18nFormat, xmlContent, path, encoding, optionalMaster) {\r\n        return new TranslationMessagesFileFactory().createFileFromFileContent(i18nFormat, xmlContent, path, encoding, optionalMaster);\r\n    }\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    static fromUnknownFormatFileContent(xmlContent, path, encoding, optionalMaster) {\r\n        return new TranslationMessagesFileFactory().createFileFromUnknownFormatFileContent(xmlContent, path, encoding, optionalMaster);\r\n    }\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    createFileFromFileContent(i18nFormat, xmlContent, path, encoding, optionalMaster) {\r\n        if (i18nFormat === FORMAT_XLIFF12) {\r\n            return new XliffFile(xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XLIFF20) {\r\n            return new Xliff2File(xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XMB) {\r\n            return new XmbFile(this, xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XTB) {\r\n            return new XtbFile(this, xmlContent, path, encoding, optionalMaster);\r\n        }\r\n        throw new Error(format('oops, unsupported format \"%s\"', i18nFormat));\r\n    }\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    createFileFromUnknownFormatFileContent(xmlContent, path, encoding, optionalMaster) {\r\n        let formatCandidates = [FORMAT_XLIFF12, FORMAT_XLIFF20, FORMAT_XMB, FORMAT_XTB];\r\n        if (path && path.endsWith('xmb')) {\r\n            formatCandidates = [FORMAT_XMB, FORMAT_XTB, FORMAT_XLIFF12, FORMAT_XLIFF20];\r\n        }\r\n        if (path && path.endsWith('xtb')) {\r\n            formatCandidates = [FORMAT_XTB, FORMAT_XMB, FORMAT_XLIFF12, FORMAT_XLIFF20];\r\n        }\r\n        // try all candidate formats to get the right one\r\n        for (let i = 0; i < formatCandidates.length; i++) {\r\n            const formatCandidate = formatCandidates[i];\r\n            try {\r\n                const translationFile = TranslationMessagesFileFactory.fromFileContent(formatCandidate, xmlContent, path, encoding, optionalMaster);\r\n                if (translationFile) {\r\n                    return translationFile;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // seams to be the wrong format\r\n            }\r\n        }\r\n        throw new Error(format('could not identify file format, it is neiter XLIFF (1.2 or 2.0) nor XMB/XTB'));\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"translation-messages-file-factory.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/api/translation-messages-file-factory.ts"],"names":[],"mappings":[[[0,0,4,0],[7,0,4,7],[9,0,4,8],[18,0,4,17],[20,0,4,18],[26,0,4,24],[46,0,4,44],[47,0,4,45]],[[0,0,5,0],[7,0,5,7],[9,0,5,8],[16,0,5,15],[18,0,5,16],[24,0,5,22],[42,0,5,40],[43,0,5,41]],[[0,0,6,0],[7,0,6,7],[9,0,6,8],[15,0,6,14],[17,0,6,15],[23,0,6,21],[29,0,6,27],[30,0,6,28]],[[0,0,7,0],[7,0,7,7],[9,0,7,8],[19,0,7,18],[21,0,7,19],[27,0,7,25],[48,0,7,46],[49,0,7,47]],[[0,0,8,0],[7,0,8,7],[9,0,8,8],[23,0,8,22],[25,0,8,24],[39,0,8,38],[41,0,8,40],[51,0,8,50],[53,0,8,52],[63,0,8,62],[65,0,8,63],[71,0,8,69],[84,0,8,82],[85,0,8,83]],[[0,0,9,0],[7,0,9,7],[9,0,9,8],[16,0,9,15],[18,0,9,16],[24,0,9,22],[42,0,9,40],[43,0,9,41]],[[0,0,12,0]],[],[],[[3,0,15,3]],[[0,0,16,0],[6,0,16,6],[13,0,16,13],[43,0,16,43]],[[4,0,18,4]],[],[],[],[],[],[],[],[],[],[],[[7,0,29,7]],[[4,0,30,11],[10,0,30,17],[11,0,30,18],[26,0,30,33],[27,0,30,34],[37,0,30,52],[39,0,31,34],[49,0,31,52],[51,0,32,34],[55,0,32,46],[57,0,33,34],[65,0,33,58],[67,0,34,34],[81,0,34,112]],[[8,0,35,8],[15,0,35,15],[19,0,35,19],[49,0,35,49],[51,0,35,51],[52,0,35,52],[77,0,35,77],[78,0,35,78],[88,0,35,88],[90,0,35,90],[100,0,35,100],[102,0,35,102],[106,0,35,106],[108,0,35,108],[116,0,35,116],[118,0,35,118],[132,0,35,132],[133,0,35,133],[134,0,35,134]],[[4,0,36,4],[5,0,36,5]],[[4,0,38,4]],[],[],[],[],[],[],[],[],[],[],[],[[7,0,50,7]],[[4,0,51,11],[10,0,51,17],[11,0,51,18],[39,0,51,46],[40,0,51,47],[50,0,51,65],[52,0,52,34],[56,0,52,46],[58,0,53,34],[66,0,53,58],[68,0,54,34],[82,0,54,112]],[[8,0,55,8],[15,0,55,15],[19,0,55,19],[49,0,55,49],[51,0,55,51],[52,0,55,52],[90,0,55,90],[91,0,55,91],[101,0,55,101],[103,0,55,103],[107,0,55,107],[109,0,55,109],[117,0,55,117],[119,0,55,119],[133,0,55,133],[134,0,55,134],[135,0,55,135]],[[4,0,56,4],[5,0,56,5]],[[4,0,58,4]],[],[],[],[],[],[],[],[],[],[],[[7,0,69,7]],[[4,0,70,4],[29,0,70,29],[30,0,70,30],[40,0,70,48],[42,0,71,30],[52,0,71,48],[54,0,72,30],[58,0,72,42],[60,0,73,30],[68,0,73,54],[70,0,74,30],[84,0,74,110]],[[8,0,75,8],[12,0,75,12],[22,0,75,22],[27,0,75,27],[41,0,75,41],[43,0,75,43]],[[12,0,76,12],[19,0,76,19],[23,0,76,23],[32,0,76,32],[33,0,76,33],[43,0,76,43],[45,0,76,45],[49,0,76,49],[51,0,76,51],[59,0,76,59],[60,0,76,60],[61,0,76,61]],[[9,0,77,9]],[[8,0,78,8],[12,0,78,12],[22,0,78,22],[27,0,78,27],[41,0,78,41],[43,0,78,43]],[[12,0,79,12],[19,0,79,19],[23,0,79,23],[33,0,79,33],[34,0,79,34],[44,0,79,44],[46,0,79,46],[50,0,79,50],[52,0,79,52],[60,0,79,60],[61,0,79,61],[62,0,79,62]],[[9,0,80,9]],[[8,0,81,8],[12,0,81,12],[22,0,81,22],[27,0,81,27],[37,0,81,37],[39,0,81,39]],[[12,0,82,12],[19,0,82,19],[23,0,82,23],[30,0,82,30],[31,0,82,31],[35,0,82,35],[37,0,82,37],[47,0,82,47],[49,0,82,49],[53,0,82,53],[55,0,82,55],[63,0,82,63],[64,0,82,64],[65,0,82,65]],[[9,0,83,9]],[[8,0,84,8],[12,0,84,12],[22,0,84,22],[27,0,84,27],[37,0,84,37],[39,0,84,39]],[[12,0,85,12],[19,0,85,19],[23,0,85,23],[30,0,85,30],[31,0,85,31],[35,0,85,35],[37,0,85,37],[47,0,85,47],[49,0,85,49],[53,0,85,53],[55,0,85,55],[63,0,85,63],[65,0,85,65],[79,0,85,79],[80,0,85,80],[81,0,85,81]],[[9,0,86,9]],[[8,0,87,8],[14,0,87,14],[18,0,87,18],[23,0,87,23],[24,0,87,24],[30,0,87,30],[31,0,87,31],[62,0,87,62],[64,0,87,64],[74,0,87,74],[75,0,87,75],[76,0,87,76],[77,0,87,77]],[[4,0,89,4],[5,0,89,5]],[[4,0,91,4]],[],[],[],[],[],[],[],[],[],[],[],[[7,0,103,7]],[[4,0,104,4],[42,0,104,42],[43,0,104,43],[53,0,104,61],[55,0,105,43],[59,0,105,55],[61,0,106,43],[69,0,106,67],[71,0,107,43],[85,0,107,123]],[[8,0,109,8],[12,0,109,12],[28,0,109,28],[31,0,109,31],[32,0,109,32],[46,0,109,46],[48,0,109,48],[62,0,109,62],[64,0,109,64],[74,0,109,74],[76,0,109,76],[86,0,109,86],[87,0,109,87],[88,0,109,88]],[[8,0,110,8],[12,0,110,12],[16,0,110,16],[20,0,110,20],[24,0,110,24],[25,0,110,25],[33,0,110,33],[34,0,110,34],[39,0,110,39],[40,0,110,40],[42,0,110,42]],[[12,0,111,12],[28,0,111,28],[31,0,111,31],[32,0,111,32],[42,0,111,42],[44,0,111,44],[54,0,111,54],[56,0,111,56],[70,0,111,70],[72,0,111,72],[86,0,111,86],[87,0,111,87],[88,0,111,88]],[[9,0,112,9]],[[8,0,113,8],[12,0,113,12],[16,0,113,16],[20,0,113,20],[24,0,113,24],[25,0,113,25],[33,0,113,33],[34,0,113,34],[39,0,113,39],[40,0,113,40],[42,0,113,42]],[[12,0,114,12],[28,0,114,28],[31,0,114,31],[32,0,114,32],[42,0,114,42],[44,0,114,44],[54,0,114,54],[56,0,114,56],[70,0,114,70],[72,0,114,72],[86,0,114,86],[87,0,114,87],[88,0,114,88]],[[9,0,115,9]],[[8,0,116,8],[57,0,116,57]],[[8,0,117,8],[13,0,117,13],[17,0,117,17],[18,0,117,18],[21,0,117,21],[22,0,117,22],[24,0,117,24],[25,0,117,25],[28,0,117,28],[44,0,117,44],[45,0,117,45],[51,0,117,51],[53,0,117,53],[54,0,117,54],[56,0,117,56],[58,0,117,58]],[[12,0,118,12],[18,0,118,18],[33,0,118,33],[36,0,118,36],[52,0,118,52],[53,0,118,53],[54,0,118,54],[55,0,118,55],[56,0,118,56]],[[12,0,119,12],[16,0,119,16]],[[16,0,120,16],[22,0,120,22],[37,0,120,37],[40,0,120,40],[70,0,120,70],[71,0,120,71],[86,0,120,86],[87,0,121,20],[102,0,121,35],[104,0,121,37],[114,0,121,47],[116,0,121,49],[120,0,121,53],[122,0,121,55],[130,0,121,63],[132,0,121,65],[146,0,121,79],[147,0,121,80],[148,0,121,81]],[[16,0,122,16],[20,0,122,20],[35,0,122,35],[37,0,122,37]],[[20,0,123,20],[27,0,123,27],[42,0,123,42],[43,0,123,43]],[[17,0,124,17]],[[13,0,125,13]],[[12,0,125,14],[19,0,125,21],[20,0,125,22],[22,0,125,24]],[[16,0,126,16],[47,0,126,47]],[[13,0,127,13]],[[9,0,128,9]],[[8,0,129,8],[14,0,129,14],[18,0,129,18],[23,0,129,23],[24,0,129,24],[30,0,129,30],[31,0,129,31],[108,0,129,108],[109,0,129,109],[110,0,129,110],[111,0,129,111]],[[4,0,130,4],[5,0,130,5]],[[1,0,132,1]]],"sourcesContent":["/**\r\n * Created by roobm on 21.03.2017.\r\n */\r\nimport {ITranslationMessagesFile} from './i-translation-messages-file';\r\nimport {XliffFile} from '../impl/xliff-file';\r\nimport {XmbFile} from '../impl/xmb-file';\r\nimport {format} from 'util';\r\nimport {Xliff2File} from '../impl/xliff2-file';\r\nimport {FORMAT_XLIFF12, FORMAT_XLIFF20, FORMAT_XMB, FORMAT_XTB} from './constants';\r\nimport {XtbFile} from '../impl/xtb-file';\r\nimport {ITranslationMessagesFileFactory} from './i-translation-messages-file-factory';\r\n\r\n/**\r\n * Helper class to read translation files depending on format.\r\n * This is part of the public api\r\n */\r\nexport class TranslationMessagesFileFactory implements ITranslationMessagesFileFactory {\r\n\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    public static fromFileContent(i18nFormat: string,\r\n                                  xmlContent: string,\r\n                                  path: string,\r\n                                  encoding: BufferEncoding ,\r\n                                  optionalMaster?: {xmlContent: string, path: string, encoding: BufferEncoding }): ITranslationMessagesFile {\r\n        return new TranslationMessagesFileFactory().createFileFromFileContent(i18nFormat, xmlContent, path, encoding, optionalMaster);\r\n    }\r\n\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    public static fromUnknownFormatFileContent(xmlContent: string,\r\n                                  path: string,\r\n                                  encoding: BufferEncoding ,\r\n                                  optionalMaster?: {xmlContent: string, path: string, encoding: BufferEncoding }): ITranslationMessagesFile {\r\n        return new TranslationMessagesFileFactory().createFileFromUnknownFormatFileContent(xmlContent, path, encoding, optionalMaster);\r\n    }\r\n\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    createFileFromFileContent(i18nFormat: string,\r\n                              xmlContent: string,\r\n                              path: string,\r\n                              encoding: BufferEncoding ,\r\n                              optionalMaster?: { xmlContent: string, path: string, encoding: BufferEncoding  }): ITranslationMessagesFile {\r\n        if (i18nFormat === FORMAT_XLIFF12) {\r\n            return new XliffFile(xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XLIFF20) {\r\n            return new Xliff2File(xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XMB) {\r\n            return new XmbFile(this, xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XTB) {\r\n            return new XtbFile(this, xmlContent, path, encoding, optionalMaster);\r\n        }\r\n        throw new Error(format('oops, unsupported format \"%s\"', i18nFormat));\r\n\r\n    }\r\n\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    createFileFromUnknownFormatFileContent(xmlContent: string,\r\n                                           path: string,\r\n                                           encoding: BufferEncoding ,\r\n                                           optionalMaster?: { xmlContent: string, path: string, encoding: BufferEncoding  })\r\n        : ITranslationMessagesFile {\r\n        let formatCandidates = [FORMAT_XLIFF12, FORMAT_XLIFF20, FORMAT_XMB, FORMAT_XTB];\r\n        if (path && path.endsWith('xmb')) {\r\n            formatCandidates = [FORMAT_XMB, FORMAT_XTB, FORMAT_XLIFF12, FORMAT_XLIFF20];\r\n        }\r\n        if (path && path.endsWith('xtb')) {\r\n            formatCandidates = [FORMAT_XTB, FORMAT_XMB, FORMAT_XLIFF12, FORMAT_XLIFF20];\r\n        }\r\n        // try all candidate formats to get the right one\r\n        for (let i = 0; i < formatCandidates.length; i++) {\r\n            const formatCandidate = formatCandidates[i];\r\n            try {\r\n                const translationFile = TranslationMessagesFileFactory.fromFileContent(\r\n                    formatCandidate, xmlContent, path, encoding, optionalMaster);\r\n                if (translationFile) {\r\n                    return translationFile;\r\n                }\r\n            } catch (e) {\r\n                // seams to be the wrong format\r\n            }\r\n        }\r\n        throw new Error(format('could not identify file format, it is neiter XLIFF (1.2 or 2.0) nor XMB/XTB'));\r\n    }\r\n\r\n}\r\n\r\n"]},"resolvedIds":{"util":{"external":true,"id":"util","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./constants":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../impl/xliff-file":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff-file.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../impl/xmb-file":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xmb-file.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../impl/xliff2-file":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xliff2-file.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"../impl/xtb-file":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\impl\\xtb-file.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1192,"body":[{"type":"ExportAllDeclaration","start":0,"end":33,"exported":null,"source":{"type":"Literal","start":14,"end":32,"value":"../api/constants","raw":"'../api/constants'"}},{"type":"ExportNamedDeclaration","start":35,"end":120,"declaration":null,"specifiers":[{"type":"ExportSpecifier","start":44,"end":74,"local":{"type":"Identifier","start":44,"end":74,"name":"TranslationMessagesFileFactory"},"exported":{"type":"Identifier","start":44,"end":74,"name":"TranslationMessagesFileFactory"}}],"source":{"type":"Literal","start":82,"end":119,"value":"./translation-messages-file-factory","raw":"'./translation-messages-file-factory'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9hcGkvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBUUEsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxPQUFPLEVBQUMsOEJBQThCLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAxOS4wMy4yMDE3LlxyXG4gKi9cclxuZXhwb3J0IHtJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGV9IGZyb20gJy4uL2FwaS9pLXRyYW5zbGF0aW9uLW1lc3NhZ2VzLWZpbGUnO1xyXG5leHBvcnQge0lUcmFuc1VuaXR9IGZyb20gJy4uL2FwaS9pLXRyYW5zLXVuaXQnO1xyXG5leHBvcnQge0lOb3JtYWxpemVkTWVzc2FnZSwgVmFsaWRhdGlvbkVycm9yc30gZnJvbSAnLi4vYXBpL2ktbm9ybWFsaXplZC1tZXNzYWdlJztcclxuZXhwb3J0IHtJSUNVTWVzc2FnZSwgSUlDVU1lc3NhZ2VDYXRlZ29yeSwgSUlDVU1lc3NhZ2VUcmFuc2xhdGlvbn0gZnJvbSAnLi4vYXBpL2ktaWN1LW1lc3NhZ2UnO1xyXG5leHBvcnQge0lOb3RlfSBmcm9tICcuLi9hcGkvaS1ub3RlJztcclxuZXhwb3J0ICogZnJvbSAnLi4vYXBpL2NvbnN0YW50cyc7XHJcbmV4cG9ydCB7VHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVGYWN0b3J5fSBmcm9tICcuL3RyYW5zbGF0aW9uLW1lc3NhZ2VzLWZpbGUtZmFjdG9yeSc7XHJcbiJdfQ==","start":122,"end":1192}]},"code":"export * from '../api/constants';\r\nexport { TranslationMessagesFileFactory } from './translation-messages-file-factory';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9hcGkvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBUUEsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxPQUFPLEVBQUMsOEJBQThCLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAxOS4wMy4yMDE3LlxyXG4gKi9cclxuZXhwb3J0IHtJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGV9IGZyb20gJy4uL2FwaS9pLXRyYW5zbGF0aW9uLW1lc3NhZ2VzLWZpbGUnO1xyXG5leHBvcnQge0lUcmFuc1VuaXR9IGZyb20gJy4uL2FwaS9pLXRyYW5zLXVuaXQnO1xyXG5leHBvcnQge0lOb3JtYWxpemVkTWVzc2FnZSwgVmFsaWRhdGlvbkVycm9yc30gZnJvbSAnLi4vYXBpL2ktbm9ybWFsaXplZC1tZXNzYWdlJztcclxuZXhwb3J0IHtJSUNVTWVzc2FnZSwgSUlDVU1lc3NhZ2VDYXRlZ29yeSwgSUlDVU1lc3NhZ2VUcmFuc2xhdGlvbn0gZnJvbSAnLi4vYXBpL2ktaWN1LW1lc3NhZ2UnO1xyXG5leHBvcnQge0lOb3RlfSBmcm9tICcuLi9hcGkvaS1ub3RlJztcclxuZXhwb3J0ICogZnJvbSAnLi4vYXBpL2NvbnN0YW50cyc7XHJcbmV4cG9ydCB7VHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVGYWN0b3J5fSBmcm9tICcuL3RyYW5zbGF0aW9uLW1lc3NhZ2VzLWZpbGUtZmFjdG9yeSc7XHJcbiJdfQ==","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\translation-messages-file-factory.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\index.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export * from '../api/constants';\r\nexport { TranslationMessagesFileFactory } from './translation-messages-file-factory';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9hcGkvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBUUEsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxPQUFPLEVBQUMsOEJBQThCLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAxOS4wMy4yMDE3LlxyXG4gKi9cclxuZXhwb3J0IHtJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGV9IGZyb20gJy4uL2FwaS9pLXRyYW5zbGF0aW9uLW1lc3NhZ2VzLWZpbGUnO1xyXG5leHBvcnQge0lUcmFuc1VuaXR9IGZyb20gJy4uL2FwaS9pLXRyYW5zLXVuaXQnO1xyXG5leHBvcnQge0lOb3JtYWxpemVkTWVzc2FnZSwgVmFsaWRhdGlvbkVycm9yc30gZnJvbSAnLi4vYXBpL2ktbm9ybWFsaXplZC1tZXNzYWdlJztcclxuZXhwb3J0IHtJSUNVTWVzc2FnZSwgSUlDVU1lc3NhZ2VDYXRlZ29yeSwgSUlDVU1lc3NhZ2VUcmFuc2xhdGlvbn0gZnJvbSAnLi4vYXBpL2ktaWN1LW1lc3NhZ2UnO1xyXG5leHBvcnQge0lOb3RlfSBmcm9tICcuLi9hcGkvaS1ub3RlJztcclxuZXhwb3J0ICogZnJvbSAnLi4vYXBpL2NvbnN0YW50cyc7XHJcbmV4cG9ydCB7VHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVGYWN0b3J5fSBmcm9tICcuL3RyYW5zbGF0aW9uLW1lc3NhZ2VzLWZpbGUtZmFjdG9yeSc7XHJcbiJdfQ==","originalSourcemap":{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/api/index.ts"],"names":[],"mappings":[[[0,0,8,0],[14,0,8,14],[32,0,8,32],[33,0,8,33]],[[0,0,9,0],[7,0,9,7],[9,0,9,8],[39,0,9,38],[41,0,9,39],[47,0,9,45],[84,0,9,82],[85,0,9,83]]],"sourcesContent":["/**\r\n * Created by martin on 19.03.2017.\r\n */\r\nexport {ITranslationMessagesFile} from '../api/i-translation-messages-file';\r\nexport {ITransUnit} from '../api/i-trans-unit';\r\nexport {INormalizedMessage, ValidationErrors} from '../api/i-normalized-message';\r\nexport {IICUMessage, IICUMessageCategory, IICUMessageTranslation} from '../api/i-icu-message';\r\nexport {INote} from '../api/i-note';\r\nexport * from '../api/constants';\r\nexport {TranslationMessagesFileFactory} from './translation-messages-file-factory';\r\n"]},"resolvedIds":{"../api/constants":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\constants.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./translation-messages-file-factory":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\translation-messages-file-factory.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":820,"body":[{"type":"ExportAllDeclaration","start":111,"end":160,"exported":null,"source":{"type":"Literal","start":125,"end":159,"value":"./lib/ngx-i18nsupport-lib.module","raw":"'./lib/ngx-i18nsupport-lib.module'"}},{"type":"ExportAllDeclaration","start":162,"end":184,"exported":null,"source":{"type":"Literal","start":176,"end":183,"value":"./api","raw":"'./api'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL25neC1pMThuc3VwcG9ydC1saWIvc3JjL3B1YmxpY19hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxzREFBc0Q7QUFDdEQsY0FBYyxrQ0FBa0MsQ0FBQztBQUNqRCxjQUFjLE9BQU8sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiBuZ3gtaTE4bnN1cHBvcnQtbGliXHJcbiAqL1xyXG5cclxuLy8gVGhlIG1vZHVsZSBpcyBoZXJlIG9ubHkgYmVjYXVzZSBuZy1wYWNrYWdyIG5lZWRzIGl0XHJcbmV4cG9ydCAqIGZyb20gJy4vbGliL25neC1pMThuc3VwcG9ydC1saWIubW9kdWxlJztcclxuZXhwb3J0ICogZnJvbSAnLi9hcGknO1xyXG4iXX0=","start":186,"end":820}]},"code":"/*\r\n * Public API Surface of ngx-i18nsupport-lib\r\n */\r\n// The module is here only because ng-packagr needs it\r\nexport * from './lib/ngx-i18nsupport-lib.module';\r\nexport * from './api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL25neC1pMThuc3VwcG9ydC1saWIvc3JjL3B1YmxpY19hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxzREFBc0Q7QUFDdEQsY0FBYyxrQ0FBa0MsQ0FBQztBQUNqRCxjQUFjLE9BQU8sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiBuZ3gtaTE4bnN1cHBvcnQtbGliXHJcbiAqL1xyXG5cclxuLy8gVGhlIG1vZHVsZSBpcyBoZXJlIG9ubHkgYmVjYXVzZSBuZy1wYWNrYWdyIG5lZWRzIGl0XHJcbmV4cG9ydCAqIGZyb20gJy4vbGliL25neC1pMThuc3VwcG9ydC1saWIubW9kdWxlJztcclxuZXhwb3J0ICogZnJvbSAnLi9hcGknO1xyXG4iXX0=","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\lib\\ngx-i18nsupport-lib.module.mjs","D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\index.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\public_api.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/*\r\n * Public API Surface of ngx-i18nsupport-lib\r\n */\r\n// The module is here only because ng-packagr needs it\r\nexport * from './lib/ngx-i18nsupport-lib.module';\r\nexport * from './api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL25neC1pMThuc3VwcG9ydC1saWIvc3JjL3B1YmxpY19hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxzREFBc0Q7QUFDdEQsY0FBYyxrQ0FBa0MsQ0FBQztBQUNqRCxjQUFjLE9BQU8sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiBuZ3gtaTE4bnN1cHBvcnQtbGliXHJcbiAqL1xyXG5cclxuLy8gVGhlIG1vZHVsZSBpcyBoZXJlIG9ubHkgYmVjYXVzZSBuZy1wYWNrYWdyIG5lZWRzIGl0XHJcbmV4cG9ydCAqIGZyb20gJy4vbGliL25neC1pMThuc3VwcG9ydC1saWIubW9kdWxlJztcclxuZXhwb3J0ICogZnJvbSAnLi9hcGknO1xyXG4iXX0=","originalSourcemap":{"version":3,"file":"public_api.js","sourceRoot":"","sources":["../../../projects/ngx-i18nsupport-lib/src/public_api.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[54,0,4,54]],[[0,0,5,0],[14,0,5,14],[48,0,5,48],[49,0,5,49]],[[0,0,6,0],[14,0,6,14],[21,0,6,21],[22,0,6,22]]],"sourcesContent":["/*\r\n * Public API Surface of ngx-i18nsupport-lib\r\n */\r\n\r\n// The module is here only because ng-packagr needs it\r\nexport * from './lib/ngx-i18nsupport-lib.module';\r\nexport * from './api';\r\n"]},"resolvedIds":{"./lib/ngx-i18nsupport-lib.module":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\lib\\ngx-i18nsupport-lib.module.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"./api":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\api\\index.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":576,"body":[{"type":"ExportAllDeclaration","start":51,"end":80,"exported":null,"source":{"type":"Literal","start":65,"end":79,"value":"./public_api","raw":"'./public_api'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWkxOG5zdXBwb3J0LW5neC1pMThuc3VwcG9ydC1saWIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9uZ3gtaTE4bnN1cHBvcnQtbmd4LWkxOG5zdXBwb3J0LWxpYi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUVILGNBQWMsY0FBYyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZW5lcmF0ZWQgYnVuZGxlIGluZGV4LiBEbyBub3QgZWRpdC5cbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL3B1YmxpY19hcGknO1xuIl19","start":82,"end":576}]},"code":"/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public_api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWkxOG5zdXBwb3J0LW5neC1pMThuc3VwcG9ydC1saWIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9uZ3gtaTE4bnN1cHBvcnQtbmd4LWkxOG5zdXBwb3J0LWxpYi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUVILGNBQWMsY0FBYyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZW5lcmF0ZWQgYnVuZGxlIGluZGV4LiBEbyBub3QgZWRpdC5cbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL3B1YmxpY19hcGknO1xuIl19","customTransformCache":false,"dependencies":["D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\public_api.mjs"],"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\ngx-i18nsupport-ngx-i18nsupport-lib.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport * from './public_api';\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWkxOG5zdXBwb3J0LW5neC1pMThuc3VwcG9ydC1saWIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaTE4bnN1cHBvcnQtbGliL3NyYy9uZ3gtaTE4bnN1cHBvcnQtbmd4LWkxOG5zdXBwb3J0LWxpYi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUVILGNBQWMsY0FBYyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZW5lcmF0ZWQgYnVuZGxlIGluZGV4LiBEbyBub3QgZWRpdC5cbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL3B1YmxpY19hcGknO1xuIl19","originalSourcemap":{"version":3,"file":"ngx-i18nsupport-ngx-i18nsupport-lib.js","sourceRoot":"","sources":["../../../projects/ngx-i18nsupport-lib/src/ngx-i18nsupport-ngx-i18nsupport-lib.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[14,0,4,14],[28,0,4,28],[29,0,4,29]]],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"resolvedIds":{"./public_api":{"external":false,"id":"D:\\git\\ngx-i18nsupport\\dist\\ngx-i18nsupport-lib\\esm2020\\public_api.mjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]}],"plugins":{"node-resolve":{},"sourcemaps":{},"json":{}}}